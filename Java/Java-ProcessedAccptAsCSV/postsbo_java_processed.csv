"1splitHere46","9405891splitHere46","google\.com$"
"2splitHere46","9405891splitHere46","$"
"3splitHere46","9405891splitHere46","Pattern p = Pattern.compile(<doubleQuotes46>google\\.com$<doubleQuotes46>);//I want to know the right format<newline46mondego><newline46mondego>String input2 = <doubleQuotes46>mail.google.com.co.uk<doubleQuotes46>;<newline46mondego><newline46mondego>Matcher m2 = p.matcher(input2);<newline46mondego><newline46mondego><newline46mondego>boolean found2 = m2.find();<newline46mondego>System.out.println(found2);<newline46mondego>"
"4splitHere46","9405891splitHere46","false"
"5splitHere46","9406049splitHere46","<T>"
"6splitHere46","9406049splitHere46","java.lang.Class"
"7splitHere46","9406049splitHere46","Class"
"8splitHere46","9406049splitHere46","<T>"
"9splitHere46","9406049splitHere46","T instance = myClass.newInstance();<newline46mondego>"
"10splitHere46","9406049splitHere46","<T>"
"11splitHere46","9406049splitHere46","Class<T>"
"12splitHere46","9406049splitHere46","T"
"13splitHere46","9406049splitHere46","T"
"14splitHere46","9406049splitHere46","java.lang.Object"
"15splitHere46","9406049splitHere46","<T>"
"16splitHere46","9406049splitHere46","Class<T>"
"17splitHere46","9406049splitHere46","public static <T> Collection<T> select(Class<T> c, String sqlStatement) {<newline46mondego>    Collection<T> result = new ArrayList<T>();<newline46mondego>    /* run sql query using jdbc */<newline46mondego>    for ( /* iterate over jdbc results */ ) {<newline46mondego>        T item = c.newInstance();<newline46mondego>        /* use reï¬‚ection and set all of itemâ€™s ï¬?elds from sql results */<newline46mondego>        result.add(item);<newline46mondego>    }<newline46mondego>    return result;<newline46mondego>}<newline46mondego>"
"18splitHere46","9406049splitHere46","java.lang.Object"
"19splitHere46","9406049splitHere46","Class<T>"
"20splitHere46","9406049splitHere46","select"
"21splitHere46","9406049splitHere46","newInstance"
"22splitHere46","9406049splitHere46","<T>"
"23splitHere46","9406461splitHere46","getDouble"
"24splitHere46","9406461splitHere46","getInt"
"25splitHere46","9406461splitHere46","nextXXX"
"26splitHere46","9406461splitHere46","Scanner sc = new Scanner (System.in);<newline46mondego>double d = sc.nextDouble();<newline46mondego>"
"27splitHere46","9406461splitHere46","import java.util.Scanner;<newline46mondego>class Test {<newline46mondego>    public static void main (String args[]) {<newline46mondego>        Scanner sc = new Scanner (System.in);<newline46mondego><newline46mondego>        System.out.print(<doubleQuotes46>Enter your double: <doubleQuotes46>);<newline46mondego>        double d = sc.nextDouble();<newline46mondego><newline46mondego>        System.out.print(<doubleQuotes46>Enter your integer: <doubleQuotes46>);<newline46mondego>        int i = sc.nextInt();<newline46mondego><newline46mondego>        System.out.println(<doubleQuotes46>You entered:  <doubleQuotes46> + d + <doubleQuotes46> and <doubleQuotes46> + i);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"28splitHere46","9406461splitHere46","Enter your double: 3.14159<newline46mondego>Enter your integer: 42<newline46mondego>You entered:  3.14159 and 42<newline46mondego>"
"29splitHere46","9406461splitHere46","print"
"30splitHere46","9406461splitHere46","nextXXX"
"31splitHere46","9406461splitHere46","double loanAmount = getDoubleWithinRange(sc, <doubleQuotes46>Enter loan amount: <doubleQuotes46>, 0.0, 1000000.0)<newline46mondego>"
"32splitHere46","9406461splitHere46","public static double getDoubleWithinRange(<newline46mondego>    Scanner sc, String prompt, double min, double max)<newline46mondego>"
"33splitHere46","9406461splitHere46","d = getDouble(sc, prompt);"
"34splitHere46","9406461splitHere46","System.out.print(prompt);<newline46mondego>double d = sc.nextDouble();<newline46mondego>"
"35splitHere46","9406461splitHere46","0"
"36splitHere46","9406461splitHere46","100K"
"37splitHere46","9406461splitHere46","System.out.println(<doubleQuotes46>Error! Number must be greater tha 0.0<doubleQuotes46>);<newline46mondego>"
"38splitHere46","9406461splitHere46","System.out.println(<doubleQuotes46>Error! Number must be greater than <doubleQuotes46> + min);<newline46mondego>"
"39splitHere46","9406461splitHere46","min"
"40splitHere46","9406461splitHere46","max"
"41splitHere46","9406575splitHere46","finally"
"42splitHere46","9406575splitHere46","try"
"43splitHere46","9406768splitHere46","try {<newline46mondego>    in.readLine();<newline46mondego>} catch (Exception e) {<newline46mondego>}<newline46mondego><newline46mondego>String fromUser = clientArea.getText();<newline46mondego><newline46mondego>try {<newline46mondego>    fromUser = in.readLine();<newline46mondego>} catch (IOException e) {<newline46mondego>    e.printStackTrace();<newline46mondego>}<newline46mondego><newline46mondego>serverArea.setText(fromUser);<newline46mondego>"
"44splitHere46","9406768splitHere46","in.readLine()"
"45splitHere46","9406768splitHere46","Socket"
"46splitHere46","9406768splitHere46","SwingWorker"
"47splitHere46","9406768splitHere46","SwingWorker"
"48splitHere46","9406768splitHere46","Exception"
"49splitHere46","9406788splitHere46","public String toString() {<newline46mondego>  StringBuilder builder = new StringBuilder();<newline46mondego>  builder.append(<doubleQuotes46>Weekly Hours:   <doubleQuotes46> + getWeeklyHours()));<newline46mondego>  for(int i = 0; i < NUMDAYS; i++ ) {<newline46mondego>    builder.append(<doubleQuotes46>        Day <doubleQuotes46>  + (i + 1) + <doubleQuotes46>: <doubleQuotes46> + getHoursByDay(i)));<newline46mondego>  }<newline46mondego>  return builder.toString();<newline46mondego>}<newline46mondego>"
"50splitHere46","9406807splitHere46","private static int[] data = File1.dataArray;<newline46mondego>"
"51splitHere46","9406807splitHere46","public class File1<newline46mondego> {<newline46mondego>    public static int[] dataArray = new int[100]; <newline46mondego><newline46mondego>    static  <newline46mondego>     {<newline46mondego>  for (int i=0; i<100; i++)<newline46mondego>    {<newline46mondego>     dataArray[i] = i;<newline46mondego>    }<newline46mondego>     }<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>public class File2<newline46mondego> {<newline46mondego>   private static int[] data = File1.dataArray; // makes <doubleQuotes46>data<doubleQuotes46> refer to the SAME array as File1.dataArray<newline46mondego><newline46mondego>   public static void main(String[] args)<newline46mondego>    {<newline46mondego>  File2 file2 = new File2();<newline46mondego><newline46mondego>      file2.data[20] = -567;  // this changes File1.dataArray also!<newline46mondego><newline46mondego>      System.out.println(File1.dataArray[20]); // prints -567<newline46mondego>    } <newline46mondego> }<newline46mondego>"
"52splitHere46","9406807splitHere46","private static int[] data = new int[File1.dataArray.length];<newline46mondego><newline46mondego> static<newline46mondego>  {   <newline46mondego>    for(int i = 0; i < File1.dataArray.length; i++)<newline46mondego> {<newline46mondego>    data[i] = File1.dataArray[i];   <newline46mondego> }<newline46mondego>  }<newline46mondego>"
"53splitHere46","9407624splitHere46","HttpServletRequest"
"54splitHere46","9407624splitHere46","getRemoteUser()"
"55splitHere46","9407624splitHere46","getUserPrincipal()"
"56splitHere46","9407684splitHere46","user[userIndex]<newline46mondego>"
"57splitHere46","9407684splitHere46","user[userIndex] = new User(id);<newline46mondego>"
"58splitHere46","9407684splitHere46","user[userIndex].accountID = whatever;<newline46mondego>"
"59splitHere46","9407684splitHere46","static void setAccountID(User user[], int userIndex, int accountNum)<newline46mondego>{       <newline46mondego>   user[userIndex].accountID = accountNum;<newline46mondego>}<newline46mondego>"
"60splitHere46","9407684splitHere46","void setAccountID(int accountNum)<newline46mondego>{       <newline46mondego>   this.accountID = accountNum;<newline46mondego>}<newline46mondego>"
"61splitHere46","9407684splitHere46","user[userIndex].setAccountID(accountNum);<newline46mondego>"
"62splitHere46","9407704splitHere46","String strFilePath = <doubleQuotes46>d:/FileIO.txt<doubleQuotes46>;<newline46mondego><newline46mondego> try<newline46mondego> {<newline46mondego>  FileOutputStream fos = new FileOutputStream(strFilePath);<newline46mondego>  String strContent = <doubleQuotes46>Write File using Java FileOutputStream example !<doubleQuotes46>;<newline46mondego><newline46mondego>  /*<newline46mondego>   * To write byte array to a file, use<newline46mondego>   * void write(byte[] bArray) method of Java FileOutputStream class.<newline46mondego>   *<newline46mondego>   * This method writes given byte array to a file.<newline46mondego>   */<newline46mondego><newline46mondego>   fos.write(strContent.getBytes());<newline46mondego><newline46mondego>  /*<newline46mondego>   * Close FileOutputStream using,<newline46mondego>   * void close() method of Java FileOutputStream class.<newline46mondego>   *<newline46mondego>   */<newline46mondego><newline46mondego>   fos.close();<newline46mondego><newline46mondego> }<newline46mondego> catch(FileNotFoundException ex)<newline46mondego> {<newline46mondego>  System.out.println(<doubleQuotes46>FileNotFoundException : <doubleQuotes46> + ex);<newline46mondego> }<newline46mondego> catch(IOException ioe)<newline46mondego> {<newline46mondego>  System.out.println(<doubleQuotes46>IOException : <doubleQuotes46> + ioe);<newline46mondego> }<newline46mondego>"
"63splitHere46","9407751splitHere46","<jsp:useBean id=<doubleQuotes46>emp<doubleQuotes46> class=<doubleQuotes46>bean.Employees<doubleQuotes46>/><newline46mondego>"
"64splitHere46","9407751splitHere46","<jsp:getProperty name=<doubleQuotes46>emp<doubleQuotes46> property=<doubleQuotes46>firstName<doubleQuotes46>/> <newline46mondego>"
"65splitHere46","9407856splitHere46","ArrayList<ArrayList> arrList2D = new ArrayList<ArrayList>(2);<newline46mondego><newline46mondego>arrList2D.add(new ArrayList());<newline46mondego>arrList2D.add(new ArrayList());<newline46mondego>"
"66splitHere46","9407856splitHere46","arrList2D"
"67splitHere46","9407916splitHere46","new SomeTask(0).execute();<newline46mondego><newline46mondego>/** Inner class for implementing progress bar before fetching data **/<newline46mondego>private class SomeTask extends AsyncTask<Void, Void, Integer> <newline46mondego>{<newline46mondego>    private ProgressDialog Dialog = new ProgressDialog(yourActivityClass.this);<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void onPreExecute()<newline46mondego>    {<newline46mondego>        Dialog.setMessage(<doubleQuotes46>Doing something...<doubleQuotes46>);<newline46mondego>        Dialog.show();<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected Integer doInBackground(Void... params) <newline46mondego>    {<newline46mondego>        //Task for doing something <newline46mondego><newline46mondego>        return 0;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void onPostExecute(Integer result)<newline46mondego>    {<newline46mondego><newline46mondego>        if(result==0)<newline46mondego>        {<newline46mondego>             //do some thing<newline46mondego>        }<newline46mondego>        // after completed finished the progressbar<newline46mondego>        Dialog.dismiss();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"68splitHere46","9407983splitHere46","(childCount == 0) ? 100 : null;<newline46mondego>"
"69splitHere46","9407983splitHere46","valueOf"
"70splitHere46","9407983splitHere46","null"
"71splitHere46","9407983splitHere46","int roomCode = new Integer(null);<newline46mondego>"
"72splitHere46","9408013splitHere46","#{conditionalMessage truth:'Has stuff' lies:'Has nothing' condition:shopcart.cartItems.size() == 0 /}<newline46mondego>"
"73splitHere46","9408013splitHere46","#{if _condition}<newline46mondego>    ${_truth}<newline46mondego>#{/if}<newline46mondego>#{else}<newline46mondego>    ${_lies}<newline46mondego>#{/else}<newline46mondego>"
"74splitHere46","9408094splitHere46","numClients = 2500"
"75splitHere46","9408144splitHere46","long[]"
"76splitHere46","9408144splitHere46","AtomicLongArray copy = new AtomicLongArray(original.length());<newline46mondego>for (int i = 0; i < copy.length(); i++)<newline46mondego>{<newline46mondego>    copy.set(i, original.get(i));<newline46mondego>}<newline46mondego>"
"77splitHere46","9408144splitHere46","AtomicLongArray"
"78splitHere46","9408212splitHere46","System.out.println"
"79splitHere46","9408212splitHere46","System.out.println(1);<newline46mondego>    System.out.println(2);<newline46mondego>    System.out.println(3);<newline46mondego>    System.out.println(4);<newline46mondego>    System.out.println(5);<newline46mondego>    System.out.println(6);<newline46mondego>    System.out.println(7);<newline46mondego>    System.out.println(8);<newline46mondego>    System.out.println(9);<newline46mondego>    System.out.println(10);<newline46mondego>"
"80splitHere46","9408212splitHere46","public void recursiveMe(int n) {<newline46mondego>    if(n <= 10) {// 10 is the max limit<newline46mondego>        System.out.println(n);//print n<newline46mondego>        recursiveMe(n+1);//call recursiveMe with n=n+1<newline46mondego>    }<newline46mondego>}<newline46mondego>recursiveMe(1); // call the function with 1.<newline46mondego>"
"81splitHere46","9408256splitHere46","public void someMethod(){<newline46mondego><newline46mondego>  LocalObject localObject = new LocalObject();<newline46mondego><newline46mondego>  localObject.callMethod();<newline46mondego>  method2(localObject);<newline46mondego>}<newline46mondego><newline46mondego>public void method2(LocalObject localObject){<newline46mondego>  localObject.setValue(<doubleQuotes46>value<doubleQuotes46>);<newline46mondego>} <newline46mondego>"
"82splitHere46","9408273splitHere46","java -Dapp.data=<doubleQuotes46>%APPDATA%<doubleQuotes46> ...<newline46mondego>"
"83splitHere46","9408273splitHere46","log4j.appender.A2.File=${app.data}/mylog.log<newline46mondego>"
"84splitHere46","9408411splitHere46","ArrayAdapter"
"85splitHere46","9408411splitHere46","String"
"86splitHere46","9408411splitHere46","Receipt"
"87splitHere46","9408411splitHere46","Receipt"
"88splitHere46","9408411splitHere46","ArrayAdapter"
"89splitHere46","9408411splitHere46","Receipt"
"90splitHere46","9408411splitHere46","getView()"
"91splitHere46","9408411splitHere46","ArrayAdapter"
"92splitHere46","9408412splitHere46","enum"
"93splitHere46","9408533splitHere46","public static void recurse(){<newline46mondego>    recurse();<newline46mondego>}<newline46mondego>"
"94splitHere46","9408533splitHere46","public static void recurse(){<newline46mondego>    recurse();<newline46mondego>    System.out.println(<doubleQuotes46>finished recursing<doubleQuotes46>)<newline46mondego>}<newline46mondego>"
"95splitHere46","9409052splitHere46","HttpSession.getAttribute"
"96splitHere46","9409209splitHere46","CarAutoPilot"
"97splitHere46","9409209splitHere46","hasGotExternalDevicesAttached()"
"98splitHere46","9409209splitHere46","CarAutoPilot cap = new CarAutoPilot() {<newline46mondego>    public boolean hasGotExternalDevicesAttached(){<newline46mondego>        // return true or false depending on what you want to test<newline46mondego>    }<newline46mondego>};<newline46mondego>"
"99splitHere46","9409209splitHere46","CarAutoPilot"
"100splitHere46","9409285splitHere46","View"
"101splitHere46","9409285splitHere46","GridOverLayView"
"102splitHere46","9409285splitHere46","onDraw()"
"103splitHere46","9409285splitHere46","Activity"
"104splitHere46","9409285splitHere46","static final int SNAP_GRID_INTERVAL = 20;<newline46mondego>"
"105splitHere46","9409285splitHere46","event.getAction()==MotionEvent.ACTION_MOVE"
"106splitHere46","9409285splitHere46","OnTouchListener"
"107splitHere46","9409285splitHere46","RelativeLayout.LayoutParams par = (RelativeLayout.LayoutParams) mThingBeingDragged.getLayoutParams();<newline46mondego>par.topMargin = Math.round((event.getRawY() - draggedInitialY)   / SNAP_GRID_INTERVAL ) * SNAP_GRID_INTERVAL;  <newline46mondego>par.leftMargin = Math.round((event.getRawX() - draggedInitialX)  / SNAP_GRID_INTERVAL ) * SNAP_GRID_INTERVAL;<newline46mondego>mThingBeingDragged.setLayoutParams(par);<newline46mondego>"
"108splitHere46","9409285splitHere46","draggedInitialY"
"109splitHere46","9409285splitHere46","draggedInitialX"
"110splitHere46","9409285splitHere46","MotionEvent.ACTION_DOWN"
"111splitHere46","9409285splitHere46",".ACTION_UP"
"112splitHere46","9409405splitHere46","frame.getInsets.top()"
"113splitHere46","9409405splitHere46","frame.getInsets().left"
"114splitHere46","9409497splitHere46","import javax.swing.*;<newline46mondego>import java.awt.*;<newline46mondego>import java.awt.event.ActionEvent;<newline46mondego>import java.awt.event.ActionListener;<newline46mondego>import java.awt.geom.*;<newline46mondego>import java.util.ArrayList;<newline46mondego><newline46mondego>public class PathIteratorTest {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        JFrame frame = new JFrame(<doubleQuotes46>FlatteningPathIterator test<doubleQuotes46>);<newline46mondego>        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        Shape s=new Ellipse2D.Float(10,10,200,100);<newline46mondego>        PaintPanel app = new PaintPanel(s);<newline46mondego>        JScrollPane scroll = new JScrollPane(app);<newline46mondego>        frame.getContentPane().add(scroll);<newline46mondego><newline46mondego>        frame.setSize(400, 300);<newline46mondego>        frame.setLocationRelativeTo(null);<newline46mondego>        frame.setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>    static class PaintPanel extends JPanel {<newline46mondego>        FlatteningPathIterator iter;<newline46mondego>        ArrayList<Point> points;<newline46mondego>        int index=0;<newline46mondego>        public PaintPanel(Shape s) {<newline46mondego>            iter=new FlatteningPathIterator(s.getPathIterator(new AffineTransform()), 1);<newline46mondego>            points=new ArrayList<Point>();<newline46mondego>            float[] coords=new float[6];<newline46mondego>            while (!iter.isDone()) {<newline46mondego>                iter.currentSegment(coords);<newline46mondego>                int x=(int)coords[0];<newline46mondego>                int y=(int)coords[1];<newline46mondego>                points.add(new Point(x,y));<newline46mondego>                iter.next();<newline46mondego>            }<newline46mondego>            Timer timer=new Timer(50, new ActionListener() {<newline46mondego>                @Override<newline46mondego>                public void actionPerformed(ActionEvent e) {<newline46mondego>                    index++;<newline46mondego>                    if (index>=points.size()) {<newline46mondego>                        index=0;<newline46mondego>                    }<newline46mondego>                    repaint();<newline46mondego>                }<newline46mondego>            });<newline46mondego>            timer.start();<newline46mondego>        }<newline46mondego>        protected void paintComponent(Graphics g) {<newline46mondego>            super.paintComponent(g);<newline46mondego><newline46mondego>            g.setColor(Color.blue);<newline46mondego>            Point p=points.get(index);<newline46mondego>            g.fillOval(p.x, p.y, 5,5);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"115splitHere46","9409538splitHere46","Person joe = new Person(<doubleQuotes46>Joe<doubleQuotes46>, <doubleQuotes46>Walnes<doubleQuotes46>);<newline46mondego>joe.setPhone(new PhoneNumber(123, <doubleQuotes46>1234-456<doubleQuotes46>));<newline46mondego>joe.setFax(new PhoneNumber(123, <doubleQuotes46>9999-999<doubleQuotes46>));<newline46mondego><newline46mondego>XStream xstream = new XStream();<newline46mondego><newline46mondego>String xml = xstream.toXML(joe);<newline46mondego>"
"116splitHere46","9409538splitHere46","<person><newline46mondego>  <firstname>Joe</firstname><newline46mondego>  <lastname>Walnes</lastname><newline46mondego>  <phone><newline46mondego>    <code>123</code><newline46mondego>    <number>1234-456</number><newline46mondego>  </phone><newline46mondego>  <fax><newline46mondego>    <code>123</code><newline46mondego>    <number>9999-999</number><newline46mondego>  </fax><newline46mondego></person><newline46mondego>"
"117splitHere46","9409538splitHere46","Person newJoe = (Person)xstream.fromXML(xml);<newline46mondego>"
"118splitHere46","9409538splitHere46","<strings><newline46mondego>    <mystring><newline46mondego>        <message><newline46mondego>            <doubleQuotes46>The number is:<doubleQuotes46><newline46mondego>        </message><newline46mondego>        <paramType><newline46mondego>            int<newline46mondego>        </paramType><newline46mondego>        <paramVal><newline46mondego>            42<newline46mondego>        </paramVal><newline46mondego>    </mystring><newline46mondego>    ...<newline46mondego>    <mystring><newline46mondego>        <message><newline46mondego>            <doubleQuotes46>The date is:<doubleQuotes46><newline46mondego>        </message><newline46mondego>        <paramType><newline46mondego>            Date<newline46mondego>        </paramType><newline46mondego>        <paramVal><newline46mondego>            07/04/2012<newline46mondego>        </paramVal><newline46mondego>    </mystring><newline46mondego></strings><newline46mondego>"
"119splitHere46","9409619splitHere46","private String getSesson(int month, int day) {<newline46mondego>    String season = <doubleQuotes46><doubleQuotes46>;<newline46mondego>    switch (month) {<newline46mondego>        case 1:<newline46mondego>        case 2:<newline46mondego>        case 3:<newline46mondego>            season = <doubleQuotes46>Winter<doubleQuotes46>;<newline46mondego>            if(month % 3 == 0 && day >=21)<newline46mondego>                season = <doubleQuotes46>Spring<doubleQuotes46>;<newline46mondego>            break;<newline46mondego>        case 4:<newline46mondego>        case 5:<newline46mondego>        case 6:<newline46mondego>            season = <doubleQuotes46>Spring<doubleQuotes46>;<newline46mondego>            if(month % 3 == 0 && day >=21)<newline46mondego>                season = <doubleQuotes46>Summer<doubleQuotes46>;<newline46mondego>            break;<newline46mondego>        case 7:<newline46mondego>        case 8:<newline46mondego>        case 9:<newline46mondego>            season = <doubleQuotes46>Summer<doubleQuotes46>;<newline46mondego>            if(month % 3 == 0 && day >=21)<newline46mondego>                season = <doubleQuotes46>Fall<doubleQuotes46>;<newline46mondego>            break;<newline46mondego>        case 10:<newline46mondego>        case 11:<newline46mondego>        case 12:<newline46mondego>            season = <doubleQuotes46>Fall<doubleQuotes46>;<newline46mondego>            if(month % 3 == 0 && day >=21)<newline46mondego>                season = <doubleQuotes46>Winter<doubleQuotes46>;<newline46mondego>            break;<newline46mondego>        default:<newline46mondego>            season = <doubleQuotes46>Not a valid month<doubleQuotes46>;<newline46mondego>            break;  <newline46mondego>    }<newline46mondego>    return season;<newline46mondego>}<newline46mondego>"
"120splitHere46","9409619splitHere46","System.out.println(getSesson(1, 0));<newline46mondego>    System.out.println(getSesson(2, 0));<newline46mondego>    System.out.println(getSesson(3, 0));<newline46mondego>    System.out.println(getSesson(3, 21));<newline46mondego>    System.out.println(getSesson(4, 0));<newline46mondego>    System.out.println(getSesson(5, 0));<newline46mondego>    System.out.println(getSesson(6, 0));<newline46mondego>    System.out.println(getSesson(6, 21));<newline46mondego>    System.out.println(getSesson(7, 0));<newline46mondego>    System.out.println(getSesson(8, 0));<newline46mondego>    System.out.println(getSesson(9, 0));<newline46mondego>    System.out.println(getSesson(9, 21));<newline46mondego>    System.out.println(getSesson(10, 0));<newline46mondego>    System.out.println(getSesson(11, 0));<newline46mondego>    System.out.println(getSesson(12, 0));<newline46mondego>    System.out.println(getSesson(12, 21));<newline46mondego>"
"121splitHere46","9409619splitHere46","Winter<newline46mondego>Winter<newline46mondego>Winter<newline46mondego>Spring<newline46mondego>Spring<newline46mondego>Spring<newline46mondego>Spring<newline46mondego>Summer<newline46mondego>Summer<newline46mondego>Summer<newline46mondego>Summer<newline46mondego>Fall<newline46mondego>Fall<newline46mondego>Fall<newline46mondego>Fall<newline46mondego>Winter<newline46mondego>"
"122splitHere46","9409619splitHere46","Scanner in = new Scanner(System.in);<newline46mondego>    int month, day; String season = null;<newline46mondego>    System.out.print(<doubleQuotes46>Please enter month and day: <doubleQuotes46>);<newline46mondego>    month = in.nextInt(); day = in.nextInt();<newline46mondego>    if(1 <= month && month <= 3){<newline46mondego>        season = <doubleQuotes46>Winter<doubleQuotes46>;<newline46mondego>        if((month == 3) && (21 <= day))<newline46mondego>            season = <doubleQuotes46>Spring<doubleQuotes46>;<newline46mondego>    } else if (4 <= month && month <=6){<newline46mondego>        season = <doubleQuotes46>Spring<doubleQuotes46>;<newline46mondego>        if((month == 6) && (21 <= day))<newline46mondego>            season = <doubleQuotes46>Summer<doubleQuotes46>;<newline46mondego>    } else if (7 <=month && month <=9){<newline46mondego>        season = <doubleQuotes46>Summer<doubleQuotes46>;<newline46mondego>        if((month == 9) && (21 <= day))<newline46mondego>            season = <doubleQuotes46>Fall<doubleQuotes46>;<newline46mondego>    } else if (10 <= month && month <= 12){<newline46mondego>        season = <doubleQuotes46>Fall<doubleQuotes46>;<newline46mondego>        if((month == 12) && (21 <= day))<newline46mondego>            season = <doubleQuotes46>Winter<doubleQuotes46>;<newline46mondego>    }<newline46mondego>    System.out.println(season);<newline46mondego>"
"123splitHere46","9409752splitHere46","File file = new File(<doubleQuotes46>app.sh<doubleQuotes46>);//File name with extension<newline46mondego>System.out.println(file.getCanonicalPath());<newline46mondego>"
"124splitHere46","9409752splitHere46","c:\cygwin\bin\test"
"125splitHere46","9409752splitHere46","c:\\cygwin\\bin\\test"
"126splitHere46","9409752splitHere46","String myCommand = <doubleQuotes46>c:\\cygwin\\bin\\test\\cygbin<doubleQuotes46>;<newline46mondego>String myArg = PATH_TO_shellscript+<doubleQuotes46>app.sh<doubleQuotes46>;<newline46mondego>ProcessBuilder p = new ProcessBuilder(myCommand, myArg).start();<newline46mondego>"
"127splitHere46","9410030splitHere46","OUTER: {<newline46mondego>    // code<newline46mondego>    INNER: {<newline46mondego>        if(flag)<newline46mondego>           break OUTER;<newline46mondego>    }<newline46mondego>    // code<newline46mondego>}<newline46mondego>"
"128splitHere46","9410030splitHere46","{"
"129splitHere46","9410030splitHere46","}"
"130splitHere46","9410105splitHere46","interface TimeSource {<newline46mondego>    long currentTimeMS(); // actually I have currentTimeNS<newline46mondego>    void currentTimeMS(long currentTimeMS);<newline46mondego>}<newline46mondego><newline46mondego>enum VanillaTimeSource implements TimeSource {<newline46mondego>    INSTANCE;<newline46mondego><newline46mondego>    @Override<newline46mondego>    public long currentTimeMS() {<newline46mondego>        return System.currentTimeMillis();<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void currentTimeMS(long currentTimeMS) {<newline46mondego>        // ignored<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class FixedTimeSource implements TimeSource {<newline46mondego>    private long currentTimeMS;<newline46mondego>    @Override<newline46mondego>    public long currentTimeMS() {<newline46mondego>        return currentTimeMS;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void currentTimeMS(long currentTimeMS) {<newline46mondego>        this.currentTimeMS =              currentTimeMS;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"131splitHere46","9410250splitHere46","EnumMap<Resource, Double>"
"132splitHere46","9410250splitHere46","Map"
"133splitHere46","9410282splitHere46","Class<?>[] interfaces = proxyInstance.getClass().getInterfaces();<newline46mondego>"
"134splitHere46","9410282splitHere46","Object proxyInstance = Proxy.newProxyInstance(<newline46mondego>    getClass().getClassLoader(), <newline46mondego>    new Class<?>[] {Serializable.class},<newline46mondego>    new InvocationHandler() /**/);<newline46mondego>"
"135splitHere46","9410282splitHere46","java.io.Serializable"
"136splitHere46","9410340splitHere46","setCursor"
"137splitHere46","9410340splitHere46","JScrollPane"
"138splitHere46","9410340splitHere46","Cursors"
"139splitHere46","9410340splitHere46","Native OS"
"140splitHere46","9410340splitHere46","JWindow"
"141splitHere46","9410340splitHere46","Custom Cursor"
"142splitHere46","9410360splitHere46","xmlns:android=<doubleQuotes46>http://schemas.android.com/apk/res/android<doubleQuotes46><newline46mondego>"
"143splitHere46","9410416splitHere46","SELECT <newline46mondego>  CAST(`status` AS UNSIGNED) AS numerical_status<newline46mondego>FROM `table`<newline46mondego>"
"144splitHere46","9410416splitHere46","on"
"145splitHere46","9410416splitHere46","off"
"146splitHere46","9410416splitHere46","CREATE OR REPLACE VIEW `table_numstatus` AS<newline46mondego>  SELECT `id`,  CAST(`status` AS UNSIGNED) AS `status`<newline46mondego>  FROM `table` ;<newline46mondego>"
"147splitHere46","9410480splitHere46","@Override public void onBakPressed(){<newline46mondego>//your stuffs<newline46mondego>}<newline46mondego>"
"148splitHere46","9410480splitHere46","@Override<newline46mondego>public boolean onKeyDown(int keyCode, KeyEvent event) {<newline46mondego>    if (keyCode == KeyEvent.Any_Key_Code) {<newline46mondego>        //your stuff here<newline46mondego>        return true;<newline46mondego>    }<newline46mondego>    return super.onKeyDown(keyCode, event);<newline46mondego>}<newline46mondego>"
"149splitHere46","9410574splitHere46","when(service.isInProgress()).thenThrow(new Exception());<newline46mondego>"
"150splitHere46","9410643splitHere46","android:theme"
"151splitHere46","9410643splitHere46","<application android:theme=<doubleQuotes46>@android:style/Theme.NoTitleBar<doubleQuotes46> ...>"
"152splitHere46","9410660splitHere46","JOptionPane"
"153splitHere46","9410660splitHere46","Window + D"
"154splitHere46","9410660splitHere46","Window + M"
"155splitHere46","9410858splitHere46","data.putExtra()"
"156splitHere46","9410858splitHere46","bundle.putSerializable()"
"157splitHere46","9410858splitHere46","Serializable"
"158splitHere46","9410858splitHere46","implements Serializable"
"159splitHere46","9410858splitHere46","getSerializable()"
"160splitHere46","9410858splitHere46","Date"
"161splitHere46","9410858splitHere46","Date.getTime()"
"162splitHere46","9410858splitHere46","public class Receipt implements Serializable{<newline46mondego>    public String referenceNo;<newline46mondego>    public byte[]   image;<newline46mondego>    public String comments;<newline46mondego>    public long   createdOn;<newline46mondego>    public long   updatedOn;<newline46mondego>    //...<newline46mondego>}<newline46mondego><newline46mondego>//Put the list in the intent<newline46mondego>List<Receipt> list = ...<newline46mondego>Intent data = new Intent();<newline46mondego>data.putExtra(<doubleQuotes46>tag<doubleQuotes46>, list);<newline46mondego><newline46mondego>//Read the list from the intent:<newline46mondego>list = (List<Receipt>) data.getSerializableExtra(<doubleQuotes46>tag<doubleQuotes46>);<newline46mondego>"
"163splitHere46","9410885splitHere46","Calendar.add"
"164splitHere46","9410885splitHere46","-1"
"165splitHere46","9410885splitHere46","private static int getPreviousYear() {<newline46mondego>    Calendar prevYear = Calendar.getInstance();<newline46mondego>    prevYear.add(Calendar.YEAR, -1);<newline46mondego>    return prevYear.get(Calendar.YEAR);<newline46mondego>}<newline46mondego>"
"166splitHere46","9410885splitHere46","public static void main(String[] args) {<newline46mondego>    System.out.println(getPreviousYear());<newline46mondego>}<newline46mondego>"
"167splitHere46","9410885splitHere46","2011<newline46mondego>"
"168splitHere46","9410913splitHere46","Date"
"169splitHere46","9410913splitHere46","import java.util.TimeZone ;<newline46mondego><newline46mondego>public class Test {<newline46mondego>    public static void main(String[] args) throws Exception {<newline46mondego>        TimeZone zone = TimeZone.getDefault();<newline46mondego>        System.out.println(zone.getDisplayName());<newline46mondego>        System.out.println(zone.getID());<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"170splitHere46","9410913splitHere46","Greenwich Mean Time<newline46mondego>Europe/London<newline46mondego>"
"171splitHere46","9410913splitHere46","user.timezone<newline46mondego>user.country<newline46mondego>java.home<newline46mondego>"
"172splitHere46","9410913splitHere46","user.timezone"
"173splitHere46","9410931splitHere46","false"
"174splitHere46","9410931splitHere46","run=false"
"175splitHere46","9410931splitHere46","run=false"
"176splitHere46","9410931splitHere46","switch"
"177splitHere46","9410931splitHere46","System.out.println(<doubleQuotes46>OptionX<doubleQuotes46>);"
"178splitHere46","9411169splitHere46","obj.getSomething()"
"179splitHere46","9411169splitHere46","if"
"180splitHere46","9411169splitHere46","for (SomeObject obj : getSomeObjects()) {<newline46mondego>  Something smth = obj.getSomething();<newline46mondego>  if (!smth.isEmpty() && !list.contains(smth)) {<newline46mondego>      list.add(smth);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"181splitHere46","9411169splitHere46","List"
"182splitHere46","9411169splitHere46","Set"
"183splitHere46","9411169splitHere46","contains()"
"184splitHere46","9411169splitHere46","Set"
"185splitHere46","9411267splitHere46","java -Dhttp.proxyHost=myproxy.com -Dhttp.proxyPort=8080 ... MyTransformerClass<newline46mondego>"
"186splitHere46","9411267splitHere46","System.setProperty(<doubleQuotes46>http.proxyHost<doubleQuotes46>, myConfig.getProxyHost());<newline46mondego>System.setProperty(<doubleQuotes46>http.proxyPort<doubleQuotes46>, myConfig.getProxyPort());<newline46mondego>"
"187splitHere46","9411274splitHere46","<doubleQuotes46>redirect:<doubleQuotes46>"
"188splitHere46","9411276splitHere46","URL url = new URL(fileURL);<newline46mondego>URLConnection conexion = url.openConnection();<newline46mondego>conexion.connect();<newline46mondego>int lenghtOfFile = conexion.getContentLength();<newline46mondego>Log.d(<doubleQuotes46>ANDRO_ASYNC<doubleQuotes46>, <doubleQuotes46>Lenght of file: <doubleQuotes46> + lenghtOfFile);<newline46mondego>InputStream input = new BufferedInputStream(url.openStream());<newline46mondego>OutputStream output = new FileOutputStream(<doubleQuotes46>/sdcard/caldophilus.jpg<doubleQuotes46>);<newline46mondego>byte data[] = new byte[1024];<newline46mondego>long total = 0;<newline46mondego>while ((count = input.read(data)) != -1) {<newline46mondego>total += count;<newline46mondego>output.write(data, 0, count);<newline46mondego>}<newline46mondego>output.flush();<newline46mondego>output.close();<newline46mondego>input.close();<newline46mondego>"
"189splitHere46","9411303splitHere46","Intent intent= childActivity.getIntent();<newline46mondego>intent.putExtra(<doubleQuotes46>key<doubleQuotes46>,<doubleQuotes46>value<doubleQuotes46>);  <newline46mondego>childActivity.setResult(Activity.RESULT_OK, intent);<newline46mondego>childActivity.finish();<newline46mondego>"
"190splitHere46","9411303splitHere46","onActivityResult"
"191splitHere46","9411303splitHere46","RESULT_CANCEL"
"192splitHere46","9411500splitHere46","ImageSignature"
"193splitHere46","9411500splitHere46","MyClass"
"194splitHere46","9411500splitHere46","MyClass"
"195splitHere46","9411500splitHere46","MyClass"
"196splitHere46","9411500splitHere46","ImageSignature"
"197splitHere46","9411500splitHere46","private static class ImageSignature implements Serializable {<newline46mondego>"
"198splitHere46","9411560splitHere46","PropertiesLoaderSupport"
"199splitHere46","9411560splitHere46","PropertyPlaceholderConfigurer"
"200splitHere46","9411627splitHere46","interface Factory<E> {  <newline46mondego>    E newInstance();<newline46mondego>}<newline46mondego>"
"201splitHere46","9411627splitHere46","E"
"202splitHere46","9411702splitHere46","values-sw360dp"
"203splitHere46","9411852splitHere46","service = new Service();<newline46mondego>"
"204splitHere46","9411852splitHere46","Service"
"205splitHere46","9411852splitHere46","new"
"206splitHere46","9411951splitHere46","5363/12*5"
"207splitHere46","9411951splitHere46","a"
"208splitHere46","9411951splitHere46","int"
"209splitHere46","9411951splitHere46","double a=5363.0/12*5;<newline46mondego>out.println(a);<newline46mondego>"
"210splitHere46","9411987splitHere46","void swap(SomeType[] args) {<newline46mondego>    SomeType temp = args[0];<newline46mondego>    args[0] = args[1];<newline46mondego>    args[1] = temp;<newline46mondego>}<newline46mondego>"
"211splitHere46","9411987splitHere46","SomeType a = ...;<newline46mondego>SomeType b = ...;<newline46mondego>SomeType[] args = new SomeType[] { a, b };<newline46mondego>swap(args);<newline46mondego>a = args[0];<newline46mondego>b = args[1];<newline46mondego>"
"212splitHere46","9411987splitHere46","SomeType"
"213splitHere46","9411987splitHere46","void swap(SomeTypeContainer c) {<newline46mondego>    SomeType temp = c.a;<newline46mondego>    c.a = c.b;<newline46mondego>    c.b = temp;<newline46mondego>}<newline46mondego>"
"214splitHere46","9411987splitHere46","SomeTypeContainer c = new SomeTypeContainer(/* ... something that creates a and b ... */);<newline46mondego>// Use c.a and c.b directly<newline46mondego>swap(c);<newline46mondego>// Use c.a and c.b directly, they're now swapped<newline46mondego>"
"215splitHere46","9412017splitHere46","main"
"216splitHere46","9412017splitHere46","main"
"217splitHere46","9412017splitHere46","main"
"218splitHere46","9412017splitHere46","package com.foo;<newline46mondego><newline46mondego>public class Test {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        System.out.println(<doubleQuotes46>Hello World!<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"219splitHere46","9412017splitHere46","main"
"220splitHere46","9412017splitHere46","com/foo/Test.class"
"221splitHere46","9412017splitHere46","classes"
"222splitHere46","9412017splitHere46","java com.foo.Test<newline46mondego>"
"223splitHere46","9412017splitHere46","java -cp /path/to/classes com.foo.Test<newline46mondego>"
"224splitHere46","9412017splitHere46","-path<newline46mondego>    -to<newline46mondego>        -classes<newline46mondego>            -com<newline46mondego>                -foo<newline46mondego>                    >Test.class<newline46mondego>"
"225splitHere46","9412093splitHere46","ArrayList<GenericNews>"
"226splitHere46","9412093splitHere46","getNewsItem(String keyword)"
"227splitHere46","9412109splitHere46","receiveData"
"228splitHere46","9412109splitHere46","MyApp"
"229splitHere46","9412109splitHere46","do {<newline46mondego>    this.wait(someSmallTime); //We are aquiring a monitor on <doubleQuotes46>this<doubleQuotes46> object, so it would require a notification. You should put some time (like 100msec maybe) to prevent very rare but still possible deadlock, when notification came before this.wait was called.<newline46mondego>} while (!allFieldsAreFilled());<newline46mondego>"
"230splitHere46","9412109splitHere46","notify"
"231splitHere46","9412109splitHere46","unpause"
"232splitHere46","9412109splitHere46","wait"
"233splitHere46","9412109splitHere46","myData.put(field, value);   <newline46mondego>this.notify();<newline46mondego>"
"234splitHere46","9412109splitHere46","this"
"235splitHere46","9412109splitHere46","wait"
"236splitHere46","9412109splitHere46","synchronized(this) {...}"
"237splitHere46","9412216splitHere46","public TestHide(java.awt.Frame parent, boolean modal) {<newline46mondego>super(parent, modal);<newline46mondego>setIconImage(Toolkit.getDefaultToolkit().getImage(<doubleQuotes46>images\\white_title.png<doubleQuotes46>));<newline46mondego>initComponents();<newline46mondego>jPanel2.setVisible(false);<newline46mondego>pack();  }<newline46mondego>"
"238splitHere46","9412238splitHere46","JFrame owner"
"239splitHere46","9412309splitHere46","SimpleDateFormat"
"240splitHere46","9412309splitHere46","String"
"241splitHere46","9412309splitHere46","Date"
"242splitHere46","9412309splitHere46","char[]"
"243splitHere46","9412309splitHere46","ThreadLocal<DateFormat>"
"244splitHere46","9412385splitHere46","Employee.class"
"245splitHere46","9412385splitHere46","Employee.java"
"246splitHere46","9412602splitHere46","public class ExampleAppServlet extends HttpServlet{<newline46mondego>    public void doPost(HttpServletRequest req, HttpServletResponse resp) {<newline46mondego><newline46mondego>        // get some data from POST<newline46mondego>        InputStream input = req.getInputStream();<newline46mondego><newline46mondego>        // do something with input<newline46mondego><newline46mondego>        // send back some reply<newline46mondego>        resp.getWriter().write(<doubleQuotes46>Hello Example App<doubleQuotes46>).close();<newline46mondego>    } <newline46mondego>} <newline46mondego>"
"247splitHere46","9412602splitHere46","web.xml"
"248splitHere46","9412602splitHere46","<web-app xmlns=<doubleQuotes46>http://java.sun.com/xml/ns/javaee<doubleQuotes46> version=<doubleQuotes46>2.5<doubleQuotes46>><newline46mondego>    <servlet><newline46mondego>        <servlet-name>example_app_servlet</servlet-name><newline46mondego>        <servlet-class>com.package.ExampleAppServlet</servlet-class><newline46mondego>    </servlet><newline46mondego>    <servlet-mapping><newline46mondego>       <servlet-name>example_app_servlet</servlet-name><newline46mondego>       <url-pattern>/example_app</url-pattern><newline46mondego>    </servlet-mapping><newline46mondego></web-app> <newline46mondego>"
"249splitHere46","9412889splitHere46","Task record = hibernateTemplate.load(Task.class, id);<newline46mondego>Project project = hibernateTemplate.load(Project.class, projectId);<newline46mondego>project.getTasks().remove(record);<newline46mondego>hibernateTemplate.update(project);<newline46mondego>hibernateTemplate.delete(record);<newline46mondego>"
"250splitHere46","9412900splitHere46","@Override<newline46mondego>public void actionPerformed(ActionEvent e) {<newline46mondego>    if(allCheckBoxesSelected){<newline46mondego>        allCheckBoxesSelected = false;<newline46mondego>        allButton.setText(<doubleQuotes46>Select all<doubleQuotes46>);<newline46mondego>    } else {<newline46mondego>        allCheckBoxesSelected = true;<newline46mondego>        allButton.setText(<doubleQuotes46>Unselect all<doubleQuotes46>);<newline46mondego>        NodeSelectionCheckBoxJDialog.this.pack();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"251splitHere46","9412919splitHere46","iList"
"252splitHere46","9412919splitHere46","returList"
"253splitHere46","9412919splitHere46","println()"
"254splitHere46","9412919splitHere46","Integer val = iList.get(i);<newline46mondego>"
"255splitHere46","9412919splitHere46","for"
"256splitHere46","9412919splitHere46","ClassCastException"
"257splitHere46","9412919splitHere46","<doubleQuotes46>s<doubleQuotes46>"
"258splitHere46","9412919splitHere46","Integer"
"259splitHere46","9412969splitHere46","global-number-digits = <doubleQuotes46>+<doubleQuotes46> *phonedigit DIGIT *phonedigit<newline46mondego>phonedigit           = DIGIT / visual-separator <newline46mondego>visual-separator     = <doubleQuotes46>-<doubleQuotes46> / <doubleQuotes46>.<doubleQuotes46> / <doubleQuotes46>(<doubleQuotes46> / <doubleQuotes46>)<doubleQuotes46><newline46mondego>DIGIT = <doubleQuotes46>0<doubleQuotes46> / <doubleQuotes46>1<doubleQuotes46> / <doubleQuotes46>2<doubleQuotes46> / <doubleQuotes46>3<doubleQuotes46> / <doubleQuotes46>4<doubleQuotes46> / <doubleQuotes46>5<doubleQuotes46> / <doubleQuotes46>6<doubleQuotes46> / <doubleQuotes46>7<doubleQuotes46> / <doubleQuotes46>8<doubleQuotes46> / <doubleQuotes46>9<doubleQuotes46><newline46mondego>"
"260splitHere46","9413000splitHere46","uniqueResult()"
"261splitHere46","9413000splitHere46","javax.persistence.Query"
"262splitHere46","9413000splitHere46","getFirstResult()"
"263splitHere46","9413000splitHere46","getSingleResult()"
"264splitHere46","9413000splitHere46","getUniqueResult()"
"265splitHere46","9413000splitHere46","bsn"
"266splitHere46","9413000splitHere46","getUniqueResult()"
"267splitHere46","9413011splitHere46","Reader"
"268splitHere46","9413011splitHere46","InputStream in = ...<newline46mondego>InputSource is = new InputSource(new InputStreamReader(in, <doubleQuotes46>utf-16<doubleQuotes46>));<newline46mondego>"
"269splitHere46","9413079splitHere46","HTTP/1.1 200 OK<newline46mondego>Content-Type: text/plain<newline46mondego>Transfer-Encoding: chunked<newline46mondego><newline46mondego>25<newline46mondego>This is the data in the first chunk<newline46mondego><newline46mondego>1C<newline46mondego>and this is the second one<newline46mondego><newline46mondego>3<newline46mondego>con<newline46mondego>8<newline46mondego>sequence<newline46mondego>0<newline46mondego>"
"270splitHere46","9413205splitHere46","\"
"271splitHere46","9413205splitHere46","\\"
"272splitHere46","9413205splitHere46","\"
"273splitHere46","9413205splitHere46","\\"
"274splitHere46","9413205splitHere46","\"
"275splitHere46","9413205splitHere46","\\\\"
"276splitHere46","9413205splitHere46","\\"
"277splitHere46","9413205splitHere46","< _some_tag some=<doubleQuotes46>stuff<doubleQuotes46> ><newline46mondego>    some <strong>content</strong><newline46mondego>< / _some_tag ><newline46mondego>"
"278splitHere46","9413205splitHere46","<\s*([A-Za-z_]\w*)\s*([^\>]+)>(.*?)<\s*\/\s\1\s*><newline46mondego>"
"279splitHere46","9413205splitHere46",".*?"
"280splitHere46","9413205splitHere46","<tag1>blah</tag2>"
"281splitHere46","9413257splitHere46","@Entity<newline46mondego>@Table(name = <doubleQuotes46>DestinationAlias<doubleQuotes46>, uniqueConstraints = { @UniqueConstraint(columnNames = {<newline46mondego>        <doubleQuotes46>idDestination<doubleQuotes46>, <doubleQuotes46>alias<doubleQuotes46> }) })<newline46mondego>public final class DestinationAlias {<newline46mondego>    // ....<newline46mondego>}<newline46mondego>"
"282splitHere46","9413327splitHere46","Candidato"
"283splitHere46","9413327splitHere46","Elezione"
"284splitHere46","9413327splitHere46","Candidato"
"285splitHere46","9413327splitHere46","Elezione"
"286splitHere46","9413327splitHere46","class Elezione {<newline46mondego>    private candidatoCounter = 0;<newline46mondego>    ................<newline46mondego><newline46mondego>    Candidato createCandidato() {<newline46mondego>        return new Candidato(candidatoCounter++);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class Candidato {<newline46mondego>    private int id;<newline46mondego>    Candidato(int id) {<newline46mondego>        this.id = id;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"287splitHere46","9413353splitHere46","public class MyBlockingQueue<E> extends ArrayBlockingQueue<E> {<newline46mondego>    private final long timeoutMS;<newline46mondego><newline46mondego>    public MyBlockingQueue(int capacity, long timeoutMS) {<newline46mondego>        super(capacity);<newline46mondego>        this.timeoutMS = timeoutMS;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean offer(E e) {<newline46mondego>        try {<newline46mondego>            return super.offer(e, timeoutMS, TimeUnit.MILLISECONDS);<newline46mondego>        } catch (InterruptedException e1) {<newline46mondego>            Thread.currentThread().interrupt();<newline46mondego>            return false;<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"288splitHere46","9413450splitHere46",".mod(1000)"
"289splitHere46","9413450splitHere46",".mod(36*36*36)"
"290splitHere46","9413450splitHere46",".longValue() % 1000"
"291splitHere46","9413450splitHere46",".longValue() % (36*36*36)"
"292splitHere46","9413450splitHere46","Long.toString(x, 10)"
"293splitHere46","9413450splitHere46","Long.toString(x, 36)"
"294splitHere46","9413535splitHere46","s + <doubleQuotes46>,<doubleQuotes46> + i+1"
"295splitHere46","9413535splitHere46","String result_to_add = s + <doubleQuotes46>,<doubleQuotes46> + (i+1);"
"296splitHere46","9413537splitHere46","@JsonValue"
"297splitHere46","9413537splitHere46","class MyClass {<newline46mondego>    ...<newline46mondego>    @JsonValue<newline46mondego>    private DateTime[] toValue() {<newline46mondego>        return new DateTime[]Â {start, end};<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"298splitHere46","9413537splitHere46","MyClass"
"299splitHere46","9413667splitHere46","A"
"300splitHere46","9413667splitHere46","SubB"
"301splitHere46","9413667splitHere46","SubB b = new SubB();<newline46mondego>b.foo();<newline46mondego>"
"302splitHere46","9413713splitHere46","@EJB"
"303splitHere46","9413713splitHere46","@In"
"304splitHere46","9413713splitHere46","@Name(<doubleQuotes46>taskHome<doubleQuotes46>)<newline46mondego>public class TaskHome extends EntityHome<Task> {<newline46mondego><newline46mondego>  @In<newline46mondego>  private CategoryServiceLocal categoryService;<newline46mondego>"
"305splitHere46","9413736splitHere46","<doubleQuotes46>delete from Employee where Id IN(3,5,8,...);<doubleQuotes46><newline46mondego><doubleQuotes46>delete from Employee where Id IN(SELECT Id FROM table...);<doubleQuotes46><newline46mondego>"
"306splitHere46","9413827splitHere46","public class TestClass {<newline46mondego>    public long myLong = 1234;<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        final TestClass test = new TestClass();<newline46mondego><newline46mondego>        Timer timer = new Timer();<newline46mondego>        timer.schedule(new TimerTask() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                test.doStuff();<newline46mondego>            }<newline46mondego>        }, 0, test.myLong);<newline46mondego>    }<newline46mondego><newline46mondego>    public void doStuff(){<newline46mondego>        //do stuff here<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"307splitHere46","9413827splitHere46","class CrawlingService extends AbstractScheduledService {<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void runOneIteration() throws Exception {<newline46mondego>        //run this alot<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void startUp() throws Exception {<newline46mondego>        //anything you need to step up<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void shutDown() throws Exception {<newline46mondego>        //anything you need to tear down<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>    @Override<newline46mondego>    protected Scheduler scheduler() {<newline46mondego>        return new CustomScheduler() {<newline46mondego>            @Override<newline46mondego>            protected Schedule getNextSchedule() throws Exception {<newline46mondego>                long a = 1000; //number you can randomize to your heart's content<newline46mondego>                return new Schedule(a, TimeUnit.MILLISECONDS);<newline46mondego>            }<newline46mondego>        };<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"308splitHere46","9413898splitHere46","HashMap.put"
"309splitHere46","9413898splitHere46","Resultset.getString"
"310splitHere46","9413898splitHere46","Statement.getString"
"311splitHere46","9413935splitHere46","RuntimeException"
"312splitHere46","9413935splitHere46","throws"
"313splitHere46","9413969splitHere46","long"
"314splitHere46","9413969splitHere46","int"
"315splitHere46","9413969splitHere46","public double votes() {<newline46mondego>    long votexp = 0;<newline46mondego>    for (Elettore e : docenti.values())<newline46mondego>        if (e.getVoto())          //everytime this is true increment by 1<newline46mondego>            votexp += 10;<newline46mondego>    for (Elettore e : studenti.values())<newline46mondego>        if (e.getVoto())         //everytime this is true increment by 0.2<newline46mondego>            votexp += 2;<newline46mondego>    for (Elettore e : pta.values())<newline46mondego>        if (e.getVoto())        //everytime this is true increment by 0.2<newline46mondego>            votexp += 2;<newline46mondego>    return votexp / 10.0;<newline46mondego>}<newline46mondego>"
"316splitHere46","9413969splitHere46","double a = 26 / 10.0;<newline46mondego>System.out.println(a);<newline46mondego>"
"317splitHere46","9413969splitHere46","2.6<newline46mondego>"
"318splitHere46","9413969splitHere46","double"
"319splitHere46","9413978splitHere46","UPDATE MED_COM_MAPPER_CMDS <newline46mondego>SET STATUS = :stat, <newline46mondego>OUTAGE_ID = decode(status, 'X', :new_val, outage_id)<newline46mondego>WHERE CMD_ID = blah<newline46mondego>;<newline46mondego>"
"320splitHere46","9414147splitHere46","<c:if test=<doubleQuotes46>${results.types[rowStatus.index].componentType.class.name <newline46mondego>              eq 'java.util.Date' }<doubleQuotes46>><newline46mondego>"
"321splitHere46","9414251splitHere46","SimpleDateFormat(<doubleQuotes46>yyyy-MM-dd-HH:mm:ss<doubleQuotes46>)<newline46mondego>"
"322splitHere46","9414263splitHere46","principal"
"323splitHere46","9414263splitHere46","UserDetails"
"324splitHere46","9414263splitHere46","public Collection<GrantedAuthority> getAuthorities() { .. }"
"325splitHere46","9414263splitHere46","<sec:authentication property=<doubleQuotes46>principal.authorities<doubleQuotes46>/><newline46mondego>"
"326splitHere46","9414361splitHere46","synchronizedCollection"
"327splitHere46","9414361splitHere46","c.toArray()"
"328splitHere46","9414361splitHere46","SynchronizedCollection"
"329splitHere46","9414361splitHere46","toArray()"
"330splitHere46","9414361splitHere46","synchronizedCollection()"
"331splitHere46","9414381splitHere46","<doubleQuotes46>image<doubleQuotes46>: {          <newline46mondego>    <doubleQuotes46>url<doubleQuotes46>: <doubleQuotes46>url<doubleQuotes46>,<newline46mondego>    <doubleQuotes46>id<doubleQuotes46>: <doubleQuotes46>id<doubleQuotes46><newline46mondego>}<newline46mondego>"
"332splitHere46","9414381splitHere46","{          <newline46mondego>    <doubleQuotes46>url<doubleQuotes46>: <doubleQuotes46>url<doubleQuotes46>,<newline46mondego>    <doubleQuotes46>id<doubleQuotes46>: <doubleQuotes46>id<doubleQuotes46><newline46mondego>}<newline46mondego>"
"333splitHere46","9414381splitHere46","public class Person implements Serializable {<newline46mondego>    private static final long serialVersionUID = 38L;<newline46mondego><newline46mondego>    private String firstname;<newline46mondego>    private String lastname;<newline46mondego>    private String address;<newline46mondego>    private Foo[] images;<newline46mondego>}<newline46mondego><newline46mondego>public class Foo{<newline46mondego>    private Image image;<newline46mondego>}<newline46mondego>public class Image implements Serializable {<newline46mondego>    private static final long serialVersionUID = 39L;<newline46mondego><newline46mondego>    private String url;<newline46mondego>    private String id;<newline46mondego>}<newline46mondego>"
"334splitHere46","9414401splitHere46","URLConnection"
"335splitHere46","9414401splitHere46","getInputStream()"
"336splitHere46","9414406splitHere46","-Dappengine.user.timezone=UTC<newline46mondego>"
"337splitHere46","9414406splitHere46","-Dappengine.user.timezone.impl=UTC<newline46mondego>"
"338splitHere46","9414508splitHere46","PendingIntent onClickPendingIntent = PendingIntent.getBroadcast(context, 0, onClickIntent, 0);<newline46mondego>"
"339splitHere46","9414508splitHere46","PendingIntent onClickPendingIntent = PendingIntent.getActivity(context, 0, onClickIntent, 0);<newline46mondego>"
"340splitHere46","9414597splitHere46","public void doIt(String s1, String s2, String s3){<newline46mondego>    ...<newline46mondego><newline46mondego>    if (/*some s1 condition*/) {<newline46mondego>        crit.add(Restrictions.eq(<doubleQuotes46>s1<doubleQuotes46>, s1));<newline46mondego>    }<newline46mondego><newline46mondego>    if (/*some s2 condition*/) {<newline46mondego>        crit.add(Restrictions.like(<doubleQuotes46>s2<doubleQuotes46>, s2 + <doubleQuotes46>%<doubleQuotes46>));<newline46mondego>    }<newline46mondego><newline46mondego>    if (/*some s3 condition*/) {<newline46mondego>        crit.add(Restrictions.ne(<doubleQuotes46>s3<doubleQuotes46>, s3));<newline46mondego>    }<newline46mondego><newline46mondego>    return crit.list();<newline46mondego>}<newline46mondego>"
"341splitHere46","9414791splitHere46","-Djava.library.path=/path/to/libs"
"342splitHere46","9414877splitHere46","V extends Comparable"
"343splitHere46","9414877splitHere46","sortMapByValues"
"344splitHere46","9414877splitHere46","V extends Comparable<V>"
"345splitHere46","9414877splitHere46","ValueComparator"
"346splitHere46","9414877splitHere46","V extends Comparable<V>"
"347splitHere46","9415062splitHere46","number"
"348splitHere46","9415062splitHere46","Beta"
"349splitHere46","9415062splitHere46","Gama"
"350splitHere46","9415062splitHere46","number"
"351splitHere46","9415193splitHere46","/*<newline46mondego> * To change this template, choose Tools | Templates<newline46mondego> * and open the template in the editor.<newline46mondego> */<newline46mondego>package excelfilereading;<newline46mondego><newline46mondego>/**<newline46mondego> *<newline46mondego> * @author vkantiya<newline46mondego> */<newline46mondego>import org.apache.poi.hssf.usermodel.HSSFWorkbook;<newline46mondego>import org.apache.poi.hssf.usermodel.HSSFSheet;<newline46mondego>import org.apache.poi.hssf.usermodel.HSSFRow;<newline46mondego>import org.apache.poi.hssf.usermodel.HSSFCell;<newline46mondego><newline46mondego>import java.io.FileInputStream;<newline46mondego>import java.io.IOException;<newline46mondego>import java.util.Iterator;<newline46mondego>import java.util.List;<newline46mondego>import java.util.ArrayList;<newline46mondego><newline46mondego>public class Main {<newline46mondego><newline46mondego>    @SuppressWarnings(<doubleQuotes46>unchecked<doubleQuotes46>)<newline46mondego>    public static void main(String[] args) throws Exception {<newline46mondego>//<newline46mondego>// An excel file name. You can create a file name with a full<newline46mondego>// path information.<newline46mondego>//<newline46mondego>        String filename = <doubleQuotes46>FirstExcel.xls<doubleQuotes46>;<newline46mondego><newline46mondego><newline46mondego>// Create an ArrayList to store the data read from excel sheet.<newline46mondego>//<newline46mondego>        List sheetData = new ArrayList();<newline46mondego><newline46mondego>        FileInputStream fis = null;<newline46mondego>        try {<newline46mondego>//<newline46mondego>// Create a FileInputStream that will be use to read the<newline46mondego>// excel file.<newline46mondego>//<newline46mondego>            fis = new FileInputStream(filename);<newline46mondego><newline46mondego>//<newline46mondego>// Create an excel workbook from the file system.<newline46mondego>//<newline46mondego>            HSSFWorkbook workbook = new HSSFWorkbook(fis);<newline46mondego>//<newline46mondego>// Get the first sheet on the workbook.<newline46mondego>//<newline46mondego>            HSSFSheet sheet = workbook.getSheetAt(0);<newline46mondego><newline46mondego>//<newline46mondego>// When we have a sheet object in hand we can iterator on<newline46mondego>// each sheet's rows and on each row's cells. We store the<newline46mondego>// data read on an ArrayList so that we can printed the<newline46mondego>// content of the excel to the console.<newline46mondego>//<newline46mondego>            Iterator rows = sheet.rowIterator();<newline46mondego>            while (rows.hasNext()) {<newline46mondego>                HSSFRow row = (HSSFRow) rows.next();<newline46mondego>                Iterator cells = row.cellIterator();<newline46mondego><newline46mondego>                List data = new ArrayList();<newline46mondego>                while (cells.hasNext()) {<newline46mondego>                    HSSFCell cell = (HSSFCell) cells.next();<newline46mondego>                    data.add(cell);<newline46mondego>                }<newline46mondego><newline46mondego>                sheetData.add(data);<newline46mondego>            }<newline46mondego>        } catch (IOException e) {<newline46mondego>            e.printStackTrace();<newline46mondego>        } finally {<newline46mondego>            if (fis != null) {<newline46mondego>                fis.close();<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        showExelData(sheetData);<newline46mondego>    }<newline46mondego><newline46mondego>    private static void showExelData(List sheetData) {<newline46mondego>//<newline46mondego>// Iterates the data and print it out to the console.<newline46mondego>//<newline46mondego>        for (int i = 0; i < sheetData.size(); i++) {<newline46mondego>            List list = (List) sheetData.get(i);<newline46mondego>            for (int j = 0; j < list.size(); j++) {<newline46mondego>                HSSFCell cell = (HSSFCell) list.get(j);<newline46mondego>                System.out.print(<newline46mondego>                        cell.getRichStringCellValue().getString());<newline46mondego>                if (j < list.size() - 1) {<newline46mondego>                    System.out.print(<doubleQuotes46>, <doubleQuotes46>);<newline46mondego>                }<newline46mondego>            }<newline46mondego>            System.out.println(<doubleQuotes46><doubleQuotes46>);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"352splitHere46","9415220splitHere46","mdao"
"353splitHere46","9415220splitHere46","Dao<Object, Integer>"
"354splitHere46","9415220splitHere46","getDao(mClass)"
"355splitHere46","9415220splitHere46","mclass"
"356splitHere46","9415220splitHere46","Class<?>"
"357splitHere46","9415220splitHere46","public class DatabaseModel<T, ID> {<newline46mondego>    private Dao<T, ID> mDao = null;<newline46mondego>    private DatabaseHelper mHelper;<newline46mondego>    private Class<T> mClass;<newline46mondego><newline46mondego>    public DatabaseModel(DatabaseHelper h, Class<T> c) {<newline46mondego>        mHelper = h;<newline46mondego>        mClass = c;<newline46mondego>        try {<newline46mondego>            mDao = mHelper.getDao(mClass);<newline46mondego>        } catch (SQLException e) {<newline46mondego>            Debug.e(<doubleQuotes46>Can't get dao<doubleQuotes46>, e.getStackTrace());<newline46mondego>            throw new RuntimeException(e);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"358splitHere46","9415258splitHere46","MapActivity"
"359splitHere46","9415258splitHere46","Activity"
"360splitHere46","9415258splitHere46","onOptionsItemSelected(MenuItem item)"
"361splitHere46","9415258splitHere46","class BaseActivity extends Activity {<newline46mondego>    @Override<newline46mondego>    public boolean onOptionsItemSelected(MenuItem item) {<newline46mondego>        MenuHelper.handleOnItemSelected(item);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"362splitHere46","9415258splitHere46","class BaseMapActivity extends MapActivity {<newline46mondego>    @Override<newline46mondego>    public boolean onOptionsItemSelected(MenuItem item) {<newline46mondego>        MenuHelper.handleOnItemSelected(item);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"363splitHere46","9415258splitHere46","class MenuHelper {<newline46mondego><newline46mondego>   public static void handleOnItemSelected(MenuItem item) {<newline46mondego>          // do something..<newline46mondego>   }<newline46mondego><newline46mondego>}<newline46mondego>"
"364splitHere46","9415349splitHere46","UTF-16"
"365splitHere46","9415349splitHere46","new String(byte[], encoding)<newline46mondego>"
"366splitHere46","9415349splitHere46","Charset.defaultCharset();"
"367splitHere46","9415349splitHere46","-Dfile.encoding=<doubleQuotes46>utf-8<doubleQuotes46><newline46mondego>"
"368splitHere46","9415355splitHere46","dest"
"369splitHere46","9415355splitHere46","-Ddest=M:\test.tar"
"370splitHere46","9415419splitHere46","TestCase"
"371splitHere46","9415419splitHere46","@Test"
"372splitHere46","9415419splitHere46","@RunWith(Suite.class)<newline46mondego>@SuiteClasses({TaskTest.class, <newline46mondego>                ResourceTest.class,<newline46mondego>                DateForTMSTest.class,<newline46mondego>                AvailableResources.class,<newline46mondego>                Model.class})<newline46mondego>"
"373splitHere46","9415750splitHere46","FileWriter fileWriter = new FileWriter(fileLocation, false);<newline46mondego>"
"374splitHere46","9415750splitHere46","FileWriter fileWriter = new FileWriter(fileLocation, true);<newline46mondego>"
"375splitHere46","9415762splitHere46","KeyGenerator kgen = KeyGenerator.getInstance(<doubleQuotes46>AES<doubleQuotes46>);<newline46mondego>kgen.init(128);  // or 192 or 256<newline46mondego>SecretKey skey = kgen.generateKey();<newline46mondego>byte[] raw = skey.getEncoded();<newline46mondego>SecretKeySpec skeySpec = new SecretKeySpec(raw, <doubleQuotes46>AES<doubleQuotes46>);<newline46mondego>"
"376splitHere46","9415786splitHere46","Cache"
"377splitHere46","9415786splitHere46","cleanUp()"
"378splitHere46","9415786splitHere46","size"
"379splitHere46","9415830splitHere46","spinner.setOnItemSelectedListener(new OnItemSelectedListener() {<newline46mondego><newline46mondego>                    @Override<newline46mondego>                    public void onItemSelected(AdapterView<?> arg0, View arg1,<newline46mondego>                            int arg2, long arg3) {<newline46mondego>                        spinner.setSelection(2);<newline46mondego><newline46mondego>                    }<newline46mondego><newline46mondego>                    @Override<newline46mondego>                    public void onNothingSelected(AdapterView<?> arg0) {<newline46mondego>                        // TODO Auto-generated method stub<newline46mondego><newline46mondego>                    }<newline46mondego>                });<newline46mondego>"
"380splitHere46","9415853splitHere46","import java.awt.Component;<newline46mondego>import java.awt.Container;<newline46mondego>import java.awt.Dimension;<newline46mondego>import java.awt.FlowLayout;<newline46mondego>import java.awt.Point;<newline46mondego>import java.awt.event.ActionEvent;<newline46mondego><newline46mondego>import javax.swing.*;<newline46mondego><newline46mondego>@SuppressWarnings(<doubleQuotes46>serial<doubleQuotes46>)<newline46mondego>public class DisableEg extends JPanel {<newline46mondego>   public static final String DISABLE_DIALOG_COMPONENTS = <doubleQuotes46>Disable Dialog Components<doubleQuotes46>;<newline46mondego>   public static final String ENABLE_DIALOG_COMPONENTS = <doubleQuotes46>Enable Dialog Components<doubleQuotes46>;<newline46mondego>   public static final String DISABLE_DIALOG = <doubleQuotes46>Disable Dialog<doubleQuotes46>;<newline46mondego>   public static final String ENABLE_DIALOG = <doubleQuotes46>Enable Dialog<doubleQuotes46>;<newline46mondego>   private static final int LOC_SHIFT = 150;<newline46mondego>   private Analyzer analyzer;<newline46mondego><newline46mondego>   public DisableEg(JFrame frame) {<newline46mondego>      analyzer = new Analyzer(frame);<newline46mondego>      analyzer.pack();<newline46mondego>      analyzer.setLocationRelativeTo(frame);<newline46mondego>      Point location = analyzer.getLocation();<newline46mondego>      location = new Point(location.x - LOC_SHIFT, location.y - LOC_SHIFT);<newline46mondego>      analyzer.setLocation(location);<newline46mondego>      analyzer.setVisible(true);<newline46mondego><newline46mondego>      add(new JButton(new AbstractAction(DISABLE_DIALOG_COMPONENTS) {<newline46mondego><newline46mondego>         @Override<newline46mondego>         public void actionPerformed(ActionEvent evt) {<newline46mondego>            AbstractButton btn = (AbstractButton) evt.getSource();<newline46mondego>            if (btn.getText().equals(DISABLE_DIALOG_COMPONENTS)) {<newline46mondego>               btn.setText(ENABLE_DIALOG_COMPONENTS);<newline46mondego>               analyzer.setComponentEnabled(false);<newline46mondego>            } else {<newline46mondego>               btn.setText(DISABLE_DIALOG_COMPONENTS);<newline46mondego>               analyzer.setComponentEnabled(true);<newline46mondego>            }<newline46mondego>         }<newline46mondego>      }));<newline46mondego>      add(new JButton(new AbstractAction(DISABLE_DIALOG) {<newline46mondego><newline46mondego>         @Override<newline46mondego>         public void actionPerformed(ActionEvent evt) {<newline46mondego>            AbstractButton btn = (AbstractButton) evt.getSource();<newline46mondego>            if (btn.getText().equals(DISABLE_DIALOG)) {<newline46mondego>               btn.setText(ENABLE_DIALOG);<newline46mondego>               analyzer.setEnabled(false);<newline46mondego>            } else {<newline46mondego>               btn.setText(DISABLE_DIALOG);<newline46mondego>               analyzer.setEnabled(true);<newline46mondego>            }<newline46mondego>         }<newline46mondego>      }));<newline46mondego>   }<newline46mondego><newline46mondego>   private static void createAndShowGui() {<newline46mondego>      JFrame frame = new JFrame(<doubleQuotes46>Disable Example<doubleQuotes46>);<newline46mondego>      DisableEg mainPanel = new DisableEg(frame);<newline46mondego><newline46mondego>      frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>      frame.getContentPane().add(mainPanel);<newline46mondego>      frame.pack();<newline46mondego>      frame.setLocationRelativeTo(null);<newline46mondego>      frame.setVisible(true);<newline46mondego>   }<newline46mondego><newline46mondego>   public static void main(String[] args) {<newline46mondego>      SwingUtilities.invokeLater(new Runnable() {<newline46mondego>         public void run() {<newline46mondego>            createAndShowGui();<newline46mondego>         }<newline46mondego>      });<newline46mondego>   }<newline46mondego>}<newline46mondego><newline46mondego>@SuppressWarnings(<doubleQuotes46>serial<doubleQuotes46>)<newline46mondego>class Analyzer extends JDialog {<newline46mondego><newline46mondego>   public Analyzer(JFrame frame) {<newline46mondego>      super(frame, <doubleQuotes46>Analyzer Dialog<doubleQuotes46>, false);<newline46mondego>      JButton but = new JButton(<doubleQuotes46>test<doubleQuotes46>);<newline46mondego>      setLayout(new FlowLayout());<newline46mondego><newline46mondego>      add(but);<newline46mondego>      setPreferredSize(new Dimension(200, 200));<newline46mondego>   }<newline46mondego><newline46mondego>   public void setComponentEnabled(boolean enabled) {<newline46mondego>      setComponentEnabled(enabled, getContentPane());<newline46mondego><newline46mondego>      // !! if you have menus to disable, you may need instead<newline46mondego>      // setComponentEnabled(enabled, this); // !!<newline46mondego>   }<newline46mondego><newline46mondego>   private void setComponentEnabled(boolean enabled, Component component) {<newline46mondego>      component.setEnabled(enabled);<newline46mondego>      if (component instanceof Container) {<newline46mondego>         Component[] components = ((Container) component).getComponents();<newline46mondego>         if (components != null && components.length > 0) {<newline46mondego>            for (Component heldComponent : components) {<newline46mondego>               setComponentEnabled(enabled, heldComponent);<newline46mondego>            }<newline46mondego>         }<newline46mondego>      }<newline46mondego>   }<newline46mondego><newline46mondego>}<newline46mondego>"
"381splitHere46","9415867splitHere46","import java.lang.reflect.*;<newline46mondego><%<newline46mondego>//getMethod expects method name along with the type of arguments - in this example it's expecting single parameter of type String<newline46mondego>Method m = PortletBeanLocatorUtil.locate(<doubleQuotes46>another-web-app-portlet<doubleQuotes46>).getClass().getMethod(<doubleQuotes46>myMethod<doubleQuotes46>, String.Class ...)<newline46mondego><newline46mondego>m.invoke(PortletBeanLocatorUtil.locate(<doubleQuotes46>another-web-app-portlet<doubleQuotes46>), new Object[] { new String(<doubleQuotes46>blah<doubleQuotes46>) });<newline46mondego>%><newline46mondego>"
"382splitHere46","9415995splitHere46","string.replaceAll(<doubleQuotes46>(<\\w+)[^>]*(>)<doubleQuotes46>, <doubleQuotes46>$1$2<doubleQuotes46>);<newline46mondego>"
"383splitHere46","9415995splitHere46","<div"
"384splitHere46","9415995splitHere46",">"
"385splitHere46","9415995splitHere46","replaceAll"
"386splitHere46","9415995splitHere46","$1$2"
"387splitHere46","9416098splitHere46","n"
"388splitHere46","9416098splitHere46","n"
"389splitHere46","9416098splitHere46","n"
"390splitHere46","9416098splitHere46","n-1"
"391splitHere46","9416098splitHere46","permute"
"392splitHere46","9416098splitHere46","List permute (Array digits)<newline46mondego>{<newline46mondego>  List permutations = /* initialize an empty list */<newline46mondego><newline46mondego>  for (i=0; i<n; i++)<newline46mondego>    {<newline46mondego>      firstDigit = digit[i];<newline46mondego>      Array otherDigits = /* array containing all digits except firstDigit.  */<newline46mondego>      List subPermutations = permute(otherDigits);<newline46mondego>      /* prepend firstDigit into each element of 'subPermutations' */<newline46mondego>      /* add all elements of 'subPermutations' to the list 'permutations' */<newline46mondego>    }<newline46mondego>  return permutations;<newline46mondego>}<newline46mondego>"
"393splitHere46","9416098splitHere46","permute"
"394splitHere46","9416098splitHere46","permute"
"395splitHere46","9416125splitHere46","-d"
"396splitHere46","9416166splitHere46","public String threadExample() {<newline46mondego>    MyThread m1 = new MyThread();<newline46mondego>    // I would not start in the thread constructor<newline46mondego>    m1.start();<newline46mondego>    m1.join();<newline46mondego>    return m1.errors;<newline46mondego>}<newline46mondego>"
"397splitHere46","9416166splitHere46","volatile"
"398splitHere46","9416166splitHere46","volatile String errors;<newline46mondego>"
"399splitHere46","9416166splitHere46","AtomicReference"
"400splitHere46","9416166splitHere46","synchronized"
"401splitHere46","9416248splitHere46","<doubleQuotes46>^/*<doubleQuotes46>"
"402splitHere46","9416248splitHere46","<doubleQuotes46>//<doubleQuotes46>"
"403splitHere46","9416248splitHere46","str = str.replaceFirst(<doubleQuotes46>^/*<doubleQuotes46>, <doubleQuotes46>//<doubleQuotes46>);<newline46mondego>"
"404splitHere46","9416292splitHere46","super"
"405splitHere46","9416301splitHere46","// Draw both Text and Block with transparency<newline46mondego>DrawPartition part1 = new DrawPartition(Color.blue, 0, 0, 110, 100, <doubleQuotes46>part1<doubleQuotes46>);<newline46mondego>part1.setBounds(5, 5, 110, 100);<newline46mondego><newline46mondego>DrawJob job1 = new DrawJob(Color.green, 0, 0, 110, 100, <doubleQuotes46>Job 1<doubleQuotes46>);<newline46mondego>job1.setBounds(5, 15, 110, 100);<newline46mondego>snapPanel.add(job1);<newline46mondego><newline46mondego>snapPanel.add(part1);<newline46mondego>"
"406splitHere46","9416426splitHere46","public static void main(String[] args) throws Exception {<newline46mondego>    BufferedImage buf=null;<newline46mondego>    try {<newline46mondego>        buf = ImageIO.read(new File(<doubleQuotes46>estbest.jpg<doubleQuotes46>));<newline46mondego>    } catch (Exception e) {<newline46mondego>        System.out.println(e.getMessage());<newline46mondego>    }<newline46mondego>    new ImageFrame(buf, <doubleQuotes46>Input Image <doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"407splitHere46","9416426splitHere46","public class ImageFrame extends JFrame {<newline46mondego>    BufferedImage image;<newline46mondego><newline46mondego>    public ImageFrame(final BufferedImage image) {<newline46mondego>        this(image, <doubleQuotes46>No Title<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    public ImageFrame(final BufferedImage image, final String title) {<newline46mondego>        this.image = image;<newline46mondego>        SwingUtilities.invokeLater(new Runnable() {<newline46mondego>            public void run() {<newline46mondego>                if (image != null) {<newline46mondego>                    setSize(image.getWidth(null), image.getHeight(null));<newline46mondego>                } else {<newline46mondego>                    setSize(250, 90);<newline46mondego>                }<newline46mondego>                setTitle(title);<newline46mondego>                setVisible(true);<newline46mondego>                repaint();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>    public void paint(Graphics g) {<newline46mondego>        if (image == null) {<newline46mondego>            g.setColor(Color.BLACK);<newline46mondego>            g.fillRect(0, 0, 250, 90);<newline46mondego>            System.out.println(<doubleQuotes46>image null<doubleQuotes46>);<newline46mondego>            g.setFont(new Font(<doubleQuotes46>Arial<doubleQuotes46>, Font.BOLD, 24));<newline46mondego>            g.setColor(Color.RED);<newline46mondego>            g.drawString(<doubleQuotes46>Invalid or No Image<doubleQuotes46>, 10, 50);<newline46mondego>        } else {<newline46mondego>            g.drawImage(image, 0, 0, null);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"408splitHere46","9416440splitHere46","public class A<T> {<newline46mondego>    Map<String,Field> m;<newline46mondego>}<newline46mondego>"
"409splitHere46","9416440splitHere46","public class A {<newline46mondego>    Map m;<newline46mondego>}<newline46mondego>"
"410splitHere46","9416541splitHere46","@Qualifier"
"411splitHere46","9416541splitHere46","OptionalBean"
"412splitHere46","9416541splitHere46","@Autowired<newline46mondego>@Qualifier(<doubleQuotes46>optional1<doubleQuotes46>)  // or optional2<newline46mondego>private OptionalBean optional;<newline46mondego>"
"413splitHere46","9416541splitHere46","@Autowired<newline46mondego>@Qualifier(<doubleQuotes46>optional1<doubleQuotes46>)  // or optional2<newline46mondego>public void setOptional( OptionalBean optional ) {<newline46mondego>    this.optional = optional;<newline46mondego>}<newline46mondego>"
"414splitHere46","9416550splitHere46","@Entity<newline46mondego>public class SomeEntity {<newline46mondego>    @Id<newline46mondego>    private int id;<newline46mondego><newline46mondego>    @Column(name=<doubleQuotes46>DATE_CREATED<doubleQuotes46>)<newline46mondego>    @Temporal(TemporalType.TIMESTAMP)<newline46mondego>    private java.util.Date dateCreated;<newline46mondego><newline46mondego>    public SomeEntity(int id, Date dateCreated) {<newline46mondego>        this.id = id;<newline46mondego>        this.dateCreated = dateCreated;<newline46mondego>    }<newline46mondego>    public SomeEntity() {<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"415splitHere46","9416550splitHere46","CREATE TABLE  `test`.`SOMEENTITY` (<newline46mondego>  `ID` int(11) NOT NULL,<newline46mondego>  `DATE_CREATED` datetime DEFAULT NULL,<newline46mondego>  PRIMARY KEY (`ID`)<newline46mondego>) ENGINE=innoDB DEFAULT CHARSET=utf8<newline46mondego>"
"416splitHere46","9416550splitHere46","java.util.Date now = new Date();<newline46mondego>SomeEntity se = new SomeEntity(1, now);<newline46mondego>em.persist(se);<newline46mondego>"
"417splitHere46","9416574splitHere46","D:\Workspace\Test\bin>java -classpath .;D:\FatWire\JSK\7.6.0\App_Server\apache-tomcat-6.0.18\webapps\cs\WEB-INF\lib\cs.jar com.xmlpost.XmlPostInit<newline46mondego>"
"418splitHere46","9416622splitHere46","abstract class SuperClass<newline46mondego>{<newline46mondego>    public abstract void CreateDatabaseTables();<newline46mondego>}<newline46mondego><newline46mondego>class SubClassA extends SuperClass<newline46mondego>{<newline46mondego>    public void CreateDatabaseTables() { /*do whatever*/ }<newline46mondego>}<newline46mondego>class SubClassB extends SuperClass<newline46mondego>{<newline46mondego>    public void CreateDatabaseTables() { /*do whatever else*/ }<newline46mondego>}<newline46mondego>"
"419splitHere46","9416622splitHere46","// Collection<SuperClass> superClassInstance;<newline46mondego>// you can populate superClassInstance with objects of type<newline46mondego>// SubClassA or SubClassB<newline46mondego>for (int i = 0; i < superClassInstance.length; i++)<newline46mondego>{<newline46mondego>    superClassInstance[i].CreateDatabaseTables();<newline46mondego>}<newline46mondego>"
"420splitHere46","9416750splitHere46","sql_op = <doubleQuotes46>create table <doubleQuotes46> + table + <doubleQuotes46>(<doubleQuotes46> + table_def + <doubleQuotes46>)<doubleQuotes46>;<newline46mondego>st.executeUpdate(sql_op);<newline46mondego>"
"421splitHere46","9416750splitHere46","sql_op = <doubleQuotes46>create table <doubleQuotes46> + table + <doubleQuotes46>(<doubleQuotes46> + table_def + <doubleQuotes46>)<doubleQuotes46>;<newline46mondego>System.out.println(<doubleQuotes46>Attempting to execute SQL: <doubleQuotes46> + sql_op);<newline46mondego>st.executeUpdate(sql_op);<newline46mondego>"
"422splitHere46","9416750splitHere46","mysql.memos=id integer auto_increment primary key not null,\<newline46mondego>title varchar(80) not null,<newline46mondego>timeStamp datetime not null,\<newline46mondego>content text<newline46mondego>"
"423splitHere46","9416750splitHere46","\"
"424splitHere46","9416750splitHere46",","
"425splitHere46","9416750splitHere46","mysql.memos=id integer auto_increment primary key not null,\<newline46mondego>title varchar(80) not null,\<newline46mondego>timeStamp datetime not null,\<newline46mondego>content text<newline46mondego>"
"426splitHere46","9416758splitHere46","ListStore"
"427splitHere46","9416758splitHere46","store.addAll(selected)"
"428splitHere46","9416758splitHere46","store.clear()"
"429splitHere46","9416758splitHere46","store.add(selected)"
"430splitHere46","9416758splitHere46","store.removeAll()"
"431splitHere46","9416758splitHere46","Events.SelectionChange"
"432splitHere46","9416758splitHere46","SelectionModel"
"433splitHere46","9416758splitHere46","HasSelectionHandlers"
"434splitHere46","9416771splitHere46","ObjectOutputStream"
"435splitHere46","9416771splitHere46","ObjectInputStream"
"436splitHere46","9416771splitHere46","OutputStream stream = response.getOutputStream();<newline46mondego>stream.write(expl.getBytes(<doubleQuotes46>UTF-8<doubleQuotes46>));<newline46mondego>"
"437splitHere46","9416771splitHere46","OutputStream stream = response.getOutputStream();<newline46mondego>OutputStreamWriter writer = new OutputStreamWriter(stream, <doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>writer.write(expl);<newline46mondego>writer.flush(); // flush text data from writer to stream<newline46mondego>"
"438splitHere46","9416771splitHere46","text/plain"
"439splitHere46","9416771splitHere46","response"
"440splitHere46","9416771splitHere46","response.setCharacterEncoding(<doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>PrintWriter writer = response.getWriter();<newline46mondego>writer.write(expl);<newline46mondego>"
"441splitHere46","9416799splitHere46","MagicBallImage"
"442splitHere46","9416799splitHere46","static"
"443splitHere46","9416830splitHere46","/**<newline46mondego> * <newline46mondego> */<newline46mondego><newline46mondego><newline46mondego>/**<newline46mondego> * @author The Elite Gentleman<newline46mondego> *<newline46mondego> */<newline46mondego>public class Test {<newline46mondego><newline46mondego>    /**<newline46mondego>     * @param args<newline46mondego>     */<newline46mondego>    public static void main(String[] args) {<newline46mondego>        // TODO Auto-generated method stub<newline46mondego>        Class<? extends Exception>[] classes = new Class<? extends Exception>[5];<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"444splitHere46","9416830splitHere46","Class<? >[] classes = new Class<?>[5];<newline46mondego>"
"445splitHere46","9417188splitHere46","String tokens[]=pprice.split(<doubleQuotes46>.<doubleQuotes46>);<newline46mondego>"
"446splitHere46","9417188splitHere46","String tokens[]=pprice.split(<doubleQuotes46>\\.<doubleQuotes46>);<newline46mondego>"
"447splitHere46","9417199splitHere46","import java.lang.reflect.ParameterizedType;<newline46mondego><newline46mondego><newline46mondego>public class GenericClass<T> {<newline46mondego><newline46mondego>    public GenericClass() {<newline46mondego>        System.out.println(getClass().getGenericSuperclass()); //output: GenericClass<Foo><newline46mondego>        System.out.println(((ParameterizedType)getClass().getGenericSuperclass()).getActualTypeArguments()[0]); //output: class Foo<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        new ChildClass();<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"448splitHere46","9417199splitHere46","import java.lang.reflect.ParameterizedType;<newline46mondego><newline46mondego><newline46mondego>public class ChildClass extends GenericClass<Foo> {<newline46mondego><newline46mondego>    public ChildClass() {<newline46mondego>        System.out.println(((ParameterizedType) getClass().getGenericSuperclass()).getActualTypeArguments()[0]); //output: class Foo<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"449splitHere46","9417314splitHere46","Thread.sleep()"
"450splitHere46","9417349splitHere46","String tmp = source.toString();<newline46mondego>String prefix = tmp.substring(0, start-1);<newline46mondego>String suffix = tmp.substring(end+1);<newline46mondego>String middle = tmp.substring(start, end).replaceAll(<doubleQuotes46>\\s<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>CharSequence res = prefix + middle + suffix;<newline46mondego>"
"451splitHere46","9417354splitHere46","Element#ownText()"
"452splitHere46","9417354splitHere46","Element#text()"
"453splitHere46","9417354splitHere46","String s = document.select(<doubleQuotes46>h2.link.title a[href]<doubleQuotes46>).first().ownText();<newline46mondego>"
"454splitHere46","9417354splitHere46","h2.link.title"
"455splitHere46","9417354splitHere46","<h2>"
"456splitHere46","9417354splitHere46","link"
"457splitHere46","9417354splitHere46","title"
"458splitHere46","9417435splitHere46","solo.waitForDialogToClose() //waits for the dialog to close<newline46mondego>solo.waitForActivity() // if there is a activity change<newline46mondego>solo.waitForText() //if a certain text appears after the loading is done<newline46mondego>solo.waitForView() //if a certain view is shown after the load screen is done.<newline46mondego>"
"459splitHere46","9417580splitHere46","public class jsTesting {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        String html = <doubleQuotes46><p>An <a href='http://example.com/'><b>example</b></a> link and after that is a second link called <a href='http://example2.com/'><b>example2</b></a></p><doubleQuotes46>;<newline46mondego>        Elements links = Jsoup.parse(html).select(<doubleQuotes46>a[href]<doubleQuotes46>); // a with href;<newline46mondego>        for (Element link : links) {<newline46mondego>            //Do whatever you want here<newline46mondego>            System.out.println(<doubleQuotes46>Link Attr : <doubleQuotes46> + link.attr(<doubleQuotes46>abs:href<doubleQuotes46>));<newline46mondego>            System.out.println(<doubleQuotes46>Link Text : <doubleQuotes46> + link.text());    <newline46mondego>        }       <newline46mondego>    }<newline46mondego>}<newline46mondego>"
"460splitHere46","9417836splitHere46","if (dimg instanceof BufferedImage) {<newline46mondego>    dimg = (BufferedImage) dimg.getScaledInstance(200, 200, Image.SCALE_SMOOTH);<newline46mondego>}<newline46mondego>"
"461splitHere46","9417864splitHere46","[ERROR] Failed to execute goal org.apache.maven.plugins:maven-dependency-plugin:2.3:unpack (unpack-pinkcommon-tools) on project pinkcommon-ejb: Error unpacking file: C:\cygwin\home\GIT\trunk\pinkcommo<newline46mondego>n\pinkcommon-tools\target\classes to: C:\cygwin\home\GIT\trunk\pinkcommon\pinkcommon-ejb\target\classes<newline46mondego>[ERROR] org.codehaus.plexus.archiver.ArchiverException: The source must not be a directory.<newline46mondego>"
"462splitHere46","9417965splitHere46","frame.setVisible(true);<newline46mondego>"
"463splitHere46","9417965splitHere46","main method"
"464splitHere46","9417965splitHere46","Swing GUI"
"465splitHere46","9417965splitHere46","main method"
"466splitHere46","9418245splitHere46","Lists.newArrayList(Lists.transform(...))<newline46mondego>"
"467splitHere46","9418245splitHere46","ImmutableList.copyOf(Lists.transform(...))<newline46mondego>"
"468splitHere46","9418396splitHere46","@Spy MyView view = new MyView(paramA, paramB);<newline46mondego>"
"469splitHere46","9418396splitHere46","@Spy MyView view = new MyView();<newline46mondego>@Spy MyView view; // equivalent, mockito will call the default constructor<newline46mondego>"
"470splitHere46","9418546splitHere46","Class"
"471splitHere46","9418546splitHere46","Runnable"
"472splitHere46","9418546splitHere46","Runnable"
"473splitHere46","9418546splitHere46","Socket"
"474splitHere46","9418546splitHere46","class Socket{<newline46mondego>    private void startThreads() {<newline46mondego>          new Thread(new Th1()).start();<newline46mondego>          new Thread(new Th2()).start();<newline46mondego><newline46mondego>    }<newline46mondego>}<newline46mondego>class Th1 implements Runnable {<newline46mondego>    @Override<newline46mondego>    public void run() {<newline46mondego>        fucn1();<newline46mondego>    }<newline46mondego>}<newline46mondego>class Th2 implements Runnable {<newline46mondego>    @Override<newline46mondego>    public void run() {<newline46mondego>        fucn2();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"475splitHere46","9418609splitHere46","Swing GUI"
"476splitHere46","9418609splitHere46","AWT Component"
"477splitHere46","9418667splitHere46","protected CamelContext createCamelContext() throws Exception {<newline46mondego>    CamelContext camelContext = super.createCamelContext();<newline46mondego>    String url = <doubleQuotes46>vm://test-broker?broker.persistent=false&broker.useJmx=false<doubleQuotes46>;<newline46mondego>    ConnectionFactory connectionFactory = new ActiveMQConnectionFactory(url);<newline46mondego>    camelContext.addComponent(<doubleQuotes46>activemq<doubleQuotes46>, JmsComponent.jmsComponentAutoAcknowledge(connectionFactory));<newline46mondego>    return camelContext;<newline46mondego>}<newline46mondego>"
"478splitHere46","9418702splitHere46","transient"
"479splitHere46","9418702splitHere46","volatile"
"480splitHere46","9418702splitHere46","volatile"
"481splitHere46","9418702splitHere46","private static final ClassUtils classUtils = new ClassUtils();"
"482splitHere46","9418702splitHere46","return classUtils;"
"483splitHere46","9418702splitHere46","final"
"484splitHere46","9418702splitHere46","getObjectLock()"
"485splitHere46","9418702splitHere46","this"
"486splitHere46","9418702splitHere46","getResolvedClassname"
"487splitHere46","9418702splitHere46","synchronized"
"488splitHere46","9418702splitHere46","java.util.concurrent.Lock"
"489splitHere46","9418702splitHere46","Object"
"490splitHere46","9418811splitHere46","static Runnable myThread = new Runnable() {<newline46mondego>  public void run() {<newline46mondego>    for (;;) {<newline46mondego>      try {<newline46mondego>        ...<newline46mondego>      } catch(Exception e) {<newline46mondego>        ...<newline46mondego>      }<newline46mondego>    }<newline46mondego>  } <newline46mondego>}<newline46mondego>"
"491splitHere46","9418993splitHere46","EasyMock.verify(myDAO)"
"492splitHere46","9418993splitHere46","myTestMethod"
"493splitHere46","9418993splitHere46","myDAO"
"494splitHere46","9418993splitHere46","findMyObjects"
"495splitHere46","9418993splitHere46","times(1)"
"496splitHere46","9419032splitHere46","[a,b,p]"
"497splitHere46","9419032splitHere46","p"
"498splitHere46","9419032splitHere46","(ab) * h /2"
"499splitHere46","9419032splitHere46","h"
"500splitHere46","9419032splitHere46","p"
"501splitHere46","9419032splitHere46","ab"
"502splitHere46","9419032splitHere46","ab"
"503splitHere46","9419032splitHere46","h"
"504splitHere46","9419032splitHere46","T=(1/2)* abs((x_a - x_p) * (y_b-y_a) - (x_a - x_b)* (y_p - y_a))<newline46mondego>"
"505splitHere46","9419032splitHere46","x_a,x_b,x_p"
"506splitHere46","9419032splitHere46","y_a,y_b,y_p"
"507splitHere46","9419032splitHere46","x,y"
"508splitHere46","9419032splitHere46","a,b,p"
"509splitHere46","9419113splitHere46","abstract class Animal<T extends Animal<T>> {<newline46mondego>    abstract void sonOf(T son);<newline46mondego>}<newline46mondego><newline46mondego>final class Dog extends Animal<Dog> {<newline46mondego>    void sonOf(Dog dog) { ... }<newline46mondego>}<newline46mondego><newline46mondego>final class Cat extends Animal<Cat> {<newline46mondego>    void sonOf(Cat cat) { ... }<newline46mondego>}<newline46mondego>"
"510splitHere46","9419113splitHere46","final Cat mom = new Cat();<newline46mondego>final Cat child = new Cat();<newline46mondego><newline46mondego>child.sonOf(mom);<newline46mondego><newline46mondego>final Dog dad = new Dog();<newline46mondego>child.sonOf(dad);          // <doubleQuotes46>The method sonOf(Cat) in the type Cat is not applicable for the arguments (Dog)<doubleQuotes46><newline46mondego>"
"511splitHere46","9419132splitHere46","Thread 1: set(5) // now count is 5<newline46mondego>Thread 1: get() // Thread 1 gets 5<newline46mondego>Thread 2: get() // Thread 2 gets 5<newline46mondego>Thread 2: increments its local copy of count to 6<newline46mondego>Thread 1: increments its local copy of count to 6<newline46mondego>Thread 2: set(6) // now the count is 6<newline46mondego>Thread 1: set(6) // the count is still 6, but it should be 7!!!<newline46mondego>"
"512splitHere46","9419132splitHere46","public synchronized void increment()<newline46mondego>{<newline46mondego>    count++;<newline46mondego>}<newline46mondego>"
"513splitHere46","9419132splitHere46","AtomicInteger"
"514splitHere46","9419132splitHere46","AtomicInteger count = new AtomicInteger(0);<newline46mondego><newline46mondego>public int getCount()<newline46mondego>{<newline46mondego>    return count.get();<newline46mondego>}<newline46mondego><newline46mondego>public void increment()<newline46mondego>{<newline46mondego>    count.incrementAndGet();<newline46mondego>}<newline46mondego>"
"515splitHere46","9419132splitHere46","DownloadCounter"
"516splitHere46","9419156splitHere46","<xsl:if test=<doubleQuotes46>first<doubleQuotes46>><newline46mondego>"
"517splitHere46","9419211splitHere46","if (currentState == COUNTING)<newline46mondego>  {<newline46mondego>    for (int i = 0; i < 99; i++)<newline46mondego>    {<newline46mondego>      value = i;<newline46mondego>      return value;<newline46mondego>    }<newline46mondego>// right here<newline46mondego>}<newline46mondego>"
"518splitHere46","9419211splitHere46","i"
"519splitHere46","9419449splitHere46","document1.getCategories().get(0)...<newline46mondego>"
"520splitHere46","9419449splitHere46","category1.getDocuments().get(0)...<newline46mondego>"
"521splitHere46","9419449splitHere46","private ArrayList<String> category;<newline46mondego>"
"522splitHere46","9419449splitHere46","private List<String> category = new ArrayList<String>();<newline46mondego>"
"523splitHere46","9419665splitHere46","<%@taglib prefix=<doubleQuotes46>s<doubleQuotes46> uri=<doubleQuotes46>/struts-tags<doubleQuotes46>%><newline46mondego><%@page contentType=<doubleQuotes46>text/html<doubleQuotes46> pageEncoding=<doubleQuotes46>UTF-8<doubleQuotes46>%><newline46mondego><!DOCTYPE html><newline46mondego><html><newline46mondego>    <body><newline46mondego>        <h1>Input Test</h1><newline46mondego>        <s:form action=<doubleQuotes46>test<doubleQuotes46>><newline46mondego>            <s:textfield size=<doubleQuotes46>40<doubleQuotes46> name=<doubleQuotes46>myMap[1]<doubleQuotes46>></s:textfield><br/><newline46mondego>            <s:textfield size=<doubleQuotes46>40<doubleQuotes46> name=<doubleQuotes46>myMap[2]<doubleQuotes46>></s:textfield><br/><newline46mondego>            <s:textfield size=<doubleQuotes46>40<doubleQuotes46> name=<doubleQuotes46>myMap[33]<doubleQuotes46>></s:textfield><br/><newline46mondego>            <s:textfield size=<doubleQuotes46>40<doubleQuotes46> name=<doubleQuotes46>myMap[444]<doubleQuotes46>></s:textfield><br/><newline46mondego>            <s:textfield size=<doubleQuotes46>40<doubleQuotes46> name=<doubleQuotes46>myMap[999]<doubleQuotes46>></s:textfield><br/><newline46mondego>            <s:submit/><newline46mondego>        </s:form><newline46mondego>    </body><newline46mondego></html><newline46mondego>"
"524splitHere46","9419665splitHere46","package com.quaternion.struts2basic.action.test;<newline46mondego><newline46mondego>import com.opensymphony.xwork2.ActionSupport;<newline46mondego>import java.util.HashMap;<newline46mondego>import java.util.Map;<newline46mondego><newline46mondego>public class Test extends ActionSupport{<newline46mondego>    //public to make example shorter<newline46mondego>    public Map<Integer, String> myMap = new HashMap<Integer, String>();<newline46mondego><newline46mondego>    public String exectute(){<newline46mondego>        return SUCCESS;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"525splitHere46","9419665splitHere46","<s:textfield size=<doubleQuotes46>40<doubleQuotes46> name=<doubleQuotes46>myMap[1]<doubleQuotes46>></s:textfield><br/><newline46mondego>"
"526splitHere46","9419665splitHere46","<input type=<doubleQuotes46>text<doubleQuotes46> name=<doubleQuotes46>myMap[&quot;1&quot;]<doubleQuotes46> size=<doubleQuotes46>40<doubleQuotes46> value=<doubleQuotes46><doubleQuotes46> id=<doubleQuotes46>test_myMap_&quot;444&quot;_<doubleQuotes46>/><br/><newline46mondego>"
"527splitHere46","9419769splitHere46","Math.atan((double)opposite/adjacent);<newline46mondego>"
"528splitHere46","9419889splitHere46","SOAPEnvelope envelope = soapPart.getEnvelope();<newline46mondego>SOAPElement userNameToken = envelope.getHeader().addChildElement(<doubleQuotes46>Usernametoken<doubleQuotes46>, WSSE_NS_PREFIX, WSSE_NS);<newline46mondego>SOAPElement user = userNameToken.addChildElement(<doubleQuotes46>UserName<doubleQuotes46>, WSSE_NS_PREFIX, WSSE_NS);<newline46mondego>"
"529splitHere46","9419937splitHere46","^(\d+(~\d)*)*$<newline46mondego>"
"530splitHere46","9419975splitHere46","try {<newline46mondego>    DesiredClass.class.getMethod(<doubleQuotes46>desiredMethod<doubleQuotes46>, <parameter types...>)<newline46mondego>    // Do 1.6 things<newline46mondego>}<newline46mondego>catch (NoSuchMethodException e) {<newline46mondego>    // Do 1.5 things<newline46mondego>}<newline46mondego>"
"531splitHere46","9420002splitHere46","findShortestPath(source,target):<newline46mondego>  queue<- new queue<newline46mondego>  visited <- {}<newline46mondego>  Map<point,point> parents <- empty map<newline46mondego>  queue.push(source)<newline46mondego>  while (queue.empty() == false): <newline46mondego>     current <- queue.takeFirst()<newline46mondego>     if (current.equals(source)):<newline46mondego>         extract the path from source to destination using the map parents(*)<newline46mondego>         return<newline46mondego>     visited.add(current)<newline46mondego>     for each p such that p and current are neighbors: //insert neighbors to queue<newline46mondego>          if p is not in visited: <newline46mondego>                if (p is not an obstacle):<newline46mondego>                   queue.push(p)<newline46mondego>                   parents.put(p,current) //current is the parent of p<newline46mondego>"
"532splitHere46","9420002splitHere46","current <- parent.get(current)"
"533splitHere46","9420002splitHere46","null"
"534splitHere46","9420040splitHere46","Intent i = new Intent(Intent.ACTION_MEDIA_BUTTON);<newline46mondego>synchronized (this) {<newline46mondego>            i.putExtra(Intent.EXTRA_KEY_EVENT, new KeyEvent(KeyEvent.ACTION_DOWN,KeyEvent.KEYCODE_MEDIA_NEXT));<newline46mondego>            sendOrderedBroadcast(i, null);<newline46mondego><newline46mondego>            i.putExtra(Intent.EXTRA_KEY_EVENT, new KeyEvent(KeyEvent.ACTION_UP,     KeyEvent.KEYCODE_MEDIA_NEXT));<newline46mondego>            sendOrderedBroadcast(i, null);<newline46mondego> }<newline46mondego>"
"535splitHere46","9420147splitHere46","DefaultListModel"
"536splitHere46","9420147splitHere46","fireContentsChanged"
"537splitHere46","9420147splitHere46","DefaultListModel"
"538splitHere46","9420147splitHere46","updateUI"
"539splitHere46","9420191splitHere46","k--"
"540splitHere46","9420191splitHere46","cellList.add(cells[i+k])"
"541splitHere46","9420310splitHere46","ArrayAdapter"
"542splitHere46","9420310splitHere46","ArrayAdapter<String>(Context, R.layout.aligned_right, values);<newline46mondego>"
"543splitHere46","9420310splitHere46","R.layout.aligned_right"
"544splitHere46","9420310splitHere46","<TextView xmlns:android=<doubleQuotes46>http://schemas.android.com/apk/res/android<doubleQuotes46><newline46mondego>    android:id=<doubleQuotes46>@android:id/text1<doubleQuotes46> <newline46mondego>    android:layout_width=<doubleQuotes46>fill_parent<doubleQuotes46>  <newline46mondego>    android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46>                    <newline46mondego>    android:textAppearance=<doubleQuotes46>?android:attr/textAppearanceLarge<doubleQuotes46> <newline46mondego>    android:paddingLeft=<doubleQuotes46>6dip<doubleQuotes46><newline46mondego>    android:minHeight=<doubleQuotes46>?android:attr/listPreferredItemHeight<doubleQuotes46><newline46mondego>    android:gravity=<doubleQuotes46>right<doubleQuotes46>/><newline46mondego>"
"545splitHere46","9420369splitHere46","'from'"
"546splitHere46","9420612splitHere46","FileInputStream"
"547splitHere46","9420612splitHere46","Cipher"
"548splitHere46","9420943splitHere46","ProgressMonitorInputStream"
"549splitHere46","9421018splitHere46","validate"
"550splitHere46","9421063splitHere46","SimpleAdapter"
"551splitHere46","9421063splitHere46","View.OnClickListener"
"552splitHere46","9421063splitHere46","this"
"553splitHere46","9421063splitHere46","OnClickListener"
"554splitHere46","9421063splitHere46","Context"
"555splitHere46","9421063splitHere46","adapter = new SimpleAdapter(DataconectActivity.this, jsonResultList,<newline46mondego>                    R.layout.datalistitems,<newline46mondego>                    new String[] { TAG_NOMBRE, TAG_PRECIO, TAG_DISPONIBILIDAD }, new int[] {<newline46mondego>                    R.id.dbnombretxt, R.id.dbpreciotxt, R.id.dbdisponibilidadtxt });<newline46mondego>"
"556splitHere46","9421315splitHere46","public class A<T extends BaseClass> {<newline46mondego>    //....<newline46mondego>    abstract void doAction(T obj);<newline46mondego>    //....<newline46mondego>}<newline46mondego>"
"557splitHere46","9421315splitHere46","public class B extends A<DerivedClass> {<newline46mondego>     //..<newline46mondego>     void doAction(DerivedClass obj) {<newline46mondego>         obj.callMethodAvailableOnlyInDerivedClass();<newline46mondego>     }<newline46mondego>}<newline46mondego>"
"558splitHere46","9421409splitHere46","-Xmx"
"559splitHere46","9421462splitHere46","package my.converter;<newline46mondego><newline46mondego>final class StringToCountry implements Converter<String, Country> {<newline46mondego>    public Country convert(String source) {<newline46mondego>        return // whatever you do to get a country from your string<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"560splitHere46","9421462splitHere46","<bean id=<doubleQuotes46>conversionService<doubleQuotes46><newline46mondego>      class=<doubleQuotes46>org.springframework.context.support.ConversionServiceFactoryBean<doubleQuotes46>><newline46mondego>    <property name=<doubleQuotes46>converters<doubleQuotes46>><newline46mondego>        <list><newline46mondego>            <bean class=<doubleQuotes46>my.converter.StringToCountry<doubleQuotes46>/><newline46mondego>        </list><newline46mondego>    </property><newline46mondego></bean><newline46mondego>"
"561splitHere46","9421503splitHere46","myApp.ear<newline46mondego>     + ---- lib<newline46mondego>     |       |------- third_party_libraries_such_as_commons-lang-2.4.jar<newline46mondego>     |       |------- Any_Entity_Beans.jar<newline46mondego>     |       + ------ Other_Library_files.jar<newline46mondego>     |<newline46mondego>    +----- META-INF<newline46mondego>    |       +-- persistence.xml (.. possibly other config files)<newline46mondego>    |       <newline46mondego>    |<newline46mondego>    | ---- application_1.jar<newline46mondego>    | ---- application_2.jar<newline46mondego>    + ---- webapp_1.war<newline46mondego>"
"562splitHere46","9421667splitHere46","${}"
"563splitHere46","9421667splitHere46","#{}"
"564splitHere46","9421667splitHere46","%{}"
"565splitHere46","9421667splitHere46","#"
"566splitHere46","9421667splitHere46","#session"
"567splitHere46","9421667splitHere46","#"
"568splitHere46","9421667splitHere46","#"
"569splitHere46","9421667splitHere46","#"
"570splitHere46","9421667splitHere46","<s:set>"
"571splitHere46","9421667splitHere46","#"
"572splitHere46","9421667splitHere46","<s:set var=<doubleQuotes46>foo<doubleQuotes46> value=<doubleQuotes46>'plugh'<doubleQuotes46>/><newline46mondego><s:property value=<doubleQuotes46>#foo<doubleQuotes46>/><newline46mondego>"
"573splitHere46","9421690splitHere46","e.getX()"
"574splitHere46","9421690splitHere46","4"
"575splitHere46","9421690splitHere46","e.getY()"
"576splitHere46","9421690splitHere46","26"
"577splitHere46","9421812splitHere46","import java.awt.Color;<newline46mondego>import java.awt.Dimension;<newline46mondego>import java.awt.GradientPaint;<newline46mondego>import java.awt.Graphics;<newline46mondego>import java.awt.Graphics2D;<newline46mondego>import java.awt.Paint;<newline46mondego>import java.awt.RenderingHints;<newline46mondego><newline46mondego>import javax.swing.*;<newline46mondego><newline46mondego>public class ScrollBarEg {<newline46mondego>   protected static final Paint GRADIENT_PAINT = new GradientPaint(0, 0,<newline46mondego>         Color.blue, 50, 50, Color.red, true);<newline46mondego><newline46mondego>   private static void createAndShowGui() {<newline46mondego>      JPanel mainPanel = new JPanel();<newline46mondego><newline46mondego>      JPanel canvas = new JPanel() {<newline46mondego>         @Override<newline46mondego>         protected void paintComponent(Graphics g) {<newline46mondego>            super.paintComponent(g);<newline46mondego>            Graphics2D g2 = (Graphics2D) g.create();<newline46mondego>            g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING,<newline46mondego>                  RenderingHints.VALUE_ANTIALIAS_ON);<newline46mondego>            g2.setPaint(GRADIENT_PAINT);<newline46mondego>            g2.fillOval(0, 0, getWidth(), getHeight());<newline46mondego>            g2.dispose();<newline46mondego>         }<newline46mondego>      };<newline46mondego>      JScrollPane scroll = new JScrollPane();<newline46mondego>      scroll.setViewportView(canvas);<newline46mondego>      scroll.setPreferredSize(new Dimension(924, 700));<newline46mondego>      canvas.setPreferredSize(new Dimension(2000, 2000));<newline46mondego><newline46mondego>      mainPanel.add(scroll);<newline46mondego><newline46mondego>      JFrame frame = new JFrame(<doubleQuotes46>ScrollBar Eg<doubleQuotes46>);<newline46mondego>      frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>      frame.getContentPane().add(mainPanel);<newline46mondego>      frame.pack();<newline46mondego>      frame.setLocationByPlatform(true);<newline46mondego>      frame.setVisible(true);<newline46mondego>   }<newline46mondego><newline46mondego>   public static void main(String[] args) {<newline46mondego>      SwingUtilities.invokeLater(new Runnable() {<newline46mondego>         public void run() {<newline46mondego>            createAndShowGui();<newline46mondego>         }<newline46mondego>      });<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"578splitHere46","9421846splitHere46","TCPWait = new Thread(new Runnable() {<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void run() {<newline46mondego>            try {<newline46mondego>                WaitForConnection();<newline46mondego>            } catch (IOException ex) {<newline46mondego>                Logger.getLogger(Server.class.getName()).log(Level.SEVERE, null, ex);<newline46mondego>            }<newline46mondego>        }<newline46mondego>    });<newline46mondego>"
"579splitHere46","9421846splitHere46","while (true) {<newline46mondego>            {<newline46mondego>                accessLock.lock();<newline46mondego>                if(CanContinue == false)<newline46mondego>                    condition.await();<newline46mondego>                try {<newline46mondego>        //            WaitForConnection();<newline46mondego>                    GetStreams();<newline46mondego>                    ProcessConnection();<newline46mondego>                accessLock.unlock();<newline46mondego><newline46mondego>                } catch (Exception e) {<newline46mondego>                    JOptionPane.showMessageDialog(rootPane, <doubleQuotes46>Ø§Ø±ØªØ¨Ø§Ø· Ù‚Ø·Ø¹ Ø´Ø¯<doubleQuotes46> + e.getMessage());<newline46mondego><newline46mondego><newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego>"
"580splitHere46","9421846splitHere46","WaitForConnection();"
"581splitHere46","9421865splitHere46","setLayout(new BorderLayout(...))"
"582splitHere46","9421896splitHere46","@XmlAccessorType(XmlAccessType.FIELD)<newline46mondego>public class A {<newline46mondego><newline46mondego>    private List<A> a;<newline46mondego><newline46mondego>}<newline46mondego>"
"583splitHere46","9421997splitHere46","UnsatisfiedLinkError"
"584splitHere46","9421997splitHere46",".so"
"585splitHere46","9421997splitHere46","../../../target/native"
"586splitHere46","9421997splitHere46","LD_LIBRARY_PATH"
"587splitHere46","9421997splitHere46",".so"
"588splitHere46","9421997splitHere46",".so"
"589splitHere46","9421997splitHere46",".so"
"590splitHere46","9421997splitHere46",".so"
"591splitHere46","9421997splitHere46","LD_LIBRARY_PATH"
"592splitHere46","9421997splitHere46","../../../target/native"
"593splitHere46","9421997splitHere46","NB_27-impl/target/classes/lib"
"594splitHere46","9422033splitHere46","List<String> idList;<newline46mondego>List<ObjectWithID> objectList;<newline46mondego><newline46mondego>Map<String, ObjectWithID> helperMap=new HashMap<>();<newline46mondego><newline46mondego>//first O(n)<newline46mondego>for (ObjectWithID o:objectList) {<newline46mondego>  helperMap.put(o.ID, o);<newline46mondego>}<newline46mondego><newline46mondego>int i=0;<newline46mondego>//second O(n)<newline46mondego>for (String id:idList) {<newline46mondego>  objectList.set(i,helperMap.get(id));<newline46mondego>  i++;<newline46mondego>}<newline46mondego>"
"595splitHere46","9422061splitHere46","<dependencies>"
"596splitHere46","9422061splitHere46","<plugin>"
"597splitHere46","9422115splitHere46","public static boolean groupSum1(int start, int[] nums, int target)<newline46mondego>  {<newline46mondego>  1.    if (start >= nums.length) return (target == 0);             <newline46mondego>  2.    if (groupSum1(start + 1, nums, target - nums[start])) return true;              <newline46mondego>  3.    if (groupSum1(start + 1, nums, target)) return true;            <newline46mondego>  4.    return false;<newline46mondego>  }<newline46mondego>"
"598splitHere46","9422115splitHere46","1 call groupSum1(0, {10, 8, 6}, 16)<newline46mondego>    1. 0 < 3 next<newline46mondego>2 call groupSum1(1, {10, 8, 6}, 6)<newline46mondego>    1. 1 < 3 next<newline46mondego>3 call groupSum1(2, {10, 8, 6}, -2)<newline46mondego>    1. 2 < 3 next<newline46mondego>4 call groupSum1(3, {10, 8, 6}, -8)<newline46mondego>    1. 3 == 3 return false to call 3      <newline46mondego>back to call 3 in line 2.<newline46mondego>5 call groupSum1(3, {10, 8, 6}, -2)<newline46mondego>    1. 3 == 3 return false to call 3<newline46mondego>back to call 3 in line 3.<newline46mondego>    return false to call 2<newline46mondego>back to call 2 in line 2.<newline46mondego>6 call groupSum1(2, {10, 8, 6}, 6)<newline46mondego>    2 < 3 next<newline46mondego>7 call groupSum1(3, {10, 8, 6}, 0)<newline46mondego>    3 == 3 return true to call 6<newline46mondego>back to call 6 in line 2.<newline46mondego>    return true to call 2<newline46mondego>back to call 2 in line 3.<newline46mondego>    return true to call 1<newline46mondego>back to call 1 in line 2.<newline46mondego>    return true<newline46mondego>"
"599splitHere46","9422361splitHere46","LinePanel"
"600splitHere46","9422361splitHere46","Shape"
"601splitHere46","9422361splitHere46","List<Shape>"
"602splitHere46","9422371splitHere46","import java.util.ArrayList;<newline46mondego>import java.util.Iterator;<newline46mondego>import java.util.List;<newline46mondego>import java.util.Random;<newline46mondego><newline46mondego>public class RandomMathQuestionGenerator {<newline46mondego><newline46mondego>    private static final int NUMBER_OF_QUESTIONS = 10;<newline46mondego>    private static final int MIN_QUESTION_ELEMENTS = 2;<newline46mondego>    private static final int MAX_QUESTION_ELEMENTS = 4;<newline46mondego>    private static final int MIN_QUESTION_ELEMENT_VALUE = 1;<newline46mondego>    private static final int MAX_QUESTION_ELEMENT_VALUE = 100;<newline46mondego>    private final Random randomGenerator = new Random();<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        RandomMathQuestionGenerator questionGenerator = new RandomMathQuestionGenerator();<newline46mondego>        List<Question> randomQuestions = questionGenerator.getGeneratedRandomQuestions();<newline46mondego>        for (Question question : randomQuestions) {<newline46mondego>            System.out.println(question);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public List<Question> getGeneratedRandomQuestions() {<newline46mondego>        List<Question> randomQuestions = new ArrayList<Question>(NUMBER_OF_QUESTIONS);<newline46mondego>        for (int i = 0; i < NUMBER_OF_QUESTIONS; i++) {<newline46mondego>            int randomQuestionElementsCapacity = getRandomQuestionElementsCapacity();<newline46mondego>            Question question = new Question(randomQuestionElementsCapacity);<newline46mondego>            for (int j = 0; j < randomQuestionElementsCapacity; j++) {<newline46mondego>                boolean isLastIteration = j + 1 == randomQuestionElementsCapacity;<newline46mondego><newline46mondego>                QuestionElement questionElement = new QuestionElement();<newline46mondego>                questionElement.setValue(getRandomQuestionElementValue());<newline46mondego>                questionElement.setOperator(isLastIteration ? null<newline46mondego>                        : Operator.values()[randomGenerator.nextInt(Operator.values().length)]);<newline46mondego><newline46mondego>                question.addElement(questionElement);<newline46mondego>            }<newline46mondego>            randomQuestions.add(question);<newline46mondego>        }<newline46mondego>        return randomQuestions;<newline46mondego>    }<newline46mondego><newline46mondego>    private int getRandomQuestionElementsCapacity() {<newline46mondego>        return getRandomIntegerFromRange(MIN_QUESTION_ELEMENTS, MAX_QUESTION_ELEMENTS);<newline46mondego>    }<newline46mondego><newline46mondego>    private int getRandomQuestionElementValue() {<newline46mondego>        return getRandomIntegerFromRange(MIN_QUESTION_ELEMENT_VALUE, MAX_QUESTION_ELEMENT_VALUE);<newline46mondego>    }<newline46mondego><newline46mondego>    private int getRandomIntegerFromRange(int min, int max) {<newline46mondego>        return randomGenerator.nextInt(max - min + 1) + min;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class Question {<newline46mondego><newline46mondego>    private List<QuestionElement> questionElements;<newline46mondego><newline46mondego>    public Question(int sizeOfQuestionElemets) {<newline46mondego>        questionElements = new ArrayList<QuestionElement>(sizeOfQuestionElemets);<newline46mondego>    }<newline46mondego><newline46mondego>    public void addElement(QuestionElement questionElement) {<newline46mondego>        questionElements.add(questionElement);<newline46mondego>    }<newline46mondego><newline46mondego>    public List<QuestionElement> getElements() {<newline46mondego>        return questionElements;<newline46mondego>    }<newline46mondego><newline46mondego>    public int size() {<newline46mondego>        return questionElements.size();<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public String toString() {<newline46mondego>        StringBuilder sb = new StringBuilder();<newline46mondego>        for (QuestionElement questionElement : questionElements) {<newline46mondego>            sb.append(questionElement);<newline46mondego>        }<newline46mondego>        return sb.toString().trim();<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class QuestionElement {<newline46mondego><newline46mondego>    private int value;<newline46mondego>    private Operator operator;<newline46mondego><newline46mondego>    public int getValue() {<newline46mondego>        return value;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setValue(int value) {<newline46mondego>        this.value = value;<newline46mondego>    }<newline46mondego><newline46mondego>    public Operator getOperator() {<newline46mondego>        return operator;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setOperator(Operator operator) {<newline46mondego>        this.operator = operator;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public String toString() {<newline46mondego>        return value + (operator == null ? <doubleQuotes46><doubleQuotes46> : <doubleQuotes46> <doubleQuotes46> + operator.getDisplayValue()) + <doubleQuotes46> <doubleQuotes46>;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>enum Operator {<newline46mondego><newline46mondego>    PLUS(<doubleQuotes46>+<doubleQuotes46>), MINUS(<doubleQuotes46>-<doubleQuotes46>), MULTIPLIER(<doubleQuotes46>*<doubleQuotes46>), DIVIDER(<doubleQuotes46>/<doubleQuotes46>);<newline46mondego>    private String displayValue;<newline46mondego><newline46mondego>    private Operator(String displayValue) {<newline46mondego>        this.displayValue = displayValue;<newline46mondego>    }<newline46mondego><newline46mondego>    public String getDisplayValue() {<newline46mondego>        return displayValue;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"603splitHere46","9422419splitHere46","rollbackFor"
"604splitHere46","9422464splitHere46","JFrame"
"605splitHere46","9422464splitHere46","JPanel"
"606splitHere46","9422464splitHere46","CardLayout"
"607splitHere46","9422464splitHere46","CardLayout"
"608splitHere46","9422464splitHere46","ActionListener"
"609splitHere46","9422667splitHere46","final"
"610splitHere46","9422817splitHere46","Time(..)"
"611splitHere46","9422817splitHere46","new Time(new LocalTime(...).toDateTimeToday().getMillis())"
"612splitHere46","9422853splitHere46","@Transient"
"613splitHere46","9422853splitHere46","repeatPassword"
"614splitHere46","9423026splitHere46","cuke4duke"
"615splitHere46","9423026splitHere46","cuke4duke"
"616splitHere46","9423026splitHere46","cucumber.xml"
"617splitHere46","9423026splitHere46","component-scan"
"618splitHere46","9423026splitHere46","@StepDefinition"
"619splitHere46","9423026splitHere46","SpringFactory"
"620splitHere46","9423026splitHere46","@RunWith"
"621splitHere46","9423123splitHere46","interface Player<R, P extends Player<R, P, G>, G extends Game<R, G, P>><newline46mondego>{<newline46mondego>    R takeTurn(G game);<newline46mondego>}<newline46mondego><newline46mondego>interface Game<R, G extends Game<R, G, P>, P extends Player<R, P, G>><newline46mondego>{<newline46mondego>    void play(P player);<newline46mondego>}<newline46mondego>"
"622splitHere46","9423123splitHere46","AbstractGame"
"623splitHere46","9423123splitHere46","abstract class AbstractGame<R, P extends Player<R, P, AbstractGame<R, P>>><newline46mondego>    implements Game<R, AbstractGame<R, P>, P><newline46mondego>{<newline46mondego>    public final void play(final P player)<newline46mondego>    {<newline46mondego>        final R value;<newline46mondego><newline46mondego>        value = player.takeTurn(this);<newline46mondego>        turnTaken(value);<newline46mondego>    }<newline46mondego><newline46mondego>    protected abstract void turnTaken(R value);<newline46mondego>}<newline46mondego>"
"624splitHere46","9423123splitHere46","XGame"
"625splitHere46","9423123splitHere46","XPlayer"
"626splitHere46","9423123splitHere46","public class XGame<newline46mondego>    extends AbstractGame<Integer, XPlayer> //compile error on XPlayer<newline46mondego>{<newline46mondego><newline46mondego>    protected void turnTaken(Integer value) { }<newline46mondego>}<newline46mondego><newline46mondego>public class XPlayer<newline46mondego>    implements Player<Integer, XPlayer, XGame> //compile error on XGame<newline46mondego>{<newline46mondego>    @Override<newline46mondego>    public Integer takeTurn(final XGame game)<newline46mondego>    {<newline46mondego>        return (42);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"627splitHere46","9423123splitHere46","XGame"
"628splitHere46","9423123splitHere46","XPlayer"
"629splitHere46","9423123splitHere46","interface Game<R, G extends Game<R, G>><newline46mondego>{<newline46mondego>    void play(Player<R, G> player);<newline46mondego>}<newline46mondego><newline46mondego>interface Player<R, G extends Game<R, G>><newline46mondego>{<newline46mondego>    R takeTurn(G game);<newline46mondego>}<newline46mondego><newline46mondego>abstract class AbstractGame<R, G extends AbstractGame<R, G>><newline46mondego>    implements Game<R, G><newline46mondego>{<newline46mondego>    public final void play(final Player<R, G> player)<newline46mondego>    {<newline46mondego>        final R value;<newline46mondego><newline46mondego>        value = player.takeTurn(self());<newline46mondego>        turnTaken(value);<newline46mondego>    }<newline46mondego><newline46mondego>    protected abstract G self();<newline46mondego><newline46mondego>    protected abstract void turnTaken(R value);<newline46mondego>}<newline46mondego><newline46mondego>public final class XGame extends AbstractGame<Integer, XGame><newline46mondego>{<newline46mondego>   protected XGame self() {<newline46mondego>      return this;<newline46mondego>   }<newline46mondego><newline46mondego>   protected void turnTaken(Integer value) { }<newline46mondego>}<newline46mondego><newline46mondego>public class XPlayer implements Player<Integer, XGame><newline46mondego>{<newline46mondego>    @Override<newline46mondego>    public Integer takeTurn(final XGame game)<newline46mondego>    {<newline46mondego>       return (42);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"630splitHere46","9423123splitHere46","self()"
"631splitHere46","9423123splitHere46","AbstractGame"
"632splitHere46","9423123splitHere46","G"
"633splitHere46","9423123splitHere46","self()"
"634splitHere46","9423123splitHere46","this"
"635splitHere46","9423123splitHere46","public class EvilGame extends AbstractGame<Integer, AnotherGame> { ... }<newline46mondego>"
"636splitHere46","9423205splitHere46","HashMap"
"637splitHere46","9423205splitHere46","equals()"
"638splitHere46","9423205splitHere46","hashCode()"
"639splitHere46","9423205splitHere46","String"
"640splitHere46","9423359splitHere46","if"
"641splitHere46","9423359splitHere46","boolean expr1, expr2;<newline46mondego><newline46mondego>if (expr1 = (x == 5) | expr2 = (x == 2)) {  <newline46mondego>    // huge block of code that happens<newline46mondego>    if (expr1) five();<newline46mondego>    if (expr2) two();<newline46mondego>}<newline46mondego>"
"642splitHere46","9423553splitHere46","LinkedList"
"643splitHere46","9423792splitHere46","<doubleQuotes46>(?:[^<doubleQuotes46>\\]+|\\.)*<doubleQuotes46><newline46mondego>"
"644splitHere46","9423856splitHere46","!"
"645splitHere46","9423856splitHere46","#"
"646splitHere46","9423856splitHere46","default: sb.append((char)c); break;<newline46mondego>"
"647splitHere46","9423996splitHere46","fork()"
"648splitHere46","9423996splitHere46","exec()"
"649splitHere46","9423996splitHere46","exec()"
"650splitHere46","9423996splitHere46","function_or_class"
"651splitHere46","9424246splitHere46","BitSet"
"652splitHere46","9424322splitHere46","int a, b, c, d;<newline46mondego>    double e;<newline46mondego><newline46mondego>    a = 3;<newline46mondego>    b = 4;<newline46mondego>    c = 5;<newline46mondego>    d = 6;<newline46mondego>    e = a + (double) b / c * d;<newline46mondego>    System.out.println(<doubleQuotes46>e=<doubleQuotes46> + e);<newline46mondego>    e = a + (((double) b) / c) * d; // Java: 7.8<newline46mondego>    System.out.println(<doubleQuotes46>e=<doubleQuotes46> + e);<newline46mondego>"
"653splitHere46","9424399splitHere46","switch(c) {<newline46mondego>            case '#':<newline46mondego>                throw new HashException();<newline46mondego>            case ' ': sb.append(<doubleQuotes46> <doubleQuotes46>);<newline46mondego>                break;<newline46mondego>            case '1': sb.append(<doubleQuotes46>One<doubleQuotes46>);<newline46mondego>                break;<newline46mondego>            case '2': sb.append(<doubleQuotes46>Two<doubleQuotes46>);<newline46mondego>                break;<newline46mondego>            case '3': sb.append(<doubleQuotes46>Three<doubleQuotes46>);<newline46mondego>                break;<newline46mondego>            case '4': sb.append(<doubleQuotes46>Four<doubleQuotes46>);<newline46mondego>                break;                <newline46mondego>            case '5': sb.append(<doubleQuotes46>Five<doubleQuotes46>);<newline46mondego>                break; <newline46mondego>            case '6': sb.append(<doubleQuotes46>Six<doubleQuotes46>);<newline46mondego>                break;<newline46mondego>            case '7': sb.append(<doubleQuotes46>Seven<doubleQuotes46>);<newline46mondego>                break;<newline46mondego>            case '8': sb.append(<doubleQuotes46>Eight<doubleQuotes46>);<newline46mondego>                break;     <newline46mondego>            case '9': sb.append(<doubleQuotes46>Nine<doubleQuotes46>);<newline46mondego>                break; <newline46mondego>            case '0': sb.append(<doubleQuotes46>Zero<doubleQuotes46>);<newline46mondego>                break;<newline46mondego>            default:  sb.append(Integer.toString(c));<newline46mondego>                break;<newline46mondego>        }<newline46mondego>"
"654splitHere46","9424399splitHere46","message"
"655splitHere46","9424399splitHere46","HashException"
"656splitHere46","9424399splitHere46","class HashException extends Exception<newline46mondego>{<newline46mondego>    public HashException() {<newline46mondego>       super(<doubleQuotes46>A hash was encountered!<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"657splitHere46","9424399splitHere46","Exception"
"658splitHere46","9424399splitHere46","RuntimeException"
"659splitHere46","9424599splitHere46","Map"
"660splitHere46","9424599splitHere46","HashMap"
"661splitHere46","9424599splitHere46","HashMap<K, V> hm = new HashMap<K, V>();<newline46mondego>"
"662splitHere46","9424599splitHere46","HashMap<Integer, String> hm = new HashMap<Integer, String>();<newline46mondego>"
"663splitHere46","9424836splitHere46","T"
"664splitHere46","9424836splitHere46","Game"
"665splitHere46","9424836splitHere46","public class TestContainer extends ArrayList<Game> {<newline46mondego>    public void DemonstrateProblem() {<newline46mondego>        this.get(4).StartGame(); // <-- should work<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"666splitHere46","9424870splitHere46","String string_username = new String(result.getBytes(<doubleQuotes46>username<doubleQuotes46>), <doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>System.out.println(string_username);<newline46mondego>"
"667splitHere46","9424883splitHere46","public void get_minimum_of_the_column_of_local_maximum ()<newline46mondego>{<newline46mondego>    for ( int i = 0; i < A.length; i++ )<newline46mondego>    {<newline46mondego>        min = Integer.MAX_VALUE;<newline46mondego>        max = Integer.MIN_VALUE;<newline46mondego>        int index_of_maximum_in_its_row = 0;<newline46mondego><newline46mondego>        for ( int j = 0; j < A [ i ].length; j++ )<newline46mondego>            if ( A [ i ] [ j ] > max )<newline46mondego>                {<newline46mondego>                    max = A [ i ] [ j ];<newline46mondego>                    index_of_maximum_in_its_row = j;<newline46mondego>                }<newline46mondego><newline46mondego>        for ( int j = 0; j < A [ index_of_maximum_in_its_row ].length; j++ )<newline46mondego>            if ( A [ j ] [ index_of_maximum_in_its_row ] < min )<newline46mondego>                min = A [ j ] [ index_of_maximum_in_its_row ];<newline46mondego><newline46mondego>        System.out.print( <doubleQuotes46> Maximum of row [<doubleQuotes46> + i + <doubleQuotes46>] = <doubleQuotes46> + max);<newline46mondego>        System.out.println( <doubleQuotes46> Minimum of column [<doubleQuotes46> + index_of_maximum_in_its_row + <doubleQuotes46>] = <doubleQuotes46> + min );<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"668splitHere46","9424883splitHere46","min = Integer.MAX_VALUE, max = Integer.MIN_VALUE"
"669splitHere46","9424883splitHere46","min"
"670splitHere46","9424883splitHere46","min"
"671splitHere46","9424883splitHere46","max"
"672splitHere46","9424883splitHere46","index_of_maximum_in_its_row"
"673splitHere46","9424883splitHere46","index_of_maximum_in_its_row"
"674splitHere46","9424999splitHere46","x = speed * cos (angleRadians);<newline46mondego>    y = speed * sin (angleRadians);<newline46mondego>"
"675splitHere46","9425123splitHere46","InputStream is = this.getClass().getResourceAsStream(<doubleQuotes46>/report/jrxml_file<doubleQuotes46>);<newline46mondego>"
"676splitHere46","9425181splitHere46","TestServlet"
"677splitHere46","9425181splitHere46","configureServlets()"
"678splitHere46","9425181splitHere46","serve(<doubleQuotes46>/test<doubleQuotes46>).with(TestServlet.class);<newline46mondego>"
"679splitHere46","9425181splitHere46","TestServlet"
"680splitHere46","9425181splitHere46","Singleton"
"681splitHere46","9425181splitHere46","@Singleton"
"682splitHere46","9425181splitHere46","bind(TestServlet.class).in(Singleton.class);<newline46mondego>"
"683splitHere46","9425181splitHere46","Ofy"
"684splitHere46","9425181splitHere46","serve(...).with(...)"
"685splitHere46","9425221splitHere46","switch"
"686splitHere46","9425221splitHere46","boolean quit = false;<newline46mondego>do{ // change your while by this<newline46mondego><newline46mondego>    // your own stuff here<newline46mondego><newline46mondego><newline46mondego>    // then after all your program stuff<newline46mondego>    boolean choiceIsOK = false;<newline46mondego>    do{<newline46mondego>    String userinput = sc.next();<newline46mondego>    char choice = userinput.toLowerCase().charAt(0);<newline46mondego>    switch(choice){<newline46mondego>    case 'y':<newline46mondego>        // case y, do nothing, you could even remove that case.<newline46mondego>        choiceIsOK = true;<newline46mondego>        break;<newline46mondego>    case 'n':<newline46mondego>        // case n, do something here<newline46mondego>        choiceIsOK = false;<newline46mondego>        quit = true;<newline46mondego>        break;<newline46mondego>    default:<newline46mondego>        // error or warning<newline46mondego>        System.out.println(<doubleQuotes46>Type Y or N to respectively continue or quit<doubleQuotes46>);<newline46mondego>        break;<newline46mondego>    }<newline46mondego>    }while(!choiceIsOK);<newline46mondego>}while (!quit);<newline46mondego>"
"687splitHere46","9425221splitHere46","public static void main(String[] args)<newline46mondego>{<newline46mondego>System.out.println(<doubleQuotes46>Welcome to the loan calculator<doubleQuotes46>); //welcome user to loan calculator<newline46mondego>Scanner sc = new Scanner(System.in); // create new scanner<newline46mondego>//String choice = <doubleQuotes46>y<doubleQuotes46>; //start choice loop [no need for that line anymore]<newline46mondego>boolean quit = false; <newline46mondego>do{<newline46mondego>        System.out.println();<newline46mondego>        System.out.println(<doubleQuotes46>DATA ENTRY<doubleQuotes46>);<newline46mondego>        double loanAmount = getDoubleWithinRange(sc, <doubleQuotes46>Enter loan amount: <doubleQuotes46>, <newline46mondego>                0.0, 1000000.0); //get user input for loanAmount<newline46mondego>        //get user input for interestRate<newline46mondego>        double interestRate = getDoubleWithinRange(sc, <newline46mondego>                <doubleQuotes46>Enter yearly interest rate: <doubleQuotes46>, 0, 20); <newline46mondego>        //get user input for years<newline46mondego>        int years = getIntWithinRange(sc, <doubleQuotes46>Enter number of years: <doubleQuotes46>, 0, 100); <newline46mondego>        int months = years * 12; // calculate years to months<newline46mondego>        //calculate monthly payment<newline46mondego>        double monthlyPayment = loanAmount * interestRate/<newline46mondego>                (1 - 1/Math.pow(1 + interestRate, months)); <newline46mondego>        //import currency instance<newline46mondego>        NumberFormat currency = NumberFormat.getCurrencyInstance(); <newline46mondego>        // import percent instance<newline46mondego>        NumberFormat percent = NumberFormat.getPercentInstance(); <newline46mondego>        percent.setMinimumFractionDigits(1); //set fraction digits for percent <newline46mondego>        System.out.println(<doubleQuotes46>RESULST<doubleQuotes46>); //print results <newline46mondego>        //print loanAmount<newline46mondego>        System.out.println(<doubleQuotes46>Loan Amount: <doubleQuotes46> + currency.format(loanAmount)); <newline46mondego>        //print interestRate<newline46mondego>        System.out.println(<doubleQuotes46>Yearly interest rate: <doubleQuotes46> + percent.format(interestRate)); <newline46mondego>        System.out.println(<doubleQuotes46>Number of years: <doubleQuotes46> + years); //print years<newline46mondego>         //print monthlyPayment<newline46mondego>        System.out.println(<doubleQuotes46>Monthly payment: <doubleQuotes46> + currency.format(monthlyPayment)); <newline46mondego><newline46mondego><newline46mondego>        // then after all your program stuff<newline46mondego>        boolean choiceIsOK = false;<newline46mondego>            do{<newline46mondego><newline46mondego>                System.out.println();<newline46mondego>                System.out.println(<doubleQuotes46>Continue? (y/n): <doubleQuotes46>); //prompt user to continue <newline46mondego>                String userinput1 = sc.next();<newline46mondego>                    char choice1 = userinput1.toLowerCase().charAt(0);<newline46mondego>                    switch(choice1){<newline46mondego>                    case 'y':<newline46mondego>                        // case y, do nothing, you could even remove that case.<newline46mondego>                        choiceIsOK = true;<newline46mondego>                        break;<newline46mondego>                    case 'n':<newline46mondego>                        // case n, do something here<newline46mondego>                        choiceIsOK = true; // I fixed this<newline46mondego>                        quit = true;<newline46mondego>                        break;<newline46mondego>                    default:<newline46mondego>                        // error or warning<newline46mondego>                        System.out.println(<doubleQuotes46>Type Y or N to respectively continue or quit<doubleQuotes46>);<newline46mondego>                        break;<newline46mondego>                    }<newline46mondego>                }while(!choiceIsOK);<newline46mondego><newline46mondego>    }while(!quit);<newline46mondego><newline46mondego>    }           <newline46mondego>}<newline46mondego>"
"688splitHere46","9425336splitHere46","fixedThreadPool"
"689splitHere46","9425336splitHere46","private static ExecutorService tpool = Executors.newFixedThreadPool(20);<newline46mondego>    private static final int upper = 140;<newline46mondego><newline46mondego>    private static AtomicInteger total = new AtomicInteger(0);<newline46mondego><newline46mondego>public static void main(String[] args) throws Exception {<newline46mondego><newline46mondego>    int ar[] = new int[upper];<newline46mondego>    for(int i = 1 ; i <= upper; i++){<newline46mondego>        ar[i-1]=i;<newline46mondego>    }<newline46mondego><newline46mondego>    for(int i = 1 ; i <= ((upper%2) !=0 ? (upper-1):(upper)); i+=2){<newline46mondego>        final int a = ar[i-1];<newline46mondego>        final int b = ar[i];<newline46mondego>            Thread thread = new Thread(new Runnable(){<newline46mondego>                public void run() {<newline46mondego>                    int res = add(a, b);<newline46mondego>                    total.addAndGet(res);<newline46mondego>                    return;<newline46mondego>            }});<newline46mondego>            tpool.execute(thread);<newline46mondego>    }<newline46mondego>    if(upper%2!=0)<newline46mondego>        total.addAndGet(ar[ar.length-1]);<newline46mondego><newline46mondego>    tpool.shutdown(); //wait for everything to finish<newline46mondego>    System.out.println(total.get()); //get the result.<newline46mondego>}<newline46mondego><newline46mondego>private static int add(final int a, final int b){<newline46mondego>    return a+b;<newline46mondego>}<newline46mondego>"
"690splitHere46","9425408splitHere46","public class BinaryTree<K extends Number & Comparable<? super K>, E><newline46mondego>"
"691splitHere46","9425429splitHere46","Alt+Shift+s"
"692splitHere46","9425564splitHere46","String locale = java.util.Locale.getDefault().getDisplayName();<newline46mondego>        if (locale.equalsIgnoreCase(<doubleQuotes46>french<doubleQuotes46>)) {<newline46mondego>            String htmlFileName = <doubleQuotes46>m<doubleQuotes46> + bundle.getString(<doubleQuotes46>defStrID<doubleQuotes46>) + <doubleQuotes46>.html<doubleQuotes46>;<newline46mondego>        } else {<newline46mondego>            String htmlFileName = <doubleQuotes46>mn<doubleQuotes46> + bundle.getString(<doubleQuotes46>defStrID<doubleQuotes46>) + <doubleQuotes46>.html<doubleQuotes46>;<newline46mondego>        }<newline46mondego>"
"693splitHere46","9425645splitHere46","File[] sdDirectories = sd.listFiles(filterDirectoriesOnly);<newline46mondego>for (File file : sdDirectories)<newline46mondego>{<newline46mondego>    item.add(file.getName() + <doubleQuotes46>/<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"694splitHere46","9425645splitHere46","/"
"695splitHere46","9425645splitHere46","String[] fileNames = sd.list(fileNameFilter);<newline46mondego>List<String> fileNamesList = Arrays.asList(fileNames);<newline46mondego>"
"696splitHere46","9425747splitHere46","if (requestCode == ADD)<newline46mondego>         {<newline46mondego>            Custom= (ArrayList<Custom>) data.getSerializableExtra(<doubleQuotes46>arrayList<doubleQuotes46>);<newline46mondego>            addArryaListInListView();<newline46mondego>         }<newline46mondego>"
"697splitHere46","9425747splitHere46","notifyDataSetChanged()"
"698splitHere46","9425769splitHere46","import java.awt.*;<newline46mondego>import java.awt.event.*;<newline46mondego>import javax.swing.*;<newline46mondego><newline46mondego>/* Here we are first declaring our class that will act as the<newline46mondego> * base for other panels or in other terms the base for CardLayout.<newline46mondego> */<newline46mondego><newline46mondego>public class CardLayoutTest<newline46mondego>{<newline46mondego>    private static final String CARD_JBUTTON =  <doubleQuotes46>Card JButton<doubleQuotes46>;<newline46mondego>    private static final String CARD_JTEXTFIELD = <doubleQuotes46>Card JTextField<doubleQuotes46>;    <newline46mondego>    private static final String CARD_JRADIOBUTTON = <doubleQuotes46>Card JRadioButton<doubleQuotes46>;<newline46mondego><newline46mondego>    private static void createAndShowGUI()<newline46mondego>    {<newline46mondego>        JFrame frame = new JFrame(<doubleQuotes46>Card Layout Test<doubleQuotes46>);<newline46mondego>        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        frame.setLocationRelativeTo(null);<newline46mondego><newline46mondego>        // This JPanel is the base for CardLayout for other JPanels.<newline46mondego>        final JPanel contentPane = new JPanel();<newline46mondego>        contentPane.setLayout(new CardLayout(20, 20));<newline46mondego><newline46mondego>        /* Here we be making objects of the Window Series classes<newline46mondego>         * so that, each one of them can be added to the JPanel <newline46mondego>         * having CardLayout. <newline46mondego>         */<newline46mondego>        Window1 win1 = new Window1();<newline46mondego>        contentPane.add(win1, CARD_JBUTTON);<newline46mondego>        Window2 win2 = new Window2();<newline46mondego>        contentPane.add(win2, CARD_JTEXTFIELD);<newline46mondego>        Window3 win3 = new Window3();<newline46mondego>        contentPane.add(win3, CARD_JRADIOBUTTON);<newline46mondego><newline46mondego>        /* We need two JButtons to go to the next Card<newline46mondego>         * or come back to the previous Card, as and when<newline46mondego>         * desired by the User.<newline46mondego>         */<newline46mondego>        JPanel buttonPanel = new JPanel(); <newline46mondego>        final JButton previousButton = new JButton(<doubleQuotes46>PREVIOUS<doubleQuotes46>);<newline46mondego>        previousButton.setBackground(Color.BLACK);<newline46mondego>        previousButton.setForeground(Color.WHITE);<newline46mondego>        final JButton nextButton = new JButton(<doubleQuotes46>NEXT<doubleQuotes46>);<newline46mondego>        nextButton.setBackground(Color.RED);<newline46mondego>        nextButton.setForeground(Color.WHITE);<newline46mondego>        buttonPanel.add(previousButton);<newline46mondego>        buttonPanel.add(nextButton);<newline46mondego><newline46mondego>        /* Adding the ActionListeners to the JButton,<newline46mondego>         * so that the user can see the next Card or<newline46mondego>         * come back to the previous Card, as desired.<newline46mondego>         */<newline46mondego>        previousButton.addActionListener(new ActionListener()<newline46mondego>        {<newline46mondego>            public void actionPerformed(ActionEvent ae)<newline46mondego>            {<newline46mondego>                CardLayout cardLayout = (CardLayout) contentPane.getLayout();<newline46mondego>                cardLayout.previous(contentPane);<newline46mondego>            }<newline46mondego>        });<newline46mondego>        nextButton.addActionListener(new ActionListener()<newline46mondego>        {<newline46mondego>            public void actionPerformed(ActionEvent ae)<newline46mondego>            {<newline46mondego>                CardLayout cardLayout = (CardLayout) contentPane.getLayout();<newline46mondego>                cardLayout.next(contentPane);   <newline46mondego>            }<newline46mondego>        });<newline46mondego><newline46mondego>        // Adding the contentPane (JPanel) and buttonPanel to JFrame.<newline46mondego>        frame.add(contentPane, BorderLayout.CENTER);<newline46mondego>        frame.add(buttonPanel, BorderLayout.PAGE_END);<newline46mondego><newline46mondego>        frame.pack();<newline46mondego>        frame.setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String... args)<newline46mondego>    {<newline46mondego>        SwingUtilities.invokeLater(new Runnable()<newline46mondego>        {<newline46mondego>            public void run()<newline46mondego>            {<newline46mondego>                createAndShowGUI();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>} <newline46mondego><newline46mondego>class Window1 extends JPanel<newline46mondego>{<newline46mondego>    /*<newline46mondego>     * Here this is our first Card of CardLayout, which will<newline46mondego>     * be added to the contentPane object of JPanel, which<newline46mondego>     * has the LayoutManager set to CardLayout.<newline46mondego>     * This card consists of Two JButtons.<newline46mondego>     */  <newline46mondego>    private ActionListener action;<newline46mondego><newline46mondego>    public Window1() <newline46mondego>    {<newline46mondego>        init();<newline46mondego>    }<newline46mondego><newline46mondego>    private void init() <newline46mondego>    {<newline46mondego>        final JButton clickButton = new JButton(<doubleQuotes46>CLICK ME<doubleQuotes46>);<newline46mondego>        final JButton dontClickButton = new JButton(<doubleQuotes46>DON\'T CLICK ME<doubleQuotes46>);     <newline46mondego><newline46mondego>        action = new ActionListener()<newline46mondego>        {<newline46mondego>            public void actionPerformed(ActionEvent ae)<newline46mondego>            {<newline46mondego>                if (ae.getSource() == clickButton)<newline46mondego>                {<newline46mondego>                    JOptionPane.showMessageDialog(null, <doubleQuotes46>Hello there dude!<doubleQuotes46><newline46mondego>                                                , <doubleQuotes46>Right Button<doubleQuotes46>, JOptionPane.INFORMATION_MESSAGE);<newline46mondego>                }<newline46mondego>                else if (ae.getSource() == dontClickButton)<newline46mondego>                {<newline46mondego>                    JOptionPane.showMessageDialog(null, <doubleQuotes46>I told you not to click me!<doubleQuotes46><newline46mondego>                                                        , <doubleQuotes46>Wrong Button<doubleQuotes46>, JOptionPane.PLAIN_MESSAGE);<newline46mondego>                }<newline46mondego>            }<newline46mondego>        };<newline46mondego><newline46mondego>        clickButton.addActionListener(action);<newline46mondego>        dontClickButton.addActionListener(action);<newline46mondego><newline46mondego>        add(clickButton);<newline46mondego>        add(dontClickButton);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class Window2 extends JPanel implements ActionListener <newline46mondego>{<newline46mondego>    /*<newline46mondego>     * Here this is our second Card of CardLayout, which will<newline46mondego>     * be added to the contentPane object of JPanel, which<newline46mondego>     * has the LayoutManager set to CardLayout.<newline46mondego>     * This card consists of a JLabel and a  JTextField<newline46mondego>     * with GridLayout.<newline46mondego>     */  <newline46mondego><newline46mondego>    private JTextField textField;<newline46mondego><newline46mondego>    public Window2() <newline46mondego>    {<newline46mondego>        init();<newline46mondego>    }<newline46mondego><newline46mondego>    private void init() <newline46mondego>    {<newline46mondego>        setLayout(new GridLayout(1, 2));<newline46mondego>        JLabel userLabel = new JLabel(<doubleQuotes46>Your Name : <doubleQuotes46>);<newline46mondego>        textField = new JTextField();<newline46mondego>        textField.addActionListener(this);<newline46mondego><newline46mondego>        add(userLabel);<newline46mondego>        add(textField);<newline46mondego>    }<newline46mondego><newline46mondego>    public void actionPerformed(ActionEvent e) <newline46mondego>    {            <newline46mondego>        if (textField.getDocument().getLength() > 0)<newline46mondego>            JOptionPane.showMessageDialog(null, <doubleQuotes46>Your Name is : <doubleQuotes46> + textField.getText()<newline46mondego>                                                                            , <doubleQuotes46>User\'s Name : <doubleQuotes46>, JOptionPane.QUESTION_MESSAGE);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class Window3 extends JPanel<newline46mondego>{<newline46mondego>    /*<newline46mondego>     * Here this is our third Card of CardLayout, which will<newline46mondego>     * be added to the contentPane object of JPanel, which<newline46mondego>     * has the LayoutManager set to CardLayout.<newline46mondego>     * This card consists of Two JLabels and two JCheckBox<newline46mondego>     * with GridLayout.<newline46mondego>     */  <newline46mondego>    private ActionListener state;<newline46mondego><newline46mondego>    public Window3()<newline46mondego>    {<newline46mondego>        init();<newline46mondego>    }<newline46mondego><newline46mondego>    public void init()<newline46mondego>    {<newline46mondego>        setLayout(new GridLayout(2, 2));<newline46mondego>        JLabel maleLabel = new JLabel(<doubleQuotes46>MALE<doubleQuotes46>, JLabel.CENTER);<newline46mondego>        final JCheckBox maleBox = new JCheckBox();<newline46mondego>        JLabel femaleLabel = new JLabel(<doubleQuotes46>FEMALE<doubleQuotes46>, JLabel.CENTER);<newline46mondego>        final JCheckBox femaleBox = new JCheckBox();<newline46mondego><newline46mondego>        state = new ActionListener()<newline46mondego>        {<newline46mondego>            public void actionPerformed(ActionEvent ae)<newline46mondego>            {<newline46mondego>                if (maleBox == (JCheckBox) ae.getSource())<newline46mondego>                {<newline46mondego>                    femaleBox.setSelected(false);<newline46mondego>                    JOptionPane.showMessageDialog(null, <doubleQuotes46>Congrats you are a Male<doubleQuotes46><newline46mondego>                                                , <doubleQuotes46>Gender : <doubleQuotes46>, JOptionPane.INFORMATION_MESSAGE);                            <newline46mondego>                }<newline46mondego>                else if (femaleBox == (JCheckBox) ae.getSource())<newline46mondego>                {<newline46mondego>                    maleBox.setSelected(false);<newline46mondego>                    JOptionPane.showMessageDialog(null, <doubleQuotes46>Congrats you are a Female<doubleQuotes46><newline46mondego>                                            , <doubleQuotes46>Gender : <doubleQuotes46>, JOptionPane.INFORMATION_MESSAGE);                        <newline46mondego>                }<newline46mondego>            }<newline46mondego>        };<newline46mondego><newline46mondego>        maleBox.addActionListener(state);<newline46mondego>        femaleBox.addActionListener(state);<newline46mondego>        add(maleLabel);<newline46mondego>        add(maleBox);<newline46mondego>        add(femaleLabel);<newline46mondego>        add(femaleBox);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"699splitHere46","9425803splitHere46","17%%<newline46mondego>"
"700splitHere46","9425952splitHere46","blob"
"701splitHere46","9425986splitHere46","gbc.anchor = GridBagConstraints.NORTHWEST;<newline46mondego>"
"702splitHere46","9425986splitHere46","gbc.anchor = GridBagConstraints.FIRST_LINE_START;<newline46mondego>"
"703splitHere46","9426139splitHere46","Arraylist"
"704splitHere46","9426139splitHere46","sort"
"705splitHere46","9426139splitHere46","yourArray.sort(new YourNameComparator());<newline46mondego><newline46mondego>class YourNameComparator implements Comparator<YourNameClass> {<newline46mondego>    int compare(YourNameClass y1, YourNameClass y2) {<newline46mondego>        return y1.getName().compareTo(y2.getName());<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"706splitHere46","9426275splitHere46","import java.io.StringReader;<newline46mondego><newline46mondego>import net.sf.jsqlparser.JSQLParserException;<newline46mondego>import net.sf.jsqlparser.expression.Function;<newline46mondego>import net.sf.jsqlparser.parser.CCJSqlParserManager;<newline46mondego>import net.sf.jsqlparser.statement.select.PlainSelect;<newline46mondego>import net.sf.jsqlparser.statement.select.Select;<newline46mondego>import net.sf.jsqlparser.statement.select.SelectExpressionItem;<newline46mondego><newline46mondego>public class MySQLParser<newline46mondego>{<newline46mondego>    CCJSqlParserManager parserManager = new CCJSqlParserManager();<newline46mondego><newline46mondego>    public MySQLParser() throws JSQLParserException<newline46mondego>    {<newline46mondego>        String statement = <doubleQuotes46>SELECT COUNT(*) FROM db.table1<doubleQuotes46>;<newline46mondego>        PlainSelect plainSelect = (PlainSelect) ((Select) parserManager.parse(new StringReader(statement))).getSelectBody();        <newline46mondego>        System.out.format(<doubleQuotes46>%s is function call? %s<doubleQuotes46>,<newline46mondego>                plainSelect.getSelectItems().get(0),<newline46mondego>                ((Function)((SelectExpressionItem) plainSelect.getSelectItems().get(0)).getExpression()).isAllColumns());<newline46mondego>    }<newline46mondego>    public static void main(String[] args) throws JSQLParserException<newline46mondego>    {<newline46mondego><newline46mondego>        new MySQLParser();<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"707splitHere46","9426461splitHere46","out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(socket.getOutputStream())), true);<newline46mondego>"
"708splitHere46","9426512splitHere46","select * from test where name like '%xyz%'<newline46mondego>"
"709splitHere46","9426512splitHere46","select * from test where soundex(name) = soundex('word')<newline46mondego>"
"710splitHere46","9426627splitHere46","SET CHLAUTH(TEST_CHANNEL) TYPE(ADDRESSMAP) ADDRESS(*) MCAUSER('mq-user')"
"711splitHere46","9426627splitHere46","TEST_CHANNEL"
"712splitHere46","9426627splitHere46","mq-user"
"713splitHere46","9426627splitHere46","mq-user"
"714splitHere46","9426627splitHere46","CHLAUTH"
"715splitHere46","9426627splitHere46","PRINCIPAL"
"716splitHere46","9426627splitHere46","GROUP"
"717splitHere46","9426627splitHere46","PRINCIPAL"
"718splitHere46","9426627splitHere46","mq-users"
"719splitHere46","9426627splitHere46","staff"
"720splitHere46","9426627splitHere46","users"
"721splitHere46","9426627splitHere46","mq-users"
"722splitHere46","9426627splitHere46","group"
"723splitHere46","9426627splitHere46","setmqaut"
"724splitHere46","9426627splitHere46","AUTHREC"
"725splitHere46","9426627splitHere46","ALL"
"726splitHere46","9426627splitHere46","SET"
"727splitHere46","9426627splitHere46","SET"
"728splitHere46","9426627splitHere46","AUTHADD(INQ,DSP,PUT)"
"729splitHere46","9426627splitHere46","mq-users"
"730splitHere46","9426627splitHere46","CONNECT"
"731splitHere46","9426627splitHere46","INQUIRE"
"732splitHere46","9426627splitHere46","USERSRC(CHANNEL)"
"733splitHere46","9426627splitHere46","mqm"
"734splitHere46","9426627splitHere46","CHLAUTH"
"735splitHere46","9426627splitHere46","AUTHREC"
"736splitHere46","9426627splitHere46","MCAUSER"
"737splitHere46","9426627splitHere46","CHLAUTH"
"738splitHere46","9426816splitHere46","private static FieldType mStaticOfB;<newline46mondego>...<newline46mondego>public B(..) {<newline46mondego>   super();<newline46mondego>   synchronized(B.class) {<newline46mondego>      if (mStaticOfB == null) {<newline46mondego>         //code to set mStaticOfB<newline46mondego>      }<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"739splitHere46","9426866splitHere46","<s:if test=<doubleQuotes46>%{#user.name != null && #user.name != ''}<doubleQuotes46>><newline46mondego>   <s:property value=<doubleQuotes46>#user.name<doubleQuotes46>/><newline46mondego>   <!-- Do some thing... --><newline46mondego></s:if><newline46mondego>"
"740splitHere46","9427176splitHere46","private String token = <doubleQuotes46><token><doubleQuotes46>;<newline46mondego>private String host = <doubleQuotes46>gateway.sandbox.push.apple.com<doubleQuotes46>;<newline46mondego>private int port = 2195;<newline46mondego><newline46mondego>private String payload = <doubleQuotes46>{\<doubleQuotes46>aps\<doubleQuotes46>:{\<doubleQuotes46>alert\<doubleQuotes46>:\<doubleQuotes46>Message from Java o_O\<doubleQuotes46>}}<doubleQuotes46>;<newline46mondego><newline46mondego>public APNSender() {<newline46mondego>    try {<newline46mondego>        KeyStore keyStore = KeyStore.getInstance(<doubleQuotes46>PKCS12<doubleQuotes46>);<newline46mondego><newline46mondego>        keyStore.load(getClass().getResourceAsStream(<doubleQuotes46>cert.p12<doubleQuotes46>), <doubleQuotes46><password><doubleQuotes46>.toCharArray());<newline46mondego>        KeyManagerFactory keyMgrFactory = KeyManagerFactory.getInstance(<doubleQuotes46>SunX509<doubleQuotes46>);<newline46mondego>        keyMgrFactory.init(keyStore, <doubleQuotes46><password><doubleQuotes46>.toCharArray());<newline46mondego><newline46mondego>        SSLContext sslContext = SSLContext.getInstance(<doubleQuotes46>TLS<doubleQuotes46>);<newline46mondego>        sslContext.init(keyMgrFactory.getKeyManagers(), null, null);<newline46mondego>        SSLSocketFactory sslSocketFactory = sslContext.getSocketFactory();<newline46mondego><newline46mondego>        SSLSocket sslSocket = (SSLSocket) sslSocketFactory.createSocket(host, port);<newline46mondego>        String[] cipherSuites = sslSocket.getSupportedCipherSuites();<newline46mondego>        sslSocket.setEnabledCipherSuites(cipherSuites);<newline46mondego>        sslSocket.startHandshake();<newline46mondego><newline46mondego>        char[] t = token.toCharArray();<newline46mondego>        byte[] b = Hex.decodeHex(t);<newline46mondego><newline46mondego>        OutputStream outputstream = sslSocket.getOutputStream();<newline46mondego><newline46mondego>        outputstream.write(0);<newline46mondego>        outputstream.write(0);<newline46mondego>        outputstream.write(32);<newline46mondego>        outputstream.write(b);<newline46mondego>        outputstream.write(0);<newline46mondego>        outputstream.write(payload.length());<newline46mondego>        outputstream.write(payload.getBytes());<newline46mondego><newline46mondego>        outputstream.flush();<newline46mondego>        outputstream.close();<newline46mondego><newline46mondego>    } catch (Exception exception) {<newline46mondego>        exception.printStackTrace();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"741splitHere46","9427176splitHere46","InputStream in = sslSocket.getInputStream(); <newline46mondego>[...]   <newline46mondego>"
"742splitHere46","9427213splitHere46","normalizeDocument()"
"743splitHere46","9427232splitHere46","shirts"
"744splitHere46","9427232splitHere46","SHIRTS"
"745splitHere46","9427232splitHere46","Shirts"
"746splitHere46","9427232splitHere46","shirts"
"747splitHere46","9427243splitHere46","ApplicationState"
"748splitHere46","9427243splitHere46","class ApplicationState {<newline46mondego><newline46mondego> enum ProcessState {<newline46mondego>  READ_DONE,<newline46mondego>  PROCESSING_STARTED,<newline46mondego>  PROCESSING_ENDED,<newline46mondego>  ANOTHER_STATE;<newline46mondego> }<newline46mondego><newline46mondego> private List<String> filesDone, filesToDo;<newline46mondego> private String currentlyProcessingFile;<newline46mondego> private ProcessState currentProcessState;<newline46mondego>}<newline46mondego>"
"749splitHere46","9427243splitHere46","try {<newline46mondego>      ApplicationState state = new ApplicationState();<newline46mondego>      ...<newline46mondego>      // File to serialize object to<newline46mondego>      String fileName = <doubleQuotes46>applicationState.ser<doubleQuotes46>;<newline46mondego><newline46mondego>      // New file output stream for the file<newline46mondego>      FileOutputStream fos = new FileOutputStream(fileName);<newline46mondego><newline46mondego>      // Serialize String<newline46mondego>      SerializationUtils.serialize(state, fos);<newline46mondego>      fos.close();<newline46mondego><newline46mondego>      // Open FileInputStream to the file<newline46mondego>      FileInputStream fis = new FileInputStream(fileName);<newline46mondego><newline46mondego>      // Deserialize and cast into String<newline46mondego>      String ser = (String) SerializationUtils.deserialize(fis);<newline46mondego>      System.out.println(ser);<newline46mondego>      fis.close();<newline46mondego>    } catch (Exception e) {<newline46mondego>      e.printStackTrace();<newline46mondego>    }<newline46mondego>"
"750splitHere46","9427315splitHere46","String itemname = new Integer(position).toString();<newline46mondego>"
"751splitHere46","9427315splitHere46","String itemname = lv_arr[position];<newline46mondego>"
"752splitHere46","9427484splitHere46","@Test"
"753splitHere46","9427596splitHere46","^(?=[^@]+@[^@]+$)[^.].*[^.]$<newline46mondego>"
"754splitHere46","9427701splitHere46","<fileSet><newline46mondego>    <directory>target/classes</directory><newline46mondego>    <outputDirectory>/webapp/WEB-INF/classes</outputDirectory><newline46mondego></fileSet><newline46mondego>"
"755splitHere46","9427725splitHere46","Adapter"
"756splitHere46","9427725splitHere46","Spinner"
"757splitHere46","9427725splitHere46","public YourActivity extends Activity {<newline46mondego>...<newline46mondego>private String[] mValues = {<doubleQuotes46>One<doubleQuotes46>, <doubleQuotes46>Two<doubleQuotes46>, <doubleQuotes46>Three<doubleQuotes46>};<newline46mondego>private Spinner mSpinner;<newline46mondego>public void onCreate(Bundle bundle) {<newline46mondego>...<newline46mondego>mSpinner = findViewById(R.id.yourspinner);<newline46mondego>ArrayAdapter<String> adapter = new ArrayAdapter<String>(<newline46mondego>   this, android.R.layout.simple_spinner_item, mValues);<newline46mondego>adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);<newline46mondego>mSpinner.setAdapter(adapter);<newline46mondego>...<newline46mondego>}<newline46mondego>"
"758splitHere46","9427725splitHere46","mValues"
"759splitHere46","9427725splitHere46","ArrayAdapter.createFromResource"
"760splitHere46","9427725splitHere46","InputStream is = getAssets().open(<doubleQuotes46>your_asset.txt<doubleQuotes46>);<newline46mondego>"
"761splitHere46","9427764splitHere46","session"
"762splitHere46","9427764splitHere46","<bean id=<doubleQuotes46>mailSender<doubleQuotes46> class=<doubleQuotes46>org.springframework.mail.javamail.JavaMailSenderImpl<doubleQuotes46>><newline46mondego>    <property name=<doubleQuotes46>host<doubleQuotes46> value=<doubleQuotes46>smtp.gmail.com<doubleQuotes46> /><newline46mondego>    <property name=<doubleQuotes46>port<doubleQuotes46> value=<doubleQuotes46>587<doubleQuotes46> /><newline46mondego>    <property name=<doubleQuotes46>username<doubleQuotes46> value=<doubleQuotes46>username<doubleQuotes46> /><newline46mondego>    <property name=<doubleQuotes46>password<doubleQuotes46> value=<doubleQuotes46>password<doubleQuotes46> /><newline46mondego><newline46mondego>    <property name=<doubleQuotes46>javaMailProperties<doubleQuotes46>><newline46mondego>       <props><newline46mondego>              <prop key=<doubleQuotes46>mail.smtp.auth<doubleQuotes46>>true</prop><newline46mondego>              <prop key=<doubleQuotes46>mail.smtp.starttls.enable<doubleQuotes46>>true</prop><newline46mondego>           </props><newline46mondego>    </property><newline46mondego></bean><newline46mondego>"
"763splitHere46","9427796splitHere46","in.close();"
"764splitHere46","9427796splitHere46","Scanner"
"765splitHere46","9427796splitHere46","Scanner in = new Scanner(System.in);<newline46mondego>System.out.println(<doubleQuotes46>Enter A<doubleQuotes46>);<newline46mondego>String wantA = in.nextLine();<newline46mondego>System.out.println(<doubleQuotes46>Save? Press 1 for yes, or 0 for no<doubleQuotes46>);<newline46mondego>int want = in.nextInt();<newline46mondego>"
"766splitHere46","9427813splitHere46","doc1 cat1<newline46mondego>doc1 cat2<newline46mondego>doc1 cat3<newline46mondego>doc2 cat4<newline46mondego>doc3 cat5<newline46mondego>doc3 cat6<newline46mondego>... <newline46mondego>"
"767splitHere46","9427864splitHere46","ServerSocket"
"768splitHere46","9427864splitHere46","ServerSocket.accept()"
"769splitHere46","9427864splitHere46","Sockets"
"770splitHere46","9428081splitHere46","tempPreviousToken.attSource.copyTo(this);<newline46mondego>        previousTokenFlag = false;<newline46mondego>        this.incrementToken();<newline46mondego>        return false;<newline46mondego>"
"771splitHere46","9428081splitHere46","tempPreviousToken.attSource.copyTo(this)"
"772splitHere46","9428242splitHere46","static boolean ok(int r, int c)<newline46mondego>{<newline46mondego>    return r > 0 && r < Rows && c > 0 && c < Cols;<newline46mondego>}<newline46mondego>"
"773splitHere46","9428242splitHere46","r >= 0"
"774splitHere46","9428242splitHere46","c>= 0"
"775splitHere46","9428242splitHere46","dfs()"
"776splitHere46","9428242splitHere46","visited"
"777splitHere46","9428242splitHere46","true"
"778splitHere46","9428242splitHere46","dfs()"
"779splitHere46","9428242splitHere46","false"
"780splitHere46","9428242splitHere46","visited"
"781splitHere46","9428336splitHere46","try<newline46mondego>    {<newline46mondego>        List<Holidays> holidayDetails = getHibernateTemplate().find(<doubleQuotes46>from Holidays where holidayId = 1<doubleQuotes46>);<newline46mondego>        return holidayDetails;<newline46mondego>    }<newline46mondego>    catch(Exception e)<newline46mondego>    {<newline46mondego>        e.printStackTrace();<newline46mondego>        return null;<newline46mondego>    }<newline46mondego>"
"782splitHere46","9428363splitHere46","@RequestMapping(value = <doubleQuotes46>/**<doubleQuotes46>, method = RequestMethod.GET)`<newline46mondego>"
"783splitHere46","9428363splitHere46","@RequestMapping(value = <doubleQuotes46>/api/type<doubleQuotes46>, method = RequestMethod.GET)<newline46mondego>"
"784splitHere46","9428363splitHere46","request.getParameter(<doubleQuotes46>name<doubleQuotes46>);<newline46mondego>request.getParameter(<doubleQuotes46>age<doubleQuotes46>):<newline46mondego>"
"785splitHere46","9428409splitHere46","<plugin><newline46mondego>            <groupId>org.apache.maven.plugins</groupId><newline46mondego>            <artifactId>maven-jar-plugin</artifactId><newline46mondego>            <executions><newline46mondego>                <execution><newline46mondego>                    <phase>package</phase><newline46mondego>                    <goals><newline46mondego>                        <goal>test-jar</goal><newline46mondego>                    </goals><newline46mondego>                    </configuration><newline46mondego>                </execution><newline46mondego>            </executions>               <newline46mondego>        </plugin>       <newline46mondego>"
"786splitHere46","9428409splitHere46","test-jar"
"787splitHere46","9428409splitHere46","<dependency><newline46mondego>        <groupId>com.example</groupId><newline46mondego>        <artifactId>project-a</artifactId><newline46mondego>        <type>test-jar</type><newline46mondego>        <version>1.0-SNAPSHOT</version><newline46mondego>        <scope>test</scope><newline46mondego>    </dependency><newline46mondego>"
"788splitHere46","9428666splitHere46","StudentResponse  response = new StudentResponse();<newline46mondego>response.student = new Student[list.size()];<newline46mondego>for (int in = 0; in < list.size(); in++) {<newline46mondego>{<newline46mondego>    Student data = (TopListsQuoteData) list.get(in);<newline46mondego>    response. student[in] = data;<newline46mondego>}<newline46mondego>"
"789splitHere46","9428882splitHere46","listDist.item(listDist.getLength() - 1)"
"790splitHere46","9428901splitHere46","java -Xmx6g myprogram<newline46mondego>"
"791splitHere46","9429069splitHere46","StringEscapeUtils.unescapeHtml"
"792splitHere46","9429069splitHere46","&#"
"793splitHere46","9429069splitHere46",";"
"794splitHere46","9429069splitHere46","Character.toChars"
"795splitHere46","9429141splitHere46","Class"
"796splitHere46","9429141splitHere46","Y.class"
"797splitHere46","9429141splitHere46","Y<F1, ..., FN>"
"798splitHere46","9429141splitHere46","Class<Y>"
"799splitHere46","9429141splitHere46","Y"
"800splitHere46","9429141splitHere46","Class<Y<A1, ..., AN>"
"801splitHere46","9429141splitHere46","return (Class<Y<?, ?>>)(Object) Y.class;<newline46mondego>"
"802splitHere46","9429182splitHere46","scanner.next()"
"803splitHere46","9429182splitHere46","input = scanner.next();"
"804splitHere46","9429200splitHere46","/**<newline46mondego> * Factory for PointF <newline46mondego> * @param origin of the coordinate system (not needed)<newline46mondego> * @param distance this really means <doubleQuotes46>radius<doubleQuotes46><newline46mondego> * @param angle from the x-axis in radians; positive increases in the counterclockwise direction <newline46mondego> */<newline46mondego>public static PointF getPoint(PointF origin, float distance, float angle)<newline46mondego>{<newline46mondego>    PointF newPoint = new PointF();<newline46mondego>    newPoint.x = origin.x + distance*Math.cos(angle);<newline46mondego>    newPoint.y = origin.y + distance*Math.sin(angle);<newline46mondego>    return newPoint;<newline46mondego>}<newline46mondego>"
"805splitHere46","9429220splitHere46","=="
"806splitHere46","9429220splitHere46","=="
"807splitHere46","9429220splitHere46","false"
"808splitHere46","9429220splitHere46","Integer.equals()"
"809splitHere46","9429220splitHere46","=="
"810splitHere46","9429220splitHere46","if (i1.equals(i2){<newline46mondego>    System.out.println(<doubleQuotes46>true<doubleQuotes46>);<newline46mondego>}else{<newline46mondego>    System.out.println(<doubleQuotes46>false<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"811splitHere46","9429220splitHere46","=="
"812splitHere46","9429220splitHere46","int"
"813splitHere46","9429220splitHere46","i2"
"814splitHere46","9429220splitHere46","int"
"815splitHere46","9429220splitHere46","if"
"816splitHere46","9429220splitHere46","int"
"817splitHere46","9429286splitHere46","ant -Dproject.version=0.9.0-local-20120211095554 clean publish<newline46mondego>"
"818splitHere46","9429286splitHere46","<dependency><newline46mondego>    <groupId>com.opengamma</groupId><newline46mondego>    <artifactId>og-analytics</artifactId><newline46mondego>    <version>0.9.0-local-20120211095554</version><newline46mondego></dependency><newline46mondego><newline46mondego><dependency><newline46mondego>    <groupId>com.opengamma</groupId><newline46mondego>    <artifactId>og-analytics</artifactId><newline46mondego>    <version>0.9.0-local-20120211095554</version><newline46mondego>    <classifier>sources</classifier><newline46mondego></dependency><newline46mondego>"
"819splitHere46","9429286splitHere46","<ivy-module version=<doubleQuotes46>2.0<doubleQuotes46> xmlns:e=<doubleQuotes46>http://ant.apache.org/ivy/extra<doubleQuotes46>><newline46mondego>    <info organisation=<doubleQuotes46>com.opengamma<doubleQuotes46> module=<doubleQuotes46>og-analytics<doubleQuotes46>/><newline46mondego><newline46mondego>    <publications><newline46mondego>      <artifact name=<doubleQuotes46>og-analytics<doubleQuotes46> type=<doubleQuotes46>jar<doubleQuotes46>/><newline46mondego>      <artifact name=<doubleQuotes46>og-analytics<doubleQuotes46> type=<doubleQuotes46>pom<doubleQuotes46>/><newline46mondego>      <artifact name=<doubleQuotes46>og-analytics<doubleQuotes46> type=<doubleQuotes46>jar<doubleQuotes46> e:classifier=<doubleQuotes46>sources<doubleQuotes46>/><newline46mondego>    </publications><newline46mondego><newline46mondego>    <dependencies><newline46mondego>      <dependency name=<doubleQuotes46>og-util<doubleQuotes46> rev=<doubleQuotes46>0.9.0-local-20120211095525<doubleQuotes46> revConstraint=<doubleQuotes46>latest.integration<doubleQuotes46>/><newline46mondego><newline46mondego>      <dependency org=<doubleQuotes46>org.jfree<doubleQuotes46> name=<doubleQuotes46>jfreechart<doubleQuotes46> rev=<doubleQuotes46>1.0.13<doubleQuotes46>/><newline46mondego>      <dependency org=<doubleQuotes46>cern<doubleQuotes46> name=<doubleQuotes46>colt<doubleQuotes46> rev=<doubleQuotes46>1.2.0<doubleQuotes46>/><newline46mondego>      <dependency org=<doubleQuotes46>cern<doubleQuotes46> name=<doubleQuotes46>parallelcolt<doubleQuotes46> rev=<doubleQuotes46>0.9.1<doubleQuotes46>/><newline46mondego>      <dependency org=<doubleQuotes46>latexlet<doubleQuotes46> name=<doubleQuotes46>latexlet<doubleQuotes46> rev=<doubleQuotes46>1.11<doubleQuotes46>/><newline46mondego>      <dependency org=<doubleQuotes46>org.apache.commons<doubleQuotes46> name=<doubleQuotes46>commons-math<doubleQuotes46> rev=<doubleQuotes46>2.1<doubleQuotes46>/><newline46mondego><newline46mondego>      <dependency org=<doubleQuotes46>it.dexy<doubleQuotes46> name=<doubleQuotes46>json-doclet<doubleQuotes46> rev=<doubleQuotes46>0.3.1<doubleQuotes46>/><newline46mondego>      <dependency org=<doubleQuotes46>org.json<doubleQuotes46> name=<doubleQuotes46>simple<doubleQuotes46> rev=<doubleQuotes46>1.1<doubleQuotes46>/><newline46mondego>      <exclude org=<doubleQuotes46>org.junit<doubleQuotes46>/><newline46mondego>    </dependencies><newline46mondego></ivy-module> <newline46mondego>"
"820splitHere46","9429286splitHere46","<target name=<doubleQuotes46>prepare<doubleQuotes46> description=<doubleQuotes46>Generate POM<doubleQuotes46>><newline46mondego>    <fail message=<doubleQuotes46>Unset property: project.version<doubleQuotes46> unless=<doubleQuotes46>project.version<doubleQuotes46>/><newline46mondego><newline46mondego>    <ivy:deliver deliverpattern=<doubleQuotes46>${build.dir}/ivy.xml<doubleQuotes46> pubrevision=<doubleQuotes46>${project.version}<doubleQuotes46> status=<doubleQuotes46>release<doubleQuotes46>/><newline46mondego><newline46mondego>    <ivy:makepom ivyfile=<doubleQuotes46>${build.dir}/ivy.xml<doubleQuotes46> pomfile=<doubleQuotes46>${build.dir}/${ivy.module}.pom<doubleQuotes46>/><newline46mondego></target><newline46mondego><newline46mondego><target name=<doubleQuotes46>publish<doubleQuotes46> depends=<doubleQuotes46>build,prepare<doubleQuotes46> description=<doubleQuotes46>Upload to Nexus<doubleQuotes46>><newline46mondego>    <ivy:publish resolver=<doubleQuotes46>nexus-deploy<doubleQuotes46> pubrevision=<doubleQuotes46>${project.version}<doubleQuotes46> overwrite=<doubleQuotes46>true<doubleQuotes46> publishivy=<doubleQuotes46>false<doubleQuotes46> ><newline46mondego>        <artifacts pattern=<doubleQuotes46>${build.dir}/[artifact](-[classifier]).[ext]<doubleQuotes46>/><newline46mondego>    </ivy:publish><newline46mondego></target><newline46mondego>"
"821splitHere46","9429286splitHere46","<ivysettings><newline46mondego>    <settings defaultResolver=<doubleQuotes46>nexus-central<doubleQuotes46>/><newline46mondego>    <credentials host=<doubleQuotes46>somehost<doubleQuotes46> realm=<doubleQuotes46>Sonatype Nexus Repository Manager<doubleQuotes46> username=<doubleQuotes46>????<doubleQuotes46> passwd=<doubleQuotes46>????<doubleQuotes46>/><newline46mondego>    <resolvers><newline46mondego>        <ibiblio name=<doubleQuotes46>nexus-central<doubleQuotes46> root=<doubleQuotes46>http://somehost/nexus/content/repositories/central/<doubleQuotes46> m2compatible=<doubleQuotes46>true<doubleQuotes46>/><newline46mondego>        <ibiblio name=<doubleQuotes46>nexus-deploy<doubleQuotes46> root=<doubleQuotes46>http://somehost/nexus/content/repositories/repo<doubleQuotes46> m2compatible=<doubleQuotes46>true<doubleQuotes46>/><newline46mondego>    </resolvers><newline46mondego></ivysettings><newline46mondego>"
"822splitHere46","9429640splitHere46","AmazonS3 s3 = new AmazonS3Client(); // provide credentials, if need be<newline46mondego>ObjectListing objectListing = s3.listObjects(new ListObjectsRequest()<newline46mondego>        .withBucketName(<doubleQuotes46>cdn.generalsentiment.com<doubleQuotes46>);<newline46mondego>for (S3ObjectSummary objectSummary : objectListing.getObjectSummaries()) {<newline46mondego>    System.out.println(objectSummary.getKey());<newline46mondego>}<newline46mondego>"
"823splitHere46","9429640splitHere46","public static boolean isValidFile(AmazonS3 s3,<newline46mondego>        String bucketName,<newline46mondego>        String path) throws AmazonClientException, AmazonServiceException {<newline46mondego>    boolean isValidFile = true;<newline46mondego>    try {<newline46mondego>        ObjectMetadata objectMetadata = s3.getObjectMetadata(bucketName, path);<newline46mondego>    } catch (AmazonS3Exception s3e) {<newline46mondego>        if (s3e.getStatusCode() == 404) {<newline46mondego>        // i.e. 404: NoSuchKey - The specified key does not exist<newline46mondego>            isValidFile = false;<newline46mondego>        }<newline46mondego>        else {<newline46mondego>            throw s3e;    // rethrow all S3 exceptions other than 404   <newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    return isValidFile;<newline46mondego>}<newline46mondego>"
"824splitHere46","9429644splitHere46","Calendar calendar = Calendar.getInstance();<newline46mondego>        TimeZone fromTimeZone = calendar.getTimeZone();<newline46mondego>        TimeZone toTimeZone = TimeZone.getTimeZone(<doubleQuotes46>CST<doubleQuotes46>);<newline46mondego><newline46mondego>        calendar.setTimeZone(fromTimeZone);<newline46mondego>        calendar.add(Calendar.MILLISECOND, fromTimeZone.getRawOffset() * -1);<newline46mondego>        if (fromTimeZone.inDaylightTime(calendar.getTime())) {<newline46mondego>            calendar.add(Calendar.MILLISECOND, calendar.getTimeZone().getDSTSavings() * -1);<newline46mondego>        }<newline46mondego><newline46mondego>        calendar.add(Calendar.MILLISECOND, toTimeZone.getRawOffset());<newline46mondego>        if (toTimeZone.inDaylightTime(calendar.getTime())) {<newline46mondego>            calendar.add(Calendar.MILLISECOND, toTimeZone.getDSTSavings());<newline46mondego>        }<newline46mondego><newline46mondego>        System.out.println(calendar.getTime());<newline46mondego>"
"825splitHere46","9429722splitHere46","public void setValueAt(Object aValue, int row, int col) { <newline46mondego>      if (col == 3) { <newline46mondego>         data.get(row).setBought((Boolean) aValue); <newline46mondego>          this.fireTableCellUpdated(row, col); <newline46mondego><newline46mondego>      } <newline46mondego>  } <newline46mondego>"
"826splitHere46","9429733splitHere46","...<newline46mondego>            <packaging>war</packaging><newline46mondego>            ...<newline46mondego>            <plugin><newline46mondego>                <artifactId>maven-war-plugin</artifactId><newline46mondego>                <version>2.1.1</version><newline46mondego>                <configuration><newline46mondego>                    <containerConfigXML>src/main/webapp/META-INF/context.xml</containerConfigXML><newline46mondego>                    <attachClasses>true</attachClasses><newline46mondego>                </configuration><newline46mondego>            </plugin><newline46mondego>"
"827splitHere46","9429743splitHere46","Runtime.getRuntime().exec(command);<newline46mondego>"
"828splitHere46","9429803splitHere46","<%@ page import=<doubleQuotes46><your package structure here>.testClass<doubleQuotes46>%><newline46mondego>"
"829splitHere46","9429803splitHere46","<html>"
"830splitHere46","9429803splitHere46","html"
"831splitHere46","9429804splitHere46","jsonObject.put(<doubleQuotes46>yourKey<doubleQuotes46>, Arrays.asList(yorStringArray));<newline46mondego>"
"832splitHere46","9429804splitHere46","Object[]"
"833splitHere46","9429911splitHere46","SwingUtilities.invokeLater(new Runnable(){<newline46mondego>    @Override<newline46mondego>    public void run(){<newline46mondego>        text.getHighLighter().removeAllHighLights();<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"834splitHere46","9430037splitHere46","<TextView<newline46mondego>        android:id=<doubleQuotes46>@+id/textView3<doubleQuotes46><newline46mondego>        android:layout_width=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>        android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>        android:text=<doubleQuotes46>@string/str_item<doubleQuotes46><newline46mondego>        android:gravity=<doubleQuotes46>center_horizontal<doubleQuotes46><newline46mondego>        android:textAppearance=<doubleQuotes46>?android:attr/textAppearanceSmall<doubleQuotes46><newline46mondego>        android:layout_gravity=<doubleQuotes46>center_horizontal<doubleQuotes46> android:lines=<doubleQuotes46>2<doubleQuotes46> android:textColor=<doubleQuotes46>@color/Red<doubleQuotes46>/><newline46mondego>"
"835splitHere46","9430062splitHere46","Pattern pattern = pattern.compile(<doubleQuotes46>\\[<doubleQuotes46>);<newline46mondego>Matcher matcher = pattern.matcher(<doubleQuotes46>string to match against<doubleQuotes46>);<newline46mondego>"
"836splitHere46","9430219splitHere46","-1"
"837splitHere46","9430300splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>utf-8<doubleQuotes46>?><newline46mondego><TabHost xmlns:android=<doubleQuotes46>http://schemas.android.com/apk/res/android<doubleQuotes46><newline46mondego>    android:id=<doubleQuotes46>@android:id/tabhost<doubleQuotes46><newline46mondego>    android:layout_width=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>    android:layout_height=<doubleQuotes46>fill_parent<doubleQuotes46> ><newline46mondego>    <LinearLayout<newline46mondego>        android:layout_width=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>        android:layout_height=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>        android:orientation=<doubleQuotes46>vertical<doubleQuotes46> ><newline46mondego>        <TabWidget<newline46mondego>            android:id=<doubleQuotes46>@android:id/tabs<doubleQuotes46><newline46mondego>            android:layout_width=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>            android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>            android:layout_weight=<doubleQuotes46>0<doubleQuotes46> /><newline46mondego>        <FrameLayout<newline46mondego>            android:id=<doubleQuotes46>@android:id/tabcontent<doubleQuotes46><newline46mondego>            android:layout_width=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>            android:layout_height=<doubleQuotes46>0dip<doubleQuotes46><newline46mondego>            android:layout_weight=<doubleQuotes46>1<doubleQuotes46> /><newline46mondego>    </LinearLayout><newline46mondego><newline46mondego></TabHost><newline46mondego>"
"838splitHere46","9430325splitHere46","Column 1 | Integer<newline46mondego>Column 2 | String<newline46mondego>Column 3 | Date <newline46mondego>"
"839splitHere46","9430325splitHere46","String allColumnNames =<doubleQuotes46><doubleQuotes46>;<newline46mondego>foreach element in the hashmap, allColumnNames+=getKey() + <doubleQuotes46>,<doubleQuotes46><newline46mondego>"
"840splitHere46","9430325splitHere46","String statement = <doubleQuotes46>insert into table (<doubleQuotes46>+ allColumnNames +<doubleQuotes46>) values <doubleQuotes46> + <250 ? marks here>;<newline46mondego>"
"841splitHere46","9430338splitHere46","public String[] getFiles(String initialDir) {<newline46mondego>   List<String> files = new ArrayList<String>();<newline46mondego>   ...<newline46mondego>       files.add(aLovelyFile);<newline46mondego>   ...<newline46mondego>       String[] moarFiles = getFiles(aLovelyDirectory);<newline46mondego>       files.addAll(Arrays.asList(moarFiles));<newline46mondego>   ...<newline46mondego>   return files.toArray(new String[0]);<newline46mondego>}<newline46mondego>"
"842splitHere46","9430478splitHere46","String b = a.replaceAll(<doubleQuotes46>[\\w]_<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>"
"843splitHere46","9430544splitHere46","arg2"
"844splitHere46","9430544splitHere46","onItemClick"
"845splitHere46","9430544splitHere46","public void onItemClick(AdapterView arg0, View arg1, int arg2, long arg3) {<newline46mondego>    // TODO Action to perform<newline46mondego>    String selectedObject = objects[arg2]; //objects is the String array passed to the adapter.<newline46mondego>}<newline46mondego>"
"846splitHere46","9430588splitHere46","name"
"847splitHere46","9430588splitHere46","name"
"848splitHere46","9430588splitHere46","Interface1.name"
"849splitHere46","9430588splitHere46","Interface.name"
"850splitHere46","9430683splitHere46","\\("
"851splitHere46","9430683splitHere46","("
"852splitHere46","9430683splitHere46","\\{"
"853splitHere46","9430683splitHere46","{"
"854splitHere46","9430683splitHere46","Exception in thread <doubleQuotes46>AWT-EventQueue-0<doubleQuotes46> java.util.regex.PatternSyntaxException: <newline46mondego>Illegal repetition<newline46mondego>"
"855splitHere46","9430683splitHere46","import java.awt.*;<newline46mondego>import java.util.ArrayList;<newline46mondego>import java.util.List;<newline46mondego>import javax.swing.*;<newline46mondego>import javax.swing.event.*;<newline46mondego>import javax.swing.text.*;<newline46mondego><newline46mondego>public class TextAreaTest extends JFrame {<newline46mondego><newline46mondego>    private static final long serialVersionUID = 1L;<newline46mondego>    private JTextArea textArea;<newline46mondego><newline46mondego>    public TextAreaTest() {<newline46mondego>        textArea = new JTextArea();<newline46mondego>        textArea.setPreferredSize(new Dimension(60, 32));<newline46mondego>        textArea.setOpaque(true);<newline46mondego>        textArea.setLineWrap(true);<newline46mondego>        textArea.setWrapStyleWord(true);<newline46mondego>        ((AbstractDocument) textArea.getDocument()).setDocumentFilter(new DocumentFilter() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void insertString(FilterBypass fb, int offset, String string, AttributeSet attr) throws BadLocationException {<newline46mondego>                string = string.replaceAll(<doubleQuotes46>\\{<doubleQuotes46>, <doubleQuotes46>\\{}<doubleQuotes46>);<newline46mondego>                super.insertString(fb, offset, string, attr);<newline46mondego>            }<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void replace(FilterBypass fb, int offset, int length, String text, AttributeSet attrs) throws BadLocationException {<newline46mondego>                text = text.replaceAll(<doubleQuotes46>\\{<doubleQuotes46>, <doubleQuotes46>\\{}<doubleQuotes46>);<newline46mondego>                //TODO must do something here<newline46mondego>                super.replace(fb, offset, length, text, attrs);<newline46mondego>            }<newline46mondego>        });<newline46mondego><newline46mondego>        textArea.getDocument().addDocumentListener(new DocumentListener() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void changedUpdate(DocumentEvent e) {<newline46mondego>                update(e);<newline46mondego>            }<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void insertUpdate(DocumentEvent e) {<newline46mondego>                update(e);<newline46mondego>            }<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void removeUpdate(DocumentEvent e) {<newline46mondego>                update(e);<newline46mondego>            }<newline46mondego><newline46mondego>            private void update(DocumentEvent e) {<newline46mondego>                List<String> lines = getLines(textArea);<newline46mondego>                String lastLine = lines.get(lines.size() - 1);<newline46mondego>                int tabbedTextWidth = Utilities.getTabbedTextWidth(new Segment(<newline46mondego>                        lastLine.toCharArray(), 0, lastLine.length()), textArea.getFontMetrics(textArea.getFont()), 0, null, 0);<newline46mondego>                int lineHeight = getLineHeight(textArea);<newline46mondego>                if (lines.size() * lineHeight > textArea.getHeight() || tabbedTextWidth > textArea.getWidth()) {<newline46mondego>                    System.out.println(<doubleQuotes46>Too big! Should refuse the update!<doubleQuotes46>);<newline46mondego>                }<newline46mondego>            }<newline46mondego>        });<newline46mondego><newline46mondego>        getContentPane().add(textArea);<newline46mondego>    }<newline46mondego><newline46mondego>    private static List<String> getLines(JTextArea textArea) {<newline46mondego>        int lineHeight = getLineHeight(textArea);<newline46mondego>        List<String> list = new ArrayList<String>();<newline46mondego>        for (int num = 0;; num++) {<newline46mondego>            int i = textArea.viewToModel(new Point(0, num * lineHeight));<newline46mondego>            int j = textArea.viewToModel(new Point(0, (num + 1) * lineHeight));<newline46mondego>            if (i == 0 && j == 0) {<newline46mondego>                continue;<newline46mondego>            }<newline46mondego>            if (textArea.getDocument().getLength() == i && i == j) {<newline46mondego>                break;<newline46mondego>            }<newline46mondego>            String s = removeTrailingNewLine(textArea.getText().substring(i, j));<newline46mondego>            list.add(s);<newline46mondego>            //System.out.println(i + <doubleQuotes46> <doubleQuotes46> + j + <doubleQuotes46> = <doubleQuotes46> + s);<newline46mondego>        }<newline46mondego>        return list;<newline46mondego>    }<newline46mondego><newline46mondego>    private static int getLineHeight(JTextArea textArea) {<newline46mondego>        return textArea.getFontMetrics(textArea.getFont()).getHeight();<newline46mondego>    }<newline46mondego><newline46mondego>    private static String removeTrailingNewLine(String s) {<newline46mondego>        if (s.endsWith(<doubleQuotes46>\n<doubleQuotes46>)) {<newline46mondego>            return s.substring(0, s.length() - 1);<newline46mondego>        } else {<newline46mondego>            return s;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        javax.swing.SwingUtilities.invokeLater(new Runnable() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                TextAreaTest test = new TextAreaTest();<newline46mondego>                test.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>                test.pack();<newline46mondego>                test.setVisible(true);<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"856splitHere46","9430711splitHere46","http://"
"857splitHere46","9430779splitHere46","@ResponseBody"
"858splitHere46","9430779splitHere46","*/*"
"859splitHere46","9430779splitHere46","public class ExtendedBufferedImageHttpMessageConverter extends BufferedImageHttpMessageConverter {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean canWrite(Class<?> clazz, MediaType mediaType) {<newline46mondego>    if (mediaType.equals(MediaType.ALL)) {<newline46mondego>        return super.canWrite(clazz, MediaType.IMAGE_JPEG);<newline46mondego>    } else {<newline46mondego>        return super.canWrite(clazz, mediaType);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"860splitHere46","9430779splitHere46","Accept"
"861splitHere46","9430779splitHere46","image/jpeg"
"862splitHere46","9430779splitHere46","*/*"
"863splitHere46","9430847splitHere46","import javax.faces.application.FacesMessage;<newline46mondego>import javax.faces.context.FacesContext;<newline46mondego>...<newline46mondego>FacesMessage facesMsg = new FacesMessage(FacesMessage.SEVERITY_ERROR, msg, msg);<newline46mondego>FacesContext.getCurrentInstance().addMessage(null, facesMsg);<newline46mondego>"
"864splitHere46","9430847splitHere46","SEVERITY_WARN"
"865splitHere46","9430847splitHere46","SEVERITY_INFO"
"866splitHere46","9430847splitHere46","addMessage"
"867splitHere46","9430847splitHere46","null"
"868splitHere46","9430847splitHere46","h:messages"
"869splitHere46","9430946splitHere46","nohup java -server myApplication.jar > /log.txt"
"870splitHere46","9430946splitHere46","init.d"
"871splitHere46","9430946splitHere46","nohup"
"872splitHere46","9430946splitHere46","start-stop-daemon"
"873splitHere46","9430946splitHere46","/etc/init.d/skeleton"
"874splitHere46","9430946splitHere46","#!/bin/sh<newline46mondego><newline46mondego>DESC=<doubleQuotes46>Description<doubleQuotes46><newline46mondego>NAME=YOUR_NAME<newline46mondego>PIDFILE=/var/run/$NAME.pid<newline46mondego>RUN_AS=USER_TO_RUN<newline46mondego>COMMAND=/usr/bin/java -- -jar YOUR_JAR<newline46mondego><newline46mondego>d_start() {<newline46mondego>    start-stop-daemon --start --quiet --background --make-pidfile --pidfile $PIDFILE --chuid $RUN_AS --exec $COMMAND<newline46mondego>}<newline46mondego><newline46mondego>d_stop() {<newline46mondego>    start-stop-daemon --stop --quiet --pidfile $PIDFILE<newline46mondego>    if [ -e $PIDFILE ]<newline46mondego>        then rm $PIDFILE<newline46mondego>    fi<newline46mondego>}<newline46mondego><newline46mondego>case $1 in<newline46mondego>    start)<newline46mondego>    echo -n <doubleQuotes46>Starting $DESC: $NAME<doubleQuotes46><newline46mondego>    d_start<newline46mondego>    echo <doubleQuotes46>.<doubleQuotes46><newline46mondego>    ;;<newline46mondego>    stop)<newline46mondego>    echo -n <doubleQuotes46>Stopping $DESC: $NAME<doubleQuotes46><newline46mondego>    d_stop<newline46mondego>    echo <doubleQuotes46>.<doubleQuotes46><newline46mondego>    ;;<newline46mondego>    restart)<newline46mondego>    echo -n <doubleQuotes46>Restarting $DESC: $NAME<doubleQuotes46><newline46mondego>    d_stop<newline46mondego>    sleep 1<newline46mondego>    d_start<newline46mondego>    echo <doubleQuotes46>.<doubleQuotes46><newline46mondego>    ;;<newline46mondego>    *)<newline46mondego>    echo <doubleQuotes46>usage: $NAME {start|stop|restart}<doubleQuotes46><newline46mondego>    exit 1<newline46mondego>    ;;<newline46mondego>esac<newline46mondego><newline46mondego>exit 0<newline46mondego>"
"875splitHere46","9431140splitHere46","UTF-8"
"876splitHere46","9431140splitHere46","WINDOWS-1255"
"877splitHere46","9431140splitHere46","UTF-8"
"878splitHere46","9431267splitHere46","norwegian"
"879splitHere46","9431267splitHere46","String norwegian = <doubleQuotes46>< a, \u00E5;A< b,B< c,C< d,D< e,E< f,F< g,G< h,H< i,I< j,J<doubleQuotes46> +<newline46mondego>Â  Â  Â  Â  Â  Â  Â  Â  Â   <doubleQuotes46>< k,K< l,L< m,M< n,N< o,O< p,P< q,Q< r,R< s,S< t,T<doubleQuotes46> +<newline46mondego>Â  Â  Â  Â  Â  Â  Â  Â  Â  Â <doubleQuotes46>< u,U< v,V< w,W< x,X< y,Y< z,Z<doubleQuotes46>; Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â <newline46mondego>RuleBasedCollator myNorwegian = new RuleBasedCollator(norwegian); Â  Â Â <newline46mondego>List<String> words = <newline46mondego>  Arrays.asList(<doubleQuotes46>Arendal Bergen Drammen \u00E5lesund<doubleQuotes46>.split(<doubleQuotes46>\\s<doubleQuotes46>)); Â  Â Â <newline46mondego>System.out.println(words); Â  Â Â <newline46mondego>Collections.sort(words, myNorwegian); Â  Â Â <newline46mondego>System.out.println(words);<newline46mondego>"
"880splitHere46","9431314splitHere46","Object ob = em.createQuery(<doubleQuotes46>select id from Employee where bsn = '398723917'<doubleQuotes46>).getSingleResult();<newline46mondego>"
"881splitHere46","9431341splitHere46","getFirstResult()"
"882splitHere46","9431341splitHere46","getSingleResult()"
"883splitHere46","9431448splitHere46","your application          <newline46mondego>    ---------------------       <newline46mondego>          JAVA on OS1           <newline46mondego>    ---------------------<newline46mondego>           OS1<newline46mondego>    ---------------------<newline46mondego>         hardware<newline46mondego>    ---------------------<newline46mondego>"
"884splitHere46","9431450splitHere46","equals()"
"885splitHere46","9431450splitHere46","equals()"
"886splitHere46","9431450splitHere46","boolean sameIdentityAs(T other) <newline46mondego>// Entities compare by identity, not by attributes.<newline46mondego>"
"887splitHere46","9431500splitHere46","writeChars"
"888splitHere46","9431500splitHere46","writeChar"
"889splitHere46","9431500splitHere46","RandomAccessFile"
"890splitHere46","9431500splitHere46","FileOutputStream"
"891splitHere46","9431500splitHere46","OutputStreamWriter"
"892splitHere46","9431500splitHere46","writeBytes"
"893splitHere46","9431500splitHere46","writeChars"
"894splitHere46","9431652splitHere46","import java.nio.ByteOrder;<newline46mondego><newline46mondego>if (ByteOrder.nativeOrder().equals(ByteOrder.BIG_ENDIAN)) {<newline46mondego>  System.out.println(<doubleQuotes46>Big-endian<doubleQuotes46>);<newline46mondego>} else {<newline46mondego>  System.out.println(<doubleQuotes46>Little-endian<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"895splitHere46","9431863splitHere46","try-finally"
"896splitHere46","9431863splitHere46","public User find(String username, String password) throws SQLException {<newline46mondego>    Connection connection = null;<newline46mondego>    PreparedStatement statement = null;<newline46mondego>    ResultSet resultSet = null;<newline46mondego>    User user = null;<newline46mondego><newline46mondego>    try{<newline46mondego>        connection = database.getConnection();<newline46mondego>        statement = connection.prepareStatement(<doubleQuotes46>SELECT id, username, email FROM user WHERE username=? AND password=md5(?)<doubleQuotes46>);<newline46mondego>        statement.setString(1, username);<newline46mondego>        statement.setString(2, password);<newline46mondego>        resultSet = statement.executeQuery();<newline46mondego><newline46mondego>        if (resultSet.next()) {<newline46mondego>            user = new User();<newline46mondego>            user.setId(resultSet.getLong(<doubleQuotes46>id<doubleQuotes46>));<newline46mondego>            user.setUsername(resultSet.getString(<doubleQuotes46>username<doubleQuotes46>));<newline46mondego>            user.setEmail(resultSet.getString(<doubleQuotes46>email<doubleQuotes46>));<newline46mondego>        }<newline46mondego>    } finally {<newline46mondego>        if (resultSet != null) try { resultSet.close(); } catch (SQLException ignore) {}<newline46mondego>        if (statement != null) try { statement.close(); } catch (SQLException ignore) {}<newline46mondego>        if (connection != null) try { connection.close(); } catch (SQLException ignore) {}<newline46mondego>    }       <newline46mondego><newline46mondego>    return user;<newline46mondego>}<newline46mondego>"
"897splitHere46","9431863splitHere46","ResultSet"
"898splitHere46","9431998splitHere46","BufferedReader.readLine()"
"899splitHere46","9431998splitHere46","readLine()"
"900splitHere46","9431998splitHere46","FileUtils.readLines()"
"901splitHere46","9431998splitHere46","List<String>"
"902splitHere46","9431998splitHere46","List<String>"
"903splitHere46","9432020splitHere46","DecimalFormatter"
"904splitHere46","9432020splitHere46","DecimalFormat formatter1 = new DecimalFormat(<doubleQuotes46>0<doubleQuotes46>);<newline46mondego>    DecimalFormat formatter2 = new DecimalFormat(<doubleQuotes46>0.00<doubleQuotes46>);<newline46mondego><newline46mondego>    double[] input = {0, 1, 1.2, 1.265};<newline46mondego>    for (int i = 0; i < input.length; i++) {<newline46mondego>        double test = Math.round(input[i]);<newline46mondego>        if (Math.abs(test - input[i]) < 1E-6) {<newline46mondego>            System.out.println(formatter1.format(input[i]));<newline46mondego>        } else {<newline46mondego>            System.out.println(formatter2.format(input[i]));<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"905splitHere46","9432020splitHere46","DecimalFormatter"
"906splitHere46","9432020splitHere46","DecimalFormat formatter2 = new DecimalFormat(<doubleQuotes46>0.00<doubleQuotes46>);<newline46mondego><newline46mondego>    double[] input = {0, 1, 1.2, 1.265};<newline46mondego>    for (int i = 0; i < input.length; i++) {<newline46mondego>        String result = formatter2.format(input[i]);<newline46mondego>        int pos = result.indexOf(<doubleQuotes46>.00<doubleQuotes46>);<newline46mondego>        if (pos >= 0) {<newline46mondego>            result = result.substring(0, pos);<newline46mondego>        }<newline46mondego>        System.out.println(result);<newline46mondego>    }<newline46mondego>"
"907splitHere46","9432068splitHere46","Date"
"908splitHere46","9432068splitHere46","Date d = new Date();<newline46mondego>long l = d.getTime();<newline46mondego>Date theSameDate = new Date(l);<newline46mondego>"
"909splitHere46","9432071splitHere46","@Autowire"
"910splitHere46","9432071splitHere46","static"
"911splitHere46","9432087splitHere46","public static String getContentFromUrl(String url) throws ClientProtocolException, IOException {<newline46mondego><newline46mondego>    HttpClient httpClient = new DefaultHttpClient();<newline46mondego>    HttpGet httpGet = new HttpGet(url);<newline46mondego>    HttpResponse response;<newline46mondego><newline46mondego>    response = httpClient.execute(httpGet);<newline46mondego>    HttpEntity entity = response.getEntity();<newline46mondego><newline46mondego>    if (entity != null) {<newline46mondego><newline46mondego>        InputStream inStream = entity.getContent();<newline46mondego><newline46mondego>        String result = HttpService.convertStreamToString(inStream);<newline46mondego>        inStream.close();<newline46mondego><newline46mondego>        return result;<newline46mondego>    }<newline46mondego><newline46mondego>    return null;<newline46mondego>}<newline46mondego><newline46mondego>private static String convertStreamToString(InputStream is) {<newline46mondego><newline46mondego>    BufferedReader reader = new BufferedReader(new InputStreamReader(is));<newline46mondego>    StringBuilder sb = new StringBuilder();<newline46mondego><newline46mondego>    String line = null;<newline46mondego>    try {<newline46mondego>        while ((line = reader.readLine()) != null) {<newline46mondego>            sb.append(line + <doubleQuotes46>\n<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    } catch (IOException e) {<newline46mondego>        e.printStackTrace();<newline46mondego>    } finally {<newline46mondego>        try {<newline46mondego>            is.close();<newline46mondego>        } catch (IOException e) {<newline46mondego>            e.printStackTrace();<newline46mondego>        }<newline46mondego>    }<newline46mondego>    return sb.toString();<newline46mondego>}<newline46mondego>"
"912splitHere46","9432095splitHere46","Runnable"
"913splitHere46","9432095splitHere46","class MyRunnable implements Runnable {<newline46mondego>    @Override<newline46mondego>    public void run() {<newline46mondego>       int Runs = 0;<newline46mondego>       int[][] Mean10Runs = new int[10][10000];<newline46mondego>    // ...<newline46mondego><newline46mondego>new Thread(new MyRunnable()).start();<newline46mondego>"
"914splitHere46","9432095splitHere46","MyRunnable"
"915splitHere46","9432181splitHere46","limit"
"916splitHere46","9432181splitHere46","Query"
"917splitHere46","9432281splitHere46","board[0].xPos = 0;"
"918splitHere46","9432281splitHere46","};"
"919splitHere46","9432281splitHere46","public class Square{<newline46mondego>    public int pcolor;<newline46mondego>    public int contains;<newline46mondego>    public int xPos;<newline46mondego>    public int yPos;<newline46mondego>    Square(int xp,int yp,int pc,int cont){<newline46mondego>        xPos=xp;<newline46mondego>        yPos=yp;<newline46mondego>        contains=cont;<newline46mondego>        pcolor=pc;<newline46mondego>    }<newline46mondego>    Square[] board = new Square[64];<newline46mondego>}<newline46mondego>"
"920splitHere46","9432281splitHere46","board"
"921splitHere46","9432287splitHere46","@Override<newline46mondego>    public View getView(final int position, View convertView, ViewGroup parent) { <newline46mondego><newline46mondego>        Button btn = (Button)view.findViewById(R.id.cellbtn);<newline46mondego>        btn.setOnClickListener(new OnClickListener() {<newline46mondego>          public void onClick(View v) {<newline46mondego>                Toast.makeText(context,<doubleQuotes46>clicked<doubleQuotes46>,Toast.LENGTH_SHORT).show();<newline46mondego>          }<newline46mondego>        });<newline46mondego>    }<newline46mondego>"
"922splitHere46","9432287splitHere46","<Button<newline46mondego>        android:id=<doubleQuotes46>@+id/cellbtn<doubleQuotes46><newline46mondego>        android:layout_width=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>        android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>        android:focusable=<doubleQuotes46>false<doubleQuotes46><newline46mondego>        android:textColor=<doubleQuotes46>#FFFFFF<doubleQuotes46> /><newline46mondego>"
"923splitHere46","9432357splitHere46","Class.forName()"
"924splitHere46","9432357splitHere46","Class.forName()"
"925splitHere46","9432435splitHere46","package forum9419732;<newline46mondego><newline46mondego>import javax.xml.bind.annotation.*;<newline46mondego><newline46mondego>@XmlRootElement<newline46mondego>@XmlAccessorType(XmlAccessType.FIELD)<newline46mondego>public class Customer {<newline46mondego><newline46mondego>    @XmlAttribute<newline46mondego>    private int id;<newline46mondego><newline46mondego>    private String lastName;<newline46mondego>    private String firstName;<newline46mondego><newline46mondego>    public int getId() {<newline46mondego>        return id;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setId(int id) {<newline46mondego>        this.id = id;<newline46mondego>    }<newline46mondego><newline46mondego>    public String getLastName() {<newline46mondego>        return lastName;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setLastName(String lastName) {<newline46mondego>        this.lastName = lastName;<newline46mondego>    }<newline46mondego><newline46mondego>    public String getFirstName() {<newline46mondego>        return firstName;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setFirstName(String firstName) {<newline46mondego>        this.firstName = firstName;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"926splitHere46","9432435splitHere46","oxm-v2.xml"
"927splitHere46","9432435splitHere46","firstName"
"928splitHere46","9432435splitHere46","lastName"
"929splitHere46","9432435splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46>?><newline46mondego><xml-bindings<newline46mondego>    xmlns=<doubleQuotes46>http://www.eclipse.org/eclipselink/xsds/persistence/oxm<doubleQuotes46><newline46mondego>    package-name=<doubleQuotes46>forum9419732<doubleQuotes46>><newline46mondego>    <java-types><newline46mondego>        <java-type name=<doubleQuotes46>Customer<doubleQuotes46>><newline46mondego>            <java-attributes><newline46mondego>                <xml-attribute java-attribute=<doubleQuotes46>firstName<doubleQuotes46>/><newline46mondego>                <xml-attribute java-attribute=<doubleQuotes46>lastName<doubleQuotes46>/><newline46mondego>            </java-attributes><newline46mondego>        </java-type><newline46mondego>    </java-types><newline46mondego></xml-bindings><newline46mondego>"
"930splitHere46","9432435splitHere46","id"
"931splitHere46","9432435splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46>?><newline46mondego><xml-bindings<newline46mondego>    xmlns=<doubleQuotes46>http://www.eclipse.org/eclipselink/xsds/persistence/oxm<doubleQuotes46><newline46mondego>    package-name=<doubleQuotes46>forum9419732<doubleQuotes46>><newline46mondego>    <java-types><newline46mondego>        <java-type name=<doubleQuotes46>Customer<doubleQuotes46>><newline46mondego>            <java-attributes><newline46mondego>                <xml-element java-attribute=<doubleQuotes46>id<doubleQuotes46> name=<doubleQuotes46>identifier<doubleQuotes46>/><newline46mondego>            </java-attributes><newline46mondego>        </java-type><newline46mondego>    </java-types><newline46mondego></xml-bindings><newline46mondego>"
"932splitHere46","9432435splitHere46","package forum9419732;<newline46mondego><newline46mondego>import java.util.*;<newline46mondego>import javax.xml.bind.*;<newline46mondego>import org.eclipse.persistence.jaxb.JAXBContextFactory;<newline46mondego><newline46mondego>public class Demo {<newline46mondego><newline46mondego>    public static void main(String[] args) throws JAXBException {<newline46mondego>        Customer customer = new Customer();<newline46mondego>        customer.setId(123);<newline46mondego>        customer.setFirstName(<doubleQuotes46>Jane<doubleQuotes46>);<newline46mondego>        customer.setLastName(<doubleQuotes46>Doe<doubleQuotes46>);<newline46mondego><newline46mondego>        // VENDOR 1<newline46mondego>        JAXBContext jcV1 = JAXBContext.newInstance(Customer.class);<newline46mondego>        marshal(jcV1, customer);<newline46mondego><newline46mondego>        // VENDOR 2<newline46mondego>        Map<String, Object> propertiesV2 = new HashMap<String, Object>(1);<newline46mondego>        propertiesV2.put(JAXBContextFactory.ECLIPSELINK_OXM_XML_KEY, <doubleQuotes46>forum9419732/oxm-v2.xml<doubleQuotes46>);<newline46mondego>        JAXBContext jcV2 = JAXBContext.newInstance(new Class[] {Customer.class}, propertiesV2);<newline46mondego>        marshal(jcV2, customer);<newline46mondego><newline46mondego>        // VENDOR 3<newline46mondego>        Map<String, Object> propertiesV3 = new HashMap<String, Object>(1);<newline46mondego>        propertiesV3.put(JAXBContextFactory.ECLIPSELINK_OXM_XML_KEY, <doubleQuotes46>forum9419732/oxm-v3.xml<doubleQuotes46>);<newline46mondego>        JAXBContext jcV3 = JAXBContext.newInstance(new Class[] {Customer.class}, propertiesV3);<newline46mondego>        marshal(jcV3, customer);<newline46mondego><newline46mondego>        // VENDOR 4<newline46mondego>        Map<String, Object> propertiesV4 = new HashMap<String, Object>(1);<newline46mondego>        List<String> oxmV4 = new ArrayList<String>(2);<newline46mondego>        oxmV4.add(<doubleQuotes46>forum9419732/oxm-v2.xml<doubleQuotes46>);<newline46mondego>        oxmV4.add(<doubleQuotes46>forum9419732/oxm-v3.xml<doubleQuotes46>);<newline46mondego>        propertiesV4.put(JAXBContextFactory.ECLIPSELINK_OXM_XML_KEY, oxmV4);<newline46mondego>        JAXBContext jcV4 = JAXBContext.newInstance(new Class[] {Customer.class}, propertiesV4);<newline46mondego>        marshal(jcV4, customer);<newline46mondego>    }<newline46mondego><newline46mondego>    private static void marshal(JAXBContext jc, Customer customer) throws JAXBException {<newline46mondego>        Marshaller marshaller = jc.createMarshaller();<newline46mondego>        marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);<newline46mondego>        marshaller.marshal(customer, System.out);<newline46mondego>        System.out.println();<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"933splitHere46","9432435splitHere46","Customer"
"934splitHere46","9432435splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego><customer id=<doubleQuotes46>123<doubleQuotes46>><newline46mondego>   <lastName>Doe</lastName><newline46mondego>   <firstName>Jane</firstName><newline46mondego></customer><newline46mondego><newline46mondego><?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego><customer id=<doubleQuotes46>123<doubleQuotes46> lastName=<doubleQuotes46>Doe<doubleQuotes46> firstName=<doubleQuotes46>Jane<doubleQuotes46>/><newline46mondego><newline46mondego><?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego><customer><newline46mondego>   <identifier>123</identifier><newline46mondego>   <lastName>Doe</lastName><newline46mondego>   <firstName>Jane</firstName><newline46mondego></customer><newline46mondego><newline46mondego><?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego><customer lastName=<doubleQuotes46>Doe<doubleQuotes46> firstName=<doubleQuotes46>Jane<doubleQuotes46>><newline46mondego>   <identifier>123</identifier><newline46mondego></customer><newline46mondego>"
"935splitHere46","9432496splitHere46","SpriteSheet"
"936splitHere46","9432496splitHere46","Image"
"937splitHere46","9432496splitHere46","Image"
"938splitHere46","9432496splitHere46","getSubImage"
"939splitHere46","9432496splitHere46","Image"
"940splitHere46","9432496splitHere46","SpriteSheets"
"941splitHere46","9432567splitHere46","var num = new Number(13.3714);<newline46mondego>document.write(num.toFixed()+<doubleQuotes46><br /><doubleQuotes46>);<newline46mondego>document.write(num.toFixed(1)+<doubleQuotes46><br /><doubleQuotes46>);<newline46mondego>document.write(num.toFixed(3)+<doubleQuotes46><br /><doubleQuotes46>);<newline46mondego>document.write(num.toFixed(10));<newline46mondego>"
"942splitHere46","9432567splitHere46","double num = 13.3714;<newline46mondego>// Uses String.format()<newline46mondego>System.out.printf(<newline46mondego>          <doubleQuotes46>%f<br /><doubleQuotes46> +<newline46mondego>          <doubleQuotes46>%.1f<br /><doubleQuotes46> +<newline46mondego>          <doubleQuotes46>%.3f<br /><doubleQuotes46> +<newline46mondego>          <doubleQuotes46>%.10f<br /><doubleQuotes46>, num, num, num, num);<newline46mondego>"
"943splitHere46","9432991splitHere46","cls"
"944splitHere46","9432991splitHere46","Class"
"945splitHere46","9432991splitHere46","Class<Something>"
"946splitHere46","9432991splitHere46","Class"
"947splitHere46","9432991splitHere46","Class<?>"
"948splitHere46","9432991splitHere46","Class"
"949splitHere46","9432991splitHere46","Class cls = Example.class;<newline46mondego><newline46mondego>// Error: Type mismatch, cannot convert from Annotation to Resource<newline46mondego>Resource anno = cls.getAnnotation(Resource.class);<newline46mondego><newline46mondego>Class<?> cls2 = Example.class;<newline46mondego>Resource anno = cls2.getAnnotation(Resource.class); // OK<newline46mondego><newline46mondego>Class<Example> cls3 = Example.class;<newline46mondego>Resource anno = cls3.getAnnotation(Resource.class); // OK<newline46mondego>"
"950splitHere46","9433281splitHere46","int"
"951splitHere46","9433281splitHere46","long"
"952splitHere46","9433281splitHere46","boolean"
"953splitHere46","9433281splitHere46","equals"
"954splitHere46","9433281splitHere46","String"
"955splitHere46","9433281splitHere46","=="
"956splitHere46","9433281splitHere46","if(request.getParameter(<doubleQuotes46>loadtime<doubleQuotes46>).equals(<doubleQuotes46>true<doubleQuotes46>))<newline46mondego>"
"957splitHere46","9433281splitHere46","NullPointerException"
"958splitHere46","9433281splitHere46","instance.equals(otherIntstance)"
"959splitHere46","9433281splitHere46","instance == null"
"960splitHere46","9433281splitHere46","Object"
"961splitHere46","9433281splitHere46","String"
"962splitHere46","9433281splitHere46","if(<doubleQuotes46>true<doubleQuotes46>.equals(request.getParameter(<doubleQuotes46>loadtime<doubleQuotes46>)))<newline46mondego>"
"963splitHere46","9433281splitHere46","NullPointerException"
"964splitHere46","9433436splitHere46","<target name=<doubleQuotes46>badword-search<doubleQuotes46> description=<doubleQuotes46>search for bad words<doubleQuotes46>><newline46mondego>        <echo>Doing badword-serach</echo><newline46mondego>        <property name=<doubleQuotes46>src.dir<doubleQuotes46> value=<doubleQuotes46>src<doubleQuotes46> /><newline46mondego>        <property name=<doubleQuotes46>search.string<doubleQuotes46> value=<doubleQuotes46>\b(word1|word2|word3)\b<doubleQuotes46> /><newline46mondego><newline46mondego>        <fileset id=<doubleQuotes46>existing<doubleQuotes46> dir=<doubleQuotes46>${src.dir}<doubleQuotes46>><newline46mondego>            <patternset id=<doubleQuotes46>files<doubleQuotes46>><newline46mondego>                <!-- includes/excludes for your source here --><newline46mondego>            </patternset><newline46mondego>        </fileset><newline46mondego><newline46mondego>        <fileset id=<doubleQuotes46>matches<doubleQuotes46> dir=<doubleQuotes46>${src.dir}<doubleQuotes46>><newline46mondego>            <patternset refid=<doubleQuotes46>files<doubleQuotes46> /><newline46mondego>            <containsregexp expression=<doubleQuotes46>${search.string}<doubleQuotes46> casesensitive=<doubleQuotes46>false<doubleQuotes46> /><newline46mondego>        </fileset><newline46mondego><newline46mondego>        <fail message=<doubleQuotes46>Found badword in one or more files in '${src.dir}'<doubleQuotes46>><newline46mondego>            <condition><newline46mondego>                <resourcecount when=<doubleQuotes46>greater<doubleQuotes46> count=<doubleQuotes46>0<doubleQuotes46> refid=<doubleQuotes46>matches<doubleQuotes46> /><newline46mondego>            </condition><newline46mondego>        </fail><newline46mondego>    </target><newline46mondego>"
"965splitHere46","9433461splitHere46","BeanCurrentlyInCreationException"
"966splitHere46","9433461splitHere46","DiameterClient"
"967splitHere46","9433461splitHere46","xxxHandler"
"968splitHere46","9433461splitHere46","@Autowired"
"969splitHere46","9433461splitHere46","List<DiameterMessageHandler>"
"970splitHere46","9433461splitHere46","bean"
"971splitHere46","9433461splitHere46","constructor-arg"
"972splitHere46","9433461splitHere46","property"
"973splitHere46","9433461splitHere46","<bean id=<doubleQuotes46>diameterClient<doubleQuotes46> class=<doubleQuotes46>com.rory.ptspsim.diameterclient.DiameterClient<doubleQuotes46> scope=<doubleQuotes46>singleton<doubleQuotes46> init-method=<doubleQuotes46>start<doubleQuotes46>/><newline46mondego><newline46mondego><bean id=<doubleQuotes46>asrHandler<doubleQuotes46> class=<doubleQuotes46>com.rory.ptspsim.messagereceivers.ASRHandler<doubleQuotes46>/><newline46mondego><bean id=<doubleQuotes46>aaaHandler<doubleQuotes46> class=<doubleQuotes46>com.rory.ptspsim.messagereceivers.AAAHandler<doubleQuotes46>/><newline46mondego><bean id=<doubleQuotes46>ceaHandler<doubleQuotes46> class=<doubleQuotes46>com.rory.ptspsim.messagereceivers.CEAHandler<doubleQuotes46>/><newline46mondego><bean id=<doubleQuotes46>dwaHandler<doubleQuotes46> class=<doubleQuotes46>com.rory.ptspsim.messagereceivers.DWAHandler<doubleQuotes46>/><newline46mondego><bean id=<doubleQuotes46>staHandler<doubleQuotes46> class=<doubleQuotes46>com.rory.ptspsim.messagereceivers.STAHandler<doubleQuotes46>/><newline46mondego>"
"974splitHere46","9433461splitHere46","public class DiameterClient {<newline46mondego>    @Autowired<newline46mondego>    private List<DiameterMessageHandler> handlers;<newline46mondego><newline46mondego>    @Value(<doubleQuotes46>${pcca.host}<doubleQuotes46>)<newline46mondego>    private String host;<newline46mondego><newline46mondego>    @Value(<doubleQuotes46>${pcca.port}<doubleQuotes46>)<newline46mondego>    private int port; // or String...<newline46mondego><newline46mondego>    // I don't know what these other two would be...if they are autowired, or just values you would populate...<newline46mondego>    private String somePackage;<newline46mondego><newline46mondego>    private String anotherPackage;<newline46mondego><newline46mondego>    // methods go here...<newline46mondego>}<newline46mondego>"
"975splitHere46","9433461splitHere46","List<DiameterMessageHandler>"
"976splitHere46","9433461splitHere46","@Component"
"977splitHere46","9433461splitHere46","context:component-scan"
"978splitHere46","9433475splitHere46","Class<T>"
"979splitHere46","9433475splitHere46","public interface FruitProducer<T> {<newline46mondego>    T createFruit(String arg);<newline46mondego>}<newline46mondego><newline46mondego>public <T> List<T> returnFruits(String arg, FruitProducer<? extends T> producer) {<newline46mondego>    List<T> list = new ArrayList<T>();<newline46mondego>    T fruit = producer.createFruit(arg);<newline46mondego>    list.add(fruit);<newline46mondego>    return list;<newline46mondego>}<newline46mondego>"
"980splitHere46","9433475splitHere46","AppleProducer implements FruitProducer<Apple>"
"981splitHere46","9433475splitHere46","OrangeProducer implements FruitProducer<Orange>"
"982splitHere46","9433475splitHere46","FruitProducer"
"983splitHere46","9433475splitHere46","FruitProducer"
"984splitHere46","9433475splitHere46","returnFruits"
"985splitHere46","9433475splitHere46","public abstract class FruitLister<T> {<newline46mondego>    public abstract List<T> returnFruits(String arg);<newline46mondego>}<newline46mondego>"
"986splitHere46","9433475splitHere46","AppleLister implements FruitLister<Apple>"
"987splitHere46","9433475splitHere46","public class AppleLister implements FruitLister<Apple> {<newline46mondego>    @Override<newline46mondego>    public List<Apple> returnFruits(String arg) {<newline46mondego>            List<Apple> list = new ArrayList<Apple>();<newline46mondego>            Apple apple = new Apple(arg);<newline46mondego>            list.add(apple);<newline46mondego>            return list;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"988splitHere46","9433575splitHere46","// assume that the signleton is actually implemented correctly.<newline46mondego>public class IHateSingletons<newline46mondego>{<newline46mondego>  Map<String, Contact> contactMap;<newline46mondego><newline46mondego>  public void storeThatStuffs(final ObjectOutputStream outputStream)<newline46mondego>  {<newline46mondego>    outputStream.writeObject(contactMap);<newline46mondego>  }<newline46mondego><newline46mondego>  public void readThatStuffs(final ObjectInputStream inputStream)<newline46mondego>  {<newline46mondego>    contactMap = (Map<String, Contact>)inputStream.readObject();<newline46mondego>}<newline46mondego>"
"989splitHere46","9433857splitHere46","mm"
"990splitHere46","9433857splitHere46","SimpleDateFormat df = new SimpleDateFormat(<doubleQuotes46>dd-MM-yyyy<doubleQuotes46>);<newline46mondego>"
"991splitHere46","9433911splitHere46","@Override<newline46mondego>protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {<newline46mondego>    String json = createItSomehow();<newline46mondego>    response.setContentType(<doubleQuotes46>application/json<doubleQuotes46>);<newline46mondego>    response.setCharacterEncoding(<doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>    response.getWriter().write(json);<newline46mondego>}<newline46mondego>"
"992splitHere46","9433911splitHere46","compression=<doubleQuotes46>on<doubleQuotes46>"
"993splitHere46","9433911splitHere46","<Connector>"
"994splitHere46","9433911splitHere46","/conf/server.xml"
"995splitHere46","9433911splitHere46","<Connector ... compression=<doubleQuotes46>on<doubleQuotes46>><newline46mondego>"
"996splitHere46","9433911splitHere46","text/html,text/xml,text/plain"
"997splitHere46","9433911splitHere46","application/json"
"998splitHere46","9433911splitHere46","<Connector ... compression=<doubleQuotes46>on<doubleQuotes46> compressableMimeType=<doubleQuotes46>text/html,text/xml,text/plain,application/json<doubleQuotes46>><newline46mondego>"
"999splitHere46","9433911splitHere46","UTF-8"
"1000splitHere46","9433997splitHere46","DisplayForm dF = new DisplayForm();<newline46mondego>Storage st = new Storage();<newline46mondego>"
"1001splitHere46","9433997splitHere46","public void setDisplayForm(DisplayForm dF) {<newline46mondego>   this.dF = dF;<newline46mondego>}<newline46mondego><newline46mondego>// same for Storage<newline46mondego>"
"1002splitHere46","9433997splitHere46","public MainDisplayForm() {<newline46mondego>    initComponents();<newline46mondego>    ButtonListener_IncreaseGain btnListenerIncreaseGain = new ButtonListener_IncreaseGain();<newline46mondego>    btnListenerIncreaseGain.setDisplayForm(....);<newline46mondego>    btnListenerIncreaseGain.setStorage(....);<newline46mondego>    Btn_IncreaseGain.addActionListener(btnListenerIncreaseGain);<newline46mondego>}<newline46mondego>"
"1003splitHere46","9434137splitHere46","DateTime time = new DateTime(DateTimeZone.UTC);<newline46mondego><newline46mondego>Period period = new Period(time, time.plusDays(1).toDateMidnight());<newline46mondego>System.out.println(period.getHours());<newline46mondego>"
"1004splitHere46","9434519splitHere46","-"
"1005splitHere46","9434519splitHere46","^[-A-Za-z0-9$&!#_?:;\<doubleQuotes46>']+$"
"1006splitHere46","9434519splitHere46","-"
"1007splitHere46","9434539splitHere46","BrowserField"
"1008splitHere46","9434539splitHere46","BrowserField"
"1009splitHere46","9434601splitHere46","<ImageView<newline46mondego>        android:id=<doubleQuotes46>@+id/imageView1<doubleQuotes46><newline46mondego>        android:layout_width=<doubleQuotes46>match_parent<doubleQuotes46><newline46mondego>        android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>        android:layout_marginTop = <doubleQuotes46>50dp<doubleQuotes46> <newline46mondego>        android:src=<doubleQuotes46>@drawable/uph<doubleQuotes46> <newline46mondego>    android:layout_gravity=<doubleQuotes46>top|center<doubleQuotes46>/><newline46mondego>"
"1010splitHere46","9434641splitHere46","@JsonValue"
"1011splitHere46","9434667splitHere46","def xml = '''<log><newline46mondego>            |  <log4j:event logger=<doubleQuotes46>org.codehaus.groovy.grails.web.errors.GrailsExceptionResolver<doubleQuotes46> timestamp=<doubleQuotes46>1330083921521<doubleQuotes46> level=<doubleQuotes46>ERROR<doubleQuotes46> thread=<doubleQuotes46>http-8080-1<doubleQuotes46>><newline46mondego>            |    <log4j:message><![CDATA[Exception occurred when processing request: [GET] /test/log/show<newline46mondego>            |Stacktrace follows:]]></log4j:message><newline46mondego>            |    <log4j:throwable><![CDATA[org.xml.sax.SAXParseException: XML document structures must start and end within the same entity.<newline46mondego>            |    at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1231)<newline46mondego>            |    at com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:522)<newline46mondego>            |    at test.LogController$_closure2.doCall(LogController.groovy:21)<newline46mondego>            |    at test.LogController$_closure2.doCall(LogController.groovy)<newline46mondego>            |    at java.lang.Thread.run(Thread.java:662)<newline46mondego>            |]]></log4j:throwable><newline46mondego>            |  </log4j:event><newline46mondego>            |</log>'''.stripMargin()<newline46mondego><newline46mondego><newline46mondego>class LogEntry {<newline46mondego>  def level<newline46mondego>  def message<newline46mondego>  def thread<newline46mondego>  def logger<newline46mondego>  def timestamp<newline46mondego>  def throwable<newline46mondego><newline46mondego>  String toString() {<newline46mondego>    <doubleQuotes46><doubleQuotes46><doubleQuotes46>EVENT:<newline46mondego>      |  level   : $level<newline46mondego>      |  message : $message<newline46mondego>      |  thread  : $thread<newline46mondego>      |  logger  : $logger<newline46mondego>      |  ts      : $timestamp<newline46mondego>      |  thrown  : $throwable<doubleQuotes46><doubleQuotes46><doubleQuotes46>.stripMargin()<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>def parser = new XmlParser(false, false).parseText( xml )<newline46mondego>def entries = parser.'log4j:event'.collect { event -><newline46mondego>  new LogEntry().with {<newline46mondego>    level     = event.@level<newline46mondego>    message   = event.'log4j:message'.text()<newline46mondego>    thread    = event.@thread<newline46mondego>    logger    = event.@logger<newline46mondego>    timestamp = new Date( event.@timestamp as long )<newline46mondego>    throwable = event.'log4j:throwable'?.text() ?: ''<newline46mondego>    it<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>entries.each {<newline46mondego>  println it<newline46mondego>}<newline46mondego>"
"1012splitHere46","9434667splitHere46","EVENT:<newline46mondego>  level   : ERROR<newline46mondego>  message : Exception occurred when processing request: [GET] /test/log/show<newline46mondego>Stacktrace follows:<newline46mondego>  thread  : http-8080-1<newline46mondego>  logger  : org.codehaus.groovy.grails.web.errors.GrailsExceptionResolver<newline46mondego>  ts      : Fri Feb 24 11:45:21 GMT 2012<newline46mondego>  thrown  : org.xml.sax.SAXParseException: XML document structures must start and end within the same entity.<newline46mondego>    at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1231)<newline46mondego>    at com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:522)<newline46mondego>    at test.LogController$_closure2.doCall(LogController.groovy:21)<newline46mondego>    at test.LogController$_closure2.doCall(LogController.groovy)<newline46mondego>    at java.lang.Thread.run(Thread.java:662)<newline46mondego>"
"1013splitHere46","9434707splitHere46","glBegin(GL_QUADS);<newline46mondego>glPushMatrix();<newline46mondego>    glRotatef(rotation, 0, 0, 1);<newline46mondego>"
"1014splitHere46","9434707splitHere46","glBegin"
"1015splitHere46","9434707splitHere46","glEnd"
"1016splitHere46","9434707splitHere46","glBegin"
"1017splitHere46","9434735splitHere46","Maybe it could be that's making a call to some alread compiled library?"
"1018splitHere46","9434735splitHere46","CallStaticVoidMethod"
"1019splitHere46","9434735splitHere46","public static void DoSomething() { ... }"
"1020splitHere46","9434735splitHere46","JNIEnv * env"
"1021splitHere46","9434735splitHere46","jclass cls"
"1022splitHere46","9434735splitHere46","jmethodID methodID"
"1023splitHere46","9434735splitHere46","void CallStaticVoidMethod(jclass cls, jmethodID methodID, ...) {<newline46mondego>    va_list args;<newline46mondego>    va_start(args,methodID);<newline46mondego>    functions->CallStaticVoidMethodV(this,cls,methodID,args);<newline46mondego>    va_end(args);<newline46mondego>}<newline46mondego>"
"1024splitHere46","9434735splitHere46","functions->CallStaticVoidMethodV"
"1025splitHere46","9434754splitHere46","txt.insert(<doubleQuotes46>}<doubleQuotes46>, pos + 1);<newline46mondego>"
"1026splitHere46","9434809splitHere46","ArrayList"
"1027splitHere46","9434809splitHere46","Object[]"
"1028splitHere46","9434809splitHere46","for (Integer integer : list) {<newline46mondego>    System.out.println(integer);<newline46mondego>}<newline46mondego>"
"1029splitHere46","9434809splitHere46","for (Iterator iterator = list.iterator(); iterator.hasNext(); ) {<newline46mondego>    Integer integer = (Integer) list.next();<newline46mondego>    System.out.println(integer);<newline46mondego>}<newline46mondego>"
"1030splitHere46","9434809splitHere46","String"
"1031splitHere46","9434809splitHere46","Alpha"
"1032splitHere46","9434809splitHere46","ClassCastException"
"1033splitHere46","9434911splitHere46","public static void main(String[] args) {<newline46mondego>    String s = <doubleQuotes46>abc def, ghi klm<doubleQuotes46>;<newline46mondego>    Pattern p = Pattern.compile(<doubleQuotes46>[^,] <doubleQuotes46>);<newline46mondego>    Matcher m = p.matcher(s);<newline46mondego><newline46mondego>    int count = 0;<newline46mondego>    while (m.find())<newline46mondego>        count++;<newline46mondego><newline46mondego>    System.out.println(count); //prints 2<newline46mondego>}<newline46mondego>"
"1034splitHere46","9434933splitHere46","select b from Band b where :d member of b.dates<newline46mondego>"
"1035splitHere46","9435062splitHere46","merge()"
"1036splitHere46","9435062splitHere46","persist()"
"1037splitHere46","9435285splitHere46","SimpleCursorAdapter"
"1038splitHere46","9435285splitHere46","TextView"
"1039splitHere46","9435285splitHere46","ListView"
"1040splitHere46","9435285splitHere46","_id"
"1041splitHere46","9435285splitHere46","String[] from = {BaseColumns._ID, <doubleQuotes46>col1<doubleQuotes46>, <doubleQuotes46>col2<doubleQuotes46>};<newline46mondego>int[] to = {R.id.Text1, R.id.text2}<newline46mondego>SimpleCursorAdapter adap = new SimpleCursorAdapter(this, R.layout.the_row_layout, curosrObject, from, to);<newline46mondego>"
"1042splitHere46","9435285splitHere46","_id"
"1043splitHere46","9435285splitHere46","MatrixCursor"
"1044splitHere46","9435285splitHere46","private static int key = 0;<newline46mondego>"
"1045splitHere46","9435285splitHere46","MatrixCursor"
"1046splitHere46","9435285splitHere46","BaseColumns._ID"
"1047splitHere46","9435285splitHere46","MatrixCursor"
"1048splitHere46","9435285splitHere46","Object"
"1049splitHere46","9435285splitHere46","String"
"1050splitHere46","9435285splitHere46","Object[] fsii = new Object[4];<newline46mondego>fsii[0]= key;<newline46mondego>fsii[1]= name;<newline46mondego>fsii[2]= id;<newline46mondego>fsii[3]= info;<newline46mondego>cursor.addRow(fsii);<newline46mondego>key++; // the _id must have unique values so increment the key value;<newline46mondego>"
"1051splitHere46","9435323splitHere46","grossAnnualIncome"
"1052splitHere46","9435323splitHere46","ans1"
"1053splitHere46","9435323splitHere46","if - else if - else ..."
"1054splitHere46","9435323splitHere46","System.out.print"
"1055splitHere46","9435323splitHere46","println"
"1056splitHere46","9435328splitHere46","CSDelightAlertTask"
"1057splitHere46","9435413splitHere46","rule X<newline46mondego>when<newline46mondego>    A( name == <doubleQuotes46>bob<doubleQuotes46>, value == 10 )<newline46mondego>...<newline46mondego>"
"1058splitHere46","9435413splitHere46","rule X<newline46mondego>when<newline46mondego>    Person( $addresses : addresses )<newline46mondego>    Address( city == <doubleQuotes46>Montreal<doubleQuotes46>, country == <doubleQuotes46>CA<doubleQuotes46> ) from $addresses<newline46mondego>...<newline46mondego>"
"1059splitHere46","9435413splitHere46","rule X<newline46mondego>when<newline46mondego>    $list : List()<newline46mondego>    A( name == <doubleQuotes46>bob<doubleQuotes46>, value == 10 ) from $list<newline46mondego>...<newline46mondego>"
"1060splitHere46","9435680splitHere46","EditText"
"1061splitHere46","9435680splitHere46","android:inputType=<doubleQuotes46>number<doubleQuotes46> <newline46mondego>"
"1062splitHere46","9435680splitHere46","EditText"
"1063splitHere46","9435680splitHere46","true"
"1064splitHere46","9435680splitHere46","onKey"
"1065splitHere46","9435680splitHere46","onKey"
"1066splitHere46","9435680splitHere46","true"
"1067splitHere46","9435680splitHere46","EditText"
"1068splitHere46","9435680splitHere46","inputType"
"1069splitHere46","9435680splitHere46","xml"
"1070splitHere46","9435680splitHere46","EditText"
"1071splitHere46","9435680splitHere46","TextWatcher"
"1072splitHere46","9435680splitHere46","text"
"1073splitHere46","9435706splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46>?><newline46mondego><xs:schema xmlns:xs=<doubleQuotes46>http://www.w3.org/2001/XMLSchema<doubleQuotes46>><newline46mondego>  <xs:element name=<doubleQuotes46>note<doubleQuotes46>><newline46mondego>    <xs:complexType><newline46mondego>      <xs:sequence><newline46mondego>        <xs:element name=<doubleQuotes46>to<doubleQuotes46> type=<doubleQuotes46>xs:string<doubleQuotes46>/><newline46mondego>        <xs:element name=<doubleQuotes46>from<doubleQuotes46> type=<doubleQuotes46>xs:string<doubleQuotes46>/><newline46mondego>        <xs:element name=<doubleQuotes46>heading<doubleQuotes46> type=<doubleQuotes46>xs:string<doubleQuotes46>/><newline46mondego>        <xs:element name=<doubleQuotes46>body<doubleQuotes46> type=<doubleQuotes46>xs:string<doubleQuotes46>/><newline46mondego>      </xs:sequence><newline46mondego>    </xs:complexType><newline46mondego>  </xs:element><newline46mondego></xs:schema><newline46mondego>"
"1074splitHere46","9435706splitHere46","xs"
"1075splitHere46","9435706splitHere46","schema"
"1076splitHere46","9435706splitHere46","element"
"1077splitHere46","9435706splitHere46","complexType"
"1078splitHere46","9435706splitHere46","sequence"
"1079splitHere46","9435706splitHere46","element"
"1080splitHere46","9435706splitHere46",":"
"1081splitHere46","9435706splitHere46","xs:schema"
"1082splitHere46","9435706splitHere46","xs:element"
"1083splitHere46","9435706splitHere46","xs:complexType"
"1084splitHere46","9435706splitHere46","xs:sequence"
"1085splitHere46","9435706splitHere46","xs:element"
"1086splitHere46","9435744splitHere46","long timestamp = System.currentTimeMillis();<newline46mondego>"
"1087splitHere46","9435744splitHere46","java.util.Date"
"1088splitHere46","9435744splitHere46","Date now = new Date();<newline46mondego>"
"1089splitHere46","9435744splitHere46","TIMESTAMP"
"1090splitHere46","9435744splitHere46","@PreUpdate"
"1091splitHere46","9435744splitHere46","@Entity<newline46mondego>public class User {<newline46mondego><newline46mondego>    @Column @Temporal(TemporalType.TIMESTAMP)<newline46mondego>    private Date lastUpdate;<newline46mondego><newline46mondego>    @PreUpdate<newline46mondego>    public void onUpdate() {<newline46mondego>        lastUpdate = new Date();<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"1092splitHere46","9435744splitHere46","UPDATE"
"1093splitHere46","9435744splitHere46","lastUpdate TIMESTAMP DEFAULT now() ON UPDATE now() <newline46mondego>"
"1094splitHere46","9435816splitHere46","File"
"1095splitHere46","9435851splitHere46","PopupPanel"
"1096splitHere46","9435851splitHere46","PopupPanel popup = new PopupPanel(true);<newline46mondego>FlowPanel panel = new FlowPanel();<newline46mondego>//add Button etc<newline46mondego>popup.setSize(<doubleQuotes46>1100px<doubleQuotes46>,<doubleQuotes46>500px<doubleQuotes46>);<newline46mondego>popup.clear();<newline46mondego>popup.add(panel);<newline46mondego>popup.show();<newline46mondego>popup.center();<newline46mondego>"
"1097splitHere46","9435851splitHere46","if (Window.confirm(<doubleQuotes46>Do you really want to delete the dataset?<doubleQuotes46>))<newline46mondego>{<newline46mondego>     //delete code<newline46mondego>}<newline46mondego>"
"1098splitHere46","9435971splitHere46","private Options createOptionsChart() {<newline46mondego>    Options options = Options.create();<newline46mondego>    options.set(<doubleQuotes46>isStacked<doubleQuotes46>, true);<newline46mondego>    //set some options<newline46mondego><newline46mondego>    Options series_options = Options.create();<newline46mondego>    series1_options = Options.create();<newline46mondego>    series1_options.set(<doubleQuotes46>color<doubleQuotes46>,<doubleQuotes46>black<doubleQuotes46>);<newline46mondego>    series_options.set(<doubleQuotes46>0<doubleQuotes46>,series1_options);<newline46mondego>    options.set(<doubleQuotes46>series<doubleQuotes46>,series_options);<newline46mondego>    return options;<newline46mondego>}<newline46mondego>"
"1099splitHere46","9435972splitHere46","embeddable"
"1100splitHere46","9436001splitHere46",".ordinal()"
"1101splitHere46","9436001splitHere46","getValue()"
"1102splitHere46","9436154splitHere46","criteria.setResultTransformer(CriteriaSpecification.DISTINCT_ROOT_ENTITY);<newline46mondego>"
"1103splitHere46","9436184splitHere46","javap"
"1104splitHere46","9436184splitHere46","$ javap ProtocolPacket<newline46mondego>public interface ProtocolPacket extends scala.Serializable{<newline46mondego>    public abstract byte[] toByteArray();<newline46mondego>}<newline46mondego>"
"1105splitHere46","9436184splitHere46","$ javap ProtocolPacket$<newline46mondego>public final class ProtocolPacket$ extends java.lang.Object implements scala.ScalaObject,scala.Serializable{<newline46mondego>    public static final ProtocolPacket$ MODULE$;<newline46mondego>    public static {};<newline46mondego>    public void getStreamType(byte[]);<newline46mondego>    public java.lang.Object readResolve();<newline46mondego>}<newline46mondego>"
"1106splitHere46","9436184splitHere46","ProtocolPacket$.MODULE$.getStreamType(/**/)<newline46mondego>"
"1107splitHere46","9436212splitHere46","if ( xpp.getName().equal(<doubleQuotes46>creature<doubleQuotes46>))<newline46mondego>     attribID = Integer.parseInt(xpp.getAttributeValue(0));<newline46mondego>else<newline46mondego>     elName = xpp.getName();<newline46mondego>"
"1108splitHere46","9436217splitHere46","/**<newline46mondego> * id The id<newline46mondego> */<newline46mondego>"
"1109splitHere46","9436223splitHere46","AjaxFormComponentUpdatingBehavior"
"1110splitHere46","9436332splitHere46","!"
"1111splitHere46","9436332splitHere46","rendered=<doubleQuotes46>!#{viewRecordBean.currentRecord(listedRecord.id)}<doubleQuotes46> <newline46mondego>"
"1112splitHere46","9436332splitHere46","rendered=<doubleQuotes46>#{!viewRecordBean.currentRecord(listedRecord.id)}<doubleQuotes46> <newline46mondego>"
"1113splitHere46","9436332splitHere46","<h:dataTable>"
"1114splitHere46","9436354splitHere46","(\\d+)?(\\.)?\\d+"
"1115splitHere46","9436467splitHere46","import java.util.*;<newline46mondego><newline46mondego>public class ArraySet<T> {<newline46mondego>    private final Map<Integer, T> indexToElem;<newline46mondego>    private final Map<T, Integer> elemToIndex;<newline46mondego><newline46mondego>    public ArraySet() {<newline46mondego>        indexToElem = new HashMap<Integer, T>();<newline46mondego>        elemToIndex = new HashMap<T, Integer>();<newline46mondego>    }<newline46mondego><newline46mondego>    public T get(int index) {<newline46mondego>        if (index < 0 || index >= size())<newline46mondego>            throw new IndexOutOfBoundsException();<newline46mondego>        return indexToElem.get(index);<newline46mondego>    }<newline46mondego><newline46mondego>    public void add(T elem) {<newline46mondego>        if (!contains(elem)) {<newline46mondego>            int index = indexToElem.size();<newline46mondego>            indexToElem.put(index, elem);<newline46mondego>            elemToIndex.put(elem, index);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    // Doesn't work; see comment.<newline46mondego>    /*public void remove(T elem) {<newline46mondego>        int index = elemToIndex.get(elem);<newline46mondego>        indexToElem.remove(index);<newline46mondego>        elemToIndex.remove(elem);<newline46mondego>    }*/<newline46mondego><newline46mondego>    public boolean contains(T elem) {<newline46mondego>        return elemToIndex.containsKey(elem);<newline46mondego>    }<newline46mondego><newline46mondego>    public int size() {<newline46mondego>        return indexToElem.size();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1116splitHere46","9436559splitHere46","super()"
"1117splitHere46","9436559splitHere46","this()"
"1118splitHere46","9436559splitHere46","First static init<newline46mondego>2nd static init<newline46mondego>1st instance init<newline46mondego>2nd instance init<newline46mondego>No-arg const<newline46mondego>1st instance init  <---- They are right here...<newline46mondego>2nd instance init  <---- They are right here...<newline46mondego>1-arg const<newline46mondego>"
"1119splitHere46","9436559splitHere46","class Module4 {<newline46mondego>    Module4 (int x) { <newline46mondego>        System.out.println(<doubleQuotes46>1st instance init<doubleQuotes46>);<newline46mondego>        System.out.println(<doubleQuotes46>2nd instance init<doubleQuotes46>);<newline46mondego>        System.out.println(<doubleQuotes46>1-arg const<doubleQuotes46>); <newline46mondego>    }<newline46mondego>    Module4 () { <newline46mondego>        System.out.println(<doubleQuotes46>1st instance init<doubleQuotes46>);<newline46mondego>        System.out.println(<doubleQuotes46>2nd instance init<doubleQuotes46>);            <newline46mondego>        System.out.println(<doubleQuotes46>No-arg const<doubleQuotes46>); <newline46mondego>    }<newline46mondego>    static { System.out.println(<doubleQuotes46>First static init<doubleQuotes46>); }<newline46mondego>    //{ System.out.println(<doubleQuotes46>1st instance init<doubleQuotes46>); }<newline46mondego>    //{ System.out.println(<doubleQuotes46>2nd instance init<doubleQuotes46>); }<newline46mondego>    static { System.out.println(<doubleQuotes46>2nd static init<doubleQuotes46>); }<newline46mondego><newline46mondego>    public static void main(String[] args)<newline46mondego>    {<newline46mondego>        new ModuleInit();<newline46mondego>        new ModuleInit(8);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1120splitHere46","9436572splitHere46","PreferenceActivity"
"1121splitHere46","9436572splitHere46","public void onSharedPreferenceChanged(SharedPreferences sharedPreferences,<newline46mondego>        String key) {<newline46mondego><newline46mondego>    //Make sure the item changed was the list_preference <newline46mondego>    if(key.equals(<doubleQuotes46>list_preference<doubleQuotes46>)) {<newline46mondego>        String value = sharedPreferences.getString(key, <doubleQuotes46>Nothing<doubleQuotes46>);<newline46mondego><newline46mondego>        if(value.equals(<doubleQuotes46>Send_sms<doubleQuotes46>)) {<newline46mondego>            //launch AlertDialog with list or launch new preference <newline46mondego>        }       <newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1122splitHere46","9436597splitHere46","ojdbc14.jar"
"1123splitHere46","9436597splitHere46","glassfish\domains\domain1\lib\ext"
"1124splitHere46","9436638splitHere46","int flags = Base64.NO_WRAP | Base64.URL_SAFE;<newline46mondego>"
"1125splitHere46","9436719splitHere46","int randomMultipleOf5 = 5*random.nextInt(21);<newline46mondego>"
"1126splitHere46","9436875splitHere46","long value = d.longValue();<newline46mondego>"
"1127splitHere46","9436909splitHere46","for(File f: filesFromDirectory) {<newline46mondego>    bool OK = true;<newline46mondego>    for(Long i: fnameVals) {<newline46mondego>        if(f.name.contains(String.valueOf(i))) {<newline46mondego>            OK = false;<newline46mondego>            break;<newline46mondego>    }<newline46mondego>    if(OK) System.out.println(f.name);<newline46mondego>}<newline46mondego>"
"1128splitHere46","9437132splitHere46","Lclass/path/ClassName;<newline46mondego>"
"1129splitHere46","9437132splitHere46","<doubleQuotes46>Ljava/lang/String;<doubleQuotes46> // String<newline46mondego><doubleQuotes46>[Ljava/lang/String;<doubleQuotes46> // String[] (array)<newline46mondego>"
"1130splitHere46","9437132splitHere46","long f (int n, String s, int[] arr); // Java method<newline46mondego><doubleQuotes46>(ILjava/lang/String;[I)J<doubleQuotes46> // JNI type signature<newline46mondego>"
"1131splitHere46","9437132splitHere46","void getData( ListDataClass[] arryData ) // Java method<newline46mondego><doubleQuotes46>(L[class/path/ListDataClass;)V<doubleQuotes46> // JNI type signature<newline46mondego>"
"1132splitHere46","9437132splitHere46","jclass clz = env->FindClass(<doubleQuotes46>class/path/ListDataClass<doubleQuotes46>);<newline46mondego>jmethodID mid = env->GetMethodID(clz, <doubleQuotes46>getData<doubleQuotes46>, <doubleQuotes46>(L[class/path/ListDataClass;)V<doubleQuotes46>);<newline46mondego>"
"1133splitHere46","9437179splitHere46","kill"
"1134splitHere46","9437179splitHere46","kill"
"1135splitHere46","9437179splitHere46","public void move() {<newline46mondego><newline46mondego>    if(x > -16) {<newline46mondego>        x -= move_speed;<newline46mondego>    } else {<newline46mondego>        ObjectHandler.remember_to_kill(this);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>// in ObjectHandler:<newline46mondego><newline46mondego>private HashSet<type_of_object_to_kill> kill_memory = new...;<newline46mondego><newline46mondego>public void remember_to_kill() {<newline46mondego>    this.kill_memory.add(this);<newline46mondego>}<newline46mondego><newline46mondego>private void kill_from_memory() {<newline46mondego>    for (type_of_object_to_kill obj: kill_memory) {<newline46mondego>        ObjectHandler.bullets.remove(this);<newline46mondego>    }<newline46mondego>    ObjectHandler.kill_memory.clear();<newline46mondego>}<newline46mondego><newline46mondego>// update movement:<newline46mondego><newline46mondego>public void updateMovement() {<newline46mondego>    PlayerObject.update();<newline46mondego><newline46mondego>    for(Bullet bullet : ObjectHandler.bullets) {<newline46mondego>        bullet.move();<newline46mondego>    }<newline46mondego>    ObjectHandler.kill_from_memory();<newline46mondego>}<newline46mondego>"
"1136splitHere46","9437295splitHere46","HTTP GET"
"1137splitHere46","9437456splitHere46","@Aspect<newline46mondego>public class DaoAspect {<newline46mondego>    @AfterThrowing(/*any method in a @Repository class that is not annotated with @ExceptionHandler*/ throwing=<doubleQuotes46>ex<doubleQuotes46>)<newline46mondego>    public void doRecoveryActions(DataAccessException ex) {<newline46mondego>        //find method of throwing class that can handle the exception via @ExceptionHandler<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1138splitHere46","9437626splitHere46","<bean id=<doubleQuotes46>cache<doubleQuotes46> class=<doubleQuotes46>org.hdiv.session.StateCache<doubleQuotes46> singleton=<doubleQuotes46>false<doubleQuotes46> <newline46mondego>  init-method=<doubleQuotes46>init<doubleQuotes46>><newline46mondego>    <property name=<doubleQuotes46>maxSize<doubleQuotes46>><newline46mondego>        <value>200</value><newline46mondego>    </property><newline46mondego></bean><newline46mondego>"
"1139splitHere46","9437728splitHere46","Withdrawn as of 02 May, 2011"
"1140splitHere46","9437943splitHere46","-Xrunhprof"
"1141splitHere46","9437943splitHere46","dump.hprof"
"1142splitHere46","9438191splitHere46","URLClassLoader"
"1143splitHere46","9438191splitHere46","ClassLoader"
"1144splitHere46","9438278splitHere46","DefaultBlockBrush"
"1145splitHere46","9438278splitHere46","CrossedBlockBrush"
"1146splitHere46","9438278splitHere46","DefaultBlockBrush"
"1147splitHere46","9438278splitHere46","CrossedBlockBrush"
"1148splitHere46","9438278splitHere46","CrossedBlockBrush"
"1149splitHere46","9438278splitHere46","DefaultBlockBrush"
"1150splitHere46","9438278splitHere46","ClassLoader"
"1151splitHere46","9438309splitHere46","solvedSudoku.setMatrix(unsolvedSudoku.getMatrix());<newline46mondego>"
"1152splitHere46","9438309splitHere46","System.arraycopy()"
"1153splitHere46","9438309splitHere46","Arrays"
"1154splitHere46","9438398splitHere46","internalFrame.setVisible(true)"
"1155splitHere46","9438398splitHere46","try {<newline46mondego>  internalFrame.setMaximum(true);<newline46mondego>} catch (PropertyVetoException e) {<newline46mondego>  // Vetoed by internalFrame<newline46mondego>  // ... possibly add some handling for this case<newline46mondego>}<newline46mondego>"
"1156splitHere46","9438398splitHere46","internalFrame.setSize(internalFrame.getMaximumSize());"
"1157splitHere46","9438428splitHere46","CardLayout"
"1158splitHere46","9438430splitHere46","paint()"
"1159splitHere46","9438430splitHere46","public TestObject() {<newline46mondego>    //...<newline46mondego>    mainFrame.add( this );<newline46mondego>    //...<newline46mondego>}<newline46mondego>"
"1160splitHere46","9438430splitHere46","@Override<newline46mondego>getPreferredSize(){<newline46mondego>    return new Dimension( 20, 20 );<newline46mondego>}<newline46mondego>"
"1161splitHere46","9438432splitHere46","if (str==null || !str.equals(<doubleQuotes46>norw<doubleQuotes46>)) {<newline46mondego>  // do whatever<newline46mondego>}<newline46mondego>"
"1162splitHere46","9438470splitHere46","UnicodeEncoding"
"1163splitHere46","9438470splitHere46","digest.update(MyString.getBytes(<doubleQuotes46>UTF-16LE<doubleQuotes46>));<newline46mondego>"
"1164splitHere46","9438506splitHere46","String one = <doubleQuotes46>some string<doubleQuotes46>;<newline46mondego>String two = one;<newline46mondego>one = <doubleQuotes46>another<doubleQuotes46>;<newline46mondego>System.out.println(one);<newline46mondego>System.out.println(two);<newline46mondego>"
"1165splitHere46","9438506splitHere46","another<newline46mondego>some string<newline46mondego>"
"1166splitHere46","9438506splitHere46","public class Session {<newline46mondego>    private String currentUserId = null;<newline46mondego>    public void setCurrentUserId( String id ) {<newline46mondego>        currentUserId = id;<newline46mondego>    }<newline46mondego>    public String getCurrentUserId() {<newline46mondego>        return currentUserId;<newline46mondego>    }<newline46mondego>    // Other session related information<newline46mondego>    //... <newline46mondego>}<newline46mondego>"
"1167splitHere46","9438506splitHere46","public class MyApp  {<newline46mondego>    private Session currentSession;<newline46mondego>    public MyApp() {<newline46mondego>        currentSession = new Session();<newline46mondego>    }<newline46mondego>    public void login() {<newline46mondego>        //...<newline46mondego>        if ( studentID != null ) {<newline46mondego>            if ( password.equals(student.password) ) {<newline46mondego>                currentSession.setCurrentUserId(studentID);<newline46mondego>                //...<newline46mondego>            }<newline46mondego>        }<newline46mondego>        //...<newline46mondego>    }<newline46mondego>    public void someOtherMethod() {<newline46mondego>        System.out.println(currentSession.getCurrentUserId());<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1168splitHere46","9438590splitHere46","getNonConfigurationInstance"
"1169splitHere46","9438590splitHere46","onRetainNonConfigurationInstance"
"1170splitHere46","9438590splitHere46","Bundle"
"1171splitHere46","9438590splitHere46","Bundle"
"1172splitHere46","9438590splitHere46","putBundle(String key, Bundle value)"
"1173splitHere46","9438590splitHere46","Parcelable"
"1174splitHere46","9438590splitHere46","Bundle"
"1175splitHere46","9438590splitHere46","putParcelable(String key, Parcelable value)"
"1176splitHere46","9438590splitHere46","JSONObject"
"1177splitHere46","9438590splitHere46","Bundle"
"1178splitHere46","9438590splitHere46","Parcelable"
"1179splitHere46","9438639splitHere46","values"
"1180splitHere46","9438759splitHere46","ExpandableListView"
"1181splitHere46","9438759splitHere46","ListView"
"1182splitHere46","9438759splitHere46","ListView"
"1183splitHere46","9438760splitHere46","getType()"
"1184splitHere46","9438760splitHere46","getName()"
"1185splitHere46","9438760splitHere46","static"
"1186splitHere46","9438805splitHere46","for (int checks = xrange; checks <= zrange; checks++)<newline46mondego>    {<newline46mondego>        boolean[] checkForPrime = Primes(1000000);<newline46mondego>"
"1187splitHere46","9438805splitHere46","boolean[] checkForPrime = Primes(1000000);<newline46mondego>    for (int checks = xrange; checks <= zrange; checks++)<newline46mondego>    {<newline46mondego>"
"1188splitHere46","9438805splitHere46","zrange - xrange + 1"
"1189splitHere46","9438913splitHere46","am.list(<doubleQuotes46>/assets<doubleQuotes46>)"
"1190splitHere46","9438913splitHere46","am.list(<doubleQuotes46><doubleQuotes46>)"
"1191splitHere46","9439120splitHere46","Thread.sleep(milliseconds)"
"1192splitHere46","9439120splitHere46","try {<newline46mondego>    // to sleep 10 seconds<newline46mondego>    Thread.sleep(10000);<newline46mondego>} catch (InterruptedException e) {<newline46mondego>    // recommended because catching InterruptedException clears interrupt flag<newline46mondego>    Thread.currentThread().interrupt();<newline46mondego>    // you probably want to quit if the thread is interrupted<newline46mondego>    return;<newline46mondego>}<newline46mondego>"
"1193splitHere46","9439120splitHere46","Runnable"
"1194splitHere46","9439132splitHere46","public final static boolean doCompare(Date min, Date max, Date toCompare) {<newline46mondego>  // ...<newline46mondego>}<newline46mondego>public final static boolean doCompare(int min, int max, int toCompare) {<newline46mondego>  // ...<newline46mondego>}<newline46mondego>// ...and so on<newline46mondego>"
"1195splitHere46","9439132splitHere46","int"
"1196splitHere46","9439132splitHere46","Object"
"1197splitHere46","9439132splitHere46","static"
"1198splitHere46","9439132splitHere46","compareTo"
"1199splitHere46","9439132splitHere46","min"
"1200splitHere46","9439132splitHere46","max"
"1201splitHere46","9439132splitHere46","SearchManager"
"1202splitHere46","9439132splitHere46","SearchManager"
"1203splitHere46","9439132splitHere46","abstract"
"1204splitHere46","9439132splitHere46","doCompare"
"1205splitHere46","9439132splitHere46","SearchManager"
"1206splitHere46","9439132splitHere46","static"
"1207splitHere46","9439159splitHere46","setUndecorated(true)"
"1208splitHere46","9439159splitHere46","icon"
"1209splitHere46","9439222splitHere46","<project><newline46mondego>  [...]<newline46mondego>  <build><newline46mondego>    <plugins><newline46mondego>      [...]<newline46mondego>      <plugin><newline46mondego>        <groupId>org.codehaus.mojo</groupId><newline46mondego>        <artifactId>gwt-maven-plugin</artifactId><newline46mondego>        <version>2.4.0</version><newline46mondego>        <executions><newline46mondego>          <execution><newline46mondego>            <configuration><newline46mondego>              <deploy>src/main/webapp/WEB-INF/deploy/</deploy><newline46mondego>            </configuration><newline46mondego>            <goals><newline46mondego>              <goal>compile</goal><newline46mondego>            </goals><newline46mondego>          </execution><newline46mondego>        </executions><newline46mondego>      </plugin><newline46mondego>      [...]<newline46mondego>    </plugins><newline46mondego>  </build><newline46mondego>  [...]<newline46mondego></project><newline46mondego>"
"1210splitHere46","9439226splitHere46","<base-name>"
"1211splitHere46","9439226splitHere46","<base-name>src.main.resources.text</base-name>"
"1212splitHere46","9439226splitHere46","src.main.resources"
"1213splitHere46","9439226splitHere46","text.properties"
"1214splitHere46","9439226splitHere46","src/main/resources"
"1215splitHere46","9439226splitHere46","<base-name>"
"1216splitHere46","9439226splitHere46","text"
"1217splitHere46","9439226splitHere46","<base-name>text</base-name><newline46mondego>"
"1218splitHere46","9439306splitHere46","fooList.toArray(new Foo[fooList.size()]);<newline46mondego>"
"1219splitHere46","9439306splitHere46","toArray()"
"1220splitHere46","9439311splitHere46","getServletContext().getRequestDispatcher(<doubleQuotes46>/BankAdvisor/AddAccount<doubleQuotes46>).forward(request, response);<newline46mondego>"
"1221splitHere46","9439311splitHere46","request.getRequestDispatcher(<doubleQuotes46>/BankAdvisor/AddAccount<doubleQuotes46>).forward(request, response);<newline46mondego>"
"1222splitHere46","9439486splitHere46","Application"
"1223splitHere46","9439486splitHere46","FacesContext.getCurrentInstance().getApplication().addELResolver(myResolver);<newline46mondego>"
"1224splitHere46","9439710splitHere46","FlushMode.AUTO"
"1225splitHere46","9439710splitHere46","Session.flush()"
"1226splitHere46","9439710splitHere46","objectClassDAO.delete()"
"1227splitHere46","9439710splitHere46","objectClassDAO.delete"
"1228splitHere46","9439816splitHere46","PersistenceManager pm = getPersistenceManager();<newline46mondego>try {<newline46mondego>    q = pm.newQuery(MyObject.class, query);<newline46mondego>    List<MyObject> objects = (List<MyObject>) q.execute();<newline46mondego>    pm.currentTransaction().begin(); // <-------<newline46mondego>    for (MyObject object: objects) {<newline46mondego>        object.setMyField(newValue);<newline46mondego>    }<newline46mondego>    pm.currentTransaction().commit(); // <-------<newline46mondego>    System.out.println(objects); //[1]<newline46mondego>} finally {<newline46mondego>    pm.close();<newline46mondego>}<newline46mondego>"
"1229splitHere46","9439836splitHere46","Strin nStr = str.replaceAll(letter,d);<newline46mondego>"
"1230splitHere46","9439915splitHere46","TreeSet"
"1231splitHere46","9439915splitHere46","false"
"1232splitHere46","9439915splitHere46","Queue"
"1233splitHere46","9439915splitHere46","IllegalStateException"
"1234splitHere46","9439986splitHere46","http://java.sun.com/index.html   <newline46mondego>"
"1235splitHere46","9439986splitHere46","FAQ.html   <newline46mondego>"
"1236splitHere46","9439986splitHere46","http://java.sun.com/FAQ.html<newline46mondego>"
"1237splitHere46","9439986splitHere46","/"
"1238splitHere46","9439986splitHere46","location"
"1239splitHere46","9440012splitHere46","*"
"1240splitHere46","9440012splitHere46","main"
"1241splitHere46","9440012splitHere46","java -classpath <doubleQuotes46>C:\Users\Constantin\workspace\Java Libraries\JNA\*;executable.jar<doubleQuotes46> com.foo.Bar<newline46mondego>"
"1242splitHere46","9440012splitHere46","com.foo.Bar"
"1243splitHere46","9440012splitHere46","main"
"1244splitHere46","9440012splitHere46","jar"
"1245splitHere46","9440057splitHere46","JList"
"1246splitHere46","9440057splitHere46","JList.getSelectedItem()"
"1247splitHere46","9440057splitHere46","JTextPane.viewToModel(Point p)"
"1248splitHere46","9440136splitHere46","JFrame"
"1249splitHere46","9440136splitHere46","JPanels"
"1250splitHere46","9440136splitHere46","JFrame"
"1251splitHere46","9440167splitHere46","Max Length..."
"1252splitHere46","9440167splitHere46","display"
"1253splitHere46","9440209splitHere46","<util:properties id=<doubleQuotes46>googleProperties<doubleQuotes46> <newline46mondego>                  location=<doubleQuotes46>WEB-INF/${ENV_SYSTEM:dev}/google.properties<doubleQuotes46> /><newline46mondego>"
"1254splitHere46","9440209splitHere46","<util:properties id=<doubleQuotes46>googleProperties<doubleQuotes46> <newline46mondego>                  location=<doubleQuotes46>WEB-INF/dev/google.properties<doubleQuotes46> /><newline46mondego>"
"1255splitHere46","9440209splitHere46","ENV_SYSTEM"
"1256splitHere46","9440209splitHere46","qa"
"1257splitHere46","9440209splitHere46","<util:properties id=<doubleQuotes46>googleProperties<doubleQuotes46> <newline46mondego>                  location=<doubleQuotes46>WEB-INF/qa/google.properties<doubleQuotes46> /><newline46mondego>"
"1258splitHere46","9440209splitHere46","<beans profile=<doubleQuotes46>dev<doubleQuotes46>><newline46mondego>    <util:properties id=<doubleQuotes46>googleProperties<doubleQuotes46> <newline46mondego>                     location=<doubleQuotes46>WEB-INF/google-dev.properties<doubleQuotes46> /><newline46mondego></beans><newline46mondego><newline46mondego><beans profile=<doubleQuotes46>qa<doubleQuotes46>><newline46mondego>    <util:properties id=<doubleQuotes46>googleProperties<doubleQuotes46> <newline46mondego>                     location=<doubleQuotes46>WEB-INF/google-qa.properties<doubleQuotes46> /><newline46mondego></beans><newline46mondego>"
"1259splitHere46","9440209splitHere46","googleProperties"
"1260splitHere46","9440209splitHere46","WEB-INF/google-dev.properties"
"1261splitHere46","9440209splitHere46","GenericXmlApplicationContext ctx = new GenericXmlApplicationContext();<newline46mondego>ctx.getEnvironment().setActiveProfiles( <doubleQuotes46>dev<doubleQuotes46> );<newline46mondego>ctx.load( <doubleQuotes46>classpath:/org/boom/bang/config/xml/*-config.xml<doubleQuotes46> );<newline46mondego>ctx.refresh();<newline46mondego>"
"1262splitHere46","9440220splitHere46","messages[cc.attrs.value]"
"1263splitHere46","9440220splitHere46","'cc.attrs.value'"
"1264splitHere46","9440294splitHere46","System.gc()"
"1265splitHere46","9440294splitHere46","main"
"1266splitHere46","9440294splitHere46","F"
"1267splitHere46","9440294splitHere46","F"
"1268splitHere46","9440294splitHere46","T obj"
"1269splitHere46","9440294splitHere46","goOom"
"1270splitHere46","9440294splitHere46","main"
"1271splitHere46","9440439splitHere46","ArrayList<String> items = new ArrayList<String>();<newline46mondego>for(int i=0; i < jArray.length() ; i++) {<newline46mondego>    json_data = jArray.getJSONObject(i);<newline46mondego>    int id=json_data.getInt(<doubleQuotes46>id<doubleQuotes46>);<newline46mondego>    String name=json_data.getString(<doubleQuotes46>name<doubleQuotes46>);<newline46mondego>    items.add(name);<newline46mondego>    Log.d(name,<doubleQuotes46>Output<doubleQuotes46>);<newline46mondego>}<newline46mondego><newline46mondego>ArrayAdapter<String> mArrayAdapter = new ArrayAdapter<String>(this,  <newline46mondego>           android.R.layout.simple_expandable_list_item_1, items));<newline46mondego>setListAdapter(mArrayAdapter)<newline46mondego>"
"1272splitHere46","9440487splitHere46","Integer / Object / String"
"1273splitHere46","9440487splitHere46","Item"
"1274splitHere46","9440487splitHere46","Integer / Object / String myWhatever = ageEntries.getSelectedItem();<newline46mondego>"
"1275splitHere46","9440487splitHere46","ItemListener"
"1276splitHere46","9440487splitHere46","SELECTED/DESELECTED"
"1277splitHere46","9440487splitHere46","import java.awt.*;<newline46mondego>import java.awt.event.*;<newline46mondego>import javax.swing.*;<newline46mondego><newline46mondego>public class ComboBoxListeners {<newline46mondego><newline46mondego>    private JFrame f;<newline46mondego>    private JComboBox flyFromCombo;<newline46mondego>    private JComboBox flyToCombo;<newline46mondego>    private JLabel tripLabel = new JLabel();<newline46mondego>    private Object[] itemsFrom;<newline46mondego>    private Object[] itemsTo;<newline46mondego><newline46mondego>    public ComboBoxListeners() {<newline46mondego>        itemsFrom = new Object[]{<doubleQuotes46>-<doubleQuotes46>, <doubleQuotes46>First - From<doubleQuotes46>, <doubleQuotes46>Second - From<doubleQuotes46>, <doubleQuotes46>Third - From<doubleQuotes46>};<newline46mondego>        itemsTo = new Object[]{<doubleQuotes46>-<doubleQuotes46>, <doubleQuotes46>First - To<doubleQuotes46>, <doubleQuotes46>Second - To<doubleQuotes46>, <doubleQuotes46>Third - To<doubleQuotes46>};<newline46mondego>        //flyFromCombo.setPrototypeDisplayValue(<doubleQuotes46>################################################<doubleQuotes46>);<newline46mondego>        flyFromCombo = new JComboBox(itemsFrom);<newline46mondego>        flyFromCombo.addItemListener(new ItemListener() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void itemStateChanged(ItemEvent e) {<newline46mondego>                if ((e.getStateChange() == ItemEvent.SELECTED)) {<newline46mondego>                    String str = flyFromCombo.getSelectedItem().toString();<newline46mondego>                    String str1 = flyToCombo.getSelectedItem().toString();<newline46mondego>                    setLabelText(str, str1);<newline46mondego>                }<newline46mondego>            }<newline46mondego>        });<newline46mondego>        flyToCombo = new JComboBox(itemsTo);<newline46mondego>        flyToCombo.addItemListener(new ItemListener() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void itemStateChanged(ItemEvent e) {<newline46mondego>                if ((e.getStateChange() == ItemEvent.SELECTED)) {<newline46mondego>                    String str = flyFromCombo.getSelectedItem().toString();<newline46mondego>                    String str1 = flyToCombo.getSelectedItem().toString();<newline46mondego>                    setLabelText(str, str1);<newline46mondego>                }<newline46mondego>            }<newline46mondego>        });<newline46mondego>        tripLabel.setPreferredSize(new Dimension(400, 30));<newline46mondego>        f = new JFrame(<doubleQuotes46>ComboBox ItemListeners<doubleQuotes46>);<newline46mondego>        f.setLayout(new GridLayout(0, 1, 15, 15));<newline46mondego>        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        f.add(flyFromCombo);<newline46mondego>        f.add(flyToCombo);<newline46mondego>        f.add(tripLabel);<newline46mondego>        f.setLocation(150, 150);<newline46mondego>        f.pack();<newline46mondego>        f.setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>    private void setLabelText(String str1, String str2) {<newline46mondego>        String textForLabel = <doubleQuotes46><doubleQuotes46>;<newline46mondego>        String helpStringFirst = str1.trim();<newline46mondego>        if (helpStringFirst != null && helpStringFirst.length() > 0) {<newline46mondego>            if (!helpStringFirst.equals(<doubleQuotes46>-<doubleQuotes46>)) {<newline46mondego>                textForLabel = <doubleQuotes46>Flight No57. from :   <doubleQuotes46> + helpStringFirst;<newline46mondego>            } else {<newline46mondego>                textForLabel = <doubleQuotes46>Flight from Un-Know :   <doubleQuotes46>;<newline46mondego>            }<newline46mondego>        }<newline46mondego>        String helpStringSecond = str2.trim();<newline46mondego>        if (helpStringSecond != null && helpStringSecond.length() > 0) {<newline46mondego>            if (!helpStringSecond.equals(<doubleQuotes46>-<doubleQuotes46>)) {<newline46mondego>                textForLabel = textForLabel + <doubleQuotes46>   --> to :   <doubleQuotes46> + helpStringSecond;<newline46mondego>            } else {<newline46mondego>                textForLabel += <doubleQuotes46>   to :   Un-Know    <doubleQuotes46>;<newline46mondego>            }<newline46mondego>        }<newline46mondego>        final String pushTextForLabel = textForLabel;<newline46mondego>        SwingUtilities.invokeLater(new Runnable() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                tripLabel.setText(pushTextForLabel);<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        SwingUtilities.invokeLater(new Runnable() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                ComboBoxListeners comboBoxListeners = new ComboBoxListeners();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1278splitHere46","9440487splitHere46","import java.awt.*;<newline46mondego>import java.awt.event.*;<newline46mondego>import java.util.ArrayList;<newline46mondego>import javax.swing.*;<newline46mondego><newline46mondego>public class ComboBoxListeners {<newline46mondego><newline46mondego>    private JFrame f;<newline46mondego>    private JComboBox flyFromCombo;<newline46mondego>    private JLabel tripLabel = new JLabel();<newline46mondego><newline46mondego>    public ComboBoxListeners() {<newline46mondego>        ArrayList<Integer> ageList = new ArrayList<Integer>();<newline46mondego>        for (int i = 1; i <= 100; ++i) {<newline46mondego>            ageList.add(i);<newline46mondego>        }<newline46mondego>        DefaultComboBoxModel modelAge = new DefaultComboBoxModel();<newline46mondego>        for (Integer i : ageList) {<newline46mondego>            modelAge.addElement(i);<newline46mondego>        }<newline46mondego>        flyFromCombo = new JComboBox(modelAge);<newline46mondego>        flyFromCombo.addItemListener(new ItemListener() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void itemStateChanged(ItemEvent e) {<newline46mondego>                if ((e.getStateChange() == ItemEvent.SELECTED)) {<newline46mondego>                    String str = flyFromCombo.getSelectedItem().toString();<newline46mondego>                    tripLabel.setText(<doubleQuotes46>Selected Age From JComboBox is :   <doubleQuotes46> + str);<newline46mondego>                }<newline46mondego>            }<newline46mondego>        });<newline46mondego>        tripLabel.setPreferredSize(new Dimension(400, 30));<newline46mondego>        f = new JFrame(<doubleQuotes46>ComboBox ItemListeners<doubleQuotes46>);<newline46mondego>        f.setLayout(new GridLayout(0, 1, 15, 15));<newline46mondego>        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        f.add(flyFromCombo);<newline46mondego>        f.add(tripLabel);<newline46mondego>        f.setLocation(150, 150);<newline46mondego>        f.pack();<newline46mondego>        f.setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        SwingUtilities.invokeLater(new Runnable() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                ComboBoxListeners comboBoxListeners = new ComboBoxListeners();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1279splitHere46","9440643splitHere46","com/mysql/jdbc/Connection"
"1280splitHere46","9440643splitHere46","com/mysql/jdbc/Connection"
"1281splitHere46","9440695splitHere46","int score;<newline46mondego><newline46mondego>    ...<newline46mondego>    Intent Intent = new Intent(...);<newline46mondego>    intent.putExtra(<doubleQuotes46>score_key<doubleQuotes46>, score);<newline46mondego>    startActivity(intent);<newline46mondego>"
"1282splitHere46","9440695splitHere46","onCreate()"
"1283splitHere46","9440695splitHere46","int score;<newline46mondego>    ...<newline46mondego><newline46mondego>    Bundle extras = getIntent().getExtras();<newline46mondego><newline46mondego>    // Read the extras data if it's available.<newline46mondego>    if (extras != null)<newline46mondego>    {<newline46mondego>        score = extras.getInt(<doubleQuotes46>score_key<doubleQuotes46>);<newline46mondego>    }<newline46mondego>"
"1284splitHere46","9440923splitHere46","="
"1285splitHere46","9440923splitHere46","a[i] = (i = 9)"
"1286splitHere46","9440923splitHere46","i"
"1287splitHere46","9440923splitHere46","a[i]"
"1288splitHere46","9440923splitHere46","i = 9"
"1289splitHere46","9440923splitHere46","i"
"1290splitHere46","9440923splitHere46","0"
"1291splitHere46","9440923splitHere46","int[] #0 = a;<newline46mondego>int #1 = i;<newline46mondego>int #2 = 9;<newline46mondego>i = #2;<newline46mondego>#0[#1] = #2;<newline46mondego>"
"1292splitHere46","9441079splitHere46","if(user X && pc Y) ...<newline46mondego>else if (pc Z) ...<newline46mondego>"
"1293splitHere46","9441079splitHere46","if(user X)<newline46mondego>   if(pc Y) ...<newline46mondego>   else if (pc Z) ...<newline46mondego>"
"1294splitHere46","9441079splitHere46","if(user X && pc Y) ...<newline46mondego>else if(user X && pc Z) ...<newline46mondego>"
"1295splitHere46","9441079splitHere46","if(user plays paper)<newline46mondego>    if(pc plays rock)<newline46mondego>        ...<newline46mondego>    else if (pc plays scissors)<newline46mondego>        ...<newline46mondego>else if(user plays rock)<newline46mondego>    if(pc plays scissors)<newline46mondego>        ...<newline46mondego>    else if (pc plays paper)<newline46mondego>        ...<newline46mondego>else if(user plays scissors)<newline46mondego>    if(pc plays rock)<newline46mondego>        ...<newline46mondego>    else if (pc plays paper)<newline46mondego>        ...<newline46mondego>"
"1296splitHere46","9441087splitHere46","int n = 123;<newline46mondego>String.format(<doubleQuotes46>%011d<doubleQuotes46>, 123);<newline46mondego>// ===> 00000000123<newline46mondego>"
"1297splitHere46","9441087splitHere46","Integer.parseInt(<doubleQuotes46>00000000123<doubleQuotes46>);<newline46mondego>// ====> 123<newline46mondego>"
"1298splitHere46","9441093splitHere46","SingleThreadModel"
"1299splitHere46","9441100splitHere46","String username = System.getProperty(<doubleQuotes46>user.name<doubleQuotes46>);<newline46mondego>"
"1300splitHere46","9441231splitHere46","emptySessionPath"
"1301splitHere46","9441231splitHere46","true"
"1302splitHere46","9441231splitHere46","<Connector>"
"1303splitHere46","9441231splitHere46","/conf/server.xml"
"1304splitHere46","9441231splitHere46","<Connector ... emptySessionPath=<doubleQuotes46>true<doubleQuotes46>><newline46mondego>"
"1305splitHere46","9441231splitHere46","sessionCookiePath"
"1306splitHere46","9441231splitHere46","/"
"1307splitHere46","9441231splitHere46","<Context>"
"1308splitHere46","9441231splitHere46","context.xml"
"1309splitHere46","9441231splitHere46","<Context ... sessionCookiePath=<doubleQuotes46>/<doubleQuotes46>><newline46mondego>"
"1310splitHere46","9441231splitHere46","web.xml"
"1311splitHere46","9441231splitHere46","<session-config><newline46mondego>    <cookie-config><newline46mondego>        <path>/</path><newline46mondego>    </cookie-config><newline46mondego></session-config><newline46mondego>"
"1312splitHere46","9441231splitHere46","SessionCookieConfig"
"1313splitHere46","9441231splitHere46","ServletContext#getSessionCookieConfig()"
"1314splitHere46","9441231splitHere46","getServletContext().getSessionCookieConfig().setPath(<doubleQuotes46>/<doubleQuotes46>);<newline46mondego>"
"1315splitHere46","9441231splitHere46","ServletContextListener#contextInitialized()"
"1316splitHere46","9441231splitHere46","HttpServlet#init()"
"1317splitHere46","9441330splitHere46","receives the name of the file system, for example, the FAT file system or the NTFS file system"
"1318splitHere46","9441330splitHere46","package filesystem;<newline46mondego><newline46mondego><newline46mondego>import java.util.HashMap;<newline46mondego>import java.util.Map;<newline46mondego><newline46mondego>import com.sun.jna.Library;<newline46mondego>import com.sun.jna.Native;<newline46mondego>import com.sun.jna.platform.win32.WinDef.DWORD;<newline46mondego>import com.sun.jna.ptr.IntByReference;<newline46mondego>import com.sun.jna.win32.StdCallLibrary;<newline46mondego>import com.sun.jna.win32.W32APIFunctionMapper;<newline46mondego>import com.sun.jna.win32.W32APITypeMapper;<newline46mondego><newline46mondego>public interface Kernel32 extends StdCallLibrary {<newline46mondego><newline46mondego>    final static Map<String, Object> WIN32API_OPTIONS = new HashMap<String, Object>() {<newline46mondego><newline46mondego>        private static final long serialVersionUID = 1L;<newline46mondego><newline46mondego>        {<newline46mondego>            put(Library.OPTION_FUNCTION_MAPPER, W32APIFunctionMapper.UNICODE);<newline46mondego>            put(Library.OPTION_TYPE_MAPPER, W32APITypeMapper.UNICODE);<newline46mondego>        }<newline46mondego>    };<newline46mondego><newline46mondego>    public Kernel32 INSTANCE = (Kernel32) Native.loadLibrary(<doubleQuotes46>Kernel32<doubleQuotes46>, Kernel32.class, WIN32API_OPTIONS);<newline46mondego><newline46mondego>    /*<newline46mondego>    BOOL WINAPI GetVolumeInformation(<newline46mondego>            __in_opt   LPCTSTR lpRootPathName,<newline46mondego>            __out      LPTSTR lpVolumeNameBuffer,<newline46mondego>            __in       DWORD nVolumeNameSize,<newline46mondego>            __out_opt  LPDWORD lpVolumeSerialNumber,<newline46mondego>            __out_opt  LPDWORD lpMaximumComponentLength,<newline46mondego>            __out_opt  LPDWORD lpFileSystemFlags,<newline46mondego>            __out      LPTSTR lpFileSystemNameBuffer,<newline46mondego>            __in       DWORD nFileSystemNameSize<newline46mondego>            );<newline46mondego>     */<newline46mondego>    public boolean GetVolumeInformation(<newline46mondego>            String lpRootPathName,<newline46mondego>            char[] lpVolumeNameBuffer,<newline46mondego>            DWORD nVolumeNameSize,<newline46mondego>            IntByReference lpVolumeSerialNumber,<newline46mondego>            IntByReference lpMaximumComponentLength,<newline46mondego>            IntByReference lpFileSystemFlags,<newline46mondego>            char[] lpFileSystemNameBuffer,<newline46mondego>            DWORD nFileSystemNameSize<newline46mondego>            );<newline46mondego><newline46mondego>    public int GetLastError();<newline46mondego>}<newline46mondego>"
"1319splitHere46","9441330splitHere46","package filesystem;<newline46mondego><newline46mondego>import ping.Kernel32;<newline46mondego><newline46mondego>import com.sun.jna.platform.win32.WinDef.DWORD;<newline46mondego>import com.sun.jna.ptr.IntByReference;<newline46mondego><newline46mondego>public class VolumeInformation {<newline46mondego><newline46mondego>    static void getFileSystemName(){<newline46mondego>        char[] lpVolumeNameBuffer = new char[256];<newline46mondego>        DWORD nVolumeNameSize = new DWORD(256);<newline46mondego>        IntByReference lpVolumeSerialNumber = new IntByReference();<newline46mondego>        IntByReference lpMaximumComponentLength = new IntByReference();<newline46mondego>        IntByReference lpFileSystemFlags = new IntByReference();<newline46mondego><newline46mondego>        char[] lpFileSystemNameBuffer = new char[256];<newline46mondego>        DWORD nFileSystemNameSize = new DWORD(256);<newline46mondego><newline46mondego>        lpVolumeSerialNumber.setValue(0);<newline46mondego>        lpMaximumComponentLength.setValue(256);<newline46mondego>        lpFileSystemFlags.setValue(0);<newline46mondego><newline46mondego>        Kernel32.INSTANCE.GetVolumeInformation(<newline46mondego>                <doubleQuotes46>C:\\<doubleQuotes46>, <newline46mondego>                lpVolumeNameBuffer, <newline46mondego>                nVolumeNameSize, <newline46mondego>                lpVolumeSerialNumber, <newline46mondego>                lpMaximumComponentLength, <newline46mondego>                lpFileSystemFlags, <newline46mondego>                lpFileSystemNameBuffer, <newline46mondego>                nFileSystemNameSize);<newline46mondego><newline46mondego>        System.out.println(<doubleQuotes46>Last error: <doubleQuotes46>+Kernel32.INSTANCE.GetLastError()+<doubleQuotes46>\n\n<doubleQuotes46>);<newline46mondego><newline46mondego>        String fs = new String(lpFileSystemNameBuffer);<newline46mondego>        System.out.println(fs.trim());<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * @param args<newline46mondego>     */<newline46mondego>    public static void main(String[] args) {<newline46mondego>        getFileSystemName();<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"1320splitHere46","9441461splitHere46","<img src>"
"1321splitHere46","9441461splitHere46","toString()"
"1322splitHere46","9441461splitHere46","<img src=<doubleQuotes46>url/to/image.png<doubleQuotes46> /><newline46mondego>"
"1323splitHere46","9441461splitHere46","<img src=<doubleQuotes46>imageservlet/image1.png<doubleQuotes46> /><newline46mondego><img src=<doubleQuotes46>imageservlet/image2.png<doubleQuotes46> /><newline46mondego><img src=<doubleQuotes46>imageservlet/image3.png<doubleQuotes46> /><newline46mondego>"
"1324splitHere46","9441461splitHere46","byte[]"
"1325splitHere46","9441461splitHere46","InputStream"
"1326splitHere46","9441461splitHere46","OutputStream"
"1327splitHere46","9441525splitHere46","PdfWrter#getInstance()"
"1328splitHere46","9441525splitHere46","public void download() throws IOException {<newline46mondego>    FacesContext context = FacesContext.getCurrentInstance();<newline46mondego>    HttpServletResponse response = (HttpServletResponse) context.getExternalContext().getResponse();<newline46mondego>    response.setContentType(<doubleQuotes46>application/pdf<doubleQuotes46>);<newline46mondego>    response.setHeader(<doubleQuotes46>Content-Disposition<doubleQuotes46>, <doubleQuotes46>inline; filename=\<doubleQuotes46><doubleQuotes46> + filename + <doubleQuotes46>\<doubleQuotes46><doubleQuotes46>);<newline46mondego><newline46mondego>    Document document = new Document();<newline46mondego>    PdfWriter writer = PdfWriter.getInstance(document, response.getOutputStream());<newline46mondego>    document.open();<newline46mondego>    // Build document.<newline46mondego><newline46mondego>    context.responseComplete();<newline46mondego>}<newline46mondego>"
"1329splitHere46","9441525splitHere46","inline"
"1330splitHere46","9441525splitHere46","attachment"
"1331splitHere46","9441525splitHere46","<object>"
"1332splitHere46","9441525splitHere46","response"
"1333splitHere46","9441525splitHere46","doGet()"
"1334splitHere46","9441525splitHere46","<object>"
"1335splitHere46","9441638splitHere46","START user=node(123)<newline46mondego>MATCH user-[r:FRIEND]-friend<newline46mondego>WHERE r.status=<doubleQuotes46>confirmed<doubleQuotes46><newline46mondego>RETURN friend<newline46mondego>"
"1336splitHere46","9441732splitHere46","private boolean delete (Node n, Value val, boolean cut) {<newline46mondego>   boolean status = false;<newline46mondego>   // Base case<newline46mondego>   if(n == null) return false;<newline46mondego>   if(node to be deleted) {<newline46mondego>        // Do all sorts of swapping, recursive deletion calls<newline46mondego>   }<newline46mondego>   else {<newline46mondego>       // Move around the tree until I find a node or hit null<newline46mondego>       if(is in left subtree){<newline46mondego>             status = delete(t.left, val, !cut);<newline46mondego>       }else if(is in right subtree){<newline46mondego>             status = delete(t.right, val, !cut);<newline46mondego>       }         <newline46mondego>   }<newline46mondego><newline46mondego>   // Here is where updating happens<newline46mondego>   someUpdateFunction(n);<newline46mondego><newline46mondego>   return status;<newline46mondego>}<newline46mondego>"
"1337splitHere46","9441860splitHere46","@PrePersist"
"1338splitHere46","9441860splitHere46","@PreUpdate"
"1339splitHere46","9441912splitHere46","public"
"1340splitHere46","9441912splitHere46","protected"
"1341splitHere46","9441912splitHere46","private"
"1342splitHere46","9441912splitHere46","private"
"1343splitHere46","9441967splitHere46","JPanel"
"1344splitHere46","9441967splitHere46","validate()"
"1345splitHere46","9441967splitHere46","pack()"
"1346splitHere46","9441967splitHere46","Window"
"1347splitHere46","9441967splitHere46","JPanel"
"1348splitHere46","9441967splitHere46","AnimationTest"
"1349splitHere46","9442020splitHere46","import javax.microedition.lcdui.Command;<newline46mondego>import javax.microedition.lcdui.CommandListener;<newline46mondego>import javax.microedition.lcdui.Display;<newline46mondego>import javax.microedition.lcdui.Displayable;<newline46mondego>import javax.microedition.lcdui.Form;<newline46mondego>import javax.microedition.midlet.*;<newline46mondego><newline46mondego><newline46mondego>public class myMidlet extends MIDlet implements CommandListener {<newline46mondego><newline46mondego>    private Form greetings;<newline46mondego>    private Form MainForm;<newline46mondego>    private Command okCommand;<newline46mondego>    Display display;<newline46mondego><newline46mondego>    public myMidlet() {<newline46mondego>        display = Display.getDisplay(this);<newline46mondego>        greetings = new Form(<doubleQuotes46>greetings<doubleQuotes46>);<newline46mondego>        MainForm = new Form(<doubleQuotes46>MainForm<doubleQuotes46>);<newline46mondego>        okCommand = new Command(<doubleQuotes46>Ok<doubleQuotes46>, Command.OK, 0);<newline46mondego>        MainForm.addCommand(okCommand);<newline46mondego>        MainForm.setCommandListener(this);<newline46mondego>    }<newline46mondego><newline46mondego>    public void startApp() {<newline46mondego>        MainForm.append(<doubleQuotes46>This is MainForm<doubleQuotes46>);<newline46mondego>        display.setCurrent(MainForm);<newline46mondego>    }<newline46mondego><newline46mondego>    public void pauseApp() {<newline46mondego>    ...<newline46mondego>    }<newline46mondego><newline46mondego>    public void destroyApp(boolean unconditional) {<newline46mondego>    ...<newline46mondego>    }<newline46mondego><newline46mondego>    public void commandAction(Command cmnd, Displayable dsplbl) {<newline46mondego>        if (cmnd == okCommand) {<newline46mondego>            greetings.append(<doubleQuotes46>This is greeting Form<doubleQuotes46>);<newline46mondego>            display.setCurrent(greetings);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}   <newline46mondego>"
"1350splitHere46","9442040splitHere46","String SQL = <doubleQuotes46>DELETE FROM inventory WHERE ItemCode = <doubleQuotes46>+id+<doubleQuotes46> <doubleQuotes46>;<newline46mondego>"
"1351splitHere46","9442040splitHere46","String SQL = <doubleQuotes46>DELETE FROM inventory WHERE ItemCode = '<doubleQuotes46>+id+<doubleQuotes46>' <doubleQuotes46>;<newline46mondego>"
"1352splitHere46","9442088splitHere46","goto"
"1353splitHere46","9442287splitHere46","<uses-permission android:name=<doubleQuotes46>android.permission.RECEIVE_BOOT_COMPLETED<doubleQuotes46> /><newline46mondego>"
"1354splitHere46","9442287splitHere46","<service android:name=<doubleQuotes46>.MyService<doubleQuotes46> android:label=<doubleQuotes46>My Service<doubleQuotes46>><newline46mondego>    <intent-filter><newline46mondego>        <action android:name=<doubleQuotes46>com.myapp.MyService<doubleQuotes46> /><newline46mondego>    </intent-filter><newline46mondego></service><newline46mondego><newline46mondego><receiver<newline46mondego>    android:name=<doubleQuotes46>.receiver.StartMyServiceAtBootReceiver<doubleQuotes46><newline46mondego>    android:enabled=<doubleQuotes46>true<doubleQuotes46><newline46mondego>    android:exported=<doubleQuotes46>true<doubleQuotes46><newline46mondego>    android:label=<doubleQuotes46>StartMyServiceAtBootReceiver<doubleQuotes46>><newline46mondego>    <intent-filter><newline46mondego>        <action android:name=<doubleQuotes46>android.intent.action.BOOT_COMPLETED<doubleQuotes46> /><newline46mondego>    </intent-filter><newline46mondego></receiver><newline46mondego>"
"1355splitHere46","9442287splitHere46","public class StartMyServiceAtBootReceiver extends BroadcastReceiver {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void onReceive(Context context, Intent intent) {<newline46mondego>        if (<doubleQuotes46>android.intent.action.BOOT_COMPLETED<doubleQuotes46>.equals(intent.getAction())) {<newline46mondego>            Intent serviceIntent = new Intent(<doubleQuotes46>com.myapp.MySystemService<doubleQuotes46>);<newline46mondego>            context.startService(serviceIntent);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1356splitHere46","9442402splitHere46","DataOutputStream dos = <newline46mondego>Map<K, V> map = <newline46mondego>dow.writeInt(map.size());<newline46mondego>for(Entry<K, V> entry: map.entrySet()) {<newline46mondego>    dos.writeXxxx(entry.getKey());<newline46mondego>    dos.writeXxxx(entry.getValue());<newline46mondego>}<newline46mondego>"
"1357splitHere46","9442457splitHere46","public String returnEmptyString(){<newline46mondego>    return <doubleQuotes46><doubleQuotes46>;<newline46mondego>}<newline46mondego>"
"1358splitHere46","9442554splitHere46","qName"
"1359splitHere46","9442705splitHere46","for(int i=0 ; i < line.length(); i++) {<newline46mondego>    aChar = line.charAt(i);<newline46mondego>    System.out.println(aChar);<newline46mondego><newline46mondego>}<newline46mondego>"
"1360splitHere46","9442723splitHere46","public class A {<newline46mondego>   private final String data;<newline46mondego><newline46mondego>   public A() {<newline46mondego>      data = <doubleQuotes46>new string<doubleQuotes46>;<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"1361splitHere46","9443073splitHere46","public static int recursiveProduct(int a, int b) {<newline46mondego>  if (b == 0) {<newline46mondego>    return 0;<newline46mondego>  } else {<newline46mondego>    return a + recursiveProduct(a,--b);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"1362splitHere46","9443257splitHere46","Integer.parseInt()"
"1363splitHere46","9443257splitHere46","public boolean isSolved() {<newline46mondego>    try {<newline46mondego>        int i = Integer.parseInt(dig1);<newline46mondego>        int j = Integer.parseInt(dig2);<newline46mondego>        int k = Integer.parseInt(res);<newline46mondego>        return (i+j) == k;<newline46mondego>    }<newline46mondego>    catch (NumberFormatException e) {<newline46mondego>        return false;<newline46mondego>    }<newline46mondego> }<newline46mondego>"
"1364splitHere46","9443258splitHere46","java"
"1365splitHere46","9443258splitHere46","com.google.gwt.dev.Compiler"
"1366splitHere46","9443258splitHere46","build.xml"
"1367splitHere46","9443258splitHere46","WebAppCreator"
"1368splitHere46","9443258splitHere46","<java failonerror=<doubleQuotes46>true<doubleQuotes46> fork=<doubleQuotes46>true<doubleQuotes46> classname=<doubleQuotes46>com.google.gwt.dev.Compiler<doubleQuotes46><newline46mondego>    classpathref=<doubleQuotes46>gwt.classpath<doubleQuotes46>><newline46mondego>  <!-- add jvmarg -Xss16M or similar if you see a StackOverflowError --><newline46mondego>  <jvmarg value=<doubleQuotes46>-Xmx256M<doubleQuotes46>/><newline46mondego>  <arg line=<doubleQuotes46>-war<doubleQuotes46>/><newline46mondego>  <arg value=<doubleQuotes46>${www.dir}<doubleQuotes46>/><newline46mondego>  <!-- Additional arguments like -style PRETTY or -logLevel DEBUG --><newline46mondego>  <arg value=<doubleQuotes46>com.heavyweightsoftware.leal.ui.ImageViewer<doubleQuotes46>/><newline46mondego></java><newline46mondego>"
"1369splitHere46","9443258splitHere46","WebAppCreator"
"1370splitHere46","9443262splitHere46","/war/WEB-INF/web.xml"
"1371splitHere46","9443262splitHere46","<filter><newline46mondego>    <filter-name>MainFilter</filter-name><newline46mondego>    <filter-class>com.example.mywebsite.MainFilter</filter-class><newline46mondego></filter><newline46mondego><filter-mapping><newline46mondego>    <filter-name>MainFilter</filter-name><newline46mondego>    <url-pattern>/*</url-pattern><newline46mondego></filter-mapping><newline46mondego><newline46mondego><servlet><newline46mondego>    <servlet-name>MainServlet</servlet-name><newline46mondego>    <servlet-class>com.example.mywebsite.MainServlet</servlet-class><newline46mondego></servlet><newline46mondego><servlet-mapping><newline46mondego>    <servlet-name>MainServlet</servlet-name><newline46mondego>    <url-pattern>/MainServlet/*</url-pattern><newline46mondego></servlet-mapping><newline46mondego>"
"1372splitHere46","9443262splitHere46","MainFilter.java"
"1373splitHere46","9443262splitHere46","public void doFilter(ServletRequest request, ServletResponse response,<newline46mondego>        FilterChain chain) throws IOException, ServletException {<newline46mondego>    HttpServletRequest req = (HttpServletRequest) request;<newline46mondego>    String path = req.getRequestURI();<newline46mondego>    String topfolder = path.substring(1);<newline46mondego>    if (topfolder.contains(<doubleQuotes46>/<doubleQuotes46>)) {<newline46mondego>        topfolder = topfolder.substring(0, topfolder.indexOf(<doubleQuotes46>/<doubleQuotes46>));<newline46mondego>    }<newline46mondego><newline46mondego>    if (topfolder.startsWith(<doubleQuotes46>_<doubleQuotes46>)) {<newline46mondego>        chain.doFilter(request, response);<newline46mondego>    } else if (topfolder.endsWith(<doubleQuotes46>:<doubleQuotes46>)) {<newline46mondego>        request.getRequestDispatcher(path.replaceFirst(<doubleQuotes46>:<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>)).forward(request, response);<newline46mondego>    } else {<newline46mondego>        request.getRequestDispatcher(<doubleQuotes46>/MainServlet<doubleQuotes46> + path).forward(request, response);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"1374splitHere46","9443262splitHere46","/war/css/style.css"
"1375splitHere46","9443262splitHere46","<doubleQuotes46>/css:/style.css<doubleQuotes46>"
"1376splitHere46","9443262splitHere46","_"
"1377splitHere46","9443262splitHere46","_"
"1378splitHere46","9443262splitHere46","/_ah/admin"
"1379splitHere46","9443294splitHere46","<dependency><newline46mondego>    <groupId>log4j</groupId><newline46mondego>    <artifactId>log4j</artifactId><newline46mondego>    <version>1.2.16</version><newline46mondego></dependency><newline46mondego>"
"1380splitHere46","9443294splitHere46","<Repository URL>/<groupId>/<artifactId>/<version>/<artifactId>-<version>.<packaging><newline46mondego>"
"1381splitHere46","9443913splitHere46","final"
"1382splitHere46","9443913splitHere46","String"
"1383splitHere46","9443913splitHere46","private char[] chars"
"1384splitHere46","9443913splitHere46","Integer"
"1385splitHere46","9443913splitHere46","Long"
"1386splitHere46","9443936splitHere46","Double.valueOf(yo.trim()).doubleValue();"
"1387splitHere46","9443945splitHere46","quote()"
"1388splitHere46","9443945splitHere46","String s = <doubleQuotes46>hello(1234aA)something<doubleQuotes46>;<newline46mondego>String replaceString = <doubleQuotes46>(?i)<doubleQuotes46> + Pattern.quote(<doubleQuotes46>(1234aa)<doubleQuotes46>);<newline46mondego>String s2 = s.replaceAll(replaceString, <doubleQuotes46>something<doubleQuotes46>);<newline46mondego>"
"1389splitHere46","9444040splitHere46","SubjectTeacherPeriod"
"1390splitHere46","9444121splitHere46","pack()"
"1391splitHere46","9444121splitHere46","import java.awt.Dimension;<newline46mondego>import java.awt.Rectangle;<newline46mondego>import java.awt.Toolkit;<newline46mondego><newline46mondego>import javax.swing.JFrame;<newline46mondego><newline46mondego>public class SizeFoo {<newline46mondego><newline46mondego>   public static void main(String[] args) {<newline46mondego>      Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();<newline46mondego>      Rectangle rect = new Rectangle(screenSize.width / 2 - screenSize.width<newline46mondego>            / 4, screenSize.height / 2 - screenSize.height / 4,<newline46mondego>            screenSize.width / 2, screenSize.height / 2);<newline46mondego>      System.out.println(<doubleQuotes46>rect: <doubleQuotes46> + rect);<newline46mondego>      JFrame frame = new JFrame(<doubleQuotes46>Test<doubleQuotes46>);<newline46mondego>      frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>      frame.setPreferredSize(new Dimension(rect.width, rect.height));<newline46mondego>      frame.setResizable(false);<newline46mondego>      frame.pack();<newline46mondego>      frame.setLocation(rect.x, rect.y);<newline46mondego>      //frame.setLocationRelativeTo(null);<newline46mondego>      frame.setVisible(true);<newline46mondego>      System.out.println(<doubleQuotes46>JFrame size:<doubleQuotes46> + frame.getSize());<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"1392splitHere46","9444238splitHere46","Calendar"
"1393splitHere46","9444238splitHere46","ans2"
"1394splitHere46","9444238splitHere46","GlobalCal.getTimeInMillis();"
"1395splitHere46","9444238splitHere46","Calendar.getInstance()"
"1396splitHere46","9444238splitHere46","Calendars"
"1397splitHere46","9444238splitHere46","System.currentTimeMillis"
"1398splitHere46","9444393splitHere46","int[][]"
"1399splitHere46","9444393splitHere46","lut[yourByte]"
"1400splitHere46","9444393splitHere46","yourByte"
"1401splitHere46","9444393splitHere46","for (int i = 0; i < bytes.length; i++)<newline46mondego>    for (int indexes : lut[bytes[i]])<newline46mondego>        appendToResult(indexes + (bytes.length - 1 - i) * 8);<newline46mondego>"
"1402splitHere46","9444753splitHere46","<presence type=<doubleQuotes46>subscribe<doubleQuotes46>/>"
"1403splitHere46","9444753splitHere46","<presence type=<doubleQuotes46>subscribed<doubleQuotes46>/>"
"1404splitHere46","9444753splitHere46","<presence type=<doubleQuotes46>probe<doubleQuotes46>/>"
"1405splitHere46","9444753splitHere46","<presence/>"
"1406splitHere46","9444753splitHere46","<presence type=<doubleQuotes46>subscribe<doubleQuotes46>>"
"1407splitHere46","9444753splitHere46","<presence type=<doubleQuotes46>unsubscribe<doubleQuotes46>>"
"1408splitHere46","9444753splitHere46","<presence type=<doubleQuotes46>unsubscribed<doubleQuotes46>>"
"1409splitHere46","9444753splitHere46","<presence type=<doubleQuotes46>unavailable<doubleQuotes46>>"
"1410splitHere46","9444753splitHere46","<presence type=<doubleQuotes46>probe<doubleQuotes46>>"
"1411splitHere46","9444753splitHere46","<presence type=<doubleQuotes46>subscribe<doubleQuotes46>>"
"1412splitHere46","9444753splitHere46","<presence type=<doubleQuotes46>subscribed<doubleQuotes46>>"
"1413splitHere46","9444753splitHere46","<presence type=<doubleQuotes46>unsubscribed<doubleQuotes46>>"
"1414splitHere46","9444753splitHere46","<presence type=<doubleQuotes46>probe<doubleQuotes46>>"
"1415splitHere46","9444809splitHere46","private CoalmineCanary coalmineCanary;<newline46mondego><newline46mondego>@Before<newline46mondego>public void setup() {<newline46mondego>    coalmineCanary = new CoalmineCanary();<newline46mondego>    coalmineCanary.setText(<doubleQuotes46>pokus<doubleQuotes46>);<newline46mondego>    coalmineCanary = canaryRepository.save(coalmineCanary);<newline46mondego><newline46mondego>    if(coalmineCanary.getId() == 0){<newline46mondego>       fail(<doubleQuotes46>Could not insert the Canary!<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>@Test<newline46mondego>public void when_loaded_then_entity_is_retrieved() {<newline46mondego>    CoalmineCanary managedCanary = canaryRepository.findById(coalmineCanary.getId());<newline46mondego>    assertThat(managedCanary).isNotNull();<newline46mondego>    assertThat(managedCanary.getText()).isEqualTo(<doubleQuotes46>pokus<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"1416splitHere46","9444809splitHere46","id"
"1417splitHere46","9444809splitHere46","id"
"1418splitHere46","9444809splitHere46","setup()"
"1419splitHere46","9444838splitHere46","allocateDirect"
"1420splitHere46","9444838splitHere46","GetDirectBufferAddress"
"1421splitHere46","9444838splitHere46","ByteBuffer"
"1422splitHere46","9444838splitHere46","ByteBuffer"
"1423splitHere46","9444838splitHere46","order()"
"1424splitHere46","9444838splitHere46","ByteBuffer"
"1425splitHere46","9444838splitHere46","asIntBuffer()"
"1426splitHere46","9444838splitHere46","IntBuffer"
"1427splitHere46","9444838splitHere46","int[] data;<newline46mondego>ByteBuffer buffer = ByteBuffer.allocateDirect(data.length * 4);<newline46mondego>buffer.order(ByteOrder.nativeOrder());<newline46mondego><newline46mondego>buffer.asIntBuffer().put(data);<newline46mondego>"
"1428splitHere46","9444880splitHere46","del.nextLine()"
"1429splitHere46","9444923splitHere46","<h:commandButton value=<doubleQuotes46>#{testBean.string}<doubleQuotes46> /><newline46mondego>"
"1430splitHere46","9445110splitHere46","public function showItemsByCategoryAction($categoryName) {<newline46mondego>  $categoryId = $categoryDAO->findByName($categoryName);<newline46mondego>  if(is_null($categoryId)) {<newline46mondego>    //@TODO error<newline46mondego>  }<newline46mondego><newline46mondego>  $itemIds = $categoryLinkDAO->getItemsByCategoryId($categoryId);<newline46mondego>  if(empty($itemIds)) {<newline46mondego>    //@TODO show error to the user<newline46mondego>  }<newline46mondego><newline46mondego>  $items = $categoryItemDAO->findManyItems($itemIds);<newline46mondego><newline46mondego>  //@TODO parse, assign to view etc<newline46mondego>}<newline46mondego>"
"1431splitHere46","9445110splitHere46","public function showItemsByCategoryAction($categoryName) {<newline46mondego>  $service = new Item_CategoryName_Finder_Service();<newline46mondego>  $items = $service->find($categoryName);<newline46mondego><newline46mondego>  if(empty($items)){<newline46mondego>    //@TODO show empty page result, redirect or whatever<newline46mondego>  }<newline46mondego><newline46mondego>  $this->getView()->bind('items', $items);<newline46mondego>}<newline46mondego>"
"1432splitHere46","9445188splitHere46","GradientPaint gp = new GradientPaint(0, 0, new Color(255, 0, 0, 50), <newline46mondego>                                   10, 10, new Color(128, 255, 0, 150));<newline46mondego><newline46mondego>ColorModel cm = ColorModel.getRGBdefault();<newline46mondego>Rectangle r = new Rectangle(0, 0, 10, 10);<newline46mondego>Raster raster = gp.createContext(cm, r, r, new AffineTransform(), null)<newline46mondego>                  .getRaster(0, 0, 10, 10);<newline46mondego><newline46mondego>int[] rgba = raster.getPixel(5, 5, (int[])null);<newline46mondego>"
"1433splitHere46","9445235splitHere46","ln -s"
"1434splitHere46","9445339splitHere46","&&"
"1435splitHere46","9445339splitHere46","&"
"1436splitHere46","9445387splitHere46","assertEquals"
"1437splitHere46","9445387splitHere46","assertEquals(expected, actual)<newline46mondego>"
"1438splitHere46","9445387splitHere46","for (byte b: <doubleQuotes46>Â£<doubleQuotes46>.getBytes()) {<newline46mondego>  System.out.println(Integer.toHexString(b));<newline46mondego>}<newline46mondego>"
"1439splitHere46","9445402splitHere46","Objects.toStringHelper()"
"1440splitHere46","9445402splitHere46","toString()"
"1441splitHere46","9445402splitHere46","toString()"
"1442splitHere46","9445402splitHere46","public String toString() {<newline46mondego>#set ($autoImportPackages = <doubleQuotes46>com.google.common.base.Objects<doubleQuotes46>)<newline46mondego>    return Objects.toStringHelper(this)<newline46mondego>#foreach ($member in $members)<newline46mondego>    .add(<doubleQuotes46>$member.name<doubleQuotes46>, $member.accessor)<newline46mondego>#end<newline46mondego>    .toString();<newline46mondego>}<newline46mondego>"
"1443splitHere46","9445402splitHere46","toString()"
"1444splitHere46","9445402splitHere46","toString()"
"1445splitHere46","9445402splitHere46","toString()"
"1446splitHere46","9445499splitHere46","g.drawImage(img,0,0,null);<newline46mondego>"
"1447splitHere46","9445499splitHere46","g.drawImage(img,0,0,this);<newline46mondego>"
"1448splitHere46","9445646splitHere46","java.sql.PreparedStatement"
"1449splitHere46","9445646splitHere46","toString"
"1450splitHere46","9445673splitHere46","Class.forName(<doubleQuotes46>java.util.HashMap$Entry<doubleQuotes46>);<newline46mondego>"
"1451splitHere46","9445685splitHere46","public class MyApp extends Application {<newline46mondego>    private static MyApp instance;<newline46mondego><newline46mondego>    public static MyApp getInstance() {<newline46mondego>        return instance;<newline46mondego>    }<newline46mondego><newline46mondego>    public static Context getContext(){<newline46mondego>        return instance;<newline46mondego>        // or return instance.getApplicationContext();<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void onCreate() {<newline46mondego>        instance = this;<newline46mondego>        super.onCreate();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1452splitHere46","9445685splitHere46","<application<newline46mondego>    android:name=<doubleQuotes46>com.example.app.MyApp<doubleQuotes46><newline46mondego>    android:icon=<doubleQuotes46>@drawable/icon<doubleQuotes46><newline46mondego>    android:label=<doubleQuotes46>@string/app_name<doubleQuotes46><newline46mondego>    .......<newline46mondego>    <activity<newline46mondego>        ......<newline46mondego>"
"1453splitHere46","9445685splitHere46","MyApp.getContext();<newline46mondego>"
"1454splitHere46","9445695splitHere46","class MyCanvas extends JComponent<newline46mondego>{<newline46mondego>    public static Image loadImage(String s)<newline46mondego>    {<newline46mondego>        try <newline46mondego>        {<newline46mondego>            return ImageIO.read(Main.class.getResource(s));<newline46mondego>        } <newline46mondego>        catch (Exception ex) <newline46mondego>        {<newline46mondego>            ex.printStackTrace();<newline46mondego>            return null;<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1455splitHere46","9445888splitHere46","f"
"1456splitHere46","9445888splitHere46","float f = 1.0f;<newline46mondego>"
"1457splitHere46","9445954splitHere46","CompareTo(object other)"
"1458splitHere46","9445954splitHere46","public class DataSet<T implements Comparable><newline46mondego>{<newline46mondego> private T maximum;<newline46mondego> private T least;<newline46mondego> private T count;<newline46mondego><newline46mondego><newline46mondego> public void add(T x)<newline46mondego> {<newline46mondego><newline46mondego>   if(count == 0){<newline46mondego>     least = x;<newline46mondego>     maximum = x;<newline46mondego>   }<newline46mondego>   else if(least.compareTo(x) > 0)<newline46mondego>     least = x;<newline46mondego>   else if(maximum.compareTo(x) < 0)<newline46mondego>     maximum = x;<newline46mondego>   count++;<newline46mondego> }<newline46mondego><newline46mondego> public T getMaximum()<newline46mondego> {<newline46mondego>  return maximum;<newline46mondego> }<newline46mondego><newline46mondego> public T getLeast()<newline46mondego> {<newline46mondego>   return least;<newline46mondego> }<newline46mondego><newline46mondego> }<newline46mondego>"
"1459splitHere46","9445954splitHere46","DataSet<String>  ds = new DataSet<String>;"
"1460splitHere46","9445994splitHere46","for (PersonDetails p: people.keySet())<newline46mondego>{<newline46mondego>    System.out.println(p.getName());<newline46mondego>}<newline46mondego>"
"1461splitHere46","9445994splitHere46","people"
"1462splitHere46","9445994splitHere46","String"
"1463splitHere46","9445994splitHere46","get(<doubleQuotes46>0<doubleQuotes46>)"
"1464splitHere46","9445994splitHere46","Map<String, PersonDetails> people = new TreeMap<String, PersonDetails>();<newline46mondego>"
"1465splitHere46","9445994splitHere46","ArrayList"
"1466splitHere46","9445994splitHere46","List<PersonDetails> people = new ArrayList<PersonDetails>();<newline46mondego><newline46mondego>people.add(new PersonDetails(42, <doubleQuotes46>Martin<doubleQuotes46>));<newline46mondego><newline46mondego>for (PersonDetails p: people)<newline46mondego>{<newline46mondego>    System.out.println(p.getName());<newline46mondego>}<newline46mondego>"
"1467splitHere46","9445996splitHere46","en"
"1468splitHere46","9445996splitHere46","$"
"1469splitHere46","9445996splitHere46","US$"
"1470splitHere46","9445996splitHere46","AU$"
"1471splitHere46","9445996splitHere46","Â£"
"1472splitHere46","9445996splitHere46","en-US"
"1473splitHere46","9445996splitHere46","en-US"
"1474splitHere46","9445996splitHere46","Germany"
"1475splitHere46","9446131splitHere46","BOOL"
"1476splitHere46","9446131splitHere46","user_types<newline46mondego>==========<newline46mondego>ut_id        int pk auto_incr<newline46mondego>ut_code      varchar(4)<newline46mondego>ut_desc      varchar(127)<newline46mondego><newline46mondego>user_type_details<newline46mondego>=================<newline46mondego>ut_det_id    int pk auto_incr<newline46mondego>ut_id        int fk references user_types<newline46mondego>ut_det_code  varchar(4)<newline46mondego>ut_det_desc  varchar(127)<newline46mondego>"
"1477splitHere46","9446131splitHere46","SELECT * FROM user_types;<newline46mondego><newline46mondego>ut_id    ut_code    ut_desc<newline46mondego>=====    =======    =======<newline46mondego>1        DECO       decoration<newline46mondego>2        ENTR       entertainment<newline46mondego>3        CATR       catering<newline46mondego>4        SECR       security<newline46mondego><newline46mondego><newline46mondego>SELECT * FROM user_type_details WHERE ut_id = 2;<newline46mondego><newline46mondego>ut_det_id   ut_id    ut_det_code   ut_det_desc<newline46mondego>=========   =====    ===========   ===========<newline46mondego>7           2        D.J.          dj<newline46mondego>8           2        SNGR          singer<newline46mondego>9           2        DNCR          dancer<newline46mondego>10          2        GTRS          guitarist<newline46mondego>"
"1478splitHere46","9446180splitHere46","Tools -> Plugins -> Installed tab -> select the spellchecker plugin -> press Deactivate -> restart NetBeans"
"1479splitHere46","9446348splitHere46","price-table"
"1480splitHere46","9446348splitHere46","doc.select(<doubleQuotes46>span[class=price final-price our fksk-our]<doubleQuotes46>).text();<newline46mondego>"
"1481splitHere46","9446357splitHere46","ee"
"1482splitHere46","9446357splitHere46","Record"
"1483splitHere46","9446357splitHere46","getIncome()"
"1484splitHere46","9446357splitHere46","for(Record ee :RList)<newline46mondego>    sum = sum + Double.valueOf(ee.getIncome());<newline46mondego>"
"1485splitHere46","9446393splitHere46","MyTask"
"1486splitHere46","9446393splitHere46","locations"
"1487splitHere46","9446393splitHere46","Integer"
"1488splitHere46","9446393splitHere46","Integer"
"1489splitHere46","9446393splitHere46","OutOfMemoryError"
"1490splitHere46","9446393splitHere46","Integer"
"1491splitHere46","9446393splitHere46","List"
"1492splitHere46","9446393splitHere46","Integer"
"1493splitHere46","9446393splitHere46","int[]"
"1494splitHere46","9446393splitHere46","HashSet"
"1495splitHere46","9446393splitHere46","HashSet"
"1496splitHere46","9446393splitHere46","HashSet"
"1497splitHere46","9446393splitHere46","HashMap"
"1498splitHere46","9446393splitHere46","HashMap.Entry"
"1499splitHere46","9446393splitHere46","Integer"
"1500splitHere46","9446393splitHere46","null"
"1501splitHere46","9446393splitHere46","Integer"
"1502splitHere46","9446393splitHere46","HashSet"
"1503splitHere46","9446393splitHere46","HashMap"
"1504splitHere46","9446393splitHere46","HashMap"
"1505splitHere46","9446393splitHere46","Integer"
"1506splitHere46","9446393splitHere46","int[]"
"1507splitHere46","9446393splitHere46","HashSet"
"1508splitHere46","9446393splitHere46","HashSet"
"1509splitHere46","9446450splitHere46","string-array"
"1510splitHere46","9446450splitHere46","string.xml"
"1511splitHere46","9446450splitHere46","private String[] list = res.getStringArray(R.array.Fruit);<newline46mondego>"
"1512splitHere46","9446450splitHere46","array.xml"
"1513splitHere46","9446450splitHere46","values"
"1514splitHere46","9446450splitHere46","Fruit"
"1515splitHere46","9446533splitHere46","usernamanager"
"1516splitHere46","9446533splitHere46","usermanager"
"1517splitHere46","9446586splitHere46","<param name=<doubleQuotes46>foo<doubleQuotes46> value=<doubleQuotes46>GUID #1,GUID #2,GUID #3,....,GUID #90<doubleQuotes46>></param><newline46mondego>"
"1518splitHere46","9446586splitHere46","URLConnection"
"1519splitHere46","9446587splitHere46","draw2d"
"1520splitHere46","9446679splitHere46","gdata/java/sample/docs"
"1521splitHere46","9446679splitHere46","DocumentList"
"1522splitHere46","9446679splitHere46","DocumentList"
"1523splitHere46","9446679splitHere46","import com.google.gdata.data.docs.DocumentListEntry;<newline46mondego>import com.google.gdata.data.docs.DocumentListFeed;<newline46mondego><newline46mondego>public class Example {<newline46mondego><newline46mondego>static public void main(String[] args) throws Exception {<newline46mondego>    DocumentList docList = new DocumentList(<doubleQuotes46>document<doubleQuotes46>);<newline46mondego>    docList.login(<doubleQuotes46>********@gmail.com<doubleQuotes46>, <doubleQuotes46>********<doubleQuotes46>);<newline46mondego>    DocumentListFeed feed = docList.getDocsListFeed(<doubleQuotes46>all<doubleQuotes46>);<newline46mondego>    for (final DocumentListEntry entry : feed.getEntries()) {<newline46mondego>       System.out.println(entry.getTitle().getPlainText());<newline46mondego>    }<newline46mondego>    }<newline46mondego>}   <newline46mondego>"
"1524splitHere46","9446679splitHere46","<doubleQuotes46>https://docs.google.com/feeds/default/private/full<doubleQuotes46><newline46mondego>"
"1525splitHere46","9446682splitHere46","insert(root.right/left, d)"
"1526splitHere46","9446682splitHere46","insert(int)"
"1527splitHere46","9446682splitHere46","BinaryTree"
"1528splitHere46","9446682splitHere46","Node"
"1529splitHere46","9446682splitHere46","isEmpty"
"1530splitHere46","9446682splitHere46","class Node {<newline46mondego><newline46mondego>    BinaryTree left, right;<newline46mondego>    Integer data;<newline46mondego><newline46mondego>    Node(Integer d, BinaryTree left, BinaryTree right) {<newline46mondego>        this.data  = d;<newline46mondego>        this.left  = left;<newline46mondego>        this.right = right;<newline46mondego>    }<newline46mondego>} <newline46mondego><newline46mondego>class BinaryTree {<newline46mondego><newline46mondego>    Node root;<newline46mondego><newline46mondego>    // Empty tree<newline46mondego>    BinaryTree() {<newline46mondego>        this(null);<newline46mondego>    }<newline46mondego><newline46mondego>    BinaryTree(Node root) {<newline46mondego>        this.root == root;<newline46mondego>    }<newline46mondego><newline46mondego>    void insert(int d) {<newline46mondego><newline46mondego>        if (this.root == null) {<newline46mondego><newline46mondego>            // The tree was empty, so it creates a new root with empty subtrees<newline46mondego>            this.root = new Node(d, new BinaryTree(), new BinaryTree());<newline46mondego><newline46mondego>        } else if (d > this.root.data) {<newline46mondego>            this.root.right.insert(d);<newline46mondego>        } else if (d < this.root.data) {<newline46mondego>            this.root.left.insert(d);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1531splitHere46","9446698splitHere46","Collections.sort()"
"1532splitHere46","9446698splitHere46","O(n*logn)"
"1533splitHere46","9446740splitHere46","StringTokenizer tokenizer = new StringTokenizer(yourString, <doubleQuotes46>!*^/<doubleQuotes46>);<newline46mondego>"
"1534splitHere46","9446909splitHere46","public static final"
"1535splitHere46","9446969splitHere46","v"
"1536splitHere46","9446969splitHere46","MyView"
"1537splitHere46","9446969splitHere46","v = inflater.inflate(R.layout.movie, this, true);<newline46mondego>"
"1538splitHere46","9446969splitHere46","MyView"
"1539splitHere46","9446969splitHere46","RelativeLayout"
"1540splitHere46","9446969splitHere46","<merge xmlns:android=<doubleQuotes46>http://schemas.android.com/apk/res/android<doubleQuotes46> ><newline46mondego>    <TextView <newline46mondego>        android:id=<doubleQuotes46>@+id/movieTitle<doubleQuotes46><newline46mondego>        android:text=<doubleQuotes46>@string/movietitle<doubleQuotes46><newline46mondego>        android:textSize=<doubleQuotes46>35dp<doubleQuotes46><newline46mondego>        android:layout_width=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>        android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>        android:gravity=<doubleQuotes46>center<doubleQuotes46><newline46mondego>        /><newline46mondego>    <com.galite.headliner.views.LoaderImageView<newline46mondego>        android:id=<doubleQuotes46>@+id/moviePoster<doubleQuotes46> <newline46mondego>        android:layout_width=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>        android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>        android:layout_below=<doubleQuotes46>@id/movieTitle<doubleQuotes46><newline46mondego>        android:layout_centerHorizontal=<doubleQuotes46>true<doubleQuotes46><newline46mondego>        android:layout_marginTop=<doubleQuotes46>20dp<doubleQuotes46><newline46mondego>        android:layout_marginBottom=<doubleQuotes46>20dp<doubleQuotes46><newline46mondego>        android:contentDescription=<doubleQuotes46>@string/poster<doubleQuotes46><newline46mondego>        /><newline46mondego>    <TextView<newline46mondego>        android:id=<doubleQuotes46>@+id/movieDescription<doubleQuotes46><newline46mondego>        android:layout_width=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>        android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>        android:text=<doubleQuotes46>@string/description<doubleQuotes46><newline46mondego>        android:layout_below=<doubleQuotes46>@id/moviePoster<doubleQuotes46><newline46mondego>        android:gravity=<doubleQuotes46>center<doubleQuotes46><newline46mondego>        /><newline46mondego></merge><newline46mondego>"
"1541splitHere46","9447039splitHere46","EntityManager"
"1542splitHere46","9447039splitHere46","manager"
"1543splitHere46","9447039splitHere46","UserBean"
"1544splitHere46","9447039splitHere46","UserBean"
"1545splitHere46","9447064splitHere46","public static void permute(String array[][], int index, ArrayList<String> output){<newline46mondego><newline46mondego>    if(index == array.length){<newline46mondego>        System.out.println(output.toString());<newline46mondego>    }<newline46mondego>    else{<newline46mondego>        for(int i=0 ; i<array[index].length ; i++){<newline46mondego>            output.add(array[index][i]);<newline46mondego>            permute(array,index+1,output);<newline46mondego>            output.remove(output.size() - 1); <newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1546splitHere46","9447065splitHere46","Phone->Broadcast: <doubleQuotes46>Is there anybody?<doubleQuotes46><newline46mondego>Server1->Phone  : <doubleQuotes46>I am here. Talk to me at 192.168.0.123:6666<doubleQuotes46><newline46mondego>Server2->Phone  : <doubleQuotes46>I am here. Talk to me at 192.168.0.124:6666<doubleQuotes46><newline46mondego>"
"1547splitHere46","9447068splitHere46","ServletResponse.setContentType(..)"
"1548splitHere46","9447068splitHere46","getWriter()"
"1549splitHere46","9447068splitHere46","public void doGet(HttpServletRequest req, HttpServletResponse resp)<newline46mondego>        throws IOException {<newline46mondego>    resp.setContentType(<doubleQuotes46>text/html; charset=UTF-8<doubleQuotes46>);<newline46mondego>    PrintWriter out = resp.getWriter();<newline46mondego>    out.println(<doubleQuotes46>Hello, world!!@!<doubleQuotes46>);<newline46mondego>    out.println(<doubleQuotes46>æˆ‘æ˜¯äºº<doubleQuotes46>);  //some chinese character<newline46mondego>    out.println(resp.getCharacterEncoding());<newline46mondego>    out.flush();<newline46mondego>    out.close();<newline46mondego>}<newline46mondego>"
"1550splitHere46","9447100splitHere46","java myProgram < input_file > output_file<newline46mondego>"
"1551splitHere46","9447100splitHere46","diff output_file expected_file<newline46mondego>"
"1552splitHere46","9447163splitHere46","static final List<Supplier<Model>> MODEL_MAKERS = ImmutableList.of(<newline46mondego>    new Supplier<Model>() { public Model get() { return new Model1(); } },<newline46mondego>    new Supplier<Model>() { public Model get() { return new Model2(); } },<newline46mondego>    new Supplier<Model>() { public Model get() { return new Model3(); } }<newline46mondego>);<newline46mondego>"
"1553splitHere46","9447163splitHere46","public"
"1554splitHere46","9447163splitHere46","public"
"1555splitHere46","9447163splitHere46","javac"
"1556splitHere46","9447235splitHere46","getNormalizingTransform()"
"1557splitHere46","9447235splitHere46","GraphicsConfiguration"
"1558splitHere46","9447235splitHere46","GraphicsDevice"
"1559splitHere46","9447235splitHere46","Math.hypot()"
"1560splitHere46","9447239splitHere46","OperatorNode"
"1561splitHere46","9447239splitHere46","OperandNode"
"1562splitHere46","9447239splitHere46","XNode"
"1563splitHere46","9447239splitHere46","buildRandomTree"
"1564splitHere46","9447239splitHere46","int"
"1565splitHere46","9447239splitHere46","toString()"
"1566splitHere46","9447239splitHere46","OperatorNode.toString()"
"1567splitHere46","9447239splitHere46","toString()"
"1568splitHere46","9447239splitHere46","evaluate()"
"1569splitHere46","9447239splitHere46","Map"
"1570splitHere46","9447239splitHere46","evaluate"
"1571splitHere46","9447239splitHere46","evaluate"
"1572splitHere46","9447239splitHere46","OperandNode"
"1573splitHere46","9447239splitHere46","VariableNode"
"1574splitHere46","9447239splitHere46","OperatorNode"
"1575splitHere46","9447239splitHere46","evaluate"
"1576splitHere46","9447305splitHere46","public static int read(String path, int x, int y, int z, Player player) {<newline46mondego>        int value = -1;<newline46mondego>        try {<newline46mondego>            FileInputStream fstream = new FileInputStream(path);<newline46mondego>            DataInputStream in = new DataInputStream(fstream);<newline46mondego>            BufferedReader br = new BufferedReader(new InputStreamReader(in));<newline46mondego>            String strLine = <doubleQuotes46><doubleQuotes46>;       <newline46mondego>            //Read File Line By Line<newline46mondego>            int index = -1;<newline46mondego>            while ((strLine = br.readLine()) != null) {<newline46mondego>                index = strLine.indexOf(x + <doubleQuotes46>_<doubleQuotes46> + y + <doubleQuotes46>_<doubleQuotes46> + z);<newline46mondego>                if (index != -1) {<newline46mondego>                    value = index;<newline46mondego>                    break;<newline46mondego>                }<newline46mondego>            }<newline46mondego>            //Close the input stream<newline46mondego>            in.close();<newline46mondego>        } catch (Exception exception) {//Catch exception if any<newline46mondego>            exception.printStackTrace();<newline46mondego>        }<newline46mondego>        return value;<newline46mondego>    }<newline46mondego>"
"1577splitHere46","9447353splitHere46","retval"
"1578splitHere46","9447436splitHere46","0 1 2<newline46mondego>3 4 5<newline46mondego>6 7 8<newline46mondego>"
"1579splitHere46","9447436splitHere46","char[]"
"1580splitHere46","9447436splitHere46","marks = new char[9];<newline46mondego>"
"1581splitHere46","9447436splitHere46","'x' == marks[0] == marks[3] == marks[6] // a vertical row<newline46mondego>'x' == marks[0] == marks[1] == marks[2] // a horizontal row<newline46mondego>'x' == marks[0] == marks[4] == marks[8] // a diagonal row<newline46mondego>"
"1582splitHere46","9447436splitHere46","boolean win = marks[0] == 'x' && marks[3] == 'x' && marks[6] == 'x';<newline46mondego>"
"1583splitHere46","9447445splitHere46","com.foo.Bar"
"1584splitHere46","9447445splitHere46","org.raffaele.com.foo.bar"
"1585splitHere46","9447609splitHere46","for(int i = 0; i < a.length; ++i){<newline46mondego>    c[i] = a[i] + b[i];<newline46mondego>}<newline46mondego>"
"1586splitHere46","9447765splitHere46","return find(<doubleQuotes46>select d from Directory d where d.parent.id = ?<doubleQuotes46>, this.id).fetch();<newline46mondego>"
"1587splitHere46","9447765splitHere46","return find(<doubleQuotes46>parent.id = ?<doubleQuotes46>, this.id).fetch();<newline46mondego>"
"1588splitHere46","9447898splitHere46","echo shell_exec(<doubleQuotes46>/usr/bin/java folder.Test 2>&1<doubleQuotes46>);<newline46mondego>"
"1589splitHere46","9448021splitHere46","else"
"1590splitHere46","9448021splitHere46","public class FirstLetter<newline46mondego>{<newline46mondego>    public static void main(String[] args)<newline46mondego>    {<newline46mondego>        System.out.println(firstLetter());<newline46mondego>    }<newline46mondego><newline46mondego>    public static String firstLetter()<newline46mondego>    {<newline46mondego>        String line = <doubleQuotes46>AD3F<doubleQuotes46> + <doubleQuotes46>EF4G<doubleQuotes46> + <doubleQuotes46>32SFB<doubleQuotes46>;<newline46mondego><newline46mondego>        for (int i = 0; i < line.length(); i++)<newline46mondego>        {<newline46mondego>            char ch = line.charAt(i);<newline46mondego>            if (Character.isLetter(ch))<newline46mondego>            {<newline46mondego>                System.out.println(<doubleQuotes46>This is the first letter: <doubleQuotes46> + ch);<newline46mondego>                return Character.toString(ch);<newline46mondego>            }<newline46mondego><newline46mondego>        }<newline46mondego>        System.out.println(<doubleQuotes46>No character found<doubleQuotes46>);<newline46mondego>        return <doubleQuotes46><doubleQuotes46>;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1591splitHere46","9448021splitHere46","String"
"1592splitHere46","9448021splitHere46","char"
"1593splitHere46","9448072splitHere46","\b"
"1594splitHere46","9448072splitHere46","(?<![.\d])[+-]?[3-5]+(?![.\d])<newline46mondego>"
"1595splitHere46","9448072splitHere46","(?<![.\d])"
"1596splitHere46","9448072splitHere46","(?![.\d])"
"1597splitHere46","9448072splitHere46","(?<![.\w])[+-]?[3-5]+(?![.\w])<newline46mondego>"
"1598splitHere46","9448072splitHere46","\b"
"1599splitHere46","9448072splitHere46","\b"
"1600splitHere46","9448072splitHere46","_"
"1601splitHere46","9448072splitHere46","\b"
"1602splitHere46","9448072splitHere46","[+-]"
"1603splitHere46","9448072splitHere46","\b"
"1604splitHere46","9448072splitHere46","[+-]"
"1605splitHere46","9448110splitHere46","Map<Integer, List<String>><newline46mondego>"
"1606splitHere46","9448110splitHere46","Map<Integer, List<String>> map = new HashMap<>();<newline46mondego>map.put(64, new ArrayList<String>());<newline46mondego>map.get(64).addAll(<doubleQuotes46>ADD<doubleQuotes46>, <doubleQuotes46>R1<doubleQuotes46>, <doubleQuotes46>R0<doubleQuotes46>, <doubleQuotes46>R0<doubleQuotes46>);<newline46mondego>"
"1607splitHere46","9448264splitHere46","public int getClosest(int[] array, int input) {<newline46mondego>    int lowestDiff = Integer.MAX_VALUE;<newline46mondego>    int result = 0;<newline46mondego>    for (int i : array) {<newline46mondego>        int diff = Math.abs(input - i); // use API to get absolute diff<newline46mondego>        if (diff < lowestDiff) {<newline46mondego>            lowestDiff = diff;<newline46mondego>            result = i;<newline46mondego>        }<newline46mondego>    }<newline46mondego>    return result;<newline46mondego>}<newline46mondego>"
"1608splitHere46","9448264splitHere46","0"
"1609splitHere46","9448264splitHere46","Integer.MAX_VALUE"
"1610splitHere46","9448293splitHere46","@Singleton<newline46mondego>public MyUserFilter extends FilterOfTheMonth {<newline46mondego><newline46mondego>    private final Provider<Authenticator> authProvider;<newline46mondego><newline46mondego>    @Inject<newline46mondego>    MyUserFilter(Provider<Authenticator> auth) {<newline46mondego>        this.authProvider = auth;<newline46mondego>    }<newline46mondego><newline46mondego>    public void doFilter(ServletRequest request, ServletResponse response, <newline46mondego>            FilterChain chain) throws java.io.IOException, ServletException {<newline46mondego>        try {<newline46mondego>            // Authenticate and SET the current user utilizing the request and/or                       <newline46mondego>            // session objects<newline46mondego>            authProvider.get().authenticateUser(HttpRequest currentRequest);<newline46mondego><newline46mondego>            // Continue on here along the servlet chain<newline46mondego>            ... other processing<newline46mondego>        } finally {<newline46mondego>            authProvider.get().getRidOfCurrentUser();<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1611splitHere46","9448414splitHere46","root"
"1612splitHere46","9448499splitHere46","ServletContext"
"1613splitHere46","9448499splitHere46","String path = System.getProperty(<doubleQuotes46>config.location<doubleQuotes46>) + <doubleQuotes46>/<doubleQuotes46> + ctx.getServletContextName();<newline46mondego>"
"1614splitHere46","9448521splitHere46","temp"
"1615splitHere46","9448542splitHere46","ClassCastException"
"1616splitHere46","9448542splitHere46","txtMessage = (EditText) findViewById(R.id.invite_text);<newline46mondego>"
"1617splitHere46","9448542splitHere46","View"
"1618splitHere46","9448542splitHere46","R.id.invite_text"
"1619splitHere46","9448542splitHere46","EditText"
"1620splitHere46","9448542splitHere46","invite_text"
"1621splitHere46","9448542splitHere46","EditText"
"1622splitHere46","9448542splitHere46","<EditText<newline46mondego>        android:id=<doubleQuotes46>@+id/invite_text<doubleQuotes46><newline46mondego>        android:layout_width=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>        ...<newline46mondego>        <doubleQuotes46> /><newline46mondego>"
"1623splitHere46","9448542splitHere46","gen"
"1624splitHere46","9448542splitHere46","gen"
"1625splitHere46","9448697splitHere46","for (int i=0;i<firstDimension.length;i++) <newline46mondego>{<newline46mondego>       System.out.println();<newline46mondego>       for (int j=0;j<firstDimension[i].length;j++) <newline46mondego>       {<newline46mondego>            System.out.print(firstDimension[i][j]);<newline46mondego>       }<newline46mondego>}<newline46mondego>"
"1626splitHere46","9448757splitHere46","r,g,b"
"1627splitHere46","9448757splitHere46","215,222,213"
"1628splitHere46","9448757splitHere46","line.split(<doubleQuotes46>,<doubleQuotes46>)"
"1629splitHere46","9448757splitHere46","String[]"
"1630splitHere46","9448757splitHere46","Color"
"1631splitHere46","9448757splitHere46","ObjectOutputStream"
"1632splitHere46","9448785splitHere46","<plugin><newline46mondego>    <groupId>org.apache.maven.plugins</groupId><newline46mondego>    <artifactId>maven-jar-plugin</artifactId><newline46mondego>    <configuration><newline46mondego>      <archive><newline46mondego>        <index>true</index><newline46mondego>        <manifest><newline46mondego>          <addClasspath>true</addClasspath><newline46mondego>        </manifest><newline46mondego>      </archive><newline46mondego>    </configuration><newline46mondego>  </plugin><newline46mondego>"
"1633splitHere46","9449243splitHere46","JSONArray array = new JSONArray(); // should fix the issue :)<newline46mondego>"
"1634splitHere46","9449281splitHere46","Class"
"1635splitHere46","9449281splitHere46","Class"
"1636splitHere46","9449281splitHere46","Class"
"1637splitHere46","9449281splitHere46","URLClassLoader"
"1638splitHere46","9449281splitHere46","ClassLoader.defineClass"
"1639splitHere46","9449281splitHere46","ByteArrayOutputStream baos = new ByteArrayOutputStream();<newline46mondego>    try (ObjectOutputStream oos = new ObjectOutputStream(baos)) {<newline46mondego>        Serializable payload = new Serializable() {<newline46mondego>            @Override<newline46mondego>            public String toString() {<newline46mondego>                return <doubleQuotes46>hello from the anonymous class<doubleQuotes46>;<newline46mondego>            }<newline46mondego>        };<newline46mondego>        oos.writeObject(payload);<newline46mondego>        oos.writeObject(payload.getClass());<newline46mondego>    }<newline46mondego><newline46mondego>    try (ObjectInputStream in = new ObjectInputStream(new ByteArrayInputStream(baos.toByteArray()))) {<newline46mondego>        System.out.println(in.readObject());<newline46mondego>        System.out.println(in.readObject());<newline46mondego>    }<newline46mondego>"
"1640splitHere46","9449331splitHere46","return address pointer"
"1641splitHere46","9449331splitHere46","may be extended with additional implementation-specific information, such as debugging information."
"1642splitHere46","9449331splitHere46","/* Invoke types */<newline46mondego><newline46mondego>#define INVOKE_CONSTRUCTOR 1<newline46mondego>#define INVOKE_STATIC      2<newline46mondego>#define INVOKE_INSTANCE    3<newline46mondego><newline46mondego>typedef struct InvokeRequest {<newline46mondego>    jboolean pending;      /* Is an invoke requested? */<newline46mondego>    jboolean started;      /* Is an invoke happening? */<newline46mondego>    jboolean available;    /* Is the thread in an invokable state? */<newline46mondego>    jboolean detached;     /* Has the requesting debugger detached? */<newline46mondego>    jint id;<newline46mondego>    /* Input */<newline46mondego>    jbyte invokeType;<newline46mondego>    jbyte options;<newline46mondego>    jclass clazz;<newline46mondego>    jmethodID method;<newline46mondego>    jobject instance;    /* for INVOKE_INSTANCE only */<newline46mondego>    jvalue *arguments;<newline46mondego>    jint argumentCount;<newline46mondego>    char *methodSignature;<newline46mondego>    /* Output */<newline46mondego>    jvalue returnValue;  /* if no exception, for all but INVOKE_CONSTRUCTOR */<newline46mondego>    jobject exception;   /* NULL if no exception was thrown */<newline46mondego>} InvokeRequest;<newline46mondego>"
"1643splitHere46","9449352splitHere46","android:configChanges=<doubleQuotes46>keyboardHidden|orientation<doubleQuotes46>"
"1644splitHere46","9449352splitHere46","@Override<newline46mondego>public void onConfigurationChanged(Configuration newConfig)<newline46mondego>{<newline46mondego>  super.onConfigurationChanged(newConfig);<newline46mondego>  setContentView(R.layout.streaming);<newline46mondego><newline46mondego>  initializeUI(); //contains all the findViewByID etc...<newline46mondego>}<newline46mondego>"
"1645splitHere46","9449409splitHere46","@return"
"1646splitHere46","9449409splitHere46","pom.xml"
"1647splitHere46","9449509splitHere46",".name"
"1648splitHere46","9449509splitHere46","........<newline46mondego>........<newline46mondego>try {<newline46mondego>                File root = new File(Environment.getExternalStorageDirectory()<newline46mondego>                        .getName() + <doubleQuotes46>/<doubleQuotes46> + fsitem.get(i));<newline46mondego>                File namefile = new File(root, <doubleQuotes46>.name<doubleQuotes46>);<newline46mondego>                if (!namefile.exists()){<newline46mondego>                    namefile.createNewFile();<newline46mondego>                }<newline46mondego>                FileReader namereader = new FileReader(namefile);<newline46mondego>                BufferedReader in = new BufferedReader(namereader);<newline46mondego>                String[] str_array = new String[4];<newline46mondego>........<newline46mondego>........<newline46mondego>"
"1649splitHere46","9449514splitHere46","import java.awt.event.*;<newline46mondego>import javax.swing.*;<newline46mondego><newline46mondego>public class Foo002 extends JPanel implements ActionListener {<newline46mondego><newline46mondego>   JComboBox combo1 = new JComboBox(new String[]{<doubleQuotes46>Fe<doubleQuotes46>, <doubleQuotes46>Fi<doubleQuotes46>, <doubleQuotes46>Fo<doubleQuotes46>, <doubleQuotes46>Fum<doubleQuotes46>});<newline46mondego>   public Foo002() {<newline46mondego><newline46mondego>      JComboBox combo2 = new JComboBox(new String[]{<doubleQuotes46>One<doubleQuotes46>, <doubleQuotes46>Two<doubleQuotes46>, <doubleQuotes46>Three<doubleQuotes46>, <doubleQuotes46>Four<doubleQuotes46>});<newline46mondego>      JButton helloBtn = new JButton(<doubleQuotes46>Hello<doubleQuotes46>);<newline46mondego><newline46mondego>      helloBtn.addActionListener(this); // I really hate doing this!<newline46mondego><newline46mondego>      add(combo1);<newline46mondego>      add(combo2);<newline46mondego>      add(helloBtn);<newline46mondego>   }<newline46mondego><newline46mondego>   private static void createAndShowGUI() {<newline46mondego>      JFrame frame = new JFrame(<doubleQuotes46>FormattedTextFieldDemo<doubleQuotes46>);<newline46mondego>      frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>      frame.add(new Foo002());<newline46mondego>      frame.pack();<newline46mondego>      frame.setVisible(true);<newline46mondego>   }<newline46mondego><newline46mondego>   public static void main(String[] args) {<newline46mondego>      SwingUtilities.invokeLater(new Runnable() {<newline46mondego>         public void run() {<newline46mondego>            UIManager.put(<doubleQuotes46>swing.boldMetal<doubleQuotes46>, Boolean.FALSE);<newline46mondego>            createAndShowGUI();<newline46mondego>         }<newline46mondego>      });<newline46mondego>   }<newline46mondego><newline46mondego>   @Override<newline46mondego>   public void actionPerformed(ActionEvent e) {<newline46mondego>      // this works because combo1 is visible in this method <newline46mondego>      System.out.println(combo1.getSelectedItem().toString());<newline46mondego><newline46mondego>      // this doesn't work because combo2's scope is limited to <newline46mondego>      // the constructor and it isn't visible in this method.<newline46mondego>      System.out.println(combo2.getSelectedItem().toString());<newline46mondego>   }<newline46mondego><newline46mondego>}<newline46mondego>"
"1650splitHere46","9449523splitHere46","DataSet<String> ds = new DataSet<String>();<newline46mondego>"
"1651splitHere46","9449523splitHere46","public class DataSet<T extends Comparable<T>><newline46mondego>"
"1652splitHere46","9449523splitHere46","DataSet<String> ds = new DataSet<String>();<newline46mondego>ds.add(<doubleQuotes46>man<doubleQuotes46>);<newline46mondego>ds.add(<doubleQuotes46>woman<doubleQuotes46>);<newline46mondego>"
"1653splitHere46","9449729splitHere46","for (ix = x, xsign = 1, xstep = 1; <newline46mondego>     (ix >= x - r) && (ix <= x + r);<newline46mondego>     ix += xsign * xstep, xsign = -xsign, xstep++)<newline46mondego>"
"1654splitHere46","9449729splitHere46","ix"
"1655splitHere46","9449733splitHere46","protected"
"1656splitHere46","9449733splitHere46","public"
"1657splitHere46","9449733splitHere46","public"
"1658splitHere46","9449751splitHere46","{}"
"1659splitHere46","9449751splitHere46","if"
"1660splitHere46","9449751splitHere46","for"
"1661splitHere46","9449751splitHere46","synchronized"
"1662splitHere46","9449751splitHere46","a"
"1663splitHere46","9449751splitHere46","Object a"
"1664splitHere46","9449963splitHere46","jboss.server.log.dir"
"1665splitHere46","9449963splitHere46","System.getProperty(<doubleQuotes46>jboss.server.log.dir<doubleQuotes46>)"
"1666splitHere46","9449999splitHere46",", id:"
"1667splitHere46","9449999splitHere46",","
"1668splitHere46","9449999splitHere46","id:"
"1669splitHere46","9449999splitHere46","String delims = <doubleQuotes46>(, )?(name|id|dest|from|date_time)?[:\\s]+<doubleQuotes46>;<newline46mondego>"
"1670splitHere46","9450128splitHere46","ExpandableListView.ExpandableListContextMenuInfo"
"1671splitHere46","9450128splitHere46","@Override<newline46mondego>public void onCreateContextMenu(ContextMenu contextMenu, View v, ContextMenu.ContextMenuInfo menuInfo) {<newline46mondego>    ExpandableListView.ExpandableListContextMenuInfo info =<newline46mondego>            (ExpandableListView.ExpandableListContextMenuInfo) menuInfo;<newline46mondego>   // ...<newline46mondego>}<newline46mondego>"
"1672splitHere46","9450272splitHere46","Pair"
"1673splitHere46","9450272splitHere46","compareTo"
"1674splitHere46","9450272splitHere46","public"
"1675splitHere46","9450272splitHere46","Integer"
"1676splitHere46","9450272splitHere46","compareTo"
"1677splitHere46","9450272splitHere46","private class Pair implements Comparable<Pair> {<newline46mondego><newline46mondego>    public int first;<newline46mondego>    public int second;<newline46mondego><newline46mondego>    public Pair (int a, int b){<newline46mondego>        this.first = a;<newline46mondego>        this.second = b;<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    public int compareTo (Pair o){<newline46mondego>        return second < o.second ? -1 : (second == o.second ? 0 : 1);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1678splitHere46","9450312splitHere46","ArrayAdapter"
"1679splitHere46","9450312splitHere46","BaseAdapter"
"1680splitHere46","9450447splitHere46","RList.get(0).getAge();<newline46mondego>Rlist.get(RList.size()-1).getAge();<newline46mondego>"
"1681splitHere46","9450447splitHere46","Rlist.toArray()[0];<newline46mondego>"
"1682splitHere46","9450494splitHere46","AsyncTask"
"1683splitHere46","9450494splitHere46","android.os.AsyncTask"
"1684splitHere46","9450494splitHere46","private class MyTask extends AsyncTask<Void, Void, Car> {<newline46mondego>        @Override<newline46mondego>        protected Car doInBackground() {<newline46mondego>            // Create your Car here<newline46mondego>            return car;<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        protected void onPostExecute(Car car) {<newline46mondego>            // This will be executed on UI thread after completion<newline46mondego>        }<newline46mondego>}<newline46mondego>"
"1685splitHere46","9450494splitHere46","MyTask task = new MyTask();<newline46mondego>task.execute();<newline46mondego>"
"1686splitHere46","9450494splitHere46","AsyncTask"
"1687splitHere46","9450494splitHere46","private class MyTaskWithParams extends AsyncTask<String, Void, Car> {<newline46mondego>        @Override<newline46mondego>        protected Car doInBackground(String parameter) {<newline46mondego>            // Create your Car using the String you passed<newline46mondego>            return car;<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        protected void onPostExecute(Car car) {<newline46mondego>            // This will be executed on UI thread after completion<newline46mondego>        }<newline46mondego>}<newline46mondego>"
"1688splitHere46","9450494splitHere46","MyTask2 task2 = new MyTask2();<newline46mondego>task2.execute(<doubleQuotes46>SomethingSomething<doubleQuotes46>);<newline46mondego>"
"1689splitHere46","9450574splitHere46","public class Sequences {<newline46mondego><newline46mondego>    public static ArrayList<String> sequences(String s) {<newline46mondego>        ArrayList<String> list = new ArrayList<String>();<newline46mondego>        if (s.length() == 0) {<newline46mondego>            list.add(<doubleQuotes46><doubleQuotes46>);<newline46mondego>            return list;<newline46mondego>        }<newline46mondego>        String firstChar = s.substring(0, 1);<newline46mondego>        String theRest = s.substring(1, s.length());<newline46mondego>        ArrayList<String> siffixSequence = sequences(theRest);<newline46mondego>        list.addAll(siffixSequence);<newline46mondego>        for (String string : siffixSequence) {<newline46mondego>            list.add(firstChar + string);<newline46mondego>        }<newline46mondego>        return list;<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        System.out.println(Sequences.sequences(<doubleQuotes46>brat<doubleQuotes46>));<newline46mondego>        // prints [, t, a, at, r, rt, ra, rat, b, bt, ba, bat, br, brt, bra, brat]<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"1690splitHere46","9450585splitHere46","T"
"1691splitHere46","9450585splitHere46","static <T extends Comparable<T>> boolean isOrdered(ArrayList<T> list)<newline46mondego>  ...<newline46mondego>}<newline46mondego>"
"1692splitHere46","9450585splitHere46","T"
"1693splitHere46","9450585splitHere46","T"
"1694splitHere46","9450692splitHere46","=="
"1695splitHere46","9450750splitHere46","ChatServer"
"1696splitHere46","9450750splitHere46","public void start() {<newline46mondego>    thread = new Thread(this);<newline46mondego>    thread.start();<newline46mondego>}<newline46mondego><newline46mondego>public void stop() { <newline46mondego>    // You should implement this too<newline46mondego>}<newline46mondego><newline46mondego>public static void main(String args[]) { <newline46mondego>    // Instantiate a CharServer with the listening port 9191<newline46mondego>    ChatServer chatServer = new ChatServer(9191);<newline46mondego>    // CharServer.start() should not be confused with Thread.start();<newline46mondego>    // This calls our custom method up above, which includes a call to<newline46mondego>    // Thread(ChatServer).start();<newline46mondego>    chatServer.start();<newline46mondego><newline46mondego>}<newline46mondego>"
"1697splitHere46","9450750splitHere46","CharServer"
"1698splitHere46","9450750splitHere46","Binding to port 9191, please wait  ...<newline46mondego>Server started: ServerSocket[addr=0.0.0.0/0.0.0.0,port=0,localport=9191]<newline46mondego>Waiting for a client ...<newline46mondego>Waiting for a client ...<newline46mondego>"
"1699splitHere46","9450750splitHere46","stop()"
"1700splitHere46","9450876splitHere46","if-else"
"1701splitHere46","9450876splitHere46","if (name.isChecked()) {<newline46mondego>    name.setChecked(true);<newline46mondego>} else {<newline46mondego>    name.setChecked(false);<newline46mondego>}<newline46mondego>"
"1702splitHere46","9450876splitHere46","if (name.isChecked()) name.setChecked(true); else name.setChecked(false);<newline46mondego>"
"1703splitHere46","9450876splitHere46","name.setChecked(name.isChecked());<newline46mondego>"
"1704splitHere46","9450876splitHere46","int max = a > b ? a : b;<newline46mondego>"
"1705splitHere46","9450876splitHere46","int max;<newline46mondego>if ( a > b ) {<newline46mondego>    max = a;<newline46mondego>} else {<newline46mondego>    max = b;<newline46mondego>}<newline46mondego>"
"1706splitHere46","9451166splitHere46","AlertDialog"
"1707splitHere46","9451166splitHere46","ListView"
"1708splitHere46","9451166splitHere46","refreshListView()"
"1709splitHere46","9451166splitHere46","ListView"
"1710splitHere46","9451166splitHere46","......<newline46mondego>......<newline46mondego>public void onClick(<newline46mondego>        DialogInterface dialogInterface, int i) {<newline46mondego>    try {<newline46mondego>        Runtime.getRuntime()<newline46mondego>        .exec(<doubleQuotes46>/system/xbin/rm -rf <doubleQuotes46><newline46mondego>                + selectedfolder<newline46mondego>                .getAbsolutePath()<newline46mondego>                .toString());<newline46mondego>        refreshListView();<newline46mondego><newline46mondego>    } catch (IOException e) {<newline46mondego>        e.printStackTrace();<newline46mondego>        return;<newline46mondego>    }<newline46mondego>}<newline46mondego>......<newline46mondego>......<newline46mondego>protected void refreshListView() {<newline46mondego>    fsitem = NameManager.getfsiList();<newline46mondego>    NameManager.WriteName(fsitem);<newline46mondego>    MatrixCursor cursor = NameManager.getnameList();<newline46mondego>    ListView list = (ListView) getListView();<newline46mondego>    String[] from = { <doubleQuotes46>name<doubleQuotes46>, <doubleQuotes46>info<doubleQuotes46>, <doubleQuotes46>status<doubleQuotes46>, <doubleQuotes46>path<doubleQuotes46>, <doubleQuotes46>folder<doubleQuotes46>, BaseColumns._ID };<newline46mondego>    int[] to = { R.id.name, R.id.info, R.id.status, R.id.path };<newline46mondego>    final SimpleCursorAdapter adapter = new SimpleCursorAdapter(this,<newline46mondego>            R.layout.row, cursor, from, to);<newline46mondego>    list.setAdapter(adapter);<newline46mondego><newline46mondego>}<newline46mondego>"
"1711splitHere46","9451201splitHere46","Address.find(<doubleQuotes46>username = ? order by id desc<doubleQuotes46>, <doubleQuotes46>%username%<doubleQuotes46>).fetch(1);<newline46mondego>"
"1712splitHere46","9451355splitHere46","answer = this.getName().compareTo(other.getName());<newline46mondego>"
"1713splitHere46","9451355splitHere46","Object"
"1714splitHere46","9451355splitHere46","getName()"
"1715splitHere46","9451355splitHere46","DataSet"
"1716splitHere46","9451355splitHere46","other"
"1717splitHere46","9451355splitHere46","answer = this.getName().compareTo(((DataSet)other).getName());<newline46mondego>"
"1718splitHere46","9451355splitHere46","incompatible types<newline46mondego>    String s = <doubleQuotes46>john<doubleQuotes46>;<newline46mondego>"
"1719splitHere46","9451355splitHere46","String"
"1720splitHere46","9451355splitHere46","String"
"1721splitHere46","9451355splitHere46","String"
"1722splitHere46","9451355splitHere46","error: cannot find symbol<newline46mondego>    ds.s.compareTo(a);<newline46mondego>"
"1723splitHere46","9451355splitHere46","DataSet"
"1724splitHere46","9451355splitHere46","s"
"1725splitHere46","9451355splitHere46","ds.s"
"1726splitHere46","9451355splitHere46","error: method getMaximum in class DataSet cannot be applied to given types;<newline46mondego>    System.out.println(<doubleQuotes46>Maximum Word: <doubleQuotes46> + ds.getMaximum());<newline46mondego>"
"1727splitHere46","9451355splitHere46","getMaximum()"
"1728splitHere46","9451355splitHere46","getMaximum(null)"
"1729splitHere46","9451379splitHere46","URL url = new URL(<doubleQuotes46>http://www.yourserver.com/some/path<doubleQuotes46>);<newline46mondego>HttpURLConnection urlConnection = (HttpURLConnection) url.openConnection();<newline46mondego><newline46mondego>try { <newline46mondego>    InputStream in = new BufferedInputStream(urlConnection.getInputStream());<newline46mondego>    FileOutputStream out = new FileutputStream(<doubleQuotes46>/path/to/your/output/file<doubleQuotes46>); <newline46mondego>    byte[] buffer = new byte[16384];<newline46mondego>    int len;<newline46mondego>    while((len = in.read(buffer)) != -1){<newline46mondego>        out.write(buffer, 0, len);<newline46mondego>    }<newline46mondego>finally {<newline46mondego>    urlConnection.disconnect();<newline46mondego>}<newline46mondego>"
"1730splitHere46","9451393splitHere46","List<Cell>"
"1731splitHere46","9451393splitHere46","Collections.shuffle(List<?>...)"
"1732splitHere46","9451409splitHere46","Integer.parseInt(String s)"
"1733splitHere46","9451409splitHere46","NumberFormatException"
"1734splitHere46","9451409splitHere46","src.zip"
"1735splitHere46","9451409splitHere46","BigInteger(String s)"
"1736splitHere46","9451409splitHere46","BigInteger"
"1737splitHere46","9451409splitHere46","/**<newline46mondego> * Provides the same functionality as Integer.parseInt(String s), but throws<newline46mondego> * a custom exception for out-of-range inputs.<newline46mondego> */<newline46mondego>int parseIntWithOverflow(String s) throws Exception {<newline46mondego>    int result = 0;<newline46mondego>    try {<newline46mondego>        result = Integer.parseInt(s);<newline46mondego>    } catch (Exception e) {<newline46mondego>        try {<newline46mondego>            new BigInteger(s);<newline46mondego>        } catch (Exception e1) {<newline46mondego>            throw e; // re-throw, this was a formatting problem<newline46mondego>        }<newline46mondego>        // We're here iff s represents a valid integer that's outside<newline46mondego>        // of java.lang.Integer range. Consider using custom exception type.<newline46mondego>        throw new NumberFormatException(<doubleQuotes46>Input is outside of Integer range!<doubleQuotes46>);<newline46mondego>    }<newline46mondego>    // the input parsed no problem<newline46mondego>    return result;<newline46mondego>}<newline46mondego>"
"1738splitHere46","9451409splitHere46","int result = 0;<newline46mondego>try {<newline46mondego>    result = Integer.parseInt(s);<newline46mondego>} catch (NumberFormatException e) {<newline46mondego>    // act accordingly<newline46mondego>}<newline46mondego>"
"1739splitHere46","9451448splitHere46","curl -XPUT -f -uadmin:password --data-binary @/absolute/path/my-utils-2.3.jar <doubleQuotes46>http://localhost/artifactory/my-repo/my/utils/2.3/my-utils-2.3.jar<doubleQuotes46><newline46mondego>"
"1740splitHere46","9451504splitHere46","public void render () {<newline46mondego>            Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT); // This cryptic line clears the screen.<newline46mondego>            batch.begin();<newline46mondego>            // Drawing goes here!<newline46mondego>            batch.end();<newline46mondego>    }<newline46mondego>"
"1741splitHere46","9451600splitHere46","predicates.add(builder.lessThanOrEqualTo(root.<Date>get(<doubleQuotes46>dateCreated<doubleQuotes46>), param));<newline46mondego>"
"1742splitHere46","9451610splitHere46","Component"
"1743splitHere46","9451610splitHere46","JComponent"
"1744splitHere46","9451610splitHere46","java.awt.Desktop"
"1745splitHere46","9451690splitHere46","JFrame"
"1746splitHere46","9451690splitHere46","JPanel"
"1747splitHere46","9451690splitHere46","JDialog"
"1748splitHere46","9451690splitHere46","YourJFrame.getInstance().getPanels(10).sampleMethod()"
"1749splitHere46","9451690splitHere46","mouseClicked()"
"1750splitHere46","9451718splitHere46","java.lang.ClassNotFoundException: org.eclipse.swt.SWTError<newline46mondego>"
"1751splitHere46","9451750splitHere46","javax.servlet.ServletContext.getContext(uriPath)"
"1752splitHere46","9451750splitHere46","http://myserver/warA"
"1753splitHere46","9451750splitHere46","http://myserver/warB"
"1754splitHere46","9451750splitHere46","/* retrieve foreign context */<newline46mondego>ServletContext ctxWarA = this.getServletContext().getContext(<doubleQuotes46>warA<doubleQuotes46>);<newline46mondego><newline46mondego>/* ... and work with it */<newline46mondego>Map<String, String> map = (Map<String, String>) ctxWarA.getAttribute(<doubleQuotes46>usermanager<doubleQuotes46>);<newline46mondego>"
"1755splitHere46","9451750splitHere46","warB"
"1756splitHere46","9451750splitHere46","context.xml"
"1757splitHere46","9451750splitHere46","<Context crossContext=<doubleQuotes46>true<doubleQuotes46>/>"
"1758splitHere46","9451750splitHere46","<tomcat>/lib"
"1759splitHere46","9451750splitHere46","warA"
"1760splitHere46","9451750splitHere46","warB"
"1761splitHere46","9451750splitHere46","warB"
"1762splitHere46","9451750splitHere46","warA"
"1763splitHere46","9451785splitHere46","frame.setContentPane(htmlPanel);<newline46mondego>frame.setVisible(true);<newline46mondego>SwingUtilities.invokeLater(new Runnable() {<newline46mondego>    @Override<newline46mondego>    public void run() {<newline46mondego>        htmlPanel.scroll(500, 300);<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"1764splitHere46","9451821splitHere46","StringBuilder sb = new StringBuilder();<newline46mondego>sb.append(10); // add <doubleQuotes46>10<doubleQuotes46> as text.<newline46mondego>"
"1765splitHere46","9451821splitHere46","String c = Integer.toString(10);<newline46mondego>"
"1766splitHere46","9451821splitHere46","String c = <doubleQuotes46><doubleQuotes46> + 10;<newline46mondego>"
"1767splitHere46","9451821splitHere46","String c = <doubleQuotes46>before <doubleQuotes46> + a + <doubleQuotes46> after<doubleQuotes46>;<newline46mondego>"
"1768splitHere46","9451972splitHere46","AsyncTask"
"1769splitHere46","9451972splitHere46","execute()"
"1770splitHere46","9452272splitHere46","enqueue"
"1771splitHere46","9452373splitHere46","T"
"1772splitHere46","9452373splitHere46","SoapObjectToModel<MyAbstractClass>"
"1773splitHere46","9452373splitHere46","T"
"1774splitHere46","9452373splitHere46","T"
"1775splitHere46","9452483splitHere46","{<newline46mondego>    <doubleQuotes46>100<doubleQuotes46>  : [<doubleQuotes46>New York<doubleQuotes46>], <newline46mondego>    <doubleQuotes46>200<doubleQuotes46>  : [<doubleQuotes46>Geneva<doubleQuotes46>, <doubleQuotes46>Tel Aviv<doubleQuotes46>],<newline46mondego>    <doubleQuotes46>300<doubleQuotes46>  : [<doubleQuotes46>Rome<doubleQuotes46>, <doubleQuotes46>Paris<doubleQuotes46>, <doubleQuotes46>Atlanta<doubleQuotes46>],<newline46mondego>    <doubleQuotes46>400a<doubleQuotes46> : [<doubleQuotes46>Los Angeles<doubleQuotes46>]<newline46mondego>}<newline46mondego>"
"1776splitHere46","9452483splitHere46","Map<String, String>"
"1777splitHere46","9452483splitHere46","Map<object, String>"
"1778splitHere46","9452570splitHere46","public static ArrayList<String> returnNewUrls(String data) {<newline46mondego>  ArrayList<String> urls = new ArrayList<String>();<newline46mondego>  addStuffToUrlsList();<newline46mondego>  return urls;<newline46mondego>}<newline46mondego>"
"1779splitHere46","9452570splitHere46","ArrayList<String> parseHtml = new ArrayList<String>();<newline46mondego>parseHtml = HtmlParser.returnNewUrls(html);<newline46mondego>"
"1780splitHere46","9452570splitHere46","ArrayList<String> parseHtml = HtmlParser.returnNewUrls(html);<newline46mondego>"
"1781splitHere46","9452713splitHere46","rendered=<doubleQuotes46>#{reportController.report[isRendered]}<doubleQuotes46><newline46mondego>"
"1782splitHere46","9452920splitHere46","RowFilter basic = ..<newline46mondego> RowFilter other = ...<newline46mondego> RowFilter finer = Rowfilter.andFilter(basic, other);<newline46mondego><newline46mondego> basicTable.getRowSorter().setRowFilter(basic);<newline46mondego> finerTable.getRowSorter().setRowFilter(finer);<newline46mondego>"
"1783splitHere46","9453030splitHere46","String[][] user = new String[5][3];<newline46mondego><newline46mondego>user.length will always be 5 and <newline46mondego><newline46mondego>user[0].length = user[1].length = ... = user[5].length = 3<newline46mondego>"
"1784splitHere46","9453030splitHere46","boolean notnull=false;<newline46mondego>for(String[] array : user){<newline46mondego>    for(String val : array){<newline46mondego>      if(val!=null){<newline46mondego>        notNull=true;<newline46mondego>        break;<newline46mondego>      }<newline46mondego>    }<newline46mondego>}<newline46mondego>if(notNull){<newline46mondego>  System.out.println(<doubleQuotes46>Array not empty)<doubleQuotes46>;<newline46mondego>}else{<newline46mondego>     System.out.println(<doubleQuotes46>Array empty)<doubleQuotes46>;<newline46mondego>}<newline46mondego>"
"1785splitHere46","9453056splitHere46","public void setName(String name) {<newline46mondego>   this.name = name;<newline46mondego>}<newline46mondego><newline46mondego>public String getName() {<newline46mondego>   return name;<newline46mondego>}<newline46mondego>"
"1786splitHere46","9453121splitHere46","#elements_in_output"
"1787splitHere46","9453121splitHere46","CombinationsGetter"
"1788splitHere46","9453121splitHere46","Iterable<Pair>"
"1789splitHere46","9453121splitHere46","Iterator<Pair>"
"1790splitHere46","9453121splitHere46","ArrayList.addAll()"
"1791splitHere46","9453121splitHere46","O(n^2)"
"1792splitHere46","9453121splitHere46","ArrayList.addAll()"
"1793splitHere46","9453121splitHere46","O(n^2)"
"1794splitHere46","9453121splitHere46","O(n^2)"
"1795splitHere46","9453121splitHere46","i"
"1796splitHere46","9453121splitHere46","j==n"
"1797splitHere46","9453121splitHere46","j"
"1798splitHere46","9453121splitHere46","i+1"
"1799splitHere46","9453121splitHere46","n + (n-1) + ... + 1"
"1800splitHere46","9453121splitHere46","O(n^2)"
"1801splitHere46","9453121splitHere46","Pair"
"1802splitHere46","9453247splitHere46","array = [1 2 3 4 5 6 7 8], to find = 7<newline46mondego>We test our value as the last element in first array.<newline46mondego>1 step: divide into [1 2 3 4] and [5 6 7 8], 4 < 7, our value in second array<newline46mondego>2 step: divide into [5 6] and [7 8], 6 < 7, our value in second array<newline46mondego>3 step: divide into [7] and [8], 7 = 7, we found it.<newline46mondego>"
"1803splitHere46","9453290splitHere46","<property name=<doubleQuotes46>createSoap12Binding<doubleQuotes46> value=<doubleQuotes46>true<doubleQuotes46> /><newline46mondego>"
"1804splitHere46","9453290splitHere46","<bean id=<doubleQuotes46>ClassModelDAO<doubleQuotes46> class=<doubleQuotes46>com.aqif.dao.ClassModelDAOImpl<doubleQuotes46>><newline46mondego>    <property name=<doubleQuotes46>createSoap12Binding<doubleQuotes46> value=<doubleQuotes46>true<doubleQuotes46> /><newline46mondego></bean><newline46mondego>"
"1805splitHere46","9453290splitHere46","<property name=<doubleQuotes46>createSoap11Binding<doubleQuotes46> value=<doubleQuotes46>false<doubleQuotes46> /><newline46mondego>"
"1806splitHere46","9453369splitHere46","Bundle"
"1807splitHere46","9453369splitHere46","--repository"
"1808splitHere46","9453369splitHere46","$ cd your-base-repository<newline46mondego>$ hg log --repository x.hg<newline46mondego>"
"1809splitHere46","9453369splitHere46","Bundle"
"1810splitHere46","9453369splitHere46","Repository repo = Repository.open(new File(<doubleQuotes46>your-base-repository<doubleQuotes46>));<newline46mondego>Bundle bundle = new Bundle(repo, new File(<doubleQuotes46>x.hg<doubleQuotes46>));<newline46mondego>"
"1811splitHere46","9453369splitHere46","List<Changeset> changesets = bundle.getChangesets();<newline46mondego>"
"1812splitHere46","9453388splitHere46","String"
"1813splitHere46","9453388splitHere46","String Literal Pool"
"1814splitHere46","9453388splitHere46","Literal Pool"
"1815splitHere46","9453388splitHere46","equals"
"1816splitHere46","9453388splitHere46","=="
"1817splitHere46","9453388splitHere46","String one = new String(<doubleQuotes46>yay!<doubleQuotes46>);<newline46mondego>String two = new String(<doubleQuotes46>yay!<doubleQuotes46>);<newline46mondego>if(one.equals(two))<newline46mondego>   System.out.println(<doubleQuotes46>equals() returns true.<doubleQuotes46>);<newline46mondego>if(one == two)<newline46mondego>   System.out.println(<doubleQuotes46> == operator returns true.<doubleQuotes46>);<newline46mondego>"
"1818splitHere46","9453388splitHere46","equals() returns true.<newline46mondego>"
"1819splitHere46","9453430splitHere46","params interceptor"
"1820splitHere46","9453430splitHere46","struts-default.xml"
"1821splitHere46","9453442splitHere46","ResourceBundle.getBundle(<doubleQuotes46>bundleName<doubleQuotes46>).getString(<doubleQuotes46>my.string<doubleQuotes46>)"
"1822splitHere46","9453442splitHere46","messages.properties"
"1823splitHere46","9453442splitHere46","ResourceBundle.getBundle(<doubleQuotes46>messages<doubleQuotes46>)"
"1824splitHere46","9453493splitHere46","cmdAppend"
"1825splitHere46","9453493splitHere46","cmd.cmdAppend(<doubleQuotes46>--config<doubleQuotes46>, <doubleQuotes46>a.b=x<doubleQuotes46>);<newline46mondego>"
"1826splitHere46","9453493splitHere46","cmd.execute();"
"1827splitHere46","9453600splitHere46","String name = is.readLine();<newline46mondego>String password = is.readLine();<newline46mondego>"
"1828splitHere46","9453632splitHere46","int [] map =<newline46mondego>  {0, 15, 70, 90, 90, 71, 11, 1, 61, 99, 100, 100, 100, 66, 29, 98, 100, 100, <newline46mondego>   100, 100, 90, 62, 100, 100, 100, 100, 100, 91, 68, 100, 100, 100, 100, 100,<newline46mondego>   83, 55, 100, 100, 100, 100, 99, 33, 10, 90, 100, 100, 99, 40, 2};<newline46mondego>"
"1829splitHere46","9453632splitHere46","int [][] initializer =<newline46mondego>    {{0, 0}, {1, 15}, {2, 70}, {3, 90}, {4, 90}, {5, 71}, {6, 11}, {7, 1}, {8, 61},<newline46mondego>     {9, 99}, {10, 100}, {11, 100}, {12, 100}, {13, 66}, {14, 29}, {15, 98},<newline46mondego>     {17, 100}, {16, 100}, {19, 100}, {18, 100}, {21, 62}, {20, 90}, {23, 100},<newline46mondego>     {22, 100}, {25, 100}, {24, 100}, {27, 91}, {26, 100}, {29, 100}, {28, 68},<newline46mondego>     {31, 100}, {30, 100}, {34, 83}, {35, 55}, {32, 100}, {33, 100}, {38, 100},<newline46mondego>     {39, 100}, {36, 100}, {37, 100}, {42, 10}, {43, 90}, {40, 99}, {41, 33},<newline46mondego>     {46, 99}, {47, 40}, {44, 100}, {45, 100}, {48, 2}};<newline46mondego>Map<Integer, Integer> myMap = new HashMap<Integer, Integer> ();<newline46mondego>for (int i = 0; i < initializer.length; i++) {<newline46mondego>    myMap.put(initializer[i][0], initializer[i][1]);<newline46mondego>}<newline46mondego>"
"1830splitHere46","9453726splitHere46","virtual"
"1831splitHere46","9453726splitHere46","class A {<newline46mondego>  public void foo() { }<newline46mondego>}<newline46mondego>class B extends A { <newline46mondego>  public void foo() { }<newline46mondego>}<newline46mondego>"
"1832splitHere46","9453726splitHere46","A obj = new B();<newline46mondego>obj.foo();<newline46mondego>"
"1833splitHere46","9453726splitHere46","B.foo()"
"1834splitHere46","9453726splitHere46","A.foo()"
"1835splitHere46","9453726splitHere46","obj"
"1836splitHere46","9453726splitHere46","B"
"1837splitHere46","9453770splitHere46","static"
"1838splitHere46","9453890splitHere46","Map<String, String> streetname = new HashMap<String, String>();<newline46mondego><newline46mondego>for (Entry<String,String> e : streetno.entrySet()) {<newline46mondego>  streetname.put(e.getValue(), e.getKey());<newline46mondego>}<newline46mondego>"
"1839splitHere46","9453890splitHere46","for"
"1840splitHere46","9453890splitHere46","put()"
"1841splitHere46","9453890splitHere46","null"
"1842splitHere46","9453890splitHere46","streetno"
"1843splitHere46","9453892splitHere46","String encoding = <doubleQuotes46>UTF-8<doubleQuotes46>; // Or <doubleQuotes46>ISO-8859-7<doubleQuotes46><newline46mondego>BufferedReader br = new BufferedReader(new InputStreamReader(url.openStream(), encoding));<newline46mondego>"
"1844splitHere46","9453892splitHere46","StringBuilder sb = new StringBuilder();<newline46mondego>String temp;<newline46mondego>while ((temp = br.readLine()) != null) {<newline46mondego>    sb.append(temp).append(<doubleQuotes46>\n<doubleQuotes46>);<newline46mondego>    System.out.println(temp);<newline46mondego>}<newline46mondego>String html = sb.toString();<newline46mondego>"
"1845splitHere46","9453892splitHere46","\r"
"1846splitHere46","9453892splitHere46","\n"
"1847splitHere46","9453892splitHere46","\r\n"
"1848splitHere46","9453975splitHere46","label.fullname = {0} {1} <newline46mondego>"
"1849splitHere46","9453975splitHere46","<h:outputFormat value=<doubleQuotes46>#{bundle.label.fullname}<doubleQuotes46>><newline46mondego>  <f:param value=<doubleQuotes46>#{bundle.label.name}<doubleQuotes46>/><newline46mondego>  <f:param value=<doubleQuotes46>#{bundle.label.surname}<doubleQuotes46>/><newline46mondego></h:outputFormat> <newline46mondego>"
"1850splitHere46","9453975splitHere46","CONST_1 = name<newline46mondego>CONST_2 = surname<newline46mondego>fullname = {CONST_1}  {CONST_2}<newline46mondego>"
"1851splitHere46","9453989splitHere46","Serializable"
"1852splitHere46","9453989splitHere46","serialVersionUID"
"1853splitHere46","9453989splitHere46","serialVersionUID"
"1854splitHere46","9453989splitHere46","0"
"1855splitHere46","9453989splitHere46","1"
"1856splitHere46","9454190splitHere46","INSTANCE1"
"1857splitHere46","9454190splitHere46","MULTITON_MAP"
"1858splitHere46","9454190splitHere46","INSTANCE1"
"1859splitHere46","9454190splitHere46","MULTITON_MAP"
"1860splitHere46","9454190splitHere46","MULTITON_MAP.get(name);"
"1861splitHere46","9454190splitHere46","get"
"1862splitHere46","9454190splitHere46","MULTITON_MAP"
"1863splitHere46","9454289splitHere46","split"
"1864splitHere46","9454289splitHere46","arr = a[index].split(<doubleQuotes46>|<doubleQuotes46>);"
"1865splitHere46","9454289splitHere46","arr = a[index].split(<doubleQuotes46>\\|<doubleQuotes46>);"
"1866splitHere46","9454361splitHere46","class Base {}<newline46mondego>class Child extends Base<newline46mondego>{<newline46mondego>  // ...<newline46mondego>}<newline46mondego>"
"1867splitHere46","9454361splitHere46","public class Child{<newline46mondego>   private Base base;<newline46mondego><newline46mondego>   public Child(...){<newline46mondego>       base = new Base(...);<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"1868splitHere46","9454414splitHere46","edittext t1 = (edittext) textEntryView.findviewbyid(R.id.vsname);<newline46mondego>String s = t1.gettext().toString();<newline46mondego>"
"1869splitHere46","9454421splitHere46","@ViewScoped"
"1870splitHere46","9454421splitHere46","JSF 2.0"
"1871splitHere46","9454442splitHere46","Character"
"1872splitHere46","9454442splitHere46","java.lang.Character"
"1873splitHere46","9454442splitHere46","Character"
"1874splitHere46","9454442splitHere46","package com.foo;<newline46mondego><newline46mondego>public abstract class Character {<newline46mondego>    public abstract void generateStats();<newline46mondego>}<newline46mondego>"
"1875splitHere46","9454442splitHere46","import com.foo.Character;<newline46mondego><newline46mondego>public class NPCharacter extends Character {<newline46mondego>    public void generateStats() {<newline46mondego><newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1876splitHere46","9454550splitHere46","public String getURL(String url) {<newline46mondego><newline46mondego>    System.out.println(<doubleQuotes46>Fetching <doubleQuotes46> + url);<newline46mondego><newline46mondego>    if (this.httpClient == null) {<newline46mondego>        this.initializeHTTPSession();<newline46mondego>    }<newline46mondego><newline46mondego>    ResponseHandler<String> responseHandler = new BasicResponseHandler();<newline46mondego>    HttpGet get = new HttpGet(url);<newline46mondego><newline46mondego>    String result = null;<newline46mondego><newline46mondego>    try {<newline46mondego>        result = this.httpClient.execute(get, responseHandler);<newline46mondego>    } catch (HttpResponseException e) {<newline46mondego>        System.out.println(e.getMessage());<newline46mondego>        return null;<newline46mondego>    } catch (ClientProtocolException e) {<newline46mondego>        e.printStackTrace();<newline46mondego>    } catch (UnknownHostException e) {<newline46mondego>        result = <doubleQuotes46>The host is invalid: <doubleQuotes46> + url;<newline46mondego>    } catch (IOException e) {<newline46mondego>        e.printStackTrace();<newline46mondego>    }<newline46mondego><newline46mondego>    return result;<newline46mondego>}<newline46mondego>"
"1877splitHere46","9454576splitHere46","$(document).ready(function () {<newline46mondego><newline46mondego>    var id = '${id}' // you can have it here<newline46mondego>    $('.doAction').click(function () {<newline46mondego>        var rel = $('.doAction:checked').attr('rel'); // you need not parse to int because it will always string in parameter<newline46mondego>        $('.doAction').prop('disabled', true); // to disable radio button<newline46mondego>        $.ajax({<newline46mondego>            type: 'POST',<newline46mondego>            dataType: 'html', // change this since your servlet response is html not json<newline46mondego>            cache: false,<newline46mondego>            data: {<newline46mondego>                rating: rel,<newline46mondego>                itemID: id<newline46mondego>            },<newline46mondego>            url: 'Ratings',<newline46mondego>            success: function (data) {<newline46mondego>                   $('#rating').html(data); // assuming response as {<doubleQuotes46>rating<doubleQuotes46> : 4.4} <newline46mondego>            }<newline46mondego>        });<newline46mondego>    });<newline46mondego>});<newline46mondego>"
"1878splitHere46","9454588splitHere46","System.out.println(<newline46mondego>    String.format(<doubleQuotes46>Accumulated value is: %.2f<doubleQuotes46>,<newline46mondego>        futureInterestValue  + investmentAmount));<newline46mondego>"
"1879splitHere46","9454588splitHere46","double accumulatedValue = futureInterestValue  + investmentAmount;<newline46mondego> System.out.println(<newline46mondego>    String.format(<doubleQuotes46>Accumulated value is: %.2f<doubleQuotes46>, accumulatedValue);<newline46mondego>"
"1880splitHere46","9454629splitHere46","String s = <doubleQuotes46>Your_string-123.<doubleQuotes46>;<newline46mondego>Pattern p = Pattern.compile(<doubleQuotes46>([a-zA-Z]|[0-9]|\\.|\\-|_)+<doubleQuotes46>);<newline46mondego>Matcher m = p.matcher(s);<newline46mondego>if (m.matches()) {<newline46mondego>  System.out.println(true);<newline46mondego>}<newline46mondego>"
"1881splitHere46","9454778splitHere46","resizeCanvas"
"1882splitHere46","9454778splitHere46","mCanvas"
"1883splitHere46","9454856splitHere46","public class DateCompartor implements Comparator<BirthdayContact> {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public int compare(BirthdayContact arg0, BirthdayContact arg1) {<newline46mondego><newline46mondego>        Date now=new Date();    <newline46mondego>        // Read Sun's Java coding standards; these don't follow the standard.                         <newline46mondego>        Date bd1=arg0.GetBirthDay();  <newline46mondego>        Date bd2=arg1.GetBirthDay();<newline46mondego>        long dist1 = Math.abs(bd1.getTime() - now.getTime());<newline46mondego>        long dist2 = Math.abs(bd2.getTime() - now.getTime());<newline46mondego>        return dist1.compareTo(dist2); // Might need wrapper Long here.<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"1884splitHere46","9454965splitHere46","trait X[A] { def map[B](f: A => B): X[B] }<newline46mondego>"
"1885splitHere46","9454965splitHere46","X"
"1886splitHere46","9454965splitHere46","A"
"1887splitHere46","9454965splitHere46","map"
"1888splitHere46","9454965splitHere46","B"
"1889splitHere46","9454965splitHere46","map"
"1890splitHere46","9454965splitHere46","f"
"1891splitHere46","9454965splitHere46","A"
"1892splitHere46","9454965splitHere46","B"
"1893splitHere46","9454965splitHere46","map"
"1894splitHere46","9454965splitHere46","X"
"1895splitHere46","9454965splitHere46","B"
"1896splitHere46","9454965splitHere46","(1 to 10) map { x => x * 2 }<newline46mondego>"
"1897splitHere46","9454965splitHere46","X"
"1898splitHere46","9454965splitHere46","Range"
"1899splitHere46","9454965splitHere46","f: A => B"
"1900splitHere46","9454965splitHere46","x => x * 2"
"1901splitHere46","9454965splitHere46","Int"
"1902splitHere46","9454965splitHere46","Int"
"1903splitHere46","9454965splitHere46","Range"
"1904splitHere46","9454965splitHere46","Int"
"1905splitHere46","9454965splitHere46","IndexedSeq"
"1906splitHere46","9454965splitHere46","List(1, 2, 3).map(i => i + <doubleQuotes46>!<doubleQuotes46>) // a List[Int]<newline46mondego>// returns a List[String]: List(<doubleQuotes46>1!<doubleQuotes46>, <doubleQuotes46>2!<doubleQuotes46>, <doubleQuotes46>3!<doubleQuotes46>) <newline46mondego>"
"1907splitHere46","9455027splitHere46","com.javafx.main.Main"
"1908splitHere46","9455027splitHere46","SDK/rt/lib/jfxrt.jar"
"1909splitHere46","9455060splitHere46","OracleCallableStatement"
"1910splitHere46","9455060splitHere46","java.sql.CallableStatement"
"1911splitHere46","9455060splitHere46","CallableStatement"
"1912splitHere46","9455073splitHere46","null"
"1913splitHere46","9455073splitHere46","nullPrintStream()"
"1914splitHere46","9455073splitHere46","System.java"
"1915splitHere46","9455073splitHere46","null"
"1916splitHere46","9455073splitHere46","initializeSystemClass()"
"1917splitHere46","9455073splitHere46","native"
"1918splitHere46","9455073splitHere46","setOut0()"
"1919splitHere46","9455073splitHere46","out"
"1920splitHere46","9455073splitHere46","out"
"1921splitHere46","9455073splitHere46","System"
"1922splitHere46","9455073splitHere46","PrintStream"
"1923splitHere46","9455073splitHere46","out"
"1924splitHere46","9455073splitHere46","final"
"1925splitHere46","9455073splitHere46","out"
"1926splitHere46","9455073splitHere46","native"
"1927splitHere46","9455073splitHere46","setOut0()"
"1928splitHere46","9455091splitHere46","Integer.parseInt()"
"1929splitHere46","9455091splitHere46","trim()"
"1930splitHere46","9455091splitHere46","t = Integer.parseInt(line.trim());<newline46mondego>"
"1931splitHere46","9455097splitHere46","-version:<value>"
"1932splitHere46","9455097splitHere46","-?"
"1933splitHere46","9455097splitHere46","1"
"1934splitHere46","9455097splitHere46","java.exe"
"1935splitHere46","9455097splitHere46","java -version:1.5+ -version"
"1936splitHere46","9455097splitHere46","-?"
"1937splitHere46","9455097splitHere46","java -version:1.5+ your.stub.MainClass"
"1938splitHere46","9455311splitHere46","(a*b)%c == ((a%c) * (b%c)) % c<newline46mondego>"
"1939splitHere46","9455335splitHere46","ExecutorService executor = Executors.newCachedThreadPool();<newline46mondego><newline46mondego>Iterator<Long> i = getUserIDs();<newline46mondego>while (i.hasNext()) {<newline46mondego>    final Long l = i.next();<newline46mondego><newline46mondego>    Runnable task = new Runnable() {<newline46mondego>        public void run() {<newline46mondego>            someObject.doSomething(l);<newline46mondego>            anotheObject.doSomething(l);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    executor.submit(task);<newline46mondego>}<newline46mondego><newline46mondego>executor.shutdown();<newline46mondego>"
"1940splitHere46","9455335splitHere46","Executors"
"1941splitHere46","9455335splitHere46","Runnable"
"1942splitHere46","9455357splitHere46","Map"
"1943splitHere46","9455416splitHere46","class C {   <newline46mondego>    private:<newline46mondego>         static int c;  // Declaration of c.<newline46mondego>    public:<newline46mondego>         C(){ c++; }<newline46mondego>         static int getC () { return c; }<newline46mondego>};<newline46mondego>"
"1944splitHere46","9455416splitHere46",".cpp"
"1945splitHere46","9455416splitHere46","int C::c = 0;  // Definition of c.<newline46mondego>"
"1946splitHere46","9455520splitHere46","@javax.ejb.Local<newline46mondego>public interface LocalBusinessInterface {<newline46mondego>}<newline46mondego><newline46mondego>@javax.ejb.Remote<newline46mondego>public interface RemoteBusinessInterface {<newline46mondego>}<newline46mondego><newline46mondego>//@LocalBean is annotation that was introduced in EJB 3.1<newline46mondego>//according Javadoc it <doubleQuotes46>Designates that a session bean exposes a <newline46mondego>//no-interface view.<doubleQuotes46><newline46mondego>//When bean does not implement other interfaces, using @LocalBean<newline46mondego>//is redundant, because beans without any interfaces expose no-interface view<newline46mondego>//by default.<newline46mondego>@LocalBean<newline46mondego>@Stateless<newline46mondego>public class BeanImplementation <newline46mondego>    implements LocalBusinessInterface, RemoteBusinessInterface {<newline46mondego>}<newline46mondego>"
"1947splitHere46","9455620splitHere46","catch(JsonSyntaxException e)"
"1948splitHere46","9455620splitHere46","JsonSyntaxException"
"1949splitHere46","9455620splitHere46","try{<newline46mondego>    //do whatever<newline46mondego>}catch(JsonSyntaxException e){<newline46mondego>    e.printStackTrace();<newline46mondego>    // throw new Exception(e); //checked exception<newline46mondego>}catch(IOException e){<newline46mondego>    e.printStackTrace();<newline46mondego>}<newline46mondego>"
"1950splitHere46","9455778splitHere46","import org.apache.activemq.ActiveMQConnectionFactory"
"1951splitHere46","9455854splitHere46","someMethod()"
"1952splitHere46","9455854splitHere46","temp"
"1953splitHere46","9455915splitHere46","getClass()"
"1954splitHere46","9455915splitHere46","instanceof"
"1955splitHere46","9455915splitHere46","if (array[0] instanceof Integer) {<newline46mondego>}<newline46mondego>"
"1956splitHere46","9456028splitHere46","F4"
"1957splitHere46","9456148splitHere46","this"
"1958splitHere46","9456148splitHere46","Options"
"1959splitHere46","9456148splitHere46","decodeFile"
"1960splitHere46","9456148splitHere46","inMutable"
"1961splitHere46","9456305splitHere46","import java.io.*;<newline46mondego>import java.net.*;<newline46mondego><newline46mondego>public class SocketTest {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        String hostName;<newline46mondego>        int i = 0;<newline46mondego>        try {<newline46mondego>            Socket socketClient = new Socket(<doubleQuotes46>whois.internic.net<doubleQuotes46>, 43);<newline46mondego>            BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));<newline46mondego><newline46mondego>            OutputStream out = socketClient.getOutputStream();<newline46mondego>            System.out.println(<doubleQuotes46>Please Enter the Host Name!!<doubleQuotes46>);<newline46mondego>            hostName = bf.readLine();<newline46mondego>            hostName = hostName + <doubleQuotes46>\n<doubleQuotes46>;<newline46mondego>            byte[] buf = hostName.getBytes();<newline46mondego>            out.write(buf);<newline46mondego><newline46mondego>            InputStream in = socketClient.getInputStream();<newline46mondego>            while ((i = in.read()) != -1) {<newline46mondego>                System.out.print((char) i);<newline46mondego>            }<newline46mondego>            in.close();<newline46mondego>            out.close();<newline46mondego>            socketClient.close();<newline46mondego><newline46mondego>        } catch (UnknownHostException uht) {<newline46mondego>            System.out.println(<doubleQuotes46>Host Error<doubleQuotes46>);<newline46mondego>        } catch (IOException ioe) {<newline46mondego>            System.out.println(<doubleQuotes46>IO Error <doubleQuotes46> + ioe);<newline46mondego>        } catch (Exception e) {<newline46mondego>            System.out.println(<doubleQuotes46>Exception <doubleQuotes46> + e);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1962splitHere46","9456305splitHere46","Please Enter the Host Name!!<newline46mondego>yahoo.com<newline46mondego><newline46mondego>Whois Server Version 2.0<newline46mondego><newline46mondego>Domain names in the .com and .net domains can now be registered<newline46mondego>with many different competing registrars. Go to http://www.internic.net<newline46mondego>for detailed information.<newline46mondego><newline46mondego>YAHOO.COM.ZZZZZZZ.GET.ONE.MILLION.DOLLARS.AT.WWW.UNIMUNDI.COM<newline46mondego>YAHOO.COM.ZZZZZZ.MORE.INFO.AT.WWW.BEYONDWHOIS.COM<newline46mondego>....Whole bunch more<newline46mondego>"
"1963splitHere46","9456326splitHere46","class MyResults {<newline46mondego>    public final short a;<newline46mondego>    public final int   b;<newline46mondego>    public MyResults(short a, int b) { this.a = a; this.b = b; }<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>MyResults myMethod() {<newline46mondego>    ...<newline46mondego>    return new MyResults(42, 666);<newline46mondego>}<newline46mondego>"
"1964splitHere46","9456344splitHere46","private javax.swing.JTextField jTextField;<newline46mondego><newline46mondego>String text = jTextField.getText();<newline46mondego>int counter = text.length();<newline46mondego>"
"1965splitHere46","9456344splitHere46","getText()"
"1966splitHere46","9456441splitHere46","x"
"1967splitHere46","9456441splitHere46","<sql:query var=<doubleQuotes46>result<doubleQuotes46> sql=<doubleQuotes46>SELECT * FROM Customer WHERE customer_number = $x /><newline46mondego>"
"1968splitHere46","9456462splitHere46","byte[]"
"1969splitHere46","9456462splitHere46","byte[]"
"1970splitHere46","9456462splitHere46","read()"
"1971splitHere46","9456462splitHere46","Collection.toArray(T[])"
"1972splitHere46","9456842splitHere46","Runnable"
"1973splitHere46","9456922splitHere46","public class SaveLoad { // or whatever its called<newline46mondego>  private GUI gui;  // give it a GUI variable <newline46mondego><newline46mondego>  public SaveLoad(GUI gui) {<newline46mondego>    this.gui = gui;  load in the current GUI into save load<newline46mondego>    // ... other code ...<newline46mondego>  }<newline46mondego><newline46mondego>  public void load() {<newline46mondego>    // get the colors<newline46mondego>    gui.loadColors(...); // method called on the visualized GUI.<newline46mondego>"
"1974splitHere46","9456922splitHere46","public void actionPerformed(ActionEvent evt) {<newline46mondego>  // inside some event listener<newline46mondego>  SaveLoad saveload = new SaveLoad(GUI.this);  <newline46mondego><newline46mondego>  // or just this if not in an inner class then just use this<newline46mondego>  // SaveLoad saveload = new SaveLoad(this);  <newline46mondego>  // .....<newline46mondego>}<newline46mondego>"
"1975splitHere46","9457045splitHere46","bigList"
"1976splitHere46","9457045splitHere46","ArrayList<ArrayList<? extends A>>"
"1977splitHere46","9457061splitHere46","4/5"
"1978splitHere46","9457061splitHere46","4/5"
"1979splitHere46","9457061splitHere46","0"
"1980splitHere46","9457061splitHere46","log(0)"
"1981splitHere46","9457061splitHere46","NaN"
"1982splitHere46","9457061splitHere46","double x = (double)4 / 5;<newline46mondego>"
"1983splitHere46","9457072splitHere46","StringBuilder key = new StringBuilder(9);<newline46mondego>while(key.length() < 9)<newline46mondego>    key.append(keyset.charAt(rnd.nextInt(keyset.length() - 1)));<newline46mondego>return key.toString();<newline46mondego>"
"1984splitHere46","9457100splitHere46","Socket.setReceiveBufferSize<newline46mondego>"
"1985splitHere46","9457105splitHere46","<Enter>"
"1986splitHere46","9457145splitHere46","setEnabledAt()"
"1987splitHere46","9457145splitHere46","pane.setEnabledAt(0, false);<newline46mondego>"
"1988splitHere46","9457196splitHere46","gcMediaPlayerControl"
"1989splitHere46","9457196splitHere46","border.setBottom(gcMediaPlayerControl);<newline46mondego>"
"1990splitHere46","9457196splitHere46","setMediaControl"
"1991splitHere46","9457196splitHere46","private void setMediaControl(MediaPlayer mp3Player)<newline46mondego>{<newline46mondego>    System.out.println(<doubleQuotes46>Setting Media Viewer<doubleQuotes46>);<newline46mondego>    gcMediaPlayerControl = new MediaControl(mp3Player);<newline46mondego>}<newline46mondego>"
"1992splitHere46","9457196splitHere46","private void setMediaControl(MediaPlayer mp3Player)<newline46mondego>{<newline46mondego>    System.out.println(<doubleQuotes46>Setting Media Viewer<doubleQuotes46>);<newline46mondego>    gcMediaPlayerControl = new MediaControl(mp3Player);<newline46mondego>    border.setBottom(gcMediaPlayerControl);<newline46mondego>}<newline46mondego>"
"1993splitHere46","9457213splitHere46","public class Car<newline46mondego>{<newline46mondego>    private Engine      e;<newline46mondego>    private int         numWheels;<newline46mondego>    private List<Wheel> wheels;<newline46mondego><newline46mondego>    public Car(Engine e, int numWheels, ...)<newline46mondego>    {<newline46mondego>       this.e         = e;<newline46mondego>       this.numWheels = numWheels;<newline46mondego>       this.wheels    = new ArrayList<>();<newline46mondego><newline46mondego>       for(int i = 0; i < this.numWheels; i++)<newline46mondego>       {<newline46mondego>           this.wheels.add(new Wheel(...));<newline46mondego>       }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1994splitHere46","9457286splitHere46","org.osgi.framework"
"1995splitHere46","9457286splitHere46","context.getBundles()"
"1996splitHere46","9457286splitHere46","<bean class=<doubleQuotes46>SomeClass<doubleQuotes46>><newline46mondego>    <property name=<doubleQuotes46>context<doubleQuotes46> ref=<doubleQuotes46>blueprintBundleContext<doubleQuotes46>/><newline46mondego></bean><newline46mondego>"
"1997splitHere46","9457286splitHere46","ss"
"1998splitHere46","9457286splitHere46","bundle:list"
"1999splitHere46","9457428splitHere46","EXPR >> EXPR<newline46mondego>"
"2000splitHere46","9457428splitHere46","List<List<string >> id;<newline46mondego>"
"2001splitHere46","9457478splitHere46","<application<newline46mondego>    android:icon=<doubleQuotes46>@drawable/ic_launcher<doubleQuotes46><newline46mondego>    android:label=<doubleQuotes46>@string/app_name<doubleQuotes46> ><newline46mondego>    <activity<newline46mondego>        android:theme=<doubleQuotes46>@android:style/Theme.Holo.NoActionBar<doubleQuotes46><newline46mondego>        android:name=<doubleQuotes46>.Polling<doubleQuotes46><newline46mondego>        android:label=<doubleQuotes46>@string/app_name<doubleQuotes46> ><newline46mondego>        <intent-filter><newline46mondego>            <action android:name=<doubleQuotes46>android.intent.action.MAIN<doubleQuotes46> /><newline46mondego><newline46mondego>            <category android:name=<doubleQuotes46>android.intent.category.LAUNCHER<doubleQuotes46> /><newline46mondego>        </intent-filter><newline46mondego>    </activity><newline46mondego>    <activity <newline46mondego>"
"2002splitHere46","9457538splitHere46","Point"
"2003splitHere46","9457538splitHere46","x"
"2004splitHere46","9457538splitHere46","y"
"2005splitHere46","9457538splitHere46","Point[] points = new Points[]{ //Your Points }<newline46mondego>List<Point> chunkedPoints = new ArrayList<Point>();<newline46mondego>"
"2006splitHere46","9457538splitHere46","for(int i = 0; i < points.length-1; i++) { //Skip the last element<newline46mondego>    //chunking here<newline46mondego>}<newline46mondego>chunkedPoints.add(points[points.length-1]); //Add the last element<newline46mondego>"
"2007splitHere46","9457538splitHere46","double dx = point[i].x - point[i+1].x;<newline46mondego>double dy = point[i].y - point[i+1].y;<newline46mondego>"
"2008splitHere46","9457538splitHere46","double ux = dx/distance;<newline46mondego>double uy = dy/distance;<newline46mondego>"
"2009splitHere46","9457538splitHere46","CHUNK_SIZE"
"2010splitHere46","9457538splitHere46","double nx = point[i].x + ux*CHUNK_SIZE;<newline46mondego>double ny = point[i].y + uy*CHUNK_SIZE;<newline46mondego>"
"2011splitHere46","9457538splitHere46","nx"
"2012splitHere46","9457538splitHere46","ny"
"2013splitHere46","9457538splitHere46","double nx = point[i].x;<newline46mondego>double ny = point[i].y;<newline46mondego>for(<newline46mondego>    //This part can be tidier<newline46mondego>    int count = 0;<newline46mondego>    count < CHUNK_SIZE && nx+ux != points[i+1].x && ny+uy != points[i+1].y;<newline46mondego>    count++<newline46mondego>) {<newline46mondego>    nx += ux;<newline46mondego>    ny += uy;<newline46mondego>}<newline46mondego>Point newPoint = new Point(nx, ny);<newline46mondego>"
"2014splitHere46","9457538splitHere46","chunkedPoints.add(points[0]);<newline46mondego>for(int i = 0; i < points.length-1; i++) { //Skip the last element<newline46mondego>    Point newPoint;<newline46mondego>    do {<newline46mondego>        //chunking<newline46mondego>        newPoint = new Point(nx, ny);<newline46mondego>        chunkedPoints.add(newPoint);<newline46mondego>    } while(!newPoint.equals(points[i+1]));<newline46mondego>}<newline46mondego>chunkedPoints.add(points[points.length-1]); //Add the last element<newline46mondego>"
"2015splitHere46","9457588splitHere46","cURL"
"2016splitHere46","9457763splitHere46","long"
"2017splitHere46","9457763splitHere46","(int)"
"2018splitHere46","9457763splitHere46","long"
"2019splitHere46","9457763splitHere46","int"
"2020splitHere46","9457763splitHere46","int"
"2021splitHere46","9457763splitHere46","(int 10)"
"2022splitHere46","9457763splitHere46","int"
"2023splitHere46","9457763splitHere46","int"
"2024splitHere46","9457763splitHere46","long"
"2025splitHere46","9457763splitHere46","(type)"
"2026splitHere46","9457763splitHere46","(class)"
"2027splitHere46","9457763splitHere46","long"
"2028splitHere46","9457763splitHere46","java.lang.Long"
"2029splitHere46","9457763splitHere46","java.lang.Integer"
"2030splitHere46","9457763splitHere46","java.lang.Integer"
"2031splitHere46","9457763splitHere46","user> (type (Integer. 10))<newline46mondego>java.lang.Integer<newline46mondego><newline46mondego>user> (type (Integer/valueOf 10))<newline46mondego>java.lang.Integer<newline46mondego><newline46mondego>user> (type (Integer/decode <doubleQuotes46>10<doubleQuotes46>))<newline46mondego>java.lang.Integer<newline46mondego><newline46mondego>...<newline46mondego>"
"2032splitHere46","9457763splitHere46","(num)"
"2033splitHere46","9457763splitHere46","java.lang.Number"
"2034splitHere46","9457763splitHere46","(type)"
"2035splitHere46","9457763splitHere46","java.lang.Long"
"2036splitHere46","9457994splitHere46","(int)BGCD"
"2037splitHere46","9457997splitHere46","/**<newline46mondego> * Returns the sorted EXOR of two sorted int arrays (descending). Uses<newline46mondego> * arrays, index management, and System.arraycopy.<newline46mondego> * @author paislee<newline46mondego> */<newline46mondego>int[] arrExor(int[] a1, int[] a2) {<newline46mondego><newline46mondego>    // eventual result, intermediate (oversized) result<newline46mondego>    int[] exor, exor_builder = new int[a1.length + a2.length];<newline46mondego>    int exor_i = 0; // the growing size of exor set<newline46mondego><newline46mondego>    int a1_i = 0, a2_i = 0; // input indices<newline46mondego>    int a1_curr, a2_curr; // elements we're comparing<newline46mondego><newline46mondego>    // chew both input arrays, greedily populating exor_builder<newline46mondego>    while (a1_i < a1.length && a2_i < a2.length) {<newline46mondego><newline46mondego>        a1_curr = a1[a1_i];<newline46mondego>        a2_curr = a2[a2_i];<newline46mondego><newline46mondego>        if (a1_curr != a2_curr) {<newline46mondego>            if (a1_curr > a2_curr)<newline46mondego>                exor_builder[exor_i++] = a1[a1_i++];<newline46mondego>            else<newline46mondego>                exor_builder[exor_i++] = a2[a2_i++];<newline46mondego>        } else {<newline46mondego>            a1_i++;<newline46mondego>            a2_i++;<newline46mondego>        }        <newline46mondego>    }<newline46mondego><newline46mondego>    // copy remainder into exor_builder<newline46mondego>    int[] left = null; // alias for the unfinished input<newline46mondego>    int left_i = 0, left_sz = 0; // index alias, # elements left<newline46mondego><newline46mondego>    if (a1_i < a1.length) {<newline46mondego>        left = a1;<newline46mondego>        left_i = a1_i;<newline46mondego>    } else {<newline46mondego>        left = a2;<newline46mondego>        left_i = a2_i;<newline46mondego>    }<newline46mondego><newline46mondego>    left_sz = left.length - left_i;<newline46mondego>    System.arraycopy(left, left_i, exor_builder, exor_i, left_sz);<newline46mondego>    exor_i += left_sz;<newline46mondego><newline46mondego>    // shrinkwrap and deliver<newline46mondego>    exor = new int[exor_i];<newline46mondego>    System.arraycopy(exor_builder, 0, exor, 0, exor_i);<newline46mondego>    return exor;<newline46mondego>}<newline46mondego>"
"2038splitHere46","9458051splitHere46","()"
"2039splitHere46","9458051splitHere46","toDegrees()"
"2040splitHere46","9458051splitHere46","Math.toDegrees((Math.atan2(y, x))+360)%360;<newline46mondego>"
"2041splitHere46","9458051splitHere46","(Math.toDegrees(Math.atan2(y, x))+360)%360;<newline46mondego>"
"2042splitHere46","9458267splitHere46","Stopwatch"
"2043splitHere46","9458267splitHere46","System.nanoTime()"
"2044splitHere46","9458267splitHere46","System.currentTimeMillis()"
"2045splitHere46","9458267splitHere46","System.currentTimeMillis()"
"2046splitHere46","9458267splitHere46","System.nanoTime()"
"2047splitHere46","9458267splitHere46","long timeA = System.currentTimeMillis();<newline46mondego>doStuff();<newline46mondego>long timeB = System.currentTimeMillis();<newline46mondego>System.out.println(<doubleQuotes46>Elapsed time: <doubleQuotes46> + (timeB - timeA));<newline46mondego>"
"2048splitHere46","9458267splitHere46","doStuff()"
"2049splitHere46","9458267splitHere46","System.nanoTime()"
"2050splitHere46","9458267splitHere46","System.nanoTime()"
"2051splitHere46","9458267splitHere46","System.currentMilliseconds()"
"2052splitHere46","9458274splitHere46","public class MyClass extends Activity{<newline46mondego><newline46mondego><newline46mondego>private class myTask extends AsyncTask<Void,Void,Void>{<newline46mondego>//initiate vars<newline46mondego>public myTask() {<newline46mondego>super();<newline46mondego><newline46mondego>//my params here<newline46mondego>      }<newline46mondego>  protected Void doInBackground(Void... params) {<newline46mondego><newline46mondego>        //do stuff<newline46mondego>         return null;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void onPostExecute(Void result) {<newline46mondego>        //do stuff<newline46mondego>                myMethod(myValue);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>  private myHandledValueType myMethod(Value myValue){<newline46mondego>     //handle value <newline46mondego>       return myHandledValueType; <newline46mondego>     }<newline46mondego>}<newline46mondego>"
"2053splitHere46","9458460splitHere46","String s = <doubleQuotes46>Hello stack over flow<doubleQuotes46>;<newline46mondego>    List< String > words = Arrays.asList( s.split( <doubleQuotes46> <doubleQuotes46> ) );<newline46mondego>    Collections.reverse( words );<newline46mondego>    String reversed = words.get( 0 );<newline46mondego>    for ( int i = 1; i < words.size(); ++i ) {<newline46mondego>        reversed += <doubleQuotes46> <doubleQuotes46> + words.get( i );<newline46mondego>    }<newline46mondego>"
"2054splitHere46","9458564splitHere46","public void valueChanged(ListSelectionEvent e) {<newline46mondego>    if (e.getSource() == jTable1.getSelectionModel()) {<newline46mondego>      System.out.println(<doubleQuotes46>Event occurred in table 1<doubleQuotes46>);<newline46mondego>    } else if (e.getSource() == jTable2.getSelectionModel()) {<newline46mondego>      System.out.println(<doubleQuotes46>Event occurred in for table 2<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2055splitHere46","9458726splitHere46","set path=C:\Program Files\Java\jdk1.6.0\bin;<newline46mondego>"
"2056splitHere46","9458844splitHere46","lectura = String.valueOf( (char) (fr.read()) );<newline46mondego>"
"2057splitHere46","9458930splitHere46","String formattedValue = Double.toString(value).concat(<doubleQuotes46>0<doubleQuotes46>);<newline46mondego>"
"2058splitHere46","9458965splitHere46","DataSet"
"2059splitHere46","9458965splitHere46","Comparable"
"2060splitHere46","9458965splitHere46","Object"
"2061splitHere46","9458965splitHere46","Object"
"2062splitHere46","9458965splitHere46","Comparable"
"2063splitHere46","9458965splitHere46","public int compareTo(Object anObject) <newline46mondego>{<newline46mondego>    // Yeah, never stop loopin'!<newline46mondego>    return this.compareTo(anObject);<newline46mondego>}<newline46mondego>"
"2064splitHere46","9458965splitHere46","Comparable<T>"
"2065splitHere46","9458965splitHere46","public class DataSet implements Comparable<DataSet>  <newline46mondego>{  <newline46mondego> private String maximum;  <newline46mondego> private String least;  <newline46mondego> private int count;  <newline46mondego> private int answer;  <newline46mondego><newline46mondego> public void add(String x)  <newline46mondego> {  <newline46mondego><newline46mondego>   if(count == 0){  <newline46mondego>     least = x;  <newline46mondego>     maximum = x;  <newline46mondego>   }  <newline46mondego>   else if(least.compareTo(x) > 0)  <newline46mondego>     least = x;  <newline46mondego>   else if(maximum.compareTo(x) < 0)  <newline46mondego>    maximum = x;  <newline46mondego>   count++;  <newline46mondego> }  <newline46mondego><newline46mondego> public int compareTo(DataSet anObject)  <newline46mondego> {  <newline46mondego>     // I don't really know how you want this to work.<newline46mondego>     // Come up with your own criteria on what makes a DataSet greater or less than<newline46mondego>     // another one.<newline46mondego>     count - anObject.count<newline46mondego> }  <newline46mondego><newline46mondego> // Good practice to include this if you're doing a compareTo.<newline46mondego> @Override<newline46mondego> public boolean equals(Object other)<newline46mondego> {<newline46mondego>     return (other instanceof DataSet) && compareTo((DataSet)other) == 0;<newline46mondego> }<newline46mondego><newline46mondego> public String getMaximum()  <newline46mondego> {  <newline46mondego>  return maximum;  <newline46mondego> }  <newline46mondego><newline46mondego> public String getLeast()  <newline46mondego> {  <newline46mondego>   return least;  <newline46mondego> }  <newline46mondego>}  <newline46mondego>"
"2066splitHere46","9458965splitHere46","DataSet"
"2067splitHere46","9458965splitHere46","Comparable"
"2068splitHere46","9459132splitHere46","aspect LogAllMethods {<newline46mondego>  Log log = new Log(); // pseudocode -- replace with whatever logging mechanism you like<newline46mondego><newline46mondego>  before(): call(public * com.mycompany.*.*(..)) {<newline46mondego>    log.log(<doubleQuotes46>Entered method: <doubleQuotes46> + thisJoinPoint);<newline46mondego>  }<newline46mondego><newline46mondego>  after(): call(public * com.mycomapny.*.*(..)) { <newline46mondego>    log.log(<doubleQuotes46>Leaving method: <doubleQuotes46> + thisJoinPoint);<newline46mondego>  }<newline46mondego>} <newline46mondego>"
"2069splitHere46","9459132splitHere46","com.mycompany"
"2070splitHere46","9459132splitHere46","thisJoinPoint"
"2071splitHere46","9459147splitHere46","<...>"
"2072splitHere46","9459147splitHere46","static class Video {<newline46mondego>    String vidID;<newline46mondego>    String name;<newline46mondego>    String writer;<newline46mondego><newline46mondego>    @Override<newline46mondego>    public String toString() {<newline46mondego>        return writer; // For JList display<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2073splitHere46","9459147splitHere46","List<Video> list = VideoData.getVideoList();<newline46mondego><newline46mondego>JList videolist = new JList();<newline46mondego><newline46mondego>Vector<Video> data = new Vector<Video>();  <newline46mondego>for (int i=0; i < list.size(); i++) {<newline46mondego>    Video video = list.get(i);<newline46mondego>    data.addElement(video);<newline46mondego>}<newline46mondego><newline46mondego>videolist.setListData(data);<newline46mondego>videolist.setSelectedIndex(0);<newline46mondego>videolist.addMouseListener(new ActionJList(videolist));<newline46mondego>videolist.setFixedCellWidth(300);<newline46mondego>add(new JScrollPane(videolist));<newline46mondego>"
"2074splitHere46","9459147splitHere46","List<Video> getVideoList() {<newline46mondego>List<Video> list = new ArrayList<Video>();<newline46mondego><newline46mondego>try {<newline46mondego>    ResultSet res = stmt.executeQuery(<doubleQuotes46>SELECT VidID, Name, Writer FROM Items ORDER BY VidID ASC<doubleQuotes46>);<newline46mondego>    while (res.next()) { // there is a result<newline46mondego>        Video sub = new Video();<newline46mondego>        sub.vidID = res.getString(<doubleQuotes46>VidID<doubleQuotes46>);<newline46mondego>        sub.name = res.getString(<doubleQuotes46>Name<doubleQuotes46>);<newline46mondego>        sub.writer = res.getString(<doubleQuotes46>Writer<doubleQuotes46>);<newline46mondego>        list.add(sub); <newline46mondego>    }<newline46mondego>        res.close();<newline46mondego>} catch (Exception e) {<newline46mondego>    System.out.println(e);<newline46mondego>    return null;<newline46mondego>}<newline46mondego><newline46mondego>return list;<newline46mondego>}<newline46mondego>"
"2075splitHere46","9459292splitHere46","service chatserver stop<newline46mondego>"
"2076splitHere46","9459292splitHere46","public class ChatServerThread implements Runnable {<newline46mondego><newline46mondego>    .......<newline46mondego><newline46mondego>    public void run() {<newline46mondego>        try {<newline46mondego>            handleClient();<newline46mondego>        } catch( EOFException eof ) {<newline46mondego>            System.out.println(<doubleQuotes46>Client closed the connection.<doubleQuotes46>);<newline46mondego>        } catch( IOException ioe ) {<newline46mondego>            ioe.printStacktrace();<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public void handleClient() throws IOException {<newline46mondego>       boolean done = false;<newline46mondego>       try {<newline46mondego>          while(!done) {  <newline46mondego>             String nextCommand = streamIn.readUTF();<newline46mondego>             if( nextCommand.equals(<doubleQuotes46>.bye<doubleQuotes46>) ) {<newline46mondego>                done = true;<newline46mondego>             } else {<newline46mondego>                System.out.println( nextCommand );<newline46mondego>             }<newline46mondego>          }<newline46mondego>       } finally {<newline46mondego>          streamIn.close();<newline46mondego>          streamOut.close();<newline46mondego>          socket.close();<newline46mondego>       }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2077splitHere46","9459320splitHere46","Long sum = 0L"
"2078splitHere46","9459320splitHere46","sum += num; <newline46mondego>"
"2079splitHere46","9459320splitHere46","sum = sum + num;"
"2080splitHere46","9459320splitHere46","num"
"2081splitHere46","9459320splitHere46","null"
"2082splitHere46","9459360splitHere46","(Ljava/lang/Long;)V"
"2083splitHere46","9459360splitHere46","Long"
"2084splitHere46","9459360splitHere46","void"
"2085splitHere46","9459360splitHere46","delete"
"2086splitHere46","9459360splitHere46","public"
"2087splitHere46","9459360splitHere46","listAll"
"2088splitHere46","9459642splitHere46","String url = <doubleQuotes46>http://localhost:8084/j2metest/getText<doubleQuotes46>;"
"2089splitHere46","9459658splitHere46","f1(f2(x)"
"2090splitHere46","9459658splitHere46",")"
"2091splitHere46","9459658splitHere46",","
"2092splitHere46","9459692splitHere46","logging.properties"
"2093splitHere46","9459692splitHere46","System.out.println(getClass().getClassLoader().getResource(<doubleQuotes46>logging.properties<doubleQuotes46>));<newline46mondego>"
"2094splitHere46","9459692splitHere46","static"
"2095splitHere46","9459692splitHere46","System.out.println(ClassName.class.getClassLoader().getResource(<doubleQuotes46>logging.properties<doubleQuotes46>));<newline46mondego>"
"2096splitHere46","9459785splitHere46","try{<newline46mondego> int sum = Integer.parseInt(request.getParameter(<doubleQuotes46>sum<doubleQuotes46>));<newline46mondego> }<newline46mondego> catch(Exception e)<newline46mondego> {<newline46mondego>  //how do you want to handle it? like ask the user to re-enter the values<newline46mondego> }<newline46mondego>"
"2097splitHere46","9459866splitHere46","new Configuration().configure(<your cfg file path>).buildSessionFactory();<newline46mondego>"
"2098splitHere46","9459886splitHere46","System.out"
"2099splitHere46","9459886splitHere46","PrintStream#println(String)"
"2100splitHere46","9459886splitHere46","println"
"2101splitHere46","9459886splitHere46","printf"
"2102splitHere46","9459886splitHere46","ABC\n"
"2103splitHere46","9459886splitHere46","ABC\n"
"2104splitHere46","9459886splitHere46","public void safePrintln(String s) {<newline46mondego>  synchronized (System.out) {<newline46mondego>    System.out.println(s);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"2105splitHere46","9459995splitHere46","Map.remove"
"2106splitHere46","9460081splitHere46","SELECT TO_DATE(<doubleQuotes46>COLNAME<doubleQuotes46>, 'MM/DD/YYYY') FROM <doubleQuotes46>MYTABLE<doubleQuotes46><newline46mondego>"
"2107splitHere46","9460081splitHere46","String date_from_db;<newline46mondego>SimpleDateFormat sdf = new SimpleDateFormat(<doubleQuotes46>MM/dd/yyyy<doubleQuotes46>);<newline46mondego>Date date = sdf.parse(date_from_db);<newline46mondego>"
"2108splitHere46","9460081splitHere46","new Date()"
"2109splitHere46","9460081splitHere46","Calendar"
"2110splitHere46","9460081splitHere46","Date"
"2111splitHere46","9460081splitHere46","Calendar"
"2112splitHere46","9460081splitHere46","Calendar"
"2113splitHere46","9460081splitHere46","equals()"
"2114splitHere46","9460081splitHere46","Calendar"
"2115splitHere46","9460081splitHere46","getTime()"
"2116splitHere46","9460081splitHere46","Date"
"2117splitHere46","9460081splitHere46","equals()"
"2118splitHere46","9460081splitHere46","after()"
"2119splitHere46","9460081splitHere46","before()"
"2120splitHere46","9460081splitHere46","cal.add(Calendar.DAY, -1);<newline46mondego>if(cal.getTime().equals(new Date())) { ... }<newline46mondego>"
"2121splitHere46","9460081splitHere46","Calendar"
"2122splitHere46","9460081splitHere46","setTime()"
"2123splitHere46","9460287splitHere46","void ReverseTree(Node root){<newline46mondego>    Node tmp = root.Left;<newline46mondego>    root.Left = root.Right;<newline46mondego>    root.Right = tmp;<newline46mondego><newline46mondego>    if(root.Left != null) ReverseTree(root.Left);<newline46mondego>    if(root.Right != null) ReverseTree(root.Right);<newline46mondego>}<newline46mondego>"
"2124splitHere46","9460428splitHere46","nohup"
"2125splitHere46","9460428splitHere46","$ cat Foo.java <newline46mondego>public class Foo {<newline46mondego>    public static void main(String[] args) throws InterruptedException<newline46mondego>    {<newline46mondego>        for(int i = 0 ; i < 1000 ; i++)<newline46mondego>        {<newline46mondego>            System.out.println(i);<newline46mondego>            Thread.sleep(1000);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>$ javac Foo.java<newline46mondego>$ nohup java Foo > foo.txt &<newline46mondego>[3] 29542<newline46mondego>$ cat foo.txt <newline46mondego>0<newline46mondego>1<newline46mondego>2<newline46mondego>3<newline46mondego>4<newline46mondego>5<newline46mondego>$ exit<newline46mondego>"
"2126splitHere46","9460428splitHere46","$ cat foo.txt <newline46mondego>0<newline46mondego>1<newline46mondego>...<newline46mondego>29<newline46mondego>30<newline46mondego>"
"2127splitHere46","9460428splitHere46","screen"
"2128splitHere46","9460428splitHere46","screen"
"2129splitHere46","9460428splitHere46","screen"
"2130splitHere46","9460428splitHere46","screen /bin/bash -c 'java Foo > foo.txt'<newline46mondego>"
"2131splitHere46","9460545splitHere46","<ui:repeat>"
"2132splitHere46","9460545splitHere46","<table><newline46mondego>    <ui:repeat value=<doubleQuotes46>#{bean.rows}<doubleQuotes46> var=<doubleQuotes46>row<doubleQuotes46>><newline46mondego>        <tr><newline46mondego>            <ui:repeat value=<doubleQuotes46>#{row}<doubleQuotes46> var=<doubleQuotes46>column<doubleQuotes46>><newline46mondego>                <td>#{column}</td><newline46mondego>            </ui:repeat><newline46mondego>        </tr><newline46mondego>    </ui:repeat><newline46mondego></table><newline46mondego>"
"2133splitHere46","9460545splitHere46","<x:columns>"
"2134splitHere46","9460545splitHere46","<p:columns>"
"2135splitHere46","9460545splitHere46","<t:columns>"
"2136splitHere46","9460545splitHere46","<p:dataTable value=<doubleQuotes46>#{bean.rows}<doubleQuotes46> var=<doubleQuotes46>row<doubleQuotes46>><newline46mondego>    <p:columns value=<doubleQuotes46>#{row}<doubleQuotes46> var=<doubleQuotes46>column<doubleQuotes46>><newline46mondego>        #{column}<newline46mondego>    </p:columns><newline46mondego></p:dataTable><newline46mondego>"
"2137splitHere46","9460573splitHere46","public class Point {<newline46mondego>  public int x;<newline46mondego>  public int y;<newline46mondego>  public Point(int ax, int ay){<newline46mondego>   this.setXY(ax, ay);<newline46mondego>  }<newline46mondego>  public void setXY(int ax, int ay){]<newline46mondego>    x = ax;<newline46mondego>    y = ay;<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"2138splitHere46","9460597splitHere46","public void run() { <newline46mondego>    for (int i = 1; i <= 1000; i++) {<newline46mondego>      synchronized(count){ <newline46mondego>        count.setCount(count.getCount() + 1); <newline46mondego>      }<newline46mondego>    } <newline46mondego>} <newline46mondego>"
"2139splitHere46","9460846splitHere46","String.replaceFirst()"
"2140splitHere46","9460846splitHere46","String.replaceAll()"
"2141splitHere46","9460846splitHere46","String"
"2142splitHere46","9460846splitHere46","String"
"2143splitHere46","9460846splitHere46","JTextComponent"
"2144splitHere46","9460846splitHere46","getText()"
"2145splitHere46","9460846splitHere46","setText()"
"2146splitHere46","9460881splitHere46","double devide=2.0<newline46mondego>    devide = Integer.parseInt(request.getParameter(<doubleQuotes46>b<doubleQuotes46>))*3+devide<newline46mondego><newline46mondego>    c=7800.0/(12*devide);<newline46mondego>    d=2640.0/(12*devide);<newline46mondego>"
"2147splitHere46","9461028splitHere46","import org.joda.time.DateTime;<newline46mondego>    import org.joda.time.Months;<newline46mondego>    ....<newline46mondego>    ....<newline46mondego>    DateTime now = new DateTime();<newline46mondego>    DateTime then = new DateTime().withDate(2011, 8, 1);<newline46mondego>    if(Math.abs(Months.monthsBetween(now, then).getMonths()) > 6){<newline46mondego>        System.out.println(<doubleQuotes46>6 mo apart!<doubleQuotes46>);<newline46mondego>        //your logic goes here<newline46mondego>    }<newline46mondego>"
"2148splitHere46","9461049splitHere46","Map<String,Properties> yourMap = new HashMap<String,Properties>();  <newline46mondego>"
"2149splitHere46","9461181splitHere46","-Dexec.mainClass=<doubleQuotes46>location_of_class_file<doubleQuotes46>"
"2150splitHere46","9461181splitHere46","<filename>.sh"
"2151splitHere46","9461181splitHere46","<filename>.sh"
"2152splitHere46","9461181splitHere46","touch"
"2153splitHere46","9461181splitHere46","chmod"
"2154splitHere46","9461204splitHere46","urlString.contains(<doubleQuotes46>/DIG/<doubleQuotes46>)"
"2155splitHere46","9461212splitHere46","List"
"2156splitHere46","9461212splitHere46","shuffle"
"2157splitHere46","9461212splitHere46","List"
"2158splitHere46","9461212splitHere46","List<Integer> list = new ArrayList<Integer>(24);<newline46mondego><newline46mondego>for (int type = 1; type <= 12; type++) {<newline46mondego>  //Add each type twice<newline46mondego>  list.add(type);<newline46mondego>  list.add(type);<newline46mondego>}<newline46mondego><newline46mondego>Collections.shuffle(list);<newline46mondego>int[][] board = new int[4][6];<newline46mondego><newline46mondego>for (int row = 0; row < 4; row++) {<newline46mondego>  for (int column = 0; column < 6; column++) {<newline46mondego>    int type = list.get(row + column * 4);<newline46mondego>    board[row][column] = new Cell(this, type, row, column);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"2159splitHere46","9461212splitHere46","Iterator<Integer> i = list.iterator();<newline46mondego><newline46mondego>for (int row = 0; row < 4; row++) {<newline46mondego>  for (int column = 0; column < 6; column++) {<newline46mondego>    int type = i.next();<newline46mondego>    board[row][column] = new Cell(this, type, row, column);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"2160splitHere46","9461247splitHere46","threadReceive"
"2161splitHere46","9461247splitHere46","threadReceive"
"2162splitHere46","9461247splitHere46","public class ThreadTest<newline46mondego>{<newline46mondego>    public static void main(String[] args)<newline46mondego>    {<newline46mondego>        for(int i = 0; i < 10; i++)<newline46mondego>        {<newline46mondego>            Thread thread = new Thread(new Runnable()<newline46mondego>                {                   <newline46mondego>                    public void run()<newline46mondego>                    {<newline46mondego>                        System.out.println(<doubleQuotes46>Hello from thread <doubleQuotes46> + <newline46mondego>                            Thread.currentThread().getName());<newline46mondego>                    }                   <newline46mondego>                });<newline46mondego>            thread.setName(<doubleQuotes46>MyThread-<doubleQuotes46> + i);<newline46mondego>            thread.start();<newline46mondego>        }       <newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2163splitHere46","9461247splitHere46","thread"
"2164splitHere46","9461247splitHere46","new Thread"
"2165splitHere46","9461247splitHere46","Hello from thread MyThread-1<newline46mondego>Hello from thread MyThread-3<newline46mondego>Hello from thread MyThread-8<newline46mondego>Hello from thread MyThread-9<newline46mondego>Hello from thread MyThread-0<newline46mondego>Hello from thread MyThread-4<newline46mondego>Hello from thread MyThread-2<newline46mondego>Hello from thread MyThread-7<newline46mondego>Hello from thread MyThread-6<newline46mondego>Hello from thread MyThread-5<newline46mondego>"
"2166splitHere46","9461284splitHere46","javax.crypto"
"2167splitHere46","9461284splitHere46","final SecretKeyFactory skf = SecretKeyFactory.getInstance(<doubleQuotes46>DES<doubleQuotes46>);<newline46mondego>final SecretKey key = skf.generateSecret(new DESKeySpec(new byte [] {/*The key*/}));<newline46mondego>instance.EncrypterDecrypter(key);                     //Initialization of your Cipher objects<newline46mondego>String encrypted = instance.encrypt(<doubleQuotes46>This is a test<doubleQuotes46>);<newline46mondego>System.out.println(instance.decrypt(encrypted));      //<doubleQuotes46>This is a test<doubleQuotes46><newline46mondego>"
"2168splitHere46","9461333splitHere46","replcaeAll"
"2169splitHere46","9461333splitHere46","toLowerCase"
"2170splitHere46","9461333splitHere46","myString.replaceAll(<doubleQuotes46> <doubleQuotes46>, <doubleQuotes46>_<doubleQuotes46>).toLowerCase()"
"2171splitHere46","9461792splitHere46","JEditorPane"
"2172splitHere46","9461811splitHere46","Stream result"
"2173splitHere46","9461811splitHere46","fileInputStream"
"2174splitHere46","9461811splitHere46","public class DownloadAction extends ActionSupport{<newline46mondego><newline46mondego>    private InputStream fileInputStream;<newline46mondego><newline46mondego>    public InputStream getFileInputStream() {<newline46mondego>        return fileInputStream;<newline46mondego>    }<newline46mondego><newline46mondego>    public String execute() throws Exception {<newline46mondego>        fileInputStream = new FileInputStream(new File(<doubleQuotes46>location of your file<doubleQuotes46>));<newline46mondego>        return SUCCESS;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2175splitHere46","9461811splitHere46","<action name=<doubleQuotes46>download<doubleQuotes46> class=<doubleQuotes46>com.abc.csm.actions.DownloadConfiguration<doubleQuotes46>><newline46mondego>    <result name=<doubleQuotes46>success<doubleQuotes46> type=<doubleQuotes46>stream<doubleQuotes46>><newline46mondego>      <param name=<doubleQuotes46>contentType<doubleQuotes46>>application/octet-stream</param><newline46mondego>      <param name=<doubleQuotes46>inputName<doubleQuotes46>>fileInputStream</param><newline46mondego>      <param name=<doubleQuotes46>contentDisposition<doubleQuotes46>>attachment;filename=<doubleQuotes46>fileABC.txt<doubleQuotes46></param><newline46mondego>      <param name=<doubleQuotes46>bufferSize<doubleQuotes46>>1024</param><newline46mondego>    </result><newline46mondego>   </action><newline46mondego>"
"2176splitHere46","9461811splitHere46","<action name=<doubleQuotes46>download<doubleQuotes46> class=<doubleQuotes46>com.abc.csm.actions.DownloadConfiguration<doubleQuotes46>><newline46mondego>        <result name=<doubleQuotes46>success<doubleQuotes46> type=<doubleQuotes46>stream<doubleQuotes46>><newline46mondego>          <param name=<doubleQuotes46>contentType<doubleQuotes46>>${contentType}</param><newline46mondego>          <param name=<doubleQuotes46>inputName<doubleQuotes46>>fileInputStream</param><newline46mondego>          <param name=<doubleQuotes46>contentDisposition<doubleQuotes46>>attachment;filename=<doubleQuotes46>fileABC.txt<doubleQuotes46></param><newline46mondego>          <param name=<doubleQuotes46>bufferSize<doubleQuotes46>>1024</param><newline46mondego>        </result><newline46mondego>       </action><newline46mondego>"
"2177splitHere46","9461812splitHere46","jdbc:h2:~/test"
"2178splitHere46","9461812splitHere46","C:\Documents and Settings\<userName>"
"2179splitHere46","9461812splitHere46","jdbc:h2:test"
"2180splitHere46","9461812splitHere46","<Installation Directory>/bin"
"2181splitHere46","9461812splitHere46","jdbc:h2:file:data/sample"
"2182splitHere46","9461812splitHere46","jdbc:h2:file:C:/data/test"
"2183splitHere46","9462033splitHere46","n"
"2184splitHere46","9462033splitHere46","2n+1"
"2185splitHere46","9462033splitHere46","2n+2"
"2186splitHere46","9462033splitHere46","n"
"2187splitHere46","9462033splitHere46","2n"
"2188splitHere46","9462033splitHere46","2n+1"
"2189splitHere46","9462265splitHere46","package com.foo;<newline46mondego><newline46mondego>public class Main {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2190splitHere46","9462265splitHere46","Main-Class"
"2191splitHere46","9462265splitHere46","Main-Class: com.foo.Main<newline46mondego>"
"2192splitHere46","9462378splitHere46","boolean isSelected = false;<newline46mondego>JButton jButton;<newline46mondego>void imageClickTest() throws MalformedURLException, IOException {<newline46mondego>    final JFrame frame = new JFrame(<doubleQuotes46>Demo<doubleQuotes46>);<newline46mondego>    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>    frame.setSize(400, 400);<newline46mondego>    frame.setLayout(new BorderLayout());<newline46mondego><newline46mondego>    final JTabbedPane tabbedPane = new JTabbedPane();<newline46mondego><newline46mondego>    JPanel pane = new JPanel();<newline46mondego>    JButton button;<newline46mondego>    pane.setLayout(new BorderLayout());<newline46mondego><newline46mondego>    button = new JButton(<doubleQuotes46>I'm second button<doubleQuotes46>);<newline46mondego>    button.setIcon(new ImageIcon(ImageIO.read(new URL(<doubleQuotes46>http://cdn5.iconfinder.com/data/icons/ie_Financial_set/24/26.png<doubleQuotes46>))));<newline46mondego>    button.addActionListener(new ActionListener() {<newline46mondego>        @Override<newline46mondego>        public void actionPerformed(ActionEvent e) {<newline46mondego>            JButton button = (JButton) e.getSource();<newline46mondego>            if(isSelected) {<newline46mondego>                System.out.println(<doubleQuotes46>two selected<doubleQuotes46>);<newline46mondego>                button.setBorder(BorderFactory.createEtchedBorder());<newline46mondego>                isSelected = false;<newline46mondego>                JSplitPane jSplitPane = new JSplitPane(JSplitPane.VERTICAL_SPLIT);<newline46mondego>                jSplitPane.add(button);<newline46mondego>                jButton.setBorder(BorderFactory.createEtchedBorder());<newline46mondego>                jButton.setText(<doubleQuotes46>First click me<doubleQuotes46>);<newline46mondego>                jSplitPane.add(jButton);<newline46mondego>                jSplitPane.setDividerLocation(150);<newline46mondego>                tabbedPane.addTab(<doubleQuotes46>Image Comparision<doubleQuotes46>, jSplitPane);<newline46mondego>            }<newline46mondego>        }<newline46mondego>    });<newline46mondego>    pane.add(button, BorderLayout.SOUTH);<newline46mondego><newline46mondego>    button = new JButton(<doubleQuotes46>First click me<doubleQuotes46>);<newline46mondego>    button.setIcon(new ImageIcon(ImageIO.read(new URL(<doubleQuotes46>http://cdn4.iconfinder.com/data/icons/REALVISTA/web_design/png/24/testimonials.png<doubleQuotes46>))));<newline46mondego>    button.addActionListener(new ActionListener() {<newline46mondego>        @Override<newline46mondego>        public void actionPerformed(ActionEvent e) {<newline46mondego>            JButton button = (JButton) e.getSource();<newline46mondego>            button.setBorder(BorderFactory.createLineBorder(Color.RED, 5));<newline46mondego>            button.setText(<doubleQuotes46>Now Click on second button.<doubleQuotes46>);<newline46mondego>            jButton = button;<newline46mondego>            isSelected = true;<newline46mondego>        }<newline46mondego>    });<newline46mondego>    pane.add(button, BorderLayout.NORTH);<newline46mondego><newline46mondego>    button = new JButton(<doubleQuotes46>I'm just extra button<doubleQuotes46>);<newline46mondego>    button.setIcon(new ImageIcon(ImageIO.read(new URL(<doubleQuotes46>http://cdn2.iconfinder.com/data/icons/crystalproject/64x64/apps/kservices.png<doubleQuotes46>))));<newline46mondego>    button.setEnabled(false);<newline46mondego>    pane.add(button, BorderLayout.CENTER);<newline46mondego><newline46mondego>    tabbedPane.addTab(<doubleQuotes46>ImagePane<doubleQuotes46>, pane);<newline46mondego>    frame.add(tabbedPane, BorderLayout.CENTER);<newline46mondego>    frame.setVisible(true);<newline46mondego>}<newline46mondego>"
"2193splitHere46","9462381splitHere46","Dal4j"
"2194splitHere46","9462399splitHere46","String host = <doubleQuotes46>smtp.gmail.com<doubleQuotes46>;<newline46mondego>        String from = <doubleQuotes46>user@gmail.com<doubleQuotes46>;<newline46mondego>        String pass = <doubleQuotes46>*******<doubleQuotes46>;<newline46mondego>        Properties props = System.getProperties();<newline46mondego>        props.put(<doubleQuotes46>mail.smtp.starttls.enable<doubleQuotes46>, <doubleQuotes46>true<doubleQuotes46>); // added this line<newline46mondego>        props.put(<doubleQuotes46>mail.smtp.host<doubleQuotes46>, host);<newline46mondego>        props.put(<doubleQuotes46>mail.smtp.user<doubleQuotes46>, from);<newline46mondego>        props.put(<doubleQuotes46>mail.smtp.password<doubleQuotes46>, pass);<newline46mondego>        props.put(<doubleQuotes46>mail.smtp.port<doubleQuotes46>, <doubleQuotes46>587<doubleQuotes46>);<newline46mondego>        props.put(<doubleQuotes46>mail.smtp.auth<doubleQuotes46>, <doubleQuotes46>true<doubleQuotes46>);<newline46mondego><newline46mondego>        String[] to = {<doubleQuotes46>usr@yahoo.in<doubleQuotes46>}; // added this line<newline46mondego><newline46mondego>        Session session = Session.getDefaultInstance(props, null);<newline46mondego>        MimeMessage message = new MimeMessage(session);<newline46mondego>        message.setFrom(new InternetAddress(from));<newline46mondego><newline46mondego>        InternetAddress[] toAddress = new InternetAddress[to.length];<newline46mondego><newline46mondego>        // To get the array of addresses<newline46mondego>        for( int i=0; i < to.length; i++ ) { // changed from a while loop<newline46mondego>            toAddress[i] = new InternetAddress(to[i]);<newline46mondego>        }<newline46mondego>        System.out.println(Message.RecipientType.TO);<newline46mondego><newline46mondego>        for( int i=0; i < toAddress.length; i++) { // changed from a while loop<newline46mondego>            message.addRecipient(Message.RecipientType.TO, toAddress[i]);<newline46mondego>        }<newline46mondego>        message.setSubject(<doubleQuotes46>sending in a group<doubleQuotes46>);<newline46mondego>        message.setText(<doubleQuotes46>Welcome to JavaMail<doubleQuotes46>);<newline46mondego>        Transport transport = session.getTransport(<doubleQuotes46>smtp<doubleQuotes46>);<newline46mondego>        transport.connect(host, from, pass);<newline46mondego>        transport.sendMessage(message, message.getAllRecipients());<newline46mondego>        transport.close();<newline46mondego>"
"2195splitHere46","9462554splitHere46","getProperty(String, String)"
"2196splitHere46","9462554splitHere46","String   eod = Props.getProperty(<doubleQuotes46>client.eod<doubleQuotes46>, <doubleQuotes46>5<doubleQuotes46>);<newline46mondego>"
"2197splitHere46","9462776splitHere46","YES_OPTION<newline46mondego>NO_OPTION<newline46mondego>CANCEL_OPTION<newline46mondego>OK_OPTION<newline46mondego>CLOSED_OPTION<newline46mondego>"
"2198splitHere46","9462776splitHere46","CLOSED_OPTION"
"2199splitHere46","9462796splitHere46","Parent"
"2200splitHere46","9462796splitHere46","request.action"
"2201splitHere46","9462796splitHere46","Parent"
"2202splitHere46","9462796splitHere46","Child"
"2203splitHere46","9462796splitHere46","Child"
"2204splitHere46","9462864splitHere46","ClassLoader.getSystemResourceAsStream(String)"
"2205splitHere46","9462864splitHere46","FileInputStream"
"2206splitHere46","9462864splitHere46","BufferedInputStream"
"2207splitHere46","9462864splitHere46","finalize"
"2208splitHere46","9462920splitHere46","privileges"
"2209splitHere46","9463325splitHere46","Properties"
"2210splitHere46","9463325splitHere46","Hashtable"
"2211splitHere46","9463325splitHere46","Map<String, String> stuff = new HashMap<String, String>();<newline46mondego>"
"2212splitHere46","9463325splitHere46","Properties"
"2213splitHere46","9463472splitHere46","AndroidManifest.xml"
"2214splitHere46","9463472splitHere46","package=<doubleQuotes46>HelloAndroid.Main<doubleQuotes46><newline46mondego>"
"2215splitHere46","9463472splitHere46","package=<doubleQuotes46>HelloAndroid<doubleQuotes46><newline46mondego>"
"2216splitHere46","9463472splitHere46","HelloAndroid.Main"
"2217splitHere46","9463472splitHere46","package HelloAndroid.Main;<newline46mondego>"
"2218splitHere46","9463568splitHere46","<table>"
"2219splitHere46","9463568splitHere46","//  String html =<doubleQuotes46> ...here goes your html code... <doubleQuotes46>;<newline46mondego>// Document doc = Jsoup.parse(html);<newline46mondego>// Or from file:<newline46mondego>    File input = new File(<doubleQuotes46>com.htm<doubleQuotes46>);<newline46mondego>    Document doc = Jsoup.parse(input, <doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>    Elements trs = doc.select(<doubleQuotes46>tr<doubleQuotes46>); //select all <doubleQuotes46>tr<doubleQuotes46> elements from document<newline46mondego>    for(Element tr:trs){<newline46mondego>        //Getting the class string form tr element<newline46mondego>        System.out.println(<doubleQuotes46>The file class is: <doubleQuotes46> + tr.attr(<doubleQuotes46>class<doubleQuotes46>) <newline46mondego>       //getting the filename string that holds inside td element<newline46mondego>         + <doubleQuotes46> The filamee is: <doubleQuotes46>  + tr.select(<doubleQuotes46>td<doubleQuotes46>).text());<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2220splitHere46","9463714splitHere46","static int org.me.Test.born=System.currentTimeMillis();<newline46mondego>"
"2221splitHere46","9463726splitHere46","HashSet"
"2222splitHere46","9463726splitHere46","contains()"
"2223splitHere46","9463726splitHere46","bucket    object(hashcode)<newline46mondego>#1        5<newline46mondego>#2        -3<newline46mondego>#3        6<newline46mondego>"
"2224splitHere46","9463726splitHere46","f(hashcode) :=  |  5 -> 1<newline46mondego>                | -3 -> 2<newline46mondego>                |  6 -> 3<newline46mondego>"
"2225splitHere46","9463726splitHere46","f(hashcode) :=  |  5 -> 1<newline46mondego>                |  6 -> 3<newline46mondego>"
"2226splitHere46","9463726splitHere46","f(-3)"
"2227splitHere46","9463726splitHere46","contains()"
"2228splitHere46","9463734splitHere46","return !StringUtils.isEmpty(request.getParameter(<doubleQuotes46>AJAXREQUEST<doubleQuotes46>));<newline46mondego>"
"2229splitHere46","9463812splitHere46","str = str.replaceAll(<doubleQuotes46>(?<=\\d)\\s(?=\\d)<doubleQuotes46>, <doubleQuotes46>-<doubleQuotes46>);<newline46mondego>"
"2230splitHere46","9463812splitHere46","\\s"
"2231splitHere46","9463812splitHere46","(?<=\\d)"
"2232splitHere46","9463812splitHere46","(?=\\d)"
"2233splitHere46","9463812splitHere46","\\s"
"2234splitHere46","9463812splitHere46","\\s+"
"2235splitHere46","9463904splitHere46","<?php<newline46mondego>function encrypt($str, $key){<newline46mondego>     $block = mcrypt_get_block_size('rijndael_128', 'ecb');<newline46mondego>     $pad = $block - (strlen($str) % $block);<newline46mondego>     $str .= str_repeat(chr($pad), $pad);<newline46mondego>     return base64_encode(mcrypt_encrypt(MCRYPT_RIJNDAEL_128, $key, $str, MCRYPT_MODE_ECB));<newline46mondego>}<newline46mondego><newline46mondego>function decrypt($str, $key){ <newline46mondego>     $str = base64_decode($str);<newline46mondego>     $str = mcrypt_decrypt(MCRYPT_RIJNDAEL_128, $key, $str, MCRYPT_MODE_ECB);<newline46mondego>     $block = mcrypt_get_block_size('rijndael_128', 'ecb');<newline46mondego>     $pad = ord($str[($len = strlen($str)) - 1]);<newline46mondego>     $len = strlen($str);<newline46mondego>     $pad = ord($str[$len-1]);<newline46mondego>     return substr($str, 0, strlen($str) - $pad);<newline46mondego>}<newline46mondego>?><newline46mondego>"
"2236splitHere46","9464058splitHere46","public final class Test {<newline46mondego>  // In this method.<newline46mondego>  private void test() {<newline46mondego>    // With this local variable.<newline46mondego>    final List<String> localList = new LinkedList<String>();<newline46mondego>    // We can define a class<newline46mondego>    class InnerTest {<newline46mondego>      // Yes you can!!<newline46mondego>      void method () {<newline46mondego>        // You can even access local variables but only if they are final.<newline46mondego>        for ( String s : localList ) {<newline46mondego>          // Like this.<newline46mondego>        }<newline46mondego>      }<newline46mondego>    }<newline46mondego>  }<newline46mondego><newline46mondego>}<newline46mondego>"
"2237splitHere46","9464069splitHere46","while(((line = in.readLine()) != null))<newline46mondego>        {<newline46mondego>            line = in.readLine();<newline46mondego>            String[] val = line.split(<doubleQuotes46><><doubleQuotes46>);<newline46mondego>            String ID = val[0];<newline46mondego>            String name = val[1];<newline46mondego><newline46mondego>            instructors.put(ID, name);<newline46mondego>        }<newline46mondego>"
"2238splitHere46","9464069splitHere46","while"
"2239splitHere46","9464069splitHere46","while(((line = in.readLine()) != null))<newline46mondego>        {                <newline46mondego>            String[] val = line.split(<doubleQuotes46><><doubleQuotes46>);<newline46mondego>            String ID = val[0];<newline46mondego>            String name = val[1];<newline46mondego><newline46mondego>            instructors.put(ID, name);<newline46mondego>        }<newline46mondego>"
"2240splitHere46","9464111splitHere46","org.w3c.dom.Document"
"2241splitHere46","9464111splitHere46","javax.xml.transform.dom.DOMSource"
"2242splitHere46","9464189splitHere46","Service"
"2243splitHere46","9464189splitHere46","@Service"
"2244splitHere46","9464189splitHere46","org.springframework.stereotype.Service"
"2245splitHere46","9464221splitHere46","public static void main(String... args) throws Exception {<newline46mondego>    List<Integer> list = new ArrayList<Integer>();<newline46mondego>    for (int i = 0; i < 16; i++) {<newline46mondego>        list.add(i);<newline46mondego>    }<newline46mondego>    System.out.println(list); //[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]<newline46mondego>    Collections.shuffle(list);<newline46mondego>    System.out.println(list); //[11, 5, 10, 9, 7, 0, 6, 1, 3, 14, 2, 4, 15, 13, 12, 8]<newline46mondego><newline46mondego>    int[][] a2 = new int[4][4];<newline46mondego>    for (int i = 0; i < 4; i++) {<newline46mondego>        for (int j = 0;  j< 4; j++) {<newline46mondego>            a2[i][j] = list.get(i*4 + j);<newline46mondego>        }<newline46mondego>    }<newline46mondego>    System.out.println(Arrays.deepToString(a2)); //[[11, 5, 10, 9], [7, 0, 6, 1], [3, 14, 2, 4], [15, 13, 12, 8]]<newline46mondego>}<newline46mondego>"
"2246splitHere46","9464242splitHere46","String SOAP_REQUEST = <newline46mondego><doubleQuotes46><soapenv:Envelope <newline46mondego>     xmlns:soapenv=\<doubleQuotes46>http://schemas.xmlsoap.org/soap/envelope/\<doubleQuotes46><newline46mondego>     xmlns:web=\<doubleQuotes46>http://www.webserviceX.NET/\<doubleQuotes46>><newline46mondego> <soapenv:Header/><newline46mondego> <soapenv:Body><newline46mondego> <web:ConversionRate><newline46mondego> <web:FromCurrency>EUR</web:FromCurrency><newline46mondego> <web:ToCurrency>ILS</web:ToCurrency><newline46mondego> </web:ConversionRate><newline46mondego> </soapenv:Body></soapenv:Envelope><doubleQuotes46><newline46mondego>"
"2247splitHere46","9464309splitHere46","matches()"
"2248splitHere46","9464309splitHere46",".*\\bthis\\b<newline46mondego>"
"2249splitHere46","9464309splitHere46",".*\\bthis\\b.*<newline46mondego>"
"2250splitHere46","9464309splitHere46","Matcher"
"2251splitHere46","9464309splitHere46","Matcher.find()"
"2252splitHere46","9464309splitHere46","Pattern p = Pattern.compile(<doubleQuotes46>\\bthis\\b<doubleQuotes46>);<newline46mondego>    Matcher m = p.matcher(<doubleQuotes46>Print this<doubleQuotes46>);<newline46mondego>    m.find();<newline46mondego>    System.out.println(m.group());<newline46mondego>"
"2253splitHere46","9464309splitHere46","this<newline46mondego>"
"2254splitHere46","9464309splitHere46","find()"
"2255splitHere46","9464309splitHere46","group()"
"2256splitHere46","9464312splitHere46","HttpSession"
"2257splitHere46","9464312splitHere46","HttpSession"
"2258splitHere46","9464312splitHere46","isNew()"
"2259splitHere46","9464312splitHere46","true"
"2260splitHere46","9464312splitHere46","isNew()"
"2261splitHere46","9464312splitHere46","false"
"2262splitHere46","9464312splitHere46","isNew()"
"2263splitHere46","9464312splitHere46","private boolean"
"2264splitHere46","9464312splitHere46","HttpSession"
"2265splitHere46","9464312splitHere46","isNew()"
"2266splitHere46","9464453splitHere46","if ((count > maxCount) || (count == maxCount && nums[i] < maxValue)) {<newline46mondego>    maxValue = nums[i];<newline46mondego>    maxCount = count;<newline46mondego>}<newline46mondego>"
"2267splitHere46","9464462splitHere46","application/json"
"2268splitHere46","9464462splitHere46","public List<String> getStrArr(){return strAddr;}<newline46mondego>"
"2269splitHere46","9464462splitHere46","<mvc:annotation-driven /><newline46mondego>"
"2270splitHere46","9464462splitHere46","@ResponseBody"
"2271splitHere46","9464552splitHere46","String str = <doubleQuotes46>This is 1 test 123-456-7890<doubleQuotes46>;<newline46mondego><newline46mondego>Pattern pattern = Pattern.compile(<doubleQuotes46>\\d{3}-\\d{3}-\\d{4}<doubleQuotes46>);<newline46mondego>Matcher matcher = pattern.matcher(str);<newline46mondego>if (matcher.find()) {<newline46mondego>    System.out.println(matcher.group(0));<newline46mondego>}<newline46mondego>"
"2272splitHere46","9464583splitHere46","2012-02-27 00:00:00.0"
"2273splitHere46","9464583splitHere46","27-FEB-12"
"2274splitHere46","9464583splitHere46","final String s = <doubleQuotes46>2012-02-27 00:00:00.0<doubleQuotes46>;<newline46mondego>String newDateString = new SimpleDateFormat(<doubleQuotes46>dd-MMM-yy<doubleQuotes46>).format(new SimpleDateFormat(<doubleQuotes46>yyyy-MM-dd HH:mm:ss.S<doubleQuotes46>).parse(s));<newline46mondego>"
"2275splitHere46","9464720splitHere46","String[] strarr = new String[categories.length];<newline46mondego>for (int i=0; i<categories.length; i++)<newline46mondego>     strarr[i] = categories[i] != null ? categories[i].toString() : null;<newline46mondego>"
"2276splitHere46","9464720splitHere46","String[] strarr = Arrays.toString(categories).replaceAll(<doubleQuotes46>[\\[\\]]<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>).split(<doubleQuotes46>,<doubleQuotes46>);<newline46mondego>"
"2277splitHere46","9464827splitHere46","while (...) {<newline46mondego><newline46mondego>    if (!line.contains(<doubleQuotes46><><doubleQuotes46>))<newline46mondego>        continue;<newline46mondego><newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"2278splitHere46","9464864splitHere46","public class WrapperBean{<newline46mondego>    private Bean1 bean1;<newline46mondego>    private Bean2 bean2;<newline46mondego>    // getters, setters<newline46mondego>}<newline46mondego>"
"2279splitHere46","9465151splitHere46","class Test<newline46mondego>{<newline46mondego>    static void Main() {<newline46mondego>        // Entirely valid<newline46mondego>        SomeEnum.VALUE1.value = <doubleQuotes46>x<doubleQuotes46>;<newline46mondego>    }<newline46mondego><newline46mondego>    enum SomeEnum {<newline46mondego>        VALUE1(<doubleQuotes46>value1<doubleQuotes46>);<newline46mondego><newline46mondego>        private String value;<newline46mondego><newline46mondego>        private SomeEnum(final String value) {<newline46mondego>            this.value = value;<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2280splitHere46","9465151splitHere46","VALUE1"
"2281splitHere46","9465151splitHere46","VALUE1.value"
"2282splitHere46","9465151splitHere46","List"
"2283splitHere46","9465151splitHere46","SomeEnum"
"2284splitHere46","9465151splitHere46","value"
"2285splitHere46","9465151splitHere46","final"
"2286splitHere46","9465180splitHere46","super(fromJSON);"
"2287splitHere46","9465180splitHere46","setWithJSON(String input)"
"2288splitHere46","9465180splitHere46","setWithJSON(String input)"
"2289splitHere46","9465258splitHere46","TreeMap<String,Integer><newline46mondego>"
"2290splitHere46","9465258splitHere46","map.ceilingEntry(Integer.valueOf(NUM_OF_CELLS)); <newline46mondego>"
"2291splitHere46","9465340splitHere46","spinner_1.setOnItemSelectedListener(new OnItemSelectedListener() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void onItemSelected(AdapterView<?> arg0, View arg1,<newline46mondego>                    int position, long arg3) {<newline46mondego><newline46mondego>                            if(spinner_1.getSelectedItem().equals(<doubleQuotes46>Red<doubleQuotes46>)){<newline46mondego>                            {<newline46mondego>                                  // set adapter to spinner_2 here for <doubleQuotes46>Red<doubleQuotes46> selected<newline46mondego>                            }<newline46mondego>                            else<newline46mondego>                            {<newline46mondego>                                 // set adapter to spinner_2 for <doubleQuotes46>Red<doubleQuotes46> not selected<newline46mondego>                            }<newline46mondego>            }    <newline46mondego>            @Override<newline46mondego>            public void onNothingSelected(AdapterView<?> arg0) {                <newline46mondego>            }<newline46mondego>});<newline46mondego>"
"2292splitHere46","9465460splitHere46","set JVMARGS=-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,address=9009,suspend=y,server=y<newline46mondego>"
"2293splitHere46","9465617splitHere46","<h:commandButton value=<doubleQuotes46>Go to page 1<doubleQuotes46> action=<doubleQuotes46>#{bean.goToPage1}<doubleQuotes46> /><newline46mondego><h:commandButton value=<doubleQuotes46>Go to page 2<doubleQuotes46> action=<doubleQuotes46>#{bean.goToPage2}<doubleQuotes46> /><newline46mondego>"
"2294splitHere46","9465617splitHere46","public String goToPage1() {<newline46mondego>    // ...<newline46mondego>    return <doubleQuotes46>page_1<doubleQuotes46>;<newline46mondego>}<newline46mondego><newline46mondego>public String goToPage2() {<newline46mondego>    // ...<newline46mondego>    return <doubleQuotes46>page_2<doubleQuotes46>;<newline46mondego>}<newline46mondego>"
"2295splitHere46","9465617splitHere46","action"
"2296splitHere46","9465617splitHere46","<h:commandButton value=<doubleQuotes46>Go to page 1<doubleQuotes46> action=<doubleQuotes46>page_1<doubleQuotes46> /><newline46mondego><h:commandButton value=<doubleQuotes46>Go to page 2<doubleQuotes46> action=<doubleQuotes46>page_2<doubleQuotes46> /><newline46mondego>"
"2297splitHere46","9465617splitHere46","<h:commandButton>"
"2298splitHere46","9465617splitHere46","<h:button>"
"2299splitHere46","9465617splitHere46","<h:button value=<doubleQuotes46>Go to page 1<doubleQuotes46> outcome=<doubleQuotes46>page_1<doubleQuotes46> /><newline46mondego><h:button value=<doubleQuotes46>Go to page 2<doubleQuotes46> outcome=<doubleQuotes46>page_2<doubleQuotes46> /><newline46mondego>"
"2300splitHere46","9465617splitHere46","faces-redirect=true"
"2301splitHere46","9465617splitHere46","public String goToPage1() {<newline46mondego>    // ...<newline46mondego>    return <doubleQuotes46>page_1?faces-redirect=true<doubleQuotes46>;<newline46mondego>}<newline46mondego><newline46mondego>public String goToPage2() {<newline46mondego>    // ...<newline46mondego>    return <doubleQuotes46>page_2?faces-redirect=true<doubleQuotes46>;<newline46mondego>}<newline46mondego>"
"2302splitHere46","9465683splitHere46","<property name=<doubleQuotes46>classe<doubleQuotes46> value=<doubleQuotes46>foo.bar.SomeClass<doubleQuotes46>/><newline46mondego>"
"2303splitHere46","9465683splitHere46","classe"
"2304splitHere46","9465683splitHere46","java.lang.Class"
"2305splitHere46","9465695splitHere46","session"
"2306splitHere46","9465695splitHere46","private Session session"
"2307splitHere46","9465695splitHere46","@In<newline46mondego>private Session session;<newline46mondego>"
"2308splitHere46","9465726splitHere46","awaitTermination"
"2309splitHere46","9465726splitHere46","shutDown"
"2310splitHere46","9465726splitHere46","OuterCallable"
"2311splitHere46","9465726splitHere46","Callable"
"2312splitHere46","9465726splitHere46","Executor"
"2313splitHere46","9465726splitHere46","someMethod"
"2314splitHere46","9465733splitHere46","concurrencyLevel"
"2315splitHere46","9466159splitHere46","String realPathOfImgFolder=req.getServletContext().getRealPath(<doubleQuotes46>/foldername<doubleQuotes46>);<newline46mondego>"
"2316splitHere46","9466159splitHere46","String rootPath=req.getServletContext().getRealPath(<doubleQuotes46>/<doubleQuotes46>);<newline46mondego>File webInfFolder=new File(rootPath,<doubleQuotes46>WEB-INF<doubleQuotes46>);<newline46mondego>"
"2317splitHere46","9466159splitHere46","request"
"2318splitHere46","9466159splitHere46","ServletContextListener"
"2319splitHere46","9466159splitHere46","contextInitialized(ServletContextEvent sce)"
"2320splitHere46","9466159splitHere46","ServletContext"
"2321splitHere46","9466225splitHere46","if (rich_types.size() <= 5) {<newline46mondego>    cellType ct = new cellType(notable.getString(<doubleQuotes46>name<doubleQuotes46>), (Double) array.getJSONObject(i).get(<doubleQuotes46>score<doubleQuotes46>));<newline46mondego>    if(!rich_type.contains(ct))<newline46mondego>        rich_types.add(ct);<newline46mondego>}<newline46mondego>"
"2322splitHere46","9466290splitHere46","AndroidManifest.xml"
"2323splitHere46","9466290splitHere46","<uses-permission android:name=<doubleQuotes46>android.permission.INTERNET<doubleQuotes46> /><newline46mondego>"
"2324splitHere46","9466312splitHere46","distutils"
"2325splitHere46","9466312splitHere46",">>> from distutils.version import LooseVersion  # or StrictVersion<newline46mondego>>>> LooseVersion(<doubleQuotes46>1.0-SNAPSHOT<doubleQuotes46>) < LooseVersion(<doubleQuotes46>1.1-SNAPSHOT<doubleQuotes46>)<newline46mondego>True<newline46mondego>>>> v = LooseVersion(<doubleQuotes46>1.0.1-SNAPSHOT<doubleQuotes46>)<newline46mondego>>>> v.version<newline46mondego>[1, 0, 1, '-SNAPSHOT']<newline46mondego>"
"2326splitHere46","9466356splitHere46","save"
"2327splitHere46","9466356splitHere46","root"
"2328splitHere46","9466356splitHere46","java.io.FilenameFilter"
"2329splitHere46","9466356splitHere46","public void onClick(View v) {<newline46mondego><newline46mondego>         File root = Environment.getExternalStorageDirectory();<newline46mondego>         File saveFolder= new File(root, <doubleQuotes46>Save<doubleQuotes46>);<newline46mondego><newline46mondego>         String[] files=saveFolder.list(<newline46mondego>            new FilenameFilter() {<newline46mondego>                public boolean accept(File dir, String name) {<newline46mondego>                //define here you filter condition for every single file<newline46mondego>                    return name.startsWith(<doubleQuotes46>3_test<doubleQuotes46>);<newline46mondego><newline46mondego>                }<newline46mondego>            });<newline46mondego><newline46mondego>         if(files.length>0) {<newline46mondego>             System.out.println(<doubleQuotes46>FOUND!<doubleQuotes46>);<newline46mondego>         } else {<newline46mondego>             System.out.println(<doubleQuotes46>NOT FOUND!<doubleQuotes46>);<newline46mondego>         }<newline46mondego>     }<newline46mondego>"
"2330splitHere46","9466362splitHere46","Broadcast"
"2331splitHere46","9466362splitHere46","Intent"
"2332splitHere46","9466362splitHere46","Intent"
"2333splitHere46","9466362splitHere46","Intent intent = new Intent(context, YourAppWidgetProvider.class);<newline46mondego>intent.putExtra(<doubleQuotes46>extra_value<doubleQuotes46>, value);<newline46mondego>sendBroadcast(intent);<newline46mondego>"
"2334splitHere46","9466362splitHere46","AppWidgetProvider"
"2335splitHere46","9466362splitHere46","String value = intent.getStringExtra(<doubleQuotes46>extra_value<doubleQuotes46>);<newline46mondego>"
"2336splitHere46","9466365splitHere46","while ( (line = br.readLine()) != null) {<newline46mondego>        returner += line;<newline46mondego><newline46mondego>    }<newline46mondego>"
"2337splitHere46","9466365splitHere46","while ( (line = br.readLine()) != null) {<newline46mondego>        processLine(line);<newline46mondego>    }<newline46mondego>"
"2338splitHere46","9466365splitHere46","processLine()"
"2339splitHere46","9466405splitHere46","NullPointerException"
"2340splitHere46","9466420splitHere46","JTextPane"
"2341splitHere46","9466420splitHere46","deployJava.js"
"2342splitHere46","9466420splitHere46","file.encoding"
"2343splitHere46","9466420splitHere46","line.separator"
"2344splitHere46","9466420splitHere46","file.separator"
"2345splitHere46","9466645splitHere46","getResultList()"
"2346splitHere46","9466645splitHere46","Objects"
"2347splitHere46","9466645splitHere46","Author"
"2348splitHere46","9466645splitHere46","Author"
"2349splitHere46","9466645splitHere46","Object"
"2350splitHere46","9466645splitHere46","getClass()"
"2351splitHere46","9466645splitHere46","TypedQuery<Author> q = em.createQuery(<doubleQuotes46>SELECT a FROM Author a LEFT JOIN a.documents d LEFT JOIN d.personDocuments pd WHERE pd.person = :person ORDER BY a.lastName<doubleQuotes46>, Author.class);<newline46mondego>q.setParameter(<doubleQuotes46>person<doubleQuotes46>, person);<newline46mondego>return new HashSet<Author>(q.getResultList());<newline46mondego>"
"2352splitHere46","9466764splitHere46","/uploadfile/uploadFileServlet"
"2353splitHere46","9466764splitHere46","/uploadFileServlet"
"2354splitHere46","9466764splitHere46","Servlet"
"2355splitHere46","9466764splitHere46","HttpServlet"
"2356splitHere46","9466778splitHere46","public class Test {<newline46mondego>    private static int ctr = 0;<newline46mondego>    public static void main(String[] args) {<newline46mondego>        while (true) {<newline46mondego>            method();<newline46mondego>            try {<newline46mondego>                Thread.sleep(200);<newline46mondego>            } catch (InterruptedException e) {<newline46mondego>                System.err.println(<doubleQuotes46>Interrupted<doubleQuotes46>);<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    private static void method() {<newline46mondego>        System.out.println(ctr);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2357splitHere46","9466778splitHere46","System.out.println(ctr);"
"2358splitHere46","9466778splitHere46","System.out.println(ctr++);"
"2359splitHere46","9466861splitHere46","getResource"
"2360splitHere46","9466861splitHere46","src"
"2361splitHere46","9466861splitHere46","/"
"2362splitHere46","9466861splitHere46","src"
"2363splitHere46","9466861splitHere46","/i3d/resourcesloader/libraries/lib.txt"
"2364splitHere46","9466861splitHere46","/src/main/java"
"2365splitHere46","9466861splitHere46","/src/main/resources"
"2366splitHere46","9466939splitHere46","list.clear();<newline46mondego> while(list.size() < required) list.add(queue.take());<newline46mondego> // process list.<newline46mondego>"
"2367splitHere46","9467128splitHere46","String[] tokens;<newline46mondego>"
"2368splitHere46","9467128splitHere46","String tokens[];<newline46mondego>"
"2369splitHere46","9467128splitHere46","tokens = new Array<String>(new Array<String>());<newline46mondego>"
"2370splitHere46","9467128splitHere46","String[] tokens; <newline46mondego>"
"2371splitHere46","9467128splitHere46","String tokens[];<newline46mondego>"
"2372splitHere46","9467128splitHere46","new Array<String>();<newline46mondego>"
"2373splitHere46","9467147splitHere46","SWT.MeasureItem"
"2374splitHere46","9467147splitHere46","Table"
"2375splitHere46","9467147splitHere46","setItemHeight(int)"
"2376splitHere46","9467147splitHere46","setItemHeight"
"2377splitHere46","9467147splitHere46","final Table table = new Table(parent, SWT.BORDER);<newline46mondego><newline46mondego>/* Set up table columns, etc. */<newline46mondego><newline46mondego>table.pack();<newline46mondego><newline46mondego>try<newline46mondego>{<newline46mondego>    /*<newline46mondego>     * Locate the method setItemHeight(int). Note that if you do not<newline46mondego>     * have access to the method, you must use getDeclaredMethod(). If<newline46mondego>     * setItemHeight(int) were public, you could simply call<newline46mondego>     * getDeclaredMethod.<newline46mondego>     */<newline46mondego>    Method setItemHeightMethod =<newline46mondego>        table.getClass().getDeclaredMethod(<doubleQuotes46>setItemHeight<doubleQuotes46>, int.class);<newline46mondego><newline46mondego>    /*<newline46mondego>     * Set the method as accessible. Again, this would not be necessary<newline46mondego>     * if setItemHeight(int) were public.<newline46mondego>     */<newline46mondego>    setItemHeightMethod.setAccessible(true);<newline46mondego><newline46mondego>    /*<newline46mondego>     * Invoke the method. Equivalent to table.setItemHeight(50).<newline46mondego>     */<newline46mondego>    setItemHeightMethod.invoke(table, 50);<newline46mondego>}<newline46mondego>catch (Exception e)<newline46mondego>{<newline46mondego>    /*<newline46mondego>     * Reflection failed, it's probably best to swallow the exception and<newline46mondego>     * degrade gracefully, as if we never called setItemHeight.  Maybe<newline46mondego>     * log the error or print the exception to stderr?<newline46mondego>     */<newline46mondego>    e.printStackTrace();<newline46mondego>}<newline46mondego>"
"2378splitHere46","9467147splitHere46","GridData.heightHint"
"2379splitHere46","9467147splitHere46","GridLayout"
"2380splitHere46","9467358splitHere46","VK_8"
"2381splitHere46","9467358splitHere46","8"
"2382splitHere46","9467358splitHere46","*"
"2383splitHere46","9467358splitHere46","VK_MULTIPLY"
"2384splitHere46","9467358splitHere46","*"
"2385splitHere46","9467358splitHere46","getKeyChar()"
"2386splitHere46","9467358splitHere46","*"
"2387splitHere46","9467372splitHere46","CellRenderer"
"2388splitHere46","9467372splitHere46","DefaultTableCellRenderer"
"2389splitHere46","9467372splitHere46","DefaultTableCellRenderer"
"2390splitHere46","9467372splitHere46","getTableCellRendererComponent"
"2391splitHere46","9467372splitHere46","class PathCellRenderer extends DefaultTableCellRenderer {<newline46mondego>    public Component getTableCellRendererComponent(<newline46mondego>                        JTable table, Object value,<newline46mondego>                        boolean isSelected, boolean hasFocus,<newline46mondego>                        int row, int column) {<newline46mondego>        JLabel c = (JLabel)super.getTableCellRendererComponent( // params from above );<newline46mondego>        // This...<newline46mondego>        String pathValue = <getYourPathValue>; // Could be value.toString()<newline46mondego>        c.setToolTipText(pathValue);<newline46mondego>        // ...OR this probably works in your case:<newline46mondego>        c.setToolTipText(c.getText());<newline46mondego>        return c;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>...<newline46mondego>pathColumn.setCellRenderer(new PathCellRenderer()); // If your path is of specific class (e.g. java.io.File) you could set the renderer for that type<newline46mondego>...<newline46mondego>"
"2392splitHere46","9467439splitHere46","Capture<Class<?>> classCapture = new Capture<Class<?>>();<newline46mondego>EasyMock.expect(object.foo(EasyMock.capture(classCapture)));<newline46mondego><newline46mondego>// ... other test setup ...<newline46mondego><newline46mondego>Assert.assertEquals(classCapture.getValue(), String.class);<newline46mondego>"
"2393splitHere46","9467565splitHere46","A {==,!=,eq,ne} B"
"2394splitHere46","9467565splitHere46","A==B"
"2395splitHere46","9467565splitHere46","A"
"2396splitHere46","9467565splitHere46","null"
"2397splitHere46","9467565splitHere46","B"
"2398splitHere46","9467565splitHere46","null"
"2399splitHere46","9467565splitHere46","false"
"2400splitHere46","9467565splitHere46","=="
"2401splitHere46","9467565splitHere46","eq"
"2402splitHere46","9467565splitHere46","true"
"2403splitHere46","9467565splitHere46","!="
"2404splitHere46","9467565splitHere46","ne"
"2405splitHere46","9467565splitHere46","A"
"2406splitHere46","9467565splitHere46","B"
"2407splitHere46","9467565splitHere46","BigDecimal"
"2408splitHere46","9467565splitHere46","A"
"2409splitHere46","9467565splitHere46","B"
"2410splitHere46","9467565splitHere46","BigDecimal"
"2411splitHere46","9467565splitHere46","=="
"2412splitHere46","9467565splitHere46","eq"
"2413splitHere46","9467565splitHere46","A.equals(B)"
"2414splitHere46","9467565splitHere46","!="
"2415splitHere46","9467565splitHere46","ne"
"2416splitHere46","9467565splitHere46","!A.equals(B)"
"2417splitHere46","9467565splitHere46","A"
"2418splitHere46","9467565splitHere46","B"
"2419splitHere46","9467565splitHere46","Float"
"2420splitHere46","9467565splitHere46","Double"
"2421splitHere46","9467565splitHere46","A"
"2422splitHere46","9467565splitHere46","B"
"2423splitHere46","9467565splitHere46","Double"
"2424splitHere46","9467565splitHere46","A"
"2425splitHere46","9467565splitHere46","B"
"2426splitHere46","9467565splitHere46","BigInteger"
"2427splitHere46","9467565splitHere46","A"
"2428splitHere46","9467565splitHere46","B"
"2429splitHere46","9467565splitHere46","BigInteger"
"2430splitHere46","9467565splitHere46","=="
"2431splitHere46","9467565splitHere46","eq"
"2432splitHere46","9467565splitHere46","A.equals(B)"
"2433splitHere46","9467565splitHere46","!="
"2434splitHere46","9467565splitHere46","ne"
"2435splitHere46","9467565splitHere46","!A.equals(B)"
"2436splitHere46","9467565splitHere46","A"
"2437splitHere46","9467565splitHere46","B"
"2438splitHere46","9467565splitHere46","Byte"
"2439splitHere46","9467565splitHere46","Short"
"2440splitHere46","9467565splitHere46","Character"
"2441splitHere46","9467565splitHere46","Integer"
"2442splitHere46","9467565splitHere46","Long"
"2443splitHere46","9467565splitHere46","A"
"2444splitHere46","9467565splitHere46","B"
"2445splitHere46","9467565splitHere46","Long"
"2446splitHere46","9467565splitHere46","A"
"2447splitHere46","9467565splitHere46","B"
"2448splitHere46","9467565splitHere46","Boolean"
"2449splitHere46","9467565splitHere46","A"
"2450splitHere46","9467565splitHere46","B"
"2451splitHere46","9467565splitHere46","Boolean"
"2452splitHere46","9467565splitHere46","A"
"2453splitHere46","9467565splitHere46","B"
"2454splitHere46","9467565splitHere46","enum"
"2455splitHere46","9467565splitHere46","A"
"2456splitHere46","9467565splitHere46","B"
"2457splitHere46","9467565splitHere46","enum"
"2458splitHere46","9467565splitHere46","A"
"2459splitHere46","9467565splitHere46","B"
"2460splitHere46","9467565splitHere46","String"
"2461splitHere46","9467565splitHere46","A"
"2462splitHere46","9467565splitHere46","B"
"2463splitHere46","9467565splitHere46","String"
"2464splitHere46","9467565splitHere46","A.equals(B)"
"2465splitHere46","9467565splitHere46","A.equals(B)"
"2466splitHere46","9467565splitHere46","char"
"2467splitHere46","9467565splitHere46","Character"
"2468splitHere46","9467565splitHere46","Long"
"2469splitHere46","9467565splitHere46","'1'"
"2470splitHere46","9467565splitHere46","public boolean is<PropertyName>()"
"2471splitHere46","9467565splitHere46","public boolean isMarsupial();<newline46mondego>    public void setMarsupial(boolean m);<newline46mondego>"
"2472splitHere46","9467565splitHere46","A"
"2473splitHere46","9467565splitHere46","B"
"2474splitHere46","9467565splitHere46","Boolean"
"2475splitHere46","9467565splitHere46","A"
"2476splitHere46","9467565splitHere46","B"
"2477splitHere46","9467565splitHere46","Boolean"
"2478splitHere46","9467565splitHere46","isXxx()"
"2479splitHere46","9467671splitHere46","CountryName"
"2480splitHere46","9467671splitHere46","code"
"2481splitHere46","9467671splitHere46","InputSource"
"2482splitHere46","9467671splitHere46","Reader"
"2483splitHere46","9467671splitHere46","sax = factory.newSAXParser();<newline46mondego>try {<newline46mondego>  // Here I am using an InputSource wrapping a StringReader.<newline46mondego>  sax.parse(new InputSource(new StringReader(xml)), this);<newline46mondego>} catch (SAXException ex) {<newline46mondego>  log.warning(<doubleQuotes46>XMLParser failed on: <doubleQuotes46>+xml, ex);<newline46mondego>}<newline46mondego>"
"2484splitHere46","9467671splitHere46","new InputSource(new StringReader(xml))"
"2485splitHere46","9467694splitHere46","<p:inputText value=<doubleQuotes46>#{vacationschedule.convertTime(vacationschedule.selectedRow.startDate)}<doubleQuotes46>><newline46mondego>"
"2486splitHere46","9467694splitHere46","convertTime"
"2487splitHere46","9467694splitHere46","public String convertTime(Date time){ <newline46mondego>    Date date = new Date(); <newline46mondego>    Format format = new SimpleDateFormat(<doubleQuotes46>yyyy MM dd<doubleQuotes46>); <newline46mondego>    return format.format(date); <newline46mondego>} <newline46mondego>"
"2488splitHere46","9467694splitHere46","<p:inputText>"
"2489splitHere46","9467694splitHere46","<p:calendar>"
"2490splitHere46","9467694splitHere46","Date"
"2491splitHere46","9467694splitHere46","<f:convertDateTime>"
"2492splitHere46","9467694splitHere46","<p:inputText value=<doubleQuotes46>#{vacationschedule.selectedRow.startDate}<doubleQuotes46>><newline46mondego>    <f:convertDateTime pattern=<doubleQuotes46>yyyy MM dd<doubleQuotes46> /><newline46mondego></p:inputText><newline46mondego>"
"2493splitHere46","9467694splitHere46","Date"
"2494splitHere46","9467694splitHere46","<p:calendar>"
"2495splitHere46","9467694splitHere46","pattern"
"2496splitHere46","9467694splitHere46","<p:calendar value=<doubleQuotes46>#{vacationschedule.selectedRow.startDate}<doubleQuotes46> pattern=<doubleQuotes46>yyyy MM dd<doubleQuotes46> /><newline46mondego>"
"2497splitHere46","9467706splitHere46","List<Integer>"
"2498splitHere46","9467706splitHere46","int[][]"
"2499splitHere46","9467706splitHere46","(i, j)"
"2500splitHere46","9467706splitHere46","a2[i][j]"
"2501splitHere46","9467706splitHere46","(i, j)"
"2502splitHere46","9467706splitHere46","(k, l)"
"2503splitHere46","9467706splitHere46","int aux = a2[k][l];<newline46mondego>a2[k][l] = a[i][j]; // move value at first point to second point<newline46mondego>a2[i][j] = aux; // move value at second poin tof irst point<newline46mondego>"
"2504splitHere46","9467706splitHere46","(i, j)"
"2505splitHere46","9467706splitHere46","4*i+j"
"2506splitHere46","9467706splitHere46","4*i+j<newline46mondego>4*k+l<newline46mondego>"
"2507splitHere46","9467706splitHere46","Collections.swap(list, 4*i+j, 4*k+l);<newline46mondego>"
"2508splitHere46","9467706splitHere46","// at this point you only have a matrix: your `int a2[][]`<newline46mondego>// and the List will only exist for the shuffling<newline46mondego>// lets say that WIDTH HEIGHT exist and are int constants<newline46mondego><newline46mondego>List<Integer> tempList = new ArrayList<Integer>(WIDTH*HEIGHT);<newline46mondego>for (int i=0; i<HEIGHT; i++)<newline46mondego>   for (int j=0; j<WIDTH; j++)<newline46mondego>      list.add(a2[i][i]);<newline46mondego><newline46mondego>// now your integers are in the list and you can shuffle them<newline46mondego>Collections.shuffle(tempList);<newline46mondego><newline46mondego>// now give the numbers back to the matrix (as on your previous code)<newline46mondego>for (int i=0; i<HEIGHT; i++)<newline46mondego>   for (int j=0; j<WIDTH; j++)<newline46mondego>      a2[i][i] = list.get(i*WIDTH+j);<newline46mondego><newline46mondego>// and you can forget your tempList<newline46mondego>"
"2509splitHere46","9467706splitHere46","private void shuffle(int[][] matrix, int width, int height) {<newline46mondego>    List<Integer> tempList = new ArrayList<Integer>(width*height);<newline46mondego>    for (int i=0; i<height; i++)<newline46mondego>       for (int j=0; j<width; j++)<newline46mondego>          list.add(matrix[i][i]);<newline46mondego><newline46mondego>    // now your integers are in the list and you can shuffle them<newline46mondego>    Collections.shuffle(tempList);<newline46mondego><newline46mondego>    // now give the numbers back to the matrix (as on your previous code)<newline46mondego>    for (int i=0; i<height; i++)<newline46mondego>       for (int j=0; j<width; j++)<newline46mondego>          matrix[i][i] = tempList.get(i*width+j);<newline46mondego>}<newline46mondego>"
"2510splitHere46","9467706splitHere46","private List<Integer> toList(int[][] matrix, int width, int height) {<newline46mondego>    List<Integer> list = new ArrayList<Integer>(width*height);<newline46mondego>    for (int i=0; i<height; i++)<newline46mondego>       for (int j=0; j<width; j++)<newline46mondego>          list.add(matrix[i][i]);<newline46mondego>    return list;<newline46mondego>}<newline46mondego><newline46mondego>private int[][] toMatrix(List<Integer> list, int width, int height) {<newline46mondego>    // now give the numbers back to the matrix (as on your previous code)<newline46mondego>    int[][] result = new int[height][];<newline46mondego>    for (int i=0; i<height; i++) {<newline46mondego>       result[i] = new int[width];<newline46mondego>       for (int j=0; j<width; j++)<newline46mondego>          result[i][i] = list.get(i*width+j);<newline46mondego>    }<newline46mondego>    return result;<newline46mondego>}<newline46mondego><newline46mondego>private int[][] shuffle(int[][] matrix, int width, int height) {<newline46mondego>    List<Integer> tempList = toList(matrix, width, height);<newline46mondego>    // now your integers are in the list and you can shuffle them<newline46mondego>    Collections.shuffle(tempList);<newline46mondego>    return toMatrix(tempList, width, height); <newline46mondego><newline46mondego>}<newline46mondego>"
"2511splitHere46","9467792splitHere46","AS"
"2512splitHere46","9467950splitHere46","Dynamic Web Project"
"2513splitHere46","9467950splitHere46","Java Server Faces 2.0 Project"
"2514splitHere46","9467950splitHere46","Disable Library Configuration"
"2515splitHere46","9467977splitHere46","String myString = StringUtils.repeat(<doubleQuotes46>#<doubleQuotes46>, <doubleQuotes46>,<doubleQuotes46>, 5);<newline46mondego>"
"2516splitHere46","9467977splitHere46","String myString = StringUtils.repeat(<doubleQuotes46>#<doubleQuotes46>, 5);<newline46mondego>"
"2517splitHere46","9468154splitHere46","x == A, y == B<newline46mondego><newline46mondego>swap(x, y);<newline46mondego><newline46mondego>x == B, y == A<newline46mondego>"
"2518splitHere46","9468169splitHere46","IEditorPart editor = HandlerUtil.getActiveEditor(event);<newline46mondego>IFile file = editor.getAdapter(IFile.class);<newline46mondego>"
"2519splitHere46","9468529splitHere46","while(iterator.hasNext())<newline46mondego>{<newline46mondego>    SelectionKey key = iterator.next();<newline46mondego><newline46mondego>    channel.receive(buffer);     // The buffer is a ByteBuffer.<newline46mondego>    buffer.flip();<newline46mondego>    byte[] bytes = new byte[buffer.limit()];  // copy buffer contents to an array<newline46mondego>    buffer.get(bytes);<newline46mondego>    // thread will convert byte array to String<newline46mondego>    new Thread(new ThreadToPrintTheMessage(bytes)).start();<newline46mondego><newline46mondego>    buffer.clear();<newline46mondego><newline46mondego>    iterator.remove();<newline46mondego>}<newline46mondego>"
"2520splitHere46","9468642splitHere46","<javac>"
"2521splitHere46","9468642splitHere46","<copy todir=<doubleQuotes46>${temp}<doubleQuotes46>><newline46mondego>    <fileset dir=<doubleQuotes46>${src}<doubleQuotes46>><newline46mondego>        <include name=<doubleQuotes46>**/*.class<doubleQuotes46> /><newline46mondego>    </fileset><newline46mondego></copy><newline46mondego>"
"2522splitHere46","9468642splitHere46","src"
"2523splitHere46","9468642splitHere46","getResourceAsStream()"
"2524splitHere46","9468654splitHere46","<fieldType name=<doubleQuotes46>tint<doubleQuotes46> class=<doubleQuotes46>solr.TrieField<doubleQuotes46> type=<doubleQuotes46>integer<doubleQuotes46> indexed=<doubleQuotes46>true<doubleQuotes46> stored=<doubleQuotes46>false<doubleQuotes46> /><newline46mondego>"
"2525splitHere46","9468654splitHere46","SolrServer server = new CommonsHttpSolrServer(url);<newline46mondego><newline46mondego>SolrInputDocument document = new SolrInputDocument();<newline46mondego>document.addField(<doubleQuotes46>tint<doubleQuotes46>, 1);<newline46mondego><newline46mondego>server.add(document);<newline46mondego>server.commit();<newline46mondego>"
"2526splitHere46","9468700splitHere46","final SearchResponse response = client.prepareSearch(indexName)<newline46mondego>            .setSearchType(SearchType.DFS_QUERY_THEN_FETCH)<newline46mondego>            .setTypes(FEED_TYPE)<newline46mondego>            .setQuery(queryString(query).field(<doubleQuotes46>title<doubleQuotes46>).field(<doubleQuotes46>description<doubleQuotes46>).field(<doubleQuotes46>keywords<doubleQuotes46>))<newline46mondego>            .addHighlightedField(<doubleQuotes46>title<doubleQuotes46>, 0, 0)<newline46mondego>            .addHighlightedField(<doubleQuotes46>description<doubleQuotes46>, 0, 0)<newline46mondego>            .addFields(<doubleQuotes46>title<doubleQuotes46>, <doubleQuotes46>description<doubleQuotes46>, <doubleQuotes46>url<doubleQuotes46>, <doubleQuotes46>iconUrl<doubleQuotes46>, <doubleQuotes46>keywords<doubleQuotes46>)<newline46mondego>            .setSize(size)<newline46mondego>            .setFrom(start)<newline46mondego>            .execute().actionGet();<newline46mondego>"
"2527splitHere46","9468700splitHere46","response.hits().getAt(i).fields();<newline46mondego>"
"2528splitHere46","9468700splitHere46","response.hits().getAt(i).highlightFields();<newline46mondego>"
"2529splitHere46","9468875splitHere46","updateProgress()"
"2530splitHere46","9468875splitHere46","for (RequestThread rt : reqList.values()) {<newline46mondego>    // you can't make any changes to reqList inside of the loop<newline46mondego>    rt.updateProgress();<newline46mondego>}<newline46mondego>"
"2531splitHere46","9468875splitHere46","updateProgress()"
"2532splitHere46","9468875splitHere46","updateProgress()"
"2533splitHere46","9468875splitHere46","iterator.remove()"
"2534splitHere46","9468875splitHere46","List<RequestThread>"
"2535splitHere46","9468875splitHere46","updateProgress()"
"2536splitHere46","9468875splitHere46","reqList"
"2537splitHere46","9468996splitHere46","Socket.setTcpNoDelay(true)"
"2538splitHere46","9468998splitHere46","<authorizationEntry topic=<doubleQuotes46>><doubleQuotes46> write=<doubleQuotes46>producers<doubleQuotes46> read=<doubleQuotes46>consumers<doubleQuotes46> admin=<doubleQuotes46>admins<doubleQuotes46> /><newline46mondego>"
"2539splitHere46","9469030splitHere46","69 < temperature && temperature > 60<newline46mondego>"
"2540splitHere46","9469030splitHere46","69>temperature && temperature > 60<newline46mondego>"
"2541splitHere46","9469127splitHere46","JNDI"
"2542splitHere46","9469209splitHere46","public class MenuHelper {<newline46mondego><newline46mondego>    public static void build(Menu menu) {<newline46mondego>        menu.add(Menu.NONE, Key.Activity.LOGOUT, 0, R.string.label_logout)<newline46mondego>                .setIcon(android.R.drawable.ic_menu_close_clear_cancel);<newline46mondego>        menu.add(Menu.NONE, Key.Activity.FEEDBACK, 0,<newline46mondego>                com.bytebenderapps.dbitly.R.string.label_feedback).setIcon(<newline46mondego>                android.R.drawable.ic_menu_send);<newline46mondego>    }<newline46mondego><newline46mondego>    public static boolean onMenuItemSelected(int featureId, MenuItem item,<newline46mondego>            Context context) {<newline46mondego>        switch (item.getItemId()) {<newline46mondego>        case Key.Activity.LOGOUT:<newline46mondego><newline46mondego>            removeCredentials(context);<newline46mondego>            startLoginActiviy(context);<newline46mondego><newline46mondego>            break;<newline46mondego>        case Key.Activity.FEEDBACK:<newline46mondego><newline46mondego>            startFeedbackActivity(context);<newline46mondego><newline46mondego>            break;<newline46mondego>        }<newline46mondego><newline46mondego>        return true;<newline46mondego>    }<newline46mondego><newline46mondego>    private static void startLoginActiviy(Context context) {<newline46mondego>        Intent intent = new Intent(context, LoginActivity.class);<newline46mondego><newline46mondego>        context.startActivity(intent);<newline46mondego>    }<newline46mondego><newline46mondego>    private static void removeCredentials(Context context) {<newline46mondego>        Editor editor = PreferenceManager.getDefaultSharedPreferences(context)<newline46mondego>                .edit();<newline46mondego><newline46mondego>        editor.clear();<newline46mondego>        editor.commit();<newline46mondego>    }<newline46mondego><newline46mondego>    public static void toggleLogoff(Menu menu, boolean userLoggedIn) {<newline46mondego>        MenuItem item = menu.findItem(Key.Activity.LOGOUT);<newline46mondego><newline46mondego>        item.setEnabled(userLoggedIn);<newline46mondego>    }<newline46mondego><newline46mondego>    private static void startFeedbackActivity(Context context) {<newline46mondego>        context.startActivity(new Intent(context, FeedbackActivity.class));<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2543splitHere46","9469209splitHere46","public class MyActivity {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean onCreateOptionsMenu(Menu menu) {<newline46mondego>        MenuHelper.build(menu);<newline46mondego><newline46mondego>        return true;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean onMenuItemSelected(int featureId, MenuItem item) {<newline46mondego>        super.onMenuItemSelected(featureId, item);<newline46mondego><newline46mondego>        return MenuHelper.onMenuItemSelected(featureId, item, this);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"2544splitHere46","9469254splitHere46","Iterator.remove()"
"2545splitHere46","9469254splitHere46","for(String st: ar) {"
"2546splitHere46","9469254splitHere46","iterator.remove()"
"2547splitHere46","9469254splitHere46","ArrayList<String> ar = new ArrayList<String>();<newline46mondego>ar.add(<doubleQuotes46>a<doubleQuotes46>);<newline46mondego>ar.add(<doubleQuotes46>b<doubleQuotes46>);<newline46mondego>ar.add(<doubleQuotes46>c<doubleQuotes46>);<newline46mondego>ar.add(<doubleQuotes46>a<doubleQuotes46>);<newline46mondego>ar.add(<doubleQuotes46>e<doubleQuotes46>);<newline46mondego>Iterator<String> it = ar.iterator();<newline46mondego>while (it.hasNext()) {<newline46mondego>    String st = it.next();<newline46mondego>    System.out.println(<doubleQuotes46>st=<doubleQuotes46>+st);<newline46mondego>    if (st.equals(<doubleQuotes46>a<doubleQuotes46>)) {<newline46mondego>        it.remove();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2548splitHere46","9469260splitHere46","java.sql.Date"
"2549splitHere46","9469260splitHere46","java.util.Date"
"2550splitHere46","9469260splitHere46","new java.sql.Date(date.getTime())"
"2551splitHere46","9469269splitHere46","java.lang.Object"
"2552splitHere46","9469269splitHere46","methodResult"
"2553splitHere46","9469269splitHere46","MethodResult"
"2554splitHere46","9469269splitHere46","getType()"
"2555splitHere46","9469269splitHere46","getValueAsString()"
"2556splitHere46","9469269splitHere46","getValueAsList()"
"2557splitHere46","9469269splitHere46","getValueAsMap()"
"2558splitHere46","9469357splitHere46","Random rand = new Random();<newline46mondego>int value = rand.nextInt(328) * 100000;<newline46mondego>NumberFormat format = NumberFormat.getInstance();<newline46mondego>System.out.println(format.format(value));<newline46mondego>"
"2559splitHere46","9469377splitHere46","public class Test<newline46mondego>{<newline46mondego>    public static void main(String[] args) {<newline46mondego>        double a = Double.NaN;<newline46mondego>        double b = Double.NaN;<newline46mondego>        double c = 5;<newline46mondego><newline46mondego>        System.out.println(a < b);<newline46mondego>        System.out.println(a > b);<newline46mondego>        System.out.println(b < c);<newline46mondego>        System.out.println(c < b);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2560splitHere46","9469377splitHere46","false"
"2561splitHere46","9469398splitHere46","getExitStatus()"
"2562splitHere46","9469478splitHere46","mvn -U compile<newline46mondego>"
"2563splitHere46","9469488splitHere46","<T> WithOrWithoutExpectedArguments<T> when(Object instance, Method method) <newline46mondego>Expect calls to private methods.<newline46mondego><newline46mondego><newline46mondego>verifyPrivate(Object object, org.mockito.verification.VerificationMode verificationMode) <newline46mondego>      Verify a private method invocation with a given verification mode.<newline46mondego>"
"2564splitHere46","9469488splitHere46","import org.junit.Test;<newline46mondego>import org.junit.runner.RunWith;<newline46mondego>import org.powermock.api.mockito.PowerMockito;<newline46mondego>import org.powermock.core.classloader.annotations.PrepareForTest;<newline46mondego>import org.powermock.modules.junit4.PowerMockRunner;<newline46mondego><newline46mondego>import static org.mockito.Matchers.eq;<newline46mondego><newline46mondego>@RunWith(PowerMockRunner.class)<newline46mondego>@PrepareForTest(Foo.class)<newline46mondego>public class SimpleTest {<newline46mondego><newline46mondego>    @Test<newline46mondego>    public void testHello() throws Exception {<newline46mondego>        Foo foo = PowerMockito.spy(new Foo());<newline46mondego>        foo.sayHello();<newline46mondego>        PowerMockito.verifyPrivate(foo).invoke(<doubleQuotes46>hello<doubleQuotes46>, eq(<doubleQuotes46>User<doubleQuotes46>));<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class Foo {<newline46mondego>    public void sayHello() {<newline46mondego>        System.out.println(hello(<doubleQuotes46>User<doubleQuotes46>));<newline46mondego>    }<newline46mondego><newline46mondego>    private String hello(String user) {<newline46mondego>        return <doubleQuotes46>Hello <doubleQuotes46> + user;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2565splitHere46","9469577splitHere46",".properties"
"2566splitHere46","9469577splitHere46","java"
"2567splitHere46","9469577splitHere46","/usr/bin/java"
"2568splitHere46","9469618splitHere46","final ExpensiveCallResult nullableResult = object.expensiveCall();<newline46mondego>String name;<newline46mondego>if (nullableResult != null) {<newline46mondego>  name = nullableResult.getName();<newline46mondego>}<newline46mondego>"
"2569splitHere46","9469746splitHere46","JPanel"
"2570splitHere46","9469746splitHere46","GridLayout(2, 4)"
"2571splitHere46","9469746splitHere46","JPanel"
"2572splitHere46","9469746splitHere46","Border"
"2573splitHere46","9469751splitHere46","<class name=<doubleQuotes46>Firearm<doubleQuotes46> table=<doubleQuotes46>APP_JDO_FIREARMS<doubleQuotes46>><newline46mondego>        <inheritance strategy=<doubleQuotes46>new-table<doubleQuotes46>/><newline46mondego>        <field name=<doubleQuotes46>name<doubleQuotes46>/><newline46mondego><newline46mondego>         ...<newline46mondego>        <field name=<doubleQuotes46>bullets<doubleQuotes46> mapped-by=<doubleQuotes46>firearms<doubleQuotes46> table=<doubleQuotes46>APP_JDO_BULLET_FIREARM<doubleQuotes46>><newline46mondego>            <collection element-type=<doubleQuotes46>java.lang.Long<doubleQuotes46>/><newline46mondego>            <join><newline46mondego>                <column name=<doubleQuotes46>FIREARM_ID<doubleQuotes46>/><newline46mondego>            </join><newline46mondego>            <element><newline46mondego>                <column name=<doubleQuotes46>BULLET_ID<doubleQuotes46>/><newline46mondego>            </element><newline46mondego>        </field><newline46mondego>    </class><newline46mondego><newline46mondego>    <class name=<doubleQuotes46>Bullet<doubleQuotes46> table=<doubleQuotes46>APP_JDO_BULLETS<doubleQuotes46>><newline46mondego>        <inheritance strategy=<doubleQuotes46>new-table<doubleQuotes46>/><newline46mondego>        <field name=<doubleQuotes46>name<doubleQuotes46>/><newline46mondego><newline46mondego>        ...<newline46mondego>        <field name=<doubleQuotes46>firearms<doubleQuotes46> persistence-modifier=<doubleQuotes46>persistent<doubleQuotes46> mapped-by=<doubleQuotes46>bullets<doubleQuotes46> table=<doubleQuotes46>APP_JDO_BULLET_FIREARM<doubleQuotes46>><newline46mondego>            <collection element-type=<doubleQuotes46>java.lang.Long<doubleQuotes46>/><newline46mondego>            <join><newline46mondego>                <column name=<doubleQuotes46>BULLET_ID<doubleQuotes46>/><newline46mondego>            </join><newline46mondego>            <element><newline46mondego>                <column name=<doubleQuotes46>FIREARM_ID<doubleQuotes46>/><newline46mondego>            </element><newline46mondego>        </field><newline46mondego>    </class><newline46mondego>"
"2574splitHere46","9469756splitHere46","BeanPropertyRowMapper"
"2575splitHere46","9469756splitHere46","SELECT *"
"2576splitHere46","9469756splitHere46","RowMapper"
"2577splitHere46","9469797splitHere46","locale.equalsIgnoreCase(<doubleQuotes46>eng<doubleQuotes46>) || locale.equalsIgnoreCase(<doubleQuotes46>fra<doubleQuotes46>)<newline46mondego>"
"2578splitHere46","9469869splitHere46","private final List<String> list = Collections.synchronizedList(<newline46mondego>                                              new ArrayList<String>());<newline46mondego><newline46mondego>list.add(<doubleQuotes46>hello<doubleQuotes46>);<newline46mondego>String hi = list.remove(list.size()-1);<newline46mondego>"
"2579splitHere46","9469880splitHere46","Preferences"
"2580splitHere46","9470064splitHere46","if (a() && b());<newline46mondego>"
"2581splitHere46","9470064splitHere46","b()"
"2582splitHere46","9470064splitHere46","a()"
"2583splitHere46","9470064splitHere46","true"
"2584splitHere46","9470093splitHere46","// If the row exist in destination, push down all rows by 1 else create a new row<newline46mondego>if (newRow != null) {<newline46mondego>    worksheet.shiftRows(destinationRowNum, worksheet.getLastRowNum(), 1);<newline46mondego>} else {<newline46mondego>    newRow = worksheet.createRow(destinationRowNum);<newline46mondego>}<newline46mondego>"
"2585splitHere46","9470093splitHere46","newRow = worksheet.createRow(destinationRowNum);<newline46mondego>"
"2586splitHere46","9470165splitHere46","Collection"
"2587splitHere46","9470165splitHere46","public String getRandomString(){<newline46mondego>        Random r = new Random();<newline46mondego><newline46mondego>        int i = r.nextInt()%3;<newline46mondego><newline46mondego>        switch (i) {<newline46mondego>            case 0:<newline46mondego>                return one;<newline46mondego>            case 1:<newline46mondego>                return two;<newline46mondego>            case 2:<newline46mondego>                return three;<newline46mondego>            default:<newline46mondego>                break;<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego>"
"2588splitHere46","9470223splitHere46","D"
"2589splitHere46","9470241splitHere46","RecieptSystem"
"2590splitHere46","9470278splitHere46","roomheaters"
"2591splitHere46","9470278splitHere46","MarsRoom"
"2592splitHere46","9470278splitHere46","roomheaters[i] = new Heaters();<newline46mondego>// variables must be declared to be assigned<newline46mondego>"
"2593splitHere46","9470278splitHere46","room1.roomheaters[0]"
"2594splitHere46","9470315splitHere46","ScheduledExecutorService executorService = Executors.newScheduledThreadPool(1);<newline46mondego>executorService.scheduleWithFixedDelay(new Runnable() {<newline46mondego>            public void run() {<newline46mondego>              //put query logic here<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }, 10, 5, TimeUnit.MINUTES);<newline46mondego>"
"2595splitHere46","9470325splitHere46","Sets the current time and date based on a java.util.Date instance.<newline46mondego>The timezone offset used is based on the default TimeZone. (The default TimeZone is consulted to incorporate daylight savings offsets if applicable for the current date as well as the base timezone offset.)<newline46mondego>If you wish to normalize the timezone, e.g., to UTC, follow this with a call to normalizeToTimeZone.<newline46mondego>"
"2596splitHere46","9470325splitHere46","XmlDateTime xmlDateTime = XmlDateTime.Factory.newInstance();<newline46mondego>xmlDateTime.setStringValue(<doubleQuotes46>2002-10-10T12:00:00-05:00<doubleQuotes46>);<newline46mondego><newline46mondego>System.out.println(xmlDateTime.xmlText());<newline46mondego><newline46mondego>GDateBuilder gdb = new GDateBuilder(xmlDateTime.getDateValue());<newline46mondego>gdb.normalize();<newline46mondego>xmlDateTime.setGDateValue(gdb.toGDate());<newline46mondego><newline46mondego>System.out.println(xmlDateTime.xmlText());<newline46mondego>"
"2597splitHere46","9470325splitHere46","<xml-fragment>2002-10-10T12:00:00-05:00</xml-fragment><newline46mondego><xml-fragment>2002-10-10T17:00:00Z</xml-fragment><newline46mondego>"
"2598splitHere46","9470339splitHere46","import java.util.Arrays;<newline46mondego><newline46mondego>new HashSet<Integer>(Arrays.asList(1, 2, 3, 6))<newline46mondego>"
"2599splitHere46","9470424splitHere46","JToggleButton"
"2600splitHere46","9470424splitHere46","setIcon"
"2601splitHere46","9470424splitHere46","setSelectedIcon"
"2602splitHere46","9470424splitHere46","import java.awt.FlowLayout;<newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JToggleButton;<newline46mondego>import javax.swing.SwingUtilities;<newline46mondego>import javax.swing.UIManager;<newline46mondego><newline46mondego>final class JToggleButtonDemo {<newline46mondego>    public static final void main(final String[] args) {<newline46mondego>        SwingUtilities.invokeLater(new Runnable(){<newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                createAndShowGUI();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>    private static final void createAndShowGUI(){<newline46mondego>        final JFrame frame = new JFrame();<newline46mondego>        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        frame.setLayout(new FlowLayout()); // For presentation purposes only.<newline46mondego>        final JToggleButton button = new JToggleButton(UIManager.getIcon(<doubleQuotes46>OptionPane.informationIcon<doubleQuotes46>));<newline46mondego>        button.setSelectedIcon(UIManager.getIcon(<doubleQuotes46>OptionPane.errorIcon<doubleQuotes46>));<newline46mondego>        frame.add(button);<newline46mondego>        frame.pack();<newline46mondego>        frame.setLocationRelativeTo(null);<newline46mondego>        frame.setVisible(true);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2603splitHere46","9470645splitHere46","ConnRoutePNames.LOCAL_ADDRESS"
"2604splitHere46","9470655splitHere46","myListView.setOnItemClickListener(new OnItemClickListener() {<newline46mondego>        public void onItemClick(AdapterView parent, View view, int position, long id) {<newline46mondego>                String item = (String) myListView.getAdapter().getItem(position);<newline46mondego><newline46mondego>                Intent intent = new Intent(getBaseContext(), MyActivity.class);<newline46mondego>                intent.putExtras(<doubleQuotes46>name<doubleQuotes46>, item);<newline46mondego>                startActivity(intent);<newline46mondego>        }<newline46mondego>    });<newline46mondego>"
"2605splitHere46","9470655splitHere46","position"
"2606splitHere46","9470655splitHere46","Intent"
"2607splitHere46","9470655splitHere46","Activity"
"2608splitHere46","9470655splitHere46","putExtra"
"2609splitHere46","9470663splitHere46","#{generate.viewReportPDF}"
"2610splitHere46","9470663splitHere46","#{Generate.viewReportPDF}"
"2611splitHere46","9470663splitHere46","@ManagedBean"
"2612splitHere46","9470663splitHere46","@ManagedBean(name=<doubleQuotes46>Generate<doubleQuotes46>)<newline46mondego>@SessionScoped<newline46mondego>public class Generate {<newline46mondego>"
"2613splitHere46","9470663splitHere46","@SessionScoped"
"2614splitHere46","9470663splitHere46","faces-config.xml"
"2615splitHere46","9470726splitHere46","class ValueComparator implements Comparator<Object> {<newline46mondego><newline46mondego>Map<String, Integer> base;<newline46mondego><newline46mondego>public ValueComparator(Map<String, Integer> base) {<newline46mondego>    this.base = base;<newline46mondego>}<newline46mondego><newline46mondego>public int compare(Object a, Object b) {<newline46mondego><newline46mondego>    if (((Integer) base.get(a)).intValue() < ((Integer) base.get(b)).intValue()) {<newline46mondego>        return 1;<newline46mondego>    } else if ( ((Integer) base.get(a)).intValue() == ((Integer) base.get(b)).intValue()) {<newline46mondego>        return ((String)a).compareTo(((String)b));<newline46mondego>    } else {<newline46mondego>        return -1;<newline46mondego>    }<newline46mondego>}<newline46mondego>}<newline46mondego>"
"2616splitHere46","9470765splitHere46","BufferedWriter out;<newline46mondego>try {<newline46mondego>    out = new BufferedWriter(new FileWriter(<doubleQuotes46>out.txt<doubleQuotes46>));<newline46mondego>    out.write(<doubleQuotes46>aString<doubleQuotes46>);<newline46mondego>} catch (IOException e) {<newline46mondego>    throw new RuntimeException(e);    <newline46mondego>} finally {<newline46mondego>    if (out != null) {<newline46mondego>        try { out.close(); } catch (IOException e) {}<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2617splitHere46","9470830splitHere46","Class Cls = ... ;<newline46mondego>cls.getField(<doubleQuotes46>xyz<doubleQuotes46>).getAnnotation(ManyToMany.class).mappedBy<newline46mondego>"
"2618splitHere46","9470886splitHere46","BigClip"
"2619splitHere46","9470886splitHere46","mp3plugin.jar"
"2620splitHere46","9470886splitHere46","BigClip"
"2621splitHere46","9470886splitHere46","OutOfMemoryError"
"2622splitHere46","9470886splitHere46","import java.awt.Component;<newline46mondego>import javax.swing.*;<newline46mondego>import javax.sound.sampled.*;<newline46mondego>import java.io.*;<newline46mondego>import java.util.logging.*;<newline46mondego>import java.util.Arrays;<newline46mondego><newline46mondego>import java.net.URL;<newline46mondego>import javax.swing.JOptionPane;<newline46mondego><newline46mondego>class BigClipExample {<newline46mondego><newline46mondego>    public static void main(String[] args) throws Exception {<newline46mondego>        URL url = new URL(<doubleQuotes46>http://pscode.org/media/leftright.wav<doubleQuotes46>);<newline46mondego>        BigClip clip = new BigClip();<newline46mondego>        AudioInputStream ais = AudioSystem.getAudioInputStream(url);<newline46mondego>        clip.open(ais);<newline46mondego>        clip.start();<newline46mondego>        JOptionPane.showMessageDialog(null, <doubleQuotes46>BigClip.start()<doubleQuotes46>);<newline46mondego>        clip.loop(4);<newline46mondego>        JOptionPane.showMessageDialog(null, <doubleQuotes46>BigClip.loop(4)<doubleQuotes46>);<newline46mondego>        clip.setFastForward(true);<newline46mondego>        clip.loop(8);<newline46mondego>        // the looping/FF combo. reveals a bug..<newline46mondego>        // there is a slight 'click' in the sound that should not be audible<newline46mondego>        JOptionPane.showMessageDialog(null, <doubleQuotes46>Are you on speed?<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>/** An implementation of the javax.sound.sampled.Clip that is designed<newline46mondego>to handle Clips of arbitrary size, limited only by the amount of memory<newline46mondego>available to the app.    It uses the post 1.4 thread behaviour (daemon thread)<newline46mondego>that will stop the sound running after the main has exited.<newline46mondego><ul><newline46mondego><li>2012-02-29 - Reworked play/loop to fix several bugs.<newline46mondego><li>2009-09-01 - Fixed bug that had clip ..clipped at the end, by calling drain() (before<newline46mondego>calling stop()) on the dataline after the play loop was complete. Improvement to frame<newline46mondego>and microsecond position determination.<newline46mondego><li>2009-08-17 - added convenience constructor that accepts a Clip. Changed the private<newline46mondego>convertFrameToM..seconds methods from 'micro' to 'milli' to reflect that they were dealing<newline46mondego>with units of 1000/th of a second.<newline46mondego><li>2009-08-14 - got rid of flush() after the sound loop, as it was cutting off tracks just<newline46mondego>before the end, and was found to be not needed for the fast-forward/rewind functionality it<newline46mondego>was introduced to support.<newline46mondego><li>2009-08-11 - First binary release.<newline46mondego></ul><newline46mondego>N.B. Remove @Override notation and logging to use in 1.3+<newline46mondego>@since 1.5<newline46mondego>@version 2012-02-29<newline46mondego>@author Andrew Thompson <newline46mondego>@author Alejandro Garcia */<newline46mondego>class BigClip implements Clip, LineListener {<newline46mondego><newline46mondego>    /** The DataLine used by this Clip. */<newline46mondego>    private SourceDataLine dataLine;<newline46mondego><newline46mondego>    /** The raw bytes of the audio data. */<newline46mondego>    private byte[] audioData;<newline46mondego><newline46mondego>    /** The stream wrapper for the audioData. */<newline46mondego>    private ByteArrayInputStream inputStream;<newline46mondego><newline46mondego>    /** Loop count set by the calling code. */<newline46mondego>    private int loopCount = 1;<newline46mondego>    /** Internal count of how many loops to go. */<newline46mondego>    private int countDown = 1;<newline46mondego>    /** The start of a loop point.    Defaults to 0. */<newline46mondego>    private int loopPointStart;<newline46mondego>    /** The end of a loop point.    Defaults to the end of the Clip. */<newline46mondego>    private int loopPointEnd;<newline46mondego><newline46mondego>    /** Stores the current frame position of the clip. */<newline46mondego>    private int framePosition;<newline46mondego><newline46mondego>    /** Thread used to run() sound. */<newline46mondego>    private Thread thread;<newline46mondego>    /** Whether the sound is currently playing or active. */<newline46mondego>    private boolean active;<newline46mondego>    /** Stores the last time bytes were dumped to the audio stream. */<newline46mondego>    private long timelastPositionSet;<newline46mondego><newline46mondego>    private int bufferUpdateFactor = 2;<newline46mondego><newline46mondego>    /** The parent Component for the loading progress dialog.    */<newline46mondego>    Component parent = null;<newline46mondego><newline46mondego>    /** Used for reporting messages. */<newline46mondego>    private Logger logger = Logger.getAnonymousLogger();<newline46mondego><newline46mondego>    /** Default constructor for a BigClip.    Does nothing.    Information from the<newline46mondego>    AudioInputStream passed in open() will be used to get an appropriate SourceDataLine. */<newline46mondego>    public BigClip() {}<newline46mondego><newline46mondego>    /** There are a number of AudioSystem methods that will return a configured Clip.    This<newline46mondego>    convenience constructor allows us to obtain a SourceDataLine for the BigClip that uses<newline46mondego>    the same AudioFormat as the original Clip.<newline46mondego>    @param clip Clip The Clip used to configure the BigClip. */<newline46mondego>    public BigClip(Clip clip) throws LineUnavailableException {<newline46mondego>        dataLine = AudioSystem.getSourceDataLine( clip.getFormat() );<newline46mondego>    }<newline46mondego><newline46mondego>    /** Provides the entire audio buffer of this clip.<newline46mondego>    @return audioData byte[] The bytes of the audio data that is loaded in this Clip. */<newline46mondego>    public byte[] getAudioData() {<newline46mondego>        return audioData;<newline46mondego>    }<newline46mondego><newline46mondego>    /** Sets a parent component to act as owner of a <doubleQuotes46>Loading track..<doubleQuotes46> progress dialog.<newline46mondego>    If null, there will be no progress shown. */<newline46mondego>    public void setParentComponent(Component parent) {<newline46mondego>        this.parent = parent;<newline46mondego>    }<newline46mondego><newline46mondego>    /** Converts a frame count to a duration in milliseconds. */<newline46mondego>    private long convertFramesToMilliseconds(int frames) {<newline46mondego>        return (frames/(long)dataLine.getFormat().getSampleRate())*1000;<newline46mondego>    }<newline46mondego><newline46mondego>    /** Converts a duration in milliseconds to a frame count. */<newline46mondego>    private int convertMillisecondsToFrames(long milliseconds) {<newline46mondego>        return (int)(milliseconds/dataLine.getFormat().getSampleRate());<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void update(LineEvent le) {<newline46mondego>        logger.log(Level.FINEST, <doubleQuotes46>update: <doubleQuotes46> + le );<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void loop(int count) {<newline46mondego>        logger.log(Level.FINEST, <doubleQuotes46>loop(<doubleQuotes46> + count + <doubleQuotes46>) - framePosition: <doubleQuotes46> + framePosition);<newline46mondego>        loopCount = count;<newline46mondego>        countDown = count;<newline46mondego>        active = true;<newline46mondego>        inputStream.reset();<newline46mondego><newline46mondego>        start();<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void setLoopPoints(int start, int end) {<newline46mondego>        if (<newline46mondego>            start<0 ||<newline46mondego>            start>audioData.length-1 ||<newline46mondego>            end<0 ||<newline46mondego>            end>audioData.length<newline46mondego>            ) {<newline46mondego>            throw new IllegalArgumentException(<newline46mondego>                <doubleQuotes46>Loop points '<doubleQuotes46> +<newline46mondego>                start +<newline46mondego>                <doubleQuotes46>' and '<doubleQuotes46> +<newline46mondego>                end +<newline46mondego>                <doubleQuotes46>' cannot be set for buffer of size <doubleQuotes46> +<newline46mondego>                audioData.length);<newline46mondego>        }<newline46mondego>        if (start>end) {<newline46mondego>            throw new IllegalArgumentException(<newline46mondego>                <doubleQuotes46>End position <doubleQuotes46> +<newline46mondego>                end +<newline46mondego>                <doubleQuotes46> preceeds start position <doubleQuotes46> + start);<newline46mondego>        }<newline46mondego><newline46mondego>        loopPointStart = start;<newline46mondego>        framePosition = loopPointStart;<newline46mondego>        loopPointEnd = end;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void setMicrosecondPosition(long milliseconds) {<newline46mondego>        framePosition = convertMillisecondsToFrames(milliseconds);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public long getMicrosecondPosition() {<newline46mondego>        return convertFramesToMilliseconds(getFramePosition());<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public long getMicrosecondLength() {<newline46mondego>        return convertFramesToMilliseconds(getFrameLength());<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void setFramePosition(int frames) {<newline46mondego>        framePosition = frames;<newline46mondego>        int offset = framePosition*format.getFrameSize();<newline46mondego>        try {<newline46mondego>            inputStream.reset();<newline46mondego>            inputStream.read(new byte[offset]);<newline46mondego>        } catch(Exception e) {<newline46mondego>            e.printStackTrace();<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public int getFramePosition() {<newline46mondego>        long timeSinceLastPositionSet = System.currentTimeMillis() - timelastPositionSet;<newline46mondego>        int size = dataLine.getBufferSize()*(format.getChannels()/2)/bufferUpdateFactor;<newline46mondego>        int framesSinceLast = (int)((timeSinceLastPositionSet/1000f)*<newline46mondego>            dataLine.getFormat().getFrameRate());<newline46mondego>        int framesRemainingTillTime = size - framesSinceLast;<newline46mondego>        return framePosition<newline46mondego>            - framesRemainingTillTime;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public int getFrameLength() {<newline46mondego>        return audioData.length/format.getFrameSize();<newline46mondego>    }<newline46mondego><newline46mondego>    AudioFormat format;<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void open(AudioInputStream stream) throws<newline46mondego>        IOException,<newline46mondego>        LineUnavailableException {<newline46mondego><newline46mondego>        AudioInputStream is1;<newline46mondego>        format = stream.getFormat();<newline46mondego><newline46mondego>        if (format.getEncoding()!=AudioFormat.Encoding.PCM_SIGNED) {<newline46mondego>            is1 = AudioSystem.getAudioInputStream(<newline46mondego>                AudioFormat.Encoding.PCM_SIGNED, stream );<newline46mondego>        } else {<newline46mondego>            is1 = stream;<newline46mondego>        }<newline46mondego>        format = is1.getFormat();<newline46mondego>        InputStream is2;<newline46mondego>        if (parent!=null) {<newline46mondego>            ProgressMonitorInputStream pmis = new ProgressMonitorInputStream(<newline46mondego>                parent,<newline46mondego>                <doubleQuotes46>Loading track..<doubleQuotes46>,<newline46mondego>                is1);<newline46mondego>            pmis.getProgressMonitor().setMillisToPopup(0);<newline46mondego>            is2 = pmis;<newline46mondego>        } else {<newline46mondego>            is2 = is1;<newline46mondego>        }<newline46mondego><newline46mondego>        byte[] buf = new byte[ 2^16 ];<newline46mondego>        int totalRead = 0;<newline46mondego>        int numRead = 0;<newline46mondego>        ByteArrayOutputStream baos = new ByteArrayOutputStream();<newline46mondego>        numRead = is2.read( buf );<newline46mondego>        while (numRead>-1) {<newline46mondego>            baos.write( buf, 0, numRead );<newline46mondego>            numRead = is2.read( buf, 0, buf.length );<newline46mondego>            totalRead += numRead;<newline46mondego>        }<newline46mondego>        is2.close();<newline46mondego>        audioData = baos.toByteArray();<newline46mondego>        AudioFormat afTemp;<newline46mondego>        if (format.getChannels()<2) {<newline46mondego>            afTemp = new AudioFormat(<newline46mondego>                format.getEncoding(),<newline46mondego>                format.getSampleRate(),<newline46mondego>                format.getSampleSizeInBits(),<newline46mondego>                2,<newline46mondego>                format.getSampleSizeInBits()*2/8, // calculate frame size<newline46mondego>                format.getFrameRate(),<newline46mondego>                format.isBigEndian()<newline46mondego>                );<newline46mondego>        } else {<newline46mondego>            afTemp = format;<newline46mondego>        }<newline46mondego><newline46mondego>        setLoopPoints(0,audioData.length);<newline46mondego>        dataLine = AudioSystem.getSourceDataLine(afTemp);<newline46mondego>        dataLine.open();<newline46mondego>        inputStream = new ByteArrayInputStream( audioData );<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void open(AudioFormat format,<newline46mondego>        byte[] data,<newline46mondego>        int offset,<newline46mondego>        int bufferSize)<newline46mondego>        throws LineUnavailableException {<newline46mondego>        byte[] input = new byte[bufferSize];<newline46mondego>        for (int ii=0; ii<input.length; ii++) {<newline46mondego>            input[ii] = data[offset+ii];<newline46mondego>        }<newline46mondego>        ByteArrayInputStream inputStream = new ByteArrayInputStream(input);<newline46mondego>        try {<newline46mondego>            AudioInputStream ais1 = AudioSystem.getAudioInputStream(inputStream);<newline46mondego>            AudioInputStream ais2 = AudioSystem.getAudioInputStream(format, ais1);<newline46mondego>            open(ais2);<newline46mondego>        } catch( UnsupportedAudioFileException uafe ) {<newline46mondego>            throw new IllegalArgumentException(uafe);<newline46mondego>        } catch( IOException ioe ) {<newline46mondego>            throw new IllegalArgumentException(ioe);<newline46mondego>        }<newline46mondego>        // TODO    -    throw IAE for invalid frame size, format.<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public float getLevel() {<newline46mondego>        return dataLine.getLevel();<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public long getLongFramePosition() {<newline46mondego>        return dataLine.getLongFramePosition()*2/format.getChannels();<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public int available() {<newline46mondego>        return dataLine.available();<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public int getBufferSize() {<newline46mondego>        return dataLine.getBufferSize();<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public AudioFormat getFormat() {<newline46mondego>        return format;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean isActive() {<newline46mondego>        return dataLine.isActive();<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean isRunning() {<newline46mondego>        return dataLine.isRunning();<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean isOpen() {<newline46mondego>        return dataLine.isOpen();<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void stop() {<newline46mondego>        logger.log(Level.FINEST, <doubleQuotes46>BigClip.stop()<doubleQuotes46>);<newline46mondego>        active = false;<newline46mondego>        // why did I have this commented out?<newline46mondego>        dataLine.stop();<newline46mondego>        if (thread!=null) {<newline46mondego>            try {<newline46mondego>                active = false;<newline46mondego>                thread.join();<newline46mondego>            } catch(InterruptedException wakeAndContinue) {<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public byte[] convertMonoToStereo(byte[] data, int bytesRead) {<newline46mondego>        byte[] tempData = new byte[bytesRead*2];<newline46mondego>        if (format.getSampleSizeInBits()==8) {<newline46mondego>            for(int ii=0; ii<bytesRead; ii++) {<newline46mondego>                byte b = data[ii];<newline46mondego>                tempData[ii*2] = b;<newline46mondego>                tempData[ii*2+1] = b;<newline46mondego>            }<newline46mondego>        } else {<newline46mondego>            for(int ii=0; ii<bytesRead-1; ii+=2) {<newline46mondego>                //byte b2 = is2.read();<newline46mondego>                byte b1 = data[ii];<newline46mondego>                byte b2 = data[ii+1];<newline46mondego>                tempData[ii*2] = b1;<newline46mondego>                tempData[ii*2+1] = b2;<newline46mondego>                tempData[ii*2+2] = b1;<newline46mondego>                tempData[ii*2+3] = b2;<newline46mondego>            }<newline46mondego>        }<newline46mondego>        return tempData;<newline46mondego>    }<newline46mondego><newline46mondego>    boolean fastForward;<newline46mondego>    boolean fastRewind;<newline46mondego><newline46mondego>    public void setFastForward(boolean fastForward) {<newline46mondego>        logger.log(Level.FINEST, <doubleQuotes46>FastForward <doubleQuotes46> + fastForward);<newline46mondego>        this.fastForward = fastForward;<newline46mondego>        fastRewind = false;<newline46mondego>        flush();<newline46mondego>    }<newline46mondego><newline46mondego>    public boolean getFastForward() {<newline46mondego>        return fastForward;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setFastRewind(boolean fastRewind) {<newline46mondego>        logger.log(Level.FINEST, <doubleQuotes46>FastRewind <doubleQuotes46> + fastRewind);<newline46mondego>        this.fastRewind = fastRewind;<newline46mondego>        fastForward = false;<newline46mondego>        flush();<newline46mondego>    }<newline46mondego><newline46mondego>    public boolean getFastRewind() {<newline46mondego>        return fastRewind;<newline46mondego>    }<newline46mondego><newline46mondego>    /** TODO - fix bug in LOOP_CONTINUOUSLY */<newline46mondego>    @Override<newline46mondego>    public void start() {<newline46mondego>        Runnable r = new Runnable() {<newline46mondego>            public void run() {<newline46mondego>                try {<newline46mondego>                    /* Should these open()/close() calls be here, or explicitly<newline46mondego>                    called by user program?    The JavaDocs for line suggest that<newline46mondego>                    Clip should throw an IllegalArgumentException, so we'll<newline46mondego>                    stick with that and call it explicitly. */<newline46mondego>                    dataLine.open();<newline46mondego><newline46mondego>                    dataLine.start();<newline46mondego><newline46mondego>                    active = true;<newline46mondego><newline46mondego>                    int bytesRead = 0;<newline46mondego>                    int frameSize = dataLine.getFormat().getFrameSize();<newline46mondego>                    int bufSize = dataLine.getBufferSize();<newline46mondego>                    boolean startOrMove = true;<newline46mondego>                    byte[] data = new byte[bufSize];<newline46mondego>                    int offset = framePosition*frameSize;<newline46mondego>                    int totalBytes = offset;<newline46mondego>                    bytesRead = inputStream.read(new byte[offset], 0, offset);<newline46mondego>                    logger.log(Level.FINE, <doubleQuotes46>bytesRead <doubleQuotes46> + bytesRead );<newline46mondego>                    bytesRead = inputStream.read(data,0,data.length);<newline46mondego><newline46mondego>                    logger.log(Level.FINE, <doubleQuotes46>loopCount <doubleQuotes46> + loopCount );<newline46mondego>                    logger.log(Level.FINE, <doubleQuotes46>countDown <doubleQuotes46> + countDown );<newline46mondego>                    logger.log(Level.FINE, <doubleQuotes46>bytesRead <doubleQuotes46> + bytesRead );<newline46mondego><newline46mondego>                    while (bytesRead != -1 &&<newline46mondego>                        (loopCount==Clip.LOOP_CONTINUOUSLY ||<newline46mondego>                        countDown>0) &&<newline46mondego>                        active ) {<newline46mondego>                        logger.log(Level.FINEST,<newline46mondego>                            <doubleQuotes46>BigClip.start() loop <doubleQuotes46> + framePosition );<newline46mondego>                        totalBytes += bytesRead;<newline46mondego>                        int framesRead;<newline46mondego>                        byte[] tempData;<newline46mondego>                        if (format.getChannels()<2) {<newline46mondego>                            tempData = convertMonoToStereo(data, bytesRead);<newline46mondego>                            framesRead = bytesRead/<newline46mondego>                                format.getFrameSize();<newline46mondego>                            bytesRead*=2;<newline46mondego>                        } else {<newline46mondego>                            framesRead = bytesRead/<newline46mondego>                                dataLine.getFormat().getFrameSize();<newline46mondego>                            tempData = Arrays.copyOfRange(data, 0, bytesRead);<newline46mondego>                        }<newline46mondego>                        framePosition += framesRead;<newline46mondego>                        if (framePosition>=loopPointEnd) {<newline46mondego>                            framePosition = loopPointStart;<newline46mondego>                            inputStream.reset();<newline46mondego>                            countDown--;<newline46mondego>                            logger.log(Level.FINEST,<newline46mondego>                                <doubleQuotes46>Loop Count: <doubleQuotes46> + countDown );<newline46mondego>                        }<newline46mondego>                        timelastPositionSet = System.currentTimeMillis();<newline46mondego>                        byte[] newData;<newline46mondego>                        if (fastForward) {<newline46mondego>                            newData = getEveryNthFrame(tempData, 2);<newline46mondego>                        } else if (fastRewind) {<newline46mondego>                            byte[] temp = getEveryNthFrame(tempData, 2);<newline46mondego>                            newData = reverseFrames(temp);<newline46mondego>                            inputStream.reset();<newline46mondego>                            totalBytes -= 2*bytesRead;<newline46mondego>                        framePosition -= 2*framesRead;<newline46mondego>                            if (totalBytes<0) {<newline46mondego>                                setFastRewind(false);<newline46mondego>                                totalBytes = 0;<newline46mondego>                            }<newline46mondego>                            inputStream.skip(totalBytes);<newline46mondego>                            logger.log(Level.FINE, <doubleQuotes46>totalBytes <doubleQuotes46> + totalBytes);<newline46mondego>                        } else {<newline46mondego>                            newData = tempData;<newline46mondego>                        }<newline46mondego>                        dataLine.write(newData, 0, newData.length);<newline46mondego>                        if (startOrMove) {<newline46mondego>                            data = new byte[bufSize/<newline46mondego>                                bufferUpdateFactor];<newline46mondego>                            startOrMove = false;<newline46mondego>                        }<newline46mondego>                        bytesRead = inputStream.read(data,0,data.length);<newline46mondego>                        if (bytesRead<0 && countDown-->1) {<newline46mondego>                            inputStream.read(new byte[offset], 0, offset);<newline46mondego>                            logger.log(Level.FINE, <doubleQuotes46>loopCount <doubleQuotes46> + loopCount );<newline46mondego>                            logger.log(Level.FINE, <doubleQuotes46>countDown <doubleQuotes46> + countDown );<newline46mondego>                            inputStream.reset();<newline46mondego>                            bytesRead = inputStream.read(data,0,data.length);<newline46mondego>                        }<newline46mondego>                    }<newline46mondego>                    logger.log(Level.FINEST,<newline46mondego>                        <doubleQuotes46>BigClip.start() loop ENDED<doubleQuotes46> + framePosition );<newline46mondego>                    active = false;<newline46mondego>                    countDown = 1;<newline46mondego>                    framePosition = 0;<newline46mondego>                    inputStream.reset();<newline46mondego>                    dataLine.drain();<newline46mondego>                    dataLine.stop();<newline46mondego>                    /* should these open()/close() be here, or explicitly<newline46mondego>                    called by user program? */<newline46mondego>                    dataLine.close();<newline46mondego>                } catch (LineUnavailableException lue) {<newline46mondego>                    logger.log( Level.SEVERE,<newline46mondego>                        <doubleQuotes46>No sound line available!<doubleQuotes46>, lue );<newline46mondego>                    if (parent!=null) {<newline46mondego>                        JOptionPane.showMessageDialog(<newline46mondego>                            parent,<newline46mondego>                            <doubleQuotes46>Clear the sound lines to proceed<doubleQuotes46>,<newline46mondego>                            <doubleQuotes46>No audio lines available!<doubleQuotes46>,<newline46mondego>                            JOptionPane.ERROR_MESSAGE);<newline46mondego>                    }<newline46mondego>                }<newline46mondego>            }<newline46mondego>        };<newline46mondego>        thread= new Thread(r);<newline46mondego>        // makes thread behaviour compatible with JavaSound post 1.4<newline46mondego>        thread.setDaemon(true);<newline46mondego>        thread.start();<newline46mondego>    }<newline46mondego><newline46mondego>    /** Assume the frame size is 4. */<newline46mondego>    public byte[] reverseFrames(byte[] data) {<newline46mondego>        byte[] reversed = new byte[data.length];<newline46mondego>        byte[] frame = new byte[4];<newline46mondego><newline46mondego>        for (int ii=0; ii<data.length/4; ii++) {<newline46mondego>            int first = (data.length)-((ii+1)*4)+0;<newline46mondego>            int last = (data.length)-((ii+1)*4)+3;<newline46mondego>            frame[0] = data[first];<newline46mondego>            frame[1] = data[(data.length)-((ii+1)*4)+1];<newline46mondego>            frame[2] = data[(data.length)-((ii+1)*4)+2];<newline46mondego>            frame[3] = data[last];<newline46mondego><newline46mondego>            reversed[ii*4+0] = frame[0];<newline46mondego>            reversed[ii*4+1] = frame[1];<newline46mondego>            reversed[ii*4+2] = frame[2];<newline46mondego>            reversed[ii*4+3] = frame[3];<newline46mondego>            if (ii<5 || ii>(data.length/4)-5) {<newline46mondego>                logger.log(Level.FINER, <doubleQuotes46>From \t<doubleQuotes46> + first + <doubleQuotes46> \tlast <doubleQuotes46> + last );<newline46mondego>                logger.log(Level.FINER, <doubleQuotes46>To \t<doubleQuotes46> + ((ii*4)+0) + <doubleQuotes46> \tlast <doubleQuotes46> + ((ii*4)+3) );<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>/*<newline46mondego>        for (int ii=0; ii<data.length; ii++) {<newline46mondego>            reversed[ii] = data[data.length-1-ii];<newline46mondego>        }<newline46mondego>*/<newline46mondego><newline46mondego>        return reversed;<newline46mondego>    }<newline46mondego><newline46mondego>    /** Assume the frame size is 4. */<newline46mondego>    public byte[] getEveryNthFrame(byte[] data, int skip) {<newline46mondego>        int length = data.length/skip;<newline46mondego>        length = (length/4)*4;<newline46mondego>        logger.log(Level.FINEST, <doubleQuotes46>length <doubleQuotes46> + data.length + <doubleQuotes46> \t<doubleQuotes46> + length);<newline46mondego>        byte[] b = new byte[length];<newline46mondego>        //byte[] frame = new byte[4];<newline46mondego>        for (int ii=0; ii<b.length/4; ii++) {<newline46mondego>            b[ii*4+0] = data[ii*skip*4+0];<newline46mondego>            b[ii*4+1] = data[ii*skip*4+1];<newline46mondego>            b[ii*4+2] = data[ii*skip*4+2];<newline46mondego>            b[ii*4+3] = data[ii*skip*4+3];<newline46mondego>        }<newline46mondego>        return b;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void flush() {<newline46mondego>        dataLine.flush();<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void drain() {<newline46mondego>        dataLine.drain();<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void removeLineListener(LineListener listener) {<newline46mondego>        dataLine.removeLineListener(listener);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void addLineListener(LineListener listener) {<newline46mondego>        dataLine.addLineListener(listener);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Control getControl(Control.Type control) {<newline46mondego>        return dataLine.getControl(control);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Control[] getControls() {<newline46mondego>        if (dataLine==null) {<newline46mondego>            return new Control[0];<newline46mondego>        } else {<newline46mondego>            return dataLine.getControls();<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean isControlSupported(Control.Type control) {<newline46mondego>        return dataLine.isControlSupported(control);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void close() {<newline46mondego>        dataLine.close();<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void open() throws LineUnavailableException {<newline46mondego>        throw new IllegalArgumentException(<doubleQuotes46>illegal call to open() in interface Clip<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Line.Info getLineInfo() {<newline46mondego>        return dataLine.getLineInfo();<newline46mondego>    }<newline46mondego><newline46mondego>    /** Determines the single largest sample size of all channels of the current clip.<newline46mondego>    This can be handy for determining a fraction to scal visual representations.<newline46mondego>    @return Double between 0 & 1 representing the maximum signal level of any channel. */<newline46mondego>    public double getLargestSampleSize() {<newline46mondego><newline46mondego>        int largest = 0;<newline46mondego>        int current;<newline46mondego><newline46mondego>        boolean signed = (format.getEncoding()==AudioFormat.Encoding.PCM_SIGNED);<newline46mondego>        int bitDepth = format.getSampleSizeInBits();<newline46mondego>        boolean bigEndian = format.isBigEndian();<newline46mondego><newline46mondego>        int samples = audioData.length*8/bitDepth;<newline46mondego><newline46mondego>        if (signed) {<newline46mondego>            if (bitDepth/8==2) {<newline46mondego>                if (bigEndian) {<newline46mondego>                    for (int cc = 0; cc < samples; cc++) {<newline46mondego>                        current = (audioData[cc*2]*256 + (audioData[cc*2+1] & 0xFF));<newline46mondego>                        if (Math.abs(current)>largest) {<newline46mondego>                            largest = Math.abs(current);<newline46mondego>                        }<newline46mondego>                    }<newline46mondego>                } else {<newline46mondego>                    for (int cc = 0; cc < samples; cc++) {<newline46mondego>                        current = (audioData[cc*2+1]*256 + (audioData[cc*2] & 0xFF));<newline46mondego>                        if (Math.abs(current)>largest) {<newline46mondego>                            largest = Math.abs(current);<newline46mondego>                        }<newline46mondego>                    }<newline46mondego>                }<newline46mondego>            } else {<newline46mondego>                for (int cc = 0; cc < samples; cc++) {<newline46mondego>                    current = (audioData[cc] & 0xFF);<newline46mondego>                    if (Math.abs(current)>largest) {<newline46mondego>                        largest = Math.abs(current);<newline46mondego>                    }<newline46mondego>                }<newline46mondego>            }<newline46mondego>        } else {<newline46mondego>            if (bitDepth/8==2) {<newline46mondego>                if (bigEndian) {<newline46mondego>                    for (int cc = 0; cc < samples; cc++) {<newline46mondego>                        current = (audioData[cc*2]*256 + (audioData[cc*2+1] - 0x80));<newline46mondego>                        if (Math.abs(current)>largest) {<newline46mondego>                            largest = Math.abs(current);<newline46mondego>                        }<newline46mondego>                    }<newline46mondego>                } else {<newline46mondego>                    for (int cc = 0; cc < samples; cc++) {<newline46mondego>                        current = (audioData[cc*2+1]*256 + (audioData[cc*2] - 0x80));<newline46mondego>                        if (Math.abs(current)>largest) {<newline46mondego>                            largest = Math.abs(current);<newline46mondego>                        }<newline46mondego>                    }<newline46mondego>                }<newline46mondego>            } else {<newline46mondego>                for (int cc = 0; cc < samples; cc++) {<newline46mondego>                    if ( audioData[cc]>0 ) {<newline46mondego>                        current = (audioData[cc] - 0x80);<newline46mondego>                        if (Math.abs(current)>largest) {<newline46mondego>                            largest = Math.abs(current);<newline46mondego>                        }<newline46mondego>                    } else {<newline46mondego>                        current = (audioData[cc] + 0x80);<newline46mondego>                        if (Math.abs(current)>largest) {<newline46mondego>                            largest = Math.abs(current);<newline46mondego>                        }<newline46mondego>                    }<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        // audioData<newline46mondego>        logger.log(Level.FINEST, <doubleQuotes46>Max signal level: <doubleQuotes46> + (double)largest/(Math.pow(2, bitDepth-1)));<newline46mondego>        return (double)largest/(Math.pow(2, bitDepth-1));<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2623splitHere46","9471115splitHere46","Run/Debug Settings->Edit the launch configuration you are using->Switch to Classpath tab->Right Click User Entries->Add the Folder (or External Folder) containing your properties file->Click Apply"
"2624splitHere46","9471123splitHere46","String str = String.valueOf(resultSet.getObject(<doubleQuotes46>col1<doubleQuotes46>));<newline46mondego>"
"2625splitHere46","9471123splitHere46","resultSet.getDouble(<doubleQuotes46>col1<doubleQuotes46>)"
"2626splitHere46","9471222splitHere46","synchronized(this){<newline46mondego>   wait();<newline46mondego>}<newline46mondego>"
"2627splitHere46","9471243splitHere46","@Override<newline46mondego>    public void insertAllReportsByHost(Map<String, List<IReport>> hostReports) throws DatabaseException {<newline46mondego>        try {<newline46mondego>            Cassandra.Client client = getClient();<newline46mondego><newline46mondego>            Map<ByteBuffer, Map<String, List<Mutation>>> mutationsMap = new HashMap<ByteBuffer, Map<String, List<Mutation>>>();<newline46mondego><newline46mondego>            for (Map.Entry<String, List<IReport>> entryReport : hostReports.entrySet()) {<newline46mondego><newline46mondego>                ByteBuffer host = toByteBuffer(entryReport.getKey());<newline46mondego>                List<IReport> reports = entryReport.getValue();<newline46mondego>                Map<String, List<Mutation>> keyMutations = new HashMap<String, List<Mutation>>();<newline46mondego>                List<Mutation> mutations = new ArrayList<Mutation>();<newline46mondego><newline46mondego>                for (IReport report : reports) {<newline46mondego>                    report.getProperties();<newline46mondego>                    Column reportDataColumn = new Column(toByteBuffer(<doubleQuotes46>Report Data<doubleQuotes46>));<newline46mondego>                    reportDataColumn.setValue(toByteBuffer(report.toString()));//TODO make another way<newline46mondego>                    reportDataColumn.setTimestamp(System.currentTimeMillis());<newline46mondego><newline46mondego>                    Long nano = System.nanoTime();<newline46mondego>                    SuperColumn superColumn = new SuperColumn(toByteBuffer(report.getReportId().toString()), Arrays.asList(reportDataColumn));<newline46mondego>                    ColumnOrSuperColumn col = new ColumnOrSuperColumn();<newline46mondego>                    col.super_column = superColumn;<newline46mondego><newline46mondego>                    Mutation m = new Mutation();<newline46mondego>                    m.setColumn_or_supercolumn(col);<newline46mondego><newline46mondego>                    mutations.add(m);<newline46mondego>                }<newline46mondego><newline46mondego><newline46mondego>                keyMutations.put(COLUMN_FAMILY, mutations);<newline46mondego><newline46mondego>                mutationsMap.put(host, keyMutations);<newline46mondego>            }<newline46mondego><newline46mondego>            client.batch_mutate(mutationsMap, ConsistencyLevel.ONE);<newline46mondego><newline46mondego>        } catch (UnsupportedEncodingException e) {<newline46mondego>            LOGGER.error(e.getMessage(), e);<newline46mondego>            throw new DatabaseException(e);<newline46mondego>        } catch (UnavailableException e) {<newline46mondego>            LOGGER.error(e.getMessage(), e);<newline46mondego>            throw new DatabaseException(e);<newline46mondego>        } catch (TException e) {<newline46mondego>            LOGGER.error(e.getMessage(), e);<newline46mondego>            throw new DatabaseException(e);<newline46mondego>        } catch (InvalidRequestException e) {<newline46mondego>            LOGGER.error(e.getMessage(), e);<newline46mondego>            throw new DatabaseException(e);<newline46mondego>        } catch (TimedOutException e) {<newline46mondego>            LOGGER.error(e.getMessage(), e);<newline46mondego>            throw new DatabaseException(e);<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"2628splitHere46","9471253splitHere46","int newRed = (int) (0.2989f * c.getRed());<newline46mondego>        int newGreen = (int) (0.5870f * c.getGreen());<newline46mondego>        int newBlue = (int) (0.1140f * c.getBlue());<newline46mondego>"
"2629splitHere46","9471253splitHere46","0.2989"
"2630splitHere46","9471253splitHere46","0.2990"
"2631splitHere46","9471465splitHere46","Object[][]"
"2632splitHere46","9471465splitHere46","Object[] allTheThings = new Object[] { <doubleQuotes46>abc<doubleQuotes46>, true, 15 };<newline46mondego>doItAll.invoke(o, new Object[]{allTheThings});<newline46mondego>"
"2633splitHere46","9471465splitHere46","things"
"2634splitHere46","9471465splitHere46","Object[]"
"2635splitHere46","9471465splitHere46","invoke"
"2636splitHere46","9471465splitHere46","void doMoreThings(Foo bar, Object ... things) { ... }<newline46mondego><newline46mondego>Object[] allTheThings = new Object[] { <doubleQuotes46>abc<doubleQuotes46>, true, 15 };<newline46mondego>doMore.invoke(o, new Object[]{new Foo(), allTheThings});<newline46mondego>"
"2637splitHere46","9471465splitHere46","invoke"
"2638splitHere46","9471465splitHere46","Object[]"
"2639splitHere46","9471465splitHere46","doItAll.invoke(o, (Object)allTheThings);<newline46mondego>doMore.invoke(o, new Foo(), allTheThings);<newline46mondego>"
"2640splitHere46","9471465splitHere46","doAllTheThings"
"2641splitHere46","9471465splitHere46","invoke"
"2642splitHere46","9471465splitHere46","o"
"2643splitHere46","9471469splitHere46","char[] y = new char[]{'a','b','c','d','e','f','g','h','i','j'};<newline46mondego>"
"2644splitHere46","9471469splitHere46","System.out.println(y[x[i]]);<newline46mondego>"
"2645splitHere46","9471516splitHere46","(5.9+2+11.5) / 3 = 6.466667<newline46mondego>(1.6+3.5+100.5) / 3 = 35.2<newline46mondego>(18+20.3+6.5) / 3 = 14.933333<newline46mondego>"
"2646splitHere46","9471886splitHere46","main"
"2647splitHere46","9471886splitHere46","main"
"2648splitHere46","9471886splitHere46","public static void main( /* multiple arguments */ ) { ... }<newline46mondego>"
"2649splitHere46","9471886splitHere46","String[] args"
"2650splitHere46","9471886splitHere46","String... args"
"2651splitHere46","9471886splitHere46","a"
"2652splitHere46","9471886splitHere46","a==2"
"2653splitHere46","9471886splitHere46","main"
"2654splitHere46","9471886splitHere46","main"
"2655splitHere46","9471886splitHere46","a"
"2656splitHere46","9471886splitHere46","a"
"2657splitHere46","9471886splitHere46","main"
"2658splitHere46","9471886splitHere46","static"
"2659splitHere46","9471886splitHere46","main(String[] args)"
"2660splitHere46","9471886splitHere46","a"
"2661splitHere46","9471886splitHere46","main"
"2662splitHere46","9471886splitHere46","a"
"2663splitHere46","9471886splitHere46","static"
"2664splitHere46","9471886splitHere46","a"
"2665splitHere46","9471886splitHere46","a==1"
"2666splitHere46","9471886splitHere46","PlayingWithMain"
"2667splitHere46","9471886splitHere46","a"
"2668splitHere46","9471886splitHere46","static"
"2669splitHere46","9471886splitHere46","main(<doubleQuotes46>Hi3<doubleQuotes46>)"
"2670splitHere46","9471886splitHere46","static"
"2671splitHere46","9471886splitHere46","main"
"2672splitHere46","9471886splitHere46","main"
"2673splitHere46","9471886splitHere46","main"
"2674splitHere46","9471886splitHere46","main"
"2675splitHere46","9471886splitHere46","main(String[] args)"
"2676splitHere46","9471886splitHere46","if (a==1) { main(); }<newline46mondego>"
"2677splitHere46","9471886splitHere46","PlayingWithMain"
"2678splitHere46","9471887splitHere46","addRequestProperty()"
"2679splitHere46","9471887splitHere46","URLConnection"
"2680splitHere46","9471887splitHere46","URL url = new URL(<doubleQuotes46>here goes the link to the html file<doubleQuotes46>);<newline46mondego>URLConnection connection = url.openConnection();<newline46mondego>connection.addRequestProperty(<doubleQuotes46>Cookie<doubleQuotes46>, <doubleQuotes46>here goes the cookie<doubleQuotes46>);<newline46mondego>BufferedReader br = new BufferedReader(new InputStreamReader(connection.getInputStream()));<newline46mondego>"
"2681splitHere46","9471887splitHere46","getHeaderFields()"
"2682splitHere46","9471887splitHere46","URLConnection"
"2683splitHere46","9471926splitHere46","string helloWorld = <doubleQuotes46>hello<doubleQuotes46>;<newline46mondego>int willThrowRuntimeError = Convert.ToInt32(helloWorld);<newline46mondego>"
"2684splitHere46","9471926splitHere46","int = <doubleQuotes46>this is not an int<doubleQuotes46>;<newline46mondego>"
"2685splitHere46","9472080splitHere46",".*?"
"2686splitHere46","9472080splitHere46","<doubleQuotes46>"
"2687splitHere46","9472080splitHere46","<\s*a\s+.*?href\s*=\s*<doubleQuotes46>(\S*?)<doubleQuotes46>.*?><newline46mondego>"
"2688splitHere46","9472080splitHere46","([^\s]*?).*?<newline46mondego>"
"2689splitHere46","9472080splitHere46","([^\s]*?)"
"2690splitHere46","9472080splitHere46","*?"
"2691splitHere46","9472080splitHere46","."
"2692splitHere46","9472080splitHere46",".*?"
"2693splitHere46","9472141splitHere46","connection.getResponseCode()"
"2694splitHere46","9472141splitHere46","connection.getResponseCode()"
"2695splitHere46","9472141splitHere46","connection"
"2696splitHere46","9472141splitHere46","InputStream responseStream = null;<newline46mondego>int responseCode = -1;<newline46mondego>IOException exception = null;<newline46mondego>try<newline46mondego>{<newline46mondego>    responseCode = connection.getResponseCode();  <newline46mondego>    responseStream = connection.getInputStream();<newline46mondego>}<newline46mondego>catch(IOException e)<newline46mondego>{<newline46mondego>    exception = e;<newline46mondego>    responseCode = connection.getResponseCode();  <newline46mondego>    responseStream = connection.getErrorStream();    <newline46mondego>}<newline46mondego><newline46mondego>// You can now examine the responseCode, responseStream, and exception variables<newline46mondego>// For example:<newline46mondego><newline46mondego>if (responseStream != null)<newline46mondego>{<newline46mondego>    // Go ahead and examine responseCode, but<newline46mondego>    // always read the data from the responseStream no matter what<newline46mondego>    // (This clears the connection for reuse).<newline46mondego>    // Probably log the exception if it's not null<newline46mondego>}<newline46mondego>else<newline46mondego>{<newline46mondego>    // This can happen if e.g. a malformed HTTP response was received<newline46mondego>    // This should be treated as an error.  The responseCode variable<newline46mondego>    // can be examined but should not be trusted to be accurate.<newline46mondego>    // Probably log the exception if it's not null<newline46mondego>}<newline46mondego>"
"2697splitHere46","9472861splitHere46","static Room createLaundryRoom(laundryRoomParameters) {<newline46mondego>  return new Room(...laundry room parameters plus defaults<newline46mondego>    common to all laundry rooms...);<newline46mondego>}<newline46mondego>"
"2698splitHere46","9472901splitHere46","WebMarkupContainer wmc = new WebMarkupContainer(<doubleQuotes46>listWmc<doubleQuotes46>);<newline46mondego>add(wmc);<newline46mondego><newline46mondego>// init your listView<newline46mondego>// ...<newline46mondego><newline46mondego>wmc.add(listView);<newline46mondego>"
"2699splitHere46","9472924splitHere46","model.addAttribute(<doubleQuotes46>active<doubleQuotes46>, <doubleQuotes46>search<doubleQuotes46>);<newline46mondego>...<newline46mondego><c:if test=<doubleQuotes46>${active == 'search'}<doubleQuotes46>>class=<doubleQuotes46>active<doubleQuotes46></c:if><newline46mondego>"
"2700splitHere46","9473076splitHere46","public void display() {<newline46mondego>    for (int i = 0; i < nItems; i++) {<newline46mondego>        System.out.println(queArray[(front + i) % maxSize]);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2701splitHere46","9473092splitHere46","InputStream is = YourClass.getResourceAsStream(<doubleQuotes46>/com/company/resources/xmlFile.xml<doubleQuotes46>);<newline46mondego>"
"2702splitHere46","9473205splitHere46","@XmlRootElement(name=<doubleQuotes46>bar<doubleQuotes46>)<newline46mondego>public class Bar {<newline46mondego><newline46mondego>  @XmlElement<newline46mondego>  @XmlJavaTypeAdapter(FooAdapter.class)<newline46mondego>  private Foo foo;<newline46mondego><newline46mondego>  @XmlAttribute<newline46mondego>  private String baz;<newline46mondego><newline46mondego>}<newline46mondego>"
"2703splitHere46","9473205splitHere46","class FooAdapter extends XmlAdapter<Object[], Foo> {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Object[] marshal(Foo v) throws Exception {<newline46mondego>        return new Object[]{ v.x, v.y, v.z };<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Foo unmarshal(Object[] v) throws Exception {<newline46mondego>        Foo foo = new Foo();<newline46mondego>        foo.x = (String) v[0];<newline46mondego>        foo.y = (Integer) v[1];<newline46mondego>        foo.z = (Double) v[2];<newline46mondego>        return foo;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"2704splitHere46","9473283splitHere46","urlConnection.setDoOutput(true);"
"2705splitHere46","9473320splitHere46","StringUtils.isNotBlank()"
"2706splitHere46","9473320splitHere46","StringUtils.isNotBlank(var.getMyString())<newline46mondego>"
"2707splitHere46","9473320splitHere46","trim()"
"2708splitHere46","9473320splitHere46","StringUtils.isNotEmpty()"
"2709splitHere46","9473320splitHere46","CharSequence"
"2710splitHere46","9473320splitHere46","String"
"2711splitHere46","9473320splitHere46","StringBuilder"
"2712splitHere46","9473397splitHere46","class ClassA implements Runnable {<newline46mondego><newline46mondego>    public volatile boolean switchToOther;<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void run() {<newline46mondego>        switchToOther = false;<newline46mondego>        try {<newline46mondego>            method1();<newline46mondego>        } catch (InterruptedException e) {<newline46mondego>            // Restore the interrupted status<newline46mondego>            Thread.currentThread().interrupt();<newline46mondego>        }<newline46mondego>        if (switchToOther) {<newline46mondego>            method2();<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public void method1() throws InterruptedException {<newline46mondego>        work();<newline46mondego>    }<newline46mondego><newline46mondego>    public void method2() throws InterruptedException {<newline46mondego>        otherWork();<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class ClassB implements Runnable {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void run() {<newline46mondego>        ClassA a = new ClassA();<newline46mondego>        Thread t = new Thread(a);<newline46mondego>        t.start();<newline46mondego>        if (decideToSwitch()) {<newline46mondego>            a.switchToOther = true;<newline46mondego>            t.interrupt();<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2713splitHere46","9473397splitHere46","InterruptedException"
"2714splitHere46","9473397splitHere46","volatile"
"2715splitHere46","9473397splitHere46","switchToOther"
"2716splitHere46","9473397splitHere46","InterruptedException"
"2717splitHere46","9473467splitHere46","getreportearchivo"
"2718splitHere46","9473467splitHere46","DATE"
"2719splitHere46","9473467splitHere46","setDate"
"2720splitHere46","9473467splitHere46","setString"
"2721splitHere46","9473467splitHere46","VARCHAR2"
"2722splitHere46","9473467splitHere46","TO_DATE"
"2723splitHere46","9473609splitHere46","Iterator<E> iterator()"
"2724splitHere46","9473618splitHere46","public void run() {<newline46mondego>    int SLICE = 729;<newline46mondego>    List<List<Integer>> list2d = new ArrayList<List<Integer>>();<newline46mondego>    // fill original list<newline46mondego>    List<List<List<Integer>>> list3d = new ArrayList<List<List<Integer>>>();<newline46mondego>    List<List<Integer>> partial = new ArrayList<List<Integer>>(SLICE);<newline46mondego>    for (List<Integer> list : list2d) {<newline46mondego>        partial.add(list);<newline46mondego>        if (partial.size() == SLICE) {<newline46mondego>            list3d.add(partial);<newline46mondego>            partial = new ArrayList<List<Integer>>(SLICE);<newline46mondego>        }<newline46mondego>    }<newline46mondego>    if (!partial.isEmpty()) {<newline46mondego>        list3d.add(partial);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2725splitHere46","9473905splitHere46","return 0;"
"2726splitHere46","9473905splitHere46","public class Solution {<newline46mondego>    public double findMedianSortedArrays(int A[], int B[]) {<newline46mondego>        // Start typing your Java solution below<newline46mondego>        // DO NOT write main() function<newline46mondego>        return 0;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2727splitHere46","9473905splitHere46","output: 0.0"
"2728splitHere46","9473905splitHere46","class Solution {<newline46mondego>public:<newline46mondego>    double findMedianSortedArrays(int A[], int m, int B[], int n) {<newline46mondego>        // Start typing your C/C++ solution below<newline46mondego>        // DO NOT write int main() function<newline46mondego>        return 0;<newline46mondego>    }<newline46mondego>};<newline46mondego>"
"2729splitHere46","9473905splitHere46","output: 0"
"2730splitHere46","9473964splitHere46","java.util.HashMap"
"2731splitHere46","9474092splitHere46","public static void main(java.lang.String[] args) {<newline46mondego>"
"2732splitHere46","9474092splitHere46","public static void main(String[] args) {<newline46mondego>"
"2733splitHere46","9474172splitHere46","Date date; // your date<newline46mondego>    Calendar cal = Calendar.getInstance();<newline46mondego>    cal.setTime(date);<newline46mondego>    int year = cal.get(Calendar.YEAR);<newline46mondego>    int month = cal.get(Calendar.MONTH);<newline46mondego>    int day = cal.get(Calendar.DAY_OF_MONTH);<newline46mondego>    // etc.<newline46mondego>"
"2734splitHere46","9474387splitHere46","setWantClientAuth(true)"
"2735splitHere46","9474387splitHere46","setNeedClientAuth(true)"
"2736splitHere46","9474474splitHere46","new InfixToPostfix().convertString(expression);<newline46mondego>"
"2737splitHere46","9474498splitHere46","/** Warning codes. */<newline46mondego>public enum Warning<newline46mondego>{<newline46mondego>    /** Password expiration warning.*/<newline46mondego>    timeBeforeExpiration,<newline46mondego>    /** Grace logins warning.*/<newline46mondego>    graceAuthNsRemaining,<newline46mondego>    none;<newline46mondego>}<newline46mondego><newline46mondego>/** Error codes. */<newline46mondego>public enum Error<newline46mondego>{<newline46mondego>    /** The password has expired.*/<newline46mondego>    passwordExpired,<newline46mondego>    /**<newline46mondego>     * The account has been locked, either by an administrator<newline46mondego>     * or as a result of too many failed login attempts.<newline46mondego>     */<newline46mondego>    accountLocked,<newline46mondego>    /**<newline46mondego>     * The password has been reset by an administrator and must be changed immediately.<newline46mondego>     */<newline46mondego>    changeAfterReset,<newline46mondego>    /**<newline46mondego>     * The password policy does not permit the user to change his password.<newline46mondego>     */<newline46mondego>    passwordModNotAllowed,<newline46mondego>    /**<newline46mondego>     * The password policy requires the old password to be supplied<newline46mondego>     * when changing passwords.<newline46mondego>     * This indicates a programming error in the client.<newline46mondego>     */<newline46mondego>    mustSupplyOldPassword,<newline46mondego>    /**<newline46mondego>     * The new password has failed the quality check.<newline46mondego>     */<newline46mondego>    insufficientPasswordQuality,<newline46mondego>    /**<newline46mondego>     * The new password is too short.<newline46mondego>     */<newline46mondego>    passwordTooShort,<newline46mondego>    /**<newline46mondego>     * The current password is too new to change yet.<newline46mondego>     */<newline46mondego>    passwordTooYoung,<newline46mondego>    /**<newline46mondego>     * The password policy specifies keeping a password history<newline46mondego>     * and the new password is already in it.<newline46mondego>     */<newline46mondego>    passwordInHistory,<newline46mondego>    /**<newline46mondego>     * Error parsing the response control.<newline46mondego>     * This indicates a programming error either in this<newline46mondego>     * class or in the LDAP server.<newline46mondego>     */<newline46mondego>    unparseableResponseControl,<newline46mondego>    /**<newline46mondego>     * No additional information.<newline46mondego>     * This can be seen e.g. when the user simply logs<newline46mondego>     * in with the wrong password.<newline46mondego>     */<newline46mondego>    none;<newline46mondego>};<newline46mondego>"
"2738splitHere46","9474606splitHere46","DefaultListModel"
"2739splitHere46","9474606splitHere46","HashMap<String, String> inst1 = new HashMap(instructorIO.getInstructors());<newline46mondego>instListModel = new DefaultListModel<String>();<newline46mondego>for (String value : inst1.values())<newline46mondego>{<newline46mondego>    instListModel.addElement(value);<newline46mondego>}<newline46mondego>"
"2740splitHere46","9474672splitHere46","Activity"
"2741splitHere46","9474672splitHere46","Intent"
"2742splitHere46","9474672splitHere46","ListView"
"2743splitHere46","9474672splitHere46","intent.putExtras(<doubleQuotes46>name<doubleQuotes46>, name);"
"2744splitHere46","9474672splitHere46","Activity"
"2745splitHere46","9474672splitHere46","setImageDrawable"
"2746splitHere46","9474672splitHere46","Intent"
"2747splitHere46","9474672splitHere46","Intent"
"2748splitHere46","9474672splitHere46","Activity"
"2749splitHere46","9474672splitHere46","Intent intent = getIntent();<newline46mondego>String name = intent.getStringExtra(<doubleQuotes46>name<doubleQuotes46>);<newline46mondego>"
"2750splitHere46","9474672splitHere46","ImageView"
"2751splitHere46","9474672splitHere46","if (name.equalsIgnoreCase(<doubleQuotes46>joe<doubleQuotes46>)<newline46mondego>    Player.setImageDrawable(R.drawable.joe);<newline46mondego>"
"2752splitHere46","9474685splitHere46","new SimpleDateFormat(<doubleQuotes46>MM/dd/yyyy HHmm<doubleQuotes46>).parse(<doubleQuotes46>11/12/2011<doubleQuotes46> + <doubleQuotes46> <doubleQuotes46> + <doubleQuotes46>0200<doubleQuotes46>);<newline46mondego>new SimpleDateFormat(<doubleQuotes46>MM/dd/yyyy HHmm<doubleQuotes46>).format(new Date());<newline46mondego>new SimpleDateFormat(<doubleQuotes46>HHmm<doubleQuotes46>).format(new Date());<newline46mondego>"
"2753splitHere46","9474685splitHere46","new SimpleDateFormat(<doubleQuotes46>MM/dd/yyyy HHmm Z<doubleQuotes46>).parse(<doubleQuotes46>11/12/2011<doubleQuotes46> + <doubleQuotes46> <doubleQuotes46> + <doubleQuotes46>0200<doubleQuotes46> + <doubleQuotes46> PST<doubleQuotes46>);<newline46mondego>"
"2754splitHere46","9474692splitHere46","DatagramSocket.joinGroup()"
"2755splitHere46","9474692splitHere46","SocketAddress"
"2756splitHere46","9474692splitHere46","SocketAddress"
"2757splitHere46","9474692splitHere46","SocketAddress"
"2758splitHere46","9474692splitHere46","InetAddress"
"2759splitHere46","9474933splitHere46","PojoLocator"
"2760splitHere46","9474933splitHere46","public class PojoLocator extends Locator<DatastoreObject, Long><newline46mondego>{<newline46mondego>    @Override<newline46mondego>    public DatastoreObject find(Class<? extends DatastoreObject> clazz, Long id)<newline46mondego>    {<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Long getId(DatastoreObject domainObject)<newline46mondego>    {<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2761splitHere46","9474933splitHere46","public class PojoLocator extends Locator<DatastoreObject, String><newline46mondego>{<newline46mondego>    @Override<newline46mondego>    public DatastoreObject find(Class<? extends DatastoreObject> clazz, String id)<newline46mondego>    {<newline46mondego>        Key<DatastoreObject> key = Key.create(id);<newline46mondego>        return ofy.load(key);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public String getId(DatastoreObject domainObject)<newline46mondego>    {<newline46mondego>        if (domainObject.getId() != null)<newline46mondego>        {<newline46mondego>            Key<DatastoreObject> key = ofy.fact().getKey(domainObject);<newline46mondego>            return key.getString();<newline46mondego>        } else<newline46mondego>            return null;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2762splitHere46","9475056splitHere46","currentTime = (int) (newTime.toMillis() / 1000L);<newline46mondego>"
"2763splitHere46","9475089splitHere46","gmail.com"
"2764splitHere46","9475089splitHere46","gmail.com"
"2765splitHere46","9475089splitHere46","dig mx gmail.com"
"2766splitHere46","9475089splitHere46","; <<>> DiG 9.3.6-P1-RedHat-9.3.6-16.P1.el5 <<>> mx gmail.com<newline46mondego>;; global options:  printcmd<newline46mondego>;; Got answer:<newline46mondego>;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 34063<newline46mondego>;; flags: qr rd ra; QUERY: 1, ANSWER: 5, AUTHORITY: 4, ADDITIONAL: 4<newline46mondego><newline46mondego>;; QUESTION SECTION:<newline46mondego>;gmail.com.                     IN      MX<newline46mondego><newline46mondego>;; ANSWER SECTION:<newline46mondego>gmail.com.              1697    IN      MX      30 alt3.gmail-smtp-in.l.google.com.<newline46mondego>gmail.com.              1697    IN      MX      40 alt4.gmail-smtp-in.l.google.com.<newline46mondego>gmail.com.              1697    IN      MX      5 gmail-smtp-in.l.google.com.<newline46mondego>gmail.com.              1697    IN      MX      10 alt1.gmail-smtp-in.l.google.com.<newline46mondego>gmail.com.              1697    IN      MX      20 alt2.gmail-smtp-in.l.google.com.<newline46mondego><newline46mondego>;; AUTHORITY SECTION:<newline46mondego>gmail.com.              266895  IN      NS      ns1.google.com.<newline46mondego>gmail.com.              266895  IN      NS      ns2.google.com.<newline46mondego>gmail.com.              266895  IN      NS      ns3.google.com.<newline46mondego>gmail.com.              266895  IN      NS      ns4.google.com.<newline46mondego><newline46mondego>;; ADDITIONAL SECTION:<newline46mondego>ns1.google.com.         262525  IN      A       216.239.32.10<newline46mondego>ns2.google.com.         262525  IN      A       216.239.34.10<newline46mondego>ns3.google.com.         262525  IN      A       216.239.36.10<newline46mondego>ns4.google.com.         262525  IN      A       216.239.38.10<newline46mondego><newline46mondego>;; Query time: 65 msec<newline46mondego>;; SERVER: 144.52.10.15#53(144.52.10.15)<newline46mondego>;; WHEN: Tue Feb 28 14:30:04 2012<newline46mondego>;; MSG SIZE  rcvd: 295<newline46mondego>"
"2767splitHere46","9475089splitHere46","gmail-smtp-in.l.google.com"
"2768splitHere46","9475100splitHere46","toString"
"2769splitHere46","9475100splitHere46","Employee"
"2770splitHere46","9475100splitHere46","System.out.println"
"2771splitHere46","9475100splitHere46","Employee"
"2772splitHere46","9475100splitHere46","public String toString() {<newline46mondego>    return <doubleQuotes46>[%d, %s, %d]<doubleQuotes46>.format(noEmployee, nom, department);<newline46mondego>}<newline46mondego>"
"2773splitHere46","9475100splitHere46","[[123, superman, 4], [1234, batman, 5]]<newline46mondego>"
"2774splitHere46","9475111splitHere46","someMethod()"
"2775splitHere46","9475111splitHere46","public class FooFrame extends JFrame {<newline46mondego><newline46mondego>   public String someMethod() {<newline46mondego>      return myTextField .getText();<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"2776splitHere46","9475111splitHere46","class FooPanel extends JPanel {<newline46mondego><newline46mondego>   public void otherMethod() {<newline46mondego>      FooFrame fooFrame = new FooFrame();<newline46mondego>      fooFrame.someMethod();<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"2777splitHere46","9475111splitHere46","class FooPanel extends JPanel {<newline46mondego>   private FooFrame fooFrame;<newline46mondego><newline46mondego>   // constructor accepts a reference to a FooFrame object<newline46mondego>   public FooPanel(FooFrame fooFrame) {<newline46mondego>      this.fooFrame = fooFrame; // and sets its field with it<newline46mondego>   }<newline46mondego><newline46mondego>   public void otherMethod() {<newline46mondego>      // no longer needed!<newline46mondego>      // FooFrame fooFrame = new FooFrame(); <newline46mondego><newline46mondego><newline46mondego>      // now method is called on the right object!<newline46mondego>      fooFrame.someMethod(); <newline46mondego>   }<newline46mondego>}<newline46mondego>"
"2778splitHere46","9475111splitHere46","this"
"2779splitHere46","9475111splitHere46","public class FooFrame extends JFrame {<newline46mondego><newline46mondego>   private JTextField myTextField = new JTextField(10);<newline46mondego>   private FooPanel fooPanel;<newline46mondego><newline46mondego>   public FooFrame() {<newline46mondego>      // the current FooFrame object is this!<newline46mondego>      fooPanel = new FooPanel(this);<newline46mondego>      add(fooPanel);<newline46mondego>   }<newline46mondego><newline46mondego>   public String someMethod() {<newline46mondego>      return myTextField .getText();<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"2780splitHere46","9475172splitHere46","558545864083284007"
"2781splitHere46","9475172splitHere46","double"
"2782splitHere46","9475172splitHere46","###.##############"
"2783splitHere46","9475172splitHere46","558545864083284007"
"2784splitHere46","9475217splitHere46","public class Student implements java.io.Serializable{<newline46mondego> private String name;<newline46mondego> private Integer id;<newline46mondego> public Student(){}<newline46mondego><newline46mondego> public void setName(String name){<newline46mondego>  this.name=name;<newline46mondego> }<newline46mondego> public String getName(){<newline46mondego>  return this.name;<newline46mondego> }<newline46mondego> public void setId(Integer id){<newline46mondego>  this.id=id;<newline46mondego> }<newline46mondego>public Integer getId(){<newline46mondego> return this.id;<newline46mondego> }<newline46mondego>}<newline46mondego>"
"2785splitHere46","9475339splitHere46","ContextMenu"
"2786splitHere46","9475339splitHere46","menu.add(0, unique_id, 0, items_name);"
"2787splitHere46","9475339splitHere46","onContextItemSelected"
"2788splitHere46","9475339splitHere46","switch (item.getItemId()){<newline46mondego>    case UNIQUE_ID_1:<newline46mondego>        //handle what to do<newline46mondego>    break;<newline46mondego>    case UNIQUE_ID_2:<newline46mondego>        //handle what to do<newline46mondego>    break;<newline46mondego>    ....<newline46mondego>"
"2789splitHere46","9475339splitHere46","int"
"2790splitHere46","9475376splitHere46","function mapf(){<newline46mondego>    var vr = new Date(this.reg_d.getFullYear(),this.reg_d.getMonth(),this.reg_d.getDate());<newline46mondego>    var key = {seg_dt:vr,com: this.com}  <--- syntax problem<newline46mondego>    emit(key,{count:1});<newline46mondego>}<newline46mondego>"
"2791splitHere46","9475376splitHere46","var key = {seg_dt:vr,com: this.com}<newline46mondego>"
"2792splitHere46","9475376splitHere46","[conn47] JS Error: SyntaxError: missing ; before statement <newline46mondego>"
"2793splitHere46","9475637splitHere46","Runtime.exec(String)"
"2794splitHere46","9475637splitHere46","Runtime.exec(...)"
"2795splitHere46","9475637splitHere46","String yourShellInput = <doubleQuotes46>echo hi && echo ho<doubleQuotes46>;  // or whatever ... <newline46mondego>String[] commandAndArgs = new String[]{ <doubleQuotes46>/bin/sh<doubleQuotes46>, <doubleQuotes46>-c<doubleQuotes46>, yourShellInput };<newline46mondego>Runtime.getRuntime().exec(commandAndArgs);<newline46mondego>"
"2796splitHere46","9475637splitHere46","$ /bin/sh -c <doubleQuotes46>echo hi && echo ho<doubleQuotes46>.<newline46mondego>"
"2797splitHere46","9475758splitHere46","String"
"2798splitHere46","9475758splitHere46","toString()"
"2799splitHere46","9475758splitHere46","MyClass"
"2800splitHere46","9475758splitHere46","String"
"2801splitHere46","9475758splitHere46","String"
"2802splitHere46","9475758splitHere46","String"
"2803splitHere46","9475758splitHere46","Object"
"2804splitHere46","9475758splitHere46","CharSequence"
"2805splitHere46","9475758splitHere46","Serializable"
"2806splitHere46","9475758splitHere46","Comparable<String>"
"2807splitHere46","9475784splitHere46","public void doSomething(byte b) { }<newline46mondego>"
"2808splitHere46","9475784splitHere46","doSomething(35); // error.<newline46mondego>"
"2809splitHere46","9475901splitHere46","FontMetrics"
"2810splitHere46","9475901splitHere46","String text = <doubleQuotes46>Hello world!<doubleQuotes46>;<newline46mondego>Rectangle2D bounds = g2.getFontMetrics().getStringBounds(text, g2);<newline46mondego>"
"2811splitHere46","9476023splitHere46","class RefRefExample<newline46mondego>{<newline46mondego>    static void Method(ref string s)<newline46mondego>    {<newline46mondego>        s = <doubleQuotes46>changed<doubleQuotes46>; <newline46mondego>    }<newline46mondego>    static void Main()<newline46mondego>    {<newline46mondego>        string str = <doubleQuotes46>original<doubleQuotes46>;<newline46mondego>        Method(ref str);<newline46mondego>        // str is now <doubleQuotes46>changed<doubleQuotes46><newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2812splitHere46","9476023splitHere46","public static void PunchyManager(List<string> inputList, ref int a, ref int b)<newline46mondego>{<newline46mondego>    var tempList = new List<string>();<newline46mondego>    foreach (var item in inputList)<newline46mondego>       tempList.Add(item);     <newline46mondego>}<newline46mondego>"
"2813splitHere46","9476023splitHere46",".ToArray()"
"2814splitHere46","9476083splitHere46","DocumentBuilder"
"2815splitHere46","9476083splitHere46","Document"
"2816splitHere46","9476083splitHere46","Document"
"2817splitHere46","9476192splitHere46","Tomcat6w.exe"
"2818splitHere46","9476292splitHere46","JComponent"
"2819splitHere46","9476328splitHere46","||"
"2820splitHere46","9476328splitHere46","Set"
"2821splitHere46","9476328splitHere46","typeSet.contains(mimeType)"
"2822splitHere46","9476342splitHere46","public static void addRows(String fileName) <newline46mondego>    {<newline46mondego>    int count = 0;<newline46mondego>    int x;<newline46mondego>    try <newline46mondego>     {<newline46mondego><newline46mondego>        Scanner s = new Scanner(new File(fileName));<newline46mondego><newline46mondego><newline46mondego>        while (s.hasNextLine()) <newline46mondego>        {<newline46mondego>          String line = s.nextLine(); // get the next line<newline46mondego>          Scanner lineScanner = new Scanner (line); // get a new scanner for the next line! Done! Now proceed the usual way.<newline46mondego><newline46mondego>            while (lineScanner.hasNextInt()) <newline46mondego>               {<newline46mondego>                  x = lineScanner.nextInt();<newline46mondego>                  count += x;<newline46mondego>               }<newline46mondego><newline46mondego>            System.out.println(count);<newline46mondego>            count = 0;<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego><newline46mondego>     }<newline46mondego>    catch(IOException e) <newline46mondego>     {<newline46mondego>         System.out.println(<doubleQuotes46>No File Found.<doubleQuotes46>);<newline46mondego>     }<newline46mondego>   }     <newline46mondego>"
"2823splitHere46","9476557splitHere46","'a' LIKE 'A'<newline46mondego>"
"2824splitHere46","9476557splitHere46","PRAGMA case_sensitive_like=ON;<newline46mondego>"
"2825splitHere46","9476773splitHere46","LocationListener"
"2826splitHere46","9476773splitHere46","ActivityServer"
"2827splitHere46","9476773splitHere46","ActivityServer"
"2828splitHere46","9476812splitHere46","public void splitString(){<newline46mondego>    String[] myArray = <doubleQuotes46>Chapter 01<<<one<<<111111:::Chapter 02<<<two<<<222222:::Chapter 03<<<three<<<33333:::Chapter 04<<<four<<<4444:::Chapter 05<<<five<<<5555:::<doubleQuotes46>.split(<doubleQuotes46>:::<doubleQuotes46>);<newline46mondego>    for (int j = 0; j < myArray.length; j++)<newline46mondego>    {<newline46mondego>        String[] songs = myArray[j].split(<doubleQuotes46><<<<doubleQuotes46>);<newline46mondego><newline46mondego>        System.out.println(<doubleQuotes46>chapter: <doubleQuotes46> + songs[0]);<newline46mondego>        System.out.println(<doubleQuotes46>title: <doubleQuotes46> + songs[1]);<newline46mondego>        System.out.println(<doubleQuotes46>code: <doubleQuotes46> + songs[2]);<newline46mondego>    } <newline46mondego>}<newline46mondego>"
"2829splitHere46","9476844splitHere46","java.io.FileOutputStream"
"2830splitHere46","9476844splitHere46","java.io.FileWriter"
"2831splitHere46","9476992splitHere46","System.out.println(Arrays.toString(data));<newline46mondego>"
"2832splitHere46","9477027splitHere46","hashCode"
"2833splitHere46","9477027splitHere46","int"
"2834splitHere46","9477027splitHere46","hashCode()"
"2835splitHere46","9477027splitHere46","String"
"2836splitHere46","9477027splitHere46","hashCode"
"2837splitHere46","9477075splitHere46","immutable"
"2838splitHere46","9477075splitHere46","StringBuilder"
"2839splitHere46","9477075splitHere46","public class J {<newline46mondego>    public String method(String x) {<newline46mondego>        String val = x;<newline46mondego>        try {<newline46mondego>            return val;<newline46mondego>        } finally {<newline46mondego>            val = x + x;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        J littleFuzzy = new J();<newline46mondego>        System.out.println(littleFuzzy.method(<doubleQuotes46>abc<doubleQuotes46>));<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2840splitHere46","9477122splitHere46","HELLOWorld"
"2841splitHere46","9477122splitHere46","public"
"2842splitHere46","9477210splitHere46","btnCancel.addActionListener(new ActionListener() {<newline46mondego>            public void actionPerformed(ActionEvent e) {<newline46mondego>                System.exit(0);<newline46mondego>            }});<newline46mondego>"
"2843splitHere46","9477212splitHere46","vararg"
"2844splitHere46","9477212splitHere46","(Object[])"
"2845splitHere46","9477212splitHere46","MyMethod(MyObject[] obj)"
"2846splitHere46","9477212splitHere46","MyMethod(MyObject... obj)"
"2847splitHere46","9477212splitHere46","public static String format(String pattern,<newline46mondego>                            Object... arguments);<newline46mondego>"
"2848splitHere46","9477478splitHere46","System.out.println(new File(<doubleQuotes46>/<doubleQuotes46>).getTotalSpace()/1024/1024/1024); //in GB<newline46mondego>"
"2849splitHere46","9477555splitHere46","businessName"
"2850splitHere46","9477555splitHere46","static"
"2851splitHere46","9477610splitHere46","final"
"2852splitHere46","9477610splitHere46","'abstract'"
"2853splitHere46","9477610splitHere46","new"
"2854splitHere46","9477610splitHere46","'static'"
"2855splitHere46","9477677splitHere46","Things"
"2856splitHere46","9477677splitHere46","public List<ThingDTO> getThingDTOs( ... )<newline46mondego>{<newline46mondego>    Query query = em().createQuery(<doubleQuotes46>FROM Thing t WHERE ...<doubleQuotes46>);<newline46mondego>    query.setParameter( ... );<newline46mondego><newline46mondego>    List<Thing> things = query.getResultList();<newline46mondego><newline46mondego>    List<ThingDTO> thingDTOs = new ArrayList(things.size());<newline46mondego>    for(Thing t : things)<newline46mondego>    {<newline46mondego>        thingDTOs.add(new ThingDTO(t));<newline46mondego>    }<newline46mondego><newline46mondego>    return thingDTOs<newline46mondego>}<newline46mondego>"
"2857splitHere46","9477695splitHere46","arguments"
"2858splitHere46","9477695splitHere46","classpath"
"2859splitHere46","9477695splitHere46","environment varialbles"
"2860splitHere46","9477695splitHere46","Run Configurations"
"2861splitHere46","9477695splitHere46","Run"
"2862splitHere46","9477695splitHere46","Window>Show View>Other..."
"2863splitHere46","9477925splitHere46","NumberFormat"
"2864splitHere46","9477925splitHere46","NumberFormat nf = NumberFormat.getInstance();<newline46mondego>            nf.setMinimumFractionDigits(2);<newline46mondego>            nf.setMaximumFractionDigits(2);<newline46mondego><newline46mondego><newline46mondego>edittext.setText(String.valueOf(nf.format(Your value)));<newline46mondego>"
"2865splitHere46","9477973splitHere46","static"
"2866splitHere46","9477973splitHere46","non-static"
"2867splitHere46","9477973splitHere46","fleetlist"
"2868splitHere46","9477973splitHere46","static"
"2869splitHere46","9477973splitHere46","static"
"2870splitHere46","9477973splitHere46","addTruck()"
"2871splitHere46","9477973splitHere46","createFleet()"
"2872splitHere46","9477973splitHere46","Fleet"
"2873splitHere46","9477973splitHere46","private static ArrayList<Truck> fleetList;<newline46mondego>"
"2874splitHere46","9477973splitHere46","Fleet"
"2875splitHere46","9477973splitHere46","private List<Truck> fleetList;<newline46mondego><newline46mondego>public Fleet(String businessName){<newline46mondego>    this.businessName = businessName;<newline46mondego>    this.fleetList = new ArrayList<Truck>();<newline46mondego>}<newline46mondego><newline46mondego>public List<Truck> getFleetList()<newline46mondego>{<newline46mondego>    return this.fleetList;<newline46mondego>}<newline46mondego>"
"2876splitHere46","9477973splitHere46","FleetUI"
"2877splitHere46","9477973splitHere46","private ArrayList<Fleet> fleetCollection;    <newline46mondego>...   <newline46mondego>for (Fleet fleet : this.fleetCollection)<newline46mondego>{<newline46mondego>    for (Truck truck : fleet.getFleetList())<newline46mondego>    {<newline46mondego>         //Do something with your truck here<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2878splitHere46","9477973splitHere46","fleet"
"2879splitHere46","9477973splitHere46","FleetUI"
"2880splitHere46","9477973splitHere46","fleet.getFleetList().add(new Truck(...))"
"2881splitHere46","9477973splitHere46","addTruck"
"2882splitHere46","9477973splitHere46","fleet"
"2883splitHere46","9477973splitHere46","public void addTruck(Truck truck)<newline46mondego>{<newline46mondego>    this.fleetList.add(truck);<newline46mondego>}<newline46mondego>"
"2884splitHere46","9477994splitHere46","java -jar xxx.jar<newline46mondego>"
"2885splitHere46","9478095splitHere46","public class Car {<newline46mondego><newline46mondego>   // every instance of <doubleQuotes46>Car<doubleQuotes46> has wheels -> static<newline46mondego>   public static boolean hasWheels = true;<newline46mondego><newline46mondego>   // every instance of <doubleQuotes46>Car<doubleQuotes46> has an individual colour -> non static<newline46mondego>   public Colour colour; <newline46mondego><newline46mondego>   // ...<newline46mondego> }<newline46mondego>"
"2886splitHere46","9478124splitHere46","import java.awt.*;<newline46mondego>import javax.swing.*;<newline46mondego>import javax.swing.text.AbstractDocument;<newline46mondego>import javax.swing.text.AttributeSet;<newline46mondego>import javax.swing.text.BadLocationException;<newline46mondego>import javax.swing.text.DocumentFilter;<newline46mondego>import javax.swing.text.DocumentFilter.FilterBypass;<newline46mondego><newline46mondego>public class InputInteger<newline46mondego>{<newline46mondego>    private JTextField tField;<newline46mondego>    private MyDocumentFilter documentFilter;<newline46mondego><newline46mondego>    private void displayGUI()<newline46mondego>    {<newline46mondego>        JFrame frame = new JFrame(<doubleQuotes46>Input Integer Example<doubleQuotes46>);<newline46mondego>        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);<newline46mondego><newline46mondego>        JPanel contentPane = new JPanel();<newline46mondego>        contentPane.setBorder(<newline46mondego>            BorderFactory.createEmptyBorder(5, 5, 5, 5));<newline46mondego>        tField = new JTextField(10);<newline46mondego>        ((AbstractDocument)tField.getDocument()).setDocumentFilter(<newline46mondego>                new MyDocumentFilter());        <newline46mondego>        contentPane.add(tField); <newline46mondego><newline46mondego>        frame.setContentPane(contentPane);<newline46mondego>        frame.pack();<newline46mondego>        frame.setLocationByPlatform(true);<newline46mondego>        frame.setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args)<newline46mondego>    {<newline46mondego>        Runnable runnable = new Runnable()<newline46mondego>        {<newline46mondego>            @Override<newline46mondego>            public void run()<newline46mondego>            {<newline46mondego>                new InputInteger().displayGUI();<newline46mondego>            }<newline46mondego>        };<newline46mondego>        EventQueue.invokeLater(runnable);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class MyDocumentFilter extends DocumentFilter<newline46mondego>{   <newline46mondego>    @Override<newline46mondego>    public void insertString(DocumentFilter.FilterBypass fp<newline46mondego>            , int offset, String string, AttributeSet aset)<newline46mondego>                                throws BadLocationException<newline46mondego>    {<newline46mondego>        int len = string.length();<newline46mondego>        boolean isValidInteger = true;<newline46mondego><newline46mondego>        for (int i = 0; i < len; i++)<newline46mondego>        {<newline46mondego>            if (!Character.isDigit(string.charAt(i)))<newline46mondego>            {<newline46mondego>                isValidInteger = false;<newline46mondego>                break;<newline46mondego>            }<newline46mondego>        }<newline46mondego>        if (isValidInteger)<newline46mondego>            super.insertString(fp, offset, string, aset);<newline46mondego>        else<newline46mondego>            Toolkit.getDefaultToolkit().beep();<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void replace(DocumentFilter.FilterBypass fp, int offset<newline46mondego>                    , int length, String string, AttributeSet aset)<newline46mondego>                                        throws BadLocationException<newline46mondego>    {<newline46mondego>        int len = string.length();<newline46mondego>        boolean isValidInteger = true;<newline46mondego><newline46mondego>        for (int i = 0; i < len; i++)<newline46mondego>        {<newline46mondego>            if (!Character.isDigit(string.charAt(i)))<newline46mondego>            {<newline46mondego>                isValidInteger = false;<newline46mondego>                break;<newline46mondego>            }<newline46mondego>        }<newline46mondego>        if (isValidInteger)<newline46mondego>            super.replace(fp, offset, length, string, aset);<newline46mondego>        else<newline46mondego>            Toolkit.getDefaultToolkit().beep();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2887splitHere46","9478124splitHere46","@Override<newline46mondego>public void insertString(FilterBypass fb, int off<newline46mondego>                    , String str, AttributeSet attr) <newline46mondego>                            throws BadLocationException <newline46mondego>{<newline46mondego>    // remove non-digits<newline46mondego>    fb.insertString(off, str.replaceAll(<doubleQuotes46>\\D++<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>), attr);<newline46mondego>} <newline46mondego>@Override<newline46mondego>public void replace(FilterBypass fb, int off<newline46mondego>        , int len, String str, AttributeSet attr) <newline46mondego>                        throws BadLocationException <newline46mondego>{<newline46mondego>    // remove non-digits<newline46mondego>    fb.replace(off, len, str.replaceAll(<doubleQuotes46>\\D++<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>), attr);<newline46mondego>}<newline46mondego>"
"2888splitHere46","9478178splitHere46","NPC"
"2889splitHere46","9478178splitHere46","move()"
"2890splitHere46","9478243splitHere46","Semaphore"
"2891splitHere46","9478243splitHere46","tryAcquire()"
"2892splitHere46","9478243splitHere46","drain()"
"2893splitHere46","9478243splitHere46","release()"
"2894splitHere46","9478243splitHere46","AtomicInteger"
"2895splitHere46","9478243splitHere46","get()"
"2896splitHere46","9478243splitHere46","compareAndSet(oldValue, oldValue + 1)"
"2897splitHere46","9478243splitHere46","set()"
"2898splitHere46","9478346splitHere46","src/com/yourpackage/YourClass.java<newline46mondego>src/runone/OSTeeeennny.jpg<newline46mondego>src/runone/clown_fishTIny.jpg<newline46mondego>"
"2899splitHere46","9478346splitHere46","src/com/yourpackage/YourClass.java<newline46mondego>src/com/yourpackage/resources/OSTeeeennny.jpg<newline46mondego>src/com/yourpackage/resources/clown_fishTIny.jpg<newline46mondego>"
"2900splitHere46","9478346splitHere46","getClass().getResource(<doubleQuotes46>resources/OSTeeeennny.jpg<doubleQuotes46>)<newline46mondego>getClass().getResource(<doubleQuotes46>resources/clown_fishTIny.jpg<doubleQuotes46>)<newline46mondego>"
"2901splitHere46","9478430splitHere46","public static ErrorLevel getLevel(Error, ErrorInfo) {<newline46mondego>  //..<newline46mondego>}<newline46mondego>"
"2902splitHere46","9478483splitHere46","select p from Product p inner join p.retailers retailing <newline46mondego>where retailing.shop_id = :shopId<newline46mondego>"
"2903splitHere46","9478483splitHere46","shopId"
"2904splitHere46","9478483splitHere46","shop_id"
"2905splitHere46","9478617splitHere46","init() {<newline46mondego>//...ommited some not related code<newline46mondego>CompoundAuthorizationStrategy compoundAuthorizationStrategy = new CompoundAuthorizationStrategy();<newline46mondego>IAuthorizationStrategy membertPageAuthStrategy = new SimplePageAuthorizationStrategy( MemberTemplatePage.class,<newline46mondego>        HomePage.class )<newline46mondego>{<newline46mondego>    @Override<newline46mondego>    protected boolean isAuthorized()<newline46mondego>    {<newline46mondego>        if ( /* user not authorized */ )<newline46mondego>            {<newline46mondego>                throw new RestartResponseAtInterceptPageException( HomePage.class );<newline46mondego>            }<newline46mondego>            return true;<newline46mondego>    }<newline46mondego>};<newline46mondego><newline46mondego>IAuthorizationStrategy adminPageAuthStrategy = new SimplePageAuthorizationStrategy( AdminTemplatePage.class,<newline46mondego>        AdminLoginPage.class )<newline46mondego>{<newline46mondego>    @Override<newline46mondego>    protected boolean isAuthorized()<newline46mondego>    {<newline46mondego>        if ( /* user not authorized */ )<newline46mondego>            {<newline46mondego>                throw new RestartResponseAtInterceptPageException( AdminLoginPage.class );<newline46mondego>            }<newline46mondego>            return true;<newline46mondego>    }<newline46mondego>};<newline46mondego><newline46mondego>compoundAuthorizationStrategy.add( membertPageAuthStrategy );<newline46mondego>compoundAuthorizationStrategy.add( adminPageAuthStrategy );<newline46mondego><newline46mondego>getSecuritySettings().setAuthorizationStrategy( compoundAuthorizationStrategy );<newline46mondego>//...<newline46mondego>}<newline46mondego>"
"2906splitHere46","9478819splitHere46","getMinimumSize()"
"2907splitHere46","9478819splitHere46","super"
"2908splitHere46","9478846splitHere46","request.getParameterMap()"
"2909splitHere46","9478846splitHere46","Map<String, String[]>"
"2910splitHere46","9478846splitHere46","for (Map.Entry<String, String[]> entry :<newline46mondego>     ((Map<String, String[]>)request.getParameterMap()).entrySet())<newline46mondego>"
"2911splitHere46","9478901splitHere46","if (localName.equals(<doubleQuotes46>encoded<doubleQuotes46>)) // not content:encoded<newline46mondego>"
"2912splitHere46","9478903splitHere46","PatternLayout"
"2913splitHere46","9478903splitHere46","lo4j.properties"
"2914splitHere46","9478903splitHere46","Layout"
"2915splitHere46","9478903splitHere46","Layout layout = new PatternLayout(<doubleQuotes46>%d %5p [%t](%c:%L) - %m%n<doubleQuotes46>);<newline46mondego>"
"2916splitHere46","9478903splitHere46","log4j.properties"
"2917splitHere46","9478908splitHere46","class UpdateGeoLocation {<newline46mondego>    LocationManager locationManager;<newline46mondego>    String provider;<newline46mondego>    double lat, lng;<newline46mondego>    Location location;<newline46mondego>    Location returnlocation;<newline46mondego>    Context context;<newline46mondego><newline46mondego>    public static String locationdetails = null;<newline46mondego><newline46mondego>    public UpdateGeoLocation(Context context) {<newline46mondego>        this.context = context;     <newline46mondego>        Criteria criteria = new Criteria();<newline46mondego>        criteria.setAccuracy(Criteria.ACCURACY_FINE);<newline46mondego>        locationManager = (LocationManager) context<newline46mondego>                .getSystemService(Context.LOCATION_SERVICE);<newline46mondego>        provider = locationManager.getBestProvider(criteria, true);<newline46mondego>        location = locationManager.getLastKnownLocation(provider);<newline46mondego>        returnlocation = locationManager.getLastKnownLocation(provider);<newline46mondego>    }<newline46mondego><newline46mondego>    public Location getLocation(Location location) {<newline46mondego><newline46mondego>        if (location != null) {<newline46mondego>            Log.d(<doubleQuotes46>one<doubleQuotes46>, <doubleQuotes46>IF getLocation :: <doubleQuotes46> + location);<newline46mondego>            returnlocation.setLatitude(location.getLatitude());<newline46mondego>            returnlocation.setLongitude(location.getLongitude());<newline46mondego><newline46mondego>        } else {<newline46mondego>            try {<newline46mondego>                listenForLocation(provider);<newline46mondego>            } catch (NullPointerException nullPointerException) {<newline46mondego>                nullPointerException.printStackTrace();<newline46mondego>            } catch (Exception ex) {<newline46mondego>                ex.printStackTrace();<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        return returnlocation;<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    private void listenForLocation(String providerName) {<newline46mondego>        locationManager.requestLocationUpdates(providerName, 0, 0,<newline46mondego>                locationListener);<newline46mondego>        if (location != null) {<newline46mondego>            location.getLatitude();<newline46mondego>            location.getLongitude();<newline46mondego>            getLocation(location);<newline46mondego>        } else {<newline46mondego>            // Toast.makeText(context, <doubleQuotes46>location null<doubleQuotes46>,<newline46mondego>            // Toast.LENGTH_SHORT).show();<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    private final LocationListener locationListener = new LocationListener() {<newline46mondego>        public void onLocationChanged(Location location) {<newline46mondego>            returnlocation.setLatitude(location.getLatitude());<newline46mondego>            returnlocation.setLongitude(location.getLongitude());<newline46mondego>        }<newline46mondego><newline46mondego>        public void onProviderDisabled(String provider) {<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>        public void onProviderEnabled(String provider) {<newline46mondego>        }<newline46mondego><newline46mondego>        public void onStatusChanged(String provider, int status, Bundle extras) {<newline46mondego>        }<newline46mondego>    };<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>Following is the Activity where I used above class to get LatLong :<newline46mondego><newline46mondego>Location location = null;<newline46mondego><newline46mondego>OnCreate() :<newline46mondego><newline46mondego>try {<newline46mondego>    Looper.prepare();<newline46mondego>    if (null != (location = requestForLocation())) {<newline46mondego>        if (null != location) {<newline46mondego>            Log.d(<doubleQuotes46>one<doubleQuotes46>, <doubleQuotes46>Location :: <doubleQuotes46> + location.getLatitude());<newline46mondego>            Log.d(<doubleQuotes46>one<doubleQuotes46>, <doubleQuotes46>Location  LATLONG :: <doubleQuotes46> + location.getLongitude());<newline46mondego><newline46mondego>                        //Use intent or bundle here to send LatLong to other activities..<newline46mondego><newline46mondego><newline46mondego>        } else {<newline46mondego>            Log.d(<doubleQuotes46>one<doubleQuotes46>, <doubleQuotes46>Location not found:: <doubleQuotes46>);<newline46mondego><newline46mondego>        }<newline46mondego>    }<newline46mondego>} catch (Exception ex) {<newline46mondego>    ex.printStackTrace();<newline46mondego>} <newline46mondego><newline46mondego><newline46mondego>private Location requestForLocation() {<newline46mondego>    return new UpdateGeoLocation(MonsterLoginActivity.this)<newline46mondego>    .getLocation(null);<newline46mondego>}<newline46mondego>"
"2918splitHere46","9478927splitHere46","public static void initElements(ElementLocatorFactory factory, Object page)<newline46mondego>"
"2919splitHere46","9478927splitHere46","public static void initElements(FieldDecorator decorator, Object page)<newline46mondego>"
"2920splitHere46","9478983splitHere46","(0, 1, 2, 1, 4, 3)"
"2921splitHere46","9479101splitHere46","Sysout + CTRL-SPACE<newline46mondego>"
"2922splitHere46","9479147splitHere46","class Location<newline46mondego>{<newline46mondego>    private String id = null;<newline46mondego>    private double latitude = 0.0;<newline46mondego>    private double longitude = 0.0;<newline46mondego><newline46mondego>    public Location(String id, double latitude, double longitude)<newline46mondego>    {<newline46mondego>        this.id = id;<newline46mondego>        this.latitude = latitude;<newline46mondego>        this.longitude = longitude;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setId(String id)<newline46mondego>    {<newline46mondego>        this.id = id;<newline46mondego>    }<newline46mondego><newline46mondego>    public String getId()<newline46mondego>    {<newline46mondego>        return id;<newline46mondego>    }<newline46mondego><newline46mondego>    public double getLongitude()<newline46mondego>    {<newline46mondego>        return longitude;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setLongitude(double longitude)<newline46mondego>    {<newline46mondego>        this.longitude = longitude<newline46mondego>    }<newline46mondego><newline46mondego>    public double getLatitude()<newline46mondego>    {<newline46mondego>        return longitude;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setLatitude(double latitude)<newline46mondego>    {<newline46mondego>        this.latitude = latitude;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2923splitHere46","9479147splitHere46","double lat, lon;<newline46mondego>Vector<Location> vlocations = new Vector<Location>();<newline46mondego>vlocations.add(new Location(lat, lon));<newline46mondego>"
"2924splitHere46","9479158splitHere46","ThreadFactory"
"2925splitHere46","9479158splitHere46","<bean id=<doubleQuotes46>taskExecutor<doubleQuotes46> class=<doubleQuotes46>org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor<doubleQuotes46>><newline46mondego>    <property name=<doubleQuotes46>threadFactory<doubleQuotes46> ref=<doubleQuotes46>threadFactory<doubleQuotes46>/><newline46mondego></bean><newline46mondego><bean id=<doubleQuotes46>threadFactory<doubleQuotes46> class=<doubleQuotes46>org.springframework.scheduling.concurrent.CustomizableThreadFactory<doubleQuotes46>><newline46mondego>    <constructor-arg value=<doubleQuotes46>Custom-prefix-<doubleQuotes46>/><newline46mondego></bean><newline46mondego>"
"2926splitHere46","9479158splitHere46","@Bean<newline46mondego>public ThreadPoolTaskExecutor taskExecutor() {<newline46mondego>    final ThreadPoolTaskExecutor taskExecutor = new ThreadPoolTaskExecutor();<newline46mondego>    taskExecutor.setThreadFactory(threadFactory());<newline46mondego>    return taskExecutor;<newline46mondego>}<newline46mondego><newline46mondego>@Bean<newline46mondego>public ThreadFactory threadFactory() {<newline46mondego>    return new CustomizableThreadFactory(<doubleQuotes46>Custom-prefix-<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"2927splitHere46","9479158splitHere46","ThreadPoolTaskExecutor"
"2928splitHere46","9479158splitHere46","ExecutorConfigurationSupport"
"2929splitHere46","9479158splitHere46","setThreadFactory(java.util.concurrent.ThreadFactory)"
"2930splitHere46","9479213splitHere46","EditText yourEditText= (EditText) findViewById(R.id.yourEditText);<newline46mondego>InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);<newline46mondego>imm.showSoftInput(yourEditText, InputMethodManager.SHOW_IMPLICIT);<newline46mondego>"
"2931splitHere46","9479213splitHere46","InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);<newline46mondego> imm.hideSoftInputFromWindow(yourEditText.getWindowToken(), 0);<newline46mondego>"
"2932splitHere46","9479282splitHere46","ServerState class"
"2933splitHere46","9479282splitHere46","String theOutput = files[0].toString() + files[1].toString() + files[2].toString();"
"2934splitHere46","9479282splitHere46","toString()"
"2935splitHere46","9479282splitHere46","File class"
"2936splitHere46","9479285splitHere46","<dependency><newline46mondego> <groupId>org.apache.tomcat</groupId><newline46mondego> <artifactId>tomcat-servlet-api</artifactId><newline46mondego> <version>7.0.21</version><newline46mondego> <scope>provided</scope><newline46mondego></dependency><newline46mondego>"
"2937splitHere46","9479285splitHere46","<dependency><newline46mondego>   <groupId>javax.servlet</groupId><newline46mondego>   <artifactId>javax.servlet-api</artifactId><newline46mondego>   <version>3.0.1</version><newline46mondego>   <scope>provided</scope><newline46mondego></dependency><newline46mondego>"
"2938splitHere46","9479401splitHere46","bis.read(mybytearray, 0, mybytearray.length);<newline46mondego>"
"2939splitHere46","9479401splitHere46","os.write(mybytearray, 0, mybytearray.length);<newline46mondego>"
"2940splitHere46","9479401splitHere46","bytesRead = is.read(mybytearray,0,mybytearray.length);<newline46mondego>current = bytesRead;<newline46mondego>// thanks to A. CÃ¡diz for the bug fix<newline46mondego>do {<newline46mondego>   bytesRead =<newline46mondego>      is.read(mybytearray, current, (mybytearray.length-current));<newline46mondego>   if(bytesRead >= 0) current += bytesRead;<newline46mondego>} while(bytesRead > -1);<newline46mondego>"
"2941splitHere46","9479401splitHere46","int count;<newline46mondego>byte[] buffer = new byte[8192]; // or whatever you like<newline46mondego>while ((count = in.read(buffer)) > 0)<newline46mondego>{<newline46mondego>  out.write(buffer, 0, count);<newline46mondego>}<newline46mondego>out.close();<newline46mondego>in.close();<newline46mondego>"
"2942splitHere46","9479610splitHere46","public static void main(String... args) throws Exception {<newline46mondego>    BigInteger e = new BigInteger(<doubleQuotes46>9621052046061456501366587335847490032034738260531416442599992125724770869143777724434621136148270408224358486480789065076015439260049732834961669339663651068040517049948746219457579643120163445760970644691744741533662899190172821721584052976577686282851438621400884199179254302505283244747995592596611537181094200162016550417633813815524000523611778694711681246885146830340987509832366125391293211772272830763010707464147876271519220158561249284055201778976275<doubleQuotes46>);<newline46mondego>    BigInteger f =  new BigInteger(<doubleQuotes46>16676513155155711435633556290292399841994478533147079158165313450742666183857468374630705186073152798730185754009359158564262184760166850555421565829031677397531160732952407631566282672221888347405139275392725582249315145105384589417633027161798592285078352417743828277682057499510687432654973434263500652446355805121287249351524290685634309632867270787070026404872073959084720337580246072021126301925486445661096650037029829869513910200205317091132530162195304846449018937204755880662935929704531348715166585715335080615831412163500338513091079355521203276478413800219497108551811002174097217821125116752809771773184<doubleQuotes46>);<newline46mondego>    System.out.println(e.gcd(f)); //prints 3<newline46mondego>    BigInteger d;<newline46mondego>    if (e.gcd(f).equals(BigInteger.ONE)) {<newline46mondego>        d = e.modInverse(f);<newline46mondego>        System.out.println(d);<newline46mondego>    } else {<newline46mondego>        System.out.println(<doubleQuotes46>nop<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2943splitHere46","9479610splitHere46","public static void main(String... args) throws Exception {<newline46mondego>    BigInteger e = new BigInteger(<doubleQuotes46>2<doubleQuotes46>);<newline46mondego>    e = e.pow(2048);<newline46mondego>    BigInteger f =  e.add(BigInteger.ONE);<newline46mondego>    System.out.println(e.gcd(f)); //1<newline46mondego>    BigInteger d;<newline46mondego>    if (e.gcd(f).equals(BigInteger.ONE)) {<newline46mondego>        d = e.modInverse(f);<newline46mondego>        System.out.println(d);<newline46mondego>    } else {<newline46mondego>        System.out.println(<doubleQuotes46>nop<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2944splitHere46","9479669splitHere46","SimpleCursorAdapter.setViewBinder()"
"2945splitHere46","9479669splitHere46","setOnItemClickListener()"
"2946splitHere46","9479669splitHere46","SimpleCursorAdapter notes = new SimpleCursorAdapter(this, <newline46mondego>                R.layout.notes_row, c, from, to); <newline46mondego><newline46mondego>    notes.setViewBinder(new SimpleCursorAdapter.ViewBinder() { <newline46mondego><newline46mondego>public boolean setViewValue(View view, Cursor cursor, int column) <newline46mondego>{ <newline46mondego>TextView tv = (TextView) view; <newline46mondego>view.setTag=cursor.getInt(cursor.getColumnIndex (<doubleQuotes46>_id<doubleQuotes46>)); // You need to include the _id in the query<newline46mondego>tv.setText(String.Valueof(cursor.getInt(cursor.getColumnIndex (NotesDbAdapter.KEY_TITLE ))));<newline46mondego>return true; <newline46mondego>} <newline46mondego>});<newline46mondego><newline46mondego>         lv.setOnItemClickListener(new OnItemClickListener() { <newline46mondego><newline46mondego>         public void onItemClick(AdapterView<?> parent, View view, <newline46mondego>         int position, long id) { <newline46mondego><newline46mondego>         TextView tv=(TextView) view;<newline46mondego>     String ID=view.getTag();<newline46mondego>    // Delete ID from the DB<newline46mondego>    notes.notifyDataSetChanged(); <newline46mondego><newline46mondego>         }; <newline46mondego><newline46mondego>         });    <newline46mondego>    setListAdapter(notes); <newline46mondego><newline46mondego><newline46mondego>    } <newline46mondego>} <newline46mondego>"
"2947splitHere46","9479764splitHere46","if(pixel == null){<newline46mondego>"
"2948splitHere46","9479764splitHere46","public Pixel[][] pixel = new Pixel[tHeigh][tWidth];"
"2949splitHere46","9479764splitHere46","if(pixel[i][j] == null){<newline46mondego>"
"2950splitHere46","9479764splitHere46","random"
"2951splitHere46","9479764splitHere46","random"
"2952splitHere46","9479854splitHere46","Boolean"
"2953splitHere46","9479854splitHere46","dataVal.booleanValue()"
"2954splitHere46","9479854splitHere46","NullPointerException"
"2955splitHere46","9479854splitHere46","if (dataVal.booleanValue())"
"2956splitHere46","9479913splitHere46","Set<MyElementType> elements = EnumSet.allOf(MyElementType.class);<newline46mondego>Iterator<MyElementType> it = elements.iterator();<newline46mondego>while (it.hasNext()) {<newline46mondego>    MyElementType el = it.next();<newline46mondego>    // etc<newline46mondego>}<newline46mondego><newline46mondego>// or<newline46mondego>Iterator<MyElementType> it = Arrays.asList(MyElementType.values()).iterator();<newline46mondego>"
"2957splitHere46","9480049splitHere46","public static <T> T loadObject(Class<T> clazz, Serializable key) {<newline46mondego>    Session session = sessionFactory.getCurrentSession();<newline46mondego>    T dbObject;<newline46mondego><newline46mondego>    try {<newline46mondego>        session.beginTransaction();<newline46mondego>        dbObject = clazz.cast(session.get(clazz, key));<newline46mondego>    } <newline46mondego>    finally {<newline46mondego>        session.getTransaction().commit();<newline46mondego>    }<newline46mondego><newline46mondego>    return dbObject;<newline46mondego>}<newline46mondego>"
"2958splitHere46","9480049splitHere46","Initializer<T>"
"2959splitHere46","9480049splitHere46","public static <T> T loadObject(Class<T> clazz, <newline46mondego>                               Serializable key, <newline46mondego>                               Initializer<T> initializer) {<newline46mondego>    Session session = sessionFactory.getCurrentSession();<newline46mondego>    T dbObject;<newline46mondego><newline46mondego>    try {<newline46mondego>        session.beginTransaction();<newline46mondego>        dbObject = clazz.cast(session.get(clazz, key));<newline46mondego>        initializer.initialize(dbObject);<newline46mondego>    } <newline46mondego>    finally {<newline46mondego>        session.getTransaction().commit();<newline46mondego>    }<newline46mondego><newline46mondego>    return dbObject;<newline46mondego>}<newline46mondego>"
"2960splitHere46","9480125splitHere46","ps -e | grep java"
"2961splitHere46","9480493splitHere46","setFocusTraversalPolicy"
"2962splitHere46","9480493splitHere46","FocusTraversalPolicy"
"2963splitHere46","9480528splitHere46","GST_DEBUG_DUMP_DOT_DIR=/tmp/ gst-launch --gst-debug-level=2 gstrtpbin name=rtpbin latency=2 sync=false udpsrc name=udpsrc0 caps=<doubleQuotes46>application/x-rtp, media=audio, clock-rate=8000, payload=0, encoding-name=PCMU<doubleQuotes46> port=5000 ! rtpbin.recv_rtp_sink_0 rtpbin. ! rtppcmudepay ! mulawdec ! tee name=t0 ! queue max-size-buffers=150 ! liveadder name=mix1 ! mulawenc ! rtppcmupay ! udpsink name=udpsink1 host=192.168.0.101 port=5050 t0. ! queue max-size-buffers=150 ! liveadder name=mix2 ! mulawenc ! rtppcmupay ! udpsink name=udpsink2 host=192.168.0.112 port=5050  rtpbin. ! rtppcmudepay ! mulawdec ! tee name=t1 ! queue max-size-buffers=150 ! liveadder name=mix0 ! mulawenc ! rtppcmupay ! udpsink name=udpsink0 host=192.168.0.101 port=5051 t1. ! queue max-size-buffers=150 ! mix2. rtpbin. ! rtppcmudepay ! mulawdec ! tee name=t2 ! queue max-size-buffers=150 ! mix0. t2. ! queue max-size-buffers=150 ! mix1.<newline46mondego>"
"2964splitHere46","9480582splitHere46","jPanel1.revalidate();<newline46mondego>jPanel1.repaint();<newline46mondego>"
"2965splitHere46","9480654splitHere46","byte[] data=(DataBufferByte)bufferedImage.getRaster().getDataBuffer().getData(0);<newline46mondego>"
"2966splitHere46","9480669splitHere46","SharedPreferences sp = PreferenceManager.getDefaultSharedPreferences(this);<newline46mondego>String username = sp.getString(<doubleQuotes46>usernamePref<doubleQuotes46>,null);  <newline46mondego>String password= sp.getString(<doubleQuotes46>passwordPref<doubleQuotes46>,null);<newline46mondego>"
"2967splitHere46","9480669splitHere46","if(user.equals(users) && pass.equals(passw))<newline46mondego>"
"2968splitHere46","9480711splitHere46","InputStreamBody"
"2969splitHere46","9480711splitHere46","getContentLength"
"2970splitHere46","9480711splitHere46","public long getContentLength() {<newline46mondego>    return -1;<newline46mondego>}<newline46mondego>"
"2971splitHere46","9480711splitHere46","Transfer-Encoding: chunked"
"2972splitHere46","9480711splitHere46","InputStreamBody"
"2973splitHere46","9480711splitHere46","public class NoFileBody extends InputStreamBody {<newline46mondego><newline46mondego>  private final long length;<newline46mondego><newline46mondego>  public NoFileBody(final InputStream in, final String mimeType, final String filename, final long length) {<newline46mondego>    super(in, mimeType, filename);<newline46mondego>    this.length = length;<newline46mondego>  }<newline46mondego><newline46mondego>  @Override<newline46mondego>  public long getContentLength() {<newline46mondego>    return length;<newline46mondego>  }<newline46mondego><newline46mondego>}<newline46mondego>"
"2974splitHere46","9480847splitHere46","Bitmap bitmap = BitmapFactory.decodeFile(filePath);<newline46mondego>// Not quite sure if the returned bitmap is mutable, so<newline46mondego>Bitmap mutable = bitmap.copy(Bitmap.Config.RGB_565, true);<newline46mondego>"
"2975splitHere46","9480847splitHere46","int pixelRGB = mutable.getPixel(x, y);<newline46mondego>// Do whatever you have to do<newline46mondego>mutable.setPixel(x, y, pixelRGB);<newline46mondego>"
"2976splitHere46","9480847splitHere46","mutable.compress(Bitmap.CompressFormat.PNG, 100, new ByteArrayOutputStream(new FileOutputStream(_newFileImage)));<newline46mondego>"
"2977splitHere46","9481252splitHere46","verify"
"2978splitHere46","9481252splitHere46","verified = key.verify(OpenSSL::Digest::SHA1.new, Base64.decode64(signature), signed_data)"
"2979splitHere46","9481260splitHere46","public void paint(Graphics g) {<newline46mondego>        ...<newline46mondego>        String str = ... ;<newline46mondego>        int x0 = 10;<newline46mondego>        int y0 = getHeight() - 50;<newline46mondego>        Font f = g.getFont();<newline46mondego>        int lastWidth = 0;<newline46mondego>        for (int i = 0; i < str.length(); i++) {<newline46mondego>            char ch = str.charAt(i);<newline46mondego>            g.drawChar(ch, x0 + lastWidth, y0, 0);<newline46mondego>            lastWidth += f.charWidth(ch);<newline46mondego>        }<newline46mondego>        ...<newline46mondego>}     <newline46mondego>"
"2980splitHere46","9481298splitHere46","public static <T> T[] arrayConcat(T[]... arrays) {<newline46mondego>    int totalLen = 0;<newline46mondego>    for (T[] arr: arrays) {<newline46mondego>        totalLen += arr.length;<newline46mondego>    }<newline46mondego>    T[] all = (T[])Array.newInstance(<newline46mondego>        arrays.getClass().getComponentType().getComponentType(), totalLen);<newline46mondego>    int copied = 0;<newline46mondego>    for (T[] arr: arrays) {<newline46mondego>        System.arraycopy(arr, 0, all, copied, arr.length);<newline46mondego>        copied += arr.length;<newline46mondego>    }<newline46mondego>    return all;<newline46mondego>}<newline46mondego>"
"2981splitHere46","9481298splitHere46","T[][]"
"2982splitHere46","9481298splitHere46","T"
"2983splitHere46","9481298splitHere46","T[]"
"2984splitHere46","9481298splitHere46","T"
"2985splitHere46","9481298splitHere46","T[]"
"2986splitHere46","9481298splitHere46","T"
"2987splitHere46","9481298splitHere46","arrays"
"2988splitHere46","9481298splitHere46","U[][]"
"2989splitHere46","9481298splitHere46","U"
"2990splitHere46","9481298splitHere46","T"
"2991splitHere46","9481298splitHere46","U[]"
"2992splitHere46","9481298splitHere46","U[]"
"2993splitHere46","9481298splitHere46","T[]"
"2994splitHere46","9481367splitHere46","cal.add(Calendar.DAY_OF_MONTH, -1);<newline46mondego><newline46mondego>// We would get the bounce mails received yesterday<newline46mondego><newline46mondego>ReceivedDateTerm term  = new ReceivedDateTerm(ComparisonTerm.EQ,newDate(cal.getTimeInMillis()));<newline46mondego><newline46mondego>Message[] messages = folder.search(term)<newline46mondego>"
"2995splitHere46","9481405splitHere46","int indexToUse = 0-Math.round(Math.log(zoom)/Math.log(2));<newline46mondego>double zoomToUse = zoom/Math.pow(2, -indexToUse);<newline46mondego>"
"2996splitHere46","9481405splitHere46","double getZoom(int index, double zoomOnImage){<newline46mondego>    return Math.pow(2, -index) * zoomOnImage;<newline46mondego>}<newline46mondego>"
"2997splitHere46","9481515splitHere46","java.util.prefs.Preferences"
"2998splitHere46","9481515splitHere46","RCPrefs"
"2999splitHere46","9481515splitHere46","enum"
"3000splitHere46","9481665splitHere46","<execution>"
"3001splitHere46","9481665splitHere46","<executions><newline46mondego>    <execution><newline46mondego>        <phase>generate-sources</phase><newline46mondego>        <goals><newline46mondego>            <goal>generate</goal><newline46mondego>        </goals><newline46mondego>    </execution><newline46mondego></executions><newline46mondego>"
"3002splitHere46","9481778splitHere46","HttpServletRequest request = this.getThreadLocalRequest();<newline46mondego>HttpSession session = request.getSession();<newline46mondego>session.setMaxInactiveInterval(20*60);<newline46mondego>"
"3003splitHere46","9481779splitHere46","public static void swapList(List<Integer> list1, List<Integer> list2){<newline46mondego>    List<Integer> tmpList = new ArrayList<Integer>(list1);<newline46mondego>    list1.clear();<newline46mondego>    list1.addAll(list2);<newline46mondego>    list2.clear();<newline46mondego>    list2.addAll(tmpList);<newline46mondego>}<newline46mondego>"
"3004splitHere46","9481779splitHere46","List<Integer> list1 = getList1Magic();<newline46mondego>List<Integer> list2 = getList2Magic();<newline46mondego><newline46mondego>if (isSwapReferences()) {<newline46mondego>  // this does not affect the actual lists<newline46mondego>  List<Integer> temp = list2;<newline46mondego>  list2 = list1;<newline46mondego>  list1 = temp;<newline46mondego>} else if (isSwapListContent()) {<newline46mondego>  // this modifies the lists<newline46mondego>  swapList(list1, list2);  // method from above<newline46mondego>}<newline46mondego>"
"3005splitHere46","9481787splitHere46","<h:selectManyCheckbox>"
"3006splitHere46","9481787splitHere46","List<String>"
"3007splitHere46","9481787splitHere46","List<String>"
"3008splitHere46","9481787splitHere46","<h:form><newline46mondego>    <h:selectManyCheckbox value=<doubleQuotes46>#{bean.checkedValues}<doubleQuotes46> layout=<doubleQuotes46>pageDirection<doubleQuotes46>><newline46mondego>        <f:selectItems value=<doubleQuotes46>#{bean.availableValues}<doubleQuotes46> /><newline46mondego>    </h:selectManyCheckbox><newline46mondego>    <h:commandButton value=<doubleQuotes46>submit<doubleQuotes46> action=<doubleQuotes46>#{bean.submit}<doubleQuotes46> /><newline46mondego></h:form><newline46mondego>"
"3009splitHere46","9481787splitHere46","@ManagedBean<newline46mondego>@ViewScoped<newline46mondego>public class Bean {<newline46mondego><newline46mondego>    private List<String> checkedValues;<newline46mondego>    private List<String> availableValues;<newline46mondego><newline46mondego>    @PostConstruct<newline46mondego>    public void init() {<newline46mondego>        availableValues = new ArrayList<String>();<newline46mondego>        availableValues.add(<doubleQuotes46>1<doubleQuotes46>);<newline46mondego>        availableValues.add(<doubleQuotes46>2<doubleQuotes46>);<newline46mondego>        availableValues.add(<doubleQuotes46>3<doubleQuotes46>);<newline46mondego>        // ...<newline46mondego>    }<newline46mondego><newline46mondego>    public void submit() {<newline46mondego>        System.out.println(<doubleQuotes46>Checked values: <doubleQuotes46> + checkedValues);<newline46mondego>    }<newline46mondego><newline46mondego>    public List<String> getCheckedValues() {<newline46mondego>        return checkedValues;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setCheckedValues(List<String> checkedValues) {<newline46mondego>        this.checkedValues = checkedValues;<newline46mondego>    }<newline46mondego><newline46mondego>    public List<String> getAvailableValues() {<newline46mondego>        return availableValues;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"3010splitHere46","9481925splitHere46","FacesServlet"
"3011splitHere46","9481925splitHere46","web.xml"
"3012splitHere46","9481925splitHere46","*.jsf"
"3013splitHere46","9481925splitHere46","FacesServlet"
"3014splitHere46","9481925splitHere46","*.xhtml"
"3015splitHere46","9481925splitHere46","*.xhtml"
"3016splitHere46","9481925splitHere46","<servlet-mapping><newline46mondego>    <servlet-name>Faces Servlet</servlet-name><newline46mondego>    <url-pattern>*.xhtml</url-pattern><newline46mondego></servlet-mapping><newline46mondego>"
"3017splitHere46","9481925splitHere46","NullPointerException"
"3018splitHere46","9481925splitHere46","public Kontolist() {<newline46mondego>    kontos = kontofacade.findAll();<newline46mondego>}<newline46mondego>"
"3019splitHere46","9481925splitHere46","@PostConstruct<newline46mondego>public void init() {<newline46mondego>    kontos = kontofacade.findAll();<newline46mondego>}<newline46mondego>"
"3020splitHere46","9481925splitHere46","kontofacate"
"3021splitHere46","9482002splitHere46","&"
"3022splitHere46","9482002splitHere46","&amp;"
"3023splitHere46","9482014splitHere46","Collections.sort(temp)"
"3024splitHere46","9482014splitHere46","Arrays.sort()"
"3025splitHere46","9482014splitHere46","Collections.sort()"
"3026splitHere46","9482014splitHere46","Collections.shuffle()"
"3027splitHere46","9482014splitHere46","temp"
"3028splitHere46","9482014splitHere46","temp[i]"
"3029splitHere46","9482014splitHere46","temp.get(i)"
"3030splitHere46","9482014splitHere46","temp"
"3031splitHere46","9482156splitHere46","getUserGroups(long companyId)<newline46mondego>"
"3032splitHere46","9482369splitHere46","InetAddress.getLocalHost()"
"3033splitHere46","9482369splitHere46","InetAddress.getLocalHost()"
"3034splitHere46","9482369splitHere46","NetworkInterface.getNetworkInterfaces()"
"3035splitHere46","9482369splitHere46","InetAddress.getByName()"
"3036splitHere46","9482369splitHere46","InetAddress.getLocalHost()"
"3037splitHere46","9482398splitHere46","org.slf4j.impl.StaticLoggerBinder"
"3038splitHere46","9482398splitHere46","StaticLoggerBinder"
"3039splitHere46","9482408splitHere46","File txt1 = new File(<doubleQuotes46>txt1<doubleQuotes46>);<newline46mondego>File txt2 = new File(<doubleQuotes46>txt2<doubleQuotes46>);<newline46mondego>long lastmodified = txt1.lastModified();<newline46mondego>while(true) {<newline46mondego>    if (txt1.lastModified()>lastModified) {<newline46mondego>        // Read from txt2<newline46mondego>        // Increment value or initialize to 0;<newline46mondego>        // Write new value to txt2;<newline46mondego>        lastModified = txt2.lastModified();<newline46mondego>    }<newline46mondego>    try {<newline46mondego>        Thread.sleep(1000);<newline46mondego>    } catch(InterruptedException e) {<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3040splitHere46","9482508splitHere46","<h:commandXxx action=<doubleQuotes46>...<doubleQuotes46>>"
"3041splitHere46","9482508splitHere46","NavigationHandler#handleNavigation()"
"3042splitHere46","9482508splitHere46","FacesContext context = FacesContext.getCurrentInstance();<newline46mondego>NavigationHandler navigator = context.getApplication().getNavigationHandler();<newline46mondego>navigator.handleNavigation(context, null, <doubleQuotes46>pretty:login<doubleQuotes46>);<newline46mondego>"
"3043splitHere46","9482511splitHere46","int"
"3044splitHere46","9482511splitHere46","int ordinal = values.value1.ordinal()<newline46mondego><newline46mondego>//unmarshalling<newline46mondego>values.values[ordinal];<newline46mondego>"
"3045splitHere46","9482511splitHere46","String"
"3046splitHere46","9482511splitHere46","String name = values.value1.name();<newline46mondego><newline46mondego>//unmarshalling<newline46mondego>values.valueOf(name);<newline46mondego>"
"3047splitHere46","9482511splitHere46","enum"
"3048splitHere46","9482511splitHere46","ordinal()"
"3049splitHere46","9482511splitHere46","ordinal()"
"3050splitHere46","9482511splitHere46","enum"
"3051splitHere46","9482533splitHere46","controller = new AuthenticationController();<newline46mondego>"
"3052splitHere46","9482533splitHere46","@Autowired<newline46mondego>private UserManagement um;<newline46mondego>"
"3053splitHere46","9482533splitHere46","@Before<newline46mondego>public void setUp() {<newline46mondego>   controller = new AuthenticationController(um);<newline46mondego>}<newline46mondego>"
"3054splitHere46","9482533splitHere46","MockServletContext mockServletContext = new MockServletContext();<newline46mondego>mockServletContext.addInitParameter(<doubleQuotes46>contextConfigLocation<doubleQuotes46>, <doubleQuotes46>path to your xml config<doubleQuotes46>));<newline46mondego>ContextLoaderListener listener = new ContextLoaderListener();<newline46mondego>listener.initWebApplicationContext(mockServletContext);<newline46mondego>"
"3055splitHere46","9482676splitHere46","Graphics2D.drawString(AttributedCharacterIterator iterator, int x, int y)"
"3056splitHere46","9482676splitHere46","AttributedString"
"3057splitHere46","9482676splitHere46","AttributedString astr = new AttributedString(text);<newline46mondego>astr.addAttribute(TextAttribute.FONT, mainFont, 0, textLength);<newline46mondego>"
"3058splitHere46","9482676splitHere46","astr.addAttribute(TextAttribute.FONT, fallbackFont, fallbackBegin, fallbackEnd);<newline46mondego>"
"3059splitHere46","9482676splitHere46","g2d.drawString(astr.getIterator(), 20, 30);<newline46mondego>"
"3060splitHere46","9482676splitHere46","import java.awt.BorderLayout;<newline46mondego>import java.awt.Dimension;<newline46mondego>import java.awt.Font;<newline46mondego>import java.awt.Graphics;<newline46mondego>import java.awt.Graphics2D;<newline46mondego>import java.awt.font.TextAttribute;<newline46mondego>import java.text.AttributedString;<newline46mondego><newline46mondego>import javax.swing.JComponent;<newline46mondego>import javax.swing.JFrame;<newline46mondego><newline46mondego>public class FontTest extends JFrame {<newline46mondego><newline46mondego>    public FontTest() {<newline46mondego>        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);<newline46mondego>        getContentPane().setLayout(new BorderLayout());<newline46mondego>        getContentPane().add(new TestStringComponent());<newline46mondego>        pack();<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        java.awt.EventQueue.invokeLater(new Runnable() {<newline46mondego>            public void run() {<newline46mondego>                new FontTest().setVisible(true);<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class TestStringComponent extends JComponent {<newline46mondego><newline46mondego>    protected void paintComponent(Graphics g) {<newline46mondego>        Graphics2D g2d = (Graphics2D) g;<newline46mondego>        g.setColor(getBackground());<newline46mondego>        g.fillRect(0, 0, getWidth(), getHeight());<newline46mondego><newline46mondego>        g.setColor(getForeground());<newline46mondego><newline46mondego>        Font mainFont = new Font(<doubleQuotes46>Segoe Print<doubleQuotes46>, Font.PLAIN, 25);<newline46mondego>        Font fallbackFont = new Font(<doubleQuotes46>Serif<doubleQuotes46>, Font.PLAIN, 25);<newline46mondego><newline46mondego>        String s = <doubleQuotes46>Test æ¼¢é¼Žç¹?å?¤å?° Test æ¼¢é¼Žç¹?å?¤å?° Test<doubleQuotes46>;<newline46mondego><newline46mondego>        g2d.drawString(createFallbackString(s, mainFont, fallbackFont).getIterator(), 20, 30);<newline46mondego>    }<newline46mondego><newline46mondego>    public Dimension getPreferredSize() {<newline46mondego>        return new Dimension(500, 40);<newline46mondego>    }<newline46mondego><newline46mondego>    private AttributedString createFallbackString(String text, Font mainFont, Font fallbackFont) {<newline46mondego>        AttributedString result = new AttributedString(text);<newline46mondego><newline46mondego>        int textLength = text.length(); <newline46mondego>        result.addAttribute(TextAttribute.FONT, mainFont, 0, textLength);<newline46mondego><newline46mondego>        boolean fallback = false;<newline46mondego>        int fallbackBegin = 0;<newline46mondego>        for (int i = 0; i < text.length(); i++) {<newline46mondego>            boolean curFallback = !mainFont.canDisplay(text.charAt(i));<newline46mondego>            if (curFallback != fallback) {<newline46mondego>                fallback = curFallback;<newline46mondego>                if (fallback) {<newline46mondego>                    fallbackBegin = i;<newline46mondego>                } else {<newline46mondego>                    result.addAttribute(TextAttribute.FONT, fallbackFont, fallbackBegin, i);<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego>        return result;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3061splitHere46","9482721splitHere46","stmt"
"3062splitHere46","9482721splitHere46","checkAcc()"
"3063splitHere46","9482729splitHere46","CustomizedListView"
"3064splitHere46","9482813splitHere46","session.doWork(new Work() {<newline46mondego>    @Override<newline46mondego>    public void execute(Connection connection) throws SQLException {<newline46mondego>        //connection, finally!<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"3065splitHere46","9482841splitHere46","private void findAllPaths(LinkedList path, Junction node, Junction end)<newline46mondego>{   <newline46mondego>    path.add(node);<newline46mondego>    // etc...<newline46mondego>    path.removeLast();<newline46mondego>}<newline46mondego>"
"3066splitHere46","9482900splitHere46","<servlet><newline46mondego>        <servlet-name>GravityServlet</servlet-name><newline46mondego>        <servlet-class>org.granite.gravity.servlet3.GravityAsyncServlet</servlet-class> <newline46mondego>        <load-on-startup>1</load-on-startup><newline46mondego>    </servlet><newline46mondego>"
"3067splitHere46","9482924splitHere46","<prop key=<doubleQuotes46>hibernate.connection.release_mode<doubleQuotes46>>after_transaction</prop>"
"3068splitHere46","9482941splitHere46","Calendar cal = Calendar.getInstance();<newline46mondego>TimeZone tz = cal.getTimeZone();<newline46mondego>Log.d(<doubleQuotes46>Time zone<doubleQuotes46>,<doubleQuotes46>=<doubleQuotes46>+tz.getDisplayName());<newline46mondego>"
"3069splitHere46","9482941splitHere46","java.util.TimeZone"
"3070splitHere46","9482941splitHere46","TimeZone.getDefault()<newline46mondego>"
"3071splitHere46","9482963splitHere46","double d = ...<newline46mondego>BigDecimal db = new BigDecimal(d).setScale(12, BigDecimal.ROUND_HALF_UP);<newline46mondego>"
"3072splitHere46","9483053splitHere46","createTestDescription(java.lang.Class<?> clazz, java.lang.String name)<newline46mondego>"
"3073splitHere46","9483066splitHere46","URL"
"3074splitHere46","9483066splitHere46","URL"
"3075splitHere46","9483066splitHere46","final"
"3076splitHere46","9483134splitHere46","HashMap"
"3077splitHere46","9483134splitHere46","TreeMap"
"3078splitHere46","9483134splitHere46","TreeMap<Long,Object> map = new TreeMap<Long,Object>();<newline46mondego>Long key = 42;<newline46mondego>Map.Entry<Long,Object> low = map.floorEntry(key);<newline46mondego>Map.Entry<Long,Object> high = map.ceilingEntry(key);<newline46mondego>Object res = null;<newline46mondego>if (low != null && high != null) {<newline46mondego>    res = Math.abs(key-low.getKey()) < Math.abs(key-high.getKey())<newline46mondego>    ?   low.getValue()<newline46mondego>    :   high.getValue();<newline46mondego>} else if (low != null || high != null) {<newline46mondego>    res = low != null ? low.getValue() : high.getValue();<newline46mondego>}<newline46mondego>"
"3079splitHere46","9483220splitHere46","Element view = ...; // get the view element<newline46mondego>String value = view.getAttributeValue(<doubleQuotes46>noNamespaceSchemaLocation<doubleQuotes46>, Namespace.getNamespace(<doubleQuotes46>http://www.w3.org/2001/XMLSchema-instance<doubleQuotes46>));<newline46mondego>"
"3080splitHere46","9483225splitHere46","style=<doubleQuotes46>float: left<doubleQuotes46><newline46mondego>style=<doubleQuotes46>float: right<doubleQuotes46><newline46mondego>"
"3081splitHere46","9483267splitHere46","noga"
"3082splitHere46","9483267splitHere46","div"
"3083splitHere46","9483267splitHere46","Document doc = Jsoup.connect(<doubleQuotes46>http://www.arso.gov.si/vreme/napovedi%20in%20podatki/bio.html<doubleQuotes46>).get();<newline46mondego>    Element nogadiv = doc.getElementById(<doubleQuotes46>noga<doubleQuotes46>).child(0);<newline46mondego>    System.out.println(nogadiv);<newline46mondego>"
"3084splitHere46","9483267splitHere46","noga"
"3085splitHere46","9483328splitHere46","HttpDateParser"
"3086splitHere46","9483328splitHere46","HttpDateParser"
"3087splitHere46","9483328splitHere46","parse()"
"3088splitHere46","9483328splitHere46","String date = <doubleQuotes46>June 2, 2011<doubleQuotes46>;       <newline46mondego>    String time = <doubleQuotes46>120000<doubleQuotes46>; // desired time HHMMSS<newline46mondego><newline46mondego>    long l = 0;<newline46mondego><newline46mondego>    try {<newline46mondego>        StringBuffer sbDate = new StringBuffer();<newline46mondego><newline46mondego>        // append WEEKDAY. weekday is not relevant for the HttpParser.<newline46mondego>        sbDate.append(<doubleQuotes46>Sun, <doubleQuotes46>);<newline46mondego><newline46mondego>        // remove comma after month<newline46mondego>        int commaIndex = date.indexOf(<doubleQuotes46>,<doubleQuotes46>); <newline46mondego>        sbDate.append(date.substring(0, commaIndex));<newline46mondego>        sbDate.append(date.substring(commaIndex+1));<newline46mondego><newline46mondego>        sbDate.append(' ').append(time);<newline46mondego><newline46mondego>        l=HttpDateParser.parse(sbDate.toString());<newline46mondego><newline46mondego>    } catch (IndexOutOfBoundsException e) {<newline46mondego>        // the date is in wrong format<newline46mondego>    }<newline46mondego>"
"3089splitHere46","9483328splitHere46","HttpDateParser"
"3090splitHere46","9483608splitHere46","Booking"
"3091splitHere46","9483608splitHere46","super"
"3092splitHere46","9483608splitHere46","Hotel() {<newline46mondego>   super();<newline46mondego>}<newline46mondego>"
"3093splitHere46","9483608splitHere46","Booking"
"3094splitHere46","9483608splitHere46","Booking() { <newline46mondego>   ...<newline46mondego>}<newline46mondego>"
"3095splitHere46","9483608splitHere46","Booking"
"3096splitHere46","9483608splitHere46","Booking(String FirstName, String Lastname, int Housenumber, String thestreet, String <newline46mondego>  thePostcode) {<newline46mondego>    fname = FirstName;<newline46mondego>    lname = Lastname;<newline46mondego>    HouseNo = Housenumber;<newline46mondego>    Street = thestreet;<newline46mondego>    thePostcode = Postcode;<newline46mondego> }<newline46mondego>"
"3097splitHere46","9483608splitHere46","Booking"
"3098splitHere46","9483608splitHere46","Hotel"
"3099splitHere46","9483608splitHere46","Hotel(String FirstName, String Lastname, int Housenumber, String thestreet, String <newline46mondego>  thePostcode) {<newline46mondego>      super(FirstName, Lastname, Housenumber, thestreet, thePostcode);<newline46mondego>      ...<newline46mondego> }<newline46mondego>"
"3100splitHere46","9483608splitHere46","Hotel"
"3101splitHere46","9483608splitHere46","Booking"
"3102splitHere46","9483608splitHere46","Hotel"
"3103splitHere46","9483608splitHere46","Booking"
"3104splitHere46","9483624splitHere46","SWT.SYSTEM_MODAL"
"3105splitHere46","9483624splitHere46","SWT.APPLICATION_MODAL"
"3106splitHere46","9483624splitHere46","import org.eclipse.swt.SWT;<newline46mondego>import org.eclipse.swt.events.SelectionAdapter;<newline46mondego>import org.eclipse.swt.events.SelectionEvent;<newline46mondego>import org.eclipse.swt.layout.GridData;<newline46mondego>import org.eclipse.swt.layout.GridLayout;<newline46mondego>import org.eclipse.swt.widgets.Button;<newline46mondego>import org.eclipse.swt.widgets.Display;<newline46mondego>import org.eclipse.swt.widgets.Shell;<newline46mondego><newline46mondego><newline46mondego>public class ShellTest {<newline46mondego><newline46mondego>    public static void main(String[] args) <newline46mondego>    {<newline46mondego>        final Display display = new Display();<newline46mondego>        final Shell shell = new Shell(display);<newline46mondego>        shell.setLayout(new GridLayout());<newline46mondego><newline46mondego>        Button b = new Button(shell, SWT.PUSH);<newline46mondego>        b.setText(<doubleQuotes46>Open Shell<doubleQuotes46>);<newline46mondego>        b.addSelectionListener(new SelectionAdapter() {<newline46mondego>            public void widgetSelected(SelectionEvent e) {<newline46mondego>                openNewShell(shell);<newline46mondego>            }<newline46mondego>        });<newline46mondego>        shell.setSize(250, 150);<newline46mondego>        shell.open();<newline46mondego>        while (!shell.isDisposed()) {<newline46mondego>            if (!display.readAndDispatch())<newline46mondego>                display.sleep();<newline46mondego>        }<newline46mondego>        display.dispose();<newline46mondego>    }<newline46mondego><newline46mondego>    protected static void openNewShell(final Shell shell) <newline46mondego>    {<newline46mondego>        Shell child = new Shell(shell, SWT.TITLE|SWT.SYSTEM_MODAL| SWT.CLOSE | SWT.MAX);<newline46mondego>        child.setSize(100, 100);<newline46mondego>        child.setLayout(new GridLayout());<newline46mondego>        child.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true));<newline46mondego><newline46mondego>        child.open();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3107splitHere46","9483685splitHere46","*.war"
"3108splitHere46","9483685splitHere46","{Workspace_location}/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps"
"3109splitHere46","9483765splitHere46","forceMerge"
"3110splitHere46","9483765splitHere46","optimize"
"3111splitHere46","9483783splitHere46","AsynTask"
"3112splitHere46","9483783splitHere46","Service"
"3113splitHere46","9483783splitHere46","IntentService"
"3114splitHere46","9483835splitHere46","char[]"
"3115splitHere46","9483835splitHere46","char[][]"
"3116splitHere46","9483835splitHere46","public static void main(String... args) throws Exception {<newline46mondego>    List<char[]> myArray = new ArrayList<char[]>();<newline46mondego>    myArray.add(<doubleQuotes46>string1<doubleQuotes46>.toCharArray());<newline46mondego>    myArray.add(<doubleQuotes46>string2<doubleQuotes46>.toCharArray());<newline46mondego>    myArray.add(<doubleQuotes46>string3<doubleQuotes46>.toCharArray());<newline46mondego><newline46mondego>    char[][] charArray2D = myArray.toArray(new char[0][0]);<newline46mondego>    System.out.println(charArray2D.length); //prints 3<newline46mondego><newline46mondego>    StringBuilder s = new StringBuilder();<newline46mondego>    for (char[] c : myArray) {<newline46mondego>        s.append(String.copyValueOf(c));<newline46mondego>    }<newline46mondego>    char[] charArray1D = s.toString().toCharArray();<newline46mondego>    System.out.println(charArray1D.length); //prints 21<newline46mondego>}<newline46mondego>"
"3117splitHere46","9483916splitHere46","Apache Tomcat/6.0.35 logs"
"3118splitHere46","9484033splitHere46","ProgressMonitor(parentComponent, message, note, min, max)"
"3119splitHere46","9484033splitHere46","parentComponent"
"3120splitHere46","9484050splitHere46","11"
"3121splitHere46","9484050splitHere46","12"
"3122splitHere46","9484110splitHere46","DateFormat df = new SimpleDateFormat(<doubleQuotes46>HH:mm:ss<doubleQuotes46>);<newline46mondego>df.setTimeZone(TimeZone.getTimeZone(<doubleQuotes46>GMT<doubleQuotes46>));<newline46mondego>"
"3123splitHere46","9484367splitHere46","synchronized"
"3124splitHere46","9484367splitHere46","ThreadLocal"
"3125splitHere46","9484734splitHere46","(?:...)"
"3126splitHere46","9484734splitHere46","POLL\s+([ADM]{10})\s+(?:yes|(no)\s+([a-z. ]+))<newline46mondego>"
"3127splitHere46","9484734splitHere46","POLL\s+([ADM]{10})\s+(?:(yes)|(no)\s+([a-z. ]+))<newline46mondego>"
"3128splitHere46","9484734splitHere46","group[2]"
"3129splitHere46","9484734splitHere46","group[3]"
"3130splitHere46","9484734splitHere46","group[3]"
"3131splitHere46","9484734splitHere46","group[4]"
"3132splitHere46","9484734splitHere46","group[1]"
"3133splitHere46","9484734splitHere46","group[2]"
"3134splitHere46","9484734splitHere46","group[3]"
"3135splitHere46","9484734splitHere46","group[4]"
"3136splitHere46","9484848splitHere46","@FacesConverter(<doubleQuotes46>MyBigDecimalConverter<doubleQuotes46>)<newline46mondego>public class MyBigDecimalConverter extends NumberConverter {<newline46mondego>@Override<newline46mondego>public Object getAsObject(FacesContext arg0, UIComponent arg1, String arg2) {<newline46mondego>    try {<newline46mondego>        HtmlInputText it = (HtmlInputText) arg1;<newline46mondego>        ValueExpression ve = it.getValueExpression(<doubleQuotes46>value<doubleQuotes46>);<newline46mondego>        String expression = ve.getExpressionString();<newline46mondego>        String field = expression.replaceAll(<doubleQuotes46>#\\{.*\\.<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>        field = field.replace(<doubleQuotes46>}<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>        String parent = expression.replace(<doubleQuotes46>.<doubleQuotes46> + field, <doubleQuotes46><doubleQuotes46>);<newline46mondego>        ExpressionFactory expressionFactory = arg0.getApplication().getExpressionFactory();<newline46mondego>        ValueExpression exp = expressionFactory.createValueExpression(arg0.getELContext(), parent, Object.class);<newline46mondego>        Object obj = exp.getValue(arg0.getELContext());<newline46mondego><newline46mondego>        Digits d = null;    <newline46mondego>        Field f = obj.getClass().getDeclaredField(field);<newline46mondego>        d = f.getAnnotation(Digits.class);<newline46mondego>        return super.getAsObject(arg0, arg1, arg2);<newline46mondego>    } catch (ConverterException e) {<newline46mondego>        FacesMessage msg = new FacesMessage(d.message());<newline46mondego>        msg.setSeverity(FacesMessage.SEVERITY_ERROR);<newline46mondego>        throw new ConverterException(msg);<newline46mondego>    } catch (Exception e) {<newline46mondego>        return super.getAsObject(arg0, arg1, arg2);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>@Override<newline46mondego>public String getAsString(FacesContext arg0, UIComponent arg1, Object arg2) {<newline46mondego>    return super.getAsString(arg0, arg1, arg2);<newline46mondego>}<newline46mondego><newline46mondego>}<newline46mondego>"
"3137splitHere46","9484848splitHere46","<h:outputText value=<doubleQuotes46>#{someBean.someEntity.nome}<doubleQuotes46> /><newline46mondego>    <h:form><newline46mondego>        <p:inputText value=<doubleQuotes46>#{someBean.someEntity.someBigDecimal}<doubleQuotes46> id=<doubleQuotes46>test<doubleQuotes46>><newline46mondego>            <f:converter converterId=<doubleQuotes46>MyBigDecimalConverter<doubleQuotes46> /><newline46mondego>        </p:inputText><newline46mondego>        <h:message for=<doubleQuotes46>test<doubleQuotes46>></h:message><newline46mondego>        <p:commandButton value=<doubleQuotes46>teste<doubleQuotes46> process=<doubleQuotes46>@form<doubleQuotes46> update=<doubleQuotes46>@form<doubleQuotes46>></p:commandButton><newline46mondego>    </h:form><newline46mondego>"
"3138splitHere46","9485004splitHere46","RunNotifier"
"3139splitHere46","9485004splitHere46","RunListener"
"3140splitHere46","9485004splitHere46","Runner"
"3141splitHere46","9485004splitHere46","RunNotifier"
"3142splitHere46","9485004splitHere46","Runner"
"3143splitHere46","9485004splitHere46","RunNotifier"
"3144splitHere46","9485004splitHere46","RunListener"
"3145splitHere46","9485004splitHere46","RunListener"
"3146splitHere46","9485012splitHere46","public void paintComponent(Graphics g)<newline46mondego>{<newline46mondego>  super.paintComponent(g);<newline46mondego>  if(image != null)<newline46mondego>    g.drawImage(image, 0, 0, this);<newline46mondego>}<newline46mondego>"
"3147splitHere46","9485012splitHere46","getWidth()"
"3148splitHere46","9485012splitHere46","getHeight()"
"3149splitHere46","9485012splitHere46","getScaledInstance()"
"3150splitHere46","9485071splitHere46","new File(string).getCanonicalPath();"
"3151splitHere46","9485071splitHere46","./"
"3152splitHere46","9485071splitHere46","../"
"3153splitHere46","9485071splitHere46","URL"
"3154splitHere46","9485136splitHere46","spritebatch.setProjectionMatrix()"
"3155splitHere46","9485178splitHere46","IllegalStateException"
"3156splitHere46","9485178splitHere46","String name = Book.getName();<newline46mondego> if (name == null) {<newline46mondego>     throw new IllegalStateException<newline46mondego>         (<doubleQuotes46>Method foo must not be called when the book has no name<doubleQuotes46>);<newline46mondego> }<newline46mondego>"
"3157splitHere46","9485178splitHere46","NullPointerException"
"3158splitHere46","9485300splitHere46","String.substring()"
"3159splitHere46","9485300splitHere46","String.length()"
"3160splitHere46","9485300splitHere46","ArrayList<String>.add()"
"3161splitHere46","9485300splitHere46","ArrayList"
"3162splitHere46","9485300splitHere46","clientValue"
"3163splitHere46","9485300splitHere46","clientValue.substring()"
"3164splitHere46","9485300splitHere46","String"
"3165splitHere46","9485300splitHere46","String"
"3166splitHere46","9485300splitHere46","List<String> list = new ArrayList<String>();<newline46mondego>list.add(clientValue.substring(0, clientValue.length()-2));<newline46mondego>list.add(clientValue.substring(clientValue.length()-2));<newline46mondego>"
"3167splitHere46","9485387splitHere46","root"
"3168splitHere46","9485387splitHere46","three"
"3169splitHere46","9485387splitHere46","ancestor-or-self::*"
"3170splitHere46","9485387splitHere46","//*[namespace::*<newline46mondego>      [name() = 'foo' and . = 'http://www.foo.com']<newline46mondego>  and<newline46mondego>    not(parent::*<newline46mondego>         [namespace::*<newline46mondego>           [name() = 'foo' and . = 'http://www.foo.com']<newline46mondego>         ]<newline46mondego>        )<newline46mondego>    ]<newline46mondego>"
"3171splitHere46","9485387splitHere46","<root xmlns:foo=<doubleQuotes46>http://www.foo.com<doubleQuotes46>><newline46mondego>    <one><newline46mondego>        <!-- children nodes here --><newline46mondego>    </one><newline46mondego>    <two><newline46mondego>        <!-- children nodes here --><newline46mondego>    </two><newline46mondego>    <three xmlns:foo=<doubleQuotes46>http://www.foo.com<doubleQuotes46>><newline46mondego>        <!-- children nodes here --><newline46mondego>    </three><newline46mondego></root><newline46mondego>"
"3172splitHere46","9485387splitHere46","root"
"3173splitHere46","9485407splitHere46","data %filekey% [3:%piece3% 5:%piece5% 7:%piece7% 8:%piece8% 9:%piece9%]"
"3174splitHere46","9485407splitHere46","%filekey%"
"3175splitHere46","9485407splitHere46","%pieceN%"
"3176splitHere46","9485407splitHere46","data %filekey% [3:%piece3% 5:%piece5% 7:%piece7% 8:%piece8% 9:%piece9%]"
"3177splitHere46","9485407splitHere46","java.io.InputStream.read(byte[])"
"3178splitHere46","9485407splitHere46",".read(byte[], int, int)"
"3179splitHere46","9485407splitHere46","int"
"3180splitHere46","9485407splitHere46","\n"
"3181splitHere46","9485496splitHere46","BufferedImage"
"3182splitHere46","9485496splitHere46","image.getRGB(0, 0, image.getWidth(), image.getHeight(), array, 0, image.getWidth());"
"3183splitHere46","9485496splitHere46","BufferedImage"
"3184splitHere46","9485496splitHere46","BufferedImage image = new BufferedImage(16, 16, BufferedImage.TYPE_BYTE_BINARY);<newline46mondego><newline46mondego>    image.setRGB(0, 0, 0xFFFFFFFF);<newline46mondego>    image.setRGB(1, 0, 0xFF000000);<newline46mondego>    image.setRGB(0, 1, 0xFF000000);<newline46mondego>    image.setRGB(1, 1, 0xFFFFFFFF);<newline46mondego><newline46mondego>    System.out.println(image.getRGB(0, 0));<newline46mondego>    System.out.println(image.getRGB(1, 0));<newline46mondego>    System.out.println(image.getRGB(0, 1));<newline46mondego>    System.out.println(image.getRGB(1, 1));<newline46mondego><newline46mondego>    int[] array = image.getRGB(0, 0, image.getWidth(), image.getHeight(), null, 0, image.getWidth());<newline46mondego>    System.out.println(array[0]); // at (0,0)<newline46mondego>    System.out.println(array[1]); // at (1,0)<newline46mondego>    System.out.println(array[16]); // at (0,1)<newline46mondego>    System.out.println(array[17]); // at (1,1)<newline46mondego>"
"3185splitHere46","9485686splitHere46","if(day.equals(<doubleQuotes46>Tue<doubleQuotes46>))<newline46mondego>"
"3186splitHere46","9485690splitHere46","public final class SampleBusinessProcess {<newline46mondego><newline46mondego>    @PrePersist<newline46mondego>    private void preperist(final MyObject obj) {<newline46mondego>      entityManager.store(new Object2());<newline46mondego>    }<newline46mondego><newline46mondego> }<newline46mondego>"
"3187splitHere46","9485691splitHere46","Iterable"
"3188splitHere46","9485691splitHere46","iterator()"
"3189splitHere46","9485691splitHere46","Iterator"
"3190splitHere46","9485691splitHere46","%module test<newline46mondego><newline46mondego>%include <doubleQuotes46>std_string.i<doubleQuotes46><newline46mondego>%include <doubleQuotes46>std_map.i<doubleQuotes46><newline46mondego>"
"3191splitHere46","9485691splitHere46","MapIterator"
"3192splitHere46","9485691splitHere46","Iterator"
"3193splitHere46","9485691splitHere46","Iterable"
"3194splitHere46","9485691splitHere46","%typemap(javainterfaces) MapIterator <doubleQuotes46>java.util.Iterator<String><doubleQuotes46><newline46mondego>%typemap(javacode) MapIterator %{<newline46mondego>  public void remove() throws UnsupportedOperationException {<newline46mondego>    throw new UnsupportedOperationException();<newline46mondego>  }<newline46mondego><newline46mondego>  public String next() throws java.util.NoSuchElementException {<newline46mondego>    if (!hasNext()) {<newline46mondego>      throw new java.util.NoSuchElementException();<newline46mondego>    }<newline46mondego><newline46mondego>    return nextImpl();<newline46mondego>  }<newline46mondego>%}<newline46mondego>"
"3195splitHere46","9485691splitHere46","MapIterator"
"3196splitHere46","9485691splitHere46","next()"
"3197splitHere46","9485691splitHere46","std::map"
"3198splitHere46","9485691splitHere46","const_iterator"
"3199splitHere46","9485691splitHere46","%javamethodmodifiers MapIterator::nextImpl <doubleQuotes46>private<doubleQuotes46>;<newline46mondego>%inline %{<newline46mondego>  struct MapIterator {<newline46mondego>    typedef std::map<int,std::string> map_t;<newline46mondego>    MapIterator(const map_t& m) : it(m.begin()), map(m) {}<newline46mondego>    bool hasNext() const {<newline46mondego>      return it != map.end();<newline46mondego>    }<newline46mondego><newline46mondego>    const std::string& nextImpl() {<newline46mondego>      const std::pair<int,std::string>& ret = *it++;<newline46mondego>      return ret.second;<newline46mondego>    }<newline46mondego>  private:<newline46mondego>    map_t::const_iterator it;<newline46mondego>    const map_t& map;    <newline46mondego>  };<newline46mondego>%}<newline46mondego>"
"3200splitHere46","9485691splitHere46","std::map"
"3201splitHere46","9485691splitHere46","Iterable"
"3202splitHere46","9485691splitHere46","std::map"
"3203splitHere46","9485691splitHere46","MapIterator"
"3204splitHere46","9485691splitHere46","%typemap(javainterfaces) std::map<int,std::string> <doubleQuotes46>Iterable<String><doubleQuotes46><newline46mondego><newline46mondego>%newobject std::map<int,std::string>::iterator() const;<newline46mondego>%extend std::map<int,std::string> {<newline46mondego>  MapIterator *iterator() const {<newline46mondego>    return new MapIterator(*$self);<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>%template(MyMap) std::map<int,std::string>;<newline46mondego>"
"3205splitHere46","9485691splitHere46","%template"
"3206splitHere46","9485691splitHere46","Double"
"3207splitHere46","9485691splitHere46","Integer"
"3208splitHere46","9485691splitHere46","double"
"3209splitHere46","9485691splitHere46","int"
"3210splitHere46","9485751splitHere46","public class TestRegEx1 {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        Pattern pat = Pattern.compile(<doubleQuotes46>^(ABC) ?([0-9]{4}|[0-9]{6})?(?:(?:/)([0-9]{4}|[0-9]{6}))?(?:(?: ?XYZ ?)([0-9]{4}))?$<doubleQuotes46>);<newline46mondego>        try {<newline46mondego>            Field groupCount = Pattern.class.getDeclaredField(<doubleQuotes46>capturingGroupCount<doubleQuotes46>);<newline46mondego>            groupCount.setAccessible(true);<newline46mondego>            int count = ((Integer) groupCount.get(pat)) - 1;<newline46mondego>            System.out.println(<doubleQuotes46>count : <doubleQuotes46> + count);<newline46mondego>        } catch (Exception e) { }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3211splitHere46","9485751splitHere46",".matcher(String)"
"3212splitHere46","9485751splitHere46","Pattern"
"3213splitHere46","9485751splitHere46","public class TestRegEx2 {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        Pattern pat = Pattern.compile(<doubleQuotes46>^(ABC) ?([0-9]{4}|[0-9]{6})?(?:(?:/)([0-9]{4}|[0-9]{6}))?(?:(?: ?XYZ ?)([0-9]{4}))?$<doubleQuotes46>);<newline46mondego>        int count = pat.matcher(<doubleQuotes46><doubleQuotes46>).groupCount(); // it turns out it doesn't matter what pattern you use here<newline46mondego>        System.out.println(<doubleQuotes46>count : <doubleQuotes46> + count);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3214splitHere46","9485753splitHere46","indexOf()"
"3215splitHere46","9485759splitHere46","public interface OnSwipeListener <newline46mondego>{<newline46mondego>    public void onUpwardsSwipe();<newline46mondego>    public void onDownwardsSwipe();<newline46mondego>    public void onLeftwardsSwipe();<newline46mondego>    public void onRightwardsSwipe();<newline46mondego>}<newline46mondego>"
"3216splitHere46","9485759splitHere46","public class SwipeRecogniser implements OnTouchListener {<newline46mondego><newline46mondego>    private OnSwipeListener onSwipeListener;<newline46mondego>    private float XWherePressed;<newline46mondego>    private float XWhereReleased;<newline46mondego>    private float YWherePressed;<newline46mondego>    private float YWhereReleased;<newline46mondego>    private static final int MINIMUM_DISTANCE_FOR_SWIPE = 100;<newline46mondego><newline46mondego><newline46mondego>    public SwipeRecogniser(OnSwipeListener onSwipeListener)<newline46mondego>    {<newline46mondego>        this.onSwipeListener = onSwipeListener;<newline46mondego>    }<newline46mondego><newline46mondego>    public boolean onTouch(View v, MotionEvent event)<newline46mondego>    {<newline46mondego>        switch(event.getAction())<newline46mondego>        {<newline46mondego><newline46mondego>        case MotionEvent.ACTION_DOWN:<newline46mondego>            this.XWherePressed = event.getX();<newline46mondego>            this.YWherePressed = event.getY();<newline46mondego><newline46mondego>            break;<newline46mondego><newline46mondego>        case MotionEvent.ACTION_UP:<newline46mondego>            this.XWhereReleased = event.getX();<newline46mondego>            this.YWhereReleased = event.getY();<newline46mondego><newline46mondego>            float deltaX = XWhereReleased - XWherePressed;<newline46mondego>            float deltaY = YWhereReleased - YWherePressed;<newline46mondego><newline46mondego>            if (Math.abs( deltaX ) > this.MINIMUM_DISTANCE_FOR_SWIPE)<newline46mondego>            {<newline46mondego>                //HORIZONTAL SWIPE<newline46mondego>                if(deltaX > 0 )<newline46mondego>                {<newline46mondego>                    onSwipeListener.onRightwardsSwipe();<newline46mondego>                    return true;<newline46mondego>                }<newline46mondego><newline46mondego>                if(deltaX < 0)<newline46mondego>                {<newline46mondego>                    onSwipeListener.onLeftwardsSwipe();<newline46mondego>                    return true;<newline46mondego>                }<newline46mondego><newline46mondego>            }<newline46mondego>            else return true;<newline46mondego><newline46mondego>            if (Math.abs( deltaY) > this.MINIMUM_DISTANCE_FOR_SWIPE)<newline46mondego>            {<newline46mondego>                //VERTICAL SWIPE<newline46mondego>                if( deltaY < 0 )<newline46mondego>                {<newline46mondego>                    onSwipeListener.onDownwardsSwipe();<newline46mondego>                    return true;<newline46mondego>                }<newline46mondego><newline46mondego>                if ( deltaY > 0 )<newline46mondego>                {<newline46mondego>                    onSwipeListener.onUpwardsSwipe();<newline46mondego>                    return true;<newline46mondego>                }<newline46mondego><newline46mondego>            }<newline46mondego>            else return true;<newline46mondego><newline46mondego>            break;  <newline46mondego>        }   <newline46mondego>        return true;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3217splitHere46","9485759splitHere46","public class MyClass extends Activity implements OnSwipeListener<newline46mondego>{<newline46mondego> protected void onCreate(Bundle stuff)<newline46mondego> {<newline46mondego>  //<newline46mondego>  this.setOnTouchListener(new SwipeRecogniser(this));<newline46mondego> }<newline46mondego><newline46mondego> public void onUpwardsSwipe(){/*methods*/}<newline46mondego> public void onDownwardsSwipe(){/*methods*/}<newline46mondego> public void onLeftwardsSwipe(){/*methods*/}<newline46mondego> public void onRightwardsSwipe(){/*methods*/}<newline46mondego>}<newline46mondego>"
"3218splitHere46","9485850splitHere46","JButton[] blackButtons = new JButton[4 * 8];<newline46mondego>JButton[] whiteButtons = new JButton[4 * 8];<newline46mondego><newline46mondego>for(int i = 0; i < blackButtons.length; i++)<newline46mondego>{<newline46mondego>    blackButtons[i] = new JButton(<doubleQuotes46>B<doubleQuotes46>);<newline46mondego>    blackButtons[i].setBackground(Color.BLACK);<newline46mondego>}<newline46mondego>for(int i = 0; i < whiteButtons.length; i++)<newline46mondego>{<newline46mondego>    whiteButtons[i] = new JButton(<doubleQuotes46>W<doubleQuotes46>);<newline46mondego>    whiteButtons[i].setBackground(Color.WHITE);<newline46mondego>}<newline46mondego>"
"3219splitHere46","9485850splitHere46","for (int i = 0; i < 8; i++) {<newline46mondego>    if (i % 2 == 0) {<newline46mondego>        for (int j = 0; j < 4; j++) {<newline46mondego>            p1.add(blackButtons[4 * i + j]);<newline46mondego>            p1.add(whiteButtons[4 * i + j]);<newline46mondego>        }<newline46mondego>    } else {<newline46mondego>        for (int j = 0; j < 4; j++) {<newline46mondego>            p1.add(whiteButtons[4 * i + j]);<newline46mondego>            p1.add(blackButtons[4 * i + j]);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>add(p1);<newline46mondego>"
"3220splitHere46","9485914splitHere46","Source xsl = ...<newline46mondego>SAXTransformerFactory factory = (SAXTransformerFactory) TransformerFactory.newInstance();<newline46mondego>TransformerHandler handler = factory.newTransformerHandler(xsl);<newline46mondego><newline46mondego>DOMResult result = new DOMResult();<newline46mondego><newline46mondego>handler.setResult(result);<newline46mondego><newline46mondego>marshaller.marshal(inputObject, handler);<newline46mondego><newline46mondego>transformedObject = unmarshaller.unmarshal(result.getNode());<newline46mondego>"
"3221splitHere46","9485995splitHere46","Pane"
"3222splitHere46","9485995splitHere46","Pane container = new Pane();<newline46mondego>container.getChildren().add(imageView);<newline46mondego><newline46mondego>...<newline46mondego>// event happened<newline46mondego>container.getChildren().clear();<newline46mondego>container.getChildren().add(mediaView);<newline46mondego>"
"3223splitHere46","9485995splitHere46","Accordion"
"3224splitHere46","9485995splitHere46","TabPane"
"3225splitHere46","9486129splitHere46","public class DonationsFacadeTest {<newline46mondego><newline46mondego><newline46mondego>private EntityManager em; <newline46mondego>private EntityTransaction tx; <newline46mondego>DonationsFacade donations;<newline46mondego><newline46mondego>public DonationsFacadeTest() {<newline46mondego>}<newline46mondego><newline46mondego>@Before<newline46mondego>public void setUpClass() throws Exception {<newline46mondego><newline46mondego>    EntityManagerFactory emf = Persistence.createEntityManagerFactory(<doubleQuotes46>Foundation2<doubleQuotes46>);<newline46mondego>    em = emf.createEntityManager();<newline46mondego>    tx = em.getTransaction(); <newline46mondego>    this.donations = new DonationsFacade(); <newline46mondego>    this.donations.em = em;<newline46mondego>}<newline46mondego><newline46mondego>/**<newline46mondego> * Test of setPaid method, of class DonationsFacade.<newline46mondego> */<newline46mondego>@Test<newline46mondego>public void testSetPaid() throws Exception {<newline46mondego><newline46mondego>    int id = 1;<newline46mondego>    String transId = <doubleQuotes46>123<doubleQuotes46>;<newline46mondego><newline46mondego>    boolean expResult = false;<newline46mondego>    boolean result = donations.setPaid(id, transId);<newline46mondego>    assertEquals(expResult, result);<newline46mondego><newline46mondego>}<newline46mondego>}<newline46mondego>"
"3226splitHere46","9486129splitHere46","<persistence version=<doubleQuotes46>2.0<doubleQuotes46> xmlns=<doubleQuotes46>http://java.sun.com/xml/ns/persistence<doubleQuotes46> ... ><newline46mondego><persistence-unit name=<doubleQuotes46>Foundation2<doubleQuotes46> transaction-type=<doubleQuotes46>RESOURCE_LOCAL<doubleQuotes46>><newline46mondego>    <class>org.scmc.foundation.session.DonationsFacadeTest</class><newline46mondego>    <exclude-unlisted-classes>true</exclude-unlisted-classes><newline46mondego>    <properties><newline46mondego>       <property name=<doubleQuotes46>javax.persistence.jdbc.driver<doubleQuotes46>   value=<doubleQuotes46>com.mysql.jdbc.Driver<doubleQuotes46> /><newline46mondego>       <property name=<doubleQuotes46>javax.persistence.jdbc.url<doubleQuotes46> value=<doubleQuotes46>jdbc:mysql://localhost:3306/foundation<doubleQuotes46>/><newline46mondego>       <property name=<doubleQuotes46>javax.persistence.jdbc.user<doubleQuotes46> value=<doubleQuotes46>root<doubleQuotes46>/><newline46mondego>       <property name=<doubleQuotes46>javax.persistence.jdbc.password<doubleQuotes46> value=<doubleQuotes46>password<doubleQuotes46>/><newline46mondego>    </properties><newline46mondego></persistence-unit><newline46mondego>"
"3227splitHere46","9486129splitHere46","<dependency><newline46mondego>        <groupId>mysql</groupId><newline46mondego>        <artifactId>mysql-connector-java</artifactId><newline46mondego>        <version>5.1.18</version><newline46mondego>    </dependency><newline46mondego>"
"3228splitHere46","9486171splitHere46","public class NativeCode {<newline46mondego>    public static native boolean CreateSession();<newline46mondego>}<newline46mondego>"
"3229splitHere46","9486171splitHere46","com.example.NativeCode"
"3230splitHere46","9486171splitHere46","extern <doubleQuotes46>C<doubleQuotes46><newline46mondego>JNIEXPORT jboolean JNICALL Java_com_example_NativeCode_CreateSession(JniEnv* env, jclass clazz)<newline46mondego>{<newline46mondego>    return JNI_TRUE;<newline46mondego>}<newline46mondego>"
"3231splitHere46","9486264splitHere46","if (user.length() == 0)  <newline46mondego>"
"3232splitHere46","9486264splitHere46","Zero"
"3233splitHere46","9486289splitHere46","int lowNibble = bb.get(index) & 0x0f; // the lowest 4 bits<newline46mondego>int hiNibble = (bb.get(index) >> 4) & 0x0f; // the highest 4 bits.<newline46mondego>"
"3234splitHere46","9486576splitHere46","java -cp etc/application.properties:./lib/properties-loader-0.0.1-SNAPSHOT.jar<newline46mondego>"
"3235splitHere46","9486576splitHere46","./etc/application.properties"
"3236splitHere46","9486576splitHere46","./lib/properties-loader-0.0.1-SNAPSHOT.jar"
"3237splitHere46","9486576splitHere46","java -cp etc:./lib/properties-loader-0.0.1-SNAPSHOT.jar<newline46mondego>"
"3238splitHere46","9486576splitHere46","Thread.currentThread().getContextClassLoader().getResourceAsStream(<doubleQuotes46>application.properties<doubleQuotes46>);<newline46mondego>"
"3239splitHere46","9486576splitHere46","mkdir props; cd props<newline46mondego>mkdir etc; touch etc/application.properties<newline46mondego>mkdir test; vi test/PropLoader.java<newline46mondego>"
"3240splitHere46","9486576splitHere46","package test;<newline46mondego><newline46mondego>import java.io.InputStream;<newline46mondego><newline46mondego>public class PropLoader {<newline46mondego>   public static void main(String[] args) {<newline46mondego>      try {<newline46mondego>         final String path;<newline46mondego>         if(args.length == 1) path = args[0].trim();<newline46mondego>         else path = <doubleQuotes46>etc/application.properties<doubleQuotes46>;<newline46mondego><newline46mondego>         final InputStream is = Thread.currentThread().getContextClassLoader().getResourceAsStream(path);<newline46mondego>         if(is == null) throw new RuntimeException(<doubleQuotes46>Failed to load <doubleQuotes46> + path + <doubleQuotes46> as a resource<doubleQuotes46>);<newline46mondego>         else System.out.printf(<doubleQuotes46>Loaded resource from path: %s\n<doubleQuotes46>, path);<newline46mondego>      } catch(Exception e) {<newline46mondego>         e.printStackTrace();<newline46mondego>      }<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"3241splitHere46","9486576splitHere46","javac test/PropLoader.java<newline46mondego>java -cp . test.PropLoader<newline46mondego>"
"3242splitHere46","9486576splitHere46","Loaded resource from path: etc/application.properties"
"3243splitHere46","9486604splitHere46","Set.remove(i)"
"3244splitHere46","9486604splitHere46","i"
"3245splitHere46","9486604splitHere46","List.remove(i)"
"3246splitHere46","9486604splitHere46","i"
"3247splitHere46","9486604splitHere46","Index  0  1  2  3  4  5  6<newline46mondego>Value -3 -2 -1  0  1  2  3<newline46mondego>"
"3248splitHere46","9486604splitHere46","list.remove(0)"
"3249splitHere46","9486604splitHere46","Index  0  1  2  3  4  5<newline46mondego>Value -2 -1  0  1  2  3<newline46mondego>"
"3250splitHere46","9486604splitHere46","list.remove(1)"
"3251splitHere46","9486604splitHere46","Index  0  1  2  3  4<newline46mondego>Value -2  0  1  2  3<newline46mondego>"
"3252splitHere46","9486604splitHere46","list.remove(2)"
"3253splitHere46","9486604splitHere46","Index  0  1  2  3<newline46mondego>Value -2  0  2  3<newline46mondego>"
"3254splitHere46","9486604splitHere46","list.remove(3)"
"3255splitHere46","9486604splitHere46","Index  0  1  2<newline46mondego>Value -2  0  2<newline46mondego>"
"3256splitHere46","9486625splitHere46","if (distance > (r1 + r2)) <newline46mondego>{<newline46mondego>    // No overlap<newline46mondego>    System.out.println(<doubleQuotes46>Circle2 does not overlap Circle1<doubleQuotes46>);<newline46mondego>}<newline46mondego>else if ((distance <= Math.abs(r1 - r2)) <newline46mondego>{<newline46mondego>    // Inside<newline46mondego>    System.out.println(<doubleQuotes46>Circle2 is inside Circle1<doubleQuotes46>);<newline46mondego>}<newline46mondego>else              // if (distance <= r1 + r2)<newline46mondego>{<newline46mondego>   // Overlap<newline46mondego>   System.out.println(<doubleQuotes46>Circle2 overlaps Circle1<doubleQuotes46>);<newline46mondego>} <newline46mondego>"
"3257splitHere46","9486664splitHere46","theJFrame = JFrame(<newline46mondego>    size = (400, 350)            #outer box<newline46mondego>)<newline46mondego>"
"3258splitHere46","9486742splitHere46","Double d1 = new Double(MyUtils.calcSmoothDays(date0, new Date()));<newline46mondego>Double d2 = new Double(MyUtils.calcSmoothDays(date1, new Date()));<newline46mondego><newline46mondego>return d1.compareTo(d2);<newline46mondego>"
"3259splitHere46","9486765splitHere46","onCreate"
"3260splitHere46","9486765splitHere46","display1 = display.getText().toString();<newline46mondego>//   v ^ these now refer to the members of class HelloAndroidActivity<newline46mondego>displayValue = Double.parseDouble(display1);<newline46mondego>"
"3261splitHere46","9486941splitHere46","int[] ar = { 2, 1, 1, 2, 3, 3, 2, 2, 2, 1 };<newline46mondego>    int max=0,<newline46mondego>        maxStart=0,<newline46mondego>        count=1;<newline46mondego><newline46mondego>    for(int i=1; i<ar.length; i++) {<newline46mondego>        if (ar[i-1] == ar[i]) {<newline46mondego>            count++;<newline46mondego>            if(count > max) {<newline46mondego>                max = count;<newline46mondego>                maxStart = i-count+1;<newline46mondego>            }<newline46mondego>        }else {<newline46mondego>            count=1;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    System.out.println(<doubleQuotes46>Sub array begins from <doubleQuotes46> + maxStart);<newline46mondego><newline46mondego>    for(int i = maxStart; i < maxStart + max; i++) {<newline46mondego>        System.out.print(ar[i] + <doubleQuotes46> <doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>}<newline46mondego>"
"3262splitHere46","9486987splitHere46","gdx-stb-truetype"
"3263splitHere46","9486987splitHere46","BitmapFont"
"3264splitHere46","9486987splitHere46","BitmapFont font;<newline46mondego>public static final String FONT_CHARACTERS = <doubleQuotes46>abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789][_!$%#@|\\/?-+=()*&.;,{}\<doubleQuotes46>Â´`'<><doubleQuotes46>;<newline46mondego>"
"3265splitHere46","9486987splitHere46","font = TrueTypeFontFactory.createBitmapFont(Gdx.files.internal(<doubleQuotes46>font.ttf<doubleQuotes46>), FONT_CHARACTERS, 12.5f, 7.5f, 1.0f, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());<newline46mondego>font.setColor(1f, 0f, 0f, 1f);<newline46mondego>"
"3266splitHere46","9486987splitHere46","createBitmapFont()"
"3267splitHere46","9486987splitHere46","batch.begin();<newline46mondego>font.draw(font, <doubleQuotes46>This is some text<doubleQuotes46>, 10, 10);<newline46mondego>batch.end();<newline46mondego>"
"3268splitHere46","9487105splitHere46","Serializable"
"3269splitHere46","9487153splitHere46","A.class"
"3270splitHere46","9487153splitHere46","this"
"3271splitHere46","9487153splitHere46","public class A {<newline46mondego>    public static void f1() {<newline46mondego>        synchronized(A.class) {<newline46mondego>            ...<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public void f2() {<newline46mondego>        synchronized(this) {<newline46mondego>            ...<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3272splitHere46","9487153splitHere46","f2"
"3273splitHere46","9487246splitHere46","Executors.newFixedThreadPool"
"3274splitHere46","9487246splitHere46","Executors.newCachedThreadPool"
"3275splitHere46","9487278splitHere46","String joined = Joiner.on('-').join(parts);<newline46mondego>"
"3276splitHere46","9487410splitHere46","try {<newline46mondego>    Credentials credentials = new UsernamePasswordCredentials(<doubleQuotes46>admin<doubleQuotes46>, <doubleQuotes46>password<doubleQuotes46>);  //-u admin:password<newline46mondego>    DefaultHttpClient httpClient = new DefaultHttpClient();<newline46mondego>    httpClient.getCredentialsProvider().setCredentials(AuthScope.ANY, credentials);<newline46mondego>    HttpPut put = new HttpPut(<doubleQuotes46>http://localhost:8080/my-server/file.ext<doubleQuotes46>);  //-X PUT<newline46mondego>    put.setEntity(new FileEntity(new File(<doubleQuotes46>/absolute/path/file/to/upload/file.ext<doubleQuotes46>), <doubleQuotes46>image/png<doubleQuotes46>));  //@ - absolute path<newline46mondego>    httpClient.execute(put);<newline46mondego>} catch(Exception e) {<newline46mondego>    //-f, fail silently<newline46mondego>}<newline46mondego>"
"3277splitHere46","9487449splitHere46","foobar.proto"
"3278splitHere46","9487449splitHere46","package test;<newline46mondego><newline46mondego>message Foo {<newline46mondego>    optional int32 i = 1;<newline46mondego>    extensions 10 to 99999;<newline46mondego>}<newline46mondego><newline46mondego>message Bar {<newline46mondego>    extend Foo {<newline46mondego>        optional int32 j = 10001;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3279splitHere46","9487449splitHere46","Foobar.java"
"3280splitHere46","9487449splitHere46","Foobar.Bar"
"3281splitHere46","9487449splitHere46","Foobar.Foo"
"3282splitHere46","9487449splitHere46","import static org.junit.Assert.assertEquals;<newline46mondego>import org.junit.Test;<newline46mondego>import test.Foobar.Bar;<newline46mondego>import test.Foobar.Foo;<newline46mondego><newline46mondego>public class TestFooBar {<newline46mondego><newline46mondego>    @Test<newline46mondego>    public void testFooBar() {<newline46mondego>        Foo foo = Foo.newBuilder().setI(123).setExtension(Bar.j, 456).build();<newline46mondego>        assertEquals(Integer.valueOf(456), foo.getExtension(Bar.j));<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3283splitHere46","9487641splitHere46","instanceof"
"3284splitHere46","9487641splitHere46","if (packet instanceof TCPPacket) {<newline46mondego>    TCPPacket pac3 = (TCPPacket)packet;<newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"3285splitHere46","9487805splitHere46","<@:include file=<doubleQuotes46><%= request.getContextPath() %>/index.html<doubleQuotes46> /><newline46mondego>"
"3286splitHere46","9487805splitHere46","javax.servlet.ServletContext context = application.getContext(<doubleQuotes46>WAR Name<doubleQuotes46>);"
"3287splitHere46","9487805splitHere46","javax.servlet.RequestDispatcher rd = context.getRequestDispatcher(<doubleQuotes46>index.html<doubleQuotes46>);<newline46mondego>   rd.include(request, response);"
"3288splitHere46","9487805splitHere46","<context path=<doubleQuotes46>/WAR Name<doubleQuotes46> debug=<doubleQuotes46>0<doubleQuotes46> reloadable=<doubleQuotes46>true<doubleQuotes46> crosscontext=<doubleQuotes46>true<doubleQuotes46>>"
"3289splitHere46","9487911splitHere46","java.awt.Dimension"
"3290splitHere46","9487911splitHere46","java.awt.geom"
"3291splitHere46","9487911splitHere46","Dimension2D"
"3292splitHere46","9487911splitHere46","Dimension"
"3293splitHere46","9487911splitHere46","int"
"3294splitHere46","9487911splitHere46","double"
"3295splitHere46","9487911splitHere46","Dimension2D.Float"
"3296splitHere46","9488096splitHere46","public static void  login(String userCode,String password){        <newline46mondego>    User loginUser = User.find(<doubleQuotes46>byUserCodeAndPassword<doubleQuotes46>,userCode,password).first();<newline46mondego>    if(loginUser == null){<newline46mondego>        flash.put(<doubleQuotes46>username<doubleQuotes46>,userCode);<newline46mondego>        flash.error(<doubleQuotes46>Invalid Credentials<doubleQuotes46>);<newline46mondego>        index();<newline46mondego>    }<newline46mondego>    else{<newline46mondego>        Cache.set(session.getId(),loginUser,<doubleQuotes46>20mn<doubleQuotes46>);<newline46mondego>        Home.Home();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3297splitHere46","9488096splitHere46","POST    /                                       Application.login<newline46mondego>"
"3298splitHere46","9488096splitHere46","<div id=<doubleQuotes46>login<doubleQuotes46>><newline46mondego>#{form @login(), id:'formLogin'}<newline46mondego><p class=<doubleQuotes46>field<doubleQuotes46>><newline46mondego>    <label>User Code:</label><newline46mondego>    <input type=<doubleQuotes46>text<doubleQuotes46>  name=<doubleQuotes46>userCode<doubleQuotes46> size=<doubleQuotes46>19<doubleQuotes46> value=<doubleQuotes46>${flash.userCode}<doubleQuotes46> required><newline46mondego> </p><newline46mondego><newline46mondego><p class=<doubleQuotes46>field<doubleQuotes46>><newline46mondego>    <label>Password:</label><newline46mondego>    & <input type=<doubleQuotes46>password<doubleQuotes46> name=<doubleQuotes46>password<doubleQuotes46> size=<doubleQuotes46>19<doubleQuotes46> required><newline46mondego></p><newline46mondego><p class=<doubleQuotes46>buttons<doubleQuotes46>><newline46mondego>    <input type=<doubleQuotes46>submit<doubleQuotes46> value=<doubleQuotes46>Login<doubleQuotes46>><newline46mondego></p><newline46mondego>#{/form}<newline46mondego>"
"3299splitHere46","9488115splitHere46","join"
"3300splitHere46","9488231splitHere46","private String obenglobish (String word) {<newline46mondego>    String result = <doubleQuotes46><doubleQuotes46>;<newline46mondego>    for (int i = 0; i < word.length(); i++) {<newline46mondego>        char c = word.charAt(i);<newline46mondego>        if (isEnglishVowel(c)) {<newline46mondego>            if (c == 'e' && i == word.length()-1) {<newline46mondego>                result += c;<newline46mondego>            } else {<newline46mondego>                if(i!=0 && isEnglishVowel(word.charAt(i-1))) {<newline46mondego>                    result += c;<newline46mondego>                } else {<newline46mondego>                    result = result + <doubleQuotes46>ob<doubleQuotes46> + c;<newline46mondego>                }                   <newline46mondego>            }<newline46mondego>        } else {<newline46mondego>            result += c;<newline46mondego>        } <newline46mondego>    }<newline46mondego>    return result;<newline46mondego>}<newline46mondego>"
"3301splitHere46","9488465splitHere46","displayValue"
"3302splitHere46","9488465splitHere46","total1"
"3303splitHere46","9488465splitHere46","public void getOperator(String btnText){<newline46mondego>    theOperator = btnText.charAt(0);<newline46mondego><newline46mondego><newline46mondego><newline46mondego>    total1+=Double.parseDouble(display.getText().ToString());<newline46mondego>    display.setText(<doubleQuotes46><doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"3304splitHere46","9488465splitHere46","public void getOperator(String btnText){<newline46mondego>    theOperator = btnText.charAt(0);<newline46mondego><newline46mondego><newline46mondego>    displayValue = Double.parseDouble(display.getText().ToString());<newline46mondego>    total1+=displayValue;<newline46mondego>    display.setText(<doubleQuotes46><doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"3305splitHere46","9488477splitHere46","List<Base>"
"3306splitHere46","9488477splitHere46","Base"
"3307splitHere46","9488477splitHere46","List<? extend Base>"
"3308splitHere46","9488477splitHere46","Base"
"3309splitHere46","9488477splitHere46","List<? extends Base>"
"3310splitHere46","9488477splitHere46","List<T extends Base>"
"3311splitHere46","9488477splitHere46","List<T extends Base>"
"3312splitHere46","9488477splitHere46","List<? extends Base>"
"3313splitHere46","9488477splitHere46","List<Base>"
"3314splitHere46","9488540splitHere46","%h"
"3315splitHere46","9488540splitHere46","user.home"
"3316splitHere46","9488540splitHere46","System.out.println(<doubleQuotes46>%h: <doubleQuotes46> + System.getProperty(<doubleQuotes46>user.home<doubleQuotes46>));"
"3317splitHere46","9488540splitHere46","java -Djava.util.logging.config.file=mylogging.properties<newline46mondego>"
"3318splitHere46","9488540splitHere46","paths with spaces + Java == pain and suffering<newline46mondego>"
"3319splitHere46","9488540splitHere46","/"
"3320splitHere46","9488648splitHere46","ArrayList<Object>"
"3321splitHere46","9488648splitHere46","Collections.list(Collections.enumeration(lhMap.values())).subList(0, 100)<newline46mondego>"
"3322splitHere46","9488648splitHere46","HashMap"
"3323splitHere46","9488648splitHere46","HashMap"
"3324splitHere46","9488648splitHere46","HashSet"
"3325splitHere46","9488648splitHere46","Map<Integer, Pair<Double, SelectedRoad>> hashmap3 =<newline46mondego>  new LinkedHashMap<Integer, Pair<Double, SelectedRoad>>();<newline46mondego><newline46mondego>// [...] add 216 elements to hasmap3 here somehow<newline46mondego><newline46mondego>ArrayList<Pair<Double,SelectedRoad>> firstPairs = <newline46mondego>  Collections.list(Collections.enumeration(hashmap3.values())).subList(0, 100)<newline46mondego><newline46mondego>// you can then view your Pairs' SelectedRow values with them with:<newline46mondego>//  (assuming that:<newline46mondego>//    - your Pair class comes from Apache Commons Lang 3.0<newline46mondego>//    - your SelectedRoad class implements a decent toString() )<newline46mondego>for (final Pair<Double, SelectedRoad> p : firstPairs) {<newline46mondego>    System.out.println(<doubleQuotes46>double: <doubleQuotes46> + p.left);<newline46mondego>    System.out.println(<doubleQuotes46>road  : <doubleQuotes46> + p.right);<newline46mondego>}<newline46mondego>"
"3326splitHere46","9488659splitHere46","foo=bar{0}"
"3327splitHere46","9488659splitHere46","String.format(bundle.getString(<doubleQuotes46>foo<doubleQuotes46>), fooNum);"
"3328splitHere46","9488877splitHere46","<T>"
"3329splitHere46","9488877splitHere46","T"
"3330splitHere46","9488877splitHere46","T"
"3331splitHere46","9488877splitHere46","putFavorite(String.class, <doubleQuotes46>Some string<doubleQuotes46>);<newline46mondego>putFavorite(Integer.class, Integer.valueOf(1234));<newline46mondego>putFavorite(SomeClass.class, new SomeClass());<newline46mondego>"
"3332splitHere46","9488895splitHere46","_"
"3333splitHere46","9488901splitHere46","prepareRenderer()"
"3334splitHere46","9488901splitHere46","isSelected"
"3335splitHere46","9488901splitHere46","if (isSelect) {<newline46mondego>    this.setBackground(Color.cyan);<newline46mondego>}<newline46mondego>"
"3336splitHere46","9488901splitHere46","UIManager"
"3337splitHere46","9488901splitHere46","Table.selectionBackground"
"3338splitHere46","9488901splitHere46","UIManager.put(<doubleQuotes46>Table.selectionBackground<doubleQuotes46>, Color.cyan);<newline46mondego>"
"3339splitHere46","9489012splitHere46","JFrame"
"3340splitHere46","9489012splitHere46","JFrame"
"3341splitHere46","9489012splitHere46","JDialog"
"3342splitHere46","9489012splitHere46","ModalityTypes"
"3343splitHere46","9489012splitHere46","setModal"
"3344splitHere46","9489015splitHere46","Animation"
"3345splitHere46","9489015splitHere46","Form.registerAnimated()"
"3346splitHere46","9489015splitHere46","java.util.Timer"
"3347splitHere46","9489073splitHere46","Number"
"3348splitHere46","9489073splitHere46","inputText"
"3349splitHere46","9489073splitHere46","NumberFormat formatter = NumberFormat.getNumberInstance(Locale.ENGLISH);<newline46mondego>// NumberConverter turns input string into Number<newline46mondego>Number number = formatter.parse(<doubleQuotes46>10,10<doubleQuotes46>);<newline46mondego>// Expression language coerces the Number to BigDecimal<newline46mondego>BigDecimal decimal = BigDecimal.valueOf(number.doubleValue());<newline46mondego>// On output back to browser:<newline46mondego>String output = formatter.format(decimal);<newline46mondego>System.out.println(output);<newline46mondego>"
"3350splitHere46","9489073splitHere46","outputText"
"3351splitHere46","9489073splitHere46","toString()"
"3352splitHere46","9489073splitHere46","BigDecimal"
"3353splitHere46","9489073splitHere46","1,010"
"3354splitHere46","9489073splitHere46","1010.0"
"3355splitHere46","9489073splitHere46","NumberConverter"
"3356splitHere46","9489073splitHere46","BigDecimal"
"3357splitHere46","9489073splitHere46","BigInteger"
"3358splitHere46","9489073splitHere46","new BigDecimal(A)"
"3359splitHere46","9489073splitHere46","new BigDecimal(A.doubleValue())"
"3360splitHere46","9489254splitHere46","file:/usr/local/apache-tomcat-7.0.26/bin/C,<newline46mondego>file:/usr/local/apache-tomcat-7.0.26/bin/\cygwin\usr\local\apache-tomcat-7.0.26\bin\bootstrap.jar;C,<newline46mondego>file:/usr/local/apache-tomcat-7.0.26/bin/\cygwin\usr\local\apache-tomcat-7.0.26\bin\tomcat-juli.jar<newline46mondego>"
"3361splitHere46","9489254splitHere46","export CLASSPATH=`cygpath $CLASSPATH`<newline46mondego>"
"3362splitHere46","9489256splitHere46","private void dumpMyDataClass() throws IOException, BadBytecode, Exception {<newline46mondego>    ClassFile cf = new ClassFile(new DataInputStream(getClass().getResourceAsStream(<doubleQuotes46>MyData.class<doubleQuotes46>)));<newline46mondego><newline46mondego>    // Dump fields:<newline46mondego>    for (Object fieldInfoObj : cf.getFields()) {<newline46mondego>        FieldInfo fieldInfo = (FieldInfo) fieldInfoObj;<newline46mondego>        System.out.printf(<doubleQuotes46>Field %s; %s%n<doubleQuotes46>, fieldInfo.getName(), fieldInfo.getDescriptor());<newline46mondego>    }<newline46mondego><newline46mondego>    MethodInfo minfo = cf.getMethod(<doubleQuotes46>add<doubleQuotes46>);<newline46mondego>    CodeAttribute ca = minfo.getCodeAttribute();<newline46mondego>    for (CodeIterator ci = ca.iterator(); ci.hasNext();) {<newline46mondego>        int address = ci.next();<newline46mondego>        int op = ci.byteAt(address);<newline46mondego><newline46mondego>        String params = <doubleQuotes46><doubleQuotes46>;<newline46mondego>        switch (op) {<newline46mondego>            case Opcode.INVOKEINTERFACE:<newline46mondego>                int a1 = ci.s16bitAt(address + 1);<newline46mondego>                params += <doubleQuotes46> <doubleQuotes46> + cf.getConstPool().getInterfaceMethodrefName(a1);<newline46mondego>                System.out.println(<doubleQuotes46>a1 = <doubleQuotes46> + a1);<newline46mondego>                break;<newline46mondego>        }<newline46mondego><newline46mondego>        System.out.printf(<doubleQuotes46>Line %4d. Address %7d: %s%s%n<doubleQuotes46>, minfo.getLineNumber(address), address, Mnemonic.OPCODE[op], params);<newline46mondego>    }<newline46mondego><newline46mondego>    // Command line tool of javassist:<newline46mondego>    String pathToClass = System.getProperty(<doubleQuotes46>user.dir<doubleQuotes46>) + <doubleQuotes46>/target/classes/jeggen/test2/MyData.class<doubleQuotes46>;<newline46mondego>    Dump.main(new String[] { pathToClass });<newline46mondego>}<newline46mondego>"
"3363splitHere46","9489355splitHere46","public static double getFitness(int x, int y, int r, File[] fileArray)<newline46mondego>"
"3364splitHere46","9489355splitHere46","getFitness(1, 1, 1, imgList);<newline46mondego>"
"3365splitHere46","9489401splitHere46","SELECT  NVL (tb.ddate, to_date('2002-10-15', 'YYYY-MM-DD') )<newline46mondego>FROM tb<newline46mondego>"
"3366splitHere46","9489463splitHere46","ImmutableMap.Builder"
"3367splitHere46","9489463splitHere46","ImmutableMap<String,String> myMap = ImmutableMap.<String, String>builder()<newline46mondego>    .put(<doubleQuotes46>key1<doubleQuotes46>, <doubleQuotes46>value1<doubleQuotes46>) <newline46mondego>    .put(<doubleQuotes46>key2<doubleQuotes46>, <doubleQuotes46>value2<doubleQuotes46>) <newline46mondego>    .put(<doubleQuotes46>key3<doubleQuotes46>, <doubleQuotes46>value3<doubleQuotes46>) <newline46mondego>    .put(<doubleQuotes46>key4<doubleQuotes46>, <doubleQuotes46>value4<doubleQuotes46>) <newline46mondego>    .put(<doubleQuotes46>key5<doubleQuotes46>, <doubleQuotes46>value5<doubleQuotes46>) <newline46mondego>    .put(<doubleQuotes46>key6<doubleQuotes46>, <doubleQuotes46>value6<doubleQuotes46>) <newline46mondego>    .put(<doubleQuotes46>key7<doubleQuotes46>, <doubleQuotes46>value7<doubleQuotes46>) <newline46mondego>    .put(<doubleQuotes46>key8<doubleQuotes46>, <doubleQuotes46>value8<doubleQuotes46>) <newline46mondego>    .put(<doubleQuotes46>key9<doubleQuotes46>, <doubleQuotes46>value9<doubleQuotes46>)<newline46mondego>    .build();<newline46mondego>"
"3368splitHere46","9489686splitHere46","-Xbootclasspath:/p"
"3369splitHere46","9489686splitHere46","java -Xbootclasspath/p:<pathtooverridejarhere> mypackage.MyClass<newline46mondego>"
"3370splitHere46","9489704splitHere46","public class MemoryCache {<newline46mondego>    private HashMap<String, SoftReference<Bitmap>> cache=new HashMap<String, SoftReference<Bitmap>>();<newline46mondego><newline46mondego>    public Bitmap get(String id){<newline46mondego>        if(!cache.containsKey(id))<newline46mondego>            return null;<newline46mondego>        SoftReference<Bitmap> ref=cache.get(id);<newline46mondego>        return ref.get();<newline46mondego>    }<newline46mondego><newline46mondego>    public void put(String id, Bitmap bitmap){<newline46mondego>        cache.put(id, new SoftReference<Bitmap>(bitmap));<newline46mondego>    }<newline46mondego><newline46mondego>    public void clear() {<newline46mondego>        cache.clear();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3371splitHere46","9489885splitHere46","URL u = new URL(<doubleQuotes46>http://www.google.com<doubleQuotes46>);<newline46mondego>URLConnection conn = u.openConnection();<newline46mondego>BufferedReader in = new BufferedReader(<newline46mondego>                        new InputStreamReader(<newline46mondego>                            conn.getInputStream()));<newline46mondego>StringBuffer buffer = new StringBuffer();<newline46mondego>String inputLine;<newline46mondego>while ((inputLine = in.readLine()) != null) <newline46mondego>    buffer.append(inputLine);<newline46mondego>in.close();<newline46mondego>System.out.println(buffer.toString());<newline46mondego>"
"3372splitHere46","9489956splitHere46","getmanName()"
"3373splitHere46","9489956splitHere46","manName()"
"3374splitHere46","9490009splitHere46","Thread.sleep"
"3375splitHere46","9490065splitHere46","int id = 0;<newline46mondego>ArrayList<String> arraylist  = new ArrayList<String>();<newline46mondego>arraylist.add(<doubleQuotes46>A<doubleQuotes46>);<newline46mondego>arraylist.add(<doubleQuotes46>B<doubleQuotes46>);<newline46mondego>arraylist.add(<doubleQuotes46>C<doubleQuotes46>);<newline46mondego>if(arraylist.contains(<doubleQuotes46>A<doubleQuotes46>) && arraylist.contains(<doubleQuotes46>B<doubleQuotes46>))<newline46mondego>     id=1;<newline46mondego>System.out.println(id)<newline46mondego>"
"3376splitHere46","9490065splitHere46","1"
"3377splitHere46","9490087splitHere46","singleton instance <--- singleton class <--- class loader <--<newline46mondego><-- any class loaded by that class loader  <-- any object of such a class<newline46mondego><-- object loaded by another classloader referencing such an object or class<newline46mondego>"
"3378splitHere46","9490273splitHere46","Dim resultString As String = MyService.myMethod(myAL.toArray)<newline46mondego>"
"3379splitHere46","9490433splitHere46","(char)Integer.valueOf(<doubleQuotes46>01010100<doubleQuotes46>, 2).intValue()<newline46mondego>"
"3380splitHere46","9490538splitHere46","public class MyController extends Controller {<newline46mondego><newline46mondego><newline46mondego>  public static void index(){<newline46mondego>    Map xyz = ....;<newline46mondego><newline46mondego>    helperMethod(xyz);<newline46mondego><newline46mondego>  } <newline46mondego><newline46mondego>  @Util<newline46mondego>  public static void helperMethod(Map map){<newline46mondego>    /// do stuff<newline46mondego>  } <newline46mondego><newline46mondego>}<newline46mondego>"
"3381splitHere46","9490672splitHere46","wait"
"3382splitHere46","9490672splitHere46","sleep"
"3383splitHere46","9490708splitHere46","run:<newline46mondego>   NN:Â  runner<newline46mondego>   VBG:Â running<newline46mondego>   VBZ:Â runs<newline46mondego>"
"3384splitHere46","9490708splitHere46","import java.util.*;<newline46mondego><newline46mondego>import edu.stanford.nlp.pipeline.*;<newline46mondego>import edu.stanford.nlp.ling.*;<newline46mondego>import edu.stanford.nlp.ling.CoreAnnotations.*;<newline46mondego><newline46mondego>Properties props = new Properties();<newline46mondego><newline46mondego>props.put(<doubleQuotes46>annotators<doubleQuotes46>, <doubleQuotes46>tokenize, ssplit, pos, lemma<doubleQuotes46>);<newline46mondego>pipeline = new StanfordCoreNLP(props, false);<newline46mondego>String text = <doubleQuotes46>Hello, world!<doubleQuotes46>;<newline46mondego>Annotation document = pipeline.process(text);<newline46mondego><newline46mondego>for(CoreMap sentence: document.get(SentencesAnnotation.class)) {<newline46mondego>    for(CoreLabel token: sentence.get(TokensAnnotation.class)) {<newline46mondego>        String word = token.get(TextAnnotation.class);<newline46mondego>        String lemma = token.get(LemmaAnnotation.class);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3385splitHere46","9490740splitHere46","String s =<doubleQuotes46>2011-11-28T21:00:00Z<doubleQuotes46>;<newline46mondego>Date d = (new SimpleDateFormat(<doubleQuotes46>yyyy-MM-dd'T'HH:mm:ss'Z'<doubleQuotes46>)).parse(s);<newline46mondego>"
"3386splitHere46","9490754splitHere46","import java.awt.Color;<newline46mondego>import java.awt.Dimension;<newline46mondego>import java.awt.Font;<newline46mondego>import java.awt.Graphics;<newline46mondego><newline46mondego>import javax.swing.*;<newline46mondego><newline46mondego>@SuppressWarnings(<doubleQuotes46>serial<doubleQuotes46>)<newline46mondego>public class DrawOverLabel extends JPanel {<newline46mondego>   private static final int PREF_W = 500;<newline46mondego>   private static final int PREF_H = 100;<newline46mondego>   private static final Font TEXT_FONT = new Font(Font.SANS_SERIF, Font.BOLD, 32);<newline46mondego>   private static final int LABEL_COUNT = 40;<newline46mondego><newline46mondego>   public DrawOverLabel() {<newline46mondego>      for (int i = 0; i < LABEL_COUNT; i++) {<newline46mondego>         JLabel label = new JLabel(<doubleQuotes46>Label<doubleQuotes46>);<newline46mondego>         label.setForeground(Color.green);<newline46mondego>         label.setFont(label.getFont().deriveFont(Font.BOLD, 20));<newline46mondego>         add(label);<newline46mondego>      }<newline46mondego>   }<newline46mondego><newline46mondego>   @Override<newline46mondego>   public void paint(Graphics g) {<newline46mondego>      super.paint(g);<newline46mondego><newline46mondego>      g.setColor(Color.blue);<newline46mondego>      g.setFont(TEXT_FONT);<newline46mondego>      g.drawString(<doubleQuotes46>in paint<doubleQuotes46>, 20, 30);<newline46mondego><newline46mondego>//      super.paint(g);<newline46mondego>   }<newline46mondego><newline46mondego>   @Override<newline46mondego>   protected void paintComponent(Graphics g) {<newline46mondego>      super.paintComponent(g);<newline46mondego><newline46mondego>      g.setColor(Color.red);<newline46mondego>      g.setFont(TEXT_FONT);<newline46mondego>      g.drawString(<doubleQuotes46>in paintComponent<doubleQuotes46>, 20, 60);<newline46mondego><newline46mondego>//      super.paintComponent(g);<newline46mondego>   }<newline46mondego><newline46mondego>   @Override<newline46mondego>   protected void paintChildren(Graphics g) {<newline46mondego>      super.paintChildren(g);<newline46mondego><newline46mondego>      g.setColor(Color.gray);<newline46mondego>      g.setFont(TEXT_FONT);<newline46mondego>      g.drawString(<doubleQuotes46>in paintChildren<doubleQuotes46>, 20, 100);<newline46mondego><newline46mondego>//       super.paintChildren(g);<newline46mondego>   }<newline46mondego><newline46mondego>   @Override<newline46mondego>   public Dimension getPreferredSize() {<newline46mondego>      return new Dimension(PREF_W, PREF_H);<newline46mondego>   }<newline46mondego><newline46mondego>   private static void createAndShowGui() {<newline46mondego>      JFrame frame = new JFrame(<doubleQuotes46>DrawOverLabel<doubleQuotes46>);<newline46mondego>      frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>      frame.getContentPane().add(new DrawOverLabel());<newline46mondego>      frame.pack();<newline46mondego>      frame.setLocationRelativeTo(null);<newline46mondego>      frame.setVisible(true);<newline46mondego>   }<newline46mondego><newline46mondego>   public static void main(String[] args) {<newline46mondego>      SwingUtilities.invokeLater(new Runnable() {<newline46mondego>         public void run() {<newline46mondego>            createAndShowGui();<newline46mondego>         }<newline46mondego>      });<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"3387splitHere46","9490806splitHere46","BUILD_ID"
"3388splitHere46","9490956splitHere46","<Button<newline46mondego>    android:id=<doubleQuotes46>@+id/button01<doubleQuotes46><newline46mondego>    android:layout_width=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>    android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>    android:text=<doubleQuotes46>Button<doubleQuotes46> /><newline46mondego>"
"3389splitHere46","9491161splitHere46","Scope"
"3390splitHere46","9491161splitHere46","Selected Resources"
"3391splitHere46","9491161splitHere46","Derived"
"3392splitHere46","9491161splitHere46","Derived"
"3393splitHere46","9491277splitHere46","SomeClass.class.getResourceAsStream(<doubleQuotes46>/readme.txt<doubleQuotes46>)"
"3394splitHere46","9491307splitHere46","String"
"3395splitHere46","9491307splitHere46","person.getName() != null && person.getName().equalsIgnoreCase(<doubleQuotes46>Einstein<doubleQuotes46>) <newline46mondego>"
"3396splitHere46","9491307splitHere46","person != null && <doubleQuotes46>Einstein<doubleQuotes46>.equalsIgnoreCase(person.getName())<newline46mondego>"
"3397splitHere46","9491404splitHere46","param"
"3398splitHere46","9491404splitHere46","<c:out value=<doubleQuotes46>${id}<doubleQuotes46> /><newline46mondego>"
"3399splitHere46","9491404splitHere46","c:out"
"3400splitHere46","9491404splitHere46","c:out"
"3401splitHere46","9491404splitHere46","id"
"3402splitHere46","9491412splitHere46","select()"
"3403splitHere46","9491412splitHere46","setValue()"
"3404splitHere46","9491412splitHere46","combobox.setValue(model);<newline46mondego>combobox.repaint();<newline46mondego>"
"3405splitHere46","9491475splitHere46","if (menuNumber = 1)<newline46mondego>"
"3406splitHere46","9491475splitHere46","if (menuNumber == 1)<newline46mondego>"
"3407splitHere46","9491475splitHere46","menuNumber"
"3408splitHere46","9491475splitHere46","menuNumber"
"3409splitHere46","9491475splitHere46","cannot convert an int to boolean"
"3410splitHere46","9491475splitHere46","if(...)"
"3411splitHere46","9491475splitHere46","menuNumber"
"3412splitHere46","9491475splitHere46","int"
"3413splitHere46","9491475splitHere46","menuNumber == 1"
"3414splitHere46","9491475splitHere46","(1 == menuNumber)"
"3415splitHere46","9491475splitHere46","="
"3416splitHere46","9491475splitHere46",".equals()"
"3417splitHere46","9491475splitHere46","=="
"3418splitHere46","9491475splitHere46","if(myString.equals(<doubleQuotes46>abc<doubleQuotes46>))<newline46mondego>"
"3419splitHere46","9491475splitHere46","NullPointerException"
"3420splitHere46","9491475splitHere46","myString"
"3421splitHere46","9491475splitHere46","if(<doubleQuotes46>abc<doubleQuotes46>.equals(myString))<newline46mondego>"
"3422splitHere46","9491475splitHere46","false"
"3423splitHere46","9491475splitHere46","myString"
"3424splitHere46","9491555splitHere46","import java.awt.Graphics2D;<newline46mondego>import java.awt.Image;<newline46mondego>import java.awt.image.BufferedImage;<newline46mondego>import java.awt.image.ImageObserver;<newline46mondego>public class BufferedImageBuilder {<newline46mondego><newline46mondego>private static final int DEFAULT_IMAGE_TYPE = BufferedImage.TYPE_INT_RGB;<newline46mondego><newline46mondego>public BufferedImage bufferImage(Image image) {<newline46mondego>    return bufferImage(image, DEFAULT_IMAGE_TYPE);<newline46mondego>}<newline46mondego><newline46mondego>public BufferedImage bufferImage(Image image, int type) {<newline46mondego>    BufferedImage bufferedImage = new BufferedImage(image.getWidth(null), image.getHeight(null), type);<newline46mondego>    Graphics2D g = bufferedImage.createGraphics();<newline46mondego>    g.drawImage(image, null, null);<newline46mondego>    waitForImage(bufferedImage);<newline46mondego>    return bufferedImage;<newline46mondego>}<newline46mondego><newline46mondego>private void waitForImage(BufferedImage bufferedImage) {<newline46mondego>    final ImageLoadStatus imageLoadStatus = new ImageLoadStatus();<newline46mondego>    bufferedImage.getHeight(new ImageObserver() {<newline46mondego>        public boolean imageUpdate(Image img, int infoflags, int x, int y, int width, int height) {<newline46mondego>            if (infoflags == ALLBITS) {<newline46mondego>                imageLoadStatus.heightDone = true;<newline46mondego>                return true;<newline46mondego>            }<newline46mondego>            return false;<newline46mondego>        }<newline46mondego>    });<newline46mondego>    bufferedImage.getWidth(new ImageObserver() {<newline46mondego>        public boolean imageUpdate(Image img, int infoflags, int x, int y, int width, int height) {<newline46mondego>            if (infoflags == ALLBITS) {<newline46mondego>                imageLoadStatus.widthDone = true;<newline46mondego>                return true;<newline46mondego>            }<newline46mondego>            return false;<newline46mondego>        }<newline46mondego>    });<newline46mondego>    while (!imageLoadStatus.widthDone && !imageLoadStatus.heightDone) {<newline46mondego>        try {<newline46mondego>            Thread.sleep(300);<newline46mondego>        } catch (InterruptedException e) {<newline46mondego><newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class ImageLoadStatus {<newline46mondego><newline46mondego>    public boolean widthDone = false;<newline46mondego>    public boolean heightDone = false;<newline46mondego>}<newline46mondego>"
"3425splitHere46","9491765splitHere46","protected static HttpServer startServer() throws IOException {<newline46mondego>    System.out.println(<doubleQuotes46>Starting grizzly...<doubleQuotes46>);<newline46mondego>    final ResourceConfig rc = new PackagesResourceConfig(<doubleQuotes46>amplify.api.resources<doubleQuotes46>);<newline46mondego>    rc.getFeatures().put(JSONConfiguration.FEATURE_POJO_MAPPING, true);<newline46mondego>    return GrizzlyServerFactory.createHttpServer(BASE_URI, rc);<newline46mondego>}<newline46mondego>"
"3426splitHere46","9491778splitHere46","Integer.parseInt"
"3427splitHere46","9491778splitHere46","Long.parseLong(String)"
"3428splitHere46","9491778splitHere46","new BigInteger(String)"
"3429splitHere46","9491929splitHere46","Intent intent = new Intent(FirstActivity.this, SecondActivity.class);<newline46mondego>Bundle b = new Bundle();<newline46mondego>b.putLong(<doubleQuotes46>startTime<doubleQuotes46>, System.currentTimeMillis());<newline46mondego>intent.putExtras(b);<newline46mondego>startActivity(intent);<newline46mondego>"
"3430splitHere46","9491929splitHere46","Bundle b = getIntent().getExtras();<newline46mondego>long value = b.getLong(<doubleQuotes46>startTime<doubleQuotes46>, 0);<newline46mondego>"
"3431splitHere46","9492037splitHere46","d"
"3432splitHere46","9492037splitHere46","0xB7"
"3433splitHere46","9492037splitHere46","MIDDLE DOT"
"3434splitHere46","9492037splitHere46","KATAKANA MIDDLE DOT"
"3435splitHere46","9492037splitHere46","MIDDLE DOT"
"3436splitHere46","9492037splitHere46","0xB7"
"3437splitHere46","9492037splitHere46","CharsetDecoder"
"3438splitHere46","9492101splitHere46","JTextPane"
"3439splitHere46","9492101splitHere46","DocumentListener"
"3440splitHere46","9492101splitHere46","insertString"
"3441splitHere46","9492101splitHere46","insertString"
"3442splitHere46","9492107splitHere46","Caused by: java.sql.BatchUpdateException: ORA-01691: unable to extend lob segment SST.SYS_LOB0000152519C00009$$ by 1024 in tablespace SST<newline46mondego>"
"3443splitHere46","9492310splitHere46","Thread"
"3444splitHere46","9492428splitHere46","nextInt()"
"3445splitHere46","9492428splitHere46","nextLine()"
"3446splitHere46","9492428splitHere46","System.out.println(<doubleQuotes46>Enter the number of pets to store information for:<doubleQuotes46>);<newline46mondego>int amount = Integer.parseInt(keyboard.nextLine());<newline46mondego>String [] petNames = new String [amount];<newline46mondego>String [] petTypes = new String [amount];<newline46mondego>int [] numVisits = new int [amount];<newline46mondego>outputStream.println(<doubleQuotes46>Patient Data:<doubleQuotes46>);<newline46mondego>outputStream.println(<doubleQuotes46>Pet Name Pet Type Number of Visits<doubleQuotes46>);<newline46mondego><newline46mondego>for (int index=0;index < amount; index++) {<newline46mondego>    System.out.println(<doubleQuotes46>Type the pet name, then press Enter:<doubleQuotes46>);<newline46mondego>    petNames[index] = keyboard.nextLine();<newline46mondego>    System.out.println(<doubleQuotes46>Type the animal type (dog, cat, bird, rodent), then press Enter:<doubleQuotes46>);<newline46mondego>    petTypes[index] = keyboard.nextLine();<newline46mondego>    System.out.println(<doubleQuotes46>Type the number of visits last year, then press Enter:<doubleQuotes46>);<newline46mondego>    numVisits[index] = Integer.parseInt(keyboard.nextLine());<newline46mondego>    outputStream.printf(<doubleQuotes46>%8s %-8s %-8d%n<doubleQuotes46>, petNames[index], petTypes[index], numVisits[index]);<newline46mondego>}<newline46mondego>"
"3447splitHere46","9492428splitHere46","System.out.println(<doubleQuotes46>Enter the number of pets to store information for:<doubleQuotes46>);<newline46mondego>int amount = Integer.parseInt(keyboard.nextLine());<newline46mondego>outputStream.println(<doubleQuotes46>Patient Data:<doubleQuotes46>);<newline46mondego>outputStream.println(<doubleQuotes46>Pet Name Pet Type Number of Visits<doubleQuotes46>);<newline46mondego><newline46mondego>String petName = new String();<newline46mondego>String petType = new String();<newline46mondego>int numVisit = 0;<newline46mondego><newline46mondego>for (int index = 0; index < amount; index++) {<newline46mondego>    System.out.println(<doubleQuotes46>Type the pet name, then press Enter:<doubleQuotes46>);<newline46mondego>    petName = keyboard.nextLine();<newline46mondego>    System.out.println(<doubleQuotes46>Type the animal type (dog, cat, bird, rodent), then press Enter:<doubleQuotes46>);<newline46mondego>    petType = keyboard.nextLine();<newline46mondego>    System.out.println(<doubleQuotes46>Type the number of visits last year, then press Enter:<doubleQuotes46>);<newline46mondego>    numVisit = Integer.parseInt(keyboard.nextLine());<newline46mondego>    outputStream.printf(<doubleQuotes46>%8s %-8s %-8d%n<doubleQuotes46>, petName, petType, numVisit);<newline46mondego>}<newline46mondego>"
"3448splitHere46","9492472splitHere46","EnumListBox"
"3449splitHere46","9492472splitHere46","public class EnumListBox<T extends Enum<?>> extends ListBox implements LeafValueEditor<T><newline46mondego>{<newline46mondego>    private final Class<T> mClazz;<newline46mondego><newline46mondego>    public EnumListBox(Class<T> clazz) {<newline46mondego>        mClazz = clazz;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public T getValue()<newline46mondego>    {<newline46mondego>        int ndx = getSelectedIndex();<newline46mondego>        String val = getValue(ndx);<newline46mondego>        return Enum.valueOf(mClazz, val);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3450splitHere46","9492494splitHere46","VirtualMachineError"
"3451splitHere46","9492558splitHere46","&&"
"3452splitHere46","9492558splitHere46","|"
"3453splitHere46","9492558splitHere46","n1 > n2"
"3454splitHere46","9492558splitHere46","if"
"3455splitHere46","9492558splitHere46","else"
"3456splitHere46","9492567splitHere46","join()"
"3457splitHere46","9492567splitHere46","join()"
"3458splitHere46","9492710splitHere46","pop()"
"3459splitHere46","9492710splitHere46","top"
"3460splitHere46","9492710splitHere46","String pop() {<newline46mondego>    return storage[top--];<newline46mondego>}<newline46mondego>"
"3461splitHere46","9492710splitHere46","isEmpty()"
"3462splitHere46","9492710splitHere46","return (top == -1)"
"3463splitHere46","9492710splitHere46","size"
"3464splitHere46","9492710splitHere46","top"
"3465splitHere46","9492768splitHere46","Long"
"3466splitHere46","9492768splitHere46","null"
"3467splitHere46","9492768splitHere46","long"
"3468splitHere46","9492768splitHere46","0"
"3469splitHere46","9492768splitHere46","null"
"3470splitHere46","9492768splitHere46","ResultSet.wasNull"
"3471splitHere46","9492807splitHere46","rs.next()"
"3472splitHere46","9492807splitHere46","while(rs.next()){<newline46mondego>    if (myVolatileBooleanSaysToStop) {<newline46mondego>        return; // or whatever<newline46mondego>    }<newline46mondego>    //do stuff<newline46mondego>}<newline46mondego>"
"3473splitHere46","9492807splitHere46","Statement.cancel"
"3474splitHere46","9492807splitHere46","Statement"
"3475splitHere46","9492807splitHere46","Statement.cancel"
"3476splitHere46","9492807splitHere46","SQLException"
"3477splitHere46","9493008splitHere46","import java.util.*;<newline46mondego><newline46mondego>public class FutureValues {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        Scanner CONSOLE = new Scanner(System.in);<newline46mondego><newline46mondego>        System.out.print(<doubleQuotes46>present value   : <doubleQuotes46>);<newline46mondego>        double Pvalue = CONSOLE.nextDouble();<newline46mondego>        System.out.print(<doubleQuotes46>interest rate   : <doubleQuotes46>);<newline46mondego>        double Interest = CONSOLE.nextDouble();<newline46mondego>        System.out.print(<doubleQuotes46>number of years : <doubleQuotes46>);<newline46mondego>        double Years = CONSOLE.nextDouble();<newline46mondego><newline46mondego>        double Fvalue1 = method1(Pvalue, Interest, Years);<newline46mondego><newline46mondego>        System.out.print(<doubleQuotes46>The future value using compound interest = <doubleQuotes46> + Fvalue1);<newline46mondego>    }<newline46mondego><newline46mondego>    public static double method1(double Pvalue, double Interest, double Years) {<newline46mondego>        return Pvalue * Math.pow(1 + Interest / 100, Years);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3478splitHere46","9493008splitHere46","double Fvalue1 = method1(Pvalue, Interest, Years);<newline46mondego>"
"3479splitHere46","9493008splitHere46","return Pvalue * Math.pow(1 + Interest / 100, Years);<newline46mondego>"
"3480splitHere46","9493185splitHere46","out- enter name<newline46mondego>in- name<newline46mondego>localString name_ = name<newline46mondego>MyClass newPerson = newPerson(name_)<newline46mondego>out- enter phone number<newline46mondego>in- 503-495-4950<newline46mondego>localPhoneNumber phoneNum = 503-495-4950<newline46mondego>newPerson.setPhoneNumber(phoneNum)<newline46mondego>"
"3481splitHere46","9493242splitHere46","final DateFormat format = new SimpleDateFormat(<doubleQuotes46>E. M/d<doubleQuotes46>);<newline46mondego>final String dateStr = <doubleQuotes46>Thu. 03/01<doubleQuotes46>;<newline46mondego>final Date date = format.parse(dateStr);<newline46mondego><newline46mondego>GregorianCalendar gregory = new GregorianCalendar();<newline46mondego>gregory.setTime(date);<newline46mondego><newline46mondego>XMLGregorianCalendar calendar = DatatypeFactory.newInstance()<newline46mondego>        .newXMLGregorianCalendar(<newline46mondego>            gregory);<newline46mondego>"
"3482splitHere46","9493247splitHere46",".properties"
"3483splitHere46","9493247splitHere46","google.com=15<newline46mondego>yahoo.com=10<newline46mondego>"
"3484splitHere46","9493247splitHere46","final String path = <doubleQuotes46>config.properties<doubleQuotes46>;<newline46mondego><newline46mondego>Properties prop = new Properties();<newline46mondego><newline46mondego>int pingTimeGoogle = prop.load(new FileInputStream(path)).getProperty(<doubleQuotes46>google.com<doubleQuotes46>);<newline46mondego>"
"3485splitHere46","9493247splitHere46","final String path = <doubleQuotes46>config.properties<doubleQuotes46>;<newline46mondego><newline46mondego>Properties props = new Properties().load(new FileInputStream(path));<newline46mondego>Enumeration e = props.propertyNames();<newline46mondego><newline46mondego>while (e.hasMoreElements()) {<newline46mondego>    String key = (String) e.nextElement();<newline46mondego>    System.out.println(key + <doubleQuotes46>=<doubleQuotes46> + props.getProperty(key));<newline46mondego>}<newline46mondego>"
"3486splitHere46","9493247splitHere46","Map"
"3487splitHere46","9493247splitHere46","Map"
"3488splitHere46","9493247splitHere46","final String path = <doubleQuotes46>config.properties<doubleQuotes46>;<newline46mondego><newline46mondego>Properties props = new Properties().load(new FileInputStream(path));<newline46mondego><newline46mondego>Map<String, Integer> pingUrlTimes = new HashMap<String, Integer>((Map) props);<newline46mondego>"
"3489splitHere46","9493247splitHere46","HashMap"
"3490splitHere46","9493247splitHere46","Iterator iterator = pingUrlTimes.keySet().iterator(); // Get Iterator<newline46mondego><newline46mondego>while (iterator.hasNext()) {<newline46mondego>    String key = (String) iterator.next();<newline46mondego><newline46mondego>    System.out.println(key + <doubleQuotes46>=<doubleQuotes46> +  pingUrlTimes.get(key) );<newline46mondego>}<newline46mondego>"
"3491splitHere46","9493248splitHere46",".*(\r\n|[\n\r\u2028\u2029\u0085])|.+$"
"3492splitHere46","9493248splitHere46","# hexedit file     <newline46mondego>00000000   61 0A                                                a.<newline46mondego><newline46mondego># java Test.java<newline46mondego>using File: true<newline46mondego>using FileInputStream: true<newline46mondego>"
"3493splitHere46","9493248splitHere46","# hexedit file<newline46mondego>00000000   61 0A 80                                             a..<newline46mondego><newline46mondego># java Test.java<newline46mondego>using File: false<newline46mondego>using FileInputStream: true<newline46mondego>"
"3494splitHere46","9493248splitHere46","import java.io.*;<newline46mondego>import java.lang.*;<newline46mondego>import java.util.*;<newline46mondego>public class Test {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        try {<newline46mondego>                File file1 = new File(<doubleQuotes46>file<doubleQuotes46>);<newline46mondego>                Scanner s1 = new Scanner(file1);<newline46mondego>                System.out.println(<doubleQuotes46>using File: <doubleQuotes46>+s1.hasNextLine());<newline46mondego>                File file2 = new File(<doubleQuotes46>file<doubleQuotes46>);<newline46mondego>                Scanner s2 = new Scanner(new FileInputStream(file2));<newline46mondego>                System.out.println(<doubleQuotes46>using FileInputStream: <doubleQuotes46>+s2.hasNextLine());<newline46mondego>        } catch (IOException e) {<newline46mondego>                e.printStackTrace();<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3495splitHere46","9493248splitHere46","Scanner s1 = new Scanner(file1, <doubleQuotes46>latin1<doubleQuotes46>);<newline46mondego>"
"3496splitHere46","9493248splitHere46","# java Test <newline46mondego>using File: true<newline46mondego>using FileInputStream: true<newline46mondego>"
"3497splitHere46","9493254splitHere46","ScrollView"
"3498splitHere46","9493254splitHere46","ListView"
"3499splitHere46","9493264splitHere46","String paragraph = <doubleQuotes46>My first sentence. My second sentence.<doubleQuotes46>;<newline46mondego>Reader reader = new StringReader(paragraph);<newline46mondego>DocumentPreprocessor dp = new DocumentPreprocessor(reader);<newline46mondego><newline46mondego>List<String> sentenceList = new LinkedList<String>();<newline46mondego>Iterator<List<HasWord>> it = dp.iterator();<newline46mondego>while (it.hasNext()) {<newline46mondego>   StringBuilder sentenceSb = new StringBuilder();<newline46mondego>   List<HasWord> sentence = it.next();<newline46mondego>   for (HasWord token : sentence) {<newline46mondego>      if(sentenceSb.length()>1) {<newline46mondego>         sentenceSb.append(<doubleQuotes46> <doubleQuotes46>);<newline46mondego>      }<newline46mondego>      sentenceSb.append(token);<newline46mondego>   }<newline46mondego>   sentenceList.add(sentenceSb.toString());<newline46mondego>}<newline46mondego><newline46mondego>for(String sentence:sentenceList) {<newline46mondego>   System.out.println(sentence);<newline46mondego>}<newline46mondego>"
"3500splitHere46","9493621splitHere46","Arrays.equals()"
"3501splitHere46","9493621splitHere46","equals()"
"3502splitHere46","9493621splitHere46","equals()"
"3503splitHere46","9493621splitHere46","Object"
"3504splitHere46","9493621splitHere46","equal()"
"3505splitHere46","9493621splitHere46","Arrays.equals"
"3506splitHere46","9493621splitHere46","int"
"3507splitHere46","9493621splitHere46","Arrays"
"3508splitHere46","9493621splitHere46","boolean check1 = Arrays.deepEquals(a2, a3);<newline46mondego>"
"3509splitHere46","9493621splitHere46","boolean check1 = true;<newline46mondego>for (int i = 0; check1 && i < a2.length; ++i) {<newline46mondego>    check1 = Arrays.equals(a2[i], a3[i]);<newline46mondego>}<newline46mondego>"
"3510splitHere46","9493654splitHere46","public enum SizeUnit<newline46mondego>{<newline46mondego>  BYTE(1),<newline46mondego>  KILOBYTE(1024),<newline46mondego>  ...;<newline46mondego><newline46mondego>  private final int bytes; <newline46mondego>  private SizeUnit(final int bytes) { this.bytes = bytes; }<newline46mondego>  public int getByteCount() { return this.bytes; }<newline46mondego>}<newline46mondego>"
"3511splitHere46","9493654splitHere46","3 * KILOBYTE.getByteCount();<newline46mondego>"
"3512splitHere46","9493654splitHere46","getBytes"
"3513splitHere46","9493654splitHere46","KILOBYTE.getBytes(3)"
"3514splitHere46","9493656splitHere46","textview.setGravity(Gravity.RIGHT); <newline46mondego>"
"3515splitHere46","9493710splitHere46","JComponent"
"3516splitHere46","9493710splitHere46","JTextField"
"3517splitHere46","9493710splitHere46","JComponent"
"3518splitHere46","9493824splitHere46","aq.cache(mArtistImageURL, 60000 * 1440);"
"3519splitHere46","9493824splitHere46","aq.cache(mArtistImageURL,mArtistNameWithoutSpaces, 60000 * 1440);"
"3520splitHere46","9493824splitHere46","aq.getCachedImage(mArtistNameWithoutSpaces);"
"3521splitHere46","9493824splitHere46","public String getUrlForArtist(String artistName) {<newline46mondego>        SharedPreferences settings = mContext.getSharedPreferences(<newline46mondego>                <doubleQuotes46>artistImages<doubleQuotes46>, 0);<newline46mondego>        return settings.getString(artistName, <doubleQuotes46>http://default.url<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>public void setUrlForArtist(String artistName, String url) {<newline46mondego>        SharedPreferences settings = mContext.getSharedPreferences(<newline46mondego>                <doubleQuotes46>artistImages<doubleQuotes46>, 0);<newline46mondego>        SharedPreferences.Editor editor = settings.edit();<newline46mondego>        editor.putString(artistName, url);<newline46mondego>        editor.commit();<newline46mondego>}<newline46mondego>"
"3522splitHere46","9493824splitHere46","if (MusicUtils.isOnline(mContext)) {<newline46mondego>            mArtistResults = Artist.getImages(<doubleQuotes46>Andrew Bird<doubleQuotes46>, 1, 1, key);<newline46mondego>            mArtistIterator = mArtistResults.getPageResults().iterator();<newline46mondego>            while (mArtistIterator.hasNext()) {<newline46mondego>                mArtistImageURL = mArtistIterator.next().getImageURL(<newline46mondego>                        ImageSize.ORIGINAL);<newline46mondego>            if(mArtistImageURL!=null)<newline46mondego>             setUrlForArtist(<doubleQuotes46>Andrew Bird<doubleQuotes46>, mArtistImageURL);<newline46mondego>            }<newline46mondego>        } else<newline46mondego>              mArtistImageURL = getUrlForArtist(<doubleQuotes46>Andrew Bird<doubleQuotes46>);<newline46mondego>"
"3523splitHere46","9493836splitHere46","task()"
"3524splitHere46","9493836splitHere46","task()"
"3525splitHere46","9493836splitHere46","Thread t1 = new A().task();<newline46mondego>Thread t2 = new A().task();<newline46mondego>t1.start();<newline46mondego>t2.start();<newline46mondego>"
"3526splitHere46","9493836splitHere46","A"
"3527splitHere46","9493836splitHere46","task()"
"3528splitHere46","9493836splitHere46","static"
"3529splitHere46","9493836splitHere46","A.class"
"3530splitHere46","9493836splitHere46","task()"
"3531splitHere46","9493836splitHere46","synchronized"
"3532splitHere46","9493836splitHere46","Class"
"3533splitHere46","9493877splitHere46","chatbox.setColumnStretchable(1, true);<newline46mondego>"
"3534splitHere46","9493877splitHere46","TextView col1 = new TextView(this);<newline46mondego>col1.setText(<doubleQuotes46><doubleQuotes46>);<newline46mondego>tr1.addView(col1);<newline46mondego>"
"3535splitHere46","9493877splitHere46","public class So extends Activity {<newline46mondego><newline46mondego>    /** Called when the activity is first created. */<newline46mondego>    @Override<newline46mondego>    public void onCreate(Bundle savedInstanceState) {<newline46mondego>        super.onCreate(savedInstanceState);<newline46mondego>        setContentView(R.layout.main);<newline46mondego>        Button button = (Button) findViewById(R.id.button); <newline46mondego><newline46mondego>        button.setOnClickListener(new View.OnClickListener() {<newline46mondego>            // anonymous inner class<newline46mondego>            public void onClick(View view) {<newline46mondego>                EditText editText1 = (EditText) findViewById(R.id.edit_text);<newline46mondego>                Editable editable = editText1.getText();<newline46mondego>                responsePost(editable);<newline46mondego>                editText1.setText(<doubleQuotes46><doubleQuotes46>);<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>    public void responsePost(Editable editable) {<newline46mondego>        TableLayout chatbox = (TableLayout) findViewById(R.id.chatbox);<newline46mondego>        TableRow tr1 = new TableRow(this);<newline46mondego>        // add these lines here<newline46mondego>        TextView col1 = new TextView(this);<newline46mondego>        col1.setText(<doubleQuotes46><doubleQuotes46>);<newline46mondego>        tr1.addView(col1);<newline46mondego>        TextView textview = new TextView(this);<newline46mondego>        textview.setGravity(Gravity.RIGHT);<newline46mondego>        textview.setText(editable);<newline46mondego>        textview.setTextColor(Color.YELLOW);<newline46mondego>        tr1.addView(textview);<newline46mondego>        // and this line<newline46mondego>        chatbox.setColumnStretchable(1, true);<newline46mondego>        chatbox.addView(tr1, new TableLayout.LayoutParams(<newline46mondego>                LayoutParams.FILL_PARENT, LayoutParams.FILL_PARENT));<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3536splitHere46","9494106splitHere46","num"
"3537splitHere46","9494106splitHere46","den"
"3538splitHere46","9494106splitHere46","getNum()"
"3539splitHere46","9494106splitHere46","getDen()"
"3540splitHere46","9494106splitHere46","public FractionInterface add(FractionInterface operand) {<newline46mondego><newline46mondego>    int numerator = num*operand.getDen() + operand.getNum()*den;<newline46mondego>    int denominator = den*operand.getDen();<newline46mondego><newline46mondego>    return new Fraction(numerator, denominator);<newline46mondego>}<newline46mondego>"
"3541splitHere46","9494126splitHere46","sql = <doubleQuotes46>insert into ContentModification(XWC_NAME, XWC_LASTUPDATE) values(?,?)<doubleQuotes46>;<newline46mondego>"
"3542splitHere46","9494150splitHere46","<param-value>classpath*:/applicationContext-hibernate.xml, <<2nd file reference>></param-value><newline46mondego>"
"3543splitHere46","9494150splitHere46","createHibernateTemplate(sesionFactoryReference)"
"3544splitHere46","9494245splitHere46",".settings"
"3545splitHere46","9494298splitHere46","DefaultCaret c=new DefaultCaret() {<newline46mondego>    public void mouseClicked(MouseEvent e) {<newline46mondego>        int nclicks = SwingUtilities2.getAdjustedClickCount(getComponent(), e);<newline46mondego>        if (! e.isConsumed() &&<newline46mondego>                SwingUtilities.isLeftMouseButton(e) &&<newline46mondego>                nclicks == 2<newline46mondego>                && SwingUtilities2.canEventAccessSystemClipboard(e)) {<newline46mondego>            return;<newline46mondego>        }<newline46mondego><newline46mondego>        super.mouseClicked(e);<newline46mondego>    }<newline46mondego>    public void mousePressed(MouseEvent e) {<newline46mondego>        int nclicks = SwingUtilities2.getAdjustedClickCount(getComponent(), e);<newline46mondego>        if (! e.isConsumed() &&<newline46mondego>                SwingUtilities.isLeftMouseButton(e) &&<newline46mondego>                nclicks == 2<newline46mondego>                && SwingUtilities2.canEventAccessSystemClipboard(e)) {<newline46mondego>            return;<newline46mondego>        }<newline46mondego>        super.mousePressed(e);<newline46mondego>    }<newline46mondego>};<newline46mondego>c.setBlinkRate(edit.getCaret().getBlinkRate());<newline46mondego>edit.setCaret(c);<newline46mondego>"
"3546splitHere46","9494438splitHere46","interface"
"3547splitHere46","9494438splitHere46","class"
"3548splitHere46","9494438splitHere46","class"
"3549splitHere46","9494438splitHere46","implements"
"3550splitHere46","9494438splitHere46","extends"
"3551splitHere46","9494438splitHere46","class"
"3552splitHere46","9494438splitHere46","interface"
"3553splitHere46","9494462splitHere46","HMDBUtil.close()"
"3554splitHere46","9494552splitHere46","\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\r\n\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\r\n\t\r\n\t\r\n\t\t\r\n\t\r\n VIN ID MAKE MODEL <doubleQuotes46>,<doubleQuotes46><newline46mondego>status <doubleQuotes46>:200,<doubleQuotes46><newline46mondego>statusText <doubleQuotes46>:<doubleQuotes46><newline46mondego>OK <doubleQuotes46>},<doubleQuotes46><newline46mondego>fnServerData <doubleQuotes46>:<doubleQuotes46><newline46mondego>function (e, j, l, k) {\n k.jqXHR = i.ajax({<newline46mondego>        url: e,<newline46mondego>        data: j,<newline46mondego>        success: function (e) {<newline46mondego>            i(k.oInstance).trigger(\<doubleQuotes46>xhr\<doubleQuotes46>, k);l(e);}, dataType: \<doubleQuotes46>json\<doubleQuotes46>, cache: !1, type: k.sServerMethod, error: function (e, i) {\<doubleQuotes46>parsererror\<doubleQuotes46> == i && alert(\<doubleQuotes46>DataTables warning: JSON data from server could not be parsed. This is caused by a JSON formatting error.\<doubleQuotes46>);}});\n}<doubleQuotes46>, <doubleQuotes46>aoServerParams<doubleQuotes46>: [],<newline46mondego>            <doubleQuotes46>sServerMethod<doubleQuotes46>: <doubleQuotes46>GET<doubleQuotes46>,<newline46mondego>            <doubleQuotes46>fnFormatNumber<doubleQuotes46>: <doubleQuotes46>function (e) {\n if (1000 > e) {\n return e;\n }\n for (var i = e + \<doubleQuotes46>\<doubleQuotes46>, e = i.split(\<doubleQuotes46>\<doubleQuotes46>), j = \<doubleQuotes46>\<doubleQuotes46>, i = i.length, l = 0; l < i; l++) {\n 0 === l % 3 &&\n 0 !== l && (j = this.oLanguage.sInfoThousands + j), j = e[i - l - 1] + j;\n }\n return j;\n}<doubleQuotes46>,<newline46mondego>            <doubleQuotes46>aLengthMenu<doubleQuotes46>: [10, 25, 50, 100],<newline46mondego>            <doubleQuotes46>iDraw<doubleQuotes46>: 1,<newline46mondego>            <doubleQuotes46>bDrawing<doubleQuotes46>: true,<newline46mondego>            <doubleQuotes46>iDrawError<doubleQuotes46>: -1,<newline46mondego>            <doubleQuotes46>_iDisplayLength<doubleQuotes46>: 10,<newline46mondego>            <doubleQuotes46>_iDisplayStart<doubleQuotes46>: 0,<newline46mondego>            <doubleQuotes46>_iDisplayEnd<doubleQuotes46>: 0,<newline46mondego>            <doubleQuotes46>_iRecordsTotal<doubleQuotes46>: 0,<newline46mondego>            <doubleQuotes46>_iRecordsDisplay<doubleQuotes46>: 0,<newline46mondego>            <doubleQuotes46>bJUI<doubleQuotes46>: true,<newline46mondego>            <doubleQuotes46>oClasses<doubleQuotes46>: {<newline46mondego>                <doubleQuotes46>sTable<doubleQuotes46>: <doubleQuotes46>dataTable<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>sPagePrevEnabled<doubleQuotes46>: <doubleQuotes46>fg-button ui-button ui-state-default ui-corner-left<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>sPagePrevDisabled<doubleQuotes46>: <doubleQuotes46>fg-button ui-button ui-state-default ui-corner-left ui-state-disabled<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>sPageNextEnabled<doubleQuotes46>: <doubleQuotes46>fg-button ui-button ui-state-default ui-corner-right<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>sPageNextDisabled<doubleQuotes46>: <doubleQuotes46>fg-button ui-button ui-state-default ui-corner-right ui-state-disabled<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>sPageJUINext<doubleQuotes46>: <doubleQuotes46>ui-icon ui-icon-circle-arrow-e<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>sPageJUIPrev<doubleQuotes46>: <doubleQuotes46>ui-icon ui-icon-circle-arrow-w<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>sPageButton<doubleQuotes46>: <doubleQuotes46>fg-button ui-button ui-state-default<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>sPageButtonActive<doubleQuotes46>: <doubleQuotes46>fg-button ui-button ui-state-default ui-state-disabled<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>sPageButtonStaticDisabled<doubleQuotes46>: <doubleQuotes46>fg-button ui-button ui-state-default ui-state-disabled<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>sPageFirst<doubleQuotes46>: <doubleQuotes46>first ui-corner-tl ui-corner-bl<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>sPagePrevious<doubleQuotes46>: <doubleQuotes46>previous<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>sPageNext<doubleQuotes46>: <doubleQuotes46>next<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>sPageLast<doubleQuotes46>: <doubleQuotes46>last ui-corner-tr ui-corner-br<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>sStripeOdd<doubleQuotes46>: <doubleQuotes46>odd<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>sStripeEven<doubleQuotes46>: <doubleQuotes46>even<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>sRowEmpty<doubleQuotes46>: <doubleQuotes46>dataTables_empty<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>sWrapper<doubleQuotes46>: <doubleQuotes46>dataTables_wrapper<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>sFilter<doubleQuotes46>: <doubleQuotes46>dataTables_filter<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>sInfo<doubleQuotes46>: <doubleQuotes46>dataTables_info<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>sPaging<doubleQuotes46>: <doubleQuotes46>dataTables_paginate fg-buttonset ui-buttonset fg-buttonset-multi ui-buttonset-multi paging_<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>sLength<doubleQuotes46>: <doubleQuotes46>dataTables_length<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>sProcessing<doubleQuotes46>: <doubleQuotes46>dataTables_processing<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>sSortAsc<doubleQuotes46>: <doubleQuotes46>ui-state-default<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>sSortDesc<doubleQuotes46>: <doubleQuotes46>ui-state-default<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>sSortable<doubleQuotes46>: <doubleQuotes46>ui-state-default<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>sSortableAsc<doubleQuotes46>: <doubleQuotes46>ui-state-default<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>sSortableDesc<doubleQuotes46>: <doubleQuotes46>ui-state-default<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>sSortableNone<doubleQuotes46>: <doubleQuotes46>ui-state-default<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>sSortColumn<doubleQuotes46>: <doubleQuotes46>sorting_<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>sSortJUIAsc<doubleQuotes46>: <doubleQuotes46>css_right ui-icon ui-icon-triangle-1-n<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>sSortJUIDesc<doubleQuotes46>: <doubleQuotes46>css_right ui-icon ui-icon-triangle-1-s<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>sSortJUI<doubleQuotes46>: <doubleQuotes46>css_right ui-icon ui-icon-carat-2-n-s<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>sSortJUIAscAllowed<doubleQuotes46>: <doubleQuotes46>css_right ui-icon ui-icon-carat-1-n<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>sSortJUIDescAllowed<doubleQuotes46>: <doubleQuotes46>css_right ui-icon ui-icon-carat-1-s<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>sSortJUIWrapper<doubleQuotes46>: <doubleQuotes46>DataTables_sort_wrapper<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>sSortIcon<doubleQuotes46>: <doubleQuotes46>DataTables_sort_icon<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>sScrollWrapper<doubleQuotes46>: <doubleQuotes46>dataTables_scroll<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>sScrollHead<doubleQuotes46>: <doubleQuotes46>dataTables_scrollHead ui-state-default<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>sScrollHeadInner<doubleQuotes46>: <doubleQuotes46>dataTables_scrollHeadInner<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>sScrollBody<doubleQuotes46>: <doubleQuotes46>dataTables_scrollBody<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>sScrollFoot<doubleQuotes46>: <doubleQuotes46>dataTables_scrollFoot ui-state-default<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>sScrollFootInner<doubleQuotes46>: <doubleQuotes46>dataTables_scrollFootInner<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>sFooterTH<doubleQuotes46>: <doubleQuotes46>ui-state-default<doubleQuotes46><newline46mondego>            },<newline46mondego>            <doubleQuotes46>bFiltered<doubleQuotes46>: true,<newline46mondego>            <doubleQuotes46>bSorted<doubleQuotes46>: true,<newline46mondego>            <doubleQuotes46>bSortCellsTop<doubleQuotes46>: false,<newline46mondego>            <doubleQuotes46>oInit<doubleQuotes46>: {<newline46mondego>                <doubleQuotes46>bServerSide<doubleQuotes46>: true,<newline46mondego>                <doubleQuotes46>sAjaxSource<doubleQuotes46>: <doubleQuotes46>/wps/myportal/!ut/p/b1/hc09DoJAEIbhs3CCGX5kl3IRdVGiolFkG7Mho2IQEkAKTy8aGwt0ukmeLy8oSE3PctAeWY4LB1Cl7vKzbvOq1MXrV-6RBz73fVMg9-QUw0j6bCLmiGj2IO3BeCakwyJEPuImhkLumLsNLBT2v30C6psgrlhP7Jlki72Fof0BvxJvgAMnEJayulGfShUbDMUISU1Nda8zgs2pIGqjvGkhznR2oYg6Ktb6THBThRde2UMIw3gC131G1Q!!/<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>bProcessing<doubleQuotes46>: true,<newline46mondego>                <doubleQuotes46>sPaginationType<doubleQuotes46>: <doubleQuotes46>full_numbers<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>bJQueryUI<doubleQuotes46>: true<newline46mondego>            },<newline46mondego>            <doubleQuotes46>aoDestroyCallback<doubleQuotes46>: [],<newline46mondego>            <doubleQuotes46>fnRecordsTotal<doubleQuotes46>: <doubleQuotes46>function () {\n return this.oFeatures.bServerSide ? parseInt(this._iRecordsTotal, 10) : this.aiDisplayMaster.length;\n}<doubleQuotes46>,<newline46mondego>            <doubleQuotes46>fnRecordsDisplay<doubleQuotes46>: <doubleQuotes46>function () {\n return this.oFeatures.bServerSide ? parseInt(this._iRecordsDisplay, 10) : this.aiDisplay.length;\n}<doubleQuotes46>,<newline46mondego>            <doubleQuotes46>fnDisplayEnd<doubleQuotes46>: <doubleQuotes46>function () {\n return this.oFeatures.bServerSide ? !1 === this.oFeatures.bPaginate || - 1 == this._iDisplayLength ? this._iDisplayStart + this.aiDisplay.length : Math.min(this._iDisplayStart + this._iDisplayLength, this._iRecordsDisplay) : this._iDisplayEnd;\n}<doubleQuotes46>,<newline46mondego>            <doubleQuotes46>sInstance<doubleQuotes46>: <doubleQuotes46>fleetList<doubleQuotes46>,<newline46mondego>            <doubleQuotes46>iTabIndex<doubleQuotes46>: 0,<newline46mondego>            <doubleQuotes46>fnStateLoad<doubleQuotes46>: <doubleQuotes46>function (e) {\n var e = this.oApi._fnReadCookie(e.sCookiePrefix + e.sInstance), j;\n try {\n j = \<doubleQuotes46>function\<doubleQuotes46> === typeof i.parseJSON ? i.parseJSON(e) : eval(\<doubleQuotes46>(\<doubleQuotes46> + e + \<doubleQuotes46>)\<doubleQuotes46>);\n } catch (l) {\n j = null;\n }\n return j;\n}<doubleQuotes46>,<newline46mondego>            <doubleQuotes46>fnStateSave<doubleQuotes46>: <doubleQuotes46>function (e, i) {\n this.oApi._fnCreateCookie(e.sCookiePrefix + e.sInstance, this.oApi._fnJsonString(i), e.iCookieDuration, e.sCookiePrefix, e.fnCookieCallback);\n}<doubleQuotes46>,<newline46mondego>            <doubleQuotes46>iInitDisplayStart<doubleQuotes46>: -1,<newline46mondego>            <doubleQuotes46>nTableReinsertBefore<doubleQuotes46>: null<newline46mondego>            }],<newline46mondego>        <doubleQuotes46>tablesDisplayData<doubleQuotes46>: [<newline46mondego>            []<newline46mondego>        ],<newline46mondego>        <doubleQuotes46>tablesDisplayExtra<doubleQuotes46>: [<newline46mondego>            []<newline46mondego>        ]<newline46mondego>    }<newline46mondego>    };<newline46mondego>"
"3555splitHere46","9494560splitHere46","urllib2"
"3556splitHere46","9494560splitHere46","HTTPBasicAuthHandler"
"3557splitHere46","9494560splitHere46","csv"
"3558splitHere46","9494563splitHere46",":)"
"3559splitHere46","9494563splitHere46","HttpConnection"
"3560splitHere46","9494563splitHere46","ServletHandler.doHandle"
"3561splitHere46","9494563splitHere46","Server.handle"
"3562splitHere46","9494574splitHere46","@Path(<doubleQuotes46>/rest/<doubleQuotes46>)<newline46mondego><newline46mondego>GET http://localhost:8080/TigrisRESTServer/rest/media?type=music<newline46mondego>"
"3563splitHere46","9494716splitHere46","native widget"
"3564splitHere46","9494716splitHere46","org.eclipse.swt.widgets.Text"
"3565splitHere46","9494716splitHere46","custom widget"
"3566splitHere46","9494716splitHere46","org.eclipse.swt.custom.StyledText"
"3567splitHere46","9494716splitHere46","mouse down"
"3568splitHere46","9494716splitHere46","mouse up"
"3569splitHere46","9494716splitHere46","org.eclipse.swt.widgets.Text"
"3570splitHere46","9494716splitHere46","left mouse down"
"3571splitHere46","9494716splitHere46","OS.SendMessage (hwnd, OS.WM_LBUTTONUP, wParam, lParam);"
"3572splitHere46","9494716splitHere46","Whereas"
"3573splitHere46","9494716splitHere46","org.eclipse.swt.custom.StyledText"
"3574splitHere46","9494716splitHere46","handleMouseDown(Event event)"
"3575splitHere46","9494716splitHere46","draw/redraw/validate/invalidate/update"
"3576splitHere46","9494716splitHere46","See"
"3577splitHere46","9494716splitHere46","therefore"
"3578splitHere46","9494716splitHere46","styled text"
"3579splitHere46","9494716splitHere46","Code:"
"3580splitHere46","9494716splitHere46","import org.eclipse.swt.SWT;<newline46mondego>import org.eclipse.swt.browser.Browser;<newline46mondego>import org.eclipse.swt.custom.CCombo;<newline46mondego>import org.eclipse.swt.custom.StyleRange;<newline46mondego>import org.eclipse.swt.custom.StyledText;<newline46mondego>import org.eclipse.swt.layout.GridData;<newline46mondego>import org.eclipse.swt.layout.GridLayout;<newline46mondego>import org.eclipse.swt.widgets.Combo;<newline46mondego>import org.eclipse.swt.widgets.Composite;<newline46mondego>import org.eclipse.swt.widgets.Display;<newline46mondego>import org.eclipse.swt.widgets.Label;<newline46mondego>import org.eclipse.swt.widgets.Shell;<newline46mondego>import org.eclipse.swt.widgets.Text;<newline46mondego><newline46mondego>public class StyledTextTest {<newline46mondego><newline46mondego>    private static Display display;<newline46mondego><newline46mondego>    public static void main(String[] args) <newline46mondego>    {<newline46mondego>        display = new Display();<newline46mondego>        Shell shell = new Shell(display);<newline46mondego>        shell.setLayout(new GridLayout(2,true));<newline46mondego>        shell.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, false));<newline46mondego><newline46mondego>        createStyledText(shell);<newline46mondego>        createStyledText(shell);<newline46mondego><newline46mondego>        createText(shell);<newline46mondego>        createText(shell);<newline46mondego><newline46mondego>        createCombo(shell);<newline46mondego>        createCombo(shell);<newline46mondego><newline46mondego>        createCustomCombo(shell);<newline46mondego>        createCustomCombo(shell);<newline46mondego><newline46mondego>        createBrowser(shell);<newline46mondego>        createBrowser(shell);<newline46mondego><newline46mondego>        shell.pack();<newline46mondego>        shell.open();<newline46mondego>        while (!shell.isDisposed()) {<newline46mondego>            if (!display.readAndDispatch())<newline46mondego>                display.sleep();<newline46mondego>        }<newline46mondego>        display.dispose();<newline46mondego>    }<newline46mondego><newline46mondego>    private static void createCustomCombo(Composite parent) <newline46mondego>    {<newline46mondego>        new Label(parent, SWT.NONE).setText(<doubleQuotes46>Custom Combo<doubleQuotes46>);<newline46mondego>        CCombo c = new CCombo(parent, SWT.DROP_DOWN);<newline46mondego>        c.setItems(new String[] {<doubleQuotes46>test best<doubleQuotes46>, <doubleQuotes46>best rest<doubleQuotes46>, <doubleQuotes46>rest test<doubleQuotes46>});<newline46mondego>        c.select(0);        <newline46mondego>        c.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, false));<newline46mondego>    }<newline46mondego><newline46mondego>    private static void createCombo(Composite parent) <newline46mondego>    {<newline46mondego>        new Label(parent, SWT.NONE).setText(<doubleQuotes46>Combo<doubleQuotes46>);<newline46mondego>        Combo c = new Combo(parent, SWT.DROP_DOWN);<newline46mondego>        c.setItems(new String[] {<doubleQuotes46>test best<doubleQuotes46>, <doubleQuotes46>best rest<doubleQuotes46>, <doubleQuotes46>rest test<doubleQuotes46>});<newline46mondego>        c.select(0);        <newline46mondego>        c.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, false));<newline46mondego>    }<newline46mondego><newline46mondego>    static void createBrowser(Composite parent)<newline46mondego>    {<newline46mondego>        new Label(parent, SWT.NONE).setText(<doubleQuotes46>Browser<doubleQuotes46>);<newline46mondego>        Browser browser = new Browser(parent, SWT.NONE);<newline46mondego>        browser.setText(<doubleQuotes46><div>This is a test !!</div><doubleQuotes46>);<newline46mondego>        browser.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, false));<newline46mondego>    }<newline46mondego><newline46mondego>    static void createText(Composite parent) {<newline46mondego>        new Label(parent, SWT.NONE).setText(<doubleQuotes46>Text<doubleQuotes46>);<newline46mondego>        final Text text = new Text(parent, SWT.BORDER);<newline46mondego>        text.setText(<doubleQuotes46>0123456789 ABCDEFGHIJKLM NOPQRSTUVWXYZ<doubleQuotes46>);<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    static void createStyledText(Composite parent)<newline46mondego>    {<newline46mondego>        new Label(parent, SWT.NONE).setText(<doubleQuotes46>Styled Text<doubleQuotes46>);<newline46mondego><newline46mondego>        StyledText text = new StyledText (parent, SWT.BORDER|SWT.SINGLE);<newline46mondego>        text.setText(<doubleQuotes46>0123456789 ABCDEFGHIJKLM NOPQRSTUVWXYZ<doubleQuotes46>);<newline46mondego>        // make 0123456789 appear bold<newline46mondego>        StyleRange style1 = new StyleRange();<newline46mondego>        style1.start = 0;<newline46mondego>        style1.length = 10;<newline46mondego>        style1.fontStyle = SWT.BOLD;<newline46mondego>        text.setStyleRange(style1);<newline46mondego>        // make ABCDEFGHIJKLM have a red font<newline46mondego>        StyleRange style2 = new StyleRange();<newline46mondego>        style2.start = 11;<newline46mondego>        style2.length = 13;<newline46mondego>        style2.foreground = display.getSystemColor(SWT.COLOR_RED);<newline46mondego>        text.setStyleRange(style2);<newline46mondego>        // make NOPQRSTUVWXYZ have a blue background<newline46mondego>        StyleRange style3 = new StyleRange();<newline46mondego>        style3.start = 25;<newline46mondego>        style3.length = 13;<newline46mondego>        style3.fontStyle = SWT.BOLD | SWT.ITALIC;<newline46mondego>        text.setStyleRange(style3);<newline46mondego><newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3581splitHere46","9494743splitHere46","strtoul"
"3582splitHere46","9494743splitHere46","#include  <stdlib.h><newline46mondego><newline46mondego>int main(int argc, char * argv[])<newline46mondego>{<newline46mondego>    if (argc > 1)<newline46mondego>    {<newline46mondego>        unsigned int n = strtoul(argv[1], NULL, 16);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3583splitHere46","9494743splitHere46","strtoul"
"3584splitHere46","9494745splitHere46","if(sendToWebservice(String_to_send).equals(<doubleQuotes46>fromWebservice<doubleQuotes46>)) <newline46mondego>"
"3585splitHere46","9494959splitHere46","private synchronized void outerMethod() {<newline46mondego>...<newline46mondego>}<newline46mondego>"
"3586splitHere46","9494959splitHere46","public OuterClass {<newline46mondego>    private AtomicBoolean outerMethodHasBeenCalled = new AtomicBoolean();<newline46mondego><newline46mondego>    private void outerMethod() {<newline46mondego>        if (outerMethodHasBeenCalled.compareAndSet(false, true)) {<newline46mondego>            // do stuff<newline46mondego>        }<newline46mondego>    }<newline46mondego>...<newline46mondego>"
"3587splitHere46","9495011splitHere46","Ø§ÙŽÙ„Ù„Ù‘Ù°Ù‡Ù?Ù…ÙŽÙ‘ Ø§Ù?Ù†Ù?Ù‘Ù‰Ù’ Ø§ÙŽØ³Ù’Ø¦ÙŽÙ„Ù?ÙƒÙŽ Ø±Ù?Ø²Ù’Ù‚Ù‹Ø§ÙˆÙŽÙ‘Ø§Ø³Ù?Ø¹Ù‹Ø§Ø·ÙŽÙŠÙ?Ù‘Ø¨Ù‹Ø§Ù…Ù?Ù†Ù’ Ø±Ù?Ø²Ù’Ù‚Ù?ÙƒÙŽ<newline46mondego>Ù…ÙŽØ±Ù’Ø­ÙŽØ¨Ù‹Ø§<newline46mondego>"
"3588splitHere46","9495011splitHere46","import java.io.*;<newline46mondego>import java.util.*;<newline46mondego><newline46mondego>public class TextConverter {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        if (args.length == 1) {<newline46mondego>            String language = args[0];<newline46mondego><newline46mondego>            List<String> text = new Vector<String>();<newline46mondego><newline46mondego>            try {<newline46mondego>                // read text from Notepad UTF-8 file<newline46mondego>                InputStream in = new FileInputStream(language + <doubleQuotes46>.utf8<doubleQuotes46>);<newline46mondego>                try {<newline46mondego>                    BufferedReader bufin = new BufferedReader(new InputStreamReader(in, <doubleQuotes46>UTF-8<doubleQuotes46>));<newline46mondego>                    String s;<newline46mondego>                    while ( (s = bufin.readLine()) != null ) {<newline46mondego>                        // remove formatting character added by Notepad<newline46mondego>                        s = s.replaceAll(<doubleQuotes46>\ufffe<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>                        text.add(s);<newline46mondego>                    }<newline46mondego>                } finally {<newline46mondego>                    in.close();<newline46mondego>                }<newline46mondego><newline46mondego>                // write it for easy reading in J2ME<newline46mondego>                OutputStream out = new FileOutputStream(language + <doubleQuotes46>.res<doubleQuotes46>);<newline46mondego>                DataOutputStream dout = new DataOutputStream(out);<newline46mondego>                try {<newline46mondego>                    // first item is the number of strings<newline46mondego>                    dout.writeShort(text.size());<newline46mondego>                    // then the string themselves<newline46mondego>                    for (String s: text) {<newline46mondego>                        dout.writeUTF(s);<newline46mondego>                    }<newline46mondego>                } finally {<newline46mondego>                    dout.close();<newline46mondego>                }<newline46mondego>            } catch (Exception e) {<newline46mondego>                System.err.println(<doubleQuotes46>TextConverter: <doubleQuotes46> + e);<newline46mondego>            }<newline46mondego>        } else {<newline46mondego>            System.err.println(<doubleQuotes46>syntax: TextConverter <language-code><doubleQuotes46>);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3589splitHere46","9495011splitHere46","java TextConverter arb<newline46mondego>"
"3590splitHere46","9495011splitHere46","public String[] loadText(String resName) throws IOException {<newline46mondego>    String[] text;<newline46mondego>    InputStream in = getClass().getResourceAsStream(resName);<newline46mondego>    try {<newline46mondego>        DataInputStream din = new DataInputStream(in);<newline46mondego>        int size = din.readShort();<newline46mondego>        text = new String[size];<newline46mondego>        for (int i = 0; i < size; i++) {<newline46mondego>            text[i] = din.readUTF();<newline46mondego>        }<newline46mondego>    } finally {<newline46mondego>        in.close();<newline46mondego>    }<newline46mondego>    return text;<newline46mondego>}<newline46mondego>"
"3591splitHere46","9495011splitHere46","String[] text = loadText(<doubleQuotes46>arb.res<doubleQuotes46>);<newline46mondego>System.out.println(<doubleQuotes46>my arabic word from arb.res file ::<doubleQuotes46>+text[0]+<doubleQuotes46> second from arb.res file ::<doubleQuotes46>+text[1]);<newline46mondego>"
"3592splitHere46","9495023splitHere46","<bean id=<doubleQuotes46>myBean<doubleQuotes46> class=<doubleQuotes46>com.xx.SomeBean<doubleQuotes46>><newline46mondego> <property name=<doubleQuotes46>someMap<doubleQuotes46> ref=<doubleQuotes46>myMap<doubleQuotes46>/><newline46mondego></bean<newline46mondego>"
"3593splitHere46","9495048splitHere46","activity"
"3594splitHere46","9495048splitHere46","activity"
"3595splitHere46","9495048splitHere46","<uses-sdk android:minSdkVersion=<doubleQuotes46>10<doubleQuotes46> /><newline46mondego><newline46mondego>    <application<newline46mondego>        android:icon=<doubleQuotes46>@drawable/ic_launcher<doubleQuotes46><newline46mondego>        android:label=<doubleQuotes46>@string/app_name<doubleQuotes46> ><newline46mondego>        <activity<newline46mondego>            android:name=<doubleQuotes46>izzy.n.IzzynActivity<doubleQuotes46><newline46mondego>            android:label=<doubleQuotes46>@string/app_name<doubleQuotes46> ><newline46mondego>            <intent-filter><newline46mondego>                <action android:name=<doubleQuotes46>android.intent.action.MAIN<doubleQuotes46> />    <newline46mondego>                <category android:name=<doubleQuotes46>android.intent.category.LAUNCHER<doubleQuotes46> /><newline46mondego>            </intent-filter><newline46mondego>        </activity><newline46mondego>        <activity<newline46mondego>            android:name=<doubleQuotes46>izzy.n.notes<doubleQuotes46><newline46mondego>            android:label=<doubleQuotes46>@string/notes<doubleQuotes46>></activity><newline46mondego>    </application><newline46mondego><newline46mondego></manifest><newline46mondego>"
"3596splitHere46","9495048splitHere46","setResult()"
"3597splitHere46","9495048splitHere46","startActivityForResult"
"3598splitHere46","9495051splitHere46","JenkinsTraubReal Class"
"3599splitHere46","9495074splitHere46","<class name=<doubleQuotes46>class<doubleQuotes46> table=<doubleQuotes46>TABLE<doubleQuotes46> polymorphism=<doubleQuotes46>explicit<doubleQuotes46>><newline46mondego>"
"3600splitHere46","9495180splitHere46","null"
"3601splitHere46","9495180splitHere46","void foo() {<newline46mondego>  String x = null;<newline46mondego>  String y;<newline46mondego><newline46mondego>  System.out.println(x)  // Fine, prints null<newline46mondego>  System.out.println(y); // Compile-time error<newline46mondego>}<newline46mondego>"
"3602splitHere46","9495258splitHere46","<doubleQuotes46>a<doubleQuotes46> + null + <doubleQuotes46>b<doubleQuotes46>"
"3603splitHere46","9495258splitHere46","<doubleQuotes46>anullb<doubleQuotes46>"
"3604splitHere46","9495258splitHere46","Integer.parseInt"
"3605splitHere46","9495258splitHere46","NumberFormatException"
"3606splitHere46","9495280splitHere46","doJobWithResult()"
"3607splitHere46","9495280splitHere46","void"
"3608splitHere46","9495280splitHere46","Exception"
"3609splitHere46","9495280splitHere46","Exception"
"3610splitHere46","9495280splitHere46","Exception"
"3611splitHere46","9495280splitHere46","Exception"
"3612splitHere46","9495296splitHere46","Customer someCustomer = ...<newline46mondego>new PaymentMethod(someType, someNumber, someMonth, someName, someYear, someCustomer).save();<newline46mondego>"
"3613splitHere46","9495296splitHere46","@Entity<newline46mondego>public class PaymentMethod  extends Model {<newline46mondego>    ...<newline46mondego>    @Column(nullable = false)<newline46mondego>    @ManyToOne<newline46mondego>    public Customer customer;<newline46mondego>}<newline46mondego>"
"3614splitHere46","9495379splitHere46","...<newline46mondego>out.println(<doubleQuotes46>Content-Encoding: deflate<doubleQuotes46>);  // NOTICE deflate encoding<newline46mondego>out.println(<doubleQuotes46>Content-Type: text/html<doubleQuotes46>);<newline46mondego>out.println(<doubleQuotes46>Connection: close<doubleQuotes46>);<newline46mondego>out.println();<newline46mondego>String x = <doubleQuotes46>jsonp1330xxxxx462022184([[<doubleQuotes46>;<newline46mondego>DeflaterInputStream dis = new DeflaterInputStream(out);<newline46mondego>dis.write(x.getBytes(<doubleQuotes46>utf-8<doubleQuotes46>));   // JSON is UTF-8<newline46mondego>dis.close();<newline46mondego>server.close(); //  this a bad idea, the client may not have read the data yet<newline46mondego>"
"3615splitHere46","9495468splitHere46","java.text.DateFormat"
"3616splitHere46","9495468splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego><jasperReport xmlns=<doubleQuotes46>http://jasperreports.sourceforge.net/jasperreports<doubleQuotes46> xmlns:xsi=<doubleQuotes46>http://www.w3.org/2001/XMLSchema-instance<doubleQuotes46> xsi:schemaLocation=<doubleQuotes46>http://jasperreports.sourceforge.net/jasperreports http://jasperreports.sourceforge.net/xsd/jasperreport.xsd<doubleQuotes46> name=<doubleQuotes46>datetime_format<doubleQuotes46> pageWidth=<doubleQuotes46>595<doubleQuotes46> pageHeight=<doubleQuotes46>842<doubleQuotes46> columnWidth=<doubleQuotes46>555<doubleQuotes46> leftMargin=<doubleQuotes46>20<doubleQuotes46> rightMargin=<doubleQuotes46>20<doubleQuotes46> topMargin=<doubleQuotes46>20<doubleQuotes46> bottomMargin=<doubleQuotes46>20<doubleQuotes46>><newline46mondego>    <property name=<doubleQuotes46>ireport.zoom<doubleQuotes46> value=<doubleQuotes46>1.0<doubleQuotes46>/><newline46mondego>    <property name=<doubleQuotes46>ireport.x<doubleQuotes46> value=<doubleQuotes46>0<doubleQuotes46>/><newline46mondego>    <property name=<doubleQuotes46>ireport.y<doubleQuotes46> value=<doubleQuotes46>0<doubleQuotes46>/><newline46mondego>    <property name=<doubleQuotes46>net.sf.jasperreports.export.xls.detect.cell.type<doubleQuotes46> value=<doubleQuotes46>true<doubleQuotes46>/><newline46mondego>    <queryString><newline46mondego>        <![CDATA[SELECT date1, date2 FROM table]]><newline46mondego>    </queryString><newline46mondego>    <field name=<doubleQuotes46>date1<doubleQuotes46> class=<doubleQuotes46>java.sql.Timestamp<doubleQuotes46>/><newline46mondego>    <field name=<doubleQuotes46>date2<doubleQuotes46> class=<doubleQuotes46>java.sql.Timestamp<doubleQuotes46>/><newline46mondego>    <variable name=<doubleQuotes46>dateFormat<doubleQuotes46> class=<doubleQuotes46>java.text.DateFormat<doubleQuotes46> resetType=<doubleQuotes46>None<doubleQuotes46>><newline46mondego>        <variableExpression><![CDATA[new SimpleDateFormat(<doubleQuotes46>yyyy-MM-dd<doubleQuotes46>)]]></variableExpression><newline46mondego>    </variable><newline46mondego>    <detail><newline46mondego>        <band height=<doubleQuotes46>20<doubleQuotes46> splitType=<doubleQuotes46>Stretch<doubleQuotes46>><newline46mondego>            <textField><newline46mondego>                <reportElement x=<doubleQuotes46>11<doubleQuotes46> y=<doubleQuotes46>0<doubleQuotes46> width=<doubleQuotes46>194<doubleQuotes46> height=<doubleQuotes46>20<doubleQuotes46>/><newline46mondego>                <textElement/><newline46mondego>                <textFieldExpression><![CDATA[$V{dateFormat}.format($F{date1})]]></textFieldExpression><newline46mondego>            </textField><newline46mondego>            <textField pattern=<doubleQuotes46>yyyy-MM-dd<doubleQuotes46>><newline46mondego>                <reportElement x=<doubleQuotes46>205<doubleQuotes46> y=<doubleQuotes46>0<doubleQuotes46> width=<doubleQuotes46>272<doubleQuotes46> height=<doubleQuotes46>20<doubleQuotes46>/><newline46mondego>                <textElement/><newline46mondego>                <textFieldExpression><![CDATA[$F{date2}]]></textFieldExpression><newline46mondego>            </textField><newline46mondego>        </band><newline46mondego>    </detail><newline46mondego></jasperReport><newline46mondego>"
"3617splitHere46","9495468splitHere46","DateFormat"
"3618splitHere46","9495480splitHere46","InputStrem"
"3619splitHere46","9495480splitHere46","ByteArrayInputStream"
"3620splitHere46","9495613splitHere46","EntityManager em = entityManagerFactory.createEntityManager();<newline46mondego>FullTextEntityManager fullTextEntityManager = Search.getFullTextEntityManager(em);<newline46mondego>fullTextEntityManager.createIndexer().startAndWait();<newline46mondego>"
"3621splitHere46","9495850splitHere46","f.setVisible(true);"
"3622splitHere46","9495850splitHere46","JFrame"
"3623splitHere46","9495850splitHere46","setModal()/ ModalityTypes"
"3624splitHere46","9495850splitHere46","Top-Level Container"
"3625splitHere46","9495850splitHere46","getComtentPane.removeAll()"
"3626splitHere46","9495850splitHere46","JFrame/JDialog"
"3627splitHere46","9495941splitHere46","change"
"3628splitHere46","9495941splitHere46","keyup"
"3629splitHere46","9495941splitHere46",".change()"
"3630splitHere46","9495941splitHere46",".keyup()"
"3631splitHere46","9496274splitHere46","href"
"3632splitHere46","9496274splitHere46","TemplateMethodModel"
"3633splitHere46","9496274splitHere46","TemplateMethodModelEx"
"3634splitHere46","9496274splitHere46","args"
"3635splitHere46","9496274splitHere46","TemplateMethodModel.exec(args)"
"3636splitHere46","9496274splitHere46","List"
"3637splitHere46","9496274splitHere46","String"
"3638splitHere46","9496274splitHere46","TemplateMethodModelEx"
"3639splitHere46","9496274splitHere46","args"
"3640splitHere46","9496274splitHere46","List"
"3641splitHere46","9496274splitHere46","TemplateModel"
"3642splitHere46","9496344splitHere46","private static int count = 0;<newline46mondego><newline46mondego>public static void record(Message  message)//Message is a class <newline46mondego>    {<newline46mondego>    try<newline46mondego>      {<newline46mondego>        BufferedOutputStream buf=new BufferedOutputStream(<newline46mondego>          new FileOutputStream(<doubleQuotes46>E:/kruthika/proj/<doubleQuotes46> + count + <doubleQuotes46>.bin<doubleQuotes46>)<newline46mondego>        );<newline46mondego>        byte[] b =serializer.serialize(message);        <newline46mondego>        buf.write(b);<newline46mondego>        buf.flush();<newline46mondego><newline46mondego>        count++;<newline46mondego><newline46mondego>      }<newline46mondego>    catch(Exception e){System.out.print(e);}<newline46mondego>  }<newline46mondego>"
"3643splitHere46","9496596splitHere46","deltaW = learningRate*errorDerivative2*input"
"3644splitHere46","9496596splitHere46","-output * (1-output) *(desiredOutput - output)"
"3645splitHere46","9496596splitHere46","deltaW = -learningRate*delta*input"
"3646splitHere46","9496596splitHere46","errorDerivative2"
"3647splitHere46","9496626splitHere46","CipherInputStream"
"3648splitHere46","9496626splitHere46","CipherOutputStream"
"3649splitHere46","9496626splitHere46","FileInputStream fis = new FileInputStream(new File(<doubleQuotes46>D:/Shashank/inputVideo.avi<doubleQuotes46>));<newline46mondego>        File outfile = new File(<doubleQuotes46>D:/Shashank/encVideo.avi<doubleQuotes46>);<newline46mondego>        int read;<newline46mondego>        if(!outfile.exists())<newline46mondego>            outfile.createNewFile();<newline46mondego>        File decfile = new File(<doubleQuotes46>D:/Shashank/decVideo.avi<doubleQuotes46>);<newline46mondego>        if(!decfile.exists())<newline46mondego>            decfile.createNewFile();<newline46mondego>        FileOutputStream fos = new FileOutputStream(outfile);<newline46mondego>        FileInputStream encfis = new FileInputStream(outfile);<newline46mondego>        FileOutputStream decfos = new FileOutputStream(decfile);<newline46mondego>        Cipher encipher = Cipher.getInstance(<doubleQuotes46>AES<doubleQuotes46>);<newline46mondego>        Cipher decipher = Cipher.getInstance(<doubleQuotes46>AES<doubleQuotes46>);<newline46mondego>        KeyGenerator kgen = KeyGenerator.getInstance(<doubleQuotes46>AES<doubleQuotes46>);<newline46mondego>        //byte key[] = {0x00,0x32,0x22,0x11,0x00,0x00,0x00,0x00,0x00,0x23,0x00,0x00,0x00,0x00,0x00,0x00,0x00};<newline46mondego>        SecretKey skey = kgen.generateKey();<newline46mondego>        //Lgo<newline46mondego>        encipher.init(Cipher.ENCRYPT_MODE, skey);<newline46mondego>        CipherInputStream cis = new CipherInputStream(fis, encipher);<newline46mondego>        decipher.init(Cipher.DECRYPT_MODE, skey);<newline46mondego>        CipherOutputStream cos = new CipherOutputStream(decfos,decipher);<newline46mondego>        while((read = cis.read())!=-1)<newline46mondego>                {<newline46mondego>                    fos.write((char)read);<newline46mondego>                    fos.flush();<newline46mondego>                }   <newline46mondego>        fos.close();<newline46mondego>        while((read=encfis.read())!=-1)<newline46mondego>        {<newline46mondego>            cos.write(read);<newline46mondego>            cos.flush();<newline46mondego>        }<newline46mondego>    cos.close(); <newline46mondego>"
"3650splitHere46","9496626splitHere46","generateKey()"
"3651splitHere46","9496637splitHere46","public static <A extends Annotation> A getAnnotation(Method method,<newline46mondego>                                                 Class<A> annotationType)<newline46mondego>"
"3652splitHere46","9496637splitHere46","public static <A extends Annotation> A getAnnotation(AnnotatedElement element,<newline46mondego>                                                 Class<A> annotationType)<newline46mondego>"
"3653splitHere46","9496644splitHere46","public void setUp() throws Exception { selenium = new DefaultSelenium(<doubleQuotes46>localhost<doubleQuotes46>, 4444, <doubleQuotes46>*iexplore<doubleQuotes46>, <doubleQuotes46>http://(some URL)<doubleQuotes46>); selenium.start(); }<newline46mondego><newline46mondego><newline46mondego>public void setUp() throws Exception { selenium = new DefaultSelenium(<doubleQuotes46>localhost<doubleQuotes46>, 4444, <doubleQuotes46>*opera<doubleQuotes46>, <doubleQuotes46>http://(some URL)<doubleQuotes46>); selenium.start(); }<newline46mondego><newline46mondego>public void setUp() throws Exception { selenium = new DefaultSelenium(<doubleQuotes46>localhost<doubleQuotes46>, 4444, <doubleQuotes46>*custom<doubleQuotes46>, <doubleQuotes46>http://(some URL)<doubleQuotes46>); selenium.start(); }<newline46mondego>"
"3654splitHere46","9496919splitHere46","String myString = listItem.gettextdata().replace(<doubleQuotes46>\\\\r\\\\n<doubleQuotes46>, <doubleQuotes46> <doubleQuotes46>); <newline46mondego>"
"3655splitHere46","9496920splitHere46","Paint paint = new Paint();<newline46mondego>"
"3656splitHere46","9496920splitHere46","Bitmap temp = Bitmap.createBitmap(mBitmap, 0, 0, mBitmap.getWidth(), mBitmap.getHeight(), flip, true);<newline46mondego>"
"3657splitHere46","9496920splitHere46","bitmap"
"3658splitHere46","9496920splitHere46","canvas"
"3659splitHere46","9496920splitHere46","canvas"
"3660splitHere46","9496920splitHere46","Bitmap"
"3661splitHere46","9496920splitHere46","Canvas"
"3662splitHere46","9496962splitHere46","public void deleteMyObjects(Long[] ids) {<newline46mondego>    Objectify txn = null;<newline46mondego>    try {<newline46mondego>        txn = txn();<newline46mondego>        List<Key<MyObject>> keys = new ArrayList<Key<MyObject>>();<newline46mondego>        for (long id : ids) {<newline46mondego>            keys.add(new Key<MyObject>(MyObject.class, id));<newline46mondego>        }<newline46mondego>        txn.delete(keys);<newline46mondego>        commit(txn);<newline46mondego>    } finally {<newline46mondego>        rollbackIfNeeded(txn);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3663splitHere46","9496962splitHere46","new MyObjectDAO(<doubleQuotes46>somenamespace<doubleQuotes46>).delete({ 1L, 34L, 116L });<newline46mondego>"
"3664splitHere46","9497040splitHere46","class FinalField<newline46mondego>{<newline46mondego>    final int x;<newline46mondego>    int y;<newline46mondego><newline46mondego>    public FinalField()<newline46mondego>    {<newline46mondego>        Thread t = new Thread(new TestThread(this));<newline46mondego>        t.start();<newline46mondego><newline46mondego>        y = 4;<newline46mondego>        x = 3;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class TestThread implements Runnable<newline46mondego>{<newline46mondego>    FinalField f;<newline46mondego>    TestThread(FinalField f)<newline46mondego>    {<newline46mondego>        if(f.x != 3)<newline46mondego>            System.out.println(<doubleQuotes46>value of x = <doubleQuotes46> + f.x);<newline46mondego><newline46mondego>        this.f = f;<newline46mondego>    }<newline46mondego><newline46mondego>    public void run() <newline46mondego>    {<newline46mondego>        if(f.x != 3)<newline46mondego>            System.out.println(<doubleQuotes46>value of x = <doubleQuotes46> + f.x);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public class Test<newline46mondego>{<newline46mondego>    public static void main(String[] args) <newline46mondego>    {<newline46mondego>        for(int i=0; i<100; i++)<newline46mondego>        {<newline46mondego>            new FinalField();<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3665splitHere46","9497040splitHere46","Output"
"3666splitHere46","9497040splitHere46","value of x = 0<newline46mondego>value of x = 0<newline46mondego>value of x = 0<newline46mondego>.<newline46mondego>.<newline46mondego>.<newline46mondego>value of x = 0<newline46mondego>value of x = 0<newline46mondego>value of x = 0<newline46mondego>"
"3667splitHere46","9497040splitHere46","final"
"3668splitHere46","9497040splitHere46","x"
"3669splitHere46","9497040splitHere46","0"
"3670splitHere46","9497040splitHere46","Whereas"
"3671splitHere46","9497040splitHere46","run()"
"3672splitHere46","9497040splitHere46","final"
"3673splitHere46","9497040splitHere46","x"
"3674splitHere46","9497040splitHere46","3"
"3675splitHere46","9497040splitHere46","escaping"
"3676splitHere46","9497040splitHere46","FinalField"
"3677splitHere46","9497282splitHere46","bundleDir"
"3678splitHere46","9497302splitHere46","1.0"
"3679splitHere46","9497302splitHere46","FOO-16"
"3680splitHere46","9497302splitHere46","V1.0.16__my_greatest_feature.sql"
"3681splitHere46","9497302splitHere46","V1.0.16"
"3682splitHere46","9497302splitHere46","V1.0.27"
"3683splitHere46","9497302splitHere46","V1.0.101"
"3684splitHere46","9497302splitHere46","FOO-16"
"3685splitHere46","9497302splitHere46","FOO-27"
"3686splitHere46","9497302splitHere46","FOO-101"
"3687splitHere46","9497302splitHere46","1.0"
"3688splitHere46","9497302splitHere46","V1.0.35"
"3689splitHere46","9497302splitHere46","V1.1.35"
"3690splitHere46","9497373splitHere46","[WebService(Namespace = <doubleQuotes46>http://sposter.smartag.my<doubleQuotes46>)]<newline46mondego>"
"3691splitHere46","9497377splitHere46","List<List<String>> l = new ArrayList<List<String>>();<newline46mondego>"
"3692splitHere46","9497377splitHere46","List<String>[] l = new List[n];<newline46mondego>"
"3693splitHere46","9497491splitHere46","mvn install"
"3694splitHere46","9497733splitHere46","requestLocationUpdates"
"3695splitHere46","9497733splitHere46","LocationManager"
"3696splitHere46","9497733splitHere46","requestLocationUpdates"
"3697splitHere46","9497852splitHere46","PropertyChangeEvent"
"3698splitHere46","9497852splitHere46","PropertyChangeListener"
"3699splitHere46","9497852splitHere46","name"
"3700splitHere46","9497910splitHere46","import java.util.ArrayList;<newline46mondego>import java.util.List;<newline46mondego><newline46mondego><newline46mondego>public abstract class AbstractPure implements ISomeInterface {<newline46mondego>    public static final List<String> days = new ArrayList<String>();<newline46mondego>    static{<newline46mondego>        days.add(<doubleQuotes46>Monday<doubleQuotes46>);<newline46mondego>        days.add(<doubleQuotes46>Tuesday<doubleQuotes46>);<newline46mondego>        days.add(<doubleQuotes46>Wednesday<doubleQuotes46>);      <newline46mondego>        days.add(<doubleQuotes46>Thursday<doubleQuotes46>);   <newline46mondego>        days.add(<doubleQuotes46>Friday<doubleQuotes46>); <newline46mondego>        days.add(<doubleQuotes46>Saturday<doubleQuotes46>);   <newline46mondego>        days.add(<doubleQuotes46>Sunday<doubleQuotes46>); <newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3701splitHere46","9497949splitHere46","while((read = cis.read())!=-1)<newline46mondego>{<newline46mondego>    fos.write(read);<newline46mondego>    fos.flush();<newline46mondego>}<newline46mondego>"
"3702splitHere46","9497949splitHere46","byte[] buffer = new byte[8192]; // Or whatever<newline46mondego>int bytesRead;<newline46mondego>while ((bytesRead = cis.read(buffer)) != -1)<newline46mondego>{<newline46mondego>    fos.write(buffer, 0, bytesRead);<newline46mondego>}<newline46mondego>fos.flush(); // Not strictly necessary, but can avoid close() masking issues<newline46mondego>"
"3703splitHere46","9497949splitHere46","fos"
"3704splitHere46","9497949splitHere46","cis"
"3705splitHere46","9497949splitHere46","fis"
"3706splitHere46","9497949splitHere46","finally"
"3707splitHere46","9498007splitHere46","desc"
"3708splitHere46","9498056splitHere46","RequestDispatcher rd = request.getRequestDispatcher(<doubleQuotes46>newpage.jsp<doubleQuotes46>);<newline46mondego>  request.setAttribute(<doubleQuotes46>msg<doubleQuotes46>,<doubleQuotes46>Welcome<doubleQuotes46>);<newline46mondego> rd.forward(request, response);<newline46mondego>"
"3709splitHere46","9498056splitHere46","ServletContext context= getServletContext();<newline46mondego>  RequestDispatcher rd= context.getRequestDispatcher(<doubleQuotes46>/LoggedIn<doubleQuotes46>);<newline46mondego>  rd.forward(request, response);<newline46mondego>"
"3710splitHere46","9498164splitHere46","public void doPost(...) {<newline46mondego>   getServletContext().setAttribute(<doubleQuotes46>myPersistentObject<doubleQuotes46>, someObject);<newline46mondego>}<newline46mondego>"
"3711splitHere46","9498164splitHere46","<%<newline46mondego>    application.setAttribute(<doubleQuotes46>myPersistentObject<doubleQuotes46>, someObject);<newline46mondego>%><newline46mondego>"
"3712splitHere46","9498164splitHere46","<c:set value=<doubleQuotes46>${someObject}<doubleQuotes46> scope=<doubleQuotes46>application<doubleQuotes46> /><newline46mondego>"
"3713splitHere46","9498218splitHere46","TextView"
"3714splitHere46","9498218splitHere46","onTextChanged"
"3715splitHere46","9498218splitHere46","afterTextChanged"
"3716splitHere46","9498218splitHere46","onTextChanged"
"3717splitHere46","9498218splitHere46","afterTextChanged"
"3718splitHere46","9498218splitHere46","s"
"3719splitHere46","9498218splitHere46","@Override<newline46mondego>public void afterTextChanged(Editable s)<newline46mondego>{    <newline46mondego>    if( !s.equalsIngoreCase(<doubleQuotes46>smth defined previously<doubleQuotes46>))<newline46mondego>         s = <doubleQuotes46>smth defined previously<doubleQuotes46>;              <newline46mondego>}<newline46mondego>"
"3720splitHere46","9498218splitHere46","synchronized"
"3721splitHere46","9498218splitHere46","@Override<newline46mondego>    public void afterTextChanged(Editable s)<newline46mondego>    {    <newline46mondego>       String sText = ET.getText().toString()<newline46mondego><newline46mondego>        if( !isFormatted(sText))<newline46mondego>             s = format(sText);              <newline46mondego>    }<newline46mondego>    bool isFormatted(String s)<newline46mondego>    {<newline46mondego>     //check if s is already formatted<newline46mondego>    }<newline46mondego><newline46mondego>    string format(String s)<newline46mondego>    {<newline46mondego>      //format s & return<newline46mondego>    }<newline46mondego>"
"3722splitHere46","9498265splitHere46","JpegEncode"
"3723splitHere46","9498265splitHere46","int"
"3724splitHere46","9498265splitHere46","args[2]"
"3725splitHere46","9498265splitHere46","String"
"3726splitHere46","9498265splitHere46","args[2]"
"3727splitHere46","9498265splitHere46","int"
"3728splitHere46","9498265splitHere46","Integer.parseInt(args[2]);<newline46mondego>"
"3729splitHere46","9498265splitHere46","NumberFormatException"
"3730splitHere46","9498265splitHere46","args[2]"
"3731splitHere46","9498265splitHere46","int"
"3732splitHere46","9498321splitHere46","// custom transferHandler which decides about imports based on source<newline46mondego>    TransferHandler handler = new TransferHandler(<doubleQuotes46>icon<doubleQuotes46>) {<newline46mondego><newline46mondego>        @Override<newline46mondego>        public boolean canImport(TransferSupport support) {<newline46mondego>            return super.canImport(support) <newline46mondego>                    && support.getComponent().getParent() != imageSelectPanel;<newline46mondego>        }<newline46mondego><newline46mondego>    };<newline46mondego>    // use the handler on all labels (handlers can be shared, btw)<newline46mondego>    // for each label on imageSelectPanel<newline46mondego>    imageSelectLabel.setTransferHandler(handler)<newline46mondego>    // for each label on the target panel (aka storyPanel) <newline46mondego>    storyLabel.setTransferHandler(handler)<newline46mondego>"
"3733splitHere46","9498331splitHere46","public class TestTypes<newline46mondego>{<newline46mondego>    public static void main(String[] args)<newline46mondego>    {<newline46mondego>        String[] strings = new String[] {<doubleQuotes46>123<doubleQuotes46>, <doubleQuotes46>9999999999999<doubleQuotes46>, <doubleQuotes46>50.4<doubleQuotes46>, <doubleQuotes46>not a number<doubleQuotes46>};<newline46mondego><newline46mondego>        for(String str : strings)<newline46mondego>        {<newline46mondego>        System.out.print(<doubleQuotes46>'<doubleQuotes46> + str + <doubleQuotes46>': <doubleQuotes46>);<newline46mondego>            for( TypeChecker checker : typesToCheck)<newline46mondego>            {<newline46mondego>                if(checker.check(str))<newline46mondego>                {<newline46mondego>                    System.out.print(checker.type.getSimpleName() + <doubleQuotes46> <doubleQuotes46>);<newline46mondego>                }<newline46mondego>            }<newline46mondego>            System.out.println();<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>    static abstract class TypeChecker<newline46mondego>    {<newline46mondego>        public final Class type;<newline46mondego>        public abstract boolean check(String s);<newline46mondego><newline46mondego>        TypeChecker(Class type)<newline46mondego>        {<newline46mondego>            this.type = type;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    // A list of the code for all the checks<newline46mondego>    static TypeChecker[] typesToCheck = <newline46mondego>    {<newline46mondego>            new TypeChecker(Integer.TYPE) // is Integer<newline46mondego>            {<newline46mondego>                public boolean check(String s)<newline46mondego>                {<newline46mondego>                    try{Integer.parseInt(s);}<newline46mondego>                    catch(Exception e)<newline46mondego>                    {return false;}<newline46mondego>                    return true;<newline46mondego>                }<newline46mondego>            },<newline46mondego><newline46mondego>            new TypeChecker(Long.TYPE) // is Long<newline46mondego>            {<newline46mondego>                public boolean check(String s)<newline46mondego>                {<newline46mondego>                    try{Long.parseLong(s);}<newline46mondego>                    catch(Exception e)<newline46mondego>                    {return false;}<newline46mondego>                    return true;<newline46mondego>                }<newline46mondego>            }, <newline46mondego><newline46mondego>            new TypeChecker(Double.TYPE) // is Double<newline46mondego>            {<newline46mondego>                public boolean check(String s)<newline46mondego>                {<newline46mondego>                    try{Double.parseDouble(s);}<newline46mondego>                    catch(Exception e)<newline46mondego>                    {return false;}<newline46mondego>                    return true;<newline46mondego>                }<newline46mondego>            }, <newline46mondego>    };<newline46mondego>}<newline46mondego>"
"3734splitHere46","9498331splitHere46","'123': int long double <newline46mondego>'9999999999999': long double <newline46mondego>'50.4': double <newline46mondego>'not a number': <newline46mondego>"
"3735splitHere46","9498420splitHere46","select * from table_name where id IN (?, ?, ?)<newline46mondego>"
"3736splitHere46","9498514splitHere46","double"
"3737splitHere46","9498514splitHere46","double"
"3738splitHere46","9498514splitHere46","public static double notNaN(double value, double defaultValue) {<newline46mondego>   return Double.isNaN(value)? defaultValue: value;<newline46mondego>}<newline46mondego>"
"3739splitHere46","9498514splitHere46","Double"
"3740splitHere46","9498514splitHere46","public static double notNull(Double doubleObj, double defaultValue) {<newline46mondego>   return doubleObj == null? defaultValue: doubleObj.doubleValue();<newline46mondego>}<newline46mondego><newline46mondego>// use this way (getPropertyDouble() returns a java.lang.Double)<newline46mondego><newline46mondego>notNull(myObj.getPropertyDouble(), -1.0); <newline46mondego>"
"3741splitHere46","9498514splitHere46","if(o == null)"
"3742splitHere46","9498514splitHere46","doubleObj.equals(Double.valueOf(1.0D));<newline46mondego>"
"3743splitHere46","9498514splitHere46","equals"
"3744splitHere46","9498514splitHere46","obj.setProperty(notNull(objWrapper.getProperty(), obj.getProperty()));<newline46mondego>"
"3745splitHere46","9498514splitHere46","obj.setProperty(notNull(objWrapper.getProperty(), HERE_GOES_YOUR_DEFAULT_VALUE));<newline46mondego>"
"3746splitHere46","9498615splitHere46","import java.util.Scanner;<newline46mondego>import java.io.InputStream;<newline46mondego><newline46mondego>public class Largest_String {<newline46mondego>    public static void main(String[] args) {<newline46mondego>         Scanner input=new Scanner(System.in);<newline46mondego>         System.out.println(<doubleQuotes46>Please Enter The 10 Strings: <doubleQuotes46>);<newline46mondego><newline46mondego>         String longest = <doubleQuotes46><doubleQuotes46>;<newline46mondego><newline46mondego>         for(int i=0; i<10; i++){<newline46mondego>            System.out.print(<doubleQuotes46>Enter String <doubleQuotes46>+(i+1)+<doubleQuotes46>: <doubleQuotes46>);<newline46mondego>            String str=input.nextLine();<newline46mondego>            if( str.length() > longest.length() )<newline46mondego>            {<newline46mondego>               longest = str;<newline46mondego>            }<newline46mondego>        }<newline46mondego>        System.out.println(<doubleQuotes46>The Largest String is <doubleQuotes46>+ longest);<newline46mondego>     }<newline46mondego> }<newline46mondego>"
"3747splitHere46","9498646splitHere46","CallInfo.hbm.xml"
"3748splitHere46","9498646splitHere46","hibernate.cfg.hbm"
"3749splitHere46","9498656splitHere46","import org.jsoup.Jsoup;<newline46mondego>import org.jsoup.nodes.Document;<newline46mondego>import org.jsoup.select.Elements;<newline46mondego><newline46mondego><newline46mondego>public class JSoupTest <newline46mondego>{<newline46mondego>    public static void main(String[] args) <newline46mondego>    {<newline46mondego>         String html =   <doubleQuotes46><li class='pro pic notSold' status='0' ><doubleQuotes46>;<newline46mondego>         html+=      <doubleQuotes46><ul><li></li><ul><doubleQuotes46>;<newline46mondego>         html+=   <doubleQuotes46><li class='pro pic soldOut' status='-1' ><doubleQuotes46>;<newline46mondego>         html+=      <doubleQuotes46><ul><li></li><ul><doubleQuotes46>;<newline46mondego><newline46mondego>         Document doc = Jsoup.parse(html);<newline46mondego>         Elements elems = doc.select(<doubleQuotes46>[class^=pro pic]<doubleQuotes46>);<newline46mondego><newline46mondego>        System.out.println(elems.size());<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3750splitHere46","9498656splitHere46","Output = 2"
"3751splitHere46","9498656splitHere46","class"
"3752splitHere46","9498656splitHere46","pro pic"
"3753splitHere46","9498672splitHere46","String path = <doubleQuotes46>/mnt/sdcard/dd<doubleQuotes46>;<newline46mondego><newline46mondego> File fileDir = new File( path );<newline46mondego><newline46mondego> if(!fileDir.exists() || !fileDir.isDirectory())<newline46mondego> {<newline46mondego>     return;<newline46mondego> }<newline46mondego><newline46mondego> String[] files = fileDir.list(); <newline46mondego><newline46mondego> for ( int i = 0 ; i < files.length ; i++  )<newline46mondego> { <newline46mondego>       files[i] = path + <doubleQuotes46>/<doubleQuotes46> +  files[i];<newline46mondego> }<newline46mondego>"
"3754splitHere46","9498684splitHere46","mPullParser.nextTag();<newline46mondego>mPullParser.require(XmlPullParser.START_TAG, null, tag);<newline46mondego>final String text = mPullParser.nextText();<newline46mondego>mPullParser.require(XmlPullParser.END_TAG, null, tag);<newline46mondego>"
"3755splitHere46","9498684splitHere46","org.xmlpull.v1.XmlPullParser"
"3756splitHere46","9498786splitHere46","SharedPreferences settings;<newline46mondego>settings = getSharedPreferences(<doubleQuotes46>PREF_NAME<doubleQuotes46>, Context.MODE_PRIVATE);<newline46mondego><newline46mondego>//get the sharepref<newline46mondego>int id = settings.getInt(<doubleQuotes46>ID<doubleQuotes46>, 0);<newline46mondego><newline46mondego>//set the sharedpref<newline46mondego>Editor editor = settings.edit();<newline46mondego>editor.putInt(<doubleQuotes46>ID<doubleQuotes46>, <doubleQuotes46>1<doubleQuotes46>);<newline46mondego>editor.commit();<newline46mondego>"
"3757splitHere46","9498888splitHere46","JPanel"
"3758splitHere46","9498888splitHere46","public class GraphPanel extends JPanel{<newline46mondego>    //static constants for defining the size and positioning of the graph on canvas<newline46mondego>    //Ignore the values I chose, they were completely random :p<newline46mondego>    private static final int X_AXIS_LENGTH = 1000;<newline46mondego>    private static final int Y_AXIS_LENGTH = 500;<newline46mondego><newline46mondego>    private static final int X_AXIS_OFFEST = 50;<newline46mondego>    private static final int Y_AXIS_OFFSET = 50;<newline46mondego>...<newline46mondego>"
"3759splitHere46","9498888splitHere46","paintComponent"
"3760splitHere46","9498888splitHere46","...<newline46mondego>@Override<newline46mondego>public void paintComponent(Graphics g){<newline46mondego>    int x, y;<newline46mondego>    int prevX, prevY;<newline46mondego>    int maxX, maxY;<newline46mondego>    ...<newline46mondego>    //retrieve values from your model for the declared variables<newline46mondego>    ...<newline46mondego>    //calculate the coords of your line on the canvas<newline46mondego>    int xPos = ((x / maxX) * X_AXIS_LENGTH) + X_AXIS_OFFSET;<newline46mondego>    ...<newline46mondego>    //do the same for y, prevX, prevY and then you can use g.drawLine<newline46mondego>}<newline46mondego>...<newline46mondego>"
"3761splitHere46","9498888splitHere46","maxX"
"3762splitHere46","9498888splitHere46","maxY"
"3763splitHere46","9498888splitHere46","x"
"3764splitHere46","9498888splitHere46","y"
"3765splitHere46","9498912splitHere46","Add n minutes, n =               Add<newline46mondego>       1                      60,000<newline46mondego>      15                     900,000<newline46mondego>      30                   1,800,000<newline46mondego>      45                   2,700,000<newline46mondego>"
"3766splitHere46","9498912splitHere46","currentTimeMillis()"
"3767splitHere46","9498912splitHere46","int"
"3768splitHere46","9498912splitHere46","long"
"3769splitHere46","9499024splitHere46","<doubleQuotes46>T(-?[0-9]+)<doubleQuotes46><newline46mondego>"
"3770splitHere46","9499024splitHere46","<doubleQuotes46>*<doubleQuotes46>"
"3771splitHere46","9499024splitHere46","<doubleQuotes46>+<doubleQuotes46>"
"3772splitHere46","9499024splitHere46","<doubleQuotes46><doubleQuotes46>"
"3773splitHere46","9499186splitHere46","equals"
"3774splitHere46","9499186splitHere46","hashCode"
"3775splitHere46","9499233splitHere46","public static BufferedImage getBufferedImage(Image img) {<newline46mondego>        if (img == null) return null;<newline46mondego>        int w = img.getWidth(null);<newline46mondego>        int h = img.getHeight(null);<newline46mondego>        // draw original image to thumbnail image object and<newline46mondego>        // scale it to the new size on-the-fly<newline46mondego>        BufferedImage bufimg = new BufferedImage(w, h, BufferedImage.TYPE_INT_RGB);<newline46mondego>        Graphics2D g2 = bufimg.createGraphics();<newline46mondego>        g2.setRenderingHint(RenderingHints.KEY_INTERPOLATION, RenderingHints.VALUE_INTERPOLATION_BILINEAR);<newline46mondego>        g2.drawImage(img, 0, 0, w, h, null);<newline46mondego>        g2.dispose();<newline46mondego>        return bufimg;<newline46mondego>    }<newline46mondego>"
"3776splitHere46","9499233splitHere46","Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();<newline46mondego>//Get data from clipboard and assign it to an image.<newline46mondego>//clipboard.getData() returns an object, so we need to cast it to a BufferdImage.<newline46mondego>BufferedImage image = (BufferedImage) clipboard.getData(DataFlavor.imageFlavor);<newline46mondego><newline46mondego>if (isMac()) {<newline46mondego>    image = getBufferedImage(image);<newline46mondego>}<newline46mondego>"
"3777splitHere46","9499264splitHere46","image_path.substring(image_path.lastIndexOf(<doubleQuotes46>/img<doubleQuotes46>)+4, image_path.length-4);<newline46mondego>"
"3778splitHere46","9499265splitHere46","public void myMethod() throws ExceptionType1, ExceptionType2 {<newline46mondego>    // Some code here which can throw exceptions<newline46mondego>}<newline46mondego>"
"3779splitHere46","9499265splitHere46","public void myMethod() throws ExceptionType1, ExceptionType2 {<newline46mondego>    try {<newline46mondego>        // Some code here which can throw exceptions<newline46mondego>    } catch (ExceptionType1 e) {<newline46mondego>        log(e);<newline46mondego>        throw e;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3780splitHere46","9499265splitHere46","ExceptionType2"
"3781splitHere46","9499265splitHere46","ExceptionType1"
"3782splitHere46","9499446splitHere46","int"
"3783splitHere46","9499446splitHere46","String"
"3784splitHere46","9499446splitHere46","substring()"
"3785splitHere46","9499446splitHere46","Integer.parseInt(string, 16)"
"3786splitHere46","9499501splitHere46","deltaI = (excess) * ((maxI - prefI) / (maxAll - prefAll)) <newline46mondego>"
"3787splitHere46","9499501splitHere46","// start out with a reasonable pref size, f.i. from a prototype or <newline46mondego>// measuring the actual cell content (both supported by JXTable)<newline46mondego>forEachColumn<newline46mondego>    column.setPreferredWidth(....);<newline46mondego><newline46mondego>// then configure the maxWidth proportionally <newline46mondego>private float[] cwidth = { 0.1f, 0.3f, 0.3f, 0.2f, 0.1f };<newline46mondego>forEachColumn<newline46mondego>    int max = ((int) (1000f * cwidth[columnExt.getModelIndex()]));<newline46mondego>    columnExt.setMaxWidth(max);<newline46mondego>"
"3788splitHere46","9499540splitHere46","{<doubleQuotes46>parents<doubleQuotes46>:[<newline46mondego>    {<doubleQuotes46>parent<doubleQuotes46>:{<newline46mondego>            <doubleQuotes46>id<doubleQuotes46>:1,<newline46mondego>            <doubleQuotes46>name<doubleQuotes46>:<doubleQuotes46>Sam<doubleQuotes46>,<newline46mondego>            <doubleQuotes46>childs<doubleQuotes46>:[<newline46mondego>                {<newline46mondego>                    <doubleQuotes46>child<doubleQuotes46>:{<newline46mondego>                        <doubleQuotes46>id<doubleQuotes46>:1,<newline46mondego>                        <doubleQuotes46>name<doubleQuotes46>:<doubleQuotes46>Alice<doubleQuotes46>,<newline46mondego>                        <doubleQuotes46>books<doubleQuotes46>:[<newline46mondego>                            {<newline46mondego>                                <doubleQuotes46>book<doubleQuotes46>:{<newline46mondego>                                    <doubleQuotes46>id<doubleQuotes46>:1,<newline46mondego>                                    <doubleQuotes46>name<doubleQuotes46>:<doubleQuotes46>Alice in Wonderland<doubleQuotes46><newline46mondego>                                }<newline46mondego>                            }<newline46mondego>                        ]<newline46mondego>                    }<newline46mondego>                }<newline46mondego>            ]<newline46mondego>        } <newline46mondego><newline46mondego>    }    <newline46mondego>]}<newline46mondego>"
"3789splitHere46","9499540splitHere46","List"
"3790splitHere46","9499540splitHere46","parents"
"3791splitHere46","9499540splitHere46","Container"
"3792splitHere46","9499540splitHere46","parents"
"3793splitHere46","9499540splitHere46","parents"
"3794splitHere46","9499540splitHere46","List"
"3795splitHere46","9499540splitHere46","parent"
"3796splitHere46","9499540splitHere46","Parent"
"3797splitHere46","9499540splitHere46","parent"
"3798splitHere46","9499540splitHere46","Parent"
"3799splitHere46","9499540splitHere46","id"
"3800splitHere46","9499540splitHere46","name"
"3801splitHere46","9499540splitHere46","List"
"3802splitHere46","9499540splitHere46","childs"
"3803splitHere46","9499540splitHere46","child"
"3804splitHere46","9499540splitHere46","Child"
"3805splitHere46","9499540splitHere46","books"
"3806splitHere46","9499540splitHere46","{<doubleQuotes46>parents<doubleQuotes46>:[<newline46mondego>        {<newline46mondego>            <doubleQuotes46>id<doubleQuotes46>:1,<newline46mondego>            <doubleQuotes46>name<doubleQuotes46>:<doubleQuotes46>Sam<doubleQuotes46>,<newline46mondego>            <doubleQuotes46>childs<doubleQuotes46>:[<newline46mondego>                    {<newline46mondego>                        <doubleQuotes46>id<doubleQuotes46>:1,<newline46mondego>                        <doubleQuotes46>name<doubleQuotes46>:<doubleQuotes46>Alice<doubleQuotes46>,<newline46mondego>                        <doubleQuotes46>books<doubleQuotes46>:[<newline46mondego>                            {<newline46mondego>                                    <doubleQuotes46>id<doubleQuotes46>:1,<newline46mondego>                                    <doubleQuotes46>name<doubleQuotes46>:<doubleQuotes46>Alice in Wonderland<doubleQuotes46><newline46mondego>                            }<newline46mondego>                        ]<newline46mondego>                    }<newline46mondego><newline46mondego>            ]<newline46mondego>        }  <newline46mondego>]}<newline46mondego>"
"3807splitHere46","9499591splitHere46","List<String> args = new ArrayList<String>();<newline46mondego>    while (true) {<newline46mondego>        try {<newline46mondego>            args.add(processFile(i++));<newline46mondego>        }<newline46mondego>        catch (Exception e) {<newline46mondego>            // your code<newline46mondego>        }<newline46mondego>    }<newline46mondego>    String[] array = args.toArray(new String[0]);<newline46mondego>"
"3808splitHere46","9499597splitHere46","Arrays.equals()"
"3809splitHere46","9499597splitHere46","System.out.println(Arrays.equals(aa, bb));<newline46mondego>"
"3810splitHere46","9499597splitHere46","Arrays.deepEquals"
"3811splitHere46","9499665splitHere46","ConnectionFactory factory = getJMSConnectionFactory();<newline46mondego>   Connection connection = factory.createConnection();<newline46mondego>   Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);<newline46mondego>   Queue queue = session.createQueue(<doubleQuotes46>MyQueue<doubleQuotes46>);<newline46mondego>   MessageProducer producer = session.createProducer(queue);<newline46mondego>   connection.start();<newline46mondego>   Message message = session.createTextMessage(<doubleQuotes46>hello world!<doubleQuotes46>);<newline46mondego>   producer.sendMessage(message);<newline46mondego>"
"3812splitHere46","9499665splitHere46","ConnectionFactory factory = getJMSConnectionFactory();<newline46mondego>   Connection connection = factory.createConnection();<newline46mondego>   Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);<newline46mondego>   Queue queue = session.createQueue(<doubleQuotes46>MyQueue<doubleQuotes46>);<newline46mondego>   MessageConsumer consumer = session.createConsumer(queue);<newline46mondego>   connection.start();<newline46mondego>   Message message = consumer.receive();<newline46mondego>"
"3813splitHere46","9499694splitHere46","listUpload.join();<newline46mondego>storeUpload.join();<newline46mondego>itemUpload.join();<newline46mondego>// <BLOCK1><newline46mondego>"
"3814splitHere46","9499768splitHere46","try{<newline46mondego><newline46mondego>  boolean success = new File(<doubleQuotes46>data/data/com.sample/aplications<doubleQuotes46>).mkdir();<newline46mondego>  if (success)<newline46mondego>    // directory created<newline46mondego><newline46mondego>}catch (Expception e)<newline46mondego>...<newline46mondego>"
"3815splitHere46","9499961splitHere46","@Context HttpServletRequest request"
"3816splitHere46","9499961splitHere46","request.getRemoteAddr()"
"3817splitHere46","9499971splitHere46","getInstance(colTypeL)"
"3818splitHere46","9499971splitHere46","Extractor<L>"
"3819splitHere46","9499971splitHere46","@SuppressWarnings(<doubleQuotes46>unchecked<doubleQuotes46>)"
"3820splitHere46","9500088splitHere46","JComponent"
"3821splitHere46","9500140splitHere46","URL url = new URL(<doubleQuotes46>http://some.url<doubleQuotes46>);<newline46mondego>    int responseCode = -1;<newline46mondego>    while (responseCode != 200) {<newline46mondego>        HttpURLConnection conn = (HttpURLConnection) url.openConnection();<newline46mondego>        responseCode = conn.getResponseCode();<newline46mondego>        if (responseCode > 299 && responseCode < 400) {<newline46mondego>            url = new URL(conn.getHeaderField(<doubleQuotes46>Location<doubleQuotes46>));<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"3822splitHere46","9500253splitHere46","@Service<newline46mondego>public class RuntimeObjectFactoryImpl implements RuntimeObjectFactory {<newline46mondego>    private final CustomObjectTypeA oA;<newline46mondego>    private final CustomObjectTypeB oB;<newline46mondego><newline46mondego>    @Autowired<newline46mondego>    public RuntimeObjectFactoryImpl(final CustomObjectTypeA oA, final CustomObjectTypeB oB) {<newline46mondego>        this.oA = oA;<newline46mondego>        this.oB = oB;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public RuntimeObject get(CustomObjectTypeC oC) {<newline46mondego>        return new RuntimeObject(oA, oB, oC);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3823splitHere46","9500253splitHere46","RuntimeObject o = runtimeObjectFactory.get(new CustomObjectTypeC(...));<newline46mondego>"
"3824splitHere46","9500304splitHere46","mystring"
"3825splitHere46","9500304splitHere46","mystring.length"
"3826splitHere46","9500304splitHere46","mystring[5]"
"3827splitHere46","9500304splitHere46","if (mystring.length >= 6) { ... }<newline46mondego>"
"3828splitHere46","9500339splitHere46","log4j.logger.log1=<yourLogLevel>,log1<newline46mondego>"
"3829splitHere46","9500339splitHere46","stdout"
"3830splitHere46","9500339splitHere46","logfile"
"3831splitHere46","9500380splitHere46","Iterator<Integer>"
"3832splitHere46","9500380splitHere46","implements Iterator<Integer>"
"3833splitHere46","9500380splitHere46","foo"
"3834splitHere46","9500380splitHere46","public class Foo implements Iterator<Integer> {<newline46mondego>   Iterator<Integer> iterator;<newline46mondego>}<newline46mondego>"
"3835splitHere46","9500380splitHere46","public class Foo {<newline46mondego>   Iterator<Integer> iterator;<newline46mondego><newline46mondego>   public boolean hasNext() { return iterator.hasNext(); }<newline46mondego>   public Integer next() { return iterator.next(); }<newline46mondego>   public void remove() { iterator.remove(); }<newline46mondego>}<newline46mondego>"
"3836splitHere46","9500409splitHere46","Pattern.UNICODE_CHARACTER_CLASS"
"3837splitHere46","9500409splitHere46","String s = <doubleQuotes46>MÃ¼ller<doubleQuotes46>;<newline46mondego><newline46mondego>Pattern p = Pattern.compile(<doubleQuotes46>^\\w+$<doubleQuotes46>, Pattern.UNICODE_CHARACTER_CLASS);<newline46mondego>Matcher m = p.matcher(s);<newline46mondego>if (m.find()) {<newline46mondego>    System.out.println(m.group());<newline46mondego>} else {<newline46mondego>    System.out.println(<doubleQuotes46>not found<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"3838splitHere46","9500409splitHere46","Pattern.UNICODE_CHARACTER_CLASS"
"3839splitHere46","9500415splitHere46","mat1"
"3840splitHere46","9500415splitHere46","List<?> matrices = new ArrayList<?>();<newline46mondego>while ((smaLine = reader.readLine()) != null)<newline46mondego>{<newline46mondego>    float[][] mat = new float[MATRIX_ROWS][MATRIX_COLUMNS];<newline46mondego>    String[] values = smaLine.split(<doubleQuotes46>, <doubleQuotes46>);<newline46mondego>    for(int i = 0; i < values.length; i++)<newline46mondego>    {<newline46mondego>        float[] testC = float(split(values[i], <doubleQuotes46> <doubleQuotes46>));<newline46mondego>        for (int j = 0; j < testC.length; j++)<newline46mondego>        {<newline46mondego>            mat[j][i] = testC[j];<newline46mondego>        }<newline46mondego>    }<newline46mondego>    matrices.add(mat);<newline46mondego>    x = x+1;<newline46mondego>}<newline46mondego>"
"3841splitHere46","9500415splitHere46","x"
"3842splitHere46","9500463splitHere46","SoapObject soapObject = envelope.getResponse();<newline46mondego>for (int i = 0; i < soapObject.getPropertyCount(); i++) {<newline46mondego>        SoapObject resource = (SoapObject) response.getProperty(i);<newline46mondego>        String uri = resource.getAttribute(<doubleQuotes46>uri<doubleQuotes46>).toString();<newline46mondego>        String mimeType = resource.getAttribute(<doubleQuotes46>mimeType<doubleQuotes46>).toString();<newline46mondego>        String size = resource.getAttribute(<doubleQuotes46>size<doubleQuotes46>).toString();<newline46mondego>        String localURI = resource.getAttribute(<doubleQuotes46>localURI<doubleQuotes46>).toString();<newline46mondego>        //do stuff<newline46mondego>}    <newline46mondego>"
"3843splitHere46","9500463splitHere46","<resources xmlns=<doubleQuotes46>http://www.example.com/<doubleQuotes46>><newline46mondego>    <resource mimeType=<doubleQuotes46>text/xml<doubleQuotes46> size=<doubleQuotes46>123456<doubleQuotes46> uri=<doubleQuotes46>https://example.com/content/get.php?a123891<doubleQuotes46> localURI=<doubleQuotes46>package.opf<doubleQuotes46>/><newline46mondego>    <resource mimeType=<doubleQuotes46>application/x-dtbncx+xml<doubleQuotes46> size=<doubleQuotes46>123456<doubleQuotes46>  localURI=<doubleQuotes46>nav.ncx<doubleQuotes46>/><newline46mondego></resources><newline46mondego>"
"3844splitHere46","9500546splitHere46","mvn -h"
"3845splitHere46","9500555splitHere46","InetAddress.getByName"
"3846splitHere46","9500555splitHere46","InetAddress.getByName"
"3847splitHere46","9500555splitHere46","nslookup www.google.com"
"3848splitHere46","9500679splitHere46","Class<?>"
"3849splitHere46","9500679splitHere46","Class"
"3850splitHere46","9500679splitHere46","x"
"3851splitHere46","9500679splitHere46","s.methodA(x)"
"3852splitHere46","9500679splitHere46","((BaseClass)s).methodA(x)<newline46mondego>"
"3853splitHere46","9500679splitHere46","x"
"3854splitHere46","9500679splitHere46","Class"
"3855splitHere46","9500679splitHere46","Class<?>"
"3856splitHere46","9500679splitHere46","methodA"
"3857splitHere46","9500679splitHere46","SubClass"
"3858splitHere46","9500679splitHere46","methodA"
"3859splitHere46","9500679splitHere46","BaseClass"
"3860splitHere46","9500775splitHere46","l.setIcon('lena.png');"
"3861splitHere46","9500775splitHere46","setIcon()"
"3862splitHere46","9500775splitHere46","ImageIcon"
"3863splitHere46","9500775splitHere46","ico = ImageIcon('croco.png');<newline46mondego>l.setIcon(ico);<newline46mondego>"
"3864splitHere46","9500775splitHere46","croco.png"
"3865splitHere46","9500932splitHere46","SIZE"
"3866splitHere46","9500932splitHere46","functions_returning_numerics::=<newline46mondego>    SIZE(collection_valued_path_expression)<newline46mondego><newline46mondego>collection_valued_path_expression ::=<newline46mondego>    general_identification_variable.{single_valued_object_field.}*collection_valued_field<newline46mondego>"
"3867splitHere46","9500932splitHere46","SIZE"
"3868splitHere46","9500932splitHere46","SELECT NEW de.poyry.pqgenerator.view.PqListItem(<newline46mondego> pq.id,<newline46mondego> pq.name,<newline46mondego> pq.submissionDate,<newline46mondego> pe.firstName,<newline46mondego> pe.lastName,<newline46mondego> SIZE(pq.partnerships))<newline46mondego>FROM Prequalification pq<newline46mondego> JOIN pq.user us<newline46mondego> JOIN us.person pe<newline46mondego>GROUP BY pq.id, pq.name, pq.submissionDate, pe.firstName, pe.lastName<newline46mondego>"
"3869splitHere46","9500932splitHere46","pa.company"
"3870splitHere46","9500932splitHere46","pq.partnerships"
"3871splitHere46","9500932splitHere46","GROUP BY"
"3872splitHere46","9500932splitHere46","SELECT"
"3873splitHere46","9500932splitHere46","GROUP BY"
"3874splitHere46","9500932splitHere46","SELECT"
"3875splitHere46","9500932splitHere46","GROUP BY"
"3876splitHere46","9501005splitHere46","<array name=<doubleQuotes46>arrind<doubleQuotes46>><newline46mondego>    <item>@array/id1</item><newline46mondego>    <item>@array/id2</item><newline46mondego>    <item>@array/id3</item><newline46mondego></array><newline46mondego><newline46mondego> <string-array name=<doubleQuotes46>id1<doubleQuotes46>><newline46mondego>    <item>...</item><newline46mondego>    <item>....</item><newline46mondego>    <item>...</item><newline46mondego></string-array><newline46mondego><newline46mondego><string-array name=<doubleQuotes46>id2<doubleQuotes46>><newline46mondego>    ...<newline46mondego></string-array><newline46mondego><newline46mondego>...<newline46mondego>"
"3877splitHere46","9501005splitHere46","Resources res=getResources();<newline46mondego>TypedArray index=res.obtainTypedArray(R.array.arrind); //call the index array<newline46mondego><newline46mondego>    for (int i = 0; i < n; i++) {<newline46mondego>        int id=index.getResourceId(i,0); //get the index<newline46mondego>        if (id != 0){<newline46mondego>            String[] handle=new String[n];<newline46mondego>            handle=res.getStringArray(id); //use the index to get the actual array<newline46mondego>            String a=handle[0]; //Access items in your XML array<newline46mondego>            String b=handle[1];<newline46mondego>            c=...<newline46mondego><newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"3878splitHere46","9501026splitHere46","//js<newline46mondego>var mySubmitData ='{<doubleQuotes46>myField<doubleQuotes46>:<doubleQuotes46>myFieldValue<doubleQuotes46>, <doubleQuotes46>secondField<doubleQuotes46>:<doubleQuotes46>secondFieldValue<doubleQuotes46>}';<newline46mondego>//dto<newline46mondego>public class MyDTO implements Serializable {<newline46mondego><newline46mondego>  private String myField;<newline46mondego><newline46mondego>  private String secondField;<newline46mondego><newline46mondego>  MyDTO() {} //important<newline46mondego><newline46mondego>  public void setMyField() { ...}<newline46mondego><newline46mondego>  public void setSecondField() { ... }<newline46mondego>}<newline46mondego>//web resource<newline46mondego>    public @ResponseBody MyDTO saveDTO(@Valid final MyDTO myDTO,BindingResult result, Model model){<newline46mondego>     System.out.println(myDTO.getMyField + <doubleQuotes46>  <doubleQuotes46> + myDTO.getSecondField;<newline46mondego>      return  myDTO;<newline46mondego>      //return new MyDTO(); //it's empy object if you don't have default values<newline46mondego>    }<newline46mondego>"
"3879splitHere46","9501123splitHere46","CookieSpec"
"3880splitHere46","9501123splitHere46","CookieSpec"
"3881splitHere46","9501123splitHere46","null"
"3882splitHere46","9501123splitHere46","expires"
"3883splitHere46","9501123splitHere46","class LenientCookieSpec extends BrowserCompatSpec {<newline46mondego>    public LenientCookieSpec() {<newline46mondego>        super();<newline46mondego>        registerAttribHandler(ClientCookie.EXPIRES_ATTR, new BasicExpiresHandler(DATE_PATTERNS) {<newline46mondego>            @Override public void parse(SetCookie cookie, String value) throws MalformedCookieException {<newline46mondego>                if (TextUtils.isEmpty(value)) {<newline46mondego>                    // You should set whatever you want in cookie<newline46mondego>                    cookie.setExpiryDate(null);<newline46mondego>                } else {<newline46mondego>                    super.parse(cookie, value);<newline46mondego>                }<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3884splitHere46","9501123splitHere46","CookieSpec"
"3885splitHere46","9501123splitHere46","DefaultHttpClient client = new DefaultHttpClient();<newline46mondego>client.getCookieSpecs().register(<doubleQuotes46>lenient<doubleQuotes46>, new CookieSpecFactory() {<newline46mondego>        public CookieSpec newInstance(HttpParams params) {<newline46mondego>            return new LenientCookieSpec();<newline46mondego>        }<newline46mondego>    });<newline46mondego>HttpClientParams.setCookiePolicy(client.getParams(), <doubleQuotes46>lenient<doubleQuotes46>);<newline46mondego>"
"3886splitHere46","9501124splitHere46","Command"
"3887splitHere46","9501124splitHere46","setBackCommand"
"3888splitHere46","9501124splitHere46","actionPerformed(ActionEvent)"
"3889splitHere46","9501174splitHere46","form.registerAnimated()"
"3890splitHere46","9501297splitHere46","@Override<newline46mondego>public Object onRetainNonConfigurationInstance() <newline46mondego>{<newline46mondego>  if (myObject != null) // Check that the object exists<newline46mondego>      return(myObject);<newline46mondego>  return super.onRetainNonConfigurationInstance();<newline46mondego>}<newline46mondego>"
"3891splitHere46","9501297splitHere46","if (getLastNonConfigurationInstance() != null)<newline46mondego>    {<newline46mondego>      table = (Table)getLastNonConfigurationInstance();<newline46mondego>"
"3892splitHere46","9501323splitHere46","&>>"
"3893splitHere46","9501323splitHere46",">>"
"3894splitHere46","9501382splitHere46","android.sax.StartElementListener"
"3895splitHere46","9501403splitHere46","org.apache.commons.io.IOUtils.copy"
"3896splitHere46","9501403splitHere46","ByteArrayOutputStream baos = new ByteArrayOutputStream();<newline46mondego>org.apache.commons.io.IOUtils.copy(in, baos);<newline46mondego>byte[] bytes = baos.toByteArray();<newline46mondego><newline46mondego>// either<newline46mondego>while (needToReadAgain) {<newline46mondego>    ByteArrayInputStream bais = new ByteArrayInputStream(bytes);<newline46mondego>    read(bais);<newline46mondego>}<newline46mondego><newline46mondego>// or<newline46mondego>ByteArrayInputStream bais = new ByteArrayInputStream(bytes);<newline46mondego>while (needToReadAgain) {<newline46mondego>    bais.reset();<newline46mondego>    read(bais);<newline46mondego>}<newline46mondego>"
"3897splitHere46","9501433splitHere46","(\d+\. )<newline46mondego>"
"3898splitHere46","9501433splitHere46","\n$1<newline46mondego>"
"3899splitHere46","9501433splitHere46","(?=\d+\. )<newline46mondego>"
"3900splitHere46","9501433splitHere46","\n<newline46mondego>"
"3901splitHere46","9501469splitHere46","\PL<newline46mondego>"
"3902splitHere46","9501469splitHere46","\PL"
"3903splitHere46","9501469splitHere46","\pL"
"3904splitHere46","9501469splitHere46","[^\pl\pN]<newline46mondego>"
"3905splitHere46","9501484splitHere46","@SQLInsert(sql = <doubleQuotes46>INSERT INTO battle_log (date_created, some_date, version) VALUES (?,?,?)<doubleQuotes46>, check = ResultCheckStyle.NONE)<newline46mondego>"
"3906splitHere46","9501484splitHere46","ID"
"3907splitHere46","9501564splitHere46","String randomPhrase = <newline46mondego>    parser.parseExpression(<doubleQuotes46>random number is #{T(java.lang.Math).random()}<doubleQuotes46>, <newline46mondego>                      new TemplateParserContext()).getValue(String.class);<newline46mondego><newline46mondego>// evaluates to <doubleQuotes46>random number is 0.7038186818312008<doubleQuotes46><newline46mondego>"
"3908splitHere46","9501741splitHere46","$('select[name*=<doubleQuotes46>editType<doubleQuotes46>]').each(function (i) { <newline46mondego><newline46mondego><newline46mondego>        }); <newline46mondego>"
"3909splitHere46","9501831splitHere46","FileNameExtensionFilter"
"3910splitHere46","9501890splitHere46","WindowAdapter"
"3911splitHere46","9501890splitHere46","windowClosing(WindowEvent e)"
"3912splitHere46","9501919splitHere46","Byte.parseByte"
"3913splitHere46","9501919splitHere46","<doubleQuotes46>10001011<doubleQuotes46>"
"3914splitHere46","9501919splitHere46","Integer.parseInt"
"3915splitHere46","9501919splitHere46","else return (byte) Integer.parseInt((<doubleQuotes46>1<doubleQuotes46>+s.substring(1)),2);<newline46mondego>"
"3916splitHere46","9501961splitHere46","@DatabaseField(persisterClass = MyDatePersister.class)<newline46mondego>Date birthDate;<newline46mondego>"
"3917splitHere46","9501961splitHere46","public class MyDatePersister extends com.j256.ormlite.field.types.BaseDataType {<newline46mondego>    private static final MyDatePersister singleTon = new MyDatePersister();<newline46mondego>    @SuppressWarnings(<doubleQuotes46>deprecation<doubleQuotes46>)<newline46mondego>    private static final Timestamp ZERO_TIMESTAMP = new Timestamp(0, 0, 0, 0, 0, 0, 0);<newline46mondego><newline46mondego>    private MyDatePersister() {<newline46mondego>        super(SqlType.DATE, new Class<?>[] { Date.class });<newline46mondego>    }<newline46mondego><newline46mondego>    public static MyDatePersister getSingleton() {<newline46mondego>        return singleTon;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Object resultToSqlArg(FieldType fieldType, DatabaseResults results,<newline46mondego>            int columnPos) throws SQLException {<newline46mondego>        Timestamp timestamp = results.getTimestamp(columnPos);<newline46mondego>        if (timestamp == null || ZERO_TIMESTAMP.equals(timestamp)) {<newline46mondego>            return null;<newline46mondego>        } else {<newline46mondego>            return timestamp;<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3918splitHere46","9501964splitHere46","BigInteger"
"3919splitHere46","9501964splitHere46","String"
"3920splitHere46","9501964splitHere46","// test string<newline46mondego>String text = <doubleQuotes46>Hello world!<doubleQuotes46>;<newline46mondego>System.out.println(<doubleQuotes46>Test string = <doubleQuotes46> + text);<newline46mondego><newline46mondego>// convert to big integer<newline46mondego>BigInteger bigInt = new BigInteger(text.getBytes());<newline46mondego>System.out.println(bigInt.toString());<newline46mondego><newline46mondego>// convert back<newline46mondego>String textBack = new String(bigInt.toByteArray());<newline46mondego>System.out.println(<doubleQuotes46>And back = <doubleQuotes46> + textBack);<newline46mondego>"
"3921splitHere46","9501964splitHere46","BigInteger"
"3922splitHere46","9502224splitHere46","select 1 from TABLE_NAME"
"3923splitHere46","9502224splitHere46","SQLException"
"3924splitHere46","9502224splitHere46","SQLState"
"3925splitHere46","9502224splitHere46","errorCode"
"3926splitHere46","9502236splitHere46","javax.swing.Timer"
"3927splitHere46","9502236splitHere46","Random.nextInt(n+1)"
"3928splitHere46","9502236splitHere46","n"
"3929splitHere46","9502270splitHere46","'"
"3930splitHere46","9502399splitHere46","ClientPNames.VIRTUAL_HOST"
"3931splitHere46","9502399splitHere46","Host"
"3932splitHere46","9502399splitHere46","DefaultHttpClient client = new DefaultHttpClient();<newline46mondego>client.addRequestInterceptor(new HttpRequestInterceptor() {<newline46mondego><newline46mondego>    public void process(<newline46mondego>            final HttpRequest request, <newline46mondego>            final HttpContext context) throws HttpException, IOException {<newline46mondego>        request.setHeader(HTTP.TARGET_HOST, <doubleQuotes46>www.whatever.com<doubleQuotes46>);<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"3933splitHere46","9502657splitHere46","OutOfMemoryError"
"3934splitHere46","9502657splitHere46","DefaultHttpClient"
"3935splitHere46","9502657splitHere46","EntityUtils#toString"
"3936splitHere46","9502822splitHere46","clazz"
"3937splitHere46","9502822splitHere46","List<T>"
"3938splitHere46","9502822splitHere46","clazz"
"3939splitHere46","9502822splitHere46","List"
"3940splitHere46","9502822splitHere46","List<MyType> list = mapper.readValue(jsonSource, new TypeReference<List<MyType>>() { });<newline46mondego>"
"3941splitHere46","9502822splitHere46","TypeReference"
"3942splitHere46","9502822splitHere46","Class<?> elem = ...;<newline46mondego>List<?> list = mapper.readValue(jsonSource,<newline46mondego>  mapper.getTypeFactory().constructCollectionType(ArrayList.class, elem);<newline46mondego>"
"3943splitHere46","9502822splitHere46","LinkedHashMap"
"3944splitHere46","9502822splitHere46","java.lang.Object"
"3945splitHere46","9502822splitHere46","List.class"
"3946splitHere46","9502932splitHere46","HandlerClass"
"3947splitHere46","9502932splitHere46","JButton"
"3948splitHere46","9502932splitHere46","ActionListeners"
"3949splitHere46","9502932splitHere46","myJButton.addActionListener(new HandlerClass());<newline46mondego>"
"3950splitHere46","9502932splitHere46","public class Gui extends JFrame<newline46mondego>{<newline46mondego>    public Gui()<newline46mondego>    {<newline46mondego>        super(<doubleQuotes46>Physics Helper v0.1<doubleQuotes46>);<newline46mondego>        JButton b = new JButton(<doubleQuotes46>Press me!<doubleQuotes46>);<newline46mondego>        b.addActionListener(new HandlerClass());<newline46mondego>        add(b);<newline46mondego>        pack();<newline46mondego>        setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>    public void displayButton(String s)<newline46mondego>    {<newline46mondego>        System.out.println(s);<newline46mondego>    }<newline46mondego><newline46mondego>    private class HandlerClass implements ActionListener<newline46mondego>    {<newline46mondego>        public void actionPerformed(ActionEvent event)<newline46mondego>        {<newline46mondego>            displayButton(<doubleQuotes46>Press me!<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args)<newline46mondego>    {<newline46mondego>        new Gui();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3951splitHere46","9502978splitHere46","setUndecorated"
"3952splitHere46","9502978splitHere46","Frame"
"3953splitHere46","9502978splitHere46","WINDOW_CLOSING"
"3954splitHere46","9502978splitHere46","Action"
"3955splitHere46","9502978splitHere46","Keystroke"
"3956splitHere46","9503022splitHere46","Run -> Run Configurations..."
"3957splitHere46","9503022splitHere46","R Console"
"3958splitHere46","9503022splitHere46","rj"
"3959splitHere46","9503022splitHere46","install.packages(c(<doubleQuotes46>rj<doubleQuotes46>, <doubleQuotes46>rj.gd<doubleQuotes46>), repos=<doubleQuotes46>http://download.walware.de/rj-1.0<doubleQuotes46>)"
"3960splitHere46","9503022splitHere46","install.packages(c(<doubleQuotes46>rj<doubleQuotes46>, <doubleQuotes46>rj.gd<doubleQuotes46>), repos=<doubleQuotes46>http://download.walware.de/rj-1.1<doubleQuotes46>)"
"3961splitHere46","9503022splitHere46","install.packages(<doubleQuotes46>rj<doubleQuotes46>, repos=<doubleQuotes46>http://download.walware.de/rj-0.5<doubleQuotes46>)"
"3962splitHere46","9503149splitHere46","BufferedReader"
"3963splitHere46","9503149splitHere46","setWritable"
"3964splitHere46","9503149splitHere46","FileReader"
"3965splitHere46","9503239splitHere46","ojdbcX.jar"
"3966splitHere46","9503239splitHere46","String strConn = <doubleQuotes46>jdbc:oracle:thin:@oracle.staff.ittralee.ie:1521:orcl<doubleQuotes46>;<newline46mondego>String strUser = <doubleQuotes46>*<doubleQuotes46>;<newline46mondego>String strPassword = <doubleQuotes46>*<doubleQuotes46>;<newline46mondego>try {<newline46mondego>    Class.forName(<doubleQuotes46>oracle.jdbc.driver.OracleDriver<doubleQuotes46>);<newline46mondego>    Connection conn = DriverManager.getConnection(strConn, strUser, strPassword);<newline46mondego>    //code to execute commands...<newline46mondego>}<newline46mondego>"
"3967splitHere46","9503239splitHere46","Statement"
"3968splitHere46","9503239splitHere46","String query = <doubleQuotes46>INSERT INTO Student(STUDENTID, FNAME, LNAME, ADDRESS, <doubleQuotes46> +<newline46mondego>    <doubleQuotes46>PHONENO, OTHERDETAILS) VALUES (<doubleQuotes46> + <newline46mondego>    String.valueOf(s2.getStudentId()) +<newline46mondego>    <doubleQuotes46>, '<doubleQuotes46> + s2.getFName() +<newline46mondego>    <doubleQuotes46>', '<doubleQuotes46> + s2.getLName() +<newline46mondego>    <doubleQuotes46>', '<doubleQuotes46> + s2.getAddress() +<newline46mondego>    <doubleQuotes46>', '<doubleQuotes46> + s2.getPhoneNo() +<newline46mondego>    <doubleQuotes46>', '<doubleQuotes46> + s2.getOtherDetails()<newline46mondego>    + <doubleQuotes46>')<doubleQuotes46>;<newline46mondego><newline46mondego>Statement stmt = conn.createStatement();<newline46mondego>stmt.executeUpdate(sql); //this will execute the insert sentence<newline46mondego>"
"3969splitHere46","9503239splitHere46","Date"
"3970splitHere46","9503239splitHere46","DateFormat#format"
"3971splitHere46","9503239splitHere46","PreparedStatement"
"3972splitHere46","9503239splitHere46","String query = <doubleQuotes46>INSERT INTO Student(STUDENTID, FNAME, LNAME, ADDRESS, <doubleQuotes46> +<newline46mondego>    <doubleQuotes46>PHONENO, OTHERDETAILS) VALUES (?, ?, ?, ?, ?, ?)<doubleQuotes46>;<newline46mondego><newline46mondego>PreparedStatement pstmt = conn.prepareStatement(sql);<newline46mondego>pstmt.setInt(1, s2.getStudentId());<newline46mondego>pstmt.setString(2, s2.getFName());<newline46mondego>pstmt.setString(3, s2.getLName());<newline46mondego>pstmt.setString(4, s2.getAddress());<newline46mondego>pstmt.setString(5, s2.getPhoneNo());<newline46mondego>pstmt.setString(6, s2.getOtherDetails());<newline46mondego>pstmt.executeUpdate();<newline46mondego>"
"3973splitHere46","9503239splitHere46","CallableStatement"
"3974splitHere46","9503239splitHere46","String sql = <doubleQuotes46>{ call insertStudent(?, ?, ?, ?, ?, ?) }<doubleQuotes46>;<newline46mondego>CallableStatement cstmt = con.prepareCall(sql);<newline46mondego>cstmt.setInt(1, s2.getStudentId());<newline46mondego>cstmt.setString(2, s2.getFName());<newline46mondego>cstmt.setString(3, s2.getLName());<newline46mondego>cstmt.setString(4, s2.getAddress());<newline46mondego>cstmt.setString(5, s2.getPhoneNo());<newline46mondego>cstmt.setString(6, s2.getOtherDetails());<newline46mondego>cstmt.executeUpdate();<newline46mondego>"
"3975splitHere46","9503297splitHere46","Date"
"3976splitHere46","9503297splitHere46","Calendar"
"3977splitHere46","9503297splitHere46","public Date subtractYear() {<newline46mondego>  final Calendar c = new Calendar();<newline46mondego>  c.set(year, month, day); // set your class's <doubleQuotes46>current<doubleQuotes46> date<newline46mondego>  c.add(Calendar.YEAR, -1); // remove 1 year<newline46mondego>  return c.getTime(); // get the Date object back from the Calendar<newline46mondego>}<newline46mondego>"
"3978splitHere46","9503297splitHere46","try-catch"
"3979splitHere46","9503350splitHere46","List<XWPFTableCell> cell = rows.get(0).getTableCells();"
"3980splitHere46","9503350splitHere46","public List<XWPFTableCell> getTableCells(){<newline46mondego>    if(tableCells == null){<newline46mondego>        //Here it is created<newline46mondego>        List<XWPFTableCell> cells = new ArrayList<XWPFTableCell>();<newline46mondego>        for (CTTc tableCell : ctRow.getTcList()) {<newline46mondego>            cells.add(new XWPFTableCell(tableCell, this, table.getPart()));<newline46mondego>        }<newline46mondego>        this.tableCells = cells;<newline46mondego>    }<newline46mondego>    return tableCells;<newline46mondego>}<newline46mondego>"
"3981splitHere46","9503350splitHere46","CTTc"
"3982splitHere46","9503350splitHere46","public XWPFTableCell getTableCell(CTTc cell) {<newline46mondego>    for(int i=0; i<tableCells.size(); i++){<newline46mondego>        if(tableCells.get(i).getCTTc() == cell) return tableCells.get(i); <newline46mondego>    }<newline46mondego>    return null;<newline46mondego>}<newline46mondego>"
"3983splitHere46","9503350splitHere46","XWPFTableCell cell = <newline46mondego>    rows.getTableCell(rows.get(0).getTableCells().get(3).getCTTc());<newline46mondego>"
"3984splitHere46","9503362splitHere46","private static void iupdateQuery(int i, String dm, String wi) {<newline46mondego>...<newline46mondego>"
"3985splitHere46","9503679splitHere46","UnsatisfiedLinkError"
"3986splitHere46","9503679splitHere46","Runtime.loadLibrary"
"3987splitHere46","9503679splitHere46","native"
"3988splitHere46","9503679splitHere46","public void loadLibrary(String libname)<newline46mondego>"
"3989splitHere46","9503679splitHere46","Runtime.getRuntime()"
"3990splitHere46","9503679splitHere46","SecurityManager"
"3991splitHere46","9503679splitHere46","Runtime.loadLibrary"
"3992splitHere46","9503679splitHere46","System.loadLibrary"
"3993splitHere46","9503679splitHere46","chroot"
"3994splitHere46","9503805splitHere46","// Assuming that key and value were read from your file, and that<newline46mondego>// myMap is declared as <doubleQuotes46>Map<String, Double><doubleQuotes46><newline46mondego>if (myMap.containsKey (key)) {<newline46mondego>    double oldValue = myMap.get (key);<newline46mondego>    value += oldValue;<newline46mondego>}<newline46mondego><newline46mondego>myMap.put (key, value);<newline46mondego>"
"3995splitHere46","9503824splitHere46","Date"
"3996splitHere46","9503824splitHere46","Instant"
"3997splitHere46","9503824splitHere46","Date.toString()"
"3998splitHere46","9503824splitHere46","java.util.Date"
"3999splitHere46","9503824splitHere46","toString()"
"4000splitHere46","9503824splitHere46","DateTimeZone.UTC"
"4001splitHere46","9503885splitHere46","doc.insertString(doc.getEndPosition().getOffset(), <doubleQuotes46>test\n<doubleQuotes46>, null);<newline46mondego>doc.insertString(doc.getEndPosition().getOffset(), <doubleQuotes46>test\n<doubleQuotes46>, null);<newline46mondego>doc.insertString(doc.getEndPosition().getOffset(), <doubleQuotes46>test\n<doubleQuotes46>, null);<newline46mondego>doc.insertString(doc.getEndPosition().getOffset(), <doubleQuotes46>test\n<doubleQuotes46>, null);<newline46mondego>"
"4002splitHere46","9503885splitHere46","jScrollPane1 = new javax.swing.JScrollPane();<newline46mondego>    jEditorPane1 = new javax.swing.JEditorPane();<newline46mondego><newline46mondego>    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);<newline46mondego><newline46mondego>    jScrollPane1.setViewportView(jEditorPane1);<newline46mondego><newline46mondego>    getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);<newline46mondego><newline46mondego>    pack();<newline46mondego>"
"4003splitHere46","9503885splitHere46","doc.insertString(doc.getLength(), <doubleQuotes46>test\n<doubleQuotes46>, null);<newline46mondego>"
"4004splitHere46","9503963splitHere46","E/AndroidRuntime(3074): android.content.ActivityNotFoundException: Unable to find explicit activity class {com.gta5news.bananaphone/com.gta5news.bananaphone.logincheck}; have you declared this activity in your AndroidManifest.xml?<newline46mondego>"
"4005splitHere46","9503963splitHere46","<activity name=<doubleQuotes46>com.gta5news.bananaphone.logincheck<doubleQuotes46> /><newline46mondego>"
"4006splitHere46","9503988splitHere46","JMenuBar"
"4007splitHere46","9503988splitHere46","JPanel"
"4008splitHere46","9503988splitHere46","GradientPaint"
"4009splitHere46","9503988splitHere46","Gradient[]"
"4010splitHere46","9503988splitHere46","JButton's JComponents"
"4011splitHere46","9504034splitHere46","shellinput[0] = <doubleQuotes46>/system/xbin/dd if=/dev/zero of=<doubleQuotes46>;<newline46mondego>shellinput[1] = newvfspath;<newline46mondego>shellinput[2] = <doubleQuotes46>/gtj.img bs=1000000 count=<doubleQuotes46>;<newline46mondego>shellinput[3] = gtjsize;<newline46mondego>System.out<newline46mondego>        .println(<doubleQuotes46>Error Code (making new <doubleQuotes46><newline46mondego>                + newvfspath<newline46mondego>                + <doubleQuotes46>/gtj.img ) :<newline46mondego>            + errorstreamReader(shellinput)<doubleQuotes46><newline46mondego>private String errorstreamReader(String[] shellinput) {<newline46mondego>    InputStream inputstream = null;<newline46mondego>    String esrval = null;<newline46mondego>    System.out.println(<doubleQuotes46>Entering errorstreamReader<doubleQuotes46>);<newline46mondego>    //hack to prevent executing null<newline46mondego>    for (int i = 0; i <= 3; i++) {<newline46mondego>        if (shellinput[i] == null) {<newline46mondego>            shellinput[i] = <doubleQuotes46><doubleQuotes46>;<newline46mondego>        }<newline46mondego>    }<newline46mondego>    try {<newline46mondego>    System.out.println(<doubleQuotes46>Executing <doubleQuotes46> + shellinput[0]<newline46mondego>                + shellinput[1] + shellinput[2] + shellinput[3]);<newline46mondego>        inputstream = Runtime<newline46mondego>                .getRuntime()<newline46mondego>                .exec(shellinput[0]<newline46mondego>                + shellinput[1] + shellinput[2] + shellinput[3]).getErrorStream();// this fixed it, typo<newline46mondego>    } catch (IOException e) {<newline46mondego>        e.printStackTrace();<newline46mondego>    }<newline46mondego>    InputStreamReader inputstreamreader = null;<newline46mondego>    try {<newline46mondego>        inputstreamreader = new InputStreamReader(inputstream);<newline46mondego>    } catch (Exception e) {<newline46mondego>        // TODO Auto-generated catch block<newline46mondego>        e.printStackTrace();<newline46mondego>    }<newline46mondego>    try {<newline46mondego>        esrval = new BufferedReader(inputstreamreader).readLine();<newline46mondego>    } catch (IOException e1) {<newline46mondego>        e1.printStackTrace();<newline46mondego>    }<newline46mondego>    return esrval;<newline46mondego>}<newline46mondego>"
"4012splitHere46","9504042splitHere46","newInstance()"
"4013splitHere46","9504042splitHere46","java.lang.Class"
"4014splitHere46","9504042splitHere46","JFrame"
"4015splitHere46","9504042splitHere46","Class.newInstance()"
"4016splitHere46","9504042splitHere46","Class"
"4017splitHere46","9504042splitHere46","String theClassName = ...;<newline46mondego>Class clazz = Class.forName(theClassName);<newline46mondego>Object o = clazz.newInstance();<newline46mondego>"
"4018splitHere46","9504042splitHere46","Object"
"4019splitHere46","9504394splitHere46","intVariable1 + 1 % intVariable2;<newline46mondego>"
"4020splitHere46","9504394splitHere46","intVariable1 + (1 % intVariable2);<newline46mondego>"
"4021splitHere46","9504394splitHere46","9 + 1 % 10"
"4022splitHere46","9504394splitHere46","9 + (1 % 10)"
"4023splitHere46","9504394splitHere46","9 + 1 = 10"
"4024splitHere46","9504394splitHere46","%"
"4025splitHere46","9504394splitHere46","+"
"4026splitHere46","9504457splitHere46","javax.net.ssl.SSLHandshakeException"
"4027splitHere46","9504457splitHere46","KeyStore"
"4028splitHere46","9504574splitHere46","lstServers.setOnItemClickListener(new OnItemClickListener()<newline46mondego>    {<newline46mondego>        public  void onItemClick(AdapterView<?> parent, View view, int position, long id)<newline46mondego>        {<newline46mondego>            Beacon.activeServer = position;<newline46mondego>            Intent uploadIntent = new Intent(your_current_activty.this,ImageShareActivity.class);<newline46mondego>            uploadIntent.startActivity();<newline46mondego>        }<newline46mondego>    });<newline46mondego>"
"4029splitHere46","9504657splitHere46","ui-icon"
"4030splitHere46","9504657splitHere46","display: block"
"4031splitHere46","9504657splitHere46","<f:facet name=<doubleQuotes46>header<doubleQuotes46>><newline46mondego>  <h:panelGrid columns=<doubleQuotes46>2<doubleQuotes46>><newline46mondego>    <span class=<doubleQuotes46>ui-icon ui-icon-comment<doubleQuotes46> /><newline46mondego>    <h:outputText value=<doubleQuotes46>text<doubleQuotes46> /><newline46mondego>  </h:panelGrid><newline46mondego></f:facet><newline46mondego>"
"4032splitHere46","9504725splitHere46","while (rs.next()) {<newline46mondego>    String flatNo = rs.getString(<doubleQuotes46>Flat_No<doubleQuotes46>);<newline46mondego>    buffer += <doubleQuotes46><option value='<doubleQuotes46> + flatNo + <doubleQuotes46>'><doubleQuotes46> + flatNo + <doubleQuotes46></option><doubleQuotes46>;   <newline46mondego>}<newline46mondego>"
"4033splitHere46","9504819splitHere46","line = console.readLine();<newline46mondego>"
"4034splitHere46","9504819splitHere46","console"
"4035splitHere46","9504819splitHere46","start()"
"4036splitHere46","9504819splitHere46","public void start() throws IOException<newline46mondego>{  BufferedReader console = new BufferedReader(new InputStreamReader(System.in));<newline46mondego>"
"4037splitHere46","9504819splitHere46","console"
"4038splitHere46","9504819splitHere46","console"
"4039splitHere46","9504819splitHere46","public void start() throws IOException<newline46mondego>{  <newline46mondego>    console = new BufferedReader(new InputStreamReader(System.in));<newline46mondego>    ...<newline46mondego>"
"4040splitHere46","9504819splitHere46","catch(IOException ioe)<newline46mondego>{  System.out.println(<doubleQuotes46>Unexpected exception: <doubleQuotes46> + ioe.getMessage());<newline46mondego>}<newline46mondego>"
"4041splitHere46","9504819splitHere46","if (foo) {<newline46mondego>     // Do something<newline46mondego>}<newline46mondego>"
"4042splitHere46","9504819splitHere46","if (foo)<newline46mondego>{<newline46mondego>     // Do something<newline46mondego>}<newline46mondego>"
"4043splitHere46","9504835splitHere46","Expr"
"4044splitHere46","9504835splitHere46","Lit"
"4045splitHere46","9504835splitHere46","Add"
"4046splitHere46","9504835splitHere46","public abstract class Expr {<newline46mondego>    // So that you can't add more subclasses outside this block<newline46mondego>    private Expr() {}<newline46mondego><newline46mondego>    // Simulate pattern matching:<newline46mondego>    // (This CAN be done with instanceof, but that's ugly and not OO)<newline46mondego>    public boolean isLit() {<newline46mondego>        return false;<newline46mondego>    }<newline46mondego>    public boolean isAdd() {<newline46mondego>        return false;<newline46mondego>    }<newline46mondego>    public Lit asLit() {<newline46mondego>        throw new UnsupportedOperationException(<doubleQuotes46>This is not a Lit<doubleQuotes46>);<newline46mondego>    }<newline46mondego>    public Add asAdd() {<newline46mondego>        throw new UnsupportedOperationException(<doubleQuotes46>This is not an Add<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    public static class Lit extends Expr {<newline46mondego>        public final int n;<newline46mondego>        public Lit(int n) {<newline46mondego>            this.n = n;<newline46mondego>        }<newline46mondego>        @Override<newline46mondego>        public boolean isLit() {<newline46mondego>            return true;<newline46mondego>        }<newline46mondego>        @Override<newline46mondego>        public Lit asLit() {<newline46mondego>            return this;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public static class Add extends Expr {<newline46mondego>        public final Expr a, b;<newline46mondego>        public Lit(Expr a, Expr b) {<newline46mondego>            this.a = a;<newline46mondego>            this.b = b;<newline46mondego>        }<newline46mondego>        @Override<newline46mondego>        public boolean isAdd() {<newline46mondego>            return true;<newline46mondego>        }<newline46mondego>        @Override<newline46mondego>        public Add asAdd() {<newline46mondego>            return this;<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4047splitHere46","9504835splitHere46","showExpr"
"4048splitHere46","9504835splitHere46","public static String showExpr(final Expr expr) {<newline46mondego>    if(expr.isLit()) {<newline46mondego>        return Integer.toString(expr.asLit().n);<newline46mondego>    } else if(expr.isAdd()) {<newline46mondego>        return <doubleQuotes46>(<doubleQuotes46> + expr.asAdd().a + <doubleQuotes46>+<doubleQuotes46> + expr.asAdd().b + <doubleQuotes46>)<doubleQuotes46>;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4049splitHere46","9504835splitHere46","showExpr"
"4050splitHere46","9504835splitHere46","Expr"
"4051splitHere46","9504941splitHere46","import java.awt.*;<newline46mondego>import java.awt.event.MouseAdapter;<newline46mondego>import java.awt.event.MouseEvent;<newline46mondego>import java.lang.reflect.InvocationTargetException;<newline46mondego><newline46mondego>import javax.swing.*;<newline46mondego><newline46mondego>@SuppressWarnings(<doubleQuotes46>serial<doubleQuotes46>)<newline46mondego>public class GameApplet2 extends JApplet {<newline46mondego>   protected static final int APP_WIDTH = 1000;<newline46mondego>   protected static final int APP_HEIGHT = 900;<newline46mondego><newline46mondego>   @Override<newline46mondego>   public void init() {<newline46mondego>      try {<newline46mondego>         SwingUtilities.invokeAndWait(new Runnable() {<newline46mondego>            public void run() {<newline46mondego>               GameAppletPanel panel = new GameAppletPanel(GameApplet2.this);<newline46mondego>               getContentPane().add(panel);<newline46mondego>               panel.init(APP_WIDTH, APP_HEIGHT);<newline46mondego>               setSize(APP_WIDTH, APP_HEIGHT);<newline46mondego>            }<newline46mondego>         });<newline46mondego>      } catch (InterruptedException e) {<newline46mondego>         e.printStackTrace();<newline46mondego>      } catch (InvocationTargetException e) {<newline46mondego>         e.printStackTrace();<newline46mondego>      }<newline46mondego>   }<newline46mondego>}<newline46mondego><newline46mondego>@SuppressWarnings(<doubleQuotes46>serial<doubleQuotes46>)<newline46mondego>class GameAppletPanel extends JPanel {<newline46mondego>   Image image;<newline46mondego>   Point p = new Point(-100, -100);<newline46mondego>   private JApplet applet;<newline46mondego><newline46mondego>   public GameAppletPanel(JApplet applet) {<newline46mondego>      this.applet = applet;<newline46mondego>   }<newline46mondego><newline46mondego>   public void init() {<newline46mondego>      init(1000, 900);<newline46mondego>   }<newline46mondego><newline46mondego>   public void init(int x, int y) {<newline46mondego>      setSize(x, y);<newline46mondego>      image = createImage(x, y);<newline46mondego>      Graphics2D g = (Graphics2D) image.getGraphics();<newline46mondego>      g.setColor(Color.GREEN);<newline46mondego>      g.fillRect(0, 0, x, y);<newline46mondego>      g.dispose();<newline46mondego><newline46mondego>      System.out.println(g + <doubleQuotes46>, <doubleQuotes46> + (g != null));<newline46mondego>      MyMouseAdapter mmAdapter = new MyMouseAdapter();<newline46mondego>      addMouseListener(mmAdapter);<newline46mondego>      addMouseMotionListener(mmAdapter);<newline46mondego>   }<newline46mondego><newline46mondego>   @Override<newline46mondego>   protected void paintComponent(Graphics g) {<newline46mondego>      super.paintComponent(g);<newline46mondego>      g.drawImage(image, 0, 0, this);<newline46mondego>      g.setColor(Color.red);<newline46mondego>      g.fillRect(0, 0, 500, 500);<newline46mondego>   }<newline46mondego><newline46mondego>   private class MyMouseAdapter extends MouseAdapter {<newline46mondego><newline46mondego>      @Override<newline46mondego>      public void mouseClicked(MouseEvent e) {<newline46mondego>         System.out.println(e);<newline46mondego>      }<newline46mondego><newline46mondego>      @Override<newline46mondego>      public void mousePressed(MouseEvent e) {<newline46mondego>         p = e.getPoint();<newline46mondego>         repaint();<newline46mondego>      }<newline46mondego><newline46mondego>      @Override<newline46mondego>      public void mouseMoved(MouseEvent e) {<newline46mondego>         applet.showStatus(e.toString());<newline46mondego>         Graphics2D g2 = (Graphics2D) image.getGraphics();<newline46mondego>         g2.fillOval(e.getPoint().x - 5, e.getPoint().y - 5, 10, 10);<newline46mondego>         p = e.getPoint();<newline46mondego>         g2.dispose();<newline46mondego>         repaint();<newline46mondego>      }<newline46mondego>   }<newline46mondego><newline46mondego>}<newline46mondego>"
"4052splitHere46","9505190splitHere46","FileChannel fc = new FileInputStream(file).getChannel();<newline46mondego>MappedByteBuffer mbb = fc.map(FileChannel.MapMode.READ_ONLY, 0, (int) fc.size());<newline46mondego>"
"4053splitHere46","9505204splitHere46","Run menu -> Debug As -> Web Application<newline46mondego>"
"4054splitHere46","9505275splitHere46","long timeInMillis = <newline46mondego>SimpleDateFormat sdf = new SimpleDateFormat(<doubleQuotes46>HH:mm:ss.SSS<doubleQuotes46>);<newline46mondego>sdf.setTimeZone(TimeZone.getTimeZone(<doubleQuotes46>GMT<doubleQuotes46>));<newline46mondego>String text = sdf.format(new Date(timeInMillis));<newline46mondego>"
"4055splitHere46","9505275splitHere46","long timeInMillis = 3032;<newline46mondego>String text = String.format(<doubleQuotes46>%d:%02d:%02d.%03d<doubleQuotes46>, <newline46mondego>        timeInMillis / 3600000,<newline46mondego>        timeInMillis / 60000 % 60,<newline46mondego>        timeInMillis / 1000 % 60,<newline46mondego>        timeInMillis % 1000);<newline46mondego>System.out.println(text);<newline46mondego>"
"4056splitHere46","9505275splitHere46","0:00:03.032<newline46mondego>"
"4057splitHere46","9505322splitHere46","PrintStream"
"4058splitHere46","9505322splitHere46","Logger"
"4059splitHere46","9505414splitHere46","convertToInt"
"4060splitHere46","9505414splitHere46","class MyClass {<newline46mondego>    public MyClass(String string) {<newline46mondego>        this(ComplicatedTypeConverter.fromString(string));<newline46mondego>    }<newline46mondego><newline46mondego>    public MyClass(ComplicatedType myType) {<newline46mondego>        this.myType = myType;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class ComplicatedTypeConverter {<newline46mondego>    public static ComplicatedType fromString(String string) {<newline46mondego>        return something;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4061splitHere46","9505414splitHere46","this"
"4062splitHere46","9505414splitHere46","super();"
"4063splitHere46","9505419splitHere46","List e =  em.createNamedQuery(<doubleQuotes46>findbybez<doubleQuotes46>).setParameter(<doubleQuotes46>bez<doubleQuotes46>, name).getResultList();<newline46mondego>Weterstation w = new Weterstation();<newline46mondego><newline46mondego>if (e.get(0) != null) {               // <--- Here<newline46mondego>    w = (Weterstation) e.get(0);<newline46mondego>}<newline46mondego><newline46mondego>return w;<newline46mondego>"
"4064splitHere46","9505419splitHere46","0"
"4065splitHere46","9505419splitHere46","if (!e.isEmpty()) {<newline46mondego>    w = (Weterstation) e.get(0);<newline46mondego>}<newline46mondego>"
"4066splitHere46","9505419splitHere46","if (e.size() == 1) {<newline46mondego>    w = (Weterstation) e.get(0);<newline46mondego>}<newline46mondego>"
"4067splitHere46","9505419splitHere46","immediate=<doubleQuotes46>true<doubleQuotes46>"
"4068splitHere46","9505419splitHere46","null"
"4069splitHere46","9505419splitHere46","bezeichnung"
"4070splitHere46","9505419splitHere46","immediate=<doubleQuotes46>true<doubleQuotes46>"
"4071splitHere46","9505419splitHere46","<h:inputText id=<doubleQuotes46>bezeichnung<doubleQuotes46> ... immediate=<doubleQuotes46>true<doubleQuotes46> /><newline46mondego>"
"4072splitHere46","9505419splitHere46","<f:ajax>"
"4073splitHere46","9505419splitHere46","<h:commandButton value=<doubleQuotes46>SearchBez<doubleQuotes46>><newline46mondego>    <f:ajax execute=<doubleQuotes46>@this bezeichnung<doubleQuotes46> listener=<doubleQuotes46>#{wettercontroller.searchbez}<doubleQuotes46> render=<doubleQuotes46>@form<doubleQuotes46> /><newline46mondego></h:commandButton><newline46mondego>"
"4074splitHere46","9505844splitHere46","Vehicle"
"4075splitHere46","9505844splitHere46","Movable"
"4076splitHere46","9505844splitHere46","Movable"
"4077splitHere46","9505844splitHere46","Vehicle"
"4078splitHere46","9505844splitHere46","AbstractVehicle"
"4079splitHere46","9505844splitHere46","Vehicle"
"4080splitHere46","9505844splitHere46","Vehicle"
"4081splitHere46","9505844splitHere46","AbstractVehicle"
"4082splitHere46","9505896splitHere46","Play"
"4083splitHere46","9505896splitHere46","View"
"4084splitHere46","9505896splitHere46","onDraw()"
"4085splitHere46","9505896splitHere46","invalidate()"
"4086splitHere46","9505896splitHere46","onDraw()"
"4087splitHere46","9505896splitHere46","Thread"
"4088splitHere46","9505896splitHere46","SurfaceView"
"4089splitHere46","9505896splitHere46","Canvas"
"4090splitHere46","9505896splitHere46","View"
"4091splitHere46","9505917splitHere46","response.getWriter().write(result);<newline46mondego>"
"4092splitHere46","9505917splitHere46","<head><newline46mondego>    <script src=<doubleQuotes46>http://code.jquery.com/jquery-latest.min.js<doubleQuotes46>></script><newline46mondego>    <script><newline46mondego>        $(document).ready(function() {<newline46mondego>            $(<doubleQuotes46>#username<doubleQuotes46>).change(function() {<newline46mondego>                $.get(<doubleQuotes46>validateUsernameServlet<doubleQuotes46>, $(this).serialize(), function(data) {<newline46mondego>                    if (!data.valid) {<newline46mondego>                        $(<doubleQuotes46>#username_message<doubleQuotes46>).text(<doubleQuotes46>Duplicate username, choose another<doubleQuotes46>);<newline46mondego>                    }<newline46mondego>                });<newline46mondego>            });<newline46mondego>        });<newline46mondego>    </script><newline46mondego></head><newline46mondego><body><newline46mondego>    <form action=<doubleQuotes46>register<doubleQuotes46> method=<doubleQuotes46>post<doubleQuotes46>><newline46mondego>        <input type=<doubleQuotes46>text<doubleQuotes46> id=<doubleQuotes46>username<doubleQuotes46> name=<doubleQuotes46>username<doubleQuotes46> /><newline46mondego>        <span id=<doubleQuotes46>username_message<doubleQuotes46>></span><newline46mondego>        ...<newline46mondego>    </form><newline46mondego></body><newline46mondego>"
"4093splitHere46","9505917splitHere46","doGet()"
"4094splitHere46","9505917splitHere46","@Override<newline46mondego>protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {<newline46mondego>    String username = request.getParameter(<doubleQuotes46>username<doubleQuotes46>);<newline46mondego>    boolean valid = yourUserService.isValidUsername(username);<newline46mondego>    response.setContentType(<doubleQuotes46>application/json<doubleQuotes46>);<newline46mondego>    response.setCharacterEncoding(<doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>    response.getWriter().write(<doubleQuotes46>{\<doubleQuotes46>valid\<doubleQuotes46>:<doubleQuotes46> + valid + <doubleQuotes46>}<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"4095splitHere46","9506052splitHere46","<input type=<doubleQuotes46>submit<doubleQuotes46> name=<doubleQuotes46>action1<doubleQuotes46> value=<doubleQuotes46>Invoke action 1<doubleQuotes46> /><newline46mondego><input type=<doubleQuotes46>submit<doubleQuotes46> name=<doubleQuotes46>action2<doubleQuotes46> value=<doubleQuotes46>Invoke action 2<doubleQuotes46> /><newline46mondego><input type=<doubleQuotes46>submit<doubleQuotes46> name=<doubleQuotes46>action3<doubleQuotes46> value=<doubleQuotes46>Invoke action 3<doubleQuotes46> /><newline46mondego>"
"4096splitHere46","9506052splitHere46","if (request.getParameter(<doubleQuotes46>action1<doubleQuotes46>) != null) {<newline46mondego>    // Invoke action 1.<newline46mondego>}<newline46mondego>else if (request.getParameter(<doubleQuotes46>action2<doubleQuotes46>) != null) {<newline46mondego>    // Invoke action 2.<newline46mondego>}<newline46mondego>else if (request.getParameter(<doubleQuotes46>action3<doubleQuotes46>) != null) {<newline46mondego>    // Invoke action 3.<newline46mondego>}<newline46mondego>"
"4097splitHere46","9506096splitHere46","//add more items button<newline46mondego>    Button more = (Button) findViewById(R.id.button1);<newline46mondego>    more.setOnClickListener(new View.OnClickListener() {<newline46mondego>        @Override<newline46mondego>        public void onClick(View view){<newline46mondego>            player = txt1.getText().toString();<newline46mondego>            if (txt1.getText().toString().length() !=0){<newline46mondego>                playerList.add(player);<newline46mondego>                txt1.setText(<doubleQuotes46><doubleQuotes46>); <newline46mondego>            }<newline46mondego>            Toast.makeText(getBaseContext(), playerList + <doubleQuotes46> <doubleQuotes46>,  Toast.LENGTH_LONG).show();<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>    });<newline46mondego>"
"4098splitHere46","9506127splitHere46","portsMethod()"
"4099splitHere46","9506127splitHere46","SwingUtilities.invokeAndWait()"
"4100splitHere46","9506127splitHere46","sbPortReaderString"
"4101splitHere46","9506127splitHere46","portsMethod"
"4102splitHere46","9506127splitHere46","// accessed only from the EDT<newline46mondego>private List<MyPortListener> portListeners = new ArrayList<MyPortListener>();<newline46mondego><newline46mondego>public void addMyPortListener(MyPortListener listener) {<newline46mondego>    portListeners.add(listener);<newline46mondego>}<newline46mondego><newline46mondego>public void removeMyPortListener(MyPortListener listener) {<newline46mondego>    portListeners.remove(listener);<newline46mondego>}<newline46mondego><newline46mondego>... <newline46mondego><newline46mondego>    @Override<newline46mondego>    public void serialEvent(SerialPortEvent spe) {<newline46mondego>        ...<newline46mondego>        final String receivedString = ...;<newline46mondego>        SwingUtilities.invokeLater(new Runnable() {<newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                for (MyPortListener listener : portListeners) {<newline46mondego>                    listener.stringReveivedFromSerialPort(receivedString);<newline46mondego>                }<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>"
"4103splitHere46","9506326splitHere46","String url = <doubleQuotes46>http://questions/ask/stackoverflow.xhtml<doubleQuotes46>;<newline46mondego>String pname = url.split(<doubleQuotes46>/<doubleQuotes46>)[4].split(<doubleQuotes46>\\.<doubleQuotes46>)[0];<newline46mondego>"
"4104splitHere46","9506326splitHere46","String url = <doubleQuotes46>http://questions/ask/stackoverflow.xhtml<doubleQuotes46>;<newline46mondego>Pattern pt = Pattern.compile(<doubleQuotes46>/(?![^/]*/)([^.]*)\\.<doubleQuotes46>);<newline46mondego>Matcher matcher = pt.matcher(url);<newline46mondego>if(matcher.find()) {<newline46mondego>    System.out.println(<doubleQuotes46>Matched: [<doubleQuotes46> + matcher.group(1) + ']');<newline46mondego>    // prints Matched: [stackoverflow]<newline46mondego>}<newline46mondego>"
"4105splitHere46","9506335splitHere46","NullPointerException"
"4106splitHere46","9506335splitHere46","searchopt"
"4107splitHere46","9506335splitHere46","R.id.searchtxt"
"4108splitHere46","9506335splitHere46","btmsearch"
"4109splitHere46","9506335splitHere46","R.id.searchbtm"
"4110splitHere46","9506340splitHere46","StringUtils.getLevenshteinDistance"
"4111splitHere46","9506359splitHere46","other"
"4112splitHere46","9506359splitHere46","Fraction otherFraction = (Fraction) other;<newline46mondego>"
"4113splitHere46","9506359splitHere46","getNum()"
"4114splitHere46","9506359splitHere46","getDen()"
"4115splitHere46","9506359splitHere46","otherFraction"
"4116splitHere46","9506365splitHere46","Node aNode=new Node(0);<newline46mondego>for (i=0; i<max; i++) {<newline46mondego>    aNode.setNum(i);<newline46mondego>    add (aNode);<newline46mondego>    aNode.setNext(null);<newline46mondego>    }<newline46mondego>"
"4117splitHere46","9506365splitHere46","display()"
"4118splitHere46","9506365splitHere46","System.out.println(temp.getNext());<newline46mondego>"
"4119splitHere46","9506365splitHere46","getNext()"
"4120splitHere46","9506365splitHere46","getNext()"
"4121splitHere46","9506365splitHere46","null"
"4122splitHere46","9506365splitHere46","System.out.println(temp);<newline46mondego>"
"4123splitHere46","9506365splitHere46","this"
"4124splitHere46","9506365splitHere46","this.foo"
"4125splitHere46","9506365splitHere46","foo"
"4126splitHere46","9506453splitHere46","private static boolean isJson(FileReader f) {<newline46mondego>try{<newline46mondego>     JsonElement json = new JsonParser().parse(f);<newline46mondego>   }<newline46mondego>catch (Exception e) {<newline46mondego>     return false;<newline46mondego>   }<newline46mondego>return true;<newline46mondego>}<newline46mondego>"
"4127splitHere46","9506453splitHere46","Inside main"
"4128splitHere46","9506453splitHere46","parser p = new parser();<newline46mondego>String file = <doubleQuotes46>C:\\Users\\RanRag\\test.txt<doubleQuotes46>;<newline46mondego>FileReader fullPathToAndNameOfFile = new FileReader(file);<newline46mondego><newline46mondego>if(p.isJson(fullPathToAndNameOfFile))<newline46mondego>   System.out.println(<doubleQuotes46>valid<doubleQuotes46>);<newline46mondego>else<newline46mondego>   System.out.println(<doubleQuotes46>invalid<doubleQuotes46>);<newline46mondego>"
"4129splitHere46","9506453splitHere46","invalid"
"4130splitHere46","9506453splitHere46","{ <doubleQuotes46>name<doubleQuotes46>: <doubleQuotes46>Simon<doubleQuotes46> }<newline46mondego>"
"4131splitHere46","9506453splitHere46","valid"
"4132splitHere46","9506538splitHere46","static class JacksonCustomModule extends SimpleModule {<newline46mondego>    public JacksonCustomModule() {<newline46mondego>        super(<doubleQuotes46>JacksonCustomModule<doubleQuotes46>, new Version(1, 0, 0, null));<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void setupModule(SetupContext context) {<newline46mondego>        context.setMixInAnnotations(IProvider.class, IProviderMixIn.class);<newline46mondego>        super.setupModule(context);<newline46mondego>    }<newline46mondego><newline46mondego>    interface IProviderMixIn<T> {<newline46mondego>        @JsonValue<newline46mondego>        T locate();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4133splitHere46","9506538splitHere46","objectMapper.registerModule(new JacksonCustomModule());<newline46mondego>"
"4134splitHere46","9506551splitHere46","Create a root node called nodeRoot.<newline46mondego>current_node = nodeRoot<newline46mondego>For each char in the string:<newline46mondego>    if the char is '('<newline46mondego>        add a child node to current_node<newline46mondego>        parse the string (after the '(' char) to fetch the name of the node<newline46mondego>        current_node = the newly added child node<newline46mondego>    else if the char is ')'<newline46mondego>        current_node = parent of current_node<newline46mondego>"
"4135splitHere46","9506803splitHere46","requestInitialized()"
"4136splitHere46","9506803splitHere46","<session-config><newline46mondego>    <session-timeout>1</session-timeout><newline46mondego></session-config><newline46mondego>"
"4137splitHere46","9506846splitHere46","k"
"4138splitHere46","9506846splitHere46","heatloss = x - m * (x - a);<newline46mondego>"
"4139splitHere46","9506846splitHere46","k"
"4140splitHere46","9506846splitHere46","System.out.println(heatloss);<newline46mondego>"
"4141splitHere46","9507060splitHere46","layout=<doubleQuotes46>@layout/main<doubleQuotes46><newline46mondego>"
"4142splitHere46","9507122splitHere46","if(someCondition) builder.id(<doubleQuotes46>1ac<doubleQuotes46>);<newline46mondego>"
"4143splitHere46","9507122splitHere46","id"
"4144splitHere46","9507122splitHere46","this"
"4145splitHere46","9507162splitHere46","MQMD.Report"
"4146splitHere46","9507162splitHere46","MQRO_COA_WITH_FULL_DATA"
"4147splitHere46","9507307splitHere46","@Documented<newline46mondego>@Target(ElementType.FIELD)<newline46mondego>@Retention(RetentionPolicy.RUNTIME)<newline46mondego>@Constraint(validatedBy = NumericValidator.class)<newline46mondego>public @interface Numeric {<newline46mondego><newline46mondego>    String message() default <doubleQuotes46>{constraint.postcode}<doubleQuotes46>;<newline46mondego><newline46mondego>    Class<?>[] groups() default {};<newline46mondego><newline46mondego>    Class<? extends Payload>[] payload() default {};<newline46mondego><newline46mondego>    int digitCount() default -1;<newline46mondego>}<newline46mondego>"
"4148splitHere46","9507309splitHere46","In order to write a literal <doubleQuotes46>&<doubleQuotes46> in XML, HTML, or SGML text one writes <doubleQuotes46>&amp;<doubleQuotes46> instead"
"4149splitHere46","9507309splitHere46","&lt;root>&lt;node>This &amp;amp; that&lt;/node>&lt;/root>"
"4150splitHere46","9507309splitHere46","<root><node>This & that</node></root>"
"4151splitHere46","9507425splitHere46","throws Exception"
"4152splitHere46","9507425splitHere46","throw SomeException"
"4153splitHere46","9507425splitHere46","} catch (CheckedException ex) {<newline46mondego>     throw new IllegalStateException(ex);<newline46mondego>}<newline46mondego>"
"4154splitHere46","9507436splitHere46","String nextCommand = streamIn.readLine();<newline46mondego>if( nextCommand.equals(<doubleQuotes46>.bye<doubleQuotes46>) ) {<newline46mondego>"
"4155splitHere46","9507436splitHere46","nextCommand"
"4156splitHere46","9507436splitHere46","null"
"4157splitHere46","9507436splitHere46","streamIn"
"4158splitHere46","9507436splitHere46","BufferedReader"
"4159splitHere46","9507436splitHere46","readLine()"
"4160splitHere46","9507436splitHere46","DataInputStream.readUTF()"
"4161splitHere46","9507436splitHere46","readLine()"
"4162splitHere46","9507928splitHere46","SwingUtilities.invokeLater(..) <newline46mondego>"
"4163splitHere46","9507928splitHere46","javax.swing.Timer"
"4164splitHere46","9507928splitHere46","javax.swing.SwingWorker"
"4165splitHere46","9508002splitHere46","Buffer.clear"
"4166splitHere46","9508002splitHere46","getPosition() > 0"
"4167splitHere46","9508032splitHere46","ClassLoader"
"4168splitHere46","9508032splitHere46","Class"
"4169splitHere46","9508032splitHere46","Class.getResourceAsStream()"
"4170splitHere46","9508032splitHere46","Class"
"4171splitHere46","9508032splitHere46","resources"
"4172splitHere46","9508032splitHere46","MyClass"
"4173splitHere46","9508032splitHere46","ClassLoader"
"4174splitHere46","9508042splitHere46","Class"
"4175splitHere46","9508042splitHere46","PermGen"
"4176splitHere46","9508042splitHere46","Class"
"4177splitHere46","9508135splitHere46","Scanner.nextInt()"
"4178splitHere46","9508135splitHere46","Scanner.nextLine()"
"4179splitHere46","9508135splitHere46","Scanner.nextInt()"
"4180splitHere46","9508135splitHere46","Scanner.nextLine()"
"4181splitHere46","9508135splitHere46","x[0]"
"4182splitHere46","9508135splitHere46","System.out.println(x[i]);<newline46mondego>"
"4183splitHere46","9508135splitHere46","System.out.println(i + <doubleQuotes46>: <doubleQuotes46> + x[i]);<newline46mondego>"
"4184splitHere46","9508135splitHere46","0:"
"4185splitHere46","9508135splitHere46","x.length"
"4186splitHere46","9508287splitHere46","java.security.policy"
"4187splitHere46","9508287splitHere46","java -Djava.security.policy=<path to policy file> MyClass<newline46mondego>"
"4188splitHere46","9508287splitHere46","java -Djava.security.policy==<path to policy file> MyClass<newline46mondego>"
"4189splitHere46","9508487splitHere46","Date now = new Date((long)date * 1000);  <newline46mondego>System.out.println(<doubleQuotes46>now => <doubleQuotes46> + now );<newline46mondego>"
"4190splitHere46","9508673splitHere46","split(...)"
"4191splitHere46","9508673splitHere46","String csvRecord = <doubleQuotes46>1,20/11/2011 11:05:17,00:00:02<doubleQuotes46>;<newline46mondego>String[] csvFields = csvRecord.split(<doubleQuotes46>,<doubleQuotes46>);<newline46mondego>"
"4192splitHere46","9508673splitHere46","csvRecord"
"4193splitHere46","9508673splitHere46","csvFields"
"4194splitHere46","9508673splitHere46","split(...)"
"4195splitHere46","9508673splitHere46","csvFields[0]"
"4196splitHere46","9508673splitHere46","1"
"4197splitHere46","9508673splitHere46","csvFields[1]"
"4198splitHere46","9508673splitHere46","20/11/2011 11:05:17"
"4199splitHere46","9508673splitHere46","csvFields[2]"
"4200splitHere46","9508673splitHere46","00:00:02"
"4201splitHere46","9508741splitHere46","play deps --sync"
"4202splitHere46","9508760splitHere46","Class<Collection<E>>"
"4203splitHere46","9508760splitHere46","Collection.class"
"4204splitHere46","9508760splitHere46","Collection.class"
"4205splitHere46","9508760splitHere46","Class<Collection<E>>"
"4206splitHere46","9508760splitHere46","(Class<Collection<E>>) (Class) Collection.class"
"4207splitHere46","9508765splitHere46","install.packages(<doubleQuotes46>rJava<doubleQuotes46>)"
"4208splitHere46","9508765splitHere46","R CMD INSTALL rJava_0.9-3.tar.gz"
"4209splitHere46","9508765splitHere46","system.file(<doubleQuotes46>jri<doubleQuotes46>,package=<doubleQuotes46>rJava<doubleQuotes46>)"
"4210splitHere46","9508765splitHere46","R CMD"
"4211splitHere46","9508765splitHere46","java.library.path"
"4212splitHere46","9508910splitHere46","getWriter()"
"4213splitHere46","9508910splitHere46","getWriter()"
"4214splitHere46","9508910splitHere46","getWriter()"
"4215splitHere46","9508910splitHere46","getWriter()"
"4216splitHere46","9508914splitHere46","DAOImpl myDao = mock(DAOImpl.class);<newline46mondego>when(myDao.getNumber()).thenReturn(7);<newline46mondego>"
"4217splitHere46","9508914splitHere46","getNumber"
"4218splitHere46","9508914splitHere46","assertEquals(224, service.myServiceMethod(4));<newline46mondego>"
"4219splitHere46","9508951splitHere46","Message format:<newline46mondego>  Command,DataLen,Data<newline46mondego><newline46mondego>Example messages:<newline46mondego>  JSON,20,{ <doubleQuotes46>text<doubleQuotes46>: <doubleQuotes46>Hello!<doubleQuotes46> }<newline46mondego><newline46mondego>  CMD1:9:Some Data<newline46mondego>"
"4220splitHere46","9508951splitHere46","CommandLen(4-bytes):Command:DataLen(4-bytes):Data<newline46mondego>"
"4221splitHere46","9508980splitHere46","private static int[][] getSolution(int n) {<newline46mondego>    if (n == 0) {<newline46mondego>       return grid;        <newline46mondego>    }//end if<newline46mondego><newline46mondego>    Cell cell = getNextEmpty();<newline46mondego>    boolean fits = false;<newline46mondego>    for (int i = 0; i <= 9; i++) {<newline46mondego>        fits = insertNumber(cell, i);<newline46mondego>        if (fits) {<newline46mondego>            break; // means i fits in Cell<newline46mondego>        } else {<newline46mondego>            // i doesn't fit... try the next i<newline46mondego>            // don't need to do anything<newline46mondego>        }<newline46mondego>    }//end for<newline46mondego>    if (!fits) {<newline46mondego>        // There are no numbers that fit in this Cell<newline46mondego>        // What should happen?<newline46mondego>        // Did I make a bad guess?<newline46mondego>        // How do I BACKTRACK and correct a previous guess?<newline46mondego>    }<newline46mondego>    return getSolution(n - 1);<newline46mondego>}//end getSolution<newline46mondego>"
"4222splitHere46","9509157splitHere46","close()"
"4223splitHere46","9509157splitHere46","static"
"4224splitHere46","9509157splitHere46","Mapper"
"4225splitHere46","9509157splitHere46","Reducer"
"4226splitHere46","9509157splitHere46","Reducer"
"4227splitHere46","9509199splitHere46","setDaemon(true)"
"4228splitHere46","9509199splitHere46","java.lang.Thread"
"4229splitHere46","9509340splitHere46","north.setHorizontalTextPosition(JLabel.CENTER);<newline46mondego>north.setVerticalTextPosition(JLabel.BOTTOM);<newline46mondego>"
"4230splitHere46","9509356splitHere46","for (int i = 0; i<cache.length; i++) {<newline46mondego>           cache[i] = new SlotNode(...); // Add the constructor parameters as needed<newline46mondego>           cache[i].setValidBit(0);<newline46mondego>           cache[i].setTag(0);<newline46mondego>           cache[i].setData(0);<newline46mondego>           cache[i].setDirty(0);<newline46mondego>   }<newline46mondego>"
"4231splitHere46","9509356splitHere46","public static SlotNode[] cache = new SlotNode[8];<newline46mondego>"
"4232splitHere46","9509356splitHere46","SlotNode"
"4233splitHere46","9509406splitHere46","<newline46mondego>if(getEmployeeId().charAt(0) == '0')<newline46mondego>"
"4234splitHere46","9509406splitHere46","<newline46mondego>if(Integer.toString(getEmployeeId()).charAt(0) == '0')<newline46mondego>"
"4235splitHere46","9509443splitHere46","AsyncTask"
"4236splitHere46","9509443splitHere46","new DownloadWebPageTask().execute(new String[] { <doubleQuotes46>http://yahoo.com<doubleQuotes46> });<newline46mondego>new DownloadWebPageTask().execute(new String[] { <doubleQuotes46>http://google.com<doubleQuotes46> });<newline46mondego>"
"4237splitHere46","9509443splitHere46","DownloadWebPageTask task = new DownloadWebPageTask();<newline46mondego>task.execute(new String[] { <doubleQuotes46>http://google.com<doubleQuotes46> });<newline46mondego>"
"4238splitHere46","9509443splitHere46","private void EndA()<newline46mondego>{<newline46mondego>    Debug(<doubleQuotes46>EndA()<doubleQuotes46>);<newline46mondego><newline46mondego>    StartB();<newline46mondego>}<newline46mondego>"
"4239splitHere46","9509443splitHere46","g_GetWhat"
"4240splitHere46","9509443splitHere46","EndA()"
"4241splitHere46","9509443splitHere46","g_GetWhat"
"4242splitHere46","9509443splitHere46","if(g_GetWhat == 1)  { EndA(); }<newline46mondego>if(g_GetWhat == 2)  { EndB(); }<newline46mondego>"
"4243splitHere46","9509443splitHere46","g_GetWhat"
"4244splitHere46","9509543splitHere46","openFileInput(filename)"
"4245splitHere46","9509941splitHere46","<form-login-page>/success.jsp</form-login-page><newline46mondego>"
"4246splitHere46","9509941splitHere46","web.xml"
"4247splitHere46","9509941splitHere46","<form-login-page>/login.jsp</form-login-page><newline46mondego>"
"4248splitHere46","9509941splitHere46","login.jsp"
"4249splitHere46","9509941splitHere46","<security-constraint><newline46mondego>  <web-resource-collection><newline46mondego>    <web-resource-name><newline46mondego>      Entire Application<newline46mondego>    </web-resource-name><newline46mondego>    <url-pattern>/success.jsp</url-pattern><newline46mondego>  </web-resource-collection><newline46mondego>  <auth-constraint><newline46mondego>    <role-name> 'the name of the group with access' </role-name><newline46mondego>  </auth-constraint><newline46mondego></security-constraint><newline46mondego>"
"4250splitHere46","9509941splitHere46","realm"
"4251splitHere46","9509941splitHere46","http://localhost:8080/succes.jsp"
"4252splitHere46","9509941splitHere46","/success.jsp"
"4253splitHere46","9509941splitHere46","/error.jsp"
"4254splitHere46","9510016splitHere46","Scanner"
"4255splitHere46","9510016splitHere46","Scanner"
"4256splitHere46","9510016splitHere46","Scanner#nextLine()"
"4257splitHere46","9510016splitHere46","Scanner#next()"
"4258splitHere46","9510083splitHere46","List<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>(1);<newline46mondego>nameValuePairs.add(new BasicNameValuePair(<doubleQuotes46>Username<doubleQuotes46>,<doubleQuotes46>Your username<doubleQuotes46>));<newline46mondego>nameValuePairs.add(new BasicNameValuePair(<doubleQuotes46>Password<doubleQuotes46>,<doubleQuotes46>Your password<doubleQuotes46>));<newline46mondego>post.setEntity(new UrlEncodedFormEntity(nameValuePairs));<newline46mondego>HttpResponse response = client.execute(post);<newline46mondego>BufferedReader rd = new BufferedReader(new InputStreamReader(<newline46mondego>   response.getEntity().getContent()));<newline46mondego>   String line = <doubleQuotes46><doubleQuotes46>;<newline46mondego>   while ((line = rd.readLine()) != null) {<newline46mondego>      System.out.println(line);<newline46mondego>   }<newline46mondego>"
"4259splitHere46","9510085splitHere46","long"
"4260splitHere46","9510160splitHere46","public void movePiece(Piece piece, int dx, int dy) {<newline46mondego>  // Save current position, so we can erase the piece.<newline46mondego>  int oldX = piece.getX();<newline46mondego>  int oldY = piece.getY();<newline46mondego><newline46mondego>  // Update the location.<newline46mondego>  piece.setX(oldX + dx);<newline46mondego>  piece.setY(oldY + dy);<newline46mondego><newline46mondego>  // Remove piece from old position<newline46mondego>  board[oldX][oldY].clear();<newline46mondego><newline46mondego>  // Add it to the new position.<newline46mondego>  addPiece(piece);<newline46mondego>}<newline46mondego>"
"4261splitHere46","9510160splitHere46","Point"
"4262splitHere46","9510228splitHere46","URLClassLoader"
"4263splitHere46","9510228splitHere46","Class"
"4264splitHere46","9510228splitHere46","public static void main(String[])"
"4265splitHere46","9510228splitHere46","String[] args = new String[0]; //Add arguments for main call.<newline46mondego><newline46mondego>//Add whatever classpath elements you need.<newline46mondego>String[] classpath = {<doubleQuotes46>file:///example/path/to/studentProjectJarFile.jar<doubleQuotes46>, <newline46mondego>                      <doubleQuotes46>file:///example/path/to/studentProjectDir/<doubleQuotes46>};<newline46mondego><newline46mondego>//Create classloader.<newline46mondego>ClassLoader cl = <newline46mondego>            new URLClassLoader(classpath);<newline46mondego><newline46mondego>Class<?> mainClazz;<newline46mondego>Method mainMethod;<newline46mondego><newline46mondego>//Find Class.<newline46mondego>mainClazz = cl.loadClass(<doubleQuotes46>com.example.MyClass<doubleQuotes46>); <newline46mondego>//Find the target method.<newline46mondego>mainMethod = mainClazz.getMethod(<doubleQuotes46>main<doubleQuotes46>, String[].class); <newline46mondego>//Invoke method.<newline46mondego>mainMethod.invoke(null, (Object) args); <newline46mondego>"
"4266splitHere46","9510228splitHere46","com.example.MyClass"
"4267splitHere46","9510244splitHere46","null"
"4268splitHere46","9510244splitHere46","InputStreamReader(...)"
"4269splitHere46","9510244splitHere46","main"
"4270splitHere46","9510475splitHere46","for(int i =0; i< chars.length ;i++){<newline46mondego>        JLabel l = new JLabel(<doubleQuotes46>_<doubleQuotes46>);<newline46mondego>        labels.add(l);<newline46mondego>        this.add(l);<newline46mondego>        //labels[i].setText(<doubleQuotes46>_<doubleQuotes46>);<newline46mondego>        System.out.println(l);<newline46mondego>    }<newline46mondego>"
"4271splitHere46","9510498splitHere46","front = new PDJpeg(document, rescaledFrontImg);<newline46mondego>back = new PDJpeg(document, rescaledBackImg);<newline46mondego>"
"4272splitHere46","9510498splitHere46","PDJpeg(PDDocument doc, BufferedImage bi)<newline46mondego>PDJpeg(PDDocument doc, InputStream is)<newline46mondego>"
"4273splitHere46","9510517splitHere46","a"
"4274splitHere46","9510517splitHere46","b"
"4275splitHere46","9510517splitHere46","c"
"4276splitHere46","9510517splitHere46","a"
"4277splitHere46","9510517splitHere46","c"
"4278splitHere46","9510517splitHere46","b"
"4279splitHere46","9510517splitHere46","System.out.print(<doubleQuotes46>Enter a number: <doubleQuotes46>);<newline46mondego>int a = Integer.parseInt(in.readLine());<newline46mondego>System.out.print(<doubleQuotes46>Enter a number: <doubleQuotes46>);<newline46mondego>int b = Integer.parseInt(in.readLine());<newline46mondego>System.out.print(<doubleQuotes46>Enter a number: <doubleQuotes46>);<newline46mondego>int c = Integer.parseInt(in.readLine());<newline46mondego><newline46mondego>for(int i = a; i < c; i++)<newline46mondego>{<newline46mondego>   if(i != b)<newline46mondego>      System.out.println(i);<newline46mondego>}<newline46mondego>"
"4280splitHere46","9510632splitHere46","Scanner scanner = new Scanner(is).useDelimiter(<doubleQuotes46>\\n<doubleQuotes46>);<newline46mondego>    scanner.findWithinHorizon(Pattern.compile(<doubleQuotes46>Block\\scount:\\s*(\\d+)<doubleQuotes46>), 0);<newline46mondego>    String blockCount = scanner.match().group(1);<newline46mondego>    scanner.findWithinHorizon(Pattern.compile(<doubleQuotes46>Free\\sblocks:\\s*(\\d+)<doubleQuotes46>), 0);<newline46mondego>    String freeBlocks = scanner.match().group(1);<newline46mondego>"
"4281splitHere46","9510659splitHere46","int partSize = 500;<newline46mondego>File f = new File(<doubleQuotes46>file.txt<doubleQuotes46>);<newline46mondego>String[] parts = new String[(f.length() + partSize - 1) / partSize];<newline46mondego>"
"4282splitHere46","9510659splitHere46","static String[] readFileInParts(String fname) throws IOException {<newline46mondego>    int partSize = 500;<newline46mondego>    FileReader fr = new FileReader(fname);<newline46mondego>    List<String> parts = new ArrayList<String>();<newline46mondego>    char[] buf = new char[partSize];<newline46mondego>    int pos = 0;<newline46mondego><newline46mondego>    for (;;) {<newline46mondego>        int nRead = fr.read(buf, pos, partSize - pos);<newline46mondego>        if (nRead == -1) {<newline46mondego>            if (pos > 0)<newline46mondego>                parts.add(new String(buf, 0, pos));<newline46mondego>            break;<newline46mondego>        }<newline46mondego>        pos += nRead;<newline46mondego>        if (pos == partSize) {<newline46mondego>            parts.add(new String(buf));<newline46mondego>            pos = 0;<newline46mondego>        }<newline46mondego>    }<newline46mondego>    return parts.toArray(new String[parts.size()]);<newline46mondego>}<newline46mondego>"
"4283splitHere46","9510659splitHere46","FileReader"
"4284splitHere46","9510659splitHere46","new InputStreamReader(new FileInputStream(fname), charSet)"
"4285splitHere46","9510781splitHere46","imageCanvas"
"4286splitHere46","9510781splitHere46","imageCanvas.toDisplay(120, 150);<newline46mondego>"
"4287splitHere46","9510906splitHere46","// Once a month (the first day at midnight)<newline46mondego>0 0 0 1 * ? <newline46mondego><newline46mondego>// Once a week (Sunday at midnight)<newline46mondego>0 0 0 * * 1<newline46mondego><newline46mondego>// On a specific date (November 10, 2012)<newline46mondego>0 0 0 10 11 ? 2012<newline46mondego>"
"4288splitHere46","9510942splitHere46","package com.test;<newline46mondego>class Example{<newline46mondego>    //empty class<newline46mondego>}<newline46mondego>"
"4289splitHere46","9510942splitHere46","javac  d:/example/com/test/Example.java<newline46mondego>"
"4290splitHere46","9510942splitHere46","package com.test;<newline46mondego>class MainClass{<newline46mondego>    public static void main(String[] args)throws Exception{<newline46mondego>        System.out.println(Class.forName(<doubleQuotes46>com.test.Example<doubleQuotes46>));<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4291splitHere46","9510942splitHere46","javac  d:/example/com/test/MainClass.java<newline46mondego>"
"4292splitHere46","9510942splitHere46","java -cp D:/example/ com.test.MainClass<newline46mondego>"
"4293splitHere46","9510942splitHere46","class com.test.Example<newline46mondego>"
"4294splitHere46","9511005splitHere46","src"
"4295splitHere46","9511005splitHere46","File > New Package"
"4296splitHere46","9511005splitHere46","src"
"4297splitHere46","9511005splitHere46","src/com/naishe/test"
"4298splitHere46","9511005splitHere46","com.naishe.test"
"4299splitHere46","9511010splitHere46","Integer grandChildCount = ((BigInteger) result[1]).intValue();<newline46mondego>"
"4300splitHere46","9511010splitHere46","Number"
"4301splitHere46","9511010splitHere46","Integer"
"4302splitHere46","9511010splitHere46","BigInteger"
"4303splitHere46","9511111splitHere46","SwingUtilities.invokeLater(Runnable r)"
"4304splitHere46","9511123splitHere46","javac *.java<newline46mondego>"
"4305splitHere46","9511123splitHere46","mkdir bin<newline46mondego>javac -d bin src/*.java<newline46mondego>"
"4306splitHere46","9511123splitHere46","mkdir bin<newline46mondego>shopt -s globstar # requires bash 4<newline46mondego>javac -d bin src/**/*.java<newline46mondego>"
"4307splitHere46","9511211splitHere46","m_context.InitFromXmlFile(path,m_scriptNode);                               <newline46mondego>m_context.FindExistingNode(XN_NODE_TYPE_IMAGE, m_imageGenerator);                       <newline46mondego>m_context.FindExistingNode(XN_NODE_TYPE_DEPTH, m_depthGenerator);                       <newline46mondego>if (m_depthGenerator.IsCapabilitySupported(XN_CAPABILITY_ALTERNATIVE_VIEW_POINT)) {<newline46mondego>    m_depthGenerator.GetAlternativeViewPointCap().SetViewPoint(m_imageGenerator);<newline46mondego>}<newline46mondego>"
"4308splitHere46","9511236splitHere46","System.currentTimeMillis()"
"4309splitHere46","9511236splitHere46","1000"
"4310splitHere46","9511305splitHere46","spec = tabHost  .newTabSpec(<doubleQuotes46>tab1<doubleQuotes46>)<newline46mondego>                    .setIndicator(<doubleQuotes46>FirstActivity<doubleQuotes46>)<newline46mondego>                    .setContent(new Intent(this,MyFirstActivity.class)<newline46mondego>                    .addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP));<newline46mondego>    tabHost.addTab(spec);<newline46mondego>"
"4311splitHere46","9511312splitHere46","?action=edit&id=1<newline46mondego>"
"4312splitHere46","9511312splitHere46","String action = request.getParameter(<doubleQuotes46>action<doubleQuotes46>);<newline46mondego>if(action.equal(...) { /* Your logic here */ }<newline46mondego>"
"4313splitHere46","9511312splitHere46","company/edit/1<newline46mondego>"
"4314splitHere46","9511369splitHere46","rt.jar"
"4315splitHere46","9511369splitHere46","rt.jar"
"4316splitHere46","9511369splitHere46","java"
"4317splitHere46","9511578splitHere46","invalidate()"
"4318splitHere46","9511578splitHere46","validate()"
"4319splitHere46","9511578splitHere46","LayoutManager"
"4320splitHere46","9511578splitHere46","revalidate()"
"4321splitHere46","9511586splitHere46","CellTable<Contact> table = new CellTable<Contact>();<newline46mondego><newline46mondego>TextColumn<Contact> nameColumn = new TextColumn<Contact>() { /* ... */ };  <newline46mondego>table.addColumn(nameColumn, <doubleQuotes46>Name<doubleQuotes46>);<newline46mondego><newline46mondego>TextColumn<Contact> addressColumn = new TextColumn<Contact>() { /* ... */ };<newline46mondego>table.addColumn(addressColumn, <doubleQuotes46>Address<doubleQuotes46>);<newline46mondego><newline46mondego>table.setRowData( /* ... */ );<newline46mondego>"
"4322splitHere46","9511586splitHere46","public class MyCellTable extends CellTable<Contact>{<newline46mondego>    public MyCellTable(String col1, String col2){<newline46mondego>        TextColumn<Contact> nameColumn = new TextColumn<Contact>() { /* ... */ };  <newline46mondego>        table.addColumn(nameColumn, col1);<newline46mondego><newline46mondego>        TextColumn<Contact> addressColumn = new TextColumn<Contact>() { /* ... */ };<newline46mondego>        table.addColumn(addressColumn, col2);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4323splitHere46","9511586splitHere46","MyCellTable table = new MyCellTable(<doubleQuotes46>Name<doubleQuotes46>, <doubleQuotes46>Address<doubleQuotes46>);<newline46mondego>table.setRowData( /* ... */ );<newline46mondego>"
"4324splitHere46","9511598splitHere46","Connection con=DriverManager.getConnection(<newline46mondego>          <doubleQuotes46>jdbc:oracle:thin:@localhost:1521:xe<doubleQuotes46>,<doubleQuotes46>lms<doubleQuotes46>,<doubleQuotes46>abc<doubleQuotes46>);<newline46mondego>"
"4325splitHere46","9511598splitHere46","Connection con=DriverManager.getConnection(<newline46mondego>          <doubleQuotes46>jdbc:oracle:thin:@//localhost:1521:xe<doubleQuotes46>,<doubleQuotes46>lms<doubleQuotes46>,<doubleQuotes46>abc<doubleQuotes46>);<newline46mondego>"
"4326splitHere46","9511598splitHere46","http://www.orafaq.com/wiki/JDBC<newline46mondego>"
"4327splitHere46","9511598splitHere46","stmt.executeUpdate(<doubleQuotes46>create table emp(eno number(5),name varchar2(20))<doubleQuotes46>);<newline46mondego>"
"4328splitHere46","9511598splitHere46","stmt.executeUpdate(<doubleQuotes46>create table emp(eno number(5),name varchar2(20));<doubleQuotes46>);<newline46mondego>"
"4329splitHere46","9511758splitHere46","jList.setVisibleRowCount(0)"
"4330splitHere46","9511837splitHere46","DictionaryOpenHelper myDictionary;<newline46mondego>myDictionary = new DictionaryOpenHelper(this);<newline46mondego>SQLiteDatabase db = myDictionary.getWritableDatabase();<newline46mondego><newline46mondego>//to enter values in the db<newline46mondego>ContentValues values = new ContentValues();<newline46mondego>values.put(<doubleQuotes46>name<doubleQuotes46>,<doubleQuotes46>Rhyno<doubleQuotes46>);<newline46mondego>db.insert(nameOfTable, null, values);<newline46mondego>"
"4331splitHere46","9511855splitHere46","<form action=<doubleQuotes46>YourServlet<doubleQuotes46>><newline46mondego>  <input type=<doubleQuotes46>text<doubleQuotes46> name=<doubleQuotes46>data<doubleQuotes46>><newline46mondego></form><newline46mondego>"
"4332splitHere46","9511855splitHere46","request.getParameter(<doubleQuotes46>data<doubleQuotes46>);<newline46mondego>"
"4333splitHere46","9512171splitHere46","{<colnr> <value>, <colnr> <value>, ...}<newline46mondego>"
"4334splitHere46","9512171splitHere46","[, =]+"
"4335splitHere46","9512172splitHere46","javax.mail.*"
"4336splitHere46","9512218splitHere46","height"
"4337splitHere46","9512218splitHere46",".ui-jqgrid .ui-jqgrid-toppager {<newline46mondego>    height: 30px !important;<newline46mondego>}<newline46mondego>"
"4338splitHere46","9512218splitHere46",".ui-jqgrid .ui-userdata {<newline46mondego>    height: 30px; /* default value in ui.jqgrid.CSS is 21px */<newline46mondego>}<newline46mondego>"
"4339splitHere46","9512282splitHere46","add"
"4340splitHere46","9512282splitHere46","String dateString1 = <doubleQuotes46>2011-01-01<doubleQuotes46>;<newline46mondego>String dateString2 = <doubleQuotes46>2012-01-01<doubleQuotes46>;<newline46mondego><newline46mondego>SimpleDateFormat dateFormat = new SimpleDateFormat(<doubleQuotes46>yyyy-MM-dd<doubleQuotes46>);<newline46mondego><newline46mondego>List<String> dates = new ArrayList<String>();<newline46mondego><newline46mondego>Date startDate = dateFormat.parse(dateString1);<newline46mondego>Date endDate = dateFormat.parse(dateString2);<newline46mondego><newline46mondego>GregorianCalendar calendar = new GregorianCalendar();<newline46mondego>calendar.setTime(startDate);<newline46mondego>while (calendar.getTime().before(endDate)) {<newline46mondego>    dates.add(dateFormat.format(calendar.getTime()));<newline46mondego>    calendar.add(Calendar.DAY_OF_MONTH, 1);<newline46mondego>}<newline46mondego>"
"4341splitHere46","9512282splitHere46","String[] datesArray = dates.toArray(new String[0]);<newline46mondego>"
"4342splitHere46","9512314splitHere46","String data = stdin.readLine();"
"4343splitHere46","9512314splitHere46","String data = <doubleQuotes46><doubleQuotes46>;<newline46mondego>while ( (data = stdin.readLine()) != null)<newline46mondego>{<newline46mondego>    //Read and validate the line you are reading<newline46mondego>}<newline46mondego>"
"4344splitHere46","9512314splitHere46","EOF"
"4345splitHere46","9512314splitHere46","stdin.readLine()"
"4346splitHere46","9512348splitHere46","public RelativeLayout createViewTOAdd(){<newline46mondego>    lp=new RelativeLayout.LayoutParams(android.widget.RelativeLayout.LayoutParams.FILL_PARENT,android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT);<newline46mondego>    RelativeLayout mRelativeLayout=new RelativeLayout(this);<newline46mondego>    mRelativeLayout.setBackgroundColor(Color.WHITE);<newline46mondego>    TextView mTextView=new TextView(this);<newline46mondego>     RelativeLayout.LayoutParams Textview_lp=new RelativeLayout.LayoutParams(android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT,android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT);<newline46mondego>    mTextView.setText(<doubleQuotes46>Amout<doubleQuotes46>);<newline46mondego>    Textview_lp.addRule(RelativeLayout.ALIGN_PARENT_LEFT);<newline46mondego>    Textview_lp.addRule(RelativeLayout.CENTER_VERTICAL);<newline46mondego>    Textview_lp.leftMargin=10;<newline46mondego>    mTextView.setTextColor(Color.BLACK);<newline46mondego>    mTextView.setTextAppearance(this, R.style.TextStyle);<newline46mondego>    //mTextView.setLayoutParams(Textview_lp);<newline46mondego>    EditText mEditText=new EditText(this);<newline46mondego>     RelativeLayout.LayoutParams EditText_param=new RelativeLayout.LayoutParams(android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT,android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT);<newline46mondego>     EditText_param.addRule(RelativeLayout.ALIGN_PARENT_RIGHT);<newline46mondego>     EditText_param.addRule(RelativeLayout.CENTER_VERTICAL);<newline46mondego>     EditText_param.rightMargin=10;<newline46mondego>    //mEditText.setLayoutParams(EditText_param);<newline46mondego>    //mRelativeLayout.addView(mTextView, 0);<newline46mondego>    //mRelativeLayout.addView(mEditText, 1);<newline46mondego>    //mRelativeLayout.addView(mTextView);<newline46mondego>    //mRelativeLayout.addView(mEditText);<newline46mondego>    mRelativeLayout.addView(mTextView, Textview_lp);<newline46mondego>    mRelativeLayout.addView(mEditText, EditText_param);<newline46mondego>    return mRelativeLayout;<newline46mondego>}<newline46mondego>"
"4347splitHere46","9512348splitHere46","mLinearLayout=(LinearLayout)findViewById(R.id.mainLinearView);<newline46mondego><newline46mondego>    mLinearLayout.removeAllViews();<newline46mondego><newline46mondego>   for(int i=0;i<4;i++){<newline46mondego>        mLinearLayout.addView(createViewTOAdd(), i);<newline46mondego>    }<newline46mondego>"
"4348splitHere46","9512511splitHere46","(!(userAccountControl:1.2.840.113556.1.4.803:=2))<newline46mondego>"
"4349splitHere46","9512581splitHere46","someMethodWithGenericArguments(new HashMap<>());<newline46mondego>new SomeGenericClass(new HashMap<>());<newline46mondego>T foo = new SomethingRelatedToT<>(); // where T is a generic type parameter<newline46mondego>"
"4350splitHere46","9512685splitHere46","Lists.newArrayList()"
"4351splitHere46","9512685splitHere46","foo(Lists.<String>newArrayList());<newline46mondego>"
"4352splitHere46","9512685splitHere46","<T> T newObject();<newline46mondego>void bar(Integer i);<newline46mondego>void bar(String s);<newline46mondego>"
"4353splitHere46","9512685splitHere46","bar(newObject())"
"4354splitHere46","9513020splitHere46","ImageIO.read(File/URL/InputStream)"
"4355splitHere46","9513020splitHere46","JPanel"
"4356splitHere46","9513020splitHere46","FlowLayout"
"4357splitHere46","9513020splitHere46","GridLayout"
"4358splitHere46","9513020splitHere46","JButton"
"4359splitHere46","9513020splitHere46","ActionListener"
"4360splitHere46","9513020splitHere46","JTabbedPane.addTab(<doubleQuotes46>image name<doubleQuotes46>, imageEditorComponent)"
"4361splitHere46","9513048splitHere46","public static String customizedReverse(String str, int param)<newline46mondego>{<newline46mondego>    String result = <doubleQuotes46><doubleQuotes46>;<newline46mondego>    boolean reverse = false;<newline46mondego>    StringBuilder sb = null;<newline46mondego>    int size = str.length(), i = 0;<newline46mondego><newline46mondego>    if(param > size)<newline46mondego>        return str;<newline46mondego><newline46mondego>    for (i = 0; i < (size/param)*(param); i += param)<newline46mondego>    {<newline46mondego>        String temp = str.substring(i, i + param);<newline46mondego>        if (!reverse)<newline46mondego>            result += temp;<newline46mondego>        else<newline46mondego>        {<newline46mondego>            sb = new StringBuilder(temp);<newline46mondego>            result += sb.reverse();<newline46mondego>        }<newline46mondego>        reverse = !reverse;<newline46mondego>    }<newline46mondego>    // Appending the remaining part of the string       <newline46mondego>    if (!reverse)<newline46mondego>        result += str.substring(i, size);<newline46mondego>    else<newline46mondego>    {<newline46mondego>        sb = new StringBuilder(str.substring(i, size));<newline46mondego>        result += sb.reverse();<newline46mondego>    }<newline46mondego><newline46mondego>    return result;<newline46mondego>}<newline46mondego>"
"4362splitHere46","9513122splitHere46","return (i << (distance & 63)) | (i >>> (-distance & 63));<newline46mondego>"
"4363splitHere46","9513122splitHere46","return (i << (distance & 63)) | (i >>> ((64-distance) & 63));<newline46mondego>"
"4364splitHere46","9513122splitHere46","return (i << distance) | (i >>> (64-distance));<newline46mondego>"
"4365splitHere46","9513122splitHere46","// This works regardless of whether `x` is `int` or `long` <newline46mondego>// and you can safely change the type in the future.<newline46mondego>// 1 if negative, 0 if non-negative<newline46mondego>x >>> -1;<newline46mondego><newline46mondego>// works for 32-bit but not 64-bit so if you change the type later,<newline46mondego>// it could break without compiler error.<newline46mondego>x >>> 31;<newline46mondego>"
"4366splitHere46","9513195splitHere46","Class.getClass(<doubleQuotes46>com.mycompany.MyClass<doubleQuotes46>).getMethod(<doubleQuotes46>main<doubleQuotes46>, String[].class)"
"4367splitHere46","9513195splitHere46","javap"
"4368splitHere46","9513307splitHere46","countryList"
"4369splitHere46","9513307splitHere46","public class MyAction extends ActionSupport{<newline46mondego><newline46mondego>  private List<String> countryList;<newline46mondego>  // getter and setter for countryList<newline46mondego><newline46mondego>  public String execute() throws Exception{<newline46mondego>   countryList=new ArrayList<String>();<newline46mondego>   // Add values to list<newline46mondego>   return SUCCESS;<newline46mondego> }<newline46mondego>}<newline46mondego>"
"4370splitHere46","9513307splitHere46","<s:select name=<doubleQuotes46>country<doubleQuotes46> list=<doubleQuotes46>countryList<doubleQuotes46>  headerKey=<doubleQuotes46>0<doubleQuotes46> headerValue=<doubleQuotes46>Country<doubleQuotes46><newline46mondego>                  label=<doubleQuotes46>Select your country<doubleQuotes46> required=<doubleQuotes46>true<doubleQuotes46>/><newline46mondego>"
"4371splitHere46","9513307splitHere46","list=<doubleQuotes46>countryList<doubleQuotes46>"
"4372splitHere46","9513448splitHere46","SELECT * FROM CLASS WHERE TYPE=ART<newline46mondego>"
"4373splitHere46","9513448splitHere46","ART"
"4374splitHere46","9513448splitHere46","ct"
"4375splitHere46","9513448splitHere46","ART"
"4376splitHere46","9513448splitHere46","ResultSet rset = stmt.executeQuery(<doubleQuotes46>SELECT * FROM CLASS WHERE TYPE='<doubleQuotes46> + ct + <doubleQuotes46>'<doubleQuotes46>);<newline46mondego>"
"4377splitHere46","9513448splitHere46","String sql = <doubleQuotes46>SELECT * FROM CLASS WHERE TYPE=?<doubleQuotes46>;<newline46mondego>PrepareStatement stmt = conn.prepareStatement(sql);<newline46mondego>stmt.setString(1, ct);<newline46mondego>ResultSet rset = stmt.executeQuery(); <newline46mondego>"
"4378splitHere46","9513514splitHere46","FileInputStream fileInputStream = new FileInputStream(<doubleQuotes46>C:/test.txt<doubleQuotes46>);<newline46mondego>Scanner scanner = new Scanner(fileInputStream);<newline46mondego>Scanner lineScanner;<newline46mondego><newline46mondego>String surname = <doubleQuotes46><doubleQuotes46>;<newline46mondego>String name = <doubleQuotes46><doubleQuotes46>;<newline46mondego><newline46mondego>while (scanner.hasNextLine()) {<newline46mondego>    String delimiterInFile = <doubleQuotes46> <doubleQuotes46>;<newline46mondego>    String lineInFile = scanner.nextLine();<newline46mondego><newline46mondego>    lineScanner = new Scanner(lineInFile).useDelimiter(delimiterInFile);<newline46mondego><newline46mondego>    if(lineScanner.hasNext()){<newline46mondego>        surname = lineScanner.next();<newline46mondego>    }<newline46mondego>    if(lineScanner.hasNext()){<newline46mondego>        name = lineScanner.next();<newline46mondego>    }<newline46mondego><newline46mondego>    System.out.println(String.format(<doubleQuotes46>%s %s<doubleQuotes46>, name, surname));<newline46mondego>}<newline46mondego>"
"4379splitHere46","9513811splitHere46","public class CustomInteger<newline46mondego>{<newline46mondego>    public static final int MAX_VALUE = 5000;<newline46mondego>    public static final int MIN_VALUE = -5000;<newline46mondego><newline46mondego>    private final int value;<newline46mondego><newline46mondego>    public CustomInteger(int value)<newline46mondego>    {<newline46mondego>        // TODO: Validation<newline46mondego>        this.value = value;<newline46mondego>    }<newline46mondego><newline46mondego>    // Add all the methods you want - e.g. integer operations etc<newline46mondego>    // performing custom overflow/underflow on each operation<newline46mondego>}<newline46mondego>"
"4380splitHere46","9513899splitHere46","@EJB MyEJB myEJB;<newline46mondego>"
"4381splitHere46","9513901splitHere46","try {<newline46mondego>    client.connect(ftpServer);<newline46mondego>    client.login(username, password);<newline46mondego>    // following line fixed my zip file corruption issue.<newline46mondego>    client.setFileType(FTP.BINARY_FILE_TYPE);<newline46mondego>"
"4382splitHere46","9513960splitHere46","endingLineNbr = startingLineNbr + newLinesCount"
"4383splitHere46","9514212splitHere46",".java"
"4384splitHere46","9514297splitHere46","String str = parent.getSelectedItem().toString();<newline46mondego><newline46mondego>if(str.equals(<doubleQuotes46>hr2<doubleQuotes46>)<newline46mondego>{<newline46mondego>    spinner2.setEnabled(false);  <newline46mondego>}<newline46mondego>"
"4385splitHere46","9514443splitHere46","public static void main(String... args) throws Exception {<newline46mondego>    Map<String, Computable> functions = new HashMap<String, Computable>();<newline46mondego>    functions.put(<doubleQuotes46>y=x<doubleQuotes46>, new Computable() {public double compute(double x) {return x;}});<newline46mondego>    functions.put(<doubleQuotes46>y=x^2<doubleQuotes46>, new Computable() {public double compute(double x) {return x*x;}});<newline46mondego><newline46mondego>    for(Map.Entry<String, Computable> e : functions.entrySet()) {<newline46mondego>        System.out.println(e.getKey() + <doubleQuotes46>: <doubleQuotes46> + e.getValue().compute(5)); //prints: y=x: 5.0 then y=x^2: 25.0<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>interface Computable {<newline46mondego>    double compute(double x);<newline46mondego>}<newline46mondego>"
"4386splitHere46","9514509splitHere46","Base"
"4387splitHere46","9514509splitHere46","class Base {<newline46mondego>    public void foo();<newline46mondego>}<newline46mondego>"
"4388splitHere46","9514509splitHere46","Interface"
"4389splitHere46","9514509splitHere46","interface Interface {<newline46mondego>    public void bar();<newline46mondego>}<newline46mondego>"
"4390splitHere46","9514509splitHere46","class MyClass extends Base implements Interface {<newline46mondego>}<newline46mondego>"
"4391splitHere46","9514509splitHere46","MyClass"
"4392splitHere46","9514509splitHere46","bar"
"4393splitHere46","9514509splitHere46","Base"
"4394splitHere46","9514509splitHere46","foo"
"4395splitHere46","9514509splitHere46","Interface"
"4396splitHere46","9514509splitHere46","Interface"
"4397splitHere46","9514509splitHere46","Interface"
"4398splitHere46","9514509splitHere46","foo"
"4399splitHere46","9514509splitHere46","bar"
"4400splitHere46","9514509splitHere46","Base"
"4401splitHere46","9514509splitHere46","Interface"
"4402splitHere46","9514509splitHere46","Interface"
"4403splitHere46","9514509splitHere46","foo"
"4404splitHere46","9514509splitHere46","Base"
"4405splitHere46","9514509splitHere46","Interface"
"4406splitHere46","9514509splitHere46","Base"
"4407splitHere46","9514509splitHere46","class Base implements Interface {<newline46mondego>    public void foo();<newline46mondego>    public void bar();<newline46mondego>}<newline46mondego><newline46mondego>class MyClass extends Base {<newline46mondego>}<newline46mondego>"
"4408splitHere46","9514534splitHere46","switch"
"4409splitHere46","9514534splitHere46","case"
"4410splitHere46","9514534splitHere46","if"
"4411splitHere46","9514534splitHere46","else"
"4412splitHere46","9514534splitHere46","switch(sidevalue){<newline46mondego><newline46mondego>   case 1: st.grade = 1;<newline46mondego>            break;<newline46mondego>   case 2: st.grade = 2;<newline46mondego>            break;<newline46mondego>   case 5: st.grade = 3;<newline46mondego>            break;<newline46mondego>   default: break;<newline46mondego>}<newline46mondego>"
"4413splitHere46","9514534splitHere46","if-else"
"4414splitHere46","9514534splitHere46","switch"
"4415splitHere46","9514534splitHere46","switch"
"4416splitHere46","9514552splitHere46","doInBackground()"
"4417splitHere46","9514552splitHere46","onPostExecute(...)"
"4418splitHere46","9514599splitHere46","in eclipse select project <newline46mondego>    1:right click on project <newline46mondego>    2: select export<newline46mondego>    3:java then jar<newline46mondego>"
"4419splitHere46","9514611splitHere46","wait()"
"4420splitHere46","9514611splitHere46","wait()"
"4421splitHere46","9514611splitHere46","Executor"
"4422splitHere46","9514611splitHere46","wait()"
"4423splitHere46","9514611splitHere46","Thread.sleep()"
"4424splitHere46","9514611splitHere46","InterruptedException"
"4425splitHere46","9514611splitHere46","ExecutorService"
"4426splitHere46","9514611splitHere46","future.cancel()"
"4427splitHere46","9514611splitHere46","future"
"4428splitHere46","9514611splitHere46","ExecutorService"
"4429splitHere46","9514611splitHere46","pool.execute(new Runnable(){<newline46mondego>    try{<newline46mondego>        doSomethingAndCallMeBackWhenItsDone(new Callback() {<newline46mondego>            public void done() {<newline46mondego>                doSomethingElse();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }catch(Exception e){ throw new RunTimeException(e) } <newline46mondego><newline46mondego>});<newline46mondego>"
"4430splitHere46","9514611splitHere46","ExecutorService"
"4431splitHere46","9514611splitHere46","doSomethingElse()"
"4432splitHere46","9514611splitHere46","pool.execute(new Runnable(){<newline46mondego>    try{<newline46mondego>        doSomethingAndCallMeBackWhenItIsDone(new Callback() {<newline46mondego>            public void done() {<newline46mondego>                pool.submit(new Callbale<Void>() {<newline46mondego>                    public Void call() {<newline46mondego>                        doSomethingElse();<newline46mondego>                    }<newline46mondego>                }<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }catch(Exception e){ throw new RunTimeException(e) } <newline46mondego><newline46mondego>});<newline46mondego>"
"4433splitHere46","9514611splitHere46","pool.execute(new Runnable(){<newline46mondego>    try{<newline46mondego>        doSomethingAndCallMeBackWhenItsDone(new Callback() {<newline46mondego>            public void done() {<newline46mondego>                doSomethingElse();<newline46mondego>            }<newline46mondego>            public void timeout() {<newline46mondego>                //opps!<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }catch(Exception e){ throw new RunTimeException(e) } <newline46mondego><newline46mondego>});<newline46mondego>"
"4434splitHere46","9514611splitHere46","timeout()"
"4435splitHere46","9514686splitHere46","public class MyHttpTransportSE extends Transport<newline46mondego>"
"4436splitHere46","9514686splitHere46","public List call(String soapAction, SoapSerializationEnvelope envelope, List headers)<newline46mondego>     throws IOException, XmlPullParserException {<newline46mondego><newline46mondego>             if (soapAction == null)<newline46mondego>                     soapAction = <doubleQuotes46>\<doubleQuotes46>\<doubleQuotes46><doubleQuotes46>;<newline46mondego><newline46mondego>             byte[] requestData = createRequestData(envelope);<newline46mondego><newline46mondego>             requestDump = debug ? new String(requestData) : null;<newline46mondego>             responseDump = null;<newline46mondego><newline46mondego>             connection = getServiceConnection();<newline46mondego><newline46mondego>             connection.setRequestProperty(<doubleQuotes46>User-Agent<doubleQuotes46>, <doubleQuotes46>kSOAP/2.0<doubleQuotes46>);<newline46mondego>//           connection.setRequestProperty(<doubleQuotes46>SOAPAction<doubleQuotes46>, soapAction);<newline46mondego>//           connection.setRequestProperty(<doubleQuotes46>Content-Type<doubleQuotes46>, <doubleQuotes46>text/xml<doubleQuotes46>);<newline46mondego>             connection.setRequestProperty(<doubleQuotes46>Content-Type<doubleQuotes46>, <doubleQuotes46>application/soap+xml<doubleQuotes46>);<newline46mondego>             connection.setRequestProperty(<doubleQuotes46>Connection<doubleQuotes46>, <doubleQuotes46>close<doubleQuotes46>);<newline46mondego>             connection.setRequestProperty(<doubleQuotes46>Content-Length<doubleQuotes46>, <doubleQuotes46><doubleQuotes46> + requestData.length);<newline46mondego>"
"4437splitHere46","9514691splitHere46","public static void search() {<newline46mondego>    String name = params.get(<doubleQuotes46>name<doubleQuotes46>);<newline46mondego>    String[] tags = params.getAll(<doubleQuotes46>tags<doubleQuotes46>);<newline46mondego>    // ... etc ...<newline46mondego>}<newline46mondego>"
"4438splitHere46","9514919splitHere46","<br/>"
"4439splitHere46","9514919splitHere46","<td>"
"4440splitHere46","9514919splitHere46","Title:<newline46mondego>Dish:<newline46mondego>Description:<newline46mondego>Price:<newline46mondego><newline46mondego>text<newline46mondego>text<newline46mondego>text<newline46mondego>text<newline46mondego>"
"4441splitHere46","9514919splitHere46","<table border=0 width=<doubleQuotes46>75%<doubleQuotes46>><newline46mondego><newline46mondego><thead><newline46mondego>    <tr><newline46mondego>        <th>Title</th><newline46mondego>        <th>Dish</th><newline46mondego>        <th>Description</th><newline46mondego>        <th>Price</th><newline46mondego>    </tr><newline46mondego></thead><newline46mondego><%<newline46mondego>            for (int pos = 0; pos < list.size(); pos++) {<newline46mondego>                Menu menu = list.getMenuAt(pos);<newline46mondego>%><newline46mondego><newline46mondego><tbody><newline46mondego>    <tr><newline46mondego>        <td><%= menu.getTitle()%></td><newline46mondego>        <td><%= menu.getDish()%></td><newline46mondego>        <td><%= menu.getDescription()%></td><newline46mondego>        <td><%= menu.getPrice()%></td><newline46mondego>     </tr><newline46mondego></tbody><newline46mondego><newline46mondego><%<newline46mondego>            } // end for<newline46mondego>%><newline46mondego>"
"4442splitHere46","9515034splitHere46","*.java"
"4443splitHere46","9515167splitHere46","ball.getBounds2D() == player.getBounds2D()<newline46mondego>"
"4444splitHere46","9515167splitHere46","ball.getBounds2D().intersects(player.getBounds2D())<newline46mondego>"
"4445splitHere46","9515181splitHere46","HSSFRow row = sheet.createRow((short) 0 + k)<newline46mondego>"
"4446splitHere46","9515187splitHere46","fillStack.push(new Point(x, y - 1));<newline46mondego>System.out.println(<doubleQuotes46>Pushing <doubleQuotes46> + currentPoint.x + <doubleQuotes46> <doubleQuotes46> + (currentPoint.y - 1));<newline46mondego>"
"4447splitHere46","9515273splitHere46","public class MyRenderer ....<newline46mondego>    JProgressBar determinate;<newline46mondego>    JProgressBar indeterminate; <newline46mondego><newline46mondego>    public Component getTableCellRendererComponent(...) {<newline46mondego>         if (value.isDeterminate) {<newline46mondego>           ...<newline46mondego>           return determinate;<newline46mondego>         }<newline46mondego>         ....<newline46mondego>         return undeterminate<newline46mondego>    } <newline46mondego>"
"4448splitHere46","9515369splitHere46","private static final BigInteger MASK = BigInteger.valueOf(0xffffffff)<newline46mondego>                                                 .shiftLeft(32);<newline46mondego><newline46mondego>...<newline46mondego><newline46mondego>public static boolean top32BitsSet(BigInteger value) {<newline46mondego>    return value.and(MASK).equals(MASK);<newline46mondego>}<newline46mondego>"
"4449splitHere46","9515419splitHere46","executeUpdate"
"4450splitHere46","9515419splitHere46","getResultList()"
"4451splitHere46","9515419splitHere46","getUniqueResult()"
"4452splitHere46","9515419splitHere46","LockMode.NONE"
"4453splitHere46","9515419splitHere46","<persistence xmlns=<doubleQuotes46>http://java.sun.com/xml/ns/persistence<doubleQuotes46><newline46mondego>             xmlns:xsi=<doubleQuotes46>http://www.w3.org/2001/XMLSchema-instance<doubleQuotes46><newline46mondego>             xsi:schemaLocation=<doubleQuotes46>http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd<doubleQuotes46><newline46mondego>             version=<doubleQuotes46>2.0<doubleQuotes46>><newline46mondego>   <persistence-unit name=<doubleQuotes46>sample<doubleQuotes46> transaction-type=<doubleQuotes46>JTA<doubleQuotes46>><newline46mondego>      <jta-data-source>java:/DefaultDS</jta-data-source><newline46mondego>      <properties><newline46mondego>         <property name=<doubleQuotes46>hibernate.dialect<doubleQuotes46> value=<doubleQuotes46>org.hibernate.dialect.HSQLDialect<doubleQuotes46>/><newline46mondego>         <property name=<doubleQuotes46>hibernate.hbm2ddl.auto<doubleQuotes46> value=<doubleQuotes46>create-drop<doubleQuotes46>/><newline46mondego>      </properties><newline46mondego>   </persistence-unit><newline46mondego></persistence><newline46mondego>"
"4454splitHere46","9515419splitHere46","@ TransactionAttribute(TransactionAttributeType.REQUIRED)<newline46mondego>public void doSomething() {<newline46mondego>    em.createQuery(<doubleQuotes46>DELETE FROM something WHERE something = something<doubleQuotes46>).executeUpdate();<newline46mondego>}<newline46mondego>"
"4455splitHere46","9515419splitHere46","public void doSomething() throws Exception {<newline46mondego>    em.getTransaction().begin();<newline46mondego><newline46mondego>    try {<newline46mondego>        em.createQuery(<doubleQuotes46>DELETE FROM something WHERE something = something<doubleQuotes46>).executeUpdate();<newline46mondego>    } catch(Exception e) {<newline46mondego>        em.getTransaction().setRollbackOnly();<newline46mondego>    } finally {<newline46mondego>        em.getTransaction().commit();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4456splitHere46","9515420splitHere46","for (int i = 0; i < ids.length; i++) {<newline46mondego>  String identifier = <doubleQuotes46>contact<doubleQuotes46> + String.format(<doubleQuotes46>%02s<doubleQuotes46>, i+1) + <doubleQuotes46>Button<doubleQuotes46>;<newline46mondego><newline46mondego>  // next line taken from louiscoquio's answers. Credits go to him!<newline46mondego>  int id = getResources().getIdentifier(identifier, <doubleQuotes46>drawable<doubleQuotes46>, theContext.getPackageName());<newline46mondego><newline46mondego>  views.setImageViewBitmap(id, data.get(i).getFriendImage());<newline46mondego>}<newline46mondego>"
"4457splitHere46","9515425splitHere46","MyPluginEnhancer extends play.classloading.enhancers.Enhancer"
"4458splitHere46","9515425splitHere46","makeClass(ApplicationClass appClass)"
"4459splitHere46","9515425splitHere46","play.classloading.enhancers.Enhancer.makeClass"
"4460splitHere46","9515425splitHere46","/**<newline46mondego> * Construct a javassist CtClass from an application class.<newline46mondego> */<newline46mondego>public CtClass makeClass(ApplicationClass applicationClass) throws IOException {<newline46mondego>    return classPool.makeClass(new ByteArrayInputStream(applicationClass.enhancedByteCode));<newline46mondego>}<newline46mondego>"
"4461splitHere46","9515425splitHere46","classPool"
"4462splitHere46","9515425splitHere46","public Enhancer() {<newline46mondego>    this.classPool = newClassPool();<newline46mondego>}<newline46mondego><newline46mondego>public static ClassPool newClassPool() {<newline46mondego>    ClassPool classPool = new ClassPool();<newline46mondego>    classPool.appendSystemPath();<newline46mondego>    classPool.appendClassPath(new LoaderClassPath(Enhancer.class.getClassLoader()));<newline46mondego>    classPool.appendClassPath(new ApplicationClassesClasspath());<newline46mondego>    return classPool;<newline46mondego>}<newline46mondego>"
"4463splitHere46","9515444splitHere46","disp"
"4464splitHere46","9515464splitHere46","String input = <doubleQuotes46>2012-03-03T10:00:00.890+05:30<doubleQuotes46>;<newline46mondego>"
"4465splitHere46","9515464splitHere46","input"
"4466splitHere46","9515464splitHere46",": colon"
"4467splitHere46","9515464splitHere46","+05:30"
"4468splitHere46","9515464splitHere46","DateFormat oldFormat = new SimpleDateFormat(<doubleQuotes46>yyyy-MM-dd'T'HH:mm:ss.SSSZ<doubleQuotes46>);<newline46mondego>DateFormat newFormat = new SimpleDateFormat(<doubleQuotes46>dd MMMMM yyyy hha<doubleQuotes46>);<newline46mondego><newline46mondego>String dateStr = newFormat.format(oldFormat.parse(input));<newline46mondego>"
"4469splitHere46","9515546splitHere46","Pattern p = Pattern.compile(<doubleQuotes46>.*,\\s*(.*)<doubleQuotes46>);<newline46mondego>Matcher m = p.matcher(<doubleQuotes46>abcd,fg;ijkl, cas<doubleQuotes46>);<newline46mondego><newline46mondego>if (m.find())<newline46mondego>    System.out.println(m.group(1));<newline46mondego>"
"4470splitHere46","9515546splitHere46","cas<newline46mondego>"
"4471splitHere46","9515546splitHere46","String"
"4472splitHere46","9515546splitHere46","System.out.println(s.substring(s.lastIndexOf(<doubleQuotes46>,<doubleQuotes46>) + 1).trim());"
"4473splitHere46","9515546splitHere46","System.out.println(s.substring(s.lastIndexOf(<doubleQuotes46>, <doubleQuotes46>) + 2));"
"4474splitHere46","9515563splitHere46","selectedUser"
"4475splitHere46","9515563splitHere46","@ViewScoped"
"4476splitHere46","9515638splitHere46","default.properties which is the main projectâ€™s properties file containing information such as the build platform target and the library dependencies has been renamed project.properties."
"4477splitHere46","9515676splitHere46","JFreeChart"
"4478splitHere46","9515676splitHere46","Batik"
"4479splitHere46","9515676splitHere46","JFreeSVG"
"4480splitHere46","9515676splitHere46","JFreeSVG"
"4481splitHere46","9515932splitHere46","WebView"
"4482splitHere46","9515932splitHere46","JavaScriptInterface jsInterface = new JavaScriptInterface(this);<newline46mondego>webView.getSettings().setJavaScriptEnabled(true);<newline46mondego>webView.addJavascriptInterface(jsInterface, <doubleQuotes46>JSInterface<doubleQuotes46>);<newline46mondego>"
"4483splitHere46","9515932splitHere46","public class JavaScriptInterface {<newline46mondego>    private Activity activity;<newline46mondego><newline46mondego>    public JavaScriptInterface(Activity activiy) {<newline46mondego>        this.activity = activiy;<newline46mondego>    }<newline46mondego><newline46mondego>    public void startVideo(String videoAddress){<newline46mondego>        Intent intent = new Intent(Intent.ACTION_VIEW);<newline46mondego>        intent.setDataAndType(Uri.parse(videoAddress), <doubleQuotes46>video/3gpp<doubleQuotes46>); // The Mime type can actually be determined from the file<newline46mondego>        activity.startActivity(intent);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4484splitHere46","9515932splitHere46","<script><newline46mondego>  function playVideo(video){<newline46mondego>    window.JSInterface.startVideo(video);<newline46mondego>  }<newline46mondego></script><newline46mondego>"
"4485splitHere46","9515932splitHere46","JSInterface"
"4486splitHere46","9516115splitHere46","/**<newline46mondego>* Value class that wraps all report configuration.<newline46mondego>*<newline46mondego>* @parameter default-value=<doubleQuotes46>${classObject}<doubleQuotes46><newline46mondego>*/<newline46mondego>private MyClass classObject;<newline46mondego>"
"4487splitHere46","9516227splitHere46","btn = new Button(this);<newline46mondego> btn.setText(<doubleQuotes46>Hello Button<doubleQuotes46>);<newline46mondego> RelativeLayout.LayoutParams paramsd = new RelativeLayout.LayoutParams(LayoutParams.WRAP_CONT ENT,LayoutParams.WRAP_CONTENT);<newline46mondego> paramsd.height = 60;<newline46mondego> paramsd.width = 60;<newline46mondego> btn.setLayoutParams(paramsd);<newline46mondego> addContentView(btn,paramsd);<newline46mondego>"
"4488splitHere46","9516227splitHere46","import android.widget.Button;<newline46mondego>"
"4489splitHere46","9516227splitHere46","Button b = new Button(this);<newline46mondego>    b.setText(<doubleQuotes46>Button added dynamically!<doubleQuotes46>);<newline46mondego>    b.setLayoutParams(new LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT));<newline46mondego>    b.setId(MY_BUTTON);<newline46mondego>    b.setOnClickListener(this);<newline46mondego>    ll.addView(b);<newline46mondego>"
"4490splitHere46","9516227splitHere46","LinearLayout linearLayout = new LinearLayout(this);"
"4491splitHere46","9516227splitHere46","Button"
"4492splitHere46","9516227splitHere46","Button btn = new Button(this);<newline46mondego> btn.setText(<doubleQuotes46>Just another button<doubleQuotes46>);<newline46mondego> linearLayout.addView(btn);<newline46mondego>"
"4493splitHere46","9516227splitHere46","final Button button = new Button(this);<newline46mondego>    button.setText(<doubleQuotes46>Press me!<doubleQuotes46>);<newline46mondego>    setContentView(button);<newline46mondego><newline46mondego>    button.setOnClickListener(new View.OnClickListener() {<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void onClick(View v) {<newline46mondego>            // TODO Auto-generated method stub<newline46mondego><newline46mondego>        }<newline46mondego>    });<newline46mondego>"
"4494splitHere46","9516242splitHere46","contains()"
"4495splitHere46","9516242splitHere46","String.contains()"
"4496splitHere46","9516242splitHere46","String.indexOf()"
"4497splitHere46","9516242splitHere46","apple|orange|pear|banana|kiwi<newline46mondego>"
"4498splitHere46","9516242splitHere46","|"
"4499splitHere46","9516242splitHere46","OR"
"4500splitHere46","9516242splitHere46","public class TestContains {<newline46mondego><newline46mondego>   private static String containsWord(Set<String> words,String sentence) {<newline46mondego>     for (String word : words) {<newline46mondego>       if (sentence.contains(word)) {<newline46mondego>         return word;<newline46mondego>       }<newline46mondego>     }<newline46mondego><newline46mondego>     return null;<newline46mondego>   }<newline46mondego><newline46mondego>   private static String matchesPattern(Pattern p,String sentence) {<newline46mondego>     Matcher m = p.matcher(sentence);<newline46mondego><newline46mondego>     if (m.find()) {<newline46mondego>       return m.group();<newline46mondego>     }<newline46mondego><newline46mondego>     return null;<newline46mondego>   }<newline46mondego><newline46mondego>   public static void main(String[] args) {<newline46mondego>     Set<String> words = new HashSet<String>();<newline46mondego>     words.add(<doubleQuotes46>apple<doubleQuotes46>);<newline46mondego>     words.add(<doubleQuotes46>orange<doubleQuotes46>);<newline46mondego>     words.add(<doubleQuotes46>pear<doubleQuotes46>);<newline46mondego>     words.add(<doubleQuotes46>banana<doubleQuotes46>);<newline46mondego>     words.add(<doubleQuotes46>kiwi<doubleQuotes46>);<newline46mondego><newline46mondego>     Pattern p = Pattern.compile(<doubleQuotes46>apple|orange|pear|banana|kiwi<doubleQuotes46>);<newline46mondego><newline46mondego>     String noMatch = <doubleQuotes46>The quick brown fox jumps over the lazy dog.<doubleQuotes46>;<newline46mondego>     String startMatch = <doubleQuotes46>An apple is nice<doubleQuotes46>;<newline46mondego>     String endMatch = <doubleQuotes46>This is a longer sentence with the match for our fruit at the end: kiwi<doubleQuotes46>;<newline46mondego><newline46mondego>     long start = System.currentTimeMillis();<newline46mondego>     int iterations = 10000000;<newline46mondego><newline46mondego>     for (int i = 0; i < iterations; i++) {<newline46mondego>       containsWord(words, noMatch);<newline46mondego>       containsWord(words, startMatch);<newline46mondego>       containsWord(words, endMatch);<newline46mondego>     }<newline46mondego><newline46mondego>     System.out.println(<doubleQuotes46>Contains took <doubleQuotes46> + (System.currentTimeMillis() - start) + <doubleQuotes46>ms<doubleQuotes46>);<newline46mondego>     start = System.currentTimeMillis();<newline46mondego><newline46mondego>     for (int i = 0; i < iterations; i++) {<newline46mondego>       matchesPattern(p,noMatch);<newline46mondego>       matchesPattern(p,startMatch);<newline46mondego>       matchesPattern(p,endMatch);<newline46mondego>     }<newline46mondego><newline46mondego>     System.out.println(<doubleQuotes46>Regular Expression took <doubleQuotes46> + (System.currentTimeMillis() - start) + <doubleQuotes46>ms<doubleQuotes46>);<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"4501splitHere46","9516242splitHere46","Contains took 5962ms<newline46mondego>Regular Expression took 63475ms<newline46mondego>"
"4502splitHere46","9516242splitHere46","contains()"
"4503splitHere46","9516242splitHere46","indexOf()"
"4504splitHere46","9516242splitHere46","contains()"
"4505splitHere46","9516242splitHere46","pear"
"4506splitHere46","9516242splitHere46","spears"
"4507splitHere46","9516242splitHere46","\b(apple|orange|pear|banana|kiwi)\b<newline46mondego>"
"4508splitHere46","9516242splitHere46","\b"
"4509splitHere46","9516242splitHere46","Pattern p = Pattern.compile(<doubleQuotes46>\\b(apple|orange|pear|banana|kiwi)\\b<doubleQuotes46>);<newline46mondego>"
"4510splitHere46","9516385splitHere46","Fisc"
"4511splitHere46","9516385splitHere46","Deposit"
"4512splitHere46","9516385splitHere46","Fisc"
"4513splitHere46","9516385splitHere46","Deposit"
"4514splitHere46","9516392splitHere46","Window window = dialog.getWindow();<newline46mondego>        window.setFlags(WindowManager.LayoutParams.FLAG_NOT_TOUCH_MODAL,<newline46mondego>                WindowManager.LayoutParams.FLAG_NOT_TOUCH_MODAL);<newline46mondego>        window.clearFlags(WindowManager.LayoutParams.FLAG_DIM_BEHIND);<newline46mondego><newline46mondego>        dialog.show();<newline46mondego>"
"4515splitHere46","9516533splitHere46","String"
"4516splitHere46","9516597splitHere46","public static char[][] readFile() {<newline46mondego>    char[][] firstDimension = null;<newline46mondego>    try {<newline46mondego>        List<String> list = new ArrayList<String>();<newline46mondego><newline46mondego>        String thisLine = null;<newline46mondego>        BufferedReader br;<newline46mondego>        br = new BufferedReader(new FileReader(<doubleQuotes46>map.txt<doubleQuotes46>));<newline46mondego><newline46mondego>        while ((thisLine = br.readLine()) != null) {<newline46mondego>            list.add(thisLine);<newline46mondego>        }<newline46mondego><newline46mondego>        firstDimension = new char[list.size()][];<newline46mondego>        for (int i = 0; i < list.size(); i++) {<newline46mondego>            firstDimension[i] = list.get(i).toCharArray();<newline46mondego>        }<newline46mondego><newline46mondego>        for (int i=0; i < firstDimension.length; i++) {<newline46mondego>            for (int j=0; j < firstDimension[i].length; j++) {<newline46mondego>                System.out.print(firstDimension[i][j]);<newline46mondego>            }<newline46mondego>            System.out.println();<newline46mondego>        }<newline46mondego>    } catch (Exception e) {<newline46mondego>        e.printStackTrace();<newline46mondego>    }<newline46mondego><newline46mondego>    return firstDimension;<newline46mondego>}<newline46mondego>"
"4517splitHere46","9516604splitHere46","String xml = rs.getString(1)<newline46mondego>"
"4518splitHere46","9516672splitHere46","String insert = <doubleQuotes46>INSERT INTO customer(name,address,email) VALUES(?, ?, ?);<doubleQuotes46>;<newline46mondego>PreparedStatement ps = connection.prepareStatement(insert);<newline46mondego>ps.setString(1, name);<newline46mondego>ps.setString(2, addre);<newline46mondego>ps.setString(3, email);<newline46mondego><newline46mondego>ResultSet rs = ps.executeQuery();<newline46mondego>"
"4519splitHere46","9516822splitHere46","LinkedList<T>"
"4520splitHere46","9516822splitHere46","import java.util.LinkedList;<newline46mondego><newline46mondego>public class Test {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        LinkedList<String> list = new LinkedList<String>();<newline46mondego>        list.add(<doubleQuotes46>x<doubleQuotes46>);<newline46mondego>        list.add(<doubleQuotes46>y<doubleQuotes46>);<newline46mondego>        list = (LinkedList<String>) list.subList(1, 2);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4521splitHere46","9516822splitHere46","Exception in thread <doubleQuotes46>main<doubleQuotes46> java.lang.ClassCastException: java.util.SubList<newline46mondego>    cannot be cast to java.util.LinkedList<newline46mondego>    at Test.main(Test.java:8)<newline46mondego>"
"4522splitHere46","9516822splitHere46","removeFirst"
"4523splitHere46","9516822splitHere46","while (list.size() > maxSize) {<newline46mondego>    list.removeFirst();<newline46mondego>}<newline46mondego>"
"4524splitHere46","9516937splitHere46","# Root logger option<newline46mondego>log4j.rootLogger=**ERROR**, file<newline46mondego># Direct log messages to a log file<newline46mondego>log4j.appender.file=org.apache.log4j.RollingFileAppender<newline46mondego>log4j.appender.file.File=C:\\mylogging.log<newline46mondego>log4j.appender.file.MaxFileSize=1MB<newline46mondego>log4j.appender.file.MaxBackupIndex=1<newline46mondego>log4j.appender.file.layout=org.apache.log4j.PatternLayout<newline46mondego>log4j.appender.file.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L - %m%n<newline46mondego>"
"4525splitHere46","9517004splitHere46","<context:component-scan base-package=<doubleQuotes46>package_name<doubleQuotes46> />"
"4526splitHere46","9517004splitHere46","Spring Tools -> add java nature"
"4527splitHere46","9517004splitHere46","context:component-scan"
"4528splitHere46","9517015splitHere46","Link"
"4529splitHere46","9517015splitHere46",".next"
"4530splitHere46","9517015splitHere46","Link"
"4531splitHere46","9517015splitHere46",".next = null"
"4532splitHere46","9517015splitHere46","LinkList"
"4533splitHere46","9517015splitHere46",".first"
"4534splitHere46","9517015splitHere46","Link"
"4535splitHere46","9517015splitHere46","Link"
"4536splitHere46","9517015splitHere46","LinkList"
"4537splitHere46","9517015splitHere46","Link"
"4538splitHere46","9517015splitHere46","newLink"
"4539splitHere46","9517015splitHere46","Link"
"4540splitHere46","9517015splitHere46","Link"
"4541splitHere46","9517015splitHere46",".next"
"4542splitHere46","9517015splitHere46",".first"
"4543splitHere46","9517015splitHere46","LinkList"
"4544splitHere46","9517015splitHere46","newLink"
"4545splitHere46","9517015splitHere46","public void insertFirst(int id, double dd) {<newline46mondego>    Link newLink = new Link(id, dd);<newline46mondego>    newLink.next = first;<newline46mondego>    first = newLink;<newline46mondego>}<newline46mondego>"
"4546splitHere46","9517155splitHere46","inputUML"
"4547splitHere46","9517155splitHere46","initGUI()"
"4548splitHere46","9517155splitHere46","strings()"
"4549splitHere46","9517181splitHere46","static final boolean DEBUG = false;<newline46mondego>"
"4550splitHere46","9517181splitHere46","if (DEBUG) { x=3; }<newline46mondego>"
"4551splitHere46","9517281splitHere46","MenuList"
"4552splitHere46","9517281splitHere46","ResultSet"
"4553splitHere46","9517281splitHere46","MenuList"
"4554splitHere46","9517281splitHere46","MenuList"
"4555splitHere46","9517281splitHere46","ResultSet"
"4556splitHere46","9517281splitHere46","rs"
"4557splitHere46","9517281splitHere46","ResultSet"
"4558splitHere46","9517281splitHere46","rs.next()"
"4559splitHere46","9517281splitHere46","while"
"4560splitHere46","9517281splitHere46","MenuList"
"4561splitHere46","9517281splitHere46","MenuList list = null;<newline46mondego>while (rs.next()) {<newline46mondego>    list = new MenuList(rs);<newline46mondego>    System.out.println(rs.getRow());<newline46mondego>}<newline46mondego>"
"4562splitHere46","9517281splitHere46","MenuList list = new MenuList(rs);<newline46mondego>"
"4563splitHere46","9517397splitHere46","JTable"
"4564splitHere46","9517397splitHere46","setLayoutOrientation(int)"
"4565splitHere46","9517492splitHere46","formatter.setTimeZone(TimeZone.getTimeZone(<doubleQuotes46>UTC<doubleQuotes46>));<newline46mondego>"
"4566splitHere46","9517636splitHere46","StringEscapeUtils.escapeHtml"
"4567splitHere46","9517636splitHere46","replaceAll"
"4568splitHere46","9517636splitHere46","<div attr=some_value>"
"4569splitHere46","9517636splitHere46","href"
"4570splitHere46","9517690splitHere46","foo.war"
"4571splitHere46","9517690splitHere46","bar/"
"4572splitHere46","9517690splitHere46","server.xml"
"4573splitHere46","9517690splitHere46","context.xml"
"4574splitHere46","9517690splitHere46","<Context path=<doubleQuotes46>/bar<doubleQuotes46> .../><newline46mondego>"
"4575splitHere46","9517690splitHere46","context.xml"
"4576splitHere46","9517690splitHere46","/conf/Catalina/localhost"
"4577splitHere46","9517690splitHere46","foo.xml"
"4578splitHere46","9517690splitHere46","autoDeploy"
"4579splitHere46","9517690splitHere46","deployOnStartup"
"4580splitHere46","9517690splitHere46","foo-1.1.0"
"4581splitHere46","9517690splitHere46","foo/version1"
"4582splitHere46","9517798splitHere46","read"
"4583splitHere46","9517798splitHere46","Reader"
"4584splitHere46","9517798splitHere46","FileReader"
"4585splitHere46","9517798splitHere46","Reader"
"4586splitHere46","9517798splitHere46","FileReader inputStream = null;<newline46mondego>FileWriter outputStream = null;<newline46mondego><newline46mondego>try {<newline46mondego>    inputStream =<newline46mondego>        new FileReader(<doubleQuotes46>inputfile.txt<doubleQuotes46>);<newline46mondego>    outputStream =<newline46mondego>        new FileWriter(<doubleQuotes46>outputfile.txt<doubleQuotes46>);<newline46mondego><newline46mondego>    int c;<newline46mondego>    int counter = 1;<newline46mondego>    while ((c = inputStream.read()) != -1) {<newline46mondego>        //keep a counter that will cycle for 12 characters<newline46mondego>        //check if c represents a alphabet or number, write it to file else skip <newline46mondego>        //when counter is 12 write a newline<newline46mondego>        outputStream.write(c);<newline46mondego>    }<newline46mondego>} finally {<newline46mondego>    if (inputStream != null) {<newline46mondego>        inputStream.close();<newline46mondego>    }<newline46mondego>    if (outputStream != null) {<newline46mondego>        outputStream.close();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4587splitHere46","9517848splitHere46","if (!discoverySocket.getBroadcast()) discoverySocket.setBroadcast(true);<newline46mondego>"
"4588splitHere46","9517916splitHere46","List<Object[]>"
"4589splitHere46","9517916splitHere46","Object[]"
"4590splitHere46","9517916splitHere46","select r from Restaurant r where id = :id<newline46mondego>"
"4591splitHere46","9518013splitHere46","ImmutableList.copyOf"
"4592splitHere46","9518013splitHere46","Builder"
"4593splitHere46","9518013splitHere46","Builder"
"4594splitHere46","9518013splitHere46","ImmutableList.copyOf"
"4595splitHere46","9518013splitHere46","Builder#addAll"
"4596splitHere46","9518013splitHere46","addAll"
"4597splitHere46","9518013splitHere46","ArrayList"
"4598splitHere46","9518013splitHere46","copyOf"
"4599splitHere46","9518013splitHere46","copyOf(Collection)"
"4600splitHere46","9518013splitHere46","ArrayList"
"4601splitHere46","9518013splitHere46","copyOf(Iterable)"
"4602splitHere46","9518013splitHere46","copyOf(Iterator)"
"4603splitHere46","9518013splitHere46","Builder#build"
"4604splitHere46","9518013splitHere46","copyOf"
"4605splitHere46","9518013splitHere46","ArrayList"
"4606splitHere46","9518013splitHere46","Builder"
"4607splitHere46","9518013splitHere46","copyOf"
"4608splitHere46","9518013splitHere46","ImmutableList.builder()"
"4609splitHere46","9518013splitHere46","new ImmutableList.Builder<Blah>()"
"4610splitHere46","9518013splitHere46","Builder<Blah>"
"4611splitHere46","9518090splitHere46","final DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();<newline46mondego>final DocumentBuilder db = dbf.newDocumentBuilder();<newline46mondego>final Document doc = db.parse(new File(filename));<newline46mondego>"
"4612splitHere46","9518217splitHere46","for(i=1;i<6;i++)"
"4613splitHere46","9518217splitHere46","for(i=0;i<5;i++)"
"4614splitHere46","9518380splitHere46","// @formatter:off<newline46mondego>for (initialization;<newline46mondego>  expression;<newline46mondego>  update/counter)<newline46mondego>// @formatter:on<newline46mondego>{<newline46mondego>  //code...<newline46mondego>}<newline46mondego>"
"4615splitHere46","9518630splitHere46","AmazonS3 s3client = new AmazonS3Client(new PropertiesCredentials(<newline46mondego>        S3Sample.class.getResourceAsStream(<newline46mondego>                <doubleQuotes46>AwsCredentials.properties<doubleQuotes46>)));<newline46mondego>try {<newline46mondego>    System.out.println(<doubleQuotes46>Uploading a new object to S3 from a file\n<doubleQuotes46>);<newline46mondego>    File file = new File(uploadFileName);<newline46mondego>    s3client.putObject(new PutObjectRequest(<newline46mondego>                             bucketName, keyName, file));<newline46mondego><newline46mondego> } catch (AmazonServiceException ase) {<newline46mondego>    System.out.println(<doubleQuotes46>Caught an AmazonServiceException, which <doubleQuotes46> +<newline46mondego>            <doubleQuotes46>means your request made it <doubleQuotes46> +<newline46mondego>            <doubleQuotes46>to Amazon S3, but was rejected with an error response<doubleQuotes46> +<newline46mondego>            <doubleQuotes46> for some reason.<doubleQuotes46>);<newline46mondego>    // ... error handling based on exception details<newline46mondego>}<newline46mondego>"
"4616splitHere46","9518644splitHere46","public static <T> ArrayList<T> GetListFromXml(String url,String element, Class<? extends T> type) {<newline46mondego>  T obj = type.newInstance();<newline46mondego>  ...<newline46mondego>}<newline46mondego>"
"4617splitHere46","9518644splitHere46","getConstructor(parameter type 1, ...)"
"4618splitHere46","9518644splitHere46","MyParamType1 param1 = ...;<newline46mondego>MyParamType2 param2 = ...;<newline46mondego>Constructor<T> cons = type.getConstructor(MyParamType1.class, MyParamType2.class);<newline46mondego>T obj = const.newInstance(param1, param2);<newline46mondego>"
"4619splitHere46","9518679splitHere46","READ COMMITTED"
"4620splitHere46","9518679splitHere46","READ UNCOMMITTED"
"4621splitHere46","9518922splitHere46","SWT.Resize"
"4622splitHere46","9518922splitHere46","Display"
"4623splitHere46","9518922splitHere46","Display"
"4624splitHere46","9518922splitHere46","Filter"
"4625splitHere46","9518922splitHere46","public class MyControl extends Composite<newline46mondego>{<newline46mondego>    private final Listener focusListener;<newline46mondego><newline46mondego>    public MyControl(final Composite parent, final int style)<newline46mondego>    {<newline46mondego>        /* initialize the control... */<newline46mondego><newline46mondego>        focusListener = new Listener()<newline46mondego>        {<newline46mondego>            public void handleEvent(Event event)<newline46mondego>            {<newline46mondego>                if (!(event.widget instanceof Control))<newline46mondego>                {<newline46mondego>                    return;<newline46mondego>                }<newline46mondego><newline46mondego>                boolean isOurChild = false;<newline46mondego>                for (Control c = (Control) event.widget; c != null; c = c.getParent())<newline46mondego>                {<newline46mondego>                    if (c == container)<newline46mondego>                    {<newline46mondego>                        isOurChild = true;<newline46mondego>                        break;<newline46mondego>                    }<newline46mondego>                }<newline46mondego><newline46mondego>                if (isOurChild)<newline46mondego>                {<newline46mondego>                    System.out.println(<doubleQuotes46>Our child is <doubleQuotes46> + (event.type == SWT.FocusIn ? <doubleQuotes46>focused<doubleQuotes46> : <doubleQuotes46>unfocused<doubleQuotes46>));<newline46mondego>                }<newline46mondego>            }<newline46mondego>        };<newline46mondego><newline46mondego>        getDisplay().addFilter(SWT.FocusIn, focusListener);<newline46mondego>        getDisplay().addFilter(SWT.FocusOut, focusListener);<newline46mondego><newline46mondego>        addDisposeListener(new DisposeListener()<newline46mondego>        {<newline46mondego>            public void widgetDisposed(DisposeEvent e)<newline46mondego>            {<newline46mondego>                getDisplay().removeFilter(SWT.FocusIn, focusListener);<newline46mondego>                getDisplay().removeFilter(SWT.FocusOut, focusListener);<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4626splitHere46","9518922splitHere46","Display"
"4627splitHere46","9519038splitHere46","Thread.currentThread().interrupt();<newline46mondego>"
"4628splitHere46","9519038splitHere46","Thread trx = new Thread(clTh);<newline46mondego>Thread ttx = new Thread(csTh);<newline46mondego><newline46mondego>trx.start();<newline46mondego>ttx.start();<newline46mondego>while(trx.isAlive()) {<newline46mondego>    Thread.currentThread().sleep(1000);<newline46mondego>}<newline46mondego><newline46mondego>while(ttx.isAlive()) {<newline46mondego>    ttx.interrupt();<newline46mondego>    Thread.currentThread().sleep(1000);<newline46mondego>}<newline46mondego>"
"4629splitHere46","9519038splitHere46","in.readLine()"
"4630splitHere46","9519163splitHere46","Toolkit.getDefaultToolkit().getImage(getClass().getResource(path))<newline46mondego>"
"4631splitHere46","9519163splitHere46","Relative: ressources/images/treasure1.jpg<newline46mondego>Absolute: /org/you/ressources/images/treasure1.jpg<newline46mondego>"
"4632splitHere46","9519244splitHere46","public <T> List<List<T>> zip(List<T> ... lists) {<newline46mondego><newline46mondego>    if(lists.isEmpty()) {<newline46mondego>        return Collections.<List<T>>emptyList();<newline46mondego>    }<newline46mondego><newline46mondego>    // validate that the input lists are all the same size.<newline46mondego>    int numItems = lists[0].size();<newline46mondego>    for(int i = 1; i < lists.length; i++) {<newline46mondego>        if(lists[i].size() != numItems) {<newline46mondego>            throw new IllegalArgumentException(<doubleQuotes46>non-uniform-length list at index <doubleQuotes46> + i);<newline46mondego>        }<newline46mondego>    } <newline46mondego><newline46mondego>    List<List<T>> result = new ArrayList<List<T>>();<newline46mondego><newline46mondego>    for(int i = 0; i < numItems; i++) {<newline46mondego><newline46mondego>        // create a tuple of the i-th entries of each list<newline46mondego>        List<T> tuple = new ArrayList<T>(lists.length);<newline46mondego>        for(List<T> list : lists) {<newline46mondego>            tuple.add(list.get(i));<newline46mondego>        }<newline46mondego><newline46mondego>        // add the tuple to the result<newline46mondego>        result.add(tuple);<newline46mondego>    }<newline46mondego><newline46mondego>    return result;<newline46mondego>}<newline46mondego>"
"4633splitHere46","9519389splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>utf-8<doubleQuotes46>?><newline46mondego><RelativeLayout xmlns:android=<doubleQuotes46>http://schemas.android.com/apk/res/android<doubleQuotes46><newline46mondego>    android:id=<doubleQuotes46>@+id/linearLayout1<doubleQuotes46><newline46mondego>    android:layout_width=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>    android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46> ><newline46mondego><newline46mondego>    <ImageView<newline46mondego>        android:id=<doubleQuotes46>@+id/imageView1<doubleQuotes46><newline46mondego>        android:layout_width=<doubleQuotes46>85dp<doubleQuotes46><newline46mondego>        android:layout_height=<doubleQuotes46>85dp<doubleQuotes46><newline46mondego>        android:src=<doubleQuotes46>@drawable/ic_launcher<doubleQuotes46> ><newline46mondego>    </ImageView><newline46mondego><newline46mondego>    <LinearLayout<newline46mondego>        android:id=<doubleQuotes46>@+id/linearLayout2<doubleQuotes46><newline46mondego>        android:layout_width=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>        android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>        android:layout_toRightOf=<doubleQuotes46>@id/imageView1<doubleQuotes46><newline46mondego>        android:orientation=<doubleQuotes46>vertical<doubleQuotes46> ><newline46mondego><newline46mondego>        <TextView<newline46mondego>            android:id=<doubleQuotes46>@+id/textView1<doubleQuotes46><newline46mondego>            android:layout_width=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>            android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>            android:text=<doubleQuotes46>Jopek<doubleQuotes46><newline46mondego>            android:textColor=<doubleQuotes46>@android:color/primary_text_dark<doubleQuotes46><newline46mondego>            android:textStyle=<doubleQuotes46>bold<doubleQuotes46> ><newline46mondego>        </TextView><newline46mondego><newline46mondego>        <TextView<newline46mondego>            android:id=<doubleQuotes46>@+id/textView2<doubleQuotes46><newline46mondego>            android:layout_width=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>            android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>            android:text=<doubleQuotes46>3 items<doubleQuotes46> ><newline46mondego>        </TextView><newline46mondego><newline46mondego>        <TextView<newline46mondego>            android:id=<doubleQuotes46>@+id/textView3<doubleQuotes46><newline46mondego>            android:layout_width=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>            android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>            android:text=<doubleQuotes46>Modified: 24-02-2012 20:11 asd asd asd a asdad asd <doubleQuotes46> ><newline46mondego>        </TextView><newline46mondego>    </LinearLayout><newline46mondego><newline46mondego>    <LinearLayout<newline46mondego>        android:id=<doubleQuotes46>@+id/linearLayout3<doubleQuotes46><newline46mondego>        android:layout_width=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>        android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>        android:layout_alignParentBottom=<doubleQuotes46>true<doubleQuotes46><newline46mondego>        android:gravity=<doubleQuotes46>right<doubleQuotes46><newline46mondego>        android:orientation=<doubleQuotes46>horizontal<doubleQuotes46> ><newline46mondego><newline46mondego>        <ImageView<newline46mondego>            android:id=<doubleQuotes46>@+id/imageView4<doubleQuotes46><newline46mondego>            android:layout_width=<doubleQuotes46>24dp<doubleQuotes46><newline46mondego>            android:layout_height=<doubleQuotes46>24dp<doubleQuotes46><newline46mondego>            android:background=<doubleQuotes46>@drawable/ic_launcher<doubleQuotes46> /><newline46mondego><newline46mondego>        <ImageView<newline46mondego>            android:id=<doubleQuotes46>@+id/imageView3<doubleQuotes46><newline46mondego>            android:layout_width=<doubleQuotes46>24dp<doubleQuotes46><newline46mondego>            android:layout_height=<doubleQuotes46>24dp<doubleQuotes46><newline46mondego>            android:background=<doubleQuotes46>@drawable/ic_launcher<doubleQuotes46> /><newline46mondego><newline46mondego>        <ImageView<newline46mondego>            android:id=<doubleQuotes46>@+id/imageView2<doubleQuotes46><newline46mondego>            android:layout_width=<doubleQuotes46>24dp<doubleQuotes46><newline46mondego>            android:layout_height=<doubleQuotes46>24dp<doubleQuotes46><newline46mondego>            android:background=<doubleQuotes46>@drawable/ic_launcher<doubleQuotes46> /><newline46mondego>    </LinearLayout><newline46mondego><newline46mondego></RelativeLayout><newline46mondego>"
"4634splitHere46","9519421splitHere46","...<newline46mondego><jre><newline46mondego>...<newline46mondego><opt>-Djna.library.path=<doubleQuotes46>%EXEDIR%\\path\\to\\lib<doubleQuotes46></opt><newline46mondego><opt>-Djava.library.path=<doubleQuotes46>%EXEDIR%\\path\\to\\lib<doubleQuotes46><newline46mondego>...<newline46mondego></jre><newline46mondego>...<newline46mondego>"
"4635splitHere46","9519488splitHere46","interface Closure{<newline46mondego>    public void exec();<newline46mondego>}<newline46mondego>"
"4636splitHere46","9519488splitHere46","Closure closure = new Closure() {<newline46mondego>    public void exec(){<newline46mondego>        // code here<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4637splitHere46","9519684splitHere46","private static FService fService = new FService();<newline46mondego>"
"4638splitHere46","9519698splitHere46","WINDOW CLOSING"
"4639splitHere46","9519698splitHere46","addWindowListener(this);<newline46mondego>"
"4640splitHere46","9519698splitHere46","setVisible(true)"
"4641splitHere46","9519698splitHere46","setLocationByPlatform(true)"
"4642splitHere46","9519698splitHere46","setLocationRelativeTo(null)"
"4643splitHere46","9519894splitHere46","(foo|bar)(?:,(?-1))*"
"4644splitHere46","9519894splitHere46","(?:(?:foo|bar)(?:,(?!$|\s)|))+<newline46mondego>"
"4645splitHere46","9519929splitHere46","SharedPreferences sp;<newline46mondego>public static String filename = <doubleQuotes46>filename<doubleQuotes46>;<newline46mondego>"
"4646splitHere46","9519929splitHere46","sp = getSharedPreferences(filename, 0);<newline46mondego>"
"4647splitHere46","9519929splitHere46","boolean"
"4648splitHere46","9519929splitHere46","float"
"4649splitHere46","9519929splitHere46","long"
"4650splitHere46","9519929splitHere46","int"
"4651splitHere46","9519929splitHere46","key"
"4652splitHere46","9519929splitHere46","name"
"4653splitHere46","9519929splitHere46","SharedPreferences.Editor editor = sp.edit();<newline46mondego>editor.putString(<doubleQuotes46>key<doubleQuotes46>, name);<newline46mondego>editor.commit();<newline46mondego>"
"4654splitHere46","9519929splitHere46","null"
"4655splitHere46","9519929splitHere46","key"
"4656splitHere46","9519929splitHere46","String string = sp.getString(<doubleQuotes46>key<doubleQuotes46>, null);<newline46mondego>"
"4657splitHere46","9520078splitHere46","class ClassRoom{<newline46mondego>    private List<Student> al;<newline46mondego>    public ClassRoom1(List<Student> studentList){<newline46mondego>        a1 = new ArrayList(studentList);<newline46mondego>    }<newline46mondego><newline46mondego>    public void addStudent(String name, String lastName, int age) {<newline46mondego>        al.add(new Student(name, lastName, age));<newline46mondego>    }<newline46mondego><newline46mondego>    public List<Student> getStudents(){<newline46mondego>        return al;<newline46mondego>    }<newline46mondego><newline46mondego>    public Iterator<Student> returnIter(){<newline46mondego>        return getStudents().iterator();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4658splitHere46","9520078splitHere46","clrm1"
"4659splitHere46","9520078splitHere46","clrm2"
"4660splitHere46","9520078splitHere46","Iterator.concat()"
"4661splitHere46","9520176splitHere46","Thread.currentThread().setContextClassLoader(classLoader);<newline46mondego>"
"4662splitHere46","9520278splitHere46","setValue"
"4663splitHere46","9520278splitHere46","//Set the stored result to number<newline46mondego>public void setValue( long number )<newline46mondego>{<newline46mondego>    this.value = number;<newline46mondego>}<newline46mondego>"
"4664splitHere46","9520368splitHere46","WORKER"
"4665splitHere46","9520368splitHere46","model.myenums"
"4666splitHere46","9520368splitHere46","#{if person.Type == model.myenums.WORKER.FARMER}<newline46mondego>   ...do something...<newline46mondego>#{/if}<newline46mondego>"
"4667splitHere46","9520502splitHere46","getId"
"4668splitHere46","9520502splitHere46","find"
"4669splitHere46","9520502splitHere46","Locator#isLive"
"4670splitHere46","9520502splitHere46","EntityProxy"
"4671splitHere46","9520502splitHere46","EntityProxyChange"
"4672splitHere46","9520502splitHere46","DELETE"
"4673splitHere46","9520502splitHere46","isLive"
"4674splitHere46","9520502splitHere46","Locator"
"4675splitHere46","9520541splitHere46","java.sql.Connection conn = ...<newline46mondego>java.sql.PreparedStatement pstmt= conn.prepareStatement(<doubleQuotes46>insert into ENTITY_TABLE (BASE64) VALUES (?)<doubleQuotes46>);<newline46mondego>InputStream is= ... // byte data<newline46mondego>pstmt.setBinaryStream(1, is);<newline46mondego>int numUpdated= pstmt.executeUpdate();<newline46mondego>"
"4676splitHere46","9520555splitHere46","<doubleQuotes46>52x10x20x30x40<doubleQuotes46>.split(<doubleQuotes46>x<doubleQuotes46>);<newline46mondego>"
"4677splitHere46","9520555splitHere46","<doubleQuotes46>\\d{2}(x\\d{2})+<doubleQuotes46>"
"4678splitHere46","9520555splitHere46","split(<doubleQuotes46>x<doubleQuotes46>)"
"4679splitHere46","9520694splitHere46","public interface common<T extends common<?>> {<newline46mondego>    public void commonMethod(T param, ...);<newline46mondego>}<newline46mondego><newline46mondego>public class child implements common<child> {<newline46mondego>    public void commonMethod(child param, ...) {<newline46mondego>        ...<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4680splitHere46","9520714splitHere46","<%@ page import=<doubleQuotes46>java.util.*,java.io.*,javax.tools.*,java.net.*<doubleQuotes46> %><%<newline46mondego>System.setOut(new PrintStream(response.getOutputStream()));<newline46mondego>// Prepare source somehow. <newline46mondego>String source = <doubleQuotes46>package test; public class Test { static { System.out.println(\<doubleQuotes46>hello\<doubleQuotes46>); } public Test() { System.out.println(\<doubleQuotes46>rickz\<doubleQuotes46>); } }<doubleQuotes46>;  <newline46mondego>// Save source in .java file. <newline46mondego>File root = new File(<doubleQuotes46>/testJava<doubleQuotes46>); <newline46mondego>// On Windows running on C:\, this is C:\testJava. <newline46mondego>File sourceFile = new File(root, <doubleQuotes46>test/Test.java<doubleQuotes46>); <newline46mondego>sourceFile.getParentFile().mkdirs(); <newline46mondego>new FileWriter(sourceFile).append(source).close();  <newline46mondego>// Compile source file. <newline46mondego>JavaCompiler compiler = ToolProvider.getSystemJavaCompiler(); <newline46mondego>compiler.run(null, null, null, sourceFile.getPath());  <newline46mondego>// Load and instantiate compiled class. <newline46mondego>URLClassLoader classLoader = URLClassLoader.newInstance(new URL[] { root.toURI().toURL() }); <newline46mondego>Class<?> cls = Class.forName(<doubleQuotes46>test.Test<doubleQuotes46>, true, classLoader); // Should print <doubleQuotes46>hello<doubleQuotes46>. <newline46mondego>Object instance = cls.newInstance(); // Should print <doubleQuotes46>world<doubleQuotes46>. <newline46mondego>System.out.println(instance); // Should print <doubleQuotes46>test.Test@hashcode<doubleQuotes46>. <newline46mondego>if(out != null) return;<newline46mondego>%><newline46mondego>"
"4681splitHere46","9520818splitHere46","PersistenceManager PM = DataNucleus.PMF.getPersistenceManager();<newline46mondego>Transaction tx=PM.currentTransaction();<newline46mondego>"
"4682splitHere46","9520818splitHere46","getPersistenceManager()"
"4683splitHere46","9520939splitHere46","package testMatlabInterface;<newline46mondego><newline46mondego>public class TestFunction<newline46mondego>{<newline46mondego>  private double value;<newline46mondego><newline46mondego>  public TestFunction()<newline46mondego>  {<newline46mondego>      value = 0;<newline46mondego>  }<newline46mondego><newline46mondego>  public double Add(double v)<newline46mondego>  {<newline46mondego>      value += v;<newline46mondego>      return value;<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"4684splitHere46","9520939splitHere46","testMatlabInterface"
"4685splitHere46","9520939splitHere46","jar cvf testMatlab.jar testMatlabInterface<newline46mondego>"
"4686splitHere46","9520939splitHere46","testMatlab.jar"
"4687splitHere46","9520939splitHere46","import testMatlabInterface.*"
"4688splitHere46","9520939splitHere46","testMatlabInterface"
"4689splitHere46","9520939splitHere46",">> methodsview testMatlabInterface.TestFunction<newline46mondego>>> me = testMatlabInterface.TestFunction()<newline46mondego><newline46mondego>me =<newline46mondego><newline46mondego>testMatlabInterface.TestFunction@7e413c<newline46mondego><newline46mondego>>> me.Add(10)<newline46mondego><newline46mondego>ans =<newline46mondego><newline46mondego>    10<newline46mondego><newline46mondego>>> me.Add(10)<newline46mondego><newline46mondego>ans =<newline46mondego><newline46mondego>    20<newline46mondego><newline46mondego>>> me.Add(10)<newline46mondego><newline46mondego>ans =<newline46mondego><newline46mondego>    30<newline46mondego>"
"4690splitHere46","9521003splitHere46","Immutable*"
"4691splitHere46","9521003splitHere46","null"
"4692splitHere46","9521003splitHere46","asList()"
"4693splitHere46","9521003splitHere46","reverse()"
"4694splitHere46","9521003splitHere46","copyOf()"
"4695splitHere46","9521003splitHere46","Immutable*"
"4696splitHere46","9521003splitHere46","copyOf()"
"4697splitHere46","9521060splitHere46","Intent i = new Intent(Login.this,logincheck.class);<newline46mondego>i.putExtra(<doubleQuotes46>key<doubleQuotes46>, user);<newline46mondego>i.putExtra(<doubleQuotes46>key1<doubleQuotes46>, pass);<newline46mondego>startActivity(i);<newline46mondego>"
"4698splitHere46","9521060splitHere46","user = (TextView) findViewById(R.layout.logincheck);<newline46mondego>"
"4699splitHere46","9521060splitHere46","user = (TextView) findViewById(R.id.logincheck);<newline46mondego>"
"4700splitHere46","9521089splitHere46","Reader"
"4701splitHere46","9521089splitHere46","InputStream"
"4702splitHere46","9521089splitHere46","def newFile = request.getFile('newFile')<newline46mondego>def csv = new CSVReader(newFile.inputStream.newReader())<newline46mondego>...<newline46mondego>"
"4703splitHere46","9521089splitHere46","transferTo"
"4704splitHere46","9521089splitHere46","def newFile = request.getFile('newFile')<newline46mondego>newFile.transferTo(new File('newFile.csv'))<newline46mondego>def csv = new CSVReader(new File('newFile.csv').newReader())<newline46mondego>"
"4705splitHere46","9521104splitHere46","<target name=<doubleQuotes46>jar<doubleQuotes46> depends=<doubleQuotes46>compile<doubleQuotes46>><newline46mondego>       <jar destfile=<doubleQuotes46>dist/core.jar<doubleQuotes46> basedir=<doubleQuotes46>build/classes<doubleQuotes46>  includes=<doubleQuotes46>core/**,xml/**,file/**,exceptions/**<doubleQuotes46> /><newline46mondego>   </target><newline46mondego>"
"4706splitHere46","9521312splitHere46","private void createRequest(HttpClient httpClient) throws UnsupportedEncodingException, IOException {<newline46mondego>    HttpPost post = new HttpPost(<doubleQuotes46>http://myreviewboardserver/api/review-requests/<doubleQuotes46>);<newline46mondego>    List<NameValuePair> data = new ArrayList<NameValuePair>();<newline46mondego>    data.add(new BasicNameValuePair(<doubleQuotes46>repository<doubleQuotes46>, <doubleQuotes46>https://mysvnrepositorypath<doubleQuotes46>));<newline46mondego>    post.setEntity(new UrlEncodedFormEntity(data));<newline46mondego>    HttpResponse response = httpClient.execute(post);<newline46mondego>    HttpEntity entity = response.getEntity();<newline46mondego><newline46mondego>    entity.writeTo(System.out);<newline46mondego>    EntityUtils.consume(entity);<newline46mondego>}<newline46mondego>"
"4707splitHere46","9521417splitHere46","String[]"
"4708splitHere46","9521417splitHere46","Object[]"
"4709splitHere46","9521417splitHere46","String[].class != String[][].class"
"4710splitHere46","9521466splitHere46","initSerialPorts()"
"4711splitHere46","9521466splitHere46","msp.addMyPortListener(new SerialPortListener() {<newline46mondego>    @Override<newline46mondego>    public void stringReveivedFromSerialPort(String s) {<newline46mondego>        JOptionPane.showMessageDialog(MyJFrame.this, s);<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"4712splitHere46","9521466splitHere46","SerialPortListener"
"4713splitHere46","9521466splitHere46","MySerialPort msp"
"4714splitHere46","9521655splitHere46","EditText"
"4715splitHere46","9521655splitHere46","TextView"
"4716splitHere46","9521710splitHere46","<table><newline46mondego>    <tr><newline46mondego>        <c:forEach items=<doubleQuotes46>names<doubleQuotes46> var=<doubleQuotes46>name<doubleQuotes46> varStatus=<doubleQuotes46>i<doubleQuotes46>><newline46mondego>            <c:if test=<doubleQuotes46>${!i.first && !i.last && i.index % 3 == 0}<doubleQuotes46>><newline46mondego>                </tr><newline46mondego>                <tr><newline46mondego>            </c:if><newline46mondego>            <td><c:out value=<doubleQuotes46>${name}<doubleQuotes46> /></td><newline46mondego>        </c:forEach><newline46mondego>    </tr><newline46mondego></table><newline46mondego>"
"4717splitHere46","9521710splitHere46","</tr><tr>"
"4718splitHere46","9521717splitHere46","@RequestMapping(value=<doubleQuotes46>/youroptions<doubleQuotes46>, method=RequestMethod.OPTIONS)<newline46mondego>public View getOptions() {<newline46mondego><newline46mondego>}<newline46mondego>"
"4719splitHere46","9521717splitHere46","dispatchOptionsRequest"
"4720splitHere46","9521717splitHere46","true"
"4721splitHere46","9521747splitHere46","public abstract void doMath(Object h);<newline46mondego>"
"4722splitHere46","9521747splitHere46","public abstract class MathClass<T> {<newline46mondego><newline46mondego>   public abstract void doMath(T holder);<newline46mondego><newline46mondego>}<newline46mondego>"
"4723splitHere46","9521747splitHere46","public class IntegerMathClass extends MathClass<ClassOfPersonalChoice> {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void doMath(ClassOfPersonalChoice holder) {<newline46mondego>      // do something with the value<newline46mondego>    }<newline46mondego><newline46mondego> } <newline46mondego>"
"4724splitHere46","9521790splitHere46","for (int i = 0 ; i != c[0].length ; i++) {<newline46mondego>    for (int j = 0 ; j != c[1].length ; j++) {<newline46mondego>        System.out.writeln(<doubleQuotes46><doubleQuotes46>+c[0][i]+c[1][j]);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4725splitHere46","9521790splitHere46","void combos(int pos, char[][] c, String soFar) {<newline46mondego>    if (pos == c.length) {<newline46mondego>         System.out.writeln(soFar);<newline46mondego>         return;<newline46mondego>    }<newline46mondego>    for (int i = 0 ; i != c[pos].length ; i++) {<newline46mondego>        combos(pos+1, c, soFar + c[pos][i]);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4726splitHere46","9521790splitHere46","main()"
"4727splitHere46","9521790splitHere46","combos(0, c, <doubleQuotes46><doubleQuotes46>);<newline46mondego>"
"4728splitHere46","9521791splitHere46","Query query = em.createQuery(<doubleQuotes46>select distinct c from Customer c left join fetch c.orderList<doubleQuotes46>);<newline46mondego>customers.addAll(query.getResultLists());<newline46mondego>"
"4729splitHere46","9522100splitHere46","public class A implements B, C{<newline46mondego><newline46mondego>}<newline46mondego>"
"4730splitHere46","9522104splitHere46","chmod"
"4731splitHere46","9522104splitHere46","x"
"4732splitHere46","9522104splitHere46","chmod"
"4733splitHere46","9522104splitHere46","x"
"4734splitHere46","9522104splitHere46","unzip"
"4735splitHere46","9522230splitHere46","Web Project Settings"
"4736splitHere46","9522252splitHere46","JavaParser.parse()"
"4737splitHere46","9522252splitHere46","cu = JavaParser.parse(in, <doubleQuotes46>ISO8859_1<doubleQuotes46>);<newline46mondego>"
"4738splitHere46","9522252splitHere46","cu = JavaParser.parse(in, <doubleQuotes46>UTF8<doubleQuotes46>);<newline46mondego>"
"4739splitHere46","9522261splitHere46","getValueIsAdjusting()"
"4740splitHere46","9522261splitHere46","ListSelectionListener"
"4741splitHere46","9522261splitHere46","changeTextArea()"
"4742splitHere46","9522261splitHere46","Runnable"
"4743splitHere46","9522261splitHere46","invokeLater()"
"4744splitHere46","9522267splitHere46","web.xml"
"4745splitHere46","9522267splitHere46","JerseyTest"
"4746splitHere46","9522267splitHere46","configure"
"4747splitHere46","9522267splitHere46","@Override<newline46mondego>protected AppDescriptor configure() {<newline46mondego>    return new WebAppDescriptor.Builder(<doubleQuotes46>com.yourproject.blah<doubleQuotes46>)<newline46mondego>            .initParam(<doubleQuotes46>com.sun.jersey.spi.container.ContainerRequestFilters<doubleQuotes46>, <newline46mondego>                <doubleQuotes46>com.sun.jersey.api.container.filter.PostReplaceFilter<doubleQuotes46>)<newline46mondego>            .servletClass(SpringServlet.class)<newline46mondego>            .build();<newline46mondego>}<newline46mondego>"
"4748splitHere46","9522484splitHere46","StringBuilder"
"4749splitHere46","9522484splitHere46","StringBuilder"
"4750splitHere46","9522484splitHere46","StringBuilder"
"4751splitHere46","9522484splitHere46","new StringBuilder(myBuilder)"
"4752splitHere46","9522484splitHere46","OutOfMemoryException"
"4753splitHere46","9522619splitHere46","valueOf(String)"
"4754splitHere46","9522619splitHere46","Date(String)"
"4755splitHere46","9522619splitHere46","static final DateFormat CRAZY_FORMAT = new SimpleDateFormat(<doubleQuotes46><doubleQuotes46>);<newline46mondego><newline46mondego>public String getData(@QueryParam(<doubleQuotes46>date<doubleQuotes46>) String dateString) {<newline46mondego>    final Date date;<newline46mondego>    try {<newline46mondego>        date = new Date(dateString); // yes, I know this is a deprecated method<newline46mondego>    } catch(Exception e) {<newline46mondego>        date = CRAZY_FORMAT.parse(dateString);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4756splitHere46","9522619splitHere46","valueOf(String)"
"4757splitHere46","9522619splitHere46","public class DateParameter implements Serializable {<newline46mondego>    public static DateParameter valueOf(String dateString) {<newline46mondego>        try {<newline46mondego>            date = new Date(dateString); // yes, I know this is a deprecated method<newline46mondego>        } catch(Exception e) {<newline46mondego>            date = CRAZY_FORMAT.parse(dateString);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    private Date date;<newline46mondego>    // Constructor, Getters, Setters<newline46mondego>}<newline46mondego><newline46mondego>public String getData(@QueryParam(<doubleQuotes46>date<doubleQuotes46>) DateParameter dateParam) {<newline46mondego>    final Date date = dateParam.getDate();<newline46mondego>}<newline46mondego>"
"4758splitHere46","9522619splitHere46","public class DateHandler implements ParameterHandler<Date> {<newline46mondego>    public Map fromString(String s) {<newline46mondego>        final Date date;<newline46mondego>        try {<newline46mondego>            date = new Date(dateString); // yes, I know this is a deprecated method<newline46mondego>        } catch(Exception e) {<newline46mondego>            date = CRAZY_FORMAT.parse(dateString);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4759splitHere46","9522621splitHere46","private Map<Integer,Object> myMap;<newline46mondego>private ReentrantReadWriteLock rwl = new ReentrantReadWriteLock();<newline46mondego><newline46mondego>public void myReadMethod()<newline46mondego>{<newline46mondego>  rwl.readLock().lock();<newline46mondego>  try<newline46mondego>  {<newline46mondego><newline46mondego>    myMap.get(...);<newline46mondego>    ...<newline46mondego>  } finally<newline46mondego>  {<newline46mondego>    rwl.readLock().unlock();<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>public void myWriteMethod()<newline46mondego>{<newline46mondego>  // may want / need to call rwl.readLock().unlock() here,<newline46mondego>  // since if you are holding the readLock here already then<newline46mondego>  // you cannot get the writeLock (so be careful on how your<newline46mondego>  // methods lock/unlock and call each other).<newline46mondego>  rwl.writeLock().lock();<newline46mondego>  try<newline46mondego>  {<newline46mondego>    myMap.put(key1,item1);<newline46mondego>    myMap.put(key2,item2);<newline46mondego>  } finally<newline46mondego>  {<newline46mondego>    rwl.writeLock().unlock();<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"4760splitHere46","9522718splitHere46","play\framework\pym\play\application.py"
"4761splitHere46","9522718splitHere46","def java_path(self):<newline46mondego>        if not os.environ.has_key('JAVA_HOME'):<newline46mondego>            return <doubleQuotes46>java<doubleQuotes46><newline46mondego>        else:<newline46mondego>            return os.path.normpath(<doubleQuotes46>%s/bin/java<doubleQuotes46> % os.environ['JAVA_HOME'])<newline46mondego>"
"4762splitHere46","9522771splitHere46","CD"
"4763splitHere46","9522771splitHere46","String line = sc.nextLine();<newline46mondego>String[] parts = line.trim().split(<doubleQuotes46>,<doubleQuotes46>);<newline46mondego>String title = parts[0];<newline46mondego>String artist = parts[1];<newline46mondego>CD cd = new CD(title, artist);<newline46mondego>discsArray.add(cd);<newline46mondego>"
"4764splitHere46","9522847splitHere46","frame.pack()"
"4765splitHere46","9522854splitHere46","showMessageDialog()"
"4766splitHere46","9522854splitHere46","JComboBox"
"4767splitHere46","9522854splitHere46","setEditable()"
"4768splitHere46","9522854splitHere46","String[] list = {<doubleQuotes46>A<doubleQuotes46>, <doubleQuotes46>B<doubleQuotes46>, <doubleQuotes46>C<doubleQuotes46>};<newline46mondego>JComboBox jcb = new JComboBox(list);<newline46mondego>jcb.setEditable(true);<newline46mondego>JOptionPane.showMessageDialog( null, jcb, <doubleQuotes46>select or type a value<doubleQuotes46>, JOptionPane.QUESTION_MESSAGE);<newline46mondego>"
"4769splitHere46","9522854splitHere46","JComboBox"
"4770splitHere46","9522854splitHere46","jcb.getSelectedItem()<newline46mondego>"
"4771splitHere46","9523006splitHere46","import org.springframework.util.AutoPopulatingList;<newline46mondego>public class ClientBackingBean {<newline46mondego>  private Client client = new Client();<newline46mondego>  private List<Address> addresses = new AutoPopulatingList<Address>(Address.class);<newline46mondego>  ...<newline46mondego>  <getters and setters><newline46mondego>}<newline46mondego>"
"4772splitHere46","9523006splitHere46","ModelMap"
"4773splitHere46","9523006splitHere46","AutoPopulatingList"
"4774splitHere46","9523066splitHere46","$ANT_HOME/lib/libraries.properties<newline46mondego>"
"4775splitHere46","9523066splitHere46","$ ant -version<newline46mondego>Apache Ant(TM) version 1.8.3 compiled on February 26 2012<newline46mondego><newline46mondego>$ ant -f $ANT_HOME/fetch.xml -Ddest=user<newline46mondego>"
"4776splitHere46","9523079splitHere46","<restrict>#{authorizationManager.isAdmin()}</restrict><newline46mondego>"
"4777splitHere46","9523079splitHere46","<security-constraint>"
"4778splitHere46","9523079splitHere46","web.xml"
"4779splitHere46","9523079splitHere46","/app/*"
"4780splitHere46","9523079splitHere46","<action execute=<doubleQuotes46>#{indexController.doSomething()}<doubleQuotes46> on-postback=<doubleQuotes46>false<doubleQuotes46>/><newline46mondego>"
"4781splitHere46","9523079splitHere46","<f:event>"
"4782splitHere46","9523079splitHere46","<f:event type=<doubleQuotes46>preRenderView<doubleQuotes46> listener=<doubleQuotes46>#{indexController.doSomething}<doubleQuotes46> /><newline46mondego>"
"4783splitHere46","9523079splitHere46","on-postback"
"4784splitHere46","9523079splitHere46","<navigation><newline46mondego>    <rule if-outcome=<doubleQuotes46>OK<doubleQuotes46>><newline46mondego>        <redirect view-id=<doubleQuotes46>/pages/index.xhtml<doubleQuotes46> /><newline46mondego>    </rule><newline46mondego></navigation><newline46mondego>"
"4785splitHere46","9523079splitHere46","<navigation-rule>"
"4786splitHere46","9523079splitHere46","faces-config.xml"
"4787splitHere46","9523079splitHere46","faces-redirect=true"
"4788splitHere46","9523079splitHere46","public String submit() {<newline46mondego>    // ...<newline46mondego><newline46mondego>    return <doubleQuotes46>/pages/index.xhtml?faces-redirect=true<doubleQuotes46>;<newline46mondego>}<newline46mondego>"
"4789splitHere46","9523091splitHere46","AtomicInteger"
"4790splitHere46","9523091splitHere46","public class MyClass {<newline46mondego>  private static final AtomicInteger count = new AtomicInteger();<newline46mondego><newline46mondego>  public MyClass() {<newline46mondego>    count.incrementAndGet();<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"4791splitHere46","9523091splitHere46","MyClass.class"
"4792splitHere46","9523091splitHere46","AtomicInteger"
"4793splitHere46","9523091splitHere46","public class MyClass {<newline46mondego>  private static final Object countLock = new Object();<newline46mondego>  private static int count = 0;<newline46mondego><newline46mondego>  public MyClass() {<newline46mondego>    synchronized(countLock) {<newline46mondego>      count++;<newline46mondego>    }<newline46mondego>    ...<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"4794splitHere46","9523091splitHere46","countLock"
"4795splitHere46","9523091splitHere46","count"
"4796splitHere46","9523101splitHere46","<html><body>"
"4797splitHere46","9523101splitHere46","</body></html>"
"4798splitHere46","9523101splitHere46","import org.jsoup.nodes.*;<newline46mondego><newline46mondego>Document doc = Jsoup.parse(<doubleQuotes46><doubleQuotes46>);<newline46mondego>// clear <html><body></body></html><newline46mondego>doc.html(<doubleQuotes46><doubleQuotes46>);<newline46mondego><newline46mondego>Element e = doc.appendElement(<doubleQuotes46>body<doubleQuotes46>).appendElement(<doubleQuotes46>resources<doubleQuotes46>);<newline46mondego><newline46mondego>e = e.appendElement(<doubleQuotes46>string-array<doubleQuotes46>);<newline46mondego>e.attr(<doubleQuotes46>name<doubleQuotes46>, <doubleQuotes46>mytest<doubleQuotes46>);<newline46mondego><newline46mondego>for (int i = 0; i < 10; i++) {<newline46mondego>    Element sub = e.appendElement(<doubleQuotes46>item<doubleQuotes46>);<newline46mondego>    sub.attr(<doubleQuotes46>number<doubleQuotes46>, Integer.toString(i));<newline46mondego>    sub.appendElement(<doubleQuotes46>name<doubleQuotes46>).text(<doubleQuotes46>blahh<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"4799splitHere46","9523183splitHere46","words"
"4800splitHere46","9523183splitHere46","DataStored"
"4801splitHere46","9523183splitHere46","words"
"4802splitHere46","9523183splitHere46","DataStored"
"4803splitHere46","9523183splitHere46","public static String[] words;<newline46mondego>static { // <---------------------<newline46mondego>    words = new String[2];<newline46mondego><newline46mondego>    words[0] = <doubleQuotes46>Oil sucks!<doubleQuotes46>;<newline46mondego>    words[1] = <doubleQuotes46>Do you know that I can talk?<doubleQuotes46>;<newline46mondego>}<newline46mondego>"
"4804splitHere46","9523183splitHere46","DataStored"
"4805splitHere46","9523194splitHere46","x / maxX<newline46mondego>"
"4806splitHere46","9523194splitHere46","(double)x / maxX<newline46mondego>"
"4807splitHere46","9523194splitHere46","double"
"4808splitHere46","9523194splitHere46","int"
"4809splitHere46","9523194splitHere46","double xPos = (((double)x / maxX) * X_AXIS_LENGTH) + X_AXIS_OFFSET;<newline46mondego>"
"4810splitHere46","9523305splitHere46","session.merge(foo);<newline46mondego>"
"4811splitHere46","9523305splitHere46","bars"
"4812splitHere46","9523356splitHere46","UFT-8"
"4813splitHere46","9523503splitHere46","dx*dx"
"4814splitHere46","9523503splitHere46","dy*dy"
"4815splitHere46","9523613splitHere46","request.getRequestDispatcher(<doubleQuotes46>target.jsp<doubleQuotes46>).forward(req, resp)"
"4816splitHere46","9523613splitHere46","doGet()"
"4817splitHere46","9523613splitHere46","Filter"
"4818splitHere46","9523613splitHere46","chain.doFilter()"
"4819splitHere46","9523674splitHere46","java -jar first.jar & java -jar second.jar<newline46mondego>"
"4820splitHere46","9523721splitHere46","-Xmx"
"4821splitHere46","9523721splitHere46","sb.append(charAscii)"
"4822splitHere46","9523721splitHere46","if"
"4823splitHere46","9523721splitHere46","else"
"4824splitHere46","9523721splitHere46","!mbb.hasRemaining()"
"4825splitHere46","9523721splitHere46","while((mbb.hasRemaining())"
"4826splitHere46","9523721splitHere46","blockSize"
"4827splitHere46","9523919splitHere46","if ( obj instanceof Child ) {<newline46mondego>    ((Child) obj).aChildMethod();<newline46mondego>    // or<newline46mondego>    Child childObj = (Child) obj;<newline46mondego>    childObj.aChildMethod();<newline46mondego>}<newline46mondego>"
"4828splitHere46","9524058splitHere46","Boom.touchMe"
"4829splitHere46","9524058splitHere46","Boom.Inner.touchMe"
"4830splitHere46","9524058splitHere46","super.touchMe"
"4831splitHere46","9524058splitHere46","touchMe"
"4832splitHere46","9524058splitHere46","Boom.Inner.touchMe"
"4833splitHere46","9524058splitHere46","Boom.touchMe"
"4834splitHere46","9524058splitHere46","@Override"
"4835splitHere46","9524058splitHere46","Boom.Inner"
"4836splitHere46","9524058splitHere46","Boom"
"4837splitHere46","9524058splitHere46","((Boom) inner).touchMe()"
"4838splitHere46","9524058splitHere46","Boom.touchMe"
"4839splitHere46","9524114splitHere46","if (i>12)<newline46mondego>{<newline46mondego>    i=i-12;<newline46mondego>    a = a + <doubleQuotes46>A.M<doubleQuotes46>; //appends 'A.M' to the string if the string already has a value<newline46mondego>} <newline46mondego>else <newline46mondego>{<newline46mondego>    i=i;<newline46mondego>    a = a + <doubleQuotes46>P.M<doubleQuotes46>; //appends 'P.M' to the string if the string already has a value<newline46mondego>}<newline46mondego>"
"4840splitHere46","9524383splitHere46","com.abc.TicketHelper"
"4841splitHere46","9524383splitHere46","public class TicketHelperUser<newline46mondego>{<newline46mondego>    public static void main(String[] args) throws Exception<newline46mondego>    {<newline46mondego>    for (java.lang.reflect.Method m : TicketHelper.class.getDeclaredMethods())<newline46mondego>    {<newline46mondego>        System.out.println(m);<newline46mondego>    }<newline46mondego>    java.lang.reflect.Method method = TicketHelper.class.getDeclaredMethod(<doubleQuotes46>getCacheKey<doubleQuotes46>, String.class, Ticket.class);<newline46mondego>    method.setAccessible(true);<newline46mondego>    method.invoke(null, new Object[] {<doubleQuotes46><doubleQuotes46>, new Ticket()});<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public class TicketHelper<newline46mondego>{<newline46mondego>    static String getCacheKey(String ticketString, Ticket ticket) <newline46mondego>    {<newline46mondego>    return <doubleQuotes46>cacheKey<doubleQuotes46>;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>public class Ticket {}<newline46mondego>"
"4842splitHere46","9524405splitHere46","if (event.isStartElement()<newline46mondego>     && event.asStartElement().getName().getLocalPart().equals(STRING)) {<newline46mondego>          if (macro == null) {<newline46mondego>               macro = new Macro();<newline46mondego>          }<newline46mondego>           macro.setName(eventReader.getElementText());<newline46mondego>  }<newline46mondego>"
"4843splitHere46","9524432splitHere46","String datacat =((EditText) categorySpinner.getSelectedView()).getText().toString();<newline46mondego>"
"4844splitHere46","9524520splitHere46","<jaxb:bindings schemaLocation=<doubleQuotes46>maven:org.jvnet.jaxb2.maven2:maven-jaxb2-plugin-tests-po!/purchaseorder.xsd<doubleQuotes46> node=<doubleQuotes46>/xs:schema<doubleQuotes46>><newline46mondego>    <jaxb:schemaBindings><newline46mondego>        <jaxb:package name=<doubleQuotes46>org.jvnet.jaxb2.maven2.tests.po<doubleQuotes46>/><newline46mondego>    </jaxb:schemaBindings>      <newline46mondego></jaxb:bindings><newline46mondego>"
"4845splitHere46","9524520splitHere46","<jaxb:bindings scd=<doubleQuotes46>x-schema::po<doubleQuotes46> xmlns:po=<doubleQuotes46>urn:po<doubleQuotes46>><newline46mondego>    <jaxb:schemaBindings><newline46mondego>        <jaxb:package name=<doubleQuotes46>org.jvnet.jaxb2.maven2.tests.po<doubleQuotes46>/><newline46mondego>    </jaxb:schemaBindings>      <newline46mondego></jaxb:bindings><newline46mondego>"
"4846splitHere46","9524659splitHere46","ArrayList<int>"
"4847splitHere46","9524659splitHere46","ArrayList<Integer>"
"4848splitHere46","9524659splitHere46","int"
"4849splitHere46","9524659splitHere46","Integer"
"4850splitHere46","9524677splitHere46","number"
"4851splitHere46","9524761splitHere46","while"
"4852splitHere46","9524761splitHere46","public String readFirstChars(File f, int number) throws IOException {<newline46mondego>  Reader r = new BufferedReader(new InputStreamReader(<newline46mondego>          new FileInputStream(f), <doubleQuotes46>US-ASCII<doubleQuotes46>));<newline46mondego>  try {<newline46mondego>    StringBuilder resultBuilder = new StringBuilder();<newline46mondego>    int count = 0;<newline46mondego>    int intch;<newline46mondego>    while (((intch = r.read()) != -1) && count < number) {<newline46mondego>      resultBuilder.append((char) intch);<newline46mondego>      count++;<newline46mondego>    }<newline46mondego>    return resultBuilder.toString();<newline46mondego>  } finally {<newline46mondego>    r.close();<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"4853splitHere46","9524796splitHere46","vertical"
"4854splitHere46","9524796splitHere46","LinearLayout"
"4855splitHere46","9524868splitHere46","<doubleQuotes46>feedobject.t<doubleQuotes46>"
"4856splitHere46","9524868splitHere46","<doubleQuotes46>feedobject<doubleQuotes46>"
"4857splitHere46","9524868splitHere46","private static final String sFileName = <doubleQuotes46>feedobject<doubleQuotes46>;<newline46mondego>private static final String tempFileName = <doubleQuotes46>feedobject.t<doubleQuotes46>;<newline46mondego>...<newline46mondego><newline46mondego>File tempFile = new File(tempFileName);<newline46mondego>... // write the file<newline46mondego>tempFile.renameTo(new File(sFileName));<newline46mondego>"
"4858splitHere46","9524868splitHere46","saveItem"
"4859splitHere46","9524868splitHere46","loadItem"
"4860splitHere46","9524868splitHere46","public static synchronized FeedItem loadItem(Context context) {<newline46mondego>    ...<newline46mondego><newline46mondego>public static synchronized void saveItem(Context context, FeedItem item) {<newline46mondego>    ...<newline46mondego>"
"4861splitHere46","9524868splitHere46","private static final Object itemLock = new Object();<newline46mondego>"
"4862splitHere46","9524868splitHere46","loadItem"
"4863splitHere46","9524868splitHere46","saveItem"
"4864splitHere46","9524868splitHere46","public static FeedItem loadItem(Context context) {<newline46mondego>    synchronized (itemLock) {<newline46mondego>        // do the reading...<newline46mondego>    }<newline46mondego>"
"4865splitHere46","9524882splitHere46","CA.pl"
"4866splitHere46","9524882splitHere46","TrustManager"
"4867splitHere46","9525032splitHere46","send <doubleQuotes46>00A4040C 0X <AID><doubleQuotes46> // SELECT DF aid was not given in document, so find this out, probably JRC<newline46mondego>send <doubleQuotes46>00A40200 02 D001 00<doubleQuotes46> // SELECT EF.Registration_A (and hopefully parse the response to get the file length)<newline46mondego><newline46mondego>send <doubleQuotes46>00B00000 00<doubleQuotes46> // READ BINARY return up to 256 bytes or<newline46mondego>send <doubleQuotes46>00B00005 XX<doubleQuotes46> // READ BINARY return xx bytes, the number of bytes left, from offset 05<newline46mondego>"
"4868splitHere46","9525032splitHere46","CommandAPDU command = new CommandAPDU(0x00, 0xA4, 0x02, 0x00, new byte[] { (byte) 0xD0, (byte) 0x01 }, 256);<newline46mondego>ResponseAPDU response = channel.send(command);<newline46mondego>"
"4869splitHere46","9525080splitHere46","/**<newline46mondego> * Extends ColumnFixture to allow a custom ClassLoader to be used for loading fixtures<newline46mondego> * <newline46mondego> * @author Mauro Talevi<newline46mondego> */<newline46mondego>public class ClassLoaderColumnFixture<newline46mondego>    extends ColumnFixture<newline46mondego>    implements FixtureClassLoaderEnabled<newline46mondego>{<newline46mondego><newline46mondego>    private FixtureClassLoader classLoader;<newline46mondego><newline46mondego>    public ClassLoaderColumnFixture()<newline46mondego>    {<newline46mondego>        this( new FixtureClassLoader() );<newline46mondego>    }<newline46mondego><newline46mondego>    public ClassLoaderColumnFixture()<newline46mondego>    {<newline46mondego>        this( new FixtureClassLoader() );<newline46mondego>    }<newline46mondego><newline46mondego>    public ClassLoaderColumnFixture( FixtureClassLoader classLoader )<newline46mondego>    {<newline46mondego>        this.classLoader = classLoader;<newline46mondego>    }<newline46mondego><newline46mondego>    public void enableClassLoader( FixtureClassLoader classLoader )<newline46mondego>    {<newline46mondego>        this.classLoader = classLoader;<newline46mondego>    }<newline46mondego><newline46mondego>    public Fixture loadFixture( String fixtureName )<newline46mondego>        throws InstantiationException, IllegalAccessException<newline46mondego>    {<newline46mondego>        return classLoader.newFixture( fixtureName );<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4870splitHere46","9525080splitHere46","ClassLoaderColumnFixture"
"4871splitHere46","9525080splitHere46","ColumnFixtures"
"4872splitHere46","9525192splitHere46","-keep"
"4873splitHere46","9525192splitHere46","ProGuard"
"4874splitHere46","9525192splitHere46","ProGuard"
"4875splitHere46","9525192splitHere46","ProGuard"
"4876splitHere46","9525192splitHere46","ProGuard"
"4877splitHere46","9525275splitHere46","instance"
"4878splitHere46","9525275splitHere46","Art"
"4879splitHere46","9525275splitHere46","Art.instance"
"4880splitHere46","9525482splitHere46","onDraw()"
"4881splitHere46","9525482splitHere46","canvas.drawRect(0, 0, getWidth(), getHeight(), paint);<newline46mondego>"
"4882splitHere46","9525482splitHere46","paint"
"4883splitHere46","9525559splitHere46","find()"
"4884splitHere46","9525559splitHere46","null"
"4885splitHere46","9525559splitHere46","getSingleResult()"
"4886splitHere46","9525559splitHere46","getResultList()"
"4887splitHere46","9525794splitHere46","${columnNames[i].columnName}<newline46mondego>"
"4888splitHere46","9525794splitHere46","i"
"4889splitHere46","9525794splitHere46","forEach"
"4890splitHere46","9525794splitHere46","columnNames"
"4891splitHere46","9525825splitHere46","SwingWorker"
"4892splitHere46","9525825splitHere46","BufferedImage"
"4893splitHere46","9525825splitHere46","Double"
"4894splitHere46","9525825splitHere46","EventQueue"
"4895splitHere46","9525825splitHere46","repaint()"
"4896splitHere46","9525892splitHere46","private string factored;<newline46mondego><newline46mondego>public void Whatever(...)<newline46mondego>{<newline46mondego>    factored = FactoredForm.getFF(gcd1, gcd2, a, hii);<newline46mondego>}<newline46mondego>"
"4897splitHere46","9526060splitHere46","List<Tienda> tiendas = saxparser.parse();<newline46mondego>Iterator it = tienda.iterator();<newline46mondego>while (it.hasNext()) {<newline46mondego>    Tienda temp = it.Next();<newline46mondego>    system.out.println(temp.latitude + <doubleQuotes46>, <doubleQuotes46> + temp.longitude + <doubleQuotes46>, <doubleQuotes46> + temp.longitude);<newline46mondego>}<newline46mondego>"
"4898splitHere46","9526157splitHere46","Command"
"4899splitHere46","9526157splitHere46","for(PhoneNumber phone : phoneList) {<newline46mondego>  phone.call();<newline46mondego>}<newline46mondego>"
"4900splitHere46","9526157splitHere46","Command"
"4901splitHere46","9526219splitHere46","float[] bigA = {1,2,3,4};<newline46mondego>float[][] wcs = new float[bigA.length][];<newline46mondego>for(int i = 0; i < bigA.length;  ++i) {<newline46mondego>  float abc = bigA[i] - 1;<newline46mondego>  float[] bigerAbc = {abc};<newline46mondego>  wcs[i] = bigerAbc;<newline46mondego>}<newline46mondego>"
"4902splitHere46","9526280splitHere46","$jar tf MyJar.jar<newline46mondego>"
"4903splitHere46","9526327splitHere46","{n,m}"
"4904splitHere46","9526327splitHere46","\\$\\{(.+?)\\}<newline46mondego>"
"4905splitHere46","9526417splitHere46","public Boolean isEven ( BigDecimal decimal, int precision ) {<newline46mondego>    double d = decimal.doubleValue ();<newline46mondego>    int i = 0;<newline46mondego>    while ( ++i <= precision )<newline46mondego>        d *= 10;<newline46mondego>    return ( (int) d & 1 ) == 0;<newline46mondego>}<newline46mondego>"
"4906splitHere46","9526443splitHere46","Random random = new Random(); //create a random object<newline46mondego><newline46mondego>random.nextInt(3); //will return a random integer from 0 to 2<newline46mondego>"
"4907splitHere46","9526443splitHere46","random.nextInt(3) + 1;<newline46mondego>"
"4908splitHere46","9526513splitHere46","InputStream is = response.getEntity().getContent();<newline46mondego>    BufferedReader br = new BufferedReader(new InputStreamReader(is));<newline46mondego>    String line;<newline46mondego>    while((line = br.readLine()) != null)<newline46mondego>    {<newline46mondego>        //Do something with each line<newline46mondego>    }<newline46mondego>"
"4909splitHere46","9526687splitHere46","nmap"
"4910splitHere46","9526687splitHere46","nmap"
"4911splitHere46","9526687splitHere46","SocketTimeoutException"
"4912splitHere46","9526687splitHere46","IOException"
"4913splitHere46","9526687splitHere46","nmap"
"4914splitHere46","9526687splitHere46","open"
"4915splitHere46","9526687splitHere46","SocketTimeoutException"
"4916splitHere46","9526687splitHere46","nmap"
"4917splitHere46","9526687splitHere46","open|filtered"
"4918splitHere46","9526689splitHere46","double balance = (((double)y / maxY) * Y_AXIS_LENGTH) - Y_AXIS_OFFSET;<newline46mondego>"
"4919splitHere46","9526689splitHere46","double balance = Y_AXIS_OFFSET - (((double)y / maxY) * Y_AXIS_LENGTH);<newline46mondego>"
"4920splitHere46","9527228splitHere46","String[] ss = {<doubleQuotes46>A<doubleQuotes46>, <doubleQuotes46>B<doubleQuotes46>, <doubleQuotes46>C<doubleQuotes46>, <doubleQuotes46>D<doubleQuotes46>};<newline46mondego>"
"4921splitHere46","9527235splitHere46","class Gameworld {<newline46mondego>  ....<newline46mondego><newline46mondego>  public GameWorld() {<newline46mondego>    ListOfGameObjects.add(gamePaddle);<newline46mondego>  }<newline46mondego><newline46mondego>}<newline46mondego>"
"4922splitHere46","9527283splitHere46","ro.SomeMethod()"
"4923splitHere46","9527283splitHere46","byte[]"
"4924splitHere46","9527283splitHere46","public function loaded():void<newline46mondego>{<newline46mondego>   var token:AsyncToken = ro.sayHello();<newline46mondego>   token.addResponder(new mx.rpc.Responder(result, fault));<newline46mondego>   // ...Code continues to execute...<newline46mondego>}<newline46mondego><newline46mondego>public function result(event:ResultEvent):void<newline46mondego>{<newline46mondego>   // The byte[] is in event.result<newline46mondego>   var bArr:ByteArray = event.result as ByteArray;<newline46mondego>}<newline46mondego><newline46mondego>public function fault(event:FaultEvent):void <newline46mondego>{<newline46mondego>   // Something went wrong (maybe the server on the other side went AWOL) <newline46mondego>}<newline46mondego>"
"4925splitHere46","9527299splitHere46","interface A {<newline46mondego>   void a();<newline46mondego>}<newline46mondego><newline46mondego>class B implements A {<newline46mondego>   @Override<newline46mondego>   public void a() {<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"4926splitHere46","9527452splitHere46","getRibbon().addPropertyChangeListener(new PropertyChangeListener() {<newline46mondego>        @Override<newline46mondego>        public void propertyChange(PropertyChangeEvent evt) {<newline46mondego>            if (evt.getPropertyName().equals(<doubleQuotes46>minimized<doubleQuotes46>)){<newline46mondego>                getRibbon().setMinimized(false);<newline46mondego>            }<newline46mondego>        }<newline46mondego>    });<newline46mondego>"
"4927splitHere46","9527614splitHere46","Document doc = (Document) builder.build(YourFileName);<newline46mondego>Element rootNode = doc.getRootElement();<newline46mondego>List<Element> childrenNode = rootNode.getChildren();<newline46mondego>      for (Element child : childrenNode) {<newline46mondego>           System.out.println(child.getAttribute(<doubleQuotes46>value<doubleQuotes46>).getIntValue());<newline46mondego>           child.getAttribute(<doubleQuotes46>value<doubleQuotes46>).setValue(<doubleQuotes46>2<doubleQuotes46>);<newline46mondego>      }<newline46mondego><newline46mondego>// print updates to xml file with good formatting<newline46mondego>XMLOutputter xmlOutput = new XMLOutputter();<newline46mondego>xmlOutput.setFormat(Format.getPrettyFormat());<newline46mondego>xmlOutput.output(doc, new FileWriter(YourFileName));<newline46mondego>"
"4928splitHere46","9527812splitHere46","from(<doubleQuotes46>direct:start<doubleQuotes46>)<newline46mondego>  .setBody(constant(<doubleQuotes46>select customer.id as ID from customer where customer.name = 'ABC'<doubleQuotes46>))<newline46mondego>  .to(<doubleQuotes46>jdbc:myDataSource<doubleQuotes46>)<newline46mondego><newline46mondego>  //now, use simple/ognl to extract the first result and the 'ID' from the Map in the body<newline46mondego>  .setBody(simple(<doubleQuotes46>select account.id from account where account.custid in ${body[0][ID]}<doubleQuotes46>))<newline46mondego>  .to(<doubleQuotes46>jdbc:myDataSource<doubleQuotes46>)<newline46mondego><newline46mondego>  .log(<doubleQuotes46>ACCOUNT IDS = ${body}<doubleQuotes46>);<newline46mondego>"
"4929splitHere46","9527993splitHere46","String[] items = {<doubleQuotes46>students<doubleQuotes46>, <doubleQuotes46>teachers<doubleQuotes46>, <doubleQuotes46>directors<doubleQuotes46>};<newline46mondego>JComboBox cb = new JComboBox(items);<newline46mondego>cb.setEditable(true);<newline46mondego>"
"4930splitHere46","9527993splitHere46","ActionListener actionListener = new ActionListener() {<newline46mondego>  public void actionPerformed(ActionEvent actionEvent) {<newline46mondego>    //System.out.println(<doubleQuotes46>Selected: <doubleQuotes46> + cb.getSelectedItem());<newline46mondego>     if(cb.getSelectedItem() == <doubleQuotes46>student<doubleQuotes46>){<newline46mondego><newline46mondego>       //Perform the action for student<newline46mondego><newline46mondego>     } <newline46mondego><newline46mondego>      //Repeat this for all items<newline46mondego><newline46mondego>  }<newline46mondego>};<newline46mondego>cb.addActionListener(actionListener);<newline46mondego>"
"4931splitHere46","9528341splitHere46","java [-options] -jar jarfile [args...]"
"4932splitHere46","9528341splitHere46","[-options]"
"4933splitHere46","9528341splitHere46","[args...]"
"4934splitHere46","9528341splitHere46","Manifest-Version: 1.0<newline46mondego>Class-Path: .<newline46mondego>Main-Class: CopyOftheclock<newline46mondego>"
"4935splitHere46","9528341splitHere46","set classpath=clock.jar;.;%classpath%<newline46mondego>"
"4936splitHere46","9528341splitHere46","java [-options] class [args...]<newline46mondego>"
"4937splitHere46","9528341splitHere46","class"
"4938splitHere46","9528341splitHere46","class"
"4939splitHere46","9528341splitHere46","package a.b.c"
"4940splitHere46","9528341splitHere46","a.b.c.CopyOftheclock"
"4941splitHere46","9528341splitHere46","java"
"4942splitHere46","9528341splitHere46","javaw"
"4943splitHere46","9528341splitHere46","main class"
"4944splitHere46","9528341splitHere46","java -help"
"4945splitHere46","9528341splitHere46","[options]"
"4946splitHere46","9528387splitHere46","ArrayList<Account> googleAccounts = new ArrayList<Account>();<newline46mondego><newline46mondego>// Get all accounts <newline46mondego>Account[] accounts = accountManager.getAccounts();<newline46mondego>  for(Account account : accounts) {<newline46mondego>    // Filter out the Google accounts<newline46mondego>    if(account.type.compareToIgnoreCase(<doubleQuotes46>com.google<doubleQuotes46>)) {<newline46mondego>      googleAccounts.add(account);<newline46mondego>    }<newline46mondego>  }<newline46mondego>AccountManager accountManager = AccountManager.get(activity);<newline46mondego><newline46mondego>// Just for the example, I am using the first google account returned.<newline46mondego>Account account = googleAccounts.get(0);<newline46mondego><newline46mondego>// <doubleQuotes46>wise<doubleQuotes46> = Google Spreadheets<newline46mondego>AccountManagerFuture<Bundle> amf = accountManager.getAuthToken(account, <doubleQuotes46>wise<doubleQuotes46>, null, activity, null, null);<newline46mondego><newline46mondego>try {<newline46mondego>  Bundle authTokenBundle = amf.getResult();<newline46mondego>  String authToken = authTokenBundle.getString(AccountManager.KEY_AUTHTOKEN);<newline46mondego><newline46mondego>  // do something with the token<newline46mondego>  InputStream response = sgc.getFeedAsStream(feedUrl, authToken, null, <doubleQuotes46>2.1<doubleQuotes46>);<newline46mondego><newline46mondego>}<newline46mondego>"
"4947splitHere46","9528406splitHere46","JTextField txt = (JTextField) e.getSource();<newline46mondego>System.out.println(txt.getText());<newline46mondego>"
"4948splitHere46","9528409splitHere46","<package name>"
"4949splitHere46","9528409splitHere46","<package name>"
"4950splitHere46","9528409splitHere46","Assert"
"4951splitHere46","9528409splitHere46","ComparisonFailure"
"4952splitHere46","9528409splitHere46","org.junit"
"4953splitHere46","9528409splitHere46","package org.junit;<newline46mondego><newline46mondego>import org.hamcrest.*;<newline46mondego>.....<newline46mondego><newline46mondego>// Referenced classes of package org.junit:<newline46mondego>//            ComparisonFailure<newline46mondego><newline46mondego>public class Assert<newline46mondego>{<newline46mondego>"
"4954splitHere46","9528562splitHere46","PrintWriter"
"4955splitHere46","9528562splitHere46","java.io.File"
"4956splitHere46","9528562splitHere46","FileOutputStream"
"4957splitHere46","9528562splitHere46","FileWriter"
"4958splitHere46","9528562splitHere46","PrintWriter."
"4959splitHere46","9528625splitHere46","public final class Brace {<newline46mondego>    private final char openBrace;<newline46mondego>    private final char closeBrace;<newline46mondego>    private final int row;<newline46mondego>    private final int col;<newline46mondego><newline46mondego>    public Brace(char openBrace, int row, int col) {<newline46mondego>        this.openBrace = openBrace;<newline46mondego>        this.row = row;<newline46mondego>        this.col = col;<newline46mondego><newline46mondego>        switch (openBrace) {<newline46mondego>            case '(':<newline46mondego>                closeBrace = ')';<newline46mondego>                break;<newline46mondego>            case '{':<newline46mondego>                closeBrace = '}';<newline46mondego>                break;<newline46mondego>            case '[':<newline46mondego>                closeBrace = ']';<newline46mondego>                break;<newline46mondego>            default:<newline46mondego>                throw new IllegalArgumentException(<doubleQuotes46>Unsupported opening brace<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public boolean isClosingBrace(char ch) {<newline46mondego>        return closeBrace == ch;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4960splitHere46","9528625splitHere46","Stack<Brace>"
"4961splitHere46","9528693splitHere46","TableModel"
"4962splitHere46","9528693splitHere46","clear()"
"4963splitHere46","9528693splitHere46","Map"
"4964splitHere46","9528797splitHere46","conn = DBConnectionManager.getInstance().getConnection(<doubleQuotes46>myDS<doubleQuotes46>);<newline46mondego>"
"4965splitHere46","9528797splitHere46","myDS"
"4966splitHere46","9529030splitHere46","Date.setYear"
"4967splitHere46","9529030splitHere46","Calendar"
"4968splitHere46","9529030splitHere46","calendar.getTime()"
"4969splitHere46","9529030splitHere46","java.sql.Date"
"4970splitHere46","9529035splitHere46","String.format()"
"4971splitHere46","9529035splitHere46","System.out.println(String.format(<doubleQuotes46>output: %.2f<doubleQuotes46>, 123.456));<newline46mondego>"
"4972splitHere46","9529035splitHere46","output: 123.46<newline46mondego>"
"4973splitHere46","9529038splitHere46","HashMap<String, Object>"
"4974splitHere46","9529038splitHere46","Map<String, Object>"
"4975splitHere46","9529038splitHere46","Map<String, Object>"
"4976splitHere46","9529038splitHere46","HashMap<String, Object>"
"4977splitHere46","9529038splitHere46","Map"
"4978splitHere46","9529038splitHere46","HashMap"
"4979splitHere46","9529038splitHere46","Map"
"4980splitHere46","9529038splitHere46","Map"
"4981splitHere46","9529038splitHere46","LinkedHashMap"
"4982splitHere46","9529038splitHere46","Map"
"4983splitHere46","9529038splitHere46","HashMap"
"4984splitHere46","9529038splitHere46","Map"
"4985splitHere46","9529092splitHere46","Glob_variable g = new Glob_variable();<newline46mondego>        g.setPath(<doubleQuotes46>asdasd<doubleQuotes46>);<newline46mondego>        String path = g.getPath();<newline46mondego>"
"4986splitHere46","9529092splitHere46","Glob_variable g = new Glob_variable();<newline46mondego>String path = g.getPath();<newline46mondego>"
"4987splitHere46","9529092splitHere46","public class Glob_variable <newline46mondego>{<newline46mondego>     private Glob_variable GVariableClass;<newline46mondego>     private static String Path;<newline46mondego>     private Glob_variable()<newline46mondego>     {<newline46mondego>          GVariableClass = this;<newline46mondego>     }<newline46mondego><newline46mondego>     public static Glob_variable getInstance()<newline46mondego>     {<newline46mondego>           if ( GVariableClass == null )<newline46mondego>           {<newline46mondego>                 GVariableClass = new Glob_variable();<newline46mondego>           }<newline46mondego>           return GVariableClass;<newline46mondego>     }<newline46mondego><newline46mondego>        /**********************************************/<newline46mondego>        public void setPath(String Path) {<newline46mondego>            this.Path = Path;<newline46mondego>        }<newline46mondego><newline46mondego>        public String getPath() {<newline46mondego>            return Path;<newline46mondego>        }<newline46mondego>        /**********************************************/<newline46mondego><newline46mondego>    }<newline46mondego>"
"4988splitHere46","9529116splitHere46","cls.cast(o1)<newline46mondego>"
"4989splitHere46","9529240splitHere46","java.lang.Runtime"
"4990splitHere46","9529240splitHere46","exec()"
"4991splitHere46","9529262splitHere46","import java.util.Properties;<newline46mondego><newline46mondego>import edu.stanford.nlp.pipeline.StanfordCoreNLP;<newline46mondego><newline46mondego><newline46mondego>public class NLP {<newline46mondego><newline46mondego>    /**<newline46mondego>     * @param args<newline46mondego>     */<newline46mondego>    public static void main(String[] args) {<newline46mondego>        Properties props = new Properties();<newline46mondego>        props.put(<doubleQuotes46>annotators<doubleQuotes46>, <doubleQuotes46>tokenize, ssplit, pos, lemma, ner, parse, dcoref<doubleQuotes46>);<newline46mondego>        StanfordCoreNLP coreNLP = new StanfordCoreNLP(props);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"4992splitHere46","9529276splitHere46","GetByteArrayElements()"
"4993splitHere46","9529276splitHere46","ReleaseByteArrayElements()"
"4994splitHere46","9529276splitHere46","delete"
"4995splitHere46","9529276splitHere46","gcnew"
"4996splitHere46","9529276splitHere46","GetByteArrayElements()"
"4997splitHere46","9529276splitHere46","jmap"
"4998splitHere46","9529299splitHere46","http://www.mysql.com/downloads/connector/j/<newline46mondego>"
"4999splitHere46","9529303splitHere46","EditText txtData = (EditText) findViewById(R.id.editText1);<newline46mondego>FileWriterTask task = new FileWriterTask();<newline46mondego>task.execute(txtData.getText().toString());<newline46mondego><newline46mondego>public class FileWriterTask extends AsyncTask<String, Void, Void> {<newline46mondego>  @Override<newline46mondego>  protected Void doInBackground(String... params) {<newline46mondego>    // Do your filewriting here. The text should now be in params[0]<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"5000splitHere46","9529351splitHere46","public Map<String, CSSStyleRule> parseCSS() throws IOException {<newline46mondego>    Map<String, CSSStyleRule> rules = new HashMap<String, CSSStyleRule>();<newline46mondego><newline46mondego>    InputSource inputSource = new InputSource(new FileReader(<doubleQuotes46>bootstrap.css<doubleQuotes46>));<newline46mondego>    CSSStyleSheet styleSheet = new CSSOMParser().parseStyleSheet(inputSource, null, null);<newline46mondego><newline46mondego>    CSSRuleList ruleList = styleSheet.getCssRules();<newline46mondego>    for (int i = 0; i < ruleList.getLength(); i++) {<newline46mondego>        CSSRule rule = ruleList.item(i);<newline46mondego>        if (rule.getType() == CSSRule.STYLE_RULE) {<newline46mondego>            CSSStyleRule styleRule = (CSSStyleRule) rule;<newline46mondego>            rules.put(styleRule.getSelectorText(), styleRule);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    return rules;<newline46mondego>}<newline46mondego>"
"5001splitHere46","9529378splitHere46","(i << 48)"
"5002splitHere46","9529378splitHere46","((i & 0xffff0000L) << 16)"
"5003splitHere46","9529378splitHere46","((i >>> 16) & 0xffff0000L)"
"5004splitHere46","9529378splitHere46","(i >>> 48)"
"5005splitHere46","9529378splitHere46","|"
"5006splitHere46","9529378splitHere46","2,1,4,3,6,5,8,7"
"5007splitHere46","9529378splitHere46","4,3,2,1,8,7,6,5"
"5008splitHere46","9529378splitHere46","8,7,0,0,0,0,0,0-->(i << 48)<newline46mondego>0,0,6,5,0,0,0,0-->((i & 0xffff0000L) << 16)<newline46mondego>0,0,0,0,4,3,0,0-->((i >>> 16) & 0xffff0000L)<newline46mondego>0,0,0,0,0,0,2,1-->(i >>> 48)<newline46mondego>"
"5009splitHere46","9529593splitHere46","sqlMapClient.queryForMap(<doubleQuotes46>mymap.getCounts<doubleQuotes46>, args, <doubleQuotes46>key<doubleQuotes46>, <doubleQuotes46>value<doubleQuotes46>);<newline46mondego>"
"5010splitHere46","9529810splitHere46","merge"
"5011splitHere46","9529810splitHere46","FlushModeType.COMMIT"
"5012splitHere46","9529810splitHere46","AUTO"
"5013splitHere46","9529810splitHere46","stock.getActualStockPrices().add(actualStockPrice)"
"5014splitHere46","9529857splitHere46","obj[1]"
"5015splitHere46","9529857splitHere46","obj[1] = new EmpData();<newline46mondego>obj[1].setEmp(1, <doubleQuotes46>Test123<doubleQuotes46>, <doubleQuotes46>09-04-1990<doubleQuotes46>);<newline46mondego>obj[1].setStat(<doubleQuotes46>clerk<doubleQuotes46>, <doubleQuotes46>on-hold<doubleQuotes46>);<newline46mondego>obj[1].disp();<newline46mondego>"
"5016splitHere46","9529939splitHere46","int minutes = 260;<newline46mondego>int hours = minutes / 60;<newline46mondego>int minutesInDisplay = minutes % 60;<newline46mondego>if (hours > 23)<newline46mondego>    hours = hours % 24;<newline46mondego>String postfix = (hours < 12) ? <doubleQuotes46>am<doubleQuotes46> : <doubleQuotes46>pm<doubleQuotes46>;<newline46mondego>NumberFormat formatter = new DecimalFormat(<doubleQuotes46>00<doubleQuotes46>);<newline46mondego>String display = formatter.format(hours) + <doubleQuotes46>:<doubleQuotes46><newline46mondego>        + formatter.format(minutesInDisplay);<newline46mondego>System.out.println(<doubleQuotes46>24 hour formatted time: <doubleQuotes46> + display + <doubleQuotes46> <doubleQuotes46> + postfix);<newline46mondego>"
"5017splitHere46","9529983splitHere46","ContextClassLoader"
"5018splitHere46","9529983splitHere46","Thread.currentThread().getContextClassLoader().getResource(<doubleQuotes46>/conf/configuration.xml<doubleQuotes46>);<newline46mondego>"
"5019splitHere46","9529983splitHere46","Thread.currentThread().getContextClassLoader().getResourceAsStream(<doubleQuotes46>/conf/configuration.xml<doubleQuotes46>);<newline46mondego>"
"5020splitHere46","9529983splitHere46","URL"
"5021splitHere46","9529983splitHere46","InputStream"
"5022splitHere46","9530018splitHere46","org.apache.commons.lang3.SerializationUtils.serialize(Serializable)"
"5023splitHere46","9530042splitHere46","<driverId>:<params>"
"5024splitHere46","9530042splitHere46","HashMap<String, Class>"
"5025splitHere46","9530042splitHere46","<driverId>"
"5026splitHere46","9530042splitHere46","Class driverClass = drivers.get(driverId);<newline46mondego>Constructor constructor = driverClass.getDeclaredConstructor();<newline46mondego>return constructor.newInstance(params);<newline46mondego>"
"5027splitHere46","9530042splitHere46","Class.forName(<doubleQuotes46>com.example.Driver<doubleQuotes46>)"
"5028splitHere46","9530103splitHere46","@Service<newline46mondego>public class ClassA {<newline46mondego>    @Resource<newline46mondego>    private DataSource dataSource;<newline46mondego><newline46mondego>    //...<newline46mondego>}<newline46mondego><newline46mondego>@Service<newline46mondego>public class ClassB {<newline46mondego>    @Resource<newline46mondego>    private DataSource dataSource;<newline46mondego><newline46mondego>    //...<newline46mondego>}<newline46mondego>"
"5029splitHere46","9530103splitHere46","dataSource"
"5030splitHere46","9530103splitHere46","classA"
"5031splitHere46","9530103splitHere46","classB"
"5032splitHere46","9530103splitHere46","<bean/>"
"5033splitHere46","9530103splitHere46","<beans xmlns=<doubleQuotes46>http://www.springframework.org/schema/beans<doubleQuotes46><newline46mondego>xmlns:xsi=<doubleQuotes46>http://www.w3.org/2001/XMLSchema-instance<doubleQuotes46><newline46mondego>xmlns:context=<doubleQuotes46>http://www.springframework.org/schema/context<doubleQuotes46><newline46mondego>xsi:schemaLocation=<doubleQuotes46>http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd<newline46mondego>                    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd<doubleQuotes46>><newline46mondego><newline46mondego>    <context:component-scan base-package=<doubleQuotes46>com.example<doubleQuotes46> /><newline46mondego><newline46mondego>    <!-- ... --><newline46mondego></beans<newline46mondego>"
"5034splitHere46","9530103splitHere46","@Configuration<newline46mondego>public class Cfg {<newline46mondego><newline46mondego>    @Bean<newline46mondego>    public DataSource dataSource() {<newline46mondego>        BasicDataSource ds = new BasicDataSource();<newline46mondego>        ds.setDriverClassName(<doubleQuotes46>oracle.jdbc.driver.OracleDriver);<newline46mondego>        //...<newline46mondego>        return ds;<newline46mondego>    }<newline46mondego><newline46mondego>    @Bean<newline46mondego>    public ClassA classA() {<newline46mondego>        ClassA ca = new ClassA()<newline46mondego>        ca.setDataSource(dataSource());<newline46mondego>        return ca;<newline46mondego>    }<newline46mondego><newline46mondego>    @Bean<newline46mondego>    public ClassB classB() {<newline46mondego>        ClassB cb = new ClassB()<newline46mondego>        cb.setDataSource(dataSource());<newline46mondego>        return cb;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"5035splitHere46","9530103splitHere46","new AnnotationConfigApplicationContext(Cfg.class);<newline46mondego>"
"5036splitHere46","9530103splitHere46","dataSource"
"5037splitHere46","9530142splitHere46","Tree"
"5038splitHere46","9530142splitHere46","tree.addListener(SWT.EraseItem, new Listener()<newline46mondego>{<newline46mondego>  public void handleEvent(Event event)<newline46mondego>  {<newline46mondego>    if ((event.detail & SWT.SELECTED) != 0)<newline46mondego>    {<newline46mondego>      event.detail &= ~SWT.SELECTED;<newline46mondego>    }<newline46mondego>  }<newline46mondego>});<newline46mondego>"
"5039splitHere46","9530217splitHere46","<c:forEach>"
"5040splitHere46","9530217splitHere46","<%-- iterate through the outer list --%><newline46mondego><c:forEach var=<doubleQuotes46>innerList<doubleQuotes46> items=<doubleQuotes46>${outerList}<doubleQuotes46>><newline46mondego>    <%-- iterate through the innerList --%><newline46mondego>    <c:forEach var=<doubleQuotes46>element<doubleQuotes46> items=<doubleQuotes46>${innerList}<doubleQuotes46>><newline46mondego>        <%-- do what you want with the element --%><newline46mondego>    </c:forEach><newline46mondego></c:forEach><newline46mondego>"
"5041splitHere46","9530217splitHere46","Person"
"5042splitHere46","9530217splitHere46","getId()"
"5043splitHere46","9530217splitHere46","getName()"
"5044splitHere46","9530217splitHere46","<%-- iterate through the outer list --%><newline46mondego><c:forEach var=<doubleQuotes46>person<doubleQuotes46> items=<doubleQuotes46>${personList}<doubleQuotes46>><newline46mondego>    ID : ${person.id}<br/><newline46mondego>    Name : <c:out value=<doubleQuotes46>${person.name}<doubleQuotes46>/><newline46mondego></c:forEach><newline46mondego>"
"5045splitHere46","9530255splitHere46","B"
"5046splitHere46","9530255splitHere46","A"
"5047splitHere46","9530255splitHere46","List<String> a = ...;<newline46mondego>Set<String> b = ...;<newline46mondego><newline46mondego>boolean result = new boolean[a.size()];<newline46mondego>for (int i = 0; i < result.length; i++) {<newline46mondego>  result[i] = b.contains(a);<newline46mondego>}<newline46mondego>"
"5048splitHere46","9530255splitHere46","HashSet"
"5049splitHere46","9530255splitHere46","LinkedHashSet"
"5050splitHere46","9530255splitHere46","a"
"5051splitHere46","9530321splitHere46","alternatives"
"5052splitHere46","9530377splitHere46","setUp"
"5053splitHere46","9530377splitHere46","tearDown"
"5054splitHere46","9530377splitHere46","@Before"
"5055splitHere46","9530377splitHere46","@After"
"5056splitHere46","9530377splitHere46","public void testAdd() throws Exception {<newline46mondego>      // wipe database<newline46mondego>      // add something<newline46mondego>      // assert that it was added<newline46mondego>}<newline46mondego>public void testUpdate() throws Exception {<newline46mondego>      // wipe database<newline46mondego>      // add something<newline46mondego>      // update it<newline46mondego>      // assert that it was updated<newline46mondego>}<newline46mondego>public void testDelete() throws Exception {<newline46mondego>      // wipe database<newline46mondego>      // add something<newline46mondego>      // delete it<newline46mondego>      // assert that it was deleted<newline46mondego>}<newline46mondego>"
"5057splitHere46","9530377splitHere46","public void testCRUD() throws Exception {<newline46mondego>      // wipe database<newline46mondego>      // add something<newline46mondego>      // assert that it was added<newline46mondego>      // update it<newline46mondego>      // assert that it was updated<newline46mondego>      // delete it <newline46mondego>      // assert that it was deleted<newline46mondego>}<newline46mondego>"
"5058splitHere46","9530472splitHere46","Iterator"
"5059splitHere46","9530472splitHere46","Iterator.remove"
"5060splitHere46","9530472splitHere46","Iteartor<ChildClass> it = parent.getChildList().iterator();<newline46mondego>while (it.hasNext())<newline46mondego>    if (it.next().isRemoveCandidat()) <newline46mondego>        it.remove();<newline46mondego>"
"5061splitHere46","9530472splitHere46","ConcurrentModificationException"
"5062splitHere46","9530472splitHere46","List.remove"
"5063splitHere46","9530472splitHere46","public static void main(String[] args) {<newline46mondego><newline46mondego>    List<Integer> list = new LinkedList<Integer>();<newline46mondego>    list.add(1);<newline46mondego>    list.add(2);<newline46mondego>    list.add(3);<newline46mondego><newline46mondego>    for (Iterator<Integer> it = list.iterator(); it.hasNext(); )<newline46mondego>        if (it.next().equals(2))<newline46mondego>            it.remove();<newline46mondego><newline46mondego>    System.out.println(list); // prints <doubleQuotes46>[1, 3]<doubleQuotes46><newline46mondego>}<newline46mondego>"
"5064splitHere46","9530479splitHere46","@Max(value=10, message=<doubleQuotes46>My error message<doubleQuotes46>)<newline46mondego>   public int myValue;<newline46mondego>"
"5065splitHere46","9530479splitHere46","@Retention(RetentionPolicy.RUNTIME)<newline46mondego>@Target({ElementType.FIELD, ElementType.PARAMETER})<newline46mondego>@Constraint(checkWith = MaxCheck.class)<newline46mondego>public @interface Max {<newline46mondego><newline46mondego>    String message() default MaxCheck.mes;<newline46mondego>    double value();<newline46mondego>}<newline46mondego>"
"5066splitHere46","9530479splitHere46","Max"
"5067splitHere46","9530479splitHere46","@Override<newline46mondego>    public void configure(Max max) {<newline46mondego>        this.max = max.value();<newline46mondego>        setMessage(max.message());<newline46mondego>    }<newline46mondego>"
"5068splitHere46","9530510splitHere46","ApiProxy.Environment.getAppId()"
"5069splitHere46","9530577splitHere46","double doubleValue = new Double(intValue);<newline46mondego>"
"5070splitHere46","9530621splitHere46","null"
"5071splitHere46","9530621splitHere46","null"
"5072splitHere46","9530735splitHere46","for(Dog d : kennel) {<newline46mondego>    d.bark();<newline46mondego>}<newline46mondego>"
"5073splitHere46","9530821splitHere46","con"
"5074splitHere46","9530821splitHere46","con"
"5075splitHere46","9530821splitHere46","Connection con = new databaseConnection(jdbcResource).getConnection();<newline46mondego>"
"5076splitHere46","9530821splitHere46","this.con"
"5077splitHere46","9530821splitHere46","con"
"5078splitHere46","9530821splitHere46","StoredProc"
"5079splitHere46","9530821splitHere46","NullPointerException"
"5080splitHere46","9530961splitHere46","\u"
"5081splitHere46","9530961splitHere46","\\u"
"5082splitHere46","9530961splitHere46","\"
"5083splitHere46","9530961splitHere46","String in = <doubleQuotes46>lorem ipsum \\u dolor \\\\u sit \n amet<doubleQuotes46>;<newline46mondego><newline46mondego>System.out.println(in);<newline46mondego>System.out.println(in.replaceAll(<doubleQuotes46>\\n<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>)<newline46mondego>                     .replaceAll(<doubleQuotes46>(?<!\\\\)\\\\u<doubleQuotes46>, <doubleQuotes46>\\\\\\\\u<doubleQuotes46>)); <newline46mondego>"
"5084splitHere46","9530961splitHere46","lorem ipsum \u dolor \\u sit <newline46mondego> amet<newline46mondego>lorem ipsum \\u dolor \\u sit  amet<newline46mondego>"
"5085splitHere46","9530961splitHere46","\n"
"5086splitHere46","9530961splitHere46","\u"
"5087splitHere46","9530961splitHere46","\\u"
"5088splitHere46","9530961splitHere46","\\u"
"5089splitHere46","9531027splitHere46","session.createSQLQuery(query, PersonDetailsData.class).list();<newline46mondego>"
"5090splitHere46","9531027splitHere46","select p from PersonDetailData p where p.userId = :userId and p.spaceName =:spaceName<newline46mondego>"
"5091splitHere46","9531076splitHere46","i"
"5092splitHere46","9531076splitHere46","i % 4 == 0"
"5093splitHere46","9531076splitHere46","','"
"5094splitHere46","9531076splitHere46","total_num_elements % 4 != 0"
"5095splitHere46","9531076splitHere46","StringBuilder.deleteCharAt()"
"5096splitHere46","9531456splitHere46","servlet-context.xml"
"5097splitHere46","9531456splitHere46","configuration-context.xml"
"5098splitHere46","9531456splitHere46","configuration-context.xml"
"5099splitHere46","9531456splitHere46","servlet-context.xml"
"5100splitHere46","9531484splitHere46","service(HttpServletRequest req, HttpServletResponse resp)"
"5101splitHere46","9531530splitHere46","InputStream getAsStream(String s)<newline46mondego><newline46mondego>InputStream queryForStream(ViewQuery query);<newline46mondego><newline46mondego>That said, I don't see any good reason NOT to use the methods that map to objects in most cases:<newline46mondego><newline46mondego><T> T get(Class<T> c, String id);<newline46mondego>"
"5102splitHere46","9531534splitHere46","import java.awt.EventQueue;<newline46mondego>import java.awt.event.ActionEvent;<newline46mondego>import java.awt.event.ActionListener;<newline46mondego>import java.util.Random;<newline46mondego><newline46mondego>import javax.swing.*;<newline46mondego>import javax.swing.table.DefaultTableModel;<newline46mondego><newline46mondego>public class TestJTableInsert {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        EventQueue.invokeLater(new Runnable() {<newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                final DefaultTableModel model = new DefaultTableModel(0, 1);<newline46mondego>                new Timer(500, new ActionListener() {<newline46mondego>                    private final Random random = new Random();<newline46mondego>                    private int data = 1;<newline46mondego><newline46mondego>                    @Override<newline46mondego>                    public void actionPerformed(ActionEvent e) {<newline46mondego>                        model.insertRow(random.nextInt(model.getRowCount() + 1),<newline46mondego>                                new Object[] { data++ });<newline46mondego>                    }<newline46mondego>                }).start();<newline46mondego><newline46mondego>                final JTable table = new JTable(model);<newline46mondego>                JPopupMenu popup = new JPopupMenu();<newline46mondego>                popup.add(new AbstractAction(<doubleQuotes46>Which row is this?<doubleQuotes46>) {<newline46mondego><newline46mondego>                    @Override<newline46mondego>                    public void actionPerformed(ActionEvent e) {<newline46mondego>                        JOptionPane.showMessageDialog(table,<newline46mondego>                                <doubleQuotes46>This is row <doubleQuotes46> + table.getValueAt(table.getSelectedRow(), 0));<newline46mondego>                    }<newline46mondego>                });<newline46mondego>                table.setComponentPopupMenu(popup);<newline46mondego>                JFrame frame = new JFrame(<doubleQuotes46>Test<doubleQuotes46>);<newline46mondego>                frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);<newline46mondego>                frame.getContentPane().add(new JScrollPane(table));<newline46mondego>                frame.pack();<newline46mondego>                frame.setLocationRelativeTo(null);<newline46mondego>                frame.setVisible(true);<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5103splitHere46","9531670splitHere46","."
"5104splitHere46","9531712splitHere46","String date = <doubleQuotes46>12:00PM<doubleQuotes46>;<newline46mondego>if (date.indexOf(<doubleQuotes46>PM<doubleQuotes46>)!=-1)//its pm<newline46mondego>{<newline46mondego>    int pmindex = date.indexOf(<doubleQuotes46>PM<doubleQuotes46>);<newline46mondego>    int separator=date.indexOf(<doubleQuotes46>:<doubleQuotes46>);<newline46mondego>    int hour = Integer.parseInt(date.substring(0, separator));<newline46mondego>    int minute = Integer.parseInt(date.substring(separator+1,pmindex));<newline46mondego>    hour = hour+12;<newline46mondego>    System.out.println(<doubleQuotes46>Time is: <doubleQuotes46> + hour);<newline46mondego>}<newline46mondego>"
"5105splitHere46","9531732splitHere46","@SuppressWarnings(<doubleQuotes46>unused<doubleQuotes46>)"
"5106splitHere46","9531732splitHere46","whatever"
"5107splitHere46","9531732splitHere46","@Override"
"5108splitHere46","9531732splitHere46","@SuppressWarnings(<doubleQuotes46>unused<doubleQuotes46>)"
"5109splitHere46","9531857splitHere46","Vector"
"5110splitHere46","9531962splitHere46","org.joda.time.chrono"
"5111splitHere46","9531980splitHere46","DataHelper dh = new DataHelper(Showplace.this);"
"5112splitHere46","9531980splitHere46","dh = new DataHelper(Showplace.this);"
"5113splitHere46","9531988splitHere46","C:\WTK2.5.1\bin\preverify.exe -classpath d:\J2ME-Polish2.1.4\import\mmapi.jar;d:\J2ME-Polish2.1.4\import\cldc-1.0.jar;d:\J2ME-Polish2.1.4\import\midp-2.0.jar;d:\J2ME-Polish2.1.4\import\nokia-ui.jar;d:\J2ME-Polish2.1.4\import\wmapi-2.0.jar;d:\J2ME-Polish2.1.4\import\wmapi.jar;d:\J2ME-Polish2.1.4\import\btapi.jar;d:\J2ME-Polish2.1.4\import\m3g.jar;d:\J2ME-Polish2.1.4\import\jsr172.jar;d:\J2ME-Polish2.1.4\import\fileconnection.jar;d:\J2ME-Polish2.1.4\import\pim.jar;d:\J2ME-Polish2.1.4\import\m2g.jar -d D:\Faraz\development\J2ME-Polish-Projectaaaa\build\test\Nokia\7610\en_US\classes -nofp -nofinalize -nonative D:\Faraz\development\J2ME-Polish-Projectaaaa\build\test\Nokia\7610\en_US\classes <newline46mondego>"
"5114splitHere46","9531988splitHere46","cldc-1.0.jar"
"5115splitHere46","9532059splitHere46","public class MyClass {<newline46mondego>    private Random random = new Random(System.currentTimeMillis());<newline46mondego><newline46mondego>public double returnRandom() {<newline46mondego>    return this.random.nextDouble();<newline46mondego>}<newline46mondego>}<newline46mondego>"
"5116splitHere46","9532199splitHere46","table.setSortOrderCycle(ASCENDING, DESCENDING, UNSORTED);<newline46mondego>"
"5117splitHere46","9532296splitHere46","public static boolean intervallContains(int low, int high, int n) {<newline46mondego>    return n >= low && n <= high;<newline46mondego>}<newline46mondego>"
"5118splitHere46","9532339splitHere46","aCol"
"5119splitHere46","9532339splitHere46","NUMBER_COL"
"5120splitHere46","9532339splitHere46","aRow"
"5121splitHere46","9532339splitHere46","aCol"
"5122splitHere46","9532339splitHere46","aCol + word.length()"
"5123splitHere46","9532339splitHere46","BLANK_ELEMENT"
"5124splitHere46","9532339splitHere46","public boolean isHorizontalSpaceFree(final int aRow, final int aCol, final String word) {<newline46mondego>    // Asserts that the word will fit in the remaining cells<newline46mondego>    if(aCol + word.length() > NUMBER_COLS) {<newline46mondego>        return false;<newline46mondego>    }<newline46mondego>    // Asserts that each cell in the row aRow between aCol and aCol+word.length() are empty<newline46mondego>    char[] columns = letterGrid[aRow] // I've assume your grid is made up of chars<newline46mondego>    for(int i = aCol; i < aCol + word.length(); i++) {<newline46mondego>        if(columns[i] != BLANK_ELEMENT) {<newline46mondego>            return false;<newline46mondego>        }<newline46mondego>    }<newline46mondego>    // There is enough remaining blank cells to insert the word<newline46mondego>    return true;<newline46mondego>}<newline46mondego>"
"5125splitHere46","9532339splitHere46","true"
"5126splitHere46","9532339splitHere46","false"
"5127splitHere46","9532376splitHere46","java.io"
"5128splitHere46","9532376splitHere46","import"
"5129splitHere46","9532449splitHere46","XMLLexicon lexicon = new XMLLexicon(<doubleQuotes46>path\\to\\default-lexicon.xml<doubleQuotes46>);<newline46mondego>WordElement word = lexicon.getWord(<doubleQuotes46>live<doubleQuotes46>, LexicalCategory.VERB);<newline46mondego>InflectedWordElement infl = new InflectedWordElement(word);<newline46mondego>infl.setFeature(Feature.TENSE, Tense.PAST);<newline46mondego>Realiser realiser = new Realiser(lexicon);<newline46mondego>String past = realiser.realise(infl).getRealisation();<newline46mondego>System.out.println(past);<newline46mondego>"
"5130splitHere46","9532507splitHere46","setReadOnly()"
"5131splitHere46","9532507splitHere46","true"
"5132splitHere46","9532507splitHere46","false"
"5133splitHere46","9532614splitHere46","\"
"5134splitHere46","9532614splitHere46","string = string.replaceAll (<doubleQuotes46> <doubleQuotes46>, <doubleQuotes46>\\ <doubleQuotes46>);<newline46mondego>"
"5135splitHere46","9532614splitHere46","\"
"5136splitHere46","9532614splitHere46","\n"
"5137splitHere46","9532614splitHere46","\r"
"5138splitHere46","9532614splitHere46","\b    backspace<newline46mondego>\t    tab<newline46mondego>\n    linefeed (newline)<newline46mondego>\f    form feed<newline46mondego>\r    carriage return<newline46mondego>\<doubleQuotes46>    double quote<newline46mondego>\'    single quote<newline46mondego>\\    backslash<newline46mondego>"
"5139splitHere46","9532614splitHere46","\0"
"5140splitHere46","9532614splitHere46","\12"
"5141splitHere46","9532614splitHere46","\377"
"5142splitHere46","9532614splitHere46","separatorChar"
"5143splitHere46","9532614splitHere46","/"
"5144splitHere46","9532614splitHere46","\"
"5145splitHere46","9532721splitHere46","import java.awt.*;<newline46mondego>import java.text.SimpleDateFormat;<newline46mondego>import java.util.*;<newline46mondego>import javax.swing.*;<newline46mondego>import javax.swing.event.*;<newline46mondego><newline46mondego>public class TimeZoneSpinners {<newline46mondego><newline46mondego>    private final String[] zones = {<doubleQuotes46>Asia/Tokyo<doubleQuotes46>, <doubleQuotes46>Asia/Hong_Kong<doubleQuotes46>,<newline46mondego>        <doubleQuotes46>Asia/Calcutta<doubleQuotes46>, <doubleQuotes46>Europe/Paris<doubleQuotes46>, <doubleQuotes46>Europe/London<doubleQuotes46>,<newline46mondego>        <doubleQuotes46>America/New_York<doubleQuotes46>, <doubleQuotes46>America/Los_Angeles<doubleQuotes46><newline46mondego>    };<newline46mondego>    private final JLabel[] labels = new JLabel[zones.length];<newline46mondego>    private final SimpleDateFormat[] formats = new SimpleDateFormat[zones.length];<newline46mondego>    private JSpinner spinner;<newline46mondego>    private SpinnerDateModel model;<newline46mondego>    private SimpleDateFormat format;<newline46mondego>    private JPanel panel;<newline46mondego>    private JFrame frame = new JFrame();<newline46mondego><newline46mondego>    public void makeUI() {<newline46mondego>        Calendar cal = Calendar.getInstance();<newline46mondego>        Date date = cal.getTime();<newline46mondego>        model = new SpinnerDateModel();<newline46mondego>        model.setValue(date);<newline46mondego>        spinner = new JSpinner(model);<newline46mondego>        spinner.addChangeListener(new ChangeListener() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void stateChanged(ChangeEvent e) {<newline46mondego>                Date date = (Date) ((JSpinner) e.getSource()).getValue();<newline46mondego>                for (int i = 0; i < labels.length; i++) {<newline46mondego>                    labels[i].setText(formats[i].format(date));<newline46mondego>                }<newline46mondego>            }<newline46mondego>        });<newline46mondego>        format = ((JSpinner.DateEditor) spinner.getEditor()).getFormat();<newline46mondego>        format.setTimeZone(TimeZone.getTimeZone(zones[0]));<newline46mondego>        format.applyPattern(<doubleQuotes46>yyyy-MM-dd HH:mm:ss<doubleQuotes46>);<newline46mondego>        panel = new JPanel(new GridLayout(zones.length, 2, 10, 10));<newline46mondego>        for (int i = 0; i < zones.length; i++) {<newline46mondego>            formats[i] = new SimpleDateFormat(<doubleQuotes46>yyyy-MMM-dd HH:mm:ss<doubleQuotes46>);<newline46mondego>            formats[i].setTimeZone(TimeZone.getTimeZone(zones[i]));<newline46mondego>            JLabel label = new JLabel(zones[i]);<newline46mondego>            labels[i] = new JLabel(formats[i].format(date));<newline46mondego>            panel.add(label);<newline46mondego>            panel.add(labels[i]);<newline46mondego>        }<newline46mondego>        frame.setLayout(new BorderLayout(10, 10));<newline46mondego>        frame.add(spinner, BorderLayout.NORTH);<newline46mondego>        frame.add(panel, BorderLayout.CENTER);<newline46mondego>        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        frame.pack();<newline46mondego>        frame.setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        SwingUtilities.invokeLater(new Runnable() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                new TimeZoneSpinners().makeUI();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5146splitHere46","9532732splitHere46","f:validateRequired"
"5147splitHere46","9532732splitHere46","f:validateRequired"
"5148splitHere46","9532732splitHere46","required=<doubleQuotes46>true<doubleQuotes46>"
"5149splitHere46","9532732splitHere46","required=<doubleQuotes46>true<doubleQuotes46>"
"5150splitHere46","9532796splitHere46","import java.awt.*;<newline46mondego>import java.text.SimpleDateFormat;<newline46mondego>import java.util.*;<newline46mondego>import javax.swing.*;<newline46mondego>import javax.swing.event.*;<newline46mondego><newline46mondego>public class TimeZoneSpinners {<newline46mondego><newline46mondego>    private final String[] zones = {<doubleQuotes46>Asia/Tokyo<doubleQuotes46>, <doubleQuotes46>Asia/Hong_Kong<doubleQuotes46>,<newline46mondego>        <doubleQuotes46>Asia/Calcutta<doubleQuotes46>, <doubleQuotes46>Europe/Paris<doubleQuotes46>, <doubleQuotes46>Europe/London<doubleQuotes46>,<newline46mondego>        <doubleQuotes46>America/New_York<doubleQuotes46>, <doubleQuotes46>America/Los_Angeles<doubleQuotes46><newline46mondego>    };<newline46mondego>    private final JLabel[] labels = new JLabel[zones.length];<newline46mondego>    private final SimpleDateFormat[] formats = new SimpleDateFormat[zones.length];<newline46mondego>    private JSpinner spinner;<newline46mondego>    private SpinnerDateModel model;<newline46mondego>    private SimpleDateFormat format;<newline46mondego>    private JPanel panel;<newline46mondego>    private JFrame frame = new JFrame();<newline46mondego><newline46mondego>    public void makeUI() {<newline46mondego>        Calendar cal = Calendar.getInstance();<newline46mondego>        Date date = cal.getTime();<newline46mondego>        model = new SpinnerDateModel();<newline46mondego>        model.setValue(date);<newline46mondego>        spinner = new JSpinner(model);<newline46mondego>        spinner.addChangeListener(new ChangeListener() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void stateChanged(ChangeEvent e) {<newline46mondego>                Date date = (Date) ((JSpinner) e.getSource()).getValue();<newline46mondego>                for (int i = 0; i < labels.length; i++) {<newline46mondego>                    labels[i].setText(formats[i].format(date));<newline46mondego>                }<newline46mondego>            }<newline46mondego>        });<newline46mondego>        format = ((JSpinner.DateEditor) spinner.getEditor()).getFormat();<newline46mondego>        format.setTimeZone(TimeZone.getTimeZone(zones[0]));<newline46mondego>        format.applyPattern(<doubleQuotes46>yyyy-MM-dd HH:mm:ss<doubleQuotes46>);<newline46mondego>        panel = new JPanel(new GridLayout(zones.length, 2, 10, 10));<newline46mondego>        for (int i = 0; i < zones.length; i++) {<newline46mondego>            formats[i] = new SimpleDateFormat(<doubleQuotes46>yyyy-MMM-dd HH:mm:ss<doubleQuotes46>);<newline46mondego>            formats[i].setTimeZone(TimeZone.getTimeZone(zones[i]));<newline46mondego>            JLabel label = new JLabel(zones[i]);<newline46mondego>            labels[i] = new JLabel(formats[i].format(date));<newline46mondego>            panel.add(label);<newline46mondego>            panel.add(labels[i]);<newline46mondego>        }<newline46mondego>        frame.setLayout(new BorderLayout(10, 10));<newline46mondego>        frame.add(spinner, BorderLayout.NORTH);<newline46mondego>        frame.add(panel, BorderLayout.CENTER);<newline46mondego>        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        frame.pack();<newline46mondego>        frame.setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        SwingUtilities.invokeLater(new Runnable() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                new TimeZoneSpinners().makeUI();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5151splitHere46","9532850splitHere46","."
"5152splitHere46","9532850splitHere46","<jar jarfile=<doubleQuotes46>dummy.jar<doubleQuotes46>><newline46mondego>            <manifest><newline46mondego>                    <attribute name=<doubleQuotes46>Main-Class<doubleQuotes46> value=<doubleQuotes46>com.package.Class<doubleQuotes46>/><newline46mondego>                    <attribute name=<doubleQuotes46>Class-Path<doubleQuotes46> value=<doubleQuotes46>. ${jar.class.path}<doubleQuotes46>/><newline46mondego>            </manifest>               <newline46mondego>    </jar><newline46mondego>"
"5153splitHere46","9533007splitHere46","static volatile int count=0;<newline46mondego> static volatile int count2=0;<newline46mondego>"
"5154splitHere46","9533089splitHere46","jsoup"
"5155splitHere46","9533089splitHere46","import org.jsoup.Jsoup;<newline46mondego>import org.jsoup.nodes.Document;<newline46mondego>import org.jsoup.nodes.Element;<newline46mondego><newline46mondego>public class A {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        String html = <doubleQuotes46><html><head><title>First parse</title></head><body><p>Parsed HTML into a doc.</p></body></html><doubleQuotes46>;<newline46mondego>        Document doc = Jsoup.parse(html);<newline46mondego>        Element pTag = doc.select(<doubleQuotes46>body > p<doubleQuotes46>).first(); // the p tag<newline46mondego>        String pContent = pTag.text();<newline46mondego>        pContent = pContent.substring(0, 7) + <doubleQuotes46>... (too long)<doubleQuotes46>;<newline46mondego>        pTag.text(pContent);<newline46mondego>        System.out.println(doc);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5156splitHere46","9533089splitHere46","<html><newline46mondego> <head><newline46mondego>  <title>First parse</title><newline46mondego> </head><newline46mondego> <body><newline46mondego>  <p>Parsed ... (too long)</p><newline46mondego> </body><newline46mondego></html><newline46mondego>"
"5157splitHere46","9533091splitHere46","@Override<newline46mondego>public Dimension getPreferredSize() {<newline46mondego>    if (getLayout() != null) {<newline46mondego>        return getLayout().preferredLayoutSize(this);<newline46mondego>    }<newline46mondego>    return super.getPreferredSize();<newline46mondego>}<newline46mondego>"
"5158splitHere46","9533200splitHere46","JTree#setInvokesStopCellEditing(true)"
"5159splitHere46","9533200splitHere46","TreeModel#valueForPathChanged()"
"5160splitHere46","9533238splitHere46","JTable"
"5161splitHere46","9533238splitHere46","JPanel"
"5162splitHere46","9533238splitHere46","TitledBorder"
"5163splitHere46","9533238splitHere46","JPanel"
"5164splitHere46","9533238splitHere46","import javax.swing.*;<newline46mondego>import javax.swing.border.TitledBorder;<newline46mondego><newline46mondego>public class TableTitle<newline46mondego>{<newline46mondego>    public TableTitle ()<newline46mondego>    {<newline46mondego>        JFrame frame = new JFrame ();<newline46mondego>        frame.setDefaultCloseOperation (JFrame.DISPOSE_ON_CLOSE);<newline46mondego><newline46mondego>        JPanel panel = new JPanel ();<newline46mondego>        panel.setBorder (BorderFactory.createTitledBorder (BorderFactory.createEtchedBorder (),<newline46mondego>                                                            <doubleQuotes46>Table Title<doubleQuotes46>,<newline46mondego>                                                            TitledBorder.CENTER,<newline46mondego>                                                            TitledBorder.TOP));<newline46mondego><newline46mondego><newline46mondego>        JTable table = new JTable (3, 3);<newline46mondego><newline46mondego>        panel.add (table);<newline46mondego><newline46mondego>        frame.add (panel);<newline46mondego><newline46mondego>        frame.setLocationRelativeTo (null);<newline46mondego>        frame.pack ();<newline46mondego>        frame.setVisible (true);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main (String[] args)<newline46mondego>    {<newline46mondego>        SwingUtilities.invokeLater (new Runnable ()<newline46mondego>        {<newline46mondego>            @Override public void run ()<newline46mondego>            {<newline46mondego>                TableTitle t = new TableTitle ();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5165splitHere46","9533441splitHere46","class ParserTask extends AsyncTask<String, List<Message>, Long> {<newline46mondego><newline46mondego>    protected Long doInBackground(String... urls) {<newline46mondego>        if (urls == null || urls.length == 0)<newline46mondego>            return null;<newline46mondego>        for (String url : urls) {<newline46mondego>            SaxFeedParser rss = new SaxFeedParser(url);<newline46mondego>            List<Message> messages = rss.parse();<newline46mondego>            publishProgress(messages);<newline46mondego>        }<newline46mondego>        return null; //return somethingForPostExecute;<newline46mondego>    }<newline46mondego><newline46mondego>    protected void onProgressUpdate(List<Message>... messages) {<newline46mondego>        if (messages == null || messages.length == 0)<newline46mondego>            return;<newline46mondego>        for (Message message : messages[0]) {<newline46mondego>            // tv.appendText(message);<newline46mondego>            // or call method from GUI thread (the activity)<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    protected void onPostExecute(Long nr) {<newline46mondego><newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5166splitHere46","9533441splitHere46","new ParserTask().execute(<doubleQuotes46>http://www.androidster.com/android_news.rss<doubleQuotes46>);<newline46mondego>"
"5167splitHere46","9533441splitHere46","new ParserTask().execute(new String[]{<doubleQuotes46>http://www.androidster.com/android_news.rss<doubleQuotes46>, <doubleQuotes46>...<doubleQuotes46>});<newline46mondego>"
"5168splitHere46","9533498splitHere46","new AddressBook.newBuilder();<newline46mondego>"
"5169splitHere46","9533498splitHere46","newBuilder()"
"5170splitHere46","9533498splitHere46","AddressBook.Builder builder = AddressBook.newBuilder();<newline46mondego>"
"5171splitHere46","9533835splitHere46","main()"
"5172splitHere46","9533836splitHere46","<%@page import= <doubleQuotes46>com.mycompany.Number<doubleQuotes46> %><newline46mondego><%@ taglib uri=<doubleQuotes46>http://java.sun.com/jsp/jstl/core<doubleQuotes46> prefix=<doubleQuotes46>c<doubleQuotes46>%><newline46mondego><%<newline46mondego>    pageContext.setAttribute(<doubleQuotes46>addResult<doubleQuotes46>, Number.add(7, 8));<newline46mondego>%><newline46mondego><html><newline46mondego><body><newline46mondego>  JSP 1.x: Result is: <c:out value=<doubleQuotes46>${addResult}<doubleQuotes46> /><br/><newline46mondego>  JSP 2.x: Result is: ${addResult}<newline46mondego></body><newline46mondego></html><newline46mondego>"
"5173splitHere46","9534024splitHere46","ObjectMapper mapper = new ObjectMapper();<newline46mondego>mapper.setPropertyNamingStrategy(<newline46mondego>    PropertyNamingStrategy.CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES);<newline46mondego>mapper.writeValue(outStream, bean);<newline46mondego>"
"5174splitHere46","9534034splitHere46","Lists.partition(List, int)"
"5175splitHere46","9534034splitHere46","List.subList(int, int)"
"5176splitHere46","9534034splitHere46","Lists.partition(List, int)"
"5177splitHere46","9534034splitHere46","List"
"5178splitHere46","9534034splitHere46","List"
"5179splitHere46","9534034splitHere46","int"
"5180splitHere46","9534034splitHere46","List<Stuff> l = new ArrayList<Stuff>();<newline46mondego><newline46mondego>// [...] populate l with Stuff here [...]<newline46mondego><newline46mondego>// partitioning:<newline46mondego>List<List<Stuff>> ll = Lists.partition(l, 5);<newline46mondego>// you now have a list containing sub-lists of at most 5 elements<newline46mondego>"
"5181splitHere46","9534034splitHere46","List.subList"
"5182splitHere46","9534034splitHere46","List.subList(int, int)"
"5183splitHere46","9534034splitHere46","package com.stackoverflow.haylem.sublists;<newline46mondego><newline46mondego>import java.util.ArrayList;<newline46mondego>import java.util.List;<newline46mondego><newline46mondego>public class SubLists {<newline46mondego><newline46mondego>  public static <T> List<List<T>> partition(List<T> l, final int nPartitions) {<newline46mondego>    final List<List<T>> partitions = new ArrayList<List<T>>(nPartitions);<newline46mondego>    final int           nElements  = l.size() / nPartitions; // number of elements per full partition<newline46mondego>    final int           nRest      = l.size() % nElements;   // size of the last partition (if any)<newline46mondego><newline46mondego>    for (int i = 0; i < nPartitions; i++) { // create our nPartitions partitions<newline46mondego>      partitions.add(l.subList(             // one subList per partition<newline46mondego>          i * nElements,<newline46mondego>          i * nElements + nElements<newline46mondego>      ));<newline46mondego>    }<newline46mondego>    if (nRest > 0) {                        // remainder sublist<newline46mondego>      partitions.add(l.subList(<newline46mondego>          nPartitions * nElements,<newline46mondego>          (nPartitions * nElements) + nRest));<newline46mondego>    }<newline46mondego>    return (partitions);<newline46mondego>  }<newline46mondego><newline46mondego>  /**<newline46mondego>   * Generates a dummy list for testing<newline46mondego>   */<newline46mondego>  public static List<String>      generateStringList(final int size) {<newline46mondego>    final List<String> data = new ArrayList<String>(size);<newline46mondego><newline46mondego>    for (int i = 0; i < 129; i++) {<newline46mondego>      data.add(<doubleQuotes46>String <doubleQuotes46> + i);<newline46mondego>    }<newline46mondego>    return (data);<newline46mondego>  }<newline46mondego><newline46mondego>  /**<newline46mondego>   * Prints out all the sublists to visualize partitioning<newline46mondego>   */<newline46mondego>  public static <T> void          printSubLists(final List<List<T>> sLists) {<newline46mondego>    for (int i = 0; i < sLists.size(); i++) { // iterates over all sublists<newline46mondego>      System.out.println(<doubleQuotes46>partition <doubleQuotes46> + i);<newline46mondego>      for (final T element : sLists.get(i)) { // prints out current sublist<newline46mondego>        System.out.println(<doubleQuotes46> <doubleQuotes46> + element);    // prints out current element<newline46mondego>      }<newline46mondego>    }<newline46mondego>  }<newline46mondego><newline46mondego>  public static void              test() {<newline46mondego>    final List<String> data = generateStringList(129);<newline46mondego><newline46mondego>    // splits l in five partitions and<newline46mondego>    // prints out 5 partitions of 25 elements and 1 of 4<newline46mondego>    printSubLists(partition(data, 5));<newline46mondego><newline46mondego>    // splits l in partitions of 4 or less elements and<newline46mondego>    // prints out 32 partitions of 4 elements and 1 of 1<newline46mondego>    printSubLists(partition(data, data.size() / 4));<newline46mondego>  }<newline46mondego><newline46mondego>}<newline46mondego>"
"5184splitHere46","9534070splitHere46","public File (java.io.File file) {<newline46mondego>    super(file.getPath());<newline46mondego>}<newline46mondego>"
"5185splitHere46","9534170splitHere46","birosoft.com"
"5186splitHere46","9534170splitHere46","liquid"
"5187splitHere46","9534257splitHere46","public class Test<newline46mondego>{<newline46mondego>    public void DoSomething(Type myClass)<newline46mondego>    {<newline46mondego>        if(!typeof(Test).IsAssignableFrom(myClass))<newline46mondego>        {<newline46mondego>            throw new ArgumentException(<doubleQuotes46>myClass must refer to Test or a derived class<doubleQuotes46>, <doubleQuotes46>myClass<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5188splitHere46","9534289splitHere46","String s = <doubleQuotes46>{\<doubleQuotes46>Data\<doubleQuotes46>:[{\<doubleQuotes46>user\<doubleQuotes46>:1,\<doubleQuotes46>items\<doubleQuotes46>:[{\<doubleQuotes46>item\<doubleQuotes46>:1},{\<doubleQuotes46>item\<doubleQuotes46>:2},{\<doubleQuotes46>item\<doubleQuotes46>:3},{\<doubleQuotes46>item\<doubleQuotes46>:4}]},{\<doubleQuotes46>user\<doubleQuotes46>:2,\<doubleQuotes46>items\<doubleQuotes46>:[{\<doubleQuotes46>item\<doubleQuotes46>:11},{\<doubleQuotes46>item\<doubleQuotes46>:2},{\<doubleQuotes46>item\<doubleQuotes46>:3},{\<doubleQuotes46>item\<doubleQuotes46>:4}]},{\<doubleQuotes46>user\<doubleQuotes46>:3,\<doubleQuotes46>items\<doubleQuotes46>:[{\<doubleQuotes46>item\<doubleQuotes46>:11},{\<doubleQuotes46>item\<doubleQuotes46>:2},{\<doubleQuotes46>item\<doubleQuotes46>:3},{\<doubleQuotes46>item\<doubleQuotes46>:4}]}]}<doubleQuotes46>;<newline46mondego>    JSONObject json = new JSONObject(s);<newline46mondego>    JSONArray data = json.getJSONArray(<doubleQuotes46>Data<doubleQuotes46>);<newline46mondego>    for(int i=0; i< data.length(); i++){<newline46mondego>        JSONObject userData = data.getJSONObject(i);<newline46mondego>        if(userData.getInt(<doubleQuotes46>user<doubleQuotes46>) ==2 ){<newline46mondego>              JSONArray items = userData.getJSONArray(<doubleQuotes46>items<doubleQuotes46>);<newline46mondego>              JSONObject item = items.getJSONObject(3);<newline46mondego>              System.out.println(<doubleQuotes46>item#4: <doubleQuotes46> + item.getInt(<doubleQuotes46>item<doubleQuotes46>));<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"5189splitHere46","9534289splitHere46","{<newline46mondego>        <doubleQuotes46>Data<doubleQuotes46>:[<newline46mondego>             {<newline46mondego>                <doubleQuotes46>user<doubleQuotes46>:1,<newline46mondego>                <doubleQuotes46>items<doubleQuotes46>:<newline46mondego>                      [{<doubleQuotes46>item<doubleQuotes46>:1},{<doubleQuotes46>item<doubleQuotes46>:2},{<doubleQuotes46>item<doubleQuotes46>:3},{<doubleQuotes46>item<doubleQuotes46>:4}]<newline46mondego>             },<newline46mondego>             {<newline46mondego>                <doubleQuotes46>user<doubleQuotes46>:2,<newline46mondego>                <doubleQuotes46>items<doubleQuotes46>:<newline46mondego>                      [{<doubleQuotes46>item<doubleQuotes46>:11},{<doubleQuotes46>item<doubleQuotes46>:2},{<doubleQuotes46>item<doubleQuotes46>:3},{<doubleQuotes46>item<doubleQuotes46>:4}]<newline46mondego>             },<newline46mondego>            {<newline46mondego>               <doubleQuotes46>user<doubleQuotes46>:3,<newline46mondego>                <doubleQuotes46>items<doubleQuotes46>:<newline46mondego>                      [{<doubleQuotes46>item<doubleQuotes46>:11},{<doubleQuotes46>item<doubleQuotes46>:2},{<doubleQuotes46>item<doubleQuotes46>:3},{<doubleQuotes46>item<doubleQuotes46>:4}]<newline46mondego>             }<newline46mondego>             ]<newline46mondego>}<newline46mondego>"
"5190splitHere46","9534320splitHere46","service"
"5191splitHere46","9534320splitHere46","ExecutorService ex = Executors.newFixedThreadPool(20); //Only 20 tasks at a given time<newline46mondego>"
"5192splitHere46","9534320splitHere46","service"
"5193splitHere46","9534320splitHere46","ex.shutdown();<newline46mondego>"
"5194splitHere46","9534361splitHere46","<form action=<doubleQuotes46>@{Texts.uploadTextFile()}<doubleQuotes46> method=<doubleQuotes46>POST<doubleQuotes46> enctype=<doubleQuotes46>multipart/form-data<doubleQuotes46>><newline46mondego>    <input type=<doubleQuotes46>text<doubleQuotes46> name=<doubleQuotes46>title<doubleQuotes46> /><newline46mondego>    <input type=<doubleQuotes46>file<doubleQuotes46> id=<doubleQuotes46>textFile<doubleQuotes46> name=<doubleQuotes46>textFile<doubleQuotes46> /><newline46mondego>    <input type=<doubleQuotes46>submit<doubleQuotes46> value=<doubleQuotes46>Upload<doubleQuotes46> /><newline46mondego></form><newline46mondego>"
"5195splitHere46","9534361splitHere46","public static void uploadTextFile(String title, File textFile) {<newline46mondego>   String[] lines = FileUtils.readLines(textFile);<newline46mondego>}<newline46mondego>"
"5196splitHere46","9534409splitHere46","yourList"
"5197splitHere46","9534409splitHere46","Object randomObj = yourList[(int)Math.random() * list.length];<newline46mondego>"
"5198splitHere46","9534583splitHere46","Files.newDirectoryStream(Paths.get(<doubleQuotes46>/tmp<doubleQuotes46>), new DirectoryStream.Filter[Path] {<newline46mondego>  def accept(entry: Path) = false<newline46mondego>})<newline46mondego>"
"5199splitHere46","9534583splitHere46","class PathPredicateFilter(p: Path => Boolean) <newline46mondego>  extends DirectoryStream.Filter[Path] {<newline46mondego>  def accept(entry: Path) = p(entry)<newline46mondego>}<newline46mondego>implicit def PathPredicate_Is_DirectoryStreamFilter(p: Path => Boolean) <newline46mondego>  = new PathPredicateFilter(p)<newline46mondego>"
"5200splitHere46","9534583splitHere46","Files.newDirectoryStream(Paths.get(<doubleQuotes46>/tmp<doubleQuotes46>), (p: Path) => false /* your code here */)<newline46mondego>"
"5201splitHere46","9534622splitHere46","\.[1-9]*(0\d*)<newline46mondego>"
"5202splitHere46","9534622splitHere46","(?:\.[1-9]+|(?=\.))(\.?0\d*)<newline46mondego>"
"5203splitHere46","9534622splitHere46","Pattern p = Pattern.compile(<doubleQuotes46>(?:\\.[1-9]+|(?=\\.))(\\.?0\\d*)<doubleQuotes46>);<newline46mondego><newline46mondego>String[] strs = {<doubleQuotes46>180.570123<doubleQuotes46>, <doubleQuotes46>180.570<doubleQuotes46>, <doubleQuotes46>180.0123<doubleQuotes46>, <doubleQuotes46>180.0<doubleQuotes46>, <doubleQuotes46>180123<doubleQuotes46>, <doubleQuotes46>180<doubleQuotes46>, <doubleQuotes46>180.2030405<doubleQuotes46>};<newline46mondego><newline46mondego>for (String s : strs) {<newline46mondego>    Matcher m = p.matcher(s);<newline46mondego>    System.out.printf(<doubleQuotes46>%-12s: Match: %s%n<doubleQuotes46>, s,<newline46mondego>        m.find() ? m.group(1) : <doubleQuotes46>n/a<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"5204splitHere46","9534622splitHere46","180.570123  : Match: 0123<newline46mondego>180.570     : Match: 0<newline46mondego>180.0123    : Match: .0123<newline46mondego>180.0       : Match: .0<newline46mondego>180123      : Match: n/a<newline46mondego>180         : Match: n/a<newline46mondego>180.2030405 : Match: 030405<newline46mondego>"
"5205splitHere46","9534704splitHere46","com.google.gwt.user.client.rpc.IsSerializable"
"5206splitHere46","9534757splitHere46","DevicePolicyManager"
"5207splitHere46","9534757splitHere46","lockNow()"
"5208splitHere46","9534808splitHere46","ConcurrentHashMap"
"5209splitHere46","9534808splitHere46","AtomicInteger"
"5210splitHere46","9534808splitHere46","AtomicInteger"
"5211splitHere46","9534808splitHere46","ConcurrentHashMap"
"5212splitHere46","9534808splitHere46","putIfAbsent"
"5213splitHere46","9534808splitHere46","if"
"5214splitHere46","9534808splitHere46","AtomicInteger failedAmount = new AtomicInteger(0);<newline46mondego><newline46mondego>failedAmount = myMap.putIfAbsent(<doubleQuotes46>username<doubleQuotes46>, failedAmount);<newline46mondego><newline46mondego>if (failedAmount.incrementAndGet() >= THRESHOLD) {<newline46mondego>    // possible brute force detected! alert admin / slow down login<newline46mondego>    // / or whatever<newline46mondego>}<newline46mondego>"
"5215splitHere46","9534823splitHere46","import java.awt.event.*;<newline46mondego>import java.io.File;<newline46mondego>import javax.swing.*;<newline46mondego><newline46mondego>public class Launch extends JFrame implements ActionListener {<newline46mondego>private static final long serialVersionUID = 5291490384908841627L;<newline46mondego>JButton OK, create;<newline46mondego>JList players;<newline46mondego>File player;<newline46mondego>public static void main(String[] args) {<newline46mondego>    new Launch();<newline46mondego>}<newline46mondego>private Launch() {<newline46mondego>    // don't do this<newline46mondego>    this.setSize(600, 600);<newline46mondego>    this.setLocationRelativeTo(null);<newline46mondego>    this.setTitle(<doubleQuotes46>A Word Game<doubleQuotes46>);<newline46mondego>    this.setDefaultCloseOperation(EXIT_ON_CLOSE);<newline46mondego>    Box box = Box.createVerticalBox();<newline46mondego>    OK = new JButton(<doubleQuotes46>OK<doubleQuotes46>);<newline46mondego>    create = new JButton(<doubleQuotes46>Create new player<doubleQuotes46>);<newline46mondego>    OK.addActionListener(this);<newline46mondego>    create.addActionListener(this);<newline46mondego>    String[] playerList = getPlayers();<newline46mondego>    players = new JList(playerList);<newline46mondego>    players.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);<newline46mondego>    JScrollPane scroll = new JScrollPane(players, JScrollPane.VERTICAL_SCROLLBAR_ALWAYS, JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);<newline46mondego>    //scroll.add(players);<newline46mondego>    final JLabel choosePrompt = new JLabel(<doubleQuotes46>Choose a player.<doubleQuotes46>);<newline46mondego>    box.add(Box.createVerticalStrut(20));<newline46mondego>    box.add(choosePrompt);<newline46mondego>    box.add(Box.createVerticalStrut(20));<newline46mondego>    box.add(scroll);<newline46mondego>    box.add(Box.createVerticalStrut(20));<newline46mondego>    box.add(OK);<newline46mondego>    box.add(Box.createVerticalStrut(20));<newline46mondego>    box.add(create);<newline46mondego>    box.add(Box.createVerticalStrut(20));<newline46mondego>    this.add(box);<newline46mondego>    pack();<newline46mondego>    this.setVisible(true);<newline46mondego>}<newline46mondego>private String[] getPlayers() {<newline46mondego>    /*File playerDirectory = new File(<doubleQuotes46>players<doubleQuotes46>);<newline46mondego>    File[] playersInFiles = playerDirectory.listFiles();<newline46mondego>    String[] players = new String[playersInFiles.length];<newline46mondego>    for (int counter = 0; counter < playersInFiles.length; counter ++) {<newline46mondego>        players[counter] = trimTXT(playersInFiles[counter].getName());<newline46mondego>    }*/<newline46mondego>    String[] players = {<doubleQuotes46>Bob<doubleQuotes46>, <doubleQuotes46>Jane<doubleQuotes46>};<newline46mondego>    return players;<newline46mondego>}<newline46mondego>private String trimTXT(String original) {<newline46mondego>    return original.substring(0, original.length() - 4);<newline46mondego>}<newline46mondego>@Override<newline46mondego>public void actionPerformed(ActionEvent e) {<newline46mondego>    if (e.getSource().equals(OK)) {<newline46mondego>        String name = (String)players.getSelectedValue();<newline46mondego>        if (name == null) {<newline46mondego>            return;<newline46mondego>        }<newline46mondego>        player = new File(name + <doubleQuotes46>.txt<doubleQuotes46>);<newline46mondego>    } else if (e.getSource().equals(create)) {<newline46mondego>        //create a new character, all that what-not<newline46mondego>    }<newline46mondego>}<newline46mondego>}<newline46mondego>"
"5216splitHere46","9534869splitHere46","java.util.concurrent.Future.get()"
"5217splitHere46","9534869splitHere46","ExecutionException"
"5218splitHere46","9534869splitHere46","Future"
"5219splitHere46","9534869splitHere46","Throwable.getCause()"
"5220splitHere46","9535068splitHere46","@Controller(<doubleQuotes46>/)<newline46mondego>"
"5221splitHere46","9535068splitHere46","@RequestMapping(<doubleQuotes46>/<doubleQuotes46>)<newline46mondego>"
"5222splitHere46","9535068splitHere46","@Controller<newline46mondego>@RequestMapping(<doubleQuotes46>/<doubleQuotes46>)<newline46mondego>public class RootController<newline46mondego>{<newline46mondego><newline46mondego>  @RequestMapping(method=RequestMethod.GET)<newline46mondego>  public String index()<newline46mondego>  {<newline46mondego>    return <doubleQuotes46>index<doubleQuotes46>;<newline46mondego>  }<newline46mondego><newline46mondego>}<newline46mondego>"
"5223splitHere46","9535075splitHere46","QName"
"5224splitHere46","9535075splitHere46","XdmAtomicValue"
"5225splitHere46","9535075splitHere46","QName langParam = new QName(<doubleQuotes46>lang<doubleQuotes46>);<newline46mondego>xsltTransformer.setParameter(langParam, new XdmAtomicValue(<doubleQuotes46>default<doubleQuotes46>));<newline46mondego>"
"5226splitHere46","9535240splitHere46","Opcodes"
"5227splitHere46","9535240splitHere46","boolean isPublic = (node.access & Opcodes.ACC_PUBLIC) != 0;<newline46mondego>boolean isStatic = (node.access & Opcodes.ACC_STATIC) != 0;<newline46mondego>"
"5228splitHere46","9535241splitHere46","Thread.currentThread().getContextClassLoader().getResourceAsStream(<doubleQuotes46>/conf/config.xml<doubleQuotes46>)<newline46mondego>"
"5229splitHere46","9535325splitHere46","onPause"
"5230splitHere46","9535479splitHere46","$JBOSS_HOME/server/default/lib/<newline46mondego>"
"5231splitHere46","9535479splitHere46","yourapp/WEB-INF/lib<newline46mondego>"
"5232splitHere46","9535482splitHere46","protected int length = 30;<newline46mondego>"
"5233splitHere46","9535529splitHere46","Queue"
"5234splitHere46","9535670splitHere46","String items[] = {...};<newline46mondego>"
"5235splitHere46","9535670splitHere46","JComboBox comboBox = new JComboBox(items);<newline46mondego>"
"5236splitHere46","9535670splitHere46","items"
"5237splitHere46","9535670splitHere46","int index = 0;<newline46mondego>ResultSet rs = statement.executeQuery(SQL);<newline46mondego>while(rs.next())<newline46mondego>   items[index] = rs.getString(<doubleQuotes46>itemcode<doubleQuotes46>);<newline46mondego>"
"5238splitHere46","9535896splitHere46","Header<newline46mondego>LineNo: 1,001<newline46mondego>LineNo: 2,001<newline46mondego>Header<newline46mondego>LineNo: 1,002<newline46mondego>LineNo: 2,002<newline46mondego>LineNo: 3,002<newline46mondego>Header<newline46mondego>LineNo: 1,003<newline46mondego>"
"5239splitHere46","9535940splitHere46","Select n From Nomination n<newline46mondego>"
"5240splitHere46","9535940splitHere46","in"
"5241splitHere46","9535940splitHere46","Select n from nomination where n.type in :types <newline46mondego>"
"5242splitHere46","9536113splitHere46","import javax.swing.*;<newline46mondego><newline46mondego>class Options {<newline46mondego><newline46mondego>    public static void main(String[] args) throws Exception {<newline46mondego>        SwingUtilities.invokeLater( new Runnable() {<newline46mondego>            public void run() {<newline46mondego>                Object[] options = {<newline46mondego>                    <doubleQuotes46>Option 1<doubleQuotes46>,<newline46mondego>                    <doubleQuotes46>Option 2<doubleQuotes46>,<newline46mondego>                    <doubleQuotes46>Option 3<doubleQuotes46>,<newline46mondego>                    <doubleQuotes46>Option 4<doubleQuotes46>,<newline46mondego>                    <doubleQuotes46>Option 5<doubleQuotes46>,<newline46mondego>                    <doubleQuotes46>Option 6<doubleQuotes46>,<newline46mondego>                    <doubleQuotes46>Option 7<doubleQuotes46>,<newline46mondego>                    <doubleQuotes46>None of the above<doubleQuotes46> <newline46mondego>                };<newline46mondego>                JComboBox optionList = new JComboBox(options);<newline46mondego>                optionList.setSelectedIndex(7);<newline46mondego>                JOptionPane.showMessageDialog(null, optionList, <doubleQuotes46>Title<doubleQuotes46>,<newline46mondego>                     JOptionPane.QUESTION_MESSAGE);<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5243splitHere46","9536119splitHere46","Hashtable"
"5244splitHere46","9536119splitHere46","HashMap"
"5245splitHere46","9536119splitHere46","Hashtable"
"5246splitHere46","9536119splitHere46","HashMap"
"5247splitHere46","9536119splitHere46","Collections.synchronizedMap"
"5248splitHere46","9536119splitHere46","HashMap"
"5249splitHere46","9536119splitHere46","Hashtable"
"5250splitHere46","9536119splitHere46","Hashtable"
"5251splitHere46","9536234splitHere46","render(<doubleQuotes46>my/view/path.html<doubleQuotes46>, myparams);<newline46mondego>"
"5252splitHere46","9536272splitHere46","String me = this.getClass().getName().replace(<doubleQuotes46>.<doubleQuotes46>, <doubleQuotes46>/<doubleQuotes46>)+<doubleQuotes46>.class<doubleQuotes46>;<newline46mondego>    me = this.getClass().getClassLoader().getResource(me).getPath();<newline46mondego>    String[] route = me.split(<doubleQuotes46>WEB-INF<doubleQuotes46>);<newline46mondego>    String servletUri = route[0];<newline46mondego>    fileNameCSS = servletUri+<doubleQuotes46>resources/css/<doubleQuotes46>+file;<newline46mondego>"
"5253splitHere46","9536325splitHere46","FileService fileService = FileServiceFactory.getFileService();<newline46mondego>    AppEngineFile writableFile = fileService.createNewBlobFile(request.getParameter(<doubleQuotes46>qqfile<doubleQuotes46>));<newline46mondego>    FileWriteChannel writeChannel = null;<newline46mondego>        try {<newline46mondego>                byte[] buffer = new byte[4096]; // 4MB<newline46mondego>                lock = true;<newline46mondego>                writeChannel = fileService.openWriteChannel(writableFile, lock);<newline46mondego>                // increase the buffer size as you are reading from the <newline46mondego>                // input stream. Read the input stream into buffer<newline46mondego>                for (int n; (n = stream.read(buffer)) != -1; ){ <newline46mondego>                    writeChannel.write(ByteBuffer.wrap(buffer));<newline46mondego>                } <newline46mondego>            } finally {<newline46mondego>                    writeChannel.closeFinally();<newline46mondego>            }<newline46mondego><newline46mondego>    BlobKey blobKey = fileService.getBlobKey(writableFile);<newline46mondego>    ImagesService imagesService = ImagesServiceFactory.getImagesService();<newline46mondego><newline46mondego>    // produces something like http://localhost:8888/_ah/img/SU52WMsoCRP3kqAvQqVW3g<newline46mondego>    String imageUrl = imagesService.getServingUrl(blobKey);<newline46mondego>"
"5254splitHere46","9536407splitHere46","@play.db.jpa.NoTransaction<newline46mondego>"
"5255splitHere46","9536450splitHere46","BigDecimal"
"5256splitHere46","9536450splitHere46","long"
"5257splitHere46","9536450splitHere46","double"
"5258splitHere46","9536450splitHere46","float"
"5259splitHere46","9536450splitHere46","BigDecimal"
"5260splitHere46","9536450splitHere46","long"
"5261splitHere46","9536450splitHere46","int"
"5262splitHere46","9536450splitHere46","long price; //store values in euro cents<newline46mondego>price = 760 * 3; //price is now 2280 cents<newline46mondego>"
"5263splitHere46","9536483splitHere46","Socket s1 = new Socket(<doubleQuotes46>192.168.1.<doubleQuotes46> + i, 1254);<newline46mondego>"
"5264splitHere46","9536483splitHere46","Socket s1 = new Socket();<newline46mondego>s1.setSoTimeout(200);<newline46mondego>s1.connect(new InetSocketAddress(<doubleQuotes46>192.168.1.<doubleQuotes46> + i, 1254), 200);<newline46mondego>"
"5265splitHere46","9536621splitHere46","destroy"
"5266splitHere46","9536621splitHere46","pause"
"5267splitHere46","9536621splitHere46","stop"
"5268splitHere46","9536621splitHere46","resume"
"5269splitHere46","9536621splitHere46","Future.cancel"
"5270splitHere46","9536648splitHere46","public class DoCalc extends Thread<newline46mondego>{<newline46mondego>  public Matrix localM;<newline46mondego>  int startRow;<newline46mondego>  int endRow;<newline46mondego>  public DoCalc(Matrix mArg, int startArg, int endArg)<newline46mondego>  {<newline46mondego>    localM=mArg;<newline46mondego>    startRow=startArg;<newline46mondego>    endRow=endArg;<newline46mondego>  }<newline46mondego><newline46mondego>  public void doCalc()<newline46mondego>  {<newline46mondego>    //Pseudo-code<newline46mondego>    for each row from startRow to endRow<newline46mondego>      for each column 0 to size-1<newline46mondego>        result[i][j] = similarityCalculation<newline46mondego>  }<newline46mondego>  public void run()<newline46mondego>  {<newline46mondego>    doCalc();<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>public void transform(Matrix toBeTransformed)<newline46mondego>{<newline46mondego>  int numDocs = termDocumentMatrix.getColumnDimension();<newline46mondego><newline46mondego>  Main.similarityMatrix = new Matrix(numDocs, numDocs);<newline46mondego>  Vector<DoCalc> running = new Vector<DoCalc>();<newline46mondego>  int blockSize = 10;<newline46mondego>  for (int x = 0; x < numDocs-1;x+=blockSize)<newline46mondego>  {<newline46mondego>    DoCalc tempThread = new DoCalc(toBeTransformed,x,(x+blockSize>numDocs-1)?numDocs-1:x+blockSize);<newline46mondego>    tempThread.start();<newline46mondego>    running.add(tempThread);<newline46mondego>  }<newline46mondego><newline46mondego>  for (DoCalc dc : running)<newline46mondego>    dc.join();<newline46mondego><newline46mondego>}<newline46mondego>"
"5271splitHere46","9536678splitHere46","#include <stdio.h><newline46mondego>#include <jni.h><newline46mondego><newline46mondego>JNIEnv* create_vm() {<newline46mondego>    JavaVM* jvm;<newline46mondego>    JNIEnv* env;<newline46mondego>    JavaVMInitArgs args;<newline46mondego>    JavaVMOption options[1];<newline46mondego><newline46mondego>    /* There is a new JNI_VERSION_1_4, but it doesn't add anything for the purposes of our example. */<newline46mondego>    args.version = JNI_VERSION_1_2;<newline46mondego>    args.nOptions = 1;<newline46mondego>    options[0].optionString = <doubleQuotes46>-Djava.class.path=c:\\projects\\local\\inonit\\classes<doubleQuotes46>;<newline46mondego>    args.options = options;<newline46mondego>    args.ignoreUnrecognized = JNI_FALSE;<newline46mondego><newline46mondego>    JNI_CreateJavaVM(&jvm, (void **)&env, &args);<newline46mondego>    return env;<newline46mondego>}<newline46mondego><newline46mondego>void invoke_class(JNIEnv* env) {<newline46mondego>    jclass helloWorldClass;<newline46mondego>    jmethodID mainMethod;<newline46mondego>    jobjectArray applicationArgs;<newline46mondego>    jstring applicationArg0;<newline46mondego><newline46mondego>    helloWorldClass = (*env)->FindClass(env, <doubleQuotes46>example/jni/InvocationHelloWorld<doubleQuotes46>);<newline46mondego><newline46mondego>    mainMethod = (*env)->GetStaticMethodID(env, helloWorldClass, <doubleQuotes46>main<doubleQuotes46>, <doubleQuotes46>([Ljava/lang/String;)V<doubleQuotes46>);<newline46mondego><newline46mondego>    applicationArgs = (*env)->NewObjectArray(env, 1, (*env)->FindClass(env, <doubleQuotes46>java/lang/String<doubleQuotes46>), NULL);<newline46mondego>    applicationArg0 = (*env)->NewStringUTF(env, <doubleQuotes46>From-C-program<doubleQuotes46>);<newline46mondego>    (*env)->SetObjectArrayElement(env, applicationArgs, 0, applicationArg0);<newline46mondego><newline46mondego>    (*env)->CallStaticVoidMethod(env, helloWorldClass, mainMethod, applicationArgs);<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>int main(int argc, char **argv) {<newline46mondego>    JNIEnv* env = create_vm();<newline46mondego>    invoke_class( env );<newline46mondego>}<newline46mondego>"
"5272splitHere46","9536789splitHere46","java -jar card4dgameserver.jar<newline46mondego>"
"5273splitHere46","9536926splitHere46","if (pbutton = 0); {<newline46mondego>"
"5274splitHere46","9536926splitHere46","int"
"5275splitHere46","9536926splitHere46","0"
"5276splitHere46","9536926splitHere46","String"
"5277splitHere46","9536926splitHere46","true"
"5278splitHere46","9536926splitHere46","false"
"5279splitHere46","9536926splitHere46","="
"5280splitHere46","9536926splitHere46","=="
"5281splitHere46","9536926splitHere46","true"
"5282splitHere46","9536926splitHere46","false"
"5283splitHere46","9536926splitHere46","String"
"5284splitHere46","9536926splitHere46","int"
"5285splitHere46","9536926splitHere46","String"
"5286splitHere46","9536926splitHere46","<doubleQuotes46>0<doubleQuotes46>"
"5287splitHere46","9536926splitHere46","if (<doubleQuotes46>0<doubleQuotes46>.equals(pbutton)) {<newline46mondego>"
"5288splitHere46","9536996splitHere46","@Override<newline46mondego>public void onCreate(final Bundle savedInstanceState) {<newline46mondego>    // your code<newline46mondego><newline46mondego>    new AlertDialog.Builder(this)  <newline46mondego>       .setMessage(<doubleQuotes46>Your network is disabled, enable now?<doubleQuotes46>)  <newline46mondego>       .setTitle(<doubleQuotes46>Alert<doubleQuotes46>)  <newline46mondego>       .setCancelable(false)<newline46mondego>       .setPositiveButton(android.R.string.ok, <newline46mondego>           new DialogInterface.OnClickListener() {  <newline46mondego>               public void onClick(DialogInterface dialog, int whichButton) {<newline46mondego>                   // launch settings<newline46mondego>                   Intent settings = new Intent(android.provider.Settings.ACTION_WIRELESS_SETTINGS);<newline46mondego>                   startActivity(settings);<newline46mondego>               }  <newline46mondego>           })<newline46mondego>       .setNegativeButton(android.R.string.cancel,<newline46mondego>           new DialogInterface.OnClickListener() {  <newline46mondego>               public void onClick(DialogInterface dialog, int whichButton) {<newline46mondego>                   dialog.dismiss();<newline46mondego><newline46mondego>                   // finish activity<newline46mondego>                   finish();<newline46mondego>               }  <newline46mondego>           })<newline46mondego>       .show();<newline46mondego>}<newline46mondego>"
"5289splitHere46","9537017splitHere46","SecretKeyFactory factory = SecretKeyFactory.getInstance(<doubleQuotes46>PBKDF2WithHmacSHA1<doubleQuotes46>);<newline46mondego>KeySpec spec = new PBEKeySpec(password, salt, 65536, 256);<newline46mondego>SecretKey tmp = factory.generateSecret(spec);<newline46mondego>SecretKey secret = new SecretKeySpec(tmp.getEncoded(), <doubleQuotes46>AES<doubleQuotes46>);<newline46mondego><newline46mondego>Cipher cipher = Cipher.getInstance(<doubleQuotes46>AES/CBC/PKCS5Padding<doubleQuotes46>);<newline46mondego>cipher.init(Cipher.ENCRYPT_MODE, secret);<newline46mondego><newline46mondego>byte[] iv = cipher.getParameters().getParameterSpec(IvParameterSpec.class).getIV();<newline46mondego>byte[] ciphertext = cipher.doFinal(<doubleQuotes46>Hello, World!<doubleQuotes46>.getBytes(<doubleQuotes46>UTF-8<doubleQuotes46>));<newline46mondego><newline46mondego>// reinit cypher using param spec<newline46mondego>Cipher cipher = Cipher.getInstance(<doubleQuotes46>AES/CBC/PKCS5Padding<doubleQuotes46>);<newline46mondego>cipher.init(Cipher.DECRYPT_MODE, secret, new IvParameterSpec(iv));<newline46mondego>"
"5290splitHere46","9537017splitHere46","byte[] salt = {<newline46mondego>    (byte)0xc7, (byte)0x73, (byte)0x21, (byte)0x8c,<newline46mondego>    (byte)0x7e, (byte)0xc8, (byte)0xee, (byte)0x99<newline46mondego>};<newline46mondego><newline46mondego>int count = 20;<newline46mondego><newline46mondego>PBEParameterSpec pbeParamSpec = new PBEParameterSpec(salt, count);<newline46mondego>PBEKeySpec pbeKeySpec = new PBEKeySpec(password.toCharArray());<newline46mondego>SecretKeyFactory keyFac = SecretKeyFactory.getInstance(<doubleQuotes46>PBEWithMD5AndDES<doubleQuotes46>);<newline46mondego>SecretKey pbeKey = keyFac.generateSecret(pbeKeySpec);<newline46mondego><newline46mondego>Cipher cipher = Cipher.getInstance(<doubleQuotes46>PBEWithMD5AndDES<doubleQuotes46>);<newline46mondego>cipher.init(Cipher.ENCRYPT_MODE, pbeKey, pbeParamSpec);<newline46mondego><newline46mondego>SealedObject sealed = new SealedObject(object, cipher);<newline46mondego>...<newline46mondego>"
"5291splitHere46","9537067splitHere46","$.ajax({<newline46mondego>  url: <doubleQuotes46>your-web-service.php<doubleQuotes46>,<newline46mondego>  context: document.body,<newline46mondego>  dataType: <doubleQuotes46>json<doubleQuotes46>,<newline46mondego>  success: function(data){<newline46mondego>    // do something with data<newline46mondego>    $(this).addClass(<doubleQuotes46>done<doubleQuotes46>);<newline46mondego>  }<newline46mondego>});<newline46mondego>"
"5292splitHere46","9537092splitHere46","Window.setSize(...)"
"5293splitHere46","9537094splitHere46","ClassPathResource cpr = new ClassPathResource(<doubleQuotes46>folder/file.xsd<doubleQuotes46>);<newline46mondego>InputStream is = cpr.getInputStream();<newline46mondego>"
"5294splitHere46","9537197splitHere46","import java.awt.BorderLayout;<newline46mondego>import java.awt.GridBagLayout;<newline46mondego><newline46mondego>import javax.swing.Box;<newline46mondego>import javax.swing.BoxLayout;<newline46mondego>import javax.swing.JComboBox;<newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JLabel;<newline46mondego>import javax.swing.JPanel;<newline46mondego><newline46mondego>public class BorderAndBox extends JFrame<newline46mondego>{<newline46mondego>public static void main(String args[])<newline46mondego>{<newline46mondego>    BorderAndBox bnb = new BorderAndBox();<newline46mondego>    bnb.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);<newline46mondego>    bnb.createUI();<newline46mondego>    bnb.setVisible(true);<newline46mondego>}<newline46mondego><newline46mondego>public void createUI()<newline46mondego>{<newline46mondego>    JPanel borderPanel = new JPanel(new BorderLayout());<newline46mondego><newline46mondego>    JLabel northLabel = new JLabel(<doubleQuotes46>Nawth<doubleQuotes46>);<newline46mondego>    borderPanel.add(northLabel, BorderLayout.NORTH);<newline46mondego><newline46mondego>    String[] southComboChoices = { <doubleQuotes46>one<doubleQuotes46>, <doubleQuotes46>two<doubleQuotes46>, <doubleQuotes46>three<doubleQuotes46> };<newline46mondego>    JComboBox southCombo = new JComboBox(southComboChoices);<newline46mondego>    borderPanel.add(southCombo, BorderLayout.SOUTH);<newline46mondego><newline46mondego>    JPanel centerPanel = new JPanel();<newline46mondego>    centerPanel.setLayout(new BoxLayout(centerPanel, BoxLayout.PAGE_AXIS));<newline46mondego>    String[] firstChoices = { <doubleQuotes46>first<doubleQuotes46>, <doubleQuotes46>uno<doubleQuotes46>, <doubleQuotes46>UN<doubleQuotes46> };<newline46mondego>    String[] secondChoices = { <doubleQuotes46>second<doubleQuotes46>, <doubleQuotes46>dos<doubleQuotes46>, <doubleQuotes46>zwei<doubleQuotes46> };<newline46mondego>    String[] thirdChoices = { <doubleQuotes46>third<doubleQuotes46>, <doubleQuotes46>tres<doubleQuotes46>, <doubleQuotes46>drei<doubleQuotes46> };<newline46mondego>    JComboBox firstCombo = new JComboBox(firstChoices);<newline46mondego>    JComboBox secondCombo = new JComboBox(secondChoices);<newline46mondego>    JComboBox thirdCombo = new JComboBox(thirdChoices);<newline46mondego>    centerPanel.add(firstCombo);<newline46mondego>    centerPanel.add(secondCombo);<newline46mondego>    centerPanel.add(thirdCombo);<newline46mondego>    centerPanel.add(Box.createVerticalGlue());  // first attempt; does NOT<newline46mondego>    // take up available vertical space, instead it appears to create a space<newline46mondego>    // that is shared equally among the (now) four components of this space.<newline46mondego>    JPanel centerPanelConstrain = new JPanel(new GridBagLayout());<newline46mondego>    centerPanelConstrain.add(centerPanel);<newline46mondego>    borderPanel.add(centerPanelConstrain, BorderLayout.CENTER);<newline46mondego><newline46mondego>    getContentPane().add(borderPanel);<newline46mondego>    pack();<newline46mondego>}<newline46mondego><newline46mondego>}<newline46mondego>"
"5295splitHere46","9537276splitHere46","story.setTipList(tips)<newline46mondego>"
"5296splitHere46","9537276splitHere46","tip.setStory(story)<newline46mondego>"
"5297splitHere46","9537276splitHere46","Tip"
"5298splitHere46","9537276splitHere46","storyService.create(newStory)"
"5299splitHere46","9537276splitHere46","newStory"
"5300splitHere46","9537276splitHere46","newStory.setTipList(tips)"
"5301splitHere46","9537347splitHere46","nohup java -jar myjar.jar<newline46mondego>"
"5302splitHere46","9537347splitHere46","nohup java -jar myjar.jar >> logfile.log 2>&1<newline46mondego>"
"5303splitHere46","9537456splitHere46","Fos.write(string.getBytes());<newline46mondego>"
"5304splitHere46","9537456splitHere46","Fos"
"5305splitHere46","9537456splitHere46","string"
"5306splitHere46","9537456splitHere46","string"
"5307splitHere46","9537456splitHere46","a"
"5308splitHere46","9537456splitHere46","string"
"5309splitHere46","9537644splitHere46","15*15"
"5310splitHere46","9537644splitHere46","15*15"
"5311splitHere46","9537644splitHere46","System.arrayCopy(<newline46mondego>    new String[]{<doubleQuotes46>SUNDAY<doubleQuotes46>, <doubleQuotes46>MONDAY<doubleQuotes46>, <doubleQuotes46>TUESDAY<doubleQuotes46>, <doubleQuotes46>WEDNESDAY<doubleQuotes46>, <doubleQuotes46>THURSDAY<doubleQuotes46>, <doubleQuotes46>FRIDAY<doubleQuotes46>, <doubleQuotes46>SATURDAY<doubleQuotes46>}<newline46mondego>,   0<newline46mondego>,   calendarTable[0]<newline46mondego>,   0<newline46mondego>,   7);<newline46mondego>"
"5312splitHere46","9537644splitHere46","i != 15"
"5313splitHere46","9537644splitHere46","i < 15"
"5314splitHere46","9537644splitHere46","i <= 14"
"5315splitHere46","9537702splitHere46","chars"
"5316splitHere46","9537702splitHere46","char[]"
"5317splitHere46","9537702splitHere46","sol"
"5318splitHere46","9537702splitHere46","i"
"5319splitHere46","9537702splitHere46","i"
"5320splitHere46","9537702splitHere46","findPermutations(chars,i,sol):<newline46mondego>   print sol<newline46mondego>   if (chars.length == i):<newline46mondego>       return<newline46mondego>   for each j in range(j,chars.length):<newline46mondego>       sol.append(chars[i+1])<newline46mondego>       swap(chars,i,j) //we cannot use chars[j] anymore.<newline46mondego>       findPermutations(chars,j+1,sol)<newline46mondego>       swap(chars,i,j) //clean up environment<newline46mondego>       sol.removeLast()<newline46mondego>"
"5321splitHere46","9537702splitHere46","chars"
"5322splitHere46","9538027splitHere46","private static int a(int len) {<newline46mondego>"
"5323splitHere46","9538027splitHere46","private static int a() {<newline46mondego>"
"5324splitHere46","9538126splitHere46","Map<AmountType, Amount> getAmounts()"
"5325splitHere46","9538126splitHere46","public Map<AmountType, Amount> getAmounts() {<newline46mondego>    Map<AmountType, Amount> result = new HashMap<AmountType, Amount>(3);<newline46mondego>    result.put(AmountType.ATM, amountAtm);<newline46mondego>    result.put(AmountType.BRANCH, amountBranch);<newline46mondego>    result.put(AmountType.VAULT, amountVault);<newline46mondego>    return result;<newline46mondego>}<newline46mondego>"
"5326splitHere46","9538159splitHere46","JPanel"
"5327splitHere46","9538159splitHere46","GridLayout"
"5328splitHere46","9538159splitHere46","GridBagLayout"
"5329splitHere46","9538159splitHere46","JLabel"
"5330splitHere46","9538159splitHere46","MouseListener"
"5331splitHere46","9538159splitHere46","JPanel"
"5332splitHere46","9538159splitHere46","JLabel"
"5333splitHere46","9538346splitHere46","JComponent"
"5334splitHere46","9538346splitHere46","Dimension"
"5335splitHere46","9538346splitHere46","main public static void main(String[] args) {"
"5336splitHere46","9538346splitHere46","invokeLater()"
"5337splitHere46","9538457splitHere46","interface"
"5338splitHere46","9538457splitHere46","static"
"5339splitHere46","9538478splitHere46","myLabel.setText(<doubleQuotes46><html><pre><doubleQuotes46> + myCart.toString() + <doubleQuotes46></pre></html><doubleQuotes46>);<newline46mondego>"
"5340splitHere46","9538478splitHere46","myLabel.setText(<doubleQuotes46><html><pre><doubleQuotes46> + myCart + <doubleQuotes46></pre></html><doubleQuotes46>);<newline46mondego>"
"5341splitHere46","9538478splitHere46","toString()"
"5342splitHere46","9538568splitHere46","User"
"5343splitHere46","9538568splitHere46","Address"
"5344splitHere46","9538568splitHere46","@JoinColumn"
"5345splitHere46","9538572splitHere46","JSONObject response = resource.contentType(MediaType.APPLICATION_JSON)<newline46mondego>            .accept(MediaType.APPLICATION_JSON).post(JSONObject.class, json);<newline46mondego>"
"5346splitHere46","9538572splitHere46","String response = resource.contentType(MediaType.APPLICATION_JSON)<newline46mondego>            .accept(MediaType.APPLICATION_JSON).post(String.class, json);<newline46mondego>"
"5347splitHere46","9539078splitHere46","null"
"5348splitHere46","9539078splitHere46","Panel"
"5349splitHere46","9539078splitHere46","null"
"5350splitHere46","9539078splitHere46","Frame"
"5351splitHere46","9539078splitHere46","// Load Image<newline46mondego>        Log.v(<doubleQuotes46>Loading header image<doubleQuotes46>);<newline46mondego>        _iBG = new ImageIcon(<doubleQuotes46>img/hpcount_top_bg.png<doubleQuotes46>).getImage();<newline46mondego><newline46mondego>        // Set size<newline46mondego>        setSize(1024, 152);<newline46mondego>        setPreferredSize(new Dimension(1024, 152));<newline46mondego><newline46mondego>        // Set position<newline46mondego>        setLocation(0, 0);<newline46mondego><newline46mondego>        // Set visible<newline46mondego>        setVisible(true);<newline46mondego><newline46mondego>        // Set layout<newline46mondego>        setLayout(null);<newline46mondego><newline46mondego>        // Add children<newline46mondego>        add(new Exit()); // Exit extends java.awt.Button<newline46mondego>"
"5352splitHere46","9539078splitHere46","java.awt.Panel"
"5353splitHere46","9539078splitHere46","Panel"
"5354splitHere46","9539078splitHere46","Frame"
"5355splitHere46","9539234splitHere46","import static"
"5356splitHere46","9539249splitHere46","die1"
"5357splitHere46","9539249splitHere46","die2"
"5358splitHere46","9539249splitHere46","die1 + die2"
"5359splitHere46","9539249splitHere46","if (cover == die1 or cover == die2 or cover == ( die1 + die2)) {<newline46mondego>    //valid..<newline46mondego>}<newline46mondego>"
"5360splitHere46","9539357splitHere46","childStmt"
"5361splitHere46","9539357splitHere46","Statement"
"5362splitHere46","9539357splitHere46","Statement"
"5363splitHere46","9539357splitHere46","ResultSet"
"5364splitHere46","9539652splitHere46","userChoice = 0;<newline46mondego>while (userChoice != computerChoice) {<newline46mondego>    userChoice = readUserChoice();<newline46mondego><newline46mondego>    if (userChoice != computerChoice) {<newline46mondego>        displayErrorMessage();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5365splitHere46","9539842splitHere46","IDictionary"
"5366splitHere46","9539842splitHere46","public interface IDictionaryListener {<newline46mondego>  void dictionaryChanged(IDictionary from, IDictionary to);<newline46mondego>}<newline46mondego><newline46mondego>public interface IDictionary {<newline46mondego>  String getString(String forKey);<newline46mondego>}<newline46mondego><newline46mondego>public final class DictionaryManager {<newline46mondego>  private static final DictionaryManager INSTANCE=new DictionaryManager();<newline46mondego>  private final List<IDictionaryListener> listeners=new ArrayList<>();<newline46mondego>  private IDictionary dictionary;<newline46mondego><newline46mondego>  private DictionaryManager() {};<newline46mondego><newline46mondego>  public static synchronized void setDictionary(IDictionary dict) {<newline46mondego>    IDictionary old = INSTANCE.dictionary;<newline46mondego>    INSTANCE.dictionary=dict;<newline46mondego>    fireDictionaryChanged(old, dict);<newline46mondego>  }<newline46mondego><newline46mondego>  public static synchronized IDictionary getDictionary() {<newline46mondego>    return INSTANCE.dictionary;<newline46mondego>  }<newline46mondego><newline46mondego>  public static synchronized void addDictionaryListener(IDictionaryListener l) {<newline46mondego>    INSTANCE.listeners.add(l);<newline46mondego>  }<newline46mondego><newline46mondego>  public static synchronized void removeDictionaryListener(IDictionaryListener l) {<newline46mondego>    INSTANCE.listeners.remove(l);<newline46mondego>  }<newline46mondego><newline46mondego>  private static void fireDictionaryChanged(IDictionary from, IDictionary to) {<newline46mondego>    for (IDictionaryListener l:INSTANCE.listeners) {<newline46mondego>      l.dictionaryChanged(from, to);<newline46mondego>    }<newline46mondego>  }<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>public class DictionaryLabel extends JLabel implements IDictionaryListener {<newline46mondego>  private String key;<newline46mondego><newline46mondego>  public DictionaryLabel(String dictKey) {<newline46mondego>    super();<newline46mondego>    key = dictKey;<newline46mondego>    DictionaryManager.addDictionaryListener(this);<newline46mondego>    super.setText(DictionaryManager.getDictionary().getString(key));<newline46mondego>  }<newline46mondego><newline46mondego>  @Override<newline46mondego>  public final void setText(String text) {<newline46mondego>    throw new RuntimeException(<doubleQuotes46>Not supported! Dictionary is used for this!<doubleQuotes46>);<newline46mondego>  }<newline46mondego><newline46mondego>  @Override<newline46mondego>  public void dictionaryChanged(final IDictionary from, final IDictionary to) {<newline46mondego>    SwingUtilities.invokeLater(new Runnable() {<newline46mondego><newline46mondego>      @Override<newline46mondego>      public void run() {<newline46mondego>        DictionaryLabel.super.setText(to.getString(key));<newline46mondego>      }<newline46mondego><newline46mondego>    });<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"5367splitHere46","9539844splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>utf-8<doubleQuotes46>?> <newline46mondego>        <LinearLayout xmlns:android=<doubleQuotes46>http://schemas.android.com/apk/res/android<doubleQuotes46><newline46mondego>        android:layout_width=<doubleQuotes46>match_parent<doubleQuotes46><newline46mondego>        android:layout_height=<doubleQuotes46>match_parent<doubleQuotes46><newline46mondego>        android:orientation=<doubleQuotes46>vertical<doubleQuotes46> android:background=<doubleQuotes46>@drawable/tmp<doubleQuotes46> ><newline46mondego><newline46mondego><newline46mondego>        <ImageView<newline46mondego>            android:id=<doubleQuotes46>@+id/imageView1<doubleQuotes46><newline46mondego>            android:layout_width=<doubleQuotes46>match_parent<doubleQuotes46><newline46mondego>            android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>            android:src=<doubleQuotes46>@drawable/uph<doubleQuotes46> <newline46mondego>             android:layout_marginTop=<doubleQuotes46>-10dp<doubleQuotes46>/><newline46mondego><newline46mondego>        <RelativeLayout  android:layout_width=<doubleQuotes46>match_parent<doubleQuotes46><newline46mondego>            android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46> <newline46mondego>            android:layout_gravity=<doubleQuotes46>top|center<doubleQuotes46>><newline46mondego><newline46mondego>            <ImageView<newline46mondego>                android:id=<doubleQuotes46>@+id/imageView2<doubleQuotes46><newline46mondego>                android:layout_width=<doubleQuotes46>match_parent<doubleQuotes46><newline46mondego>                android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>                android:src=<doubleQuotes46>@drawable/propfile<doubleQuotes46> <newline46mondego>            /><newline46mondego><newline46mondego>           <TextView  android:layout_width=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>               android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46> <newline46mondego>               android:text=<doubleQuotes46>text<doubleQuotes46> <newline46mondego>               android:layout_centerInParent=<doubleQuotes46>true<doubleQuotes46><newline46mondego>           /> <newline46mondego>      </RelativeLayout>   <newline46mondego>    </LinearLayout><newline46mondego>"
"5368splitHere46","9539883splitHere46","HandlerInterceptor.afterCompletion()"
"5369splitHere46","9539883splitHere46","HandlerIntercpetor.preHandle()"
"5370splitHere46","9539883splitHere46","true"
"5371splitHere46","9539948splitHere46","Color color = UIManager.getColor(<doubleQuotes46>Table.selectionBackground<doubleQuotes46>);<newline46mondego>"
"5372splitHere46","9539948splitHere46","prepareEditor()"
"5373splitHere46","9539948splitHere46","@Override<newline46mondego>public Component prepareEditor(TableCellEditor editor, int row, int col) {<newline46mondego>    Component c = super.prepareEditor(editor, row, col);<newline46mondego>    c.setBackground(color);<newline46mondego>    return c;<newline46mondego>}<newline46mondego>"
"5374splitHere46","9540167splitHere46","private void refresh() {<newline46mondego>    if (table.isEditing()) {<newline46mondego>        int row = table.getEditingRow();<newline46mondego>        int column = table.getEditingColumn();<newline46mondego>        table.getCellEditor(row, column).stopCellEditing();<newline46mondego>    }<newline46mondego> ...<newline46mondego>"
"5375splitHere46","9540246splitHere46","mysql-connector-mxj-gpl-5-0-12-db-files.jar"
"5376splitHere46","9540246splitHere46","Windows_7-amd64=Win-x86<newline46mondego>"
"5377splitHere46","9540338splitHere46","r.nextInt(11)<newline46mondego>"
"5378splitHere46","9540338splitHere46","NullPointerException"
"5379splitHere46","9540386splitHere46","https://*.dev.java.net"
"5380splitHere46","9540386splitHere46","http://*.java.net"
"5381splitHere46","9540492splitHere46","@Retry(times = 3, loglevel = LogLevel.INFO)<newline46mondego>List<User> getActiveUsers() throws DatabaseException {<newline46mondego>    // talk to the database<newline46mondego>}<newline46mondego>"
"5382splitHere46","9540492splitHere46","abstract class Retrieable<I,O> {<newline46mondego>    private final LogLevel logLevel;<newline46mondego><newline46mondego>    protected Retrieable(LogLevel loglevel) {<newline46mondego>        this.logLevel = loglevel;<newline46mondego>    }<newline46mondego><newline46mondego>    protected abstract O call(I input);<newline46mondego><newline46mondego>    // subclasses may override to perform custom logic.<newline46mondego>    protected void handle(RuntimeException e) {<newline46mondego>        // log the exception. <newline46mondego>    }<newline46mondego><newline46mondego>    public O execute(I input) {<newline46mondego>        for (int iteration = 1; ; iteration++) {<newline46mondego>            try {<newline46mondego>                return call(input);<newline46mondego>            } catch (RuntimeException e) {<newline46mondego>                if (iteration == helper.getNumberOfRetries()) {<newline46mondego>                    throw e;<newline46mondego>                } else {<newline46mondego>                    handle();<newline46mondego>                    utilities.defaultDelayForIteration(iteration);<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5383splitHere46","9540493splitHere46","Set<T>"
"5384splitHere46","9540493splitHere46","HashSet<T>"
"5385splitHere46","9540493splitHere46","HashMap<T,V>"
"5386splitHere46","9540493splitHere46","// Dummy value to associate with an Object in the backing Map<newline46mondego>private static final Object PRESENT = new Object();<newline46mondego>"
"5387splitHere46","9540493splitHere46","PRESENT"
"5388splitHere46","9540571splitHere46","BroadcastReceiver"
"5389splitHere46","9540571splitHere46","IntentFilter"
"5390splitHere46","9540571splitHere46","WifiManager.NETWORK_STATE_CHANGED_ACTION<newline46mondego>"
"5391splitHere46","9540571splitHere46","BroadcastReceiver"
"5392splitHere46","9540571splitHere46","<intent-filter>"
"5393splitHere46","9540571splitHere46","android.net.wifi.STATE_CHANGE<newline46mondego>"
"5394splitHere46","9540571splitHere46","android.net.conn.CONNECTIVITY_CHANGE<newline46mondego>"
"5395splitHere46","9540610splitHere46","@RolesAllowed@"
"5396splitHere46","9540610splitHere46","@PreAuthorize(<doubleQuotes46>hasAuthority('ROLE_ADMIN')<doubleQuotes46>)"
"5397splitHere46","9540610splitHere46","global-method-security"
"5398splitHere46","9540610splitHere46","pre-post-annotations=<doubleQuotes46>enabled<doubleQuotes46>"
"5399splitHere46","9540610splitHere46","global-method-security"
"5400splitHere46","9540619splitHere46","DllExport void LoadString(char **myStr)<newline46mondego>{<newline46mondego>    cout << <doubleQuotes46>Before: <doubleQuotes46> << *myStr << endl;<newline46mondego>    LoadStringData(myStr);<newline46mondego>    cout << <doubleQuotes46>After:<doubleQuotes46> << *myStr << endl;<newline46mondego>}<newline46mondego>"
"5401splitHere46","9540667splitHere46","super(Locale.ITALY)"
"5402splitHere46","9540694splitHere46","@Test<newline46mondego>    public void testForceFinalizer() throws InterruptedException<newline46mondego>    {<newline46mondego>    FinalizerTest.TestFinalizer f = new FinalizerTest.TestFinalizer(null);<newline46mondego>    FinalizerTest.TestFinalizer.Callback callback =  f.new Callback();<newline46mondego>    TestFinalizer testFinalizer = new TestFinalizer(callback); // Try to<newline46mondego>                                   // force<newline46mondego>                                   // finalizer<newline46mondego>                                   // to be<newline46mondego>                                   // called<newline46mondego>    WeakReference<Object> ref = new WeakReference<Object>(testFinalizer);<newline46mondego>    testFinalizer = null;<newline46mondego>    int maxTries = 10000, i = 0;<newline46mondego>    while (ref.get() != null && i < maxTries)<newline46mondego>    {<newline46mondego>        ++i;<newline46mondego>        System.gc();<newline46mondego>    }<newline46mondego>    if (ref.get() != null)<newline46mondego>        fail(<doubleQuotes46>testFinalizer didn't get cleaned up within maxTries<doubleQuotes46>); // Last<newline46mondego>                                     // line<newline46mondego>                                     // passes,<newline46mondego>                                     // next<newline46mondego>                                     // fails!<newline46mondego>    System.out.println(<doubleQuotes46>Value: <doubleQuotes46> + callback.NumFinalize);<newline46mondego>    Thread.sleep(3000);<newline46mondego>    assertEquals(<doubleQuotes46>Should be exactly one call to finalizer<doubleQuotes46>, 1,<newline46mondego>        callback.NumFinalize);<newline46mondego><newline46mondego>    System.out.println(<doubleQuotes46>Value after: <doubleQuotes46> + callback.NumFinalize);<newline46mondego><newline46mondego>    }<newline46mondego>"
"5403splitHere46","9540694splitHere46","assertEquals"
"5404splitHere46","9540906splitHere46","Queue<int> emptySlots;<newline46mondego>Object[] arrayOfStuff;<newline46mondego><newline46mondego>public void AddStuff(object stuffToAdd)<newline46mondego>{<newline46mondego>    if (this.emptySlots.Count > 0)<newline46mondego>    {<newline46mondego>        int index = this.emptySlots.Dequeue();<newline46mondego>        //make sure your objects know their position in the array<newline46mondego>        stuffToAdd.ID = index;<newline46mondego>        this.arrayOfStuff[index] = stuffToAdd;            <newline46mondego>    }<newline46mondego>    else<newline46mondego>    {<newline46mondego>        //resize array and add new object to end rememebering to fetch its id<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public void RemoveStuff(object stuffToRemove)<newline46mondego>{<newline46mondego>    this.emptySlots.Enqueue(stuffToRemove.ID);<newline46mondego>    this.arrayOfStuff[stuffToRemove.ID] = null;<newline46mondego>}<newline46mondego>"
"5405splitHere46","9540982splitHere46","GridBagConstraints.gridy"
"5406splitHere46","9541015splitHere46","dnsjava"
"5407splitHere46","9541015splitHere46","Type.A"
"5408splitHere46","9541101splitHere46","import java.text.*;<newline46mondego>import java.util.*;<newline46mondego><newline46mondego>public class Test {<newline46mondego>    public static void main(String[] args) throws Exception {<newline46mondego>        String text = <doubleQuotes46>Thu, 1 Mar 2012 13:57:06 -0600<doubleQuotes46>;<newline46mondego>        // Note the explicit locale. Let's not leave it as the system default :)<newline46mondego>        DateFormat formatter = new SimpleDateFormat(<doubleQuotes46>E, dd MMM yyyy HH:mm:ss Z<doubleQuotes46>, <newline46mondego>                                                    Locale.US);<newline46mondego><newline46mondego>        Date dt = formatter.parse(text);<newline46mondego>        System.out.println(dt);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5409splitHere46","9541101splitHere46","d"
"5410splitHere46","9541101splitHere46","dd"
"5411splitHere46","9541101splitHere46","dd"
"5412splitHere46","9541244splitHere46","for (int i = 1; i < numStepsRequired; i++) {<newline46mondego>    int currX = x + i * dx;<newline46mondego>    int currY = y + i * dy;<newline46mondego>    if (board[currY][currX] != null) {<newline46mondego>        return false;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5413splitHere46","9541289splitHere46","private int[] scores = new int[5];<newline46mondego>"
"5414splitHere46","9541289splitHere46","public void addQuiz() { <newline46mondego>    for(int i = 0; i < 5; i++){ //Loops through and adds 5 scores<newline46mondego>    int score = randomNumbers.nextInt(101);<newline46mondego>    scores[i] = score;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5415splitHere46","9541289splitHere46","public int getAverageScore() {<newline46mondego>    int totalScore = scores[0] + scores[1] + scores[2] + scores[3] + scores[4];<newline46mondego>    int avgScore = totalScore / 5;<newline46mondego>    return avgScore;<newline46mondego>}<newline46mondego>"
"5416splitHere46","9541380splitHere46","clear"
"5417splitHere46","9541380splitHere46","clear | od -t c<newline46mondego>"
"5418splitHere46","9541380splitHere46","0000000  033   [   H 033   [   2   J                                    <newline46mondego>0000007<newline46mondego>"
"5419splitHere46","9541380splitHere46","System.out.println(<doubleQuotes46>\033[H\033[2J<doubleQuotes46>);<newline46mondego>"
"5420splitHere46","9541383splitHere46","MainLoop mainLoop1 = new MainLoop();<newline46mondego>MainLoop mainLoop2 = new MainLoop();<newline46mondego><newline46mondego>new Thread(mainLoop1).start();<newline46mondego>new Thread(mainLoop2).start();<newline46mondego><newline46mondego>mainLoop1.finished = true; // static variable also shuts down mainLoop2 <newline46mondego>"
"5421splitHere46","9541449splitHere46","/** @see http://stackoverflow.com/q/9540263/230513 */<newline46mondego>public class Test {<newline46mondego><newline46mondego>    private static Test test = new Test();<newline46mondego>    private JPanel myPanel;<newline46mondego>    private JList myList;<newline46mondego>    private JLabel myLabel;<newline46mondego><newline46mondego>    public Test() {<newline46mondego>        myPanel = new JPanel();<newline46mondego>        myPanel.setLayout(new GridBagLayout());<newline46mondego>        GridBagConstraints gbc = new GridBagConstraints();<newline46mondego>        String[] values = {<doubleQuotes46>Value1<doubleQuotes46>, <doubleQuotes46>Value2<doubleQuotes46>, <doubleQuotes46>Value3<doubleQuotes46>, <doubleQuotes46>Value4<doubleQuotes46>};<newline46mondego>        myList = new JList(values);<newline46mondego>        myPanel.add(this.myList, gbc);<newline46mondego>        myLabel = new JLabel(<doubleQuotes46>Label1<doubleQuotes46>);<newline46mondego>        myPanel.add(this.myLabel, gbc);<newline46mondego>        myPanel.add(new JButton(new AbstractAction(<doubleQuotes46>Select Value3<doubleQuotes46>) {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void actionPerformed(ActionEvent e) {<newline46mondego>                test.updateList(2);<newline46mondego>            }<newline46mondego>        }));<newline46mondego>    }<newline46mondego><newline46mondego>    public void updateLabel(String label) {<newline46mondego>        myLabel.setText(label);<newline46mondego>    }<newline46mondego><newline46mondego>    public void updateList(int index) {<newline46mondego>        myList.setSelectedIndex(index);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        EventQueue.invokeLater(new Runnable() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                JFrame f = new JFrame();<newline46mondego>                f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>                f.add(test.myPanel);<newline46mondego>                f.pack();<newline46mondego>                f.setLocationByPlatform(true);<newline46mondego>                f.setVisible(true);<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5422splitHere46","9541467splitHere46","Map<String, List<Map<String, ParseNode>>> m =<newline46mondego>    new HashMap<String, List<Map<String, ParseNode>>>();<newline46mondego>"
"5423splitHere46","9541467splitHere46","Map<String, List<Map<String, ParseNode>>> m = new HashMap<>();<newline46mondego>"
"5424splitHere46","9541467splitHere46","Map<String, List<Map<String, ParseNode>>> m = new HashMap();<newline46mondego>"
"5425splitHere46","9541467splitHere46","Map rawMap = new HashMap();<newline46mondego>rawMap.add(<doubleQuotes46>string<doubleQuotes46>, <doubleQuotes46>not list!<doubleQuotes46>);<newline46mondego><newline46mondego>Map<String, List<Map<String, ParseNode>>> m = rawMap; // uh oh!!<newline46mondego>"
"5426splitHere46","9541467splitHere46","m"
"5427splitHere46","9541467splitHere46","List<Map<String, ParseNode>>"
"5428splitHere46","9541467splitHere46","<>"
"5429splitHere46","9541539splitHere46","woodBody =  PhysicsFactory.createBoxBody(this.mPhysicsWorld, sprite, BodyType.StaticBody, wallFixtureDef);<newline46mondego>"
"5430splitHere46","9541539splitHere46","public class Ball extends Sprite{<newline46mondego><newline46mondego>final FixtureDef ballFixtureDef = PhysicsFactory.createFixtureDef(1.0f, 0.0f, 0.0f, false, Main.CATEGORYBIT_BALL, Main.MASKBITS_BALL, (short)0);<newline46mondego><newline46mondego>Body body;<newline46mondego>float velocityX, velocityY; <newline46mondego>int type;   <newline46mondego><newline46mondego>public Ball(float pX, float pY, TextureRegion pTextureRegion, PhysicsWorld pWorld, float velocityX, float velocityY, int type) <newline46mondego>{<newline46mondego>    super(pX, pY, pTextureRegion);<newline46mondego>    this.type = type;<newline46mondego>    this.velocityX = velocityX;<newline46mondego>    this.velocityY = velocityY;<newline46mondego>    body = PhysicsFactory.createCircleBody(pWorld, this, BodyType.DynamicBody, ballFixtureDef);<newline46mondego>    body.setUserData(Ball.this);<newline46mondego>    pWorld.registerPhysicsConnector(new PhysicsConnector(this, body, true, true));<newline46mondego>}<newline46mondego>}<newline46mondego>"
"5431splitHere46","9541539splitHere46","private void destroyBall(final Ball ball)<newline46mondego>    {<newline46mondego>        this.runOnUpdateThread(new Runnable(){<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego><newline46mondego>                final Body body = ball.body;<newline46mondego>                mPhysicsWorld.unregisterPhysicsConnector(mPhysicsWorld.getPhysicsConnectorManager().findPhysicsConnectorByShape(ball));<newline46mondego>                mPhysicsWorld.destroyBody(body);<newline46mondego>                mScene.detachChild(ball);<newline46mondego>                ballsList.remove(ball);<newline46mondego>            }});<newline46mondego><newline46mondego>    }<newline46mondego>"
"5432splitHere46","9541539splitHere46","Ball b = new Ball(float pX, float pY, TextureRegion pTextureRegion, PhysicsWorld pWorld, float velocityX, float velocityY, int type) <newline46mondego>{<newline46mondego>    @Override<newline46mondego>    public boolean onAreaTouched(final TouchEvent pSceneTouchEvent, final float pTouchAreaLocalX, final float pTouchAreaLocalY)<newline46mondego>    {<newline46mondego>        destroyBall(this);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5433splitHere46","9541648splitHere46","FileReader"
"5434splitHere46","9541648splitHere46","Reader"
"5435splitHere46","9541648splitHere46","BufferedReader"
"5436splitHere46","9541648splitHere46",".close()"
"5437splitHere46","9541648splitHere46","BufferedReader"
"5438splitHere46","9541648splitHere46","FileReader"
"5439splitHere46","9541853splitHere46","mappedBy"
"5440splitHere46","9541853splitHere46","addAddress()"
"5441splitHere46","9541853splitHere46","setAddresses()"
"5442splitHere46","9541913splitHere46","StringTokenizer"
"5443splitHere46","9542010splitHere46","public class TestArray  {<newline46mondego><newline46mondego>public static void main(String[] args)  {<newline46mondego>int[] anArray={ 1,2,3,4,5,6,7,8,9};<newline46mondego><newline46mondego>System.out.println(anArray.length);<newline46mondego>int min=0;<newline46mondego>int max=0;<newline46mondego><newline46mondego>for(int i=0; i<anArray.length; i++){<newline46mondego>    if(anArray[i] <(anArray[min]) )<newline46mondego>        min=i;<newline46mondego><newline46mondego>    if(anArray[i]>(anArray[max]) )<newline46mondego>        max=i;<newline46mondego>}<newline46mondego><newline46mondego>System.out.println(max);<newline46mondego>System.out.println(min);<newline46mondego>}<newline46mondego>}<newline46mondego>"
"5444splitHere46","9542080splitHere46","AbstractCollection"
"5445splitHere46","9542080splitHere46","Collection"
"5446splitHere46","9542080splitHere46","unmodifiableCollection"
"5447splitHere46","9542080splitHere46","Set<E> set = new HashSet<>();"
"5448splitHere46","9542080splitHere46","AbstractCollection"
"5449splitHere46","9542080splitHere46","Collection"
"5450splitHere46","9542116splitHere46","MainClassAdapter"
"5451splitHere46","9542116splitHere46","setAdapter(new UISpecAdapter() {<newline46mondego>    public Window getMainWindow() {<newline46mondego>        final Window[] result = new Window[1];<newline46mondego>        WindowInterceptor.init(new MainClassTrigger(Main.class, new String[0]))<newline46mondego>            .processTransientWindow()<newline46mondego>            .process(new WindowHandler() {<newline46mondego>                public Trigger process(Window window) throws Exception {<newline46mondego>                result[0] = window;<newline46mondego>                return Trigger.DO_NOTHING;<newline46mondego>                }<newline46mondego>            })<newline46mondego>        .run();<newline46mondego>        return result[0];<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"5452splitHere46","9542131splitHere46","<Pair<ParseNode, ParseNode>>"
"5453splitHere46","9542131splitHere46","<Pair<BigInteger,IOException>>"
"5454splitHere46","9542131splitHere46","ArrayList<Pair<ParseNode,ParseNode>>"
"5455splitHere46","9542213splitHere46","if(x <= mapwidth){<newline46mondego>"
"5456splitHere46","9542213splitHere46","if(str == <doubleQuotes46><doubleQuotes46>){<newline46mondego>"
"5457splitHere46","9542248splitHere46","getChildAt"
"5458splitHere46","9542248splitHere46","getChildCount"
"5459splitHere46","9542248splitHere46","addView"
"5460splitHere46","9542341splitHere46","List<String> paths = new ArrayList<String>();<newline46mondego>paths.add(<doubleQuotes46>r<doubleQuotes46>);<newline46mondego>paths.add(<doubleQuotes46>e<doubleQuotes46>);<newline46mondego>...<newline46mondego>"
"5461splitHere46","9542341splitHere46","ImmutableList<String> paths = ImmutableList.of(<doubleQuotes46>r<doubleQuotes46>, <doubleQuotes46>e<doubleQuotes46>, <doubleQuotes46>t<doubleQuotes46>, <doubleQuotes46>t<doubleQuotes46>);<newline46mondego>"
"5462splitHere46","9542342splitHere46","getProvider()"
"5463splitHere46","9542342splitHere46","handleInform"
"5464splitHere46","9542342splitHere46","handleInform"
"5465splitHere46","9542342splitHere46","getProvider()"
"5466splitHere46","9542342splitHere46","provider"
"5467splitHere46","9542342splitHere46","handleInform"
"5468splitHere46","9542342splitHere46","getProvider()"
"5469splitHere46","9542342splitHere46","getProvider()"
"5470splitHere46","9542342splitHere46","handleInform"
"5471splitHere46","9542535splitHere46","GridBagConstraints gbc = new GridBagConstraints(0, 0, 1, 1, 1.0, 1.0,<newline46mondego>        GridBagConstraints.NORTHWEST, GridBagConstraints.NONE, <newline46mondego>        new Insets(0, 0, 0, 0), 0, 0);<newline46mondego>  panelA.add(innerPanelOne, gbc);<newline46mondego><newline46mondego>  //...<newline46mondego><newline46mondego>  panelB.add(innerPanelThree, gbc);<newline46mondego>"
"5472splitHere46","9542710splitHere46","java.nio"
"5473splitHere46","9542710splitHere46","SocketChannel"
"5474splitHere46","9542955splitHere46","If it is,<newline46mondego>        a.Greater than 'k' then your kth element lies in the first sub-array. Go recursively. Start sorting the sub-array1 alone and you can entirely discard the sub-array2 as you can be sure that 'kth' element cannot occur at a position greater than k! Repeat step-1 for the right sub-array<newline46mondego>        b.Lesser than 'k' then your kth element lies in the second sub-array. Again do as said above. Repeat step-1 for left subarray.<newline46mondego>        c.If the size of sub-array1 is k-1 then your pivot element must be the kth largest element in your array.Bingo! you have your 'kth' largest element in the array<newline46mondego>"
"5475splitHere46","9543121splitHere46","ArchitecturesInstallIn64BitMode=x64"
"5476splitHere46","9543339splitHere46","JFrame frame = new JFrame(<doubleQuotes46>FooRendererTest<doubleQuotes46>);<newline46mondego>  frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>  frame.getContentPane().add(mainPanel); // or whatever...<newline46mondego>  frame.pack();<newline46mondego>  frame.setLocationRelativeTo(null);  // *** this will center your app ***<newline46mondego>  frame.setVisible(true);<newline46mondego>"
"5477splitHere46","9543381splitHere46","Class<?>"
"5478splitHere46","9543381splitHere46","public class Test {<newline46mondego><newline46mondego>    static class A {}<newline46mondego>    static class B extends A {}<newline46mondego><newline46mondego><newline46mondego>    public static void main(String[] args) throws Exception {<newline46mondego>        Holder<HashSet<Integer>> i = newObjectHolder(new TypeReference<HashSet<Integer>>() {});  // works<newline46mondego>        Holder<A> j = newObjectHolder(new TypeReference<A>() {});  // works<newline46mondego>        Holder<A> k = newObjectHolder(new TypeReference<B>() {});  // works<newline46mondego>        Holder<B> l = newObjectHolder(new TypeReference<A>() {});  // doesn't compile (good)<newline46mondego>    }<newline46mondego><newline46mondego>    static class Holder<T> {<newline46mondego>        public Holder(T newInstance) {}<newline46mondego>        T get() { return null; }<newline46mondego>    }<newline46mondego><newline46mondego>    public static <T,U extends TypeReference<? extends T>> Holder<T> newObjectHolder(U typeToken) throws Exception {<newline46mondego>        T obj = typeToken.newInstance();<newline46mondego>        return new Holder<T>(obj);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5479splitHere46","9543381splitHere46","TypeReference"
"5480splitHere46","9543381splitHere46","TypeLiteral"
"5481splitHere46","9543441splitHere46","false"
"5482splitHere46","9543441splitHere46","return false;"
"5483splitHere46","9543441splitHere46","dBConnection.disconnect();"
"5484splitHere46","9543441splitHere46","finally"
"5485splitHere46","9543441splitHere46","dBConnection.disconnect();"
"5486splitHere46","9543441splitHere46","dBConnection.disconnect();"
"5487splitHere46","9543441splitHere46","try<newline46mondego>{<newline46mondego>...<newline46mondego>}<newline46mondego>catch(Exception e)<newline46mondego>{<newline46mondego>...<newline46mondego>}<newline46mondego>finally<newline46mondego>{<newline46mondego>   dBConnection.disconnect();   <newline46mondego>}<newline46mondego>"
"5488splitHere46","9543444splitHere46","org.jruby.RubyEncoding$2"
"5489splitHere46","9543444splitHere46","java.lang.ThreadLocal$ThreadLocalMap$Entry"
"5490splitHere46","9543444splitHere46","ClassLoader"
"5491splitHere46","9543444splitHere46","import java.lang.reflect.Method;<newline46mondego>import java.net.URL;<newline46mondego>import java.net.URLClassLoader;<newline46mondego>import java.util.concurrent.Callable;<newline46mondego>import java.util.concurrent.ExecutorService;<newline46mondego>import java.util.concurrent.Executors;<newline46mondego><newline46mondego>import org.junit.Test;<newline46mondego><newline46mondego>public class JRubyInstantiationTeardownTest {<newline46mondego><newline46mondego>    public static int i;<newline46mondego><newline46mondego>    @Test<newline46mondego>    public void test() throws Exception {<newline46mondego><newline46mondego>        for (i = 0; i < 100; ++i) {<newline46mondego><newline46mondego>            URL[] urls = new URL[] {<newline46mondego>                new URL(<doubleQuotes46>file:///home/pat/jruby-1.6.7/lib/jruby.jar<doubleQuotes46>)<newline46mondego>            };<newline46mondego><newline46mondego>            final ClassLoader cl = new URLClassLoader(urls, this.getClass().getClassLoader());<newline46mondego><newline46mondego>            final Class<?> rubyClass = cl.loadClass(<doubleQuotes46>org.jruby.Ruby<doubleQuotes46>);<newline46mondego>            final Method newInstance = rubyClass.getMethod(<doubleQuotes46>newInstance<doubleQuotes46>);<newline46mondego>            final Method evalScriptlet = rubyClass.getMethod(<doubleQuotes46>evalScriptlet<doubleQuotes46>, String.class);<newline46mondego>            final Method tearDown = rubyClass.getMethod(<doubleQuotes46>tearDown<doubleQuotes46>);<newline46mondego><newline46mondego>            // <doubleQuotes46>Direct<doubleQuotes46> API<newline46mondego>            Callable<Void> direct = new Callable<Void>() {<newline46mondego>                public Void call() throws Exception {<newline46mondego>                    // created inside thread because initialization happens immediately<newline46mondego>                    final Object ruby = newInstance.invoke(null);<newline46mondego><newline46mondego>                    System.out.println(<doubleQuotes46><doubleQuotes46> + i + <doubleQuotes46>: <doubleQuotes46> + ruby);<newline46mondego>                    evalScriptlet.invoke(ruby, <doubleQuotes46>puts 'hello, world'<doubleQuotes46>);<newline46mondego>                    tearDown.invoke(ruby);<newline46mondego>                    return null;<newline46mondego>                }<newline46mondego>            };<newline46mondego><newline46mondego>            // JRuby Embed API<newline46mondego>            final Class<?> scriptingContainerClass = cl.loadClass(<doubleQuotes46>org.jruby.embed.ScriptingContainer<doubleQuotes46>);<newline46mondego>            final Method terminate = scriptingContainerClass.getMethod(<doubleQuotes46>terminate<doubleQuotes46>);<newline46mondego>            final Method runScriptlet = scriptingContainerClass.getMethod(<doubleQuotes46>runScriptlet<doubleQuotes46>, String.class);<newline46mondego><newline46mondego>            // created outside thread because ruby instance not created immediately<newline46mondego>            final Object container = scriptingContainerClass.newInstance();<newline46mondego><newline46mondego>            Callable<Void> embed = new Callable<Void>() {<newline46mondego>                public Void call() throws Exception {<newline46mondego><newline46mondego>                    System.out.println(i + <doubleQuotes46>: <doubleQuotes46> + container);<newline46mondego>                    runScriptlet.invoke(container, <doubleQuotes46>puts 'hello, world'<doubleQuotes46>);<newline46mondego>                    terminate.invoke(container);<newline46mondego>                    return null;<newline46mondego>                }<newline46mondego>            };<newline46mondego><newline46mondego>            // separate thread for each loop iteration so its ThreadLocal vars are discarded<newline46mondego>            final ExecutorService executor = Executors.newSingleThreadExecutor();<newline46mondego>            executor.submit(direct).get();<newline46mondego>            executor.submit(embed).get();<newline46mondego>            executor.shutdown();<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"5492splitHere46","9543537splitHere46","floor(log(num)) + 1"
"5493splitHere46","9543537splitHere46","x - (floor(log(num)) + 1) =<newline46mondego>(x - 1) - floor(log(num))<newline46mondego>"
"5494splitHere46","9543537splitHere46","leadingZeros(num) = 63 - floor(log_2(num))<newline46mondego>"
"5495splitHere46","9543537splitHere46",">>>"
"5496splitHere46","9543537splitHere46","<<"
"5497splitHere46","9543537splitHere46","n >>> 32"
"5498splitHere46","9543537splitHere46","n"
"5499splitHere46","9543537splitHere46","0000000000000000000000000000000000000000000001011010100000101011<newline46mondego>"
"5500splitHere46","9543537splitHere46","i"
"5501splitHere46","9543537splitHere46","x"
"5502splitHere46","9543537splitHere46","00000000000000000000000000000000"
"5503splitHere46","9543537splitHere46","x"
"5504splitHere46","9543537splitHere46","0000000000000101"
"5505splitHere46","9543611splitHere46","\u"
"5506splitHere46","9544183splitHere46","for(String key : hashMap.keySet())<newline46mondego>   {<newline46mondego>     String value = hashMap.get(key);<newline46mondego><newline46mondego>     if(searchString.equals(value))<newline46mondego>       {<newline46mondego>          String keyAndValue = key + value; // this is what you want<newline46mondego>       }    <newline46mondego>   }<newline46mondego>"
"5507splitHere46","9544183splitHere46","for(Map.Entry<String, String> entry : hashMap.entrySet())<newline46mondego>   {<newline46mondego>     String key = entry.getKey();<newline46mondego>     String value = entry.getValue();<newline46mondego><newline46mondego>     if(searchString.equals(key) || searchString.equals(value))<newline46mondego>       {<newline46mondego>          String keyAndValue = key + value; // this is what you want<newline46mondego>       }    <newline46mondego>   }<newline46mondego>"
"5508splitHere46","9544292splitHere46","final Intent intent = new Intent(this, MenuActivity.class);<newline46mondego>    startActivityForResult(intent);<newline46mondego>"
"5509splitHere46","9544292splitHere46","startActivity(new Intent(<doubleQuotes46>Your.Package.name.classnameinManifest<doubleQuotes46>));<newline46mondego>"
"5510splitHere46","9544294splitHere46","&Aacute;"
"5511splitHere46","9544294splitHere46","&Ouml;"
"5512splitHere46","9544302splitHere46","while"
"5513splitHere46","9544302splitHere46","...<newline46mondego>ResultSet result = stat.executeQuery(<doubleQuotes46>SELECT * FROM Test<doubleQuotes46>);  <newline46mondego>while(result.next()) {  <newline46mondego>    System.out.println(result.getString(<doubleQuotes46>Name<doubleQuotes46>));  <newline46mondego>    System.out.println(result.getString(<doubleQuotes46>Id<doubleQuotes46>));<newline46mondego>}<newline46mondego>stat.execute(<doubleQuotes46>DROP TABLE Test<doubleQuotes46>);  <newline46mondego>"
"5514splitHere46","9544577splitHere46","Hash Algorithms"
"5515splitHere46","9544577splitHere46","fixed-size"
"5516splitHere46","9544652splitHere46","import java.awt.*;<newline46mondego>import java.awt.image.BufferedImage;<newline46mondego>import javax.swing.*;<newline46mondego><newline46mondego>import java.io.File;<newline46mondego>import java.io.IOException;<newline46mondego>import javax.imageio.ImageIO;<newline46mondego><newline46mondego>public class ListView {<newline46mondego><newline46mondego>    public static void main(String[] args) throws IOException {<newline46mondego>        String path = <doubleQuotes46>C:/Documents and Settings/All Users/Documents/<doubleQuotes46> +<newline46mondego>            <doubleQuotes46>My Pictures/Sample Pictures<doubleQuotes46>;<newline46mondego>        JFrame frame=new JFrame();<newline46mondego>        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);<newline46mondego><newline46mondego>        File folder = new File(path);<newline46mondego>        File[] listOfFiles = folder.listFiles();<newline46mondego>        DefaultListModel listModel = new DefaultListModel();<newline46mondego>        int count = 0;<newline46mondego>        for (int i = 0; i < listOfFiles.length; i++)<newline46mondego>        {<newline46mondego>            System.out.println(<doubleQuotes46>check path<doubleQuotes46>+listOfFiles[i]);<newline46mondego>            String name = listOfFiles[i].toString();<newline46mondego>            // load only JPEGs<newline46mondego>            if ( name.endsWith(<doubleQuotes46>jpg<doubleQuotes46>) ) {<newline46mondego>                ImageIcon ii = new ImageIcon(ImageIO.read(listOfFiles[i]));<newline46mondego>                listModel.add(count++, ii);<newline46mondego>            }<newline46mondego>        }<newline46mondego>        JList lsm=new JList(listModel);<newline46mondego>        lsm.setVisibleRowCount(1);<newline46mondego><newline46mondego>        frame.add(new JScrollPane(lsm));<newline46mondego><newline46mondego>        frame.pack();<newline46mondego>        frame.setVisible(true);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5517splitHere46","9544680splitHere46","public static final String NO_MORE_MESSAGES = UUID.randomUUID().toString();<newline46mondego>"
"5518splitHere46","9544680splitHere46","NO_MORE_MESSAGES"
"5519splitHere46","9544708splitHere46","<map>"
"5520splitHere46","9544708splitHere46","preferences.xml"
"5521splitHere46","9544716splitHere46","Ã?"
"5522splitHere46","9544716splitHere46","&Aacute;"
"5523splitHere46","9544716splitHere46","Entities.EscapeMode"
"5524splitHere46","9544853splitHere46","public String stringfinder(String linktext, String input) {<newline46mondego>    String [] inputSplits = input.split(<doubleQuotes46>\\s+<doubleQuotes46>);<newline46mondego>    for (int i = 0; i < inputSplits.length; i += 4) {<newline46mondego>        if (inputSplits[i].equals(linktext) {<newline46mondego>            return inputSplits[i + 1] + <doubleQuotes46> <doubleQuotes46> + inputSplits[i + 2]<newline46mondego>                      + <doubleQuotes46> <doubleQuotes46> + inputSplits[i + 3];<newline46mondego>        }<newline46mondego>    }<newline46mondego>    return <doubleQuotes46><doubleQuotes46>;<newline46mondego>}<newline46mondego>"
"5525splitHere46","9544853splitHere46","return inputSplits[i + 1] + <doubleQuotes46> <doubleQuotes46> + inputSplits[i + 2] + <doubleQuotes46> <doubleQuotes46> + inputSplits[i + 3];"
"5526splitHere46","9544868splitHere46","<bean id=<doubleQuotes46>pollThread<doubleQuotes46> class=<doubleQuotes46>java.lang.Thread<doubleQuotes46> init-method=<doubleQuotes46>start<doubleQuotes46> destroy-method=<doubleQuotes46>interrupt<doubleQuotes46>><newline46mondego>    <constructor-arg ref=<doubleQuotes46>watchServiceRunnableWrapper<doubleQuotes46>/><newline46mondego></bean><newline46mondego><newline46mondego><bean id=<doubleQuotes46>watchServiceRunnableWrapper<doubleQuotes46> class=<doubleQuotes46>WatchServiceRunnableWrapper<doubleQuotes46>><newline46mondego>    <constructor-arg ref=<doubleQuotes46>watchService<doubleQuotes46>/><newline46mondego></bean><newline46mondego><newline46mondego><bean id=<doubleQuotes46>WatchService<doubleQuotes46> class=<doubleQuotes46>java.nio.file.WatchService<doubleQuotes46> destroy-method=<doubleQuotes46>close<doubleQuotes46>/><newline46mondego>"
"5527splitHere46","9544868splitHere46","WatchServiceRunnableWrapper"
"5528splitHere46","9544868splitHere46","public class WatchServiceRunnableWrapper implemenets Runnable {<newline46mondego><newline46mondego>    private WatchService WatchService;<newline46mondego><newline46mondego>    public WatchServiceRunnableWrapper(WatchService watchService) {<newline46mondego>        this.watchService = watchService;<newline46mondego>    }<newline46mondego><newline46mondego>    public void run() {<newline46mondego>        watchService.poll();<newline46mondego>        //<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5529splitHere46","9544872splitHere46","String.split"
"5530splitHere46","9544872splitHere46","String[] split = line.split(<doubleQuotes46> <doubleQuotes46>); // split by space<newline46mondego>System.out.println(split[1] + split[2] + split[3]); // watch out for the array's bounds<newline46mondego>"
"5531splitHere46","9545108splitHere46","Vertex"
"5532splitHere46","9545108splitHere46","ArrayList<Vertex>"
"5533splitHere46","9545108splitHere46","Edge"
"5534splitHere46","9545292splitHere46","split"
"5535splitHere46","9545292splitHere46","Scanner"
"5536splitHere46","9545292splitHere46","nextLine"
"5537splitHere46","9545292splitHere46","String"
"5538splitHere46","9545292splitHere46","String[] split = in.nextLine().split(<doubleQuotes46> <doubleQuotes46>);<newline46mondego>"
"5539splitHere46","9545332splitHere46","@NotNull<newline46mondego>@Size(min = 2, max = 14)<newline46mondego>@UpperCase<newline46mondego>private String licensePlate;<newline46mondego>"
"5540splitHere46","9545332splitHere46","@NotNull<newline46mondego>@NotEmpty<newline46mondego>public String foo(@NotNull @Pattern(regexp=<doubleQuotes46>[0-9]<doubleQuotes46>) String param) {<newline46mondego>   ...<newline46mondego>}<newline46mondego>"
"5541splitHere46","9545361splitHere46","java -jar jarFile.jar"
"5542splitHere46","9545385splitHere46","DocumentListener"
"5543splitHere46","9545385splitHere46","JTextArea's"
"5544splitHere46","9545385splitHere46","Document"
"5545splitHere46","9545385splitHere46","DocumentFilter"
"5546splitHere46","9545385splitHere46","Document"
"5547splitHere46","9545400splitHere46","java.sql.Date"
"5548splitHere46","9545400splitHere46","PreparedStatement"
"5549splitHere46","9545449splitHere46","mProgressStatus = doWork();<newline46mondego>"
"5550splitHere46","9545449splitHere46","mProgressStatus = 0;<newline46mondego>progressThread = new Thread(new Runnable() {             <newline46mondego>    public void run() {                 <newline46mondego>        while (mProgressStatus < 100) {                                          <newline46mondego>            // Update the progress bar                     <newline46mondego>            mHandler.post(new Runnable() {                         <newline46mondego>                public void run() {                             <newline46mondego>                    progressBar.setProgress(mProgressStatus);                         <newline46mondego>                }                     <newline46mondego>            });<newline46mondego>            mProgressStatus ++;<newline46mondego>            android.os.SystemClock.sleep(1000); // Thread.sleep() doesn't guarantee 1000 msec sleep, it can be interrupted before               <newline46mondego>        }             <newline46mondego>    }         <newline46mondego>});<newline46mondego><newline46mondego>progressThread.start();<newline46mondego>"
"5551splitHere46","9545455splitHere46","// User credentials.<newline46mondego>parameters.put(SessionParameter.USER, <doubleQuotes46>admin<doubleQuotes46>);<newline46mondego>parameters.put(SessionParameter.PASSWORD, <doubleQuotes46>admin<doubleQuotes46>);<newline46mondego><newline46mondego>// Connection settings.<newline46mondego>parameters.put(SessionParameter.BINDING_TYPE, BindingType.ATOMPUB.value());<newline46mondego>parameters.put(SessionParameter.ATOMPUB_URL, <doubleQuotes46>http://localhost:8080/alfresco/service/cmis<doubleQuotes46>); // URL to your CMIS server.<newline46mondego>parameters.put(SessionParameter.AUTH_HTTP_BASIC, <doubleQuotes46>true<doubleQuotes46> );<newline46mondego>parameters.put(SessionParameter.COOKIES, <doubleQuotes46>true<doubleQuotes46> );<newline46mondego><newline46mondego>// Create session.<newline46mondego>// Alfresco only provides one repository.<newline46mondego>Repository repository = sessionFactory.getRepositories(parameters).get(0);<newline46mondego>Session session = repository.createSession();<newline46mondego>"
"5552splitHere46","9545455splitHere46","cmisRepositoryEntryType"
"5553splitHere46","9545555splitHere46","play.db.jpa.GenericModel"
"5554splitHere46","9545555splitHere46","play.db.jpa.Model"
"5555splitHere46","9545555splitHere46","Model"
"5556splitHere46","9545555splitHere46","GenericModel"
"5557splitHere46","9545555splitHere46","Model"
"5558splitHere46","9545555splitHere46","@Id @GeneratedValue public Long id"
"5559splitHere46","9545555splitHere46","GenericModel"
"5560splitHere46","9545555splitHere46","@Entity<newline46mondego>public class Community extends GenericModel {<newline46mondego>    @Id<newline46mondego>    public Long id;<newline46mondego><newline46mondego>    public Community (Long id) {<newline46mondego>        this.id = id;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5561splitHere46","9545589splitHere46","int port = 8080;<newline46mondego>String context_path = <doubleQuotes46>/<doubleQuotes46>;<newline46mondego>File tmp_directory = <doubleQuotes46>C:\\some-custom-path\\<doubleQuotes46>;<newline46mondego>String war_path = <doubleQuotes46>C:\\path-to-a\\file.war<doubleQuotes46>;<newline46mondego><newline46mondego>WebAppContext app = new WebAppContext();<newline46mondego>app.setContextPath( context_path );<newline46mondego>app.setWar( war_path );<newline46mondego>app.setTempDirectory( tmp_directory );<newline46mondego><newline46mondego>Server server = new Server( port );<newline46mondego>server.setHandler( app );<newline46mondego>server.start();<newline46mondego>server.join();<newline46mondego>"
"5562splitHere46","9545638splitHere46","Executors.newFixedThreadPool(10)"
"5563splitHere46","9545689splitHere46","region()"
"5564splitHere46","9545689splitHere46","find()"
"5565splitHere46","9545689splitHere46","Pattern p1 = Pattern.compile(<doubleQuotes46>target=\<doubleQuotes46>FmRight\<doubleQuotes46>>\\d+<doubleQuotes46>);<newline46mondego>Pattern p2 = Pattern.compile(<doubleQuotes46><TD Nowrap >[^<]*</TD><doubleQuotes46>);<newline46mondego>Matcher m = p1.matcher(text);<newline46mondego>int count = 0;<newline46mondego>int regionStart= 0;                          // <-----<newline46mondego>for (int i = 0; i < 3; i++) {<newline46mondego>    if(m.find()) {<newline46mondego>        regionStart = m.end();               // <-----<newline46mondego>        System.out.println(m.group().split(<doubleQuotes46>><doubleQuotes46>)[1]);<newline46mondego>    }<newline46mondego>    m.usePattern(p2);<newline46mondego>    m.region(regionStart, m.regionEnd());    // <-----<newline46mondego>    count=0;<newline46mondego>    for(int j=0;j<2;j++){<newline46mondego>        if(m.find()) {<newline46mondego>            regionStart = m.end();           // <-----<newline46mondego>            System.out.println(m.group().split(<doubleQuotes46>><doubleQuotes46>)[1].split(<doubleQuotes46><<doubleQuotes46>)[0]);<newline46mondego>        }<newline46mondego>    }<newline46mondego>    m.usePattern(p1);<newline46mondego>    m.region(regionStart, m.regionEnd());    // <-----<newline46mondego>    count=1;<newline46mondego>}<newline46mondego>"
"5566splitHere46","9545721splitHere46","ExternalJarMainClass.main(new String[]{<doubleQuotes46>arguments<doubleQuotes46>, <doubleQuotes46>to<doubleQuotes46>, <doubleQuotes46>main<doubleQuotes46>});<newline46mondego>"
"5567splitHere46","9545721splitHere46","URLClassLoader"
"5568splitHere46","9545721splitHere46","META-INF/MANIFEST.MF"
"5569splitHere46","9545721splitHere46","main"
"5570splitHere46","9545721splitHere46","import java.io.BufferedReader;<newline46mondego>import java.io.File;<newline46mondego>import java.io.IOException;<newline46mondego>import java.io.InputStream;<newline46mondego>import java.io.InputStreamReader;<newline46mondego>import java.lang.reflect.InvocationTargetException;<newline46mondego>import java.lang.reflect.Method;<newline46mondego>import java.net.URL;<newline46mondego>import java.net.URLClassLoader;<newline46mondego>import java.util.regex.Matcher;<newline46mondego>import java.util.regex.Pattern;<newline46mondego><newline46mondego>public class JarRunner {<newline46mondego><newline46mondego>    private final Method entryPoint;<newline46mondego><newline46mondego>    public JarRunner(File jarFile) throws<newline46mondego>            ClassNotFoundException,<newline46mondego>            IOException,<newline46mondego>            NoSuchMethodException {<newline46mondego>        URL jarUrl = jarFile.toURI().toURL();<newline46mondego>        URLClassLoader loader = URLClassLoader.newInstance(<newline46mondego>                new URL[]{jarUrl});<newline46mondego>        URL manifestUrl = loader.findResource(<doubleQuotes46>META-INF/MANIFEST.MF<doubleQuotes46>);<newline46mondego>        String manifest = resourceToString(manifestUrl);<newline46mondego>        Class<?> clazz = loader.loadClass(findMainClassName(manifest));<newline46mondego>        entryPoint = clazz.getMethod(<doubleQuotes46>main<doubleQuotes46>, String[].class);<newline46mondego>    }<newline46mondego><newline46mondego>    public void run(String[] argsToMain) throws<newline46mondego>            IllegalAccessException,<newline46mondego>            IllegalArgumentException,<newline46mondego>            InvocationTargetException {<newline46mondego>        entryPoint.invoke(null, (Object) argsToMain);<newline46mondego>    }<newline46mondego><newline46mondego>    private static String resourceToString(URL url) throws IOException {<newline46mondego>        InputStream contentStream = url.openStream();<newline46mondego>        try {<newline46mondego>            BufferedReader r = new BufferedReader(<newline46mondego>                    new InputStreamReader(contentStream));<newline46mondego>            StringBuilder sb = new StringBuilder();<newline46mondego>            String line = null;<newline46mondego>            do {<newline46mondego>                line = r.readLine();<newline46mondego>                if (line != null) {<newline46mondego>                    sb.append(line).append('\n');<newline46mondego>                }<newline46mondego>            } while (line != null);<newline46mondego>            return sb.toString();<newline46mondego>        } finally {<newline46mondego>            contentStream.close();<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    private static String findMainClassName(String manifest) {<newline46mondego>        Matcher m = MAIN_CLASS_PATTERN.matcher(manifest);<newline46mondego>        if (m.find()) {<newline46mondego>            return m.group(1);<newline46mondego>        }<newline46mondego>        return null;<newline46mondego>    }<newline46mondego><newline46mondego>    private static final Pattern MAIN_CLASS_PATTERN = <newline46mondego>            Pattern.compile(<doubleQuotes46>Main-Class: (.+)<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"5571splitHere46","9545721splitHere46","JarRunner jr = new JarRunner(new File(<doubleQuotes46>path/to/MyJar.jar<doubleQuotes46>));<newline46mondego>jr.run(new String[]{<doubleQuotes46>arg1<doubleQuotes46>, <doubleQuotes46>arg2<doubleQuotes46>});<newline46mondego>"
"5572splitHere46","9545865splitHere46","Throwable.getStackTrace()"
"5573splitHere46","9545865splitHere46","OutOfMemoryError"
"5574splitHere46","9545865splitHere46","OutOfMemoryError"
"5575splitHere46","9545865splitHere46","OutOfMemoryError"
"5576splitHere46","9545865splitHere46","private static void test(OutOfMemoryError o) {<newline46mondego>    try {<newline46mondego>        for (int n = 1; true; n += n) {<newline46mondego>            int[] foo = new int[n];<newline46mondego>        }<newline46mondego>    } catch (OutOfMemoryError e) {<newline46mondego>        System.out.println(<doubleQuotes46>Stack trace length=<doubleQuotes46> + e.getStackTrace().length + <newline46mondego>                           <doubleQuotes46>, object id=<doubleQuotes46> + System.identityHashCode(e));<newline46mondego>        if (e == o)<newline46mondego>            System.out.println(<doubleQuotes46>Got the same OutOfMemoryError twice (abort)<doubleQuotes46>);<newline46mondego>        else<newline46mondego>            test(e);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public static void main (String[] args) {<newline46mondego>    test(null);<newline46mondego>}<newline46mondego>"
"5577splitHere46","9545865splitHere46","Stack trace length=2, object id=1743911840<newline46mondego>Stack trace length=3, object id=2136955031<newline46mondego>Stack trace length=4, object id=903470137<newline46mondego>Stack trace length=5, object id=1607576787<newline46mondego>Stack trace length=0, object id=2103957824 <--- new object cannot be allocated<newline46mondego>Stack trace length=0, object id=2103957824 <--- same object reused<newline46mondego>Got the same OutOfMemoryError twice (abort)<newline46mondego>"
"5578splitHere46","9545890splitHere46","} catch (IOException e) {<newline46mondego>                // TODO Auto-generated catch block<newline46mondego>                e.printStackTrace();<newline46mondego><newline46mondego>}  //<=HERE ADD }<newline46mondego>            finally  {<newline46mondego>"
"5579splitHere46","9545890splitHere46","try{<newline46mondego>}<newline46mondego>catch(...){  // since jdk7 you can put all your exception on one line<newline46mondego>}<newline46mondego>finally{<newline46mondego>}<newline46mondego>"
"5580splitHere46","9545890splitHere46","else {<newline46mondego><newline46mondego>        if (staySignedIn.isChecked()) {<newline46mondego>"
"5581splitHere46","9545890splitHere46","else if (staySignedIn.isChecked()) {<newline46mondego>"
"5582splitHere46","9545938splitHere46","// Enable MongoDB logging in general<newline46mondego>System.setProperty(<doubleQuotes46>DEBUG.MONGO<doubleQuotes46>, <doubleQuotes46>true<doubleQuotes46>);<newline46mondego><newline46mondego>// Enable DB operation tracing<newline46mondego>System.setProperty(<doubleQuotes46>DB.TRACE<doubleQuotes46>, <doubleQuotes46>true<doubleQuotes46>);<newline46mondego>"
"5583splitHere46","9545958splitHere46","public static void main(String[] args) {<newline46mondego>    String s = <doubleQuotes46><pre><font size=\<doubleQuotes46>7\<doubleQuotes46>><strong>Some text here\n\n</strong></font><strong><doubleQuotes46>;<newline46mondego><newline46mondego>    String o = <doubleQuotes46><doubleQuotes46>;<newline46mondego>    boolean append = true;<newline46mondego>    for (int i = 0; i < s.length(); i++) {<newline46mondego>        if (s.charAt(i) == '<')<newline46mondego>            append = false;<newline46mondego><newline46mondego>        if (append)<newline46mondego>            o += s.charAt(i);<newline46mondego><newline46mondego>        if (s.charAt(i) == '>')<newline46mondego>            append = true;<newline46mondego>    }<newline46mondego><newline46mondego>    System.out.println(o);<newline46mondego>}<newline46mondego>"
"5584splitHere46","9546097splitHere46","StringBuilder strBuilder = new StringBuilder();<newline46mondego>strBuilder.append( name );<newline46mondego>strBuilder.append( System.getProperty( <doubleQuotes46>line.separator<doubleQuotes46> ) );<newline46mondego>strBuilder.append( addressLine_1 );<newline46mondego>/* ... */<newline46mondego><newline46mondego>System.out.println( strBuilder.toString() );<newline46mondego>return strBuilder.toString();<newline46mondego>"
"5585splitHere46","9546097splitHere46","StringBuilder"
"5586splitHere46","9546097splitHere46","StringBuffer"
"5587splitHere46","9546097splitHere46","System.getProperty( <doubleQuotes46>line.separator<doubleQuotes46> )"
"5588splitHere46","9546106splitHere46","set()"
"5589splitHere46","9546106splitHere46","_WAKEUP"
"5590splitHere46","9546106splitHere46","BroadcastReceiver"
"5591splitHere46","9546106splitHere46","WakeLock"
"5592splitHere46","9546106splitHere46","WakefulIntentService"
"5593splitHere46","9546106splitHere46","onStart()"
"5594splitHere46","9546106splitHere46","IntentService"
"5595splitHere46","9546186splitHere46","package com.jackcess.lib;<newline46mondego><newline46mondego><newline46mondego>import com.healthmarketscience.jackcess.ColumnBuilder;<newline46mondego>import com.healthmarketscience.jackcess.Database;<newline46mondego>import com.healthmarketscience.jackcess.Table;<newline46mondego>import com.healthmarketscience.jackcess.TableBuilder;<newline46mondego>import java.io.File;<newline46mondego>import java.io.IOException;<newline46mondego>import java.sql.SQLException;<newline46mondego>import java.sql.Types;<newline46mondego><newline46mondego>/**<newline46mondego> *<newline46mondego> * @author sarath_ivan<newline46mondego> */<newline46mondego>public class JackcessLibrary {<newline46mondego><newline46mondego>    private static Database createDatabase(String databaseName) throws IOException {<newline46mondego>        return Database.create(new File(databaseName));<newline46mondego>    }<newline46mondego><newline46mondego>    private static TableBuilder createTable(String tableName) {<newline46mondego>        return new TableBuilder(tableName);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void addColumn(Database database, TableBuilder tableName, String columnName, Types sqlType) throws SQLException, IOException {<newline46mondego>        tableName.addColumn(new ColumnBuilder(columnName).setSQLType(Types.INTEGER).toColumn()).toTable(database);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void startDatabaseProcess() throws IOException, SQLException {<newline46mondego>        String databaseName = <doubleQuotes46>C:/Users/compaq/Desktop/employeedb.mdb<doubleQuotes46>; // Creating an MS Access database<newline46mondego>        Database database = createDatabase(databaseName);<newline46mondego><newline46mondego>        String tableName = <doubleQuotes46>Employee<doubleQuotes46>; // Creating table<newline46mondego>        Table table = createTable(tableName)<newline46mondego>                .addColumn(new ColumnBuilder(<doubleQuotes46>Emp_Id<doubleQuotes46>).setSQLType(Types.INTEGER).toColumn())<newline46mondego>                .addColumn(new ColumnBuilder(<doubleQuotes46>Emp_Name<doubleQuotes46>).setSQLType(Types.VARCHAR).toColumn())<newline46mondego>                .addColumn(new ColumnBuilder(<doubleQuotes46>Emp_Employer<doubleQuotes46>).setSQLType(Types.VARCHAR).toColumn())<newline46mondego>                .toTable(database);<newline46mondego><newline46mondego>        table.addRow(122875, <doubleQuotes46>Sarath Kumar Sivan<doubleQuotes46>,<doubleQuotes46>Infosys Limited.<doubleQuotes46>);//Inserting values into the table<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) throws IOException, SQLException {<newline46mondego>        JackcessLibrary.startDatabaseProcess();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5596splitHere46","9546279splitHere46","getHeight"
"5597splitHere46","9546286splitHere46","extends"
"5598splitHere46","9546540splitHere46","open"
"5599splitHere46","9546540splitHere46","open"
"5600splitHere46","9546540splitHere46","-W"
"5601splitHere46","9546540splitHere46","open"
"5602splitHere46","9546540splitHere46","Process p = runtime.exec(<doubleQuotes46>open -W test.app<doubleQuotes46>);"
"5603splitHere46","9546579splitHere46","new SharedResource"
"5604splitHere46","9546579splitHere46","@Override<newline46mondego>public void run() {<newline46mondego>    SharedResource resource = new SharedResource();<newline46mondego>    resource.access(Thread.currentThread().getName());<newline46mondego><newline46mondego>}<newline46mondego>"
"5605splitHere46","9546579splitHere46","this"
"5606splitHere46","9546579splitHere46","this"
"5607splitHere46","9546579splitHere46","this"
"5608splitHere46","9546579splitHere46","public class SharedAccessThread implements Runnable {<newline46mondego><newline46mondego>    private String name;<newline46mondego>    private static SharedResource resource = new SharedResource();<newline46mondego><newline46mondego>    public SharedAccessThread(String name) {<newline46mondego>            this.name = name ;<newline46mondego>    }<newline46mondego>    @Override<newline46mondego>    public void run() {          <newline46mondego>        resource.access(Thread.currentThread().getName());   <newline46mondego>    }    <newline46mondego>}<newline46mondego>"
"5609splitHere46","9546579splitHere46","SharedResource"
"5610splitHere46","9546692splitHere46","onUpdate()"
"5611splitHere46","9546692splitHere46","ACTION_APPWIDGET_UPDATE"
"5612splitHere46","9546692splitHere46","com.laytproducts.IN.WidgetAct.ACTION_WIDGET_FB"
"5613splitHere46","9546692splitHere46","onUpdate()"
"5614splitHere46","9546692splitHere46","getActivity"
"5615splitHere46","9546692splitHere46","getBroadcast"
"5616splitHere46","9546692splitHere46","PendingIntent fb_pi = PendingIntent.getBroadcast(c,0,fb_intent,0);<newline46mondego>"
"5617splitHere46","9546692splitHere46","onReceive()"
"5618splitHere46","9546692splitHere46","AppWidgetProvider"
"5619splitHere46","9546692splitHere46","BroadcastReceiver"
"5620splitHere46","9546692splitHere46","onReceive()"
"5621splitHere46","9546692splitHere46","onReceive()"
"5622splitHere46","9546692splitHere46","AppWidgetProvider"
"5623splitHere46","9546692splitHere46","onUpdate()"
"5624splitHere46","9546692splitHere46","onUpdate()"
"5625splitHere46","9546692splitHere46","@Override<newline46mondego>public void onReceive(Context context, Intent intent) {<newline46mondego>    super.onReceive(context, intent);<newline46mondego>    String action = intent.getAction();<newline46mondego><newline46mondego>    if (action.equals(<doubleQuotes46>com.laytproducts.IN.WidgetAct.ACTION_WIDGET_FB<doubleQuotes46>)) {<newline46mondego>           //handle your click event here<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>}<newline46mondego>"
"5626splitHere46","9546696splitHere46","Thread t = new Thread(){<newline46mondego>public void run()<newline46mondego>{<newline46mondego>    for(;;)<newline46mondego>    {<newline46mondego>        String s = null;<newline46mondego>    try <newline46mondego>        {<newline46mondego>        s = dis.readUTF();<newline46mondego>    } <newline46mondego>        catch (IOException e) <newline46mondego>        {<newline46mondego>        e.printStackTrace();<newline46mondego>        }<newline46mondego>        while(s!=null)<newline46mondego>        {<newline46mondego>            System.out.println(<doubleQuotes46>Output: <doubleQuotes46> + s);<newline46mondego>        try <newline46mondego>        {<newline46mondego>        s = dis.readUTF();<newline46mondego>    } <newline46mondego>        catch (IOException e) <newline46mondego>        {<newline46mondego>        e.printStackTrace();<newline46mondego>    }<newline46mondego>    }}}};<newline46mondego>   t.start();<newline46mondego>"
"5627splitHere46","9546781splitHere46","ServletContext.setAttribute()"
"5628splitHere46","9546781splitHere46","ArrayBlockingQueue"
"5629splitHere46","9546781splitHere46","ServletContextListener"
"5630splitHere46","9546781splitHere46","contextInitialized()"
"5631splitHere46","9546781splitHere46","contextDestroyed"
"5632splitHere46","9546781splitHere46","@Scheduled"
"5633splitHere46","9546781splitHere46","TimerService"
"5634splitHere46","9546781splitHere46","@Schedule"
"5635splitHere46","9546781splitHere46","Timer"
"5636splitHere46","9547025splitHere46","float[] matAmbient={1,1,1,1};<newline46mondego>FloatBuffer matAmbientB = BufferUtils.createFloatBuffer(4);<newline46mondego>matAmbientB.put(matAmbient);<newline46mondego>matAmbientB.flip();<newline46mondego>"
"5637splitHere46","9547065splitHere46","Set<String> statesAsSet = new HashSet<String>();<newline46mondego> for (Person p : persons) {<newline46mondego>     statesAsSet.add(p.getState());<newline46mondego> }<newline46mondego><newline46mondego> // if yo want a list:<newline46mondego> List<String> statesAsList = new ArrayList<String>(statesAsSet);<newline46mondego> // if you want an array:<newline46mondego> String[] statesAsArray = statesAsSet.toArray(new String[statesAsSet.size()]);<newline46mondego>"
"5638splitHere46","9547264splitHere46","public class test extends Structure {<newline46mondego>  String ptr;<newline46mondego>}<newline46mondego>"
"5639splitHere46","9547264splitHere46","char*"
"5640splitHere46","9547264splitHere46","struct"
"5641splitHere46","9547294splitHere46","import ...<newline46mondego>public class MyMIDlet extends MIDlet{<newline46mondego>    ...<newline46mondego>    final Canvas1 c1;<newline46mondego>    final Canvas2 c2;<newline46mondego>    ...<newline46mondego>    public MyMIDlet(){<newline46mondego>        c1 = new Canvas1(this);<newline46mondego>        c2 = new Canvas2(this);<newline46mondego>    }<newline46mondego>    ...<newline46mondego>}<newline46mondego><newline46mondego>import ...<newline46mondego>public class Canvas1 extends Canvas implements CommandListener{<newline46mondego>    MyMIDlet myMidlet;<newline46mondego>    Display disp;<newline46mondego>    Command switchDisp;<newline46mondego>    ...<newline46mondego>    /**<newline46mondego>    *constructor<newline46mondego>    */<newline46mondego>    public Canvas1(MyMIDlet myMidlet){<newline46mondego>        this.MyMIDlet = myMidlet;<newline46mondego>        disp = myMidlet.getDisplay();<newline46mondego>        switchDisp = new Command(<doubleQuotes46>switch<doubleQuotes46>, Command.SCREEN, 0);<newline46mondego>        this.addCommand(switchDisp);<newline46mondego>        this.setCommandListener(this);<newline46mondego>    }<newline46mondego>    ...<newline46mondego>    public void paint(Graphics g){<newline46mondego>        g.setColor(255,255,255);<newline46mondego>        g.drawString(<doubleQuotes46>canvas1<doubleQuotes46>, 0, 0, 0);<newline46mondego>    }<newline46mondego>    ...<newline46mondego>    public void commandAction(Command cmd, Displayable displayable){<newline46mondego>        disp.setCurrent(myMidlet.c2);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>import ...<newline46mondego>public class Canvas2 extends Canvas implements CommandListener{<newline46mondego>    MyMIDlet myMidlet;<newline46mondego>    Display disp;<newline46mondego>    Command switchDisp;<newline46mondego>    ...<newline46mondego>    /**<newline46mondego>    *constructor<newline46mondego>    */<newline46mondego>    public Canvas1(MyMIDlet myMidlet){<newline46mondego>        this.MyMIDlet = myMidlet;<newline46mondego>        disp = myMidlet.getDisplay();<newline46mondego>        switchDisp = new Command(<doubleQuotes46>switch<doubleQuotes46>, Command.SCREEN, 0);<newline46mondego>        this.addCommand(switchDisp);<newline46mondego>        this.setCommandListener(this);<newline46mondego>    }<newline46mondego>    ...<newline46mondego>    public void paint(Graphics g){<newline46mondego>        g.setColor(255,255,255);<newline46mondego>        g.drawString(<doubleQuotes46>canvas2<doubleQuotes46>, 0, 0, 0);<newline46mondego>    }<newline46mondego>    ...<newline46mondego>    public void commandAction(Command cmd, Displayable displayable){<newline46mondego>        disp.setCurrent(myMidlet.c1);<newline46mondego>    }<newline46mondego>}   <newline46mondego>"
"5642splitHere46","9547300splitHere46","Timer.cancel()"
"5643splitHere46","9547300splitHere46","Timer.scheduleAtFixedRate()"
"5644splitHere46","9547300splitHere46","Timer"
"5645splitHere46","9547300splitHere46","private void StartServUpdateTask() {<newline46mondego><newline46mondego>    if(ServUpdTimer != null)<newline46mondego>    {<newline46mondego>        ServUpdTimer.cancel();<newline46mondego>    }<newline46mondego>    ServUpdTimer = new Timer();<newline46mondego><newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"5646splitHere46","9547393splitHere46","for(int i=0;i<customerList.length;i++)<newline46mondego>{   <newline46mondego>    String line1 = scan1.nextLine();<newline46mondego>    Scanner scan2 = new Scanner(line1);<newline46mondego>    scan2.useDelimiter(<doubleQuotes46>\t<doubleQuotes46>);<newline46mondego><newline46mondego>    // ... a bunch of code deleted for brevity's sake<newline46mondego>    // ... etc...<newline46mondego><newline46mondego>    scan2.close();<newline46mondego>} // end of for loop<newline46mondego>"
"5647splitHere46","9547524splitHere46","public class Edge<newline46mondego>{<newline46mondego><newline46mondego>   public Edge(Node start, Node end, decimal weight)<newline46mondego>   {<newline46mondego>      StartNode = ...,...,...<newline46mondego>   }<newline46mondego>   public Node StartNode;<newline46mondego>   public Node EndNode;<newline46mondego>   public decimal weight;<newline46mondego>   public bool IsDirected;<newline46mondego>}<newline46mondego><newline46mondego>public class Node<newline46mondego>{<newline46mondego>   public Node(int index)<newline46mondego>   {<newline46mondego>        this.Index = index;<newline46mondego>   }<newline46mondego>   public int Index;<newline46mondego>   public List<Edge> Edges = new List<Edge>();<newline46mondego>   public bool Visited = false;<newline46mondego>}<newline46mondego>"
"5648splitHere46","9547524splitHere46","public class Graph<newline46mondego>{<newline46mondego>   public List<Node> Nodes = new List<Node>();<newline46mondego>}<newline46mondego>"
"5649splitHere46","9547530splitHere46","persistence.jar<newline46mondego> toplink-essentials.jar<newline46mondego> ejb3-persistence-1.0.1.GA.jar<newline46mondego> ejb3-persistence-1.0.2.GA.jar<newline46mondego> ejb3-persistence-3.3.2.Beta1.jar<newline46mondego> geronimo-jpa_1.0_spec-1.1.2.jar<newline46mondego> geronimo-jpa_3.0_spec-1.0.jar<newline46mondego> geronimo-jpa_3.0_spec-1.1.1.jar<newline46mondego> geronimo-jpa_3.0_spec-1.1.jar<newline46mondego> persistence-api-1.0.jar<newline46mondego> geronimo-jpa_2.0_spec-1.0-PFD2.jar<newline46mondego> geronimo-jpa_3.0_spec-1.0-M1.jar<newline46mondego> glassfish-persistence-api-b32g.jar<newline46mondego> javaee-api-5.0-1.jar<newline46mondego> javaee-api-5.0-2.jar<newline46mondego> openjpa-all-2.0.0-M3.jar<newline46mondego> openejb-itests-standalone-client-3.0.1.jar<newline46mondego> openejb-itests-standalone-client-3.0.jar<newline46mondego> openejb-itests-standalone-client-3.1.1.jar<newline46mondego> openejb-itests-standalone-client-3.1.jar<newline46mondego>"
"5650splitHere46","9547589splitHere46","3 moves right: 1500<newline46mondego>1 turn:         100<newline46mondego>4 moves down:  2000<newline46mondego>               ----<newline46mondego>               3600<newline46mondego>"
"5651splitHere46","9547645splitHere46","package utils;<newline46mondego><newline46mondego>@Retention(RetentionPolicy.RUNTIME)<newline46mondego>@Target(ElementType.METHOD)<newline46mondego>public @interface RequiresSSL {<newline46mondego>}<newline46mondego>"
"5652splitHere46","9547645splitHere46","@With(EnsureSSL.class)<newline46mondego>class CustomerController extends Controller{<newline46mondego>    @RequiresSSL <newline46mondego>    public static void sensitiveMethod1(...){<newline46mondego>        ...<newline46mondego>    }<newline46mondego>    @RequiresSSL <newline46mondego>    public static void sensitiveMethod2(...){<newline46mondego>        ...<newline46mondego>    }<newline46mondego>    public static void freeForAllToSee(...){<newline46mondego>        ...<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5653splitHere46","9547645splitHere46","class EnsureSSL extends Controller {<newline46mondego>    @Before <newline46mondego>    static void verifySSL() { <newline46mondego>        if((!request.secure) <newline46mondego>            && (request.invokedMethod.getAnnotation(RequiresSSL.class) != null)) { <newline46mondego>        redirect(<doubleQuotes46>https://<doubleQuotes46> + request.host + request.url); <newline46mondego>        } <newline46mondego>    } <newline46mondego>}<newline46mondego>"
"5654splitHere46","9547796splitHere46","add these lines..<newline46mondego>session =sessionFactory.openSession();<newline46mondego>Transaction tx = session.beginTransaction(); //new line<newline46mondego>Item item = new Item();<newline46mondego><newline46mondego><newline46mondego><newline46mondego>session.save(item);<newline46mondego> System.out.println(<doubleQuotes46>Done<doubleQuotes46>);<newline46mondego> tx.commit(); //new line<newline46mondego> }catch(Exception e){<newline46mondego>...<newline46mondego>"
"5655splitHere46","9547853splitHere46","clientCommand"
"5656splitHere46","9547853splitHere46","null"
"5657splitHere46","9547853splitHere46","NullPointerException"
"5658splitHere46","9547853splitHere46","quit"
"5659splitHere46","9547853splitHere46","m_bRunThread = false;"
"5660splitHere46","9547853splitHere46","volatile"
"5661splitHere46","9547853splitHere46","volatile boolean m_bRunThread = true;   <newline46mondego>"
"5662splitHere46","9547853splitHere46","clientCommand.trim().equalsIgnoreCase(<doubleQuotes46>quit<doubleQuotes46>)"
"5663splitHere46","9547853splitHere46","while(m_bRunThread) {                    <newline46mondego>       // read incoming stream<newline46mondego>       String clientCommand = in.readLine();    <newline46mondego>       if(clientCommand == null || <doubleQuotes46><doubleQuotes46>.equals(clientCommand.trim()){  <newline46mondego>         bRunThread = false;//here you could also do break and just use a while(true)  <newline46mondego>       }  <newline46mondego>       //go on with the code<newline46mondego>"
"5664splitHere46","9547865splitHere46","InputStream"
"5665splitHere46","9547884splitHere46","java.net.URI"
"5666splitHere46","9547884splitHere46","java.net.URI"
"5667splitHere46","9547884splitHere46","public class IRITest {<newline46mondego>public static void main(String[] args) {<newline46mondego>    IRIFactory factory = IRIFactory.uriImplementation();<newline46mondego>    IRI iri = factory.construct(<doubleQuotes46>http://blah.org/A_%28Secret%29.xml#blah<doubleQuotes46>);<newline46mondego>    ArrayList<String> a = new ArrayList<String>();<newline46mondego>    a.add(iri.getScheme());<newline46mondego>    a.add(iri.getRawUserinfo());<newline46mondego>    a.add(iri.getRawHost());<newline46mondego>    a.add(iri.getRawPath());<newline46mondego>    a.add(iri.getRawQuery());<newline46mondego>    a.add(iri.getRawFragment());<newline46mondego>    IRI iri2 = factory.construct(<doubleQuotes46>http://blah.org/A_(Secret).xml#blah<doubleQuotes46>);<newline46mondego>    ArrayList<String> b = new ArrayList<String>();<newline46mondego>    b.add(iri2.getScheme());<newline46mondego>    b.add(iri2.getRawUserinfo());<newline46mondego>    b.add(iri2.getRawHost());<newline46mondego>    b.add(iri2.getRawPath());<newline46mondego>    b.add(iri2.getRawQuery());<newline46mondego>    b.add(iri2.getRawFragment());<newline46mondego><newline46mondego>    System.out.println(a);<newline46mondego>    //[http, null, blah.org, /A_%28Secret%29.xml, null, blah]<newline46mondego>    System.out.println(b);<newline46mondego>    //[http, null, blah.org, /A_(Secret).xml, null, blah]<newline46mondego>}<newline46mondego>}<newline46mondego>"
"5668splitHere46","9548019splitHere46","monitorenter"
"5669splitHere46","9548019splitHere46","monitorexit"
"5670splitHere46","9548019splitHere46","synchronized"
"5671splitHere46","9548019splitHere46","Exception"
"5672splitHere46","9548019splitHere46","catch(Exception exception)<newline46mondego>{<newline46mondego>    throw exception;<newline46mondego>}<newline46mondego>"
"5673splitHere46","9548099splitHere46","SimpleDateFormat"
"5674splitHere46","9548099splitHere46","SimpleDateFormat format = new SimpleDateFormat(<doubleQuotes46>E MMM dd HH:mm:ss Z yyyy<doubleQuotes46>,<newline46mondego>                                               Locale.US);<newline46mondego><newline46mondego>Date date = format.parse(text);<newline46mondego>long secondsSinceEpoch = date.getTime() / 1000;<newline46mondego>"
"5675splitHere46","9548137splitHere46","catch (Exception e) {<newline46mondego>    e.printStackTrace();<newline46mondego>}<newline46mondego>"
"5676splitHere46","9548137splitHere46","if (response.getStatusLine().getStatusCode() != 200) {<newline46mondego>    Log.d(<doubleQuotes46>MyApp<doubleQuotes46>, <doubleQuotes46>Server encountered an error.);<newline46mondego>}<newline46mondego>"
"5677splitHere46","9548219splitHere46","java.util.Date"
"5678splitHere46","9548219splitHere46","java.sql.Date"
"5679splitHere46","9548302splitHere46","public class CircleWithNumberInside extends JComponent {<newline46mondego>    @Override<newline46mondego>    protected void paintComponent(Graphics g) {<newline46mondego>        // TODO draw a circle, and draw a number inside it.<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5680splitHere46","9548382splitHere46","equals()"
"5681splitHere46","9548382splitHere46","operator=="
"5682splitHere46","9548382splitHere46","operator=="
"5683splitHere46","9548382splitHere46","equals()"
"5684splitHere46","9548382splitHere46","if (my_array[i]==<doubleQuotes46>m<doubleQuotes46>)<newline46mondego>"
"5685splitHere46","9548382splitHere46","if (<doubleQuotes46>m<doubleQuotes46>.equals(my_array[i]))<newline46mondego>"
"5686splitHere46","9548382splitHere46","my_array[1]"
"5687splitHere46","9548382splitHere46","i = 0"
"5688splitHere46","9548382splitHere46","i = 1"
"5689splitHere46","9548424splitHere46","Map<Long, Customer> customersById = new HashMap<Long, Customer>();<newline46mondego>...<newline46mondego>public Invoice mapRow(ResultSet rs, int rowNum) throws SQLException {<newline46mondego>    Invoice invoice = ...<newline46mondego>    // populate invoice fields<newline46mondego>    Long customerId = rs.getLong(<doubleQuotes46>customerId<doubleQuotes46>);<newline46mondego>    Customer c = customersById.get(customerId);<newline46mondego>    if (c == null) {<newline46mondego>        // first time we meet this customer<newline46mondego>        c = ...<newline46mondego>        // populate customer fields from result set<newline46mondego>        customersById.put(customerId, c);<newline46mondego>    }<newline46mondego>    invoice.setCustomer(c);<newline46mondego>}<newline46mondego>"
"5690splitHere46","9548429splitHere46","public class Server {<newline46mondego><newline46mondego>/**<newline46mondego> * @param args the command line arguments<newline46mondego> */<newline46mondego>public static void main(String[] args) throws IOException {<newline46mondego>    ServerSocket serverSocket = null;<newline46mondego><newline46mondego>    try {<newline46mondego>        serverSocket = new ServerSocket(4444);<newline46mondego>    } catch (IOException ex) {<newline46mondego>        System.out.println(<doubleQuotes46>Can't setup server on this port number. <doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    Socket socket = null;<newline46mondego>    InputStream is = null;<newline46mondego>    FileOutputStream fos = null;<newline46mondego>    BufferedOutputStream bos = null;<newline46mondego>    int bufferSize = 0;<newline46mondego><newline46mondego>    try {<newline46mondego>        socket = serverSocket.accept();<newline46mondego>    } catch (IOException ex) {<newline46mondego>        System.out.println(<doubleQuotes46>Can't accept client connection. <doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    try {<newline46mondego>        is = socket.getInputStream();<newline46mondego><newline46mondego>        bufferSize = socket.getReceiveBufferSize();<newline46mondego>        System.out.println(<doubleQuotes46>Buffer size: <doubleQuotes46> + bufferSize);<newline46mondego>    } catch (IOException ex) {<newline46mondego>        System.out.println(<doubleQuotes46>Can't get socket input stream. <doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    try {<newline46mondego>        fos = new FileOutputStream(<doubleQuotes46>M:\\test2.xml<doubleQuotes46>);<newline46mondego>        bos = new BufferedOutputStream(fos);<newline46mondego><newline46mondego>    } catch (FileNotFoundException ex) {<newline46mondego>        System.out.println(<doubleQuotes46>File not found. <doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    byte[] bytes = new byte[bufferSize];<newline46mondego><newline46mondego>    int count;<newline46mondego><newline46mondego>    while ((count = is.read(bytes)) > 0) {<newline46mondego>        bos.write(bytes, 0, count);<newline46mondego>    }<newline46mondego><newline46mondego>    bos.flush();<newline46mondego>    bos.close();<newline46mondego>    is.close();<newline46mondego>    socket.close();<newline46mondego>    serverSocket.close();<newline46mondego>}<newline46mondego>"
"5691splitHere46","9548429splitHere46","public class Client {<newline46mondego><newline46mondego>/**<newline46mondego> * @param args the command line arguments<newline46mondego> */<newline46mondego>public static void main(String[] args) throws IOException {<newline46mondego>    Socket socket = null;<newline46mondego>    String host = <doubleQuotes46>127.0.0.1<doubleQuotes46>;<newline46mondego><newline46mondego>    socket = new Socket(host, 4444);<newline46mondego><newline46mondego>    File file = new File(<doubleQuotes46>M:\\test.xml<doubleQuotes46>);<newline46mondego>    // Get the size of the file<newline46mondego>    long length = file.length();<newline46mondego>    if (length > Integer.MAX_VALUE) {<newline46mondego>        System.out.println(<doubleQuotes46>File is too large.<doubleQuotes46>);<newline46mondego>    }<newline46mondego>    byte[] bytes = new byte[(int) length];<newline46mondego>    FileInputStream fis = new FileInputStream(file);<newline46mondego>    BufferedInputStream bis = new BufferedInputStream(fis);<newline46mondego>    BufferedOutputStream out = new BufferedOutputStream(socket.getOutputStream());<newline46mondego><newline46mondego>    int count;<newline46mondego><newline46mondego>    while ((count = bis.read(bytes)) > 0) {<newline46mondego>        out.write(bytes, 0, count);<newline46mondego>    }<newline46mondego><newline46mondego>    out.flush();<newline46mondego>    out.close();<newline46mondego>    fis.close();<newline46mondego>    bis.close();<newline46mondego>    socket.close();<newline46mondego><newline46mondego>}<newline46mondego>"
"5692splitHere46","9548438splitHere46","public class MyResultSet implements ResultSet {<newline46mondego><newline46mondego>    public ResultSet(List<MyClass> list) {<newline46mondego>        // ...<newline46mondego>    }<newline46mondego><newline46mondego>    // Interface implementation. For example, the <doubleQuotes46>next()<doubleQuotes46> method can be implemented<newline46mondego>    // using your list iterator.<newline46mondego>}<newline46mondego>"
"5693splitHere46","9548445splitHere46","while ((text = input.readLine()) != null) {<newline46mondego>    stringBuilder.appendText(text)<newline46mondego>    ...<newline46mondego>"
"5694splitHere46","9548591splitHere46","String s = new String(cipherData, <doubleQuotes46>UTF-16LE<doubleQuotes46>);<newline46mondego>"
"5695splitHere46","9548591splitHere46","byte[]"
"5696splitHere46","9548616splitHere46","this.start();<newline46mondego>"
"5697splitHere46","9548699splitHere46","<?php<newline46mondego>    $obj = new Java(<doubleQuotes46>com.test.Test<doubleQuotes46>);<newline46mondego> ?><newline46mondego>"
"5698splitHere46","9548724splitHere46","public static File[] getDirectoryList(File file) {<newline46mondego>    File[] files = file.listFiles(new FileFilter() {<newline46mondego>        public boolean accept(File file) {<newline46mondego>            return file.isDirectory();<newline46mondego>        }<newline46mondego>    });<newline46mondego>    return files;<newline46mondego>}<newline46mondego>"
"5699splitHere46","9548818splitHere46","<>"
"5700splitHere46","9548902splitHere46","void Expr():<newline46mondego>{}<newline46mondego>{<newline46mondego>LOOKAHEAD(Call())<newline46mondego>Call () | Var()<newline46mondego>}<newline46mondego>"
"5701splitHere46","9548972splitHere46","// calculate posx and posy, ensuring they lie within 0-2999:<newline46mondego>int posx = (3000+((int)(Player.x / 20))%3000)%3000;<newline46mondego>int posy = (3000+((int)(Player.y / 20))%3000)%3000;<newline46mondego><newline46mondego>// test for overflow:<newline46mondego>boolean xOverflow = (posx+screenWidth > 3000);<newline46mondego>boolean yOverflow = (posy+screenHeight > 3000);<newline46mondego><newline46mondego>// draw the image:<newline46mondego>drawMyImage(posx,posy);<newline46mondego>// if necessary, draw displaced copies:<newline46mondego>if(xOverflow) drawMyImage(posx-3000,posy);<newline46mondego>if(yOverflow) drawMyImage(posx,posy-3000);<newline46mondego>if(xOverflow && yOverflow) drawMyImage(posx-3000,posy-3000);<newline46mondego><newline46mondego>...<newline46mondego><newline46mondego>private static void drawMyImage(int x, int y){<newline46mondego>    int dx1 = Math.max(-x,0);<newline46mondego>    int dy1 = Math.max(-y,0);<newline46mondego>    int dx2 = Math.min(3000-x,screenWidth);<newline46mondego>    int dy2 = Math.min(3000-y,screenHeight);<newline46mondego>    int sx1 = Math.max(x,0);<newline46mondego>    int sy1 = Math.max(y,0);<newline46mondego>    int sx2 = Math.min(x+screenWidth,3000);<newline46mondego>    int sy2 = Math.min(y+screenHeight,3000);<newline46mondego>    g.drawImage(SpaceBGLayer0, dx1, dy1, dx2, dy2, sx1, sy1, sx2, sy2, null, null);<newline46mondego>}<newline46mondego>"
"5702splitHere46","9548972splitHere46","3000"
"5703splitHere46","9548984splitHere46","Composite"
"5704splitHere46","9548984splitHere46","Shell"
"5705splitHere46","9549009splitHere46","/**<newline46mondego> * Copied shamelessly from org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator,<newline46mondego> * changed only the hash algorithm.<newline46mondego> * All rights reserved by Bouncy Castle, see their MIT-like permissive license.<newline46mondego> * @author maartenb<newline46mondego> *<newline46mondego> */<newline46mondego>public class PKCS5S2_SHA256_ParametersGenerator<newline46mondego>    extends PBEParametersGenerator<newline46mondego>{<newline46mondego><newline46mondego>    // NOTE this is the only actual change from PKCS5S2ParametersGenerator<newline46mondego>    private Mac    hMac = new HMac(new SHA256Digest());<newline46mondego><newline46mondego>    /**<newline46mondego>     * construct a PKCS5 Scheme 2 Parameters generator.<newline46mondego>     */<newline46mondego>    public PKCS5S2_SHA256_ParametersGenerator()<newline46mondego>    {<newline46mondego>    }<newline46mondego><newline46mondego>    private void F(<newline46mondego>        byte[]  P,<newline46mondego>        byte[]  S,<newline46mondego>        int     c,<newline46mondego>        byte[]  iBuf,<newline46mondego>        byte[]  out,<newline46mondego>        int     outOff)<newline46mondego>    {<newline46mondego>        byte[]              state = new byte[hMac.getMacSize()];<newline46mondego>        CipherParameters    param = new KeyParameter(P);<newline46mondego><newline46mondego>        hMac.init(param);<newline46mondego><newline46mondego>        if (S != null)<newline46mondego>        {<newline46mondego>            hMac.update(S, 0, S.length);<newline46mondego>        }<newline46mondego><newline46mondego>        hMac.update(iBuf, 0, iBuf.length);<newline46mondego><newline46mondego>        hMac.doFinal(state, 0);<newline46mondego><newline46mondego>        System.arraycopy(state, 0, out, outOff, state.length);<newline46mondego><newline46mondego>        if (c == 0)<newline46mondego>        {<newline46mondego>            throw new IllegalArgumentException(<doubleQuotes46>iteration count must be at least 1.<doubleQuotes46>);<newline46mondego>        }<newline46mondego><newline46mondego>        for (int count = 1; count < c; count++)<newline46mondego>        {<newline46mondego>            hMac.init(param);<newline46mondego>            hMac.update(state, 0, state.length);<newline46mondego>            hMac.doFinal(state, 0);<newline46mondego><newline46mondego>            for (int j = 0; j != state.length; j++)<newline46mondego>            {<newline46mondego>                out[outOff + j] ^= state[j];<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>    private void intToOctet(<newline46mondego>        byte[]  buf,<newline46mondego>        int     i)<newline46mondego>    {<newline46mondego>        buf[0] = (byte)(i >>> 24);<newline46mondego>        buf[1] = (byte)(i >>> 16);<newline46mondego>        buf[2] = (byte)(i >>> 8);<newline46mondego>        buf[3] = (byte)i;<newline46mondego>    }<newline46mondego><newline46mondego>    private byte[] generateDerivedKey(<newline46mondego>        int dkLen)<newline46mondego>    {<newline46mondego>        int     hLen = hMac.getMacSize();<newline46mondego>        int     l = (dkLen + hLen - 1) / hLen;<newline46mondego>        byte[]  iBuf = new byte[4];<newline46mondego>        byte[]  out = new byte[l * hLen];<newline46mondego><newline46mondego>        for (int i = 1; i <= l; i++)<newline46mondego>        {<newline46mondego>            intToOctet(iBuf, i);<newline46mondego><newline46mondego>            F(password, salt, iterationCount, iBuf, out, (i - 1) * hLen);<newline46mondego>        }<newline46mondego><newline46mondego>        return out;<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * Generate a key parameter derived from the password, salt, and iteration<newline46mondego>     * count we are currently initialised with.<newline46mondego>     *<newline46mondego>     * @param keySize the size of the key we want (in bits)<newline46mondego>     * @return a KeyParameter object.<newline46mondego>     */<newline46mondego>    public CipherParameters generateDerivedParameters(<newline46mondego>        int keySize)<newline46mondego>    {<newline46mondego>        keySize = keySize / 8;<newline46mondego><newline46mondego>        byte[]  dKey = generateDerivedKey(keySize);<newline46mondego><newline46mondego>        return new KeyParameter(dKey, 0, keySize);<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * Generate a key with initialisation vector parameter derived from<newline46mondego>     * the password, salt, and iteration count we are currently initialised<newline46mondego>     * with.<newline46mondego>     *<newline46mondego>     * @param keySize the size of the key we want (in bits)<newline46mondego>     * @param ivSize the size of the iv we want (in bits)<newline46mondego>     * @return a ParametersWithIV object.<newline46mondego>     */<newline46mondego>    public CipherParameters generateDerivedParameters(<newline46mondego>        int     keySize,<newline46mondego>        int     ivSize)<newline46mondego>    {<newline46mondego>        keySize = keySize / 8;<newline46mondego>        ivSize = ivSize / 8;<newline46mondego><newline46mondego>        byte[]  dKey = generateDerivedKey(keySize + ivSize);<newline46mondego><newline46mondego>        return new ParametersWithIV(new KeyParameter(dKey, 0, keySize), dKey, keySize, ivSize);<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * Generate a key parameter for use with a MAC derived from the password,<newline46mondego>     * salt, and iteration count we are currently initialised with.<newline46mondego>     *<newline46mondego>     * @param keySize the size of the key we want (in bits)<newline46mondego>     * @return a KeyParameter object.<newline46mondego>     */<newline46mondego>    public CipherParameters generateDerivedMacParameters(<newline46mondego>        int keySize)<newline46mondego>    {<newline46mondego>        return generateDerivedParameters(keySize);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5706splitHere46","9549009splitHere46","import org.bouncycastle.crypto.CipherParameters;<newline46mondego>import org.bouncycastle.crypto.Mac;<newline46mondego>import org.bouncycastle.crypto.PBEParametersGenerator;<newline46mondego>import org.bouncycastle.crypto.digests.SHA256Digest;<newline46mondego>import org.bouncycastle.crypto.macs.HMac;<newline46mondego>import org.bouncycastle.crypto.params.KeyParameter;<newline46mondego>import org.bouncycastle.crypto.params.ParametersWithIV;<newline46mondego>"
"5707splitHere46","9549009splitHere46","int iterations = 1000; // minimum<newline46mondego>        int keySize = 256; // maximum<newline46mondego>        final byte[] salt = new byte[8];<newline46mondego>        SecureRandom rng = SecureRandom.getInstance(<doubleQuotes46>SHA1PRNG<doubleQuotes46>);<newline46mondego>        rng.nextBytes(salt);<newline46mondego>        char[] password = new char[] { 'o', 'w', 'l', 's', 't', 'e', 'a', 'd' };<newline46mondego><newline46mondego>        // S2 *is* PBKDF2, but the default used only HMAC(SHA-1)<newline46mondego>        final PKCS5S2_SHA256_ParametersGenerator gen = new PKCS5S2_SHA256_ParametersGenerator();<newline46mondego><newline46mondego>        // lets not use String, as we cannot destroy strings, BC to the rescue!<newline46mondego>        final byte[] pwBytes = Strings.toUTF8ByteArray(password);<newline46mondego><newline46mondego>        gen.init(pwBytes, salt, iterations);<newline46mondego><newline46mondego>        final KeyParameter params1 = (KeyParameter) gen.generateDerivedMacParameters(keySize);<newline46mondego><newline46mondego>        // use for/next loop for older Java versions, destroy password information in memory<newline46mondego>        Arrays.fill(pwBytes, 0, pwBytes.length, (byte) 0);<newline46mondego>        Arrays.fill(password, 0, password.length, ' ');<newline46mondego>        final KeyParameter keyParam = params1;<newline46mondego>        SecretKeySpec secretKey = new SecretKeySpec(keyParam.getKey().clone(), <doubleQuotes46>AES<doubleQuotes46>);<newline46mondego>"
"5708splitHere46","9549180splitHere46","@Path(<doubleQuotes46>/something<doubleQuotes46>)<newline46mondego>public class MyApp {<newline46mondego>    @GET<newline46mondego>    @Path(<doubleQuotes46>/runApp<doubleQuotes46>)<newline46mondego>    public Response runApp() {<newline46mondego>        return Response.ok(<doubleQuotes46>Running app<doubleQuotes46>).build();<newline46mondego>    }<newline46mondego><newline46mondego>    @GET<newline46mondego>    @Path(<doubleQuotes46>/stopApp<doubleQuotes46>)<newline46mondego>    public Response stopApp() {<newline46mondego>        return Response.ok(<doubleQuotes46>Stopping app<doubleQuotes46>).build();<newline46mondego>    }<newline46mondego><newline46mondego>    @GET<newline46mondego>    @Path(<doubleQuotes46>/doSomethingElse<doubleQuotes46>) {<newline46mondego>        return Response.ok(<doubleQuotes46>Doing something else<doubleQuotes46>).build();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5709splitHere46","9549180splitHere46","localhost:8080"
"5710splitHere46","9549258splitHere46","import java.awt.GridBagConstraints;<newline46mondego>import java.awt.GridBagLayout;<newline46mondego>import java.awt.GridLayout;<newline46mondego>import java.awt.Insets;<newline46mondego>import java.awt.Window;<newline46mondego>import java.awt.event.ActionEvent;<newline46mondego>import java.awt.event.KeyEvent;<newline46mondego><newline46mondego>import javax.swing.*;<newline46mondego><newline46mondego>public class DependInjectEg {<newline46mondego>   private static void createAndShowGui() {<newline46mondego>      Player[] players = {<newline46mondego>            new Player(<doubleQuotes46>John Smith<doubleQuotes46>, 10, 5),<newline46mondego>            new Player(<doubleQuotes46>Donald Duck<doubleQuotes46>, 8, 3),<newline46mondego>            new Player(<doubleQuotes46>Doris Day<doubleQuotes46>, 5, 2),<newline46mondego>            new Player(<doubleQuotes46>Bill Jones<doubleQuotes46>, 4, 6),<newline46mondego>            new Player(<doubleQuotes46>Frank Stein<doubleQuotes46>, 1, 1),<newline46mondego>      };<newline46mondego><newline46mondego>      PlayerStats mainPanel = new PlayerStats();<newline46mondego>      for (Player player : players) {<newline46mondego>         mainPanel.addPlayer(player);<newline46mondego>      }<newline46mondego><newline46mondego>      JFrame frame = new JFrame(<doubleQuotes46>Dependency Injection Example<doubleQuotes46>);<newline46mondego>      frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>      frame.getContentPane().add(mainPanel);<newline46mondego>      frame.pack();<newline46mondego>      frame.setLocationByPlatform(true);<newline46mondego>      frame.setVisible(true);<newline46mondego>   }<newline46mondego><newline46mondego>   public static void main(String[] args) {<newline46mondego>      SwingUtilities.invokeLater(new Runnable() {<newline46mondego>         public void run() {<newline46mondego>            createAndShowGui();<newline46mondego>         }<newline46mondego>      });<newline46mondego>   }<newline46mondego>}<newline46mondego><newline46mondego>class Player {<newline46mondego>   private String name;<newline46mondego>   private int speed;<newline46mondego>   private int strength;<newline46mondego><newline46mondego>   // default constructor<newline46mondego>   public Player() {<newline46mondego>   }<newline46mondego><newline46mondego>   public Player(String name, int speed, int strength) {<newline46mondego>      this.name = name;<newline46mondego>      this.speed = speed;<newline46mondego>      this.strength = strength;<newline46mondego>   }<newline46mondego><newline46mondego>   public int getStrength() {<newline46mondego>      return strength;<newline46mondego>   }<newline46mondego><newline46mondego>   public void setStrength(int strength) {<newline46mondego>      this.strength = strength;<newline46mondego>   }<newline46mondego><newline46mondego>   public String getName() {<newline46mondego>      return name;<newline46mondego>   }<newline46mondego><newline46mondego>   public void setName(String name) {<newline46mondego>      this.name = name;<newline46mondego>   }<newline46mondego><newline46mondego>   public int getSpeed() {<newline46mondego>      return speed;<newline46mondego>   }<newline46mondego><newline46mondego>   public void setSpeed(int speed) {<newline46mondego>      this.speed = speed;<newline46mondego>   }<newline46mondego><newline46mondego>   @Override<newline46mondego>   public String toString() {<newline46mondego>      StringBuffer sb = new StringBuffer();<newline46mondego>      sb.append(<doubleQuotes46>Name: <doubleQuotes46> + name + <doubleQuotes46>, <doubleQuotes46>);<newline46mondego>      sb.append(<doubleQuotes46>Speed: <doubleQuotes46> + speed + <doubleQuotes46>, <doubleQuotes46>);<newline46mondego>      sb.append(<doubleQuotes46>Strength: <doubleQuotes46> + strength);<newline46mondego><newline46mondego>      return sb.toString();<newline46mondego>   }<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>@SuppressWarnings(<doubleQuotes46>serial<doubleQuotes46>)<newline46mondego>class PlayerStats extends JPanel {<newline46mondego>   private DefaultListModel playerListModel = new DefaultListModel();<newline46mondego>   private JList playerList = new JList(playerListModel);<newline46mondego><newline46mondego>   public PlayerStats() {<newline46mondego>      JPanel btnPanel = new JPanel(new GridLayout(1, 0, 5, 0));<newline46mondego>      btnPanel.add(new JButton(new NewPlayerAction()));<newline46mondego>      btnPanel.add(new JButton(new EditPlayerAction()));<newline46mondego>      btnPanel.add(new JButton(new ExitAction()));<newline46mondego><newline46mondego>      setLayout(new BoxLayout(this, BoxLayout.PAGE_AXIS));<newline46mondego>      setBorder(BorderFactory.createCompoundBorder(<newline46mondego>            BorderFactory.createTitledBorder(<doubleQuotes46>Player Stats<doubleQuotes46>),<newline46mondego>            BorderFactory.createEmptyBorder(5, 5, 5, 5)));<newline46mondego>      add(new JScrollPane(playerList));<newline46mondego>      add(Box.createVerticalStrut(5));<newline46mondego>      add(btnPanel);<newline46mondego><newline46mondego>   }<newline46mondego><newline46mondego>   public void addPlayer(Player player) {<newline46mondego>      playerListModel.addElement(player);<newline46mondego>   }<newline46mondego><newline46mondego>   private class NewPlayerAction extends AbstractAction {<newline46mondego>      public NewPlayerAction() {<newline46mondego>         super(<doubleQuotes46>New Player<doubleQuotes46>);<newline46mondego>         putValue(MNEMONIC_KEY, KeyEvent.VK_N);<newline46mondego>      }<newline46mondego><newline46mondego>      public void actionPerformed(ActionEvent evt) {<newline46mondego>         PlayerEditorPanel editorPanel = new PlayerEditorPanel();<newline46mondego>         int result = JOptionPane.showConfirmDialog(PlayerStats.this,<newline46mondego>               editorPanel, <doubleQuotes46>Create Player<doubleQuotes46>, JOptionPane.OK_CANCEL_OPTION,<newline46mondego>               JOptionPane.PLAIN_MESSAGE);<newline46mondego>         if (result == JOptionPane.OK_OPTION) {<newline46mondego>            Player player = editorPanel.getNewPlayer();<newline46mondego>            playerListModel.addElement(player);<newline46mondego>         }<newline46mondego>      };<newline46mondego>   }<newline46mondego><newline46mondego>   private class EditPlayerAction extends AbstractAction {<newline46mondego>      public EditPlayerAction() {<newline46mondego>         super(<doubleQuotes46>Edit Player<doubleQuotes46>);<newline46mondego>         putValue(MNEMONIC_KEY, KeyEvent.VK_E);<newline46mondego>      }<newline46mondego><newline46mondego>      public void actionPerformed(ActionEvent evt) {<newline46mondego>         Player player = (Player) playerList.getSelectedValue();<newline46mondego>         if (player == null) {<newline46mondego>            return; // do nothing if no player selected<newline46mondego>         }<newline46mondego>         PlayerEditorPanel editorPanel = new PlayerEditorPanel();<newline46mondego>         editorPanel.setPlayer(player);<newline46mondego><newline46mondego>         int result = JOptionPane.showConfirmDialog(PlayerStats.this,<newline46mondego>               editorPanel, <doubleQuotes46>Edit Player<doubleQuotes46>, JOptionPane.OK_CANCEL_OPTION,<newline46mondego>               JOptionPane.PLAIN_MESSAGE);<newline46mondego>         if (result == JOptionPane.OK_OPTION) {<newline46mondego>            editorPanel.upDatePlayerAttributes();<newline46mondego>            playerList.repaint();<newline46mondego>         }<newline46mondego>      }<newline46mondego>   }<newline46mondego><newline46mondego>   private class ExitAction extends AbstractAction {<newline46mondego>      public ExitAction() {<newline46mondego>         super(<doubleQuotes46>Exit<doubleQuotes46>);<newline46mondego>         putValue(MNEMONIC_KEY, KeyEvent.VK_X);<newline46mondego>      }<newline46mondego><newline46mondego>      public void actionPerformed(ActionEvent e) {<newline46mondego>         Window win = SwingUtilities.getWindowAncestor(PlayerStats.this);<newline46mondego>         win.dispose();<newline46mondego>      }<newline46mondego><newline46mondego>   }<newline46mondego>}<newline46mondego><newline46mondego>@SuppressWarnings(<doubleQuotes46>serial<doubleQuotes46>)<newline46mondego>class PlayerEditorPanel extends JPanel {<newline46mondego>   public static final String[] FIELD_TITLES = { <doubleQuotes46>Name<doubleQuotes46>, <doubleQuotes46>Speed<doubleQuotes46>, <doubleQuotes46>Strength<doubleQuotes46> };<newline46mondego>   private static final Insets WEST_INSETS = new Insets(5, 0, 5, 5);<newline46mondego>   private static final Insets EAST_INSETS = new Insets(5, 5, 5, 0);<newline46mondego>   private JTextField nameField = new JTextField(10);<newline46mondego>   private JTextField speedField = new JTextField(10);<newline46mondego>   private JTextField strengthField = new JTextField(10);<newline46mondego>   private JTextField[] fields = { nameField, speedField, strengthField };<newline46mondego>   private Player player;<newline46mondego><newline46mondego>   public PlayerEditorPanel() {<newline46mondego>      setLayout(new GridBagLayout());<newline46mondego>      setBorder(BorderFactory.createCompoundBorder(<newline46mondego>            BorderFactory.createTitledBorder(<doubleQuotes46>Player Editor<doubleQuotes46>),<newline46mondego>            BorderFactory.createEmptyBorder(5, 5, 5, 5)));<newline46mondego>      GridBagConstraints gbc;<newline46mondego>      for (int i = 0; i < FIELD_TITLES.length; i++) {<newline46mondego>         gbc = createGbc(0, i);<newline46mondego>         add(new JLabel(FIELD_TITLES[i] + <doubleQuotes46>:<doubleQuotes46>, JLabel.LEFT), gbc);<newline46mondego>         gbc = createGbc(1, i);<newline46mondego>         add(fields[i], gbc);<newline46mondego>      }<newline46mondego>   }<newline46mondego><newline46mondego>   @SuppressWarnings(<doubleQuotes46>static-access<doubleQuotes46>)<newline46mondego>   private GridBagConstraints createGbc(int x, int y) {<newline46mondego>      GridBagConstraints gbc = new GridBagConstraints();<newline46mondego>      gbc.gridx = x;<newline46mondego>      gbc.gridy = y;<newline46mondego>      gbc.gridwidth = 1;<newline46mondego>      gbc.gridheight = 1;<newline46mondego><newline46mondego>      // bad coding habit using variable name to access static constants<newline46mondego>      // done for sake of brevity and clarity<newline46mondego>      gbc.anchor = (x == 0) ? gbc.WEST : gbc.EAST;<newline46mondego>      gbc.fill = (x == 0) ? gbc.BOTH : gbc.HORIZONTAL;<newline46mondego><newline46mondego>      gbc.insets = (x == 0) ? WEST_INSETS : EAST_INSETS;<newline46mondego>      gbc.weightx = (x == 0) ? 0.1 : 1.0;<newline46mondego>      gbc.weighty = 1.0;<newline46mondego>      return gbc;<newline46mondego>   }<newline46mondego><newline46mondego>   public void setPlayer(Player player) {<newline46mondego>      this.player = player;<newline46mondego>      nameField.setText(player.getName());<newline46mondego>      speedField.setText(String.valueOf(player.getSpeed()));<newline46mondego>      strengthField.setText(String.valueOf(player.getStrength()));<newline46mondego>   }<newline46mondego><newline46mondego>   public Player getNewPlayer() {<newline46mondego>      String name = nameField.getText();<newline46mondego>      int strength = 0;<newline46mondego>      try {<newline46mondego>         strength = Integer.parseInt(strengthField.getText());<newline46mondego>      } catch (NumberFormatException e) {<newline46mondego>         // TODO: notify user that field was empty<newline46mondego>      }<newline46mondego>      int speed = 0;<newline46mondego>      try {<newline46mondego>         speed = Integer.parseInt(speedField.getText());<newline46mondego>      } catch (NumberFormatException e) {<newline46mondego>         // TODO: notify user that field was empty<newline46mondego>      }<newline46mondego><newline46mondego>      Player p = new Player();<newline46mondego>      p.setName(name);<newline46mondego>      p.setSpeed(speed);<newline46mondego>      p.setStrength(strength);<newline46mondego><newline46mondego>      return p;<newline46mondego>   }<newline46mondego><newline46mondego>   public void upDatePlayerAttributes() {<newline46mondego>      String name = nameField.getText();<newline46mondego>      int strength = 0;<newline46mondego>      try {<newline46mondego>         strength = Integer.parseInt(strengthField.getText());<newline46mondego>      } catch (NumberFormatException e) {<newline46mondego>         // TODO: notify user that field was empty<newline46mondego>      }<newline46mondego>      int speed = 0;<newline46mondego>      try {<newline46mondego>         speed = Integer.parseInt(speedField.getText());<newline46mondego>      } catch (NumberFormatException e) {<newline46mondego>         // TODO: notify user that field was empty<newline46mondego>      }<newline46mondego><newline46mondego>      player.setName(name);<newline46mondego>      player.setSpeed(speed);<newline46mondego>      player.setStrength(strength);<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"5711splitHere46","9549258splitHere46","setPlayer(Player player)"
"5712splitHere46","9549258splitHere46","public void setPlayer(Player player) {<newline46mondego>  this.player = player;<newline46mondego>  nameField.setText(player.getName());<newline46mondego>  speedField.setText(String.valueOf(player.getSpeed()));<newline46mondego>  strengthField.setText(String.valueOf(player.getStrength()));<newline46mondego>}<newline46mondego>"
"5713splitHere46","9549258splitHere46","public void actionPerformed(ActionEvent evt) {<newline46mondego><newline46mondego>     // *** first get the selected Player from the JList<newline46mondego>     Player player = (Player) playerList.getSelectedValue();<newline46mondego>     if (player == null) {<newline46mondego>        return; // do nothing if no player selected<newline46mondego>     }<newline46mondego><newline46mondego>     // then create a PlayerEditorPanel object<newline46mondego>     PlayerEditorPanel editorPanel = new PlayerEditorPanel();<newline46mondego><newline46mondego>     // and then <doubleQuotes46>inject<doubleQuotes46> the selected Player into the editor panel.<newline46mondego>     editorPanel.setPlayer(player);<newline46mondego><newline46mondego>     // and display it in a JOptionPane<newline46mondego>     int result = JOptionPane.showConfirmDialog(PlayerStats.this,<newline46mondego>           editorPanel, <doubleQuotes46>Edit Player<doubleQuotes46>, JOptionPane.OK_CANCEL_OPTION,<newline46mondego>           JOptionPane.PLAIN_MESSAGE);<newline46mondego>     if (result == JOptionPane.OK_OPTION) {<newline46mondego>        editorPanel.upDatePlayerAttributes();<newline46mondego>        playerList.repaint();<newline46mondego>     }<newline46mondego>  }<newline46mondego>"
"5714splitHere46","9549258splitHere46","upDatePlayerAttributes()"
"5715splitHere46","9549258splitHere46","public void upDatePlayerAttributes() {<newline46mondego>  String name = nameField.getText();<newline46mondego>  int strength = 0;<newline46mondego>  try {<newline46mondego>     strength = Integer.parseInt(strengthField.getText());<newline46mondego>  } catch (NumberFormatException e) {<newline46mondego>     // TODO: notify user that field was empty<newline46mondego>  }<newline46mondego>  int speed = 0;<newline46mondego>  try {<newline46mondego>     speed = Integer.parseInt(speedField.getText());<newline46mondego>  } catch (NumberFormatException e) {<newline46mondego>     // TODO: notify user that field was empty<newline46mondego>  }<newline46mondego><newline46mondego>  player.setName(name);<newline46mondego>  player.setSpeed(speed);<newline46mondego>  player.setStrength(strength);<newline46mondego>}<newline46mondego>"
"5716splitHere46","9549288splitHere46","String#split(regex,limit)"
"5717splitHere46","9549288splitHere46","String s = <doubleQuotes46>123 456 789 The rest of the string<doubleQuotes46>;<newline46mondego>String ss[] = s.split(<doubleQuotes46> <doubleQuotes46>, 4);<newline46mondego>// ss = {<doubleQuotes46>123<doubleQuotes46>, <doubleQuotes46>456<doubleQuotes46>, <doubleQuotes46>789<doubleQuotes46>, <doubleQuotes46>The rest of the string<doubleQuotes46>};<newline46mondego>"
"5718splitHere46","9549423splitHere46","Properties"
"5719splitHere46","9549423splitHere46","Properties p = new Properties();<newline46mondego>p.put(<doubleQuotes46>name<doubleQuotes46>, <doubleQuotes46>Charles<doubleQuotes46>);<newline46mondego>p.put(<doubleQuotes46>age<doubleQuotes46>, <doubleQuotes46>45<doubleQuotes46>);<newline46mondego>p.list(System.out); // new FileOutputStream(<doubleQuotes46>properties.txt<doubleQuotes46>)<newline46mondego>// name=Charles<newline46mondego>// age=45<newline46mondego>p.load(new FileInputStream(<doubleQuotes46>properties.txt<doubleQuotes46>));<newline46mondego>"
"5720splitHere46","9549611splitHere46","var = <value>;<newline46mondego>System.out.println(var);<newline46mondego>"
"5721splitHere46","9549611splitHere46","if(on = false)<newline46mondego>"
"5722splitHere46","9549611splitHere46","if(on == false)<newline46mondego>"
"5723splitHere46","9549611splitHere46","if(!on)<newline46mondego>"
"5724splitHere46","9549650splitHere46","int l = start;<newline46mondego>int r = end;<newline46mondego><newline46mondego>this.swap(a, choosePivot(), start); <newline46mondego>int pivotIndex = start; <newline46mondego>"
"5725splitHere46","9549856splitHere46","run()"
"5726splitHere46","9549856splitHere46","run()"
"5727splitHere46","9549856splitHere46","thread.start()"
"5728splitHere46","9549856splitHere46","new CMSThread(clientSocket).start();<newline46mondego>"
"5729splitHere46","9549856splitHere46","run()"
"5730splitHere46","9549856splitHere46","CMSThread"
"5731splitHere46","9549921splitHere46","FILENAME"
"5732splitHere46","9549921splitHere46","ChatService"
"5733splitHere46","9549921splitHere46","NullPointerException"
"5734splitHere46","9549921splitHere46","fis = openFileInput(FILENAME)"
"5735splitHere46","9549921splitHere46","while (fis.read(dataArray) != -1)<newline46mondego>        ;<newline46mondego>"
"5736splitHere46","9549921splitHere46","collected"
"5737splitHere46","9550023splitHere46","TreeMap"
"5738splitHere46","9550023splitHere46","Map"
"5739splitHere46","9550023splitHere46","TreeMap"
"5740splitHere46","9550075splitHere46","options<newline46mondego>{<newline46mondego>  UNICODE_INPUT = true;<newline46mondego>  static = true;<newline46mondego>}<newline46mondego><newline46mondego>PARSER_BEGIN(Printer)<newline46mondego>package test2;<newline46mondego>import java.io.*;<newline46mondego><newline46mondego>public class Printer<newline46mondego>{<newline46mondego>  public static void main(String args []) throws ParseException<newline46mondego>  {<newline46mondego>    Printer parser = new Printer(System.in);<newline46mondego>    parser.parse(System.out);<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>PARSER_END(Printer)<newline46mondego><newline46mondego>SKIP:<newline46mondego>{<newline46mondego>  <doubleQuotes46>\n<doubleQuotes46><newline46mondego>| <doubleQuotes46>\r<doubleQuotes46><newline46mondego>| <doubleQuotes46>\r\n<doubleQuotes46><newline46mondego>}<newline46mondego><newline46mondego>TOKEN:<newline46mondego>{<newline46mondego>  < PRINT: <doubleQuotes46>print<doubleQuotes46> ><newline46mondego>| < STR: (< LETTER >)+><newline46mondego>| < #LETTER:<newline46mondego>      [  // all chars for which Character.isIdentifierPart is true<newline46mondego>         <doubleQuotes46>\u0000<doubleQuotes46>-<doubleQuotes46>\u0008<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u000e<doubleQuotes46>-<doubleQuotes46>\u001b<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>$<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>0<doubleQuotes46>-<doubleQuotes46>9<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>A<doubleQuotes46>-<doubleQuotes46>Z<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>_<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>a<doubleQuotes46>-<doubleQuotes46>z<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u007f<doubleQuotes46>-<doubleQuotes46>\u009f<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u00a2<doubleQuotes46>-<doubleQuotes46>\u00a5<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u00aa<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u00b5<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u00ba<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u00c0<doubleQuotes46>-<doubleQuotes46>\u00d6<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u00d8<doubleQuotes46>-<doubleQuotes46>\u00f6<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u00f8<doubleQuotes46>-<doubleQuotes46>\u021f<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0222<doubleQuotes46>-<doubleQuotes46>\u0233<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0250<doubleQuotes46>-<doubleQuotes46>\u02ad<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u02b0<doubleQuotes46>-<doubleQuotes46>\u02b8<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u02bb<doubleQuotes46>-<doubleQuotes46>\u02c1<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u02d0<doubleQuotes46>-<doubleQuotes46>\u02d1<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u02e0<doubleQuotes46>-<doubleQuotes46>\u02e4<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u02ee<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0300<doubleQuotes46>-<doubleQuotes46>\u034e<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0360<doubleQuotes46>-<doubleQuotes46>\u0362<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u037a<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0386<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0388<doubleQuotes46>-<doubleQuotes46>\u038a<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u038c<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u038e<doubleQuotes46>-<doubleQuotes46>\u03a1<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u03a3<doubleQuotes46>-<doubleQuotes46>\u03ce<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u03d0<doubleQuotes46>-<doubleQuotes46>\u03d7<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u03da<doubleQuotes46>-<doubleQuotes46>\u03f3<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0400<doubleQuotes46>-<doubleQuotes46>\u0481<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0483<doubleQuotes46>-<doubleQuotes46>\u0486<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u048c<doubleQuotes46>-<doubleQuotes46>\u04c4<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u04c7<doubleQuotes46>-<doubleQuotes46>\u04c8<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u04cb<doubleQuotes46>-<doubleQuotes46>\u04cc<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u04d0<doubleQuotes46>-<doubleQuotes46>\u04f5<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u04f8<doubleQuotes46>-<doubleQuotes46>\u04f9<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0531<doubleQuotes46>-<doubleQuotes46>\u0556<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0559<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0561<doubleQuotes46>-<doubleQuotes46>\u0587<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0591<doubleQuotes46>-<doubleQuotes46>\u05a1<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u05a3<doubleQuotes46>-<doubleQuotes46>\u05b9<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u05bb<doubleQuotes46>-<doubleQuotes46>\u05bd<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u05bf<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u05c1<doubleQuotes46>-<doubleQuotes46>\u05c2<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u05c4<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u05d0<doubleQuotes46>-<doubleQuotes46>\u05ea<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u05f0<doubleQuotes46>-<doubleQuotes46>\u05f2<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0621<doubleQuotes46>-<doubleQuotes46>\u063a<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0640<doubleQuotes46>-<doubleQuotes46>\u0655<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0660<doubleQuotes46>-<doubleQuotes46>\u0669<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0670<doubleQuotes46>-<doubleQuotes46>\u06d3<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u06d5<doubleQuotes46>-<doubleQuotes46>\u06dc<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u06df<doubleQuotes46>-<doubleQuotes46>\u06e8<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u06ea<doubleQuotes46>-<doubleQuotes46>\u06ed<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u06f0<doubleQuotes46>-<doubleQuotes46>\u06fc<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u070f<doubleQuotes46>-<doubleQuotes46>\u072c<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0730<doubleQuotes46>-<doubleQuotes46>\u074a<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0780<doubleQuotes46>-<doubleQuotes46>\u07b0<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0901<doubleQuotes46>-<doubleQuotes46>\u0903<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0905<doubleQuotes46>-<doubleQuotes46>\u0939<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u093c<doubleQuotes46>-<doubleQuotes46>\u094d<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0950<doubleQuotes46>-<doubleQuotes46>\u0954<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0958<doubleQuotes46>-<doubleQuotes46>\u0963<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0966<doubleQuotes46>-<doubleQuotes46>\u096f<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0981<doubleQuotes46>-<doubleQuotes46>\u0983<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0985<doubleQuotes46>-<doubleQuotes46>\u098c<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u098f<doubleQuotes46>-<doubleQuotes46>\u0990<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0993<doubleQuotes46>-<doubleQuotes46>\u09a8<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u09aa<doubleQuotes46>-<doubleQuotes46>\u09b0<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u09b2<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u09b6<doubleQuotes46>-<doubleQuotes46>\u09b9<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u09bc<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u09be<doubleQuotes46>-<doubleQuotes46>\u09c4<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u09c7<doubleQuotes46>-<doubleQuotes46>\u09c8<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u09cb<doubleQuotes46>-<doubleQuotes46>\u09cd<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u09d7<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u09dc<doubleQuotes46>-<doubleQuotes46>\u09dd<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u09df<doubleQuotes46>-<doubleQuotes46>\u09e3<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u09e6<doubleQuotes46>-<doubleQuotes46>\u09f3<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0a02<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0a05<doubleQuotes46>-<doubleQuotes46>\u0a0a<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0a0f<doubleQuotes46>-<doubleQuotes46>\u0a10<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0a13<doubleQuotes46>-<doubleQuotes46>\u0a28<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0a2a<doubleQuotes46>-<doubleQuotes46>\u0a30<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0a32<doubleQuotes46>-<doubleQuotes46>\u0a33<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0a35<doubleQuotes46>-<doubleQuotes46>\u0a36<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0a38<doubleQuotes46>-<doubleQuotes46>\u0a39<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0a3c<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0a3e<doubleQuotes46>-<doubleQuotes46>\u0a42<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0a47<doubleQuotes46>-<doubleQuotes46>\u0a48<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0a4b<doubleQuotes46>-<doubleQuotes46>\u0a4d<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0a59<doubleQuotes46>-<doubleQuotes46>\u0a5c<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0a5e<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0a66<doubleQuotes46>-<doubleQuotes46>\u0a74<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0a81<doubleQuotes46>-<doubleQuotes46>\u0a83<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0a85<doubleQuotes46>-<doubleQuotes46>\u0a8b<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0a8d<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0a8f<doubleQuotes46>-<doubleQuotes46>\u0a91<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0a93<doubleQuotes46>-<doubleQuotes46>\u0aa8<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0aaa<doubleQuotes46>-<doubleQuotes46>\u0ab0<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0ab2<doubleQuotes46>-<doubleQuotes46>\u0ab3<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0ab5<doubleQuotes46>-<doubleQuotes46>\u0ab9<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0abc<doubleQuotes46>-<doubleQuotes46>\u0ac5<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0ac7<doubleQuotes46>-<doubleQuotes46>\u0ac9<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0acb<doubleQuotes46>-<doubleQuotes46>\u0acd<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0ad0<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0ae0<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0ae6<doubleQuotes46>-<doubleQuotes46>\u0aef<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0b01<doubleQuotes46>-<doubleQuotes46>\u0b03<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0b05<doubleQuotes46>-<doubleQuotes46>\u0b0c<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0b0f<doubleQuotes46>-<doubleQuotes46>\u0b10<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0b13<doubleQuotes46>-<doubleQuotes46>\u0b28<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0b2a<doubleQuotes46>-<doubleQuotes46>\u0b30<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0b32<doubleQuotes46>-<doubleQuotes46>\u0b33<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0b36<doubleQuotes46>-<doubleQuotes46>\u0b39<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0b3c<doubleQuotes46>-<doubleQuotes46>\u0b43<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0b47<doubleQuotes46>-<doubleQuotes46>\u0b48<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0b4b<doubleQuotes46>-<doubleQuotes46>\u0b4d<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0b56<doubleQuotes46>-<doubleQuotes46>\u0b57<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0b5c<doubleQuotes46>-<doubleQuotes46>\u0b5d<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0b5f<doubleQuotes46>-<doubleQuotes46>\u0b61<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0b66<doubleQuotes46>-<doubleQuotes46>\u0b6f<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0b82<doubleQuotes46>-<doubleQuotes46>\u0b83<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0b85<doubleQuotes46>-<doubleQuotes46>\u0b8a<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0b8e<doubleQuotes46>-<doubleQuotes46>\u0b90<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0b92<doubleQuotes46>-<doubleQuotes46>\u0b95<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0b99<doubleQuotes46>-<doubleQuotes46>\u0b9a<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0b9c<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0b9e<doubleQuotes46>-<doubleQuotes46>\u0b9f<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0ba3<doubleQuotes46>-<doubleQuotes46>\u0ba4<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0ba8<doubleQuotes46>-<doubleQuotes46>\u0baa<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0bae<doubleQuotes46>-<doubleQuotes46>\u0bb5<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0bb7<doubleQuotes46>-<doubleQuotes46>\u0bb9<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0bbe<doubleQuotes46>-<doubleQuotes46>\u0bc2<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0bc6<doubleQuotes46>-<doubleQuotes46>\u0bc8<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0bca<doubleQuotes46>-<doubleQuotes46>\u0bcd<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0bd7<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0be7<doubleQuotes46>-<doubleQuotes46>\u0bef<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0c01<doubleQuotes46>-<doubleQuotes46>\u0c03<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0c05<doubleQuotes46>-<doubleQuotes46>\u0c0c<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0c0e<doubleQuotes46>-<doubleQuotes46>\u0c10<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0c12<doubleQuotes46>-<doubleQuotes46>\u0c28<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0c2a<doubleQuotes46>-<doubleQuotes46>\u0c33<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0c35<doubleQuotes46>-<doubleQuotes46>\u0c39<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0c3e<doubleQuotes46>-<doubleQuotes46>\u0c44<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0c46<doubleQuotes46>-<doubleQuotes46>\u0c48<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0c4a<doubleQuotes46>-<doubleQuotes46>\u0c4d<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0c55<doubleQuotes46>-<doubleQuotes46>\u0c56<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0c60<doubleQuotes46>-<doubleQuotes46>\u0c61<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0c66<doubleQuotes46>-<doubleQuotes46>\u0c6f<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0c82<doubleQuotes46>-<doubleQuotes46>\u0c83<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0c85<doubleQuotes46>-<doubleQuotes46>\u0c8c<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0c8e<doubleQuotes46>-<doubleQuotes46>\u0c90<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0c92<doubleQuotes46>-<doubleQuotes46>\u0ca8<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0caa<doubleQuotes46>-<doubleQuotes46>\u0cb3<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0cb5<doubleQuotes46>-<doubleQuotes46>\u0cb9<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0cbe<doubleQuotes46>-<doubleQuotes46>\u0cc4<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0cc6<doubleQuotes46>-<doubleQuotes46>\u0cc8<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0cca<doubleQuotes46>-<doubleQuotes46>\u0ccd<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0cd5<doubleQuotes46>-<doubleQuotes46>\u0cd6<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0cde<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0ce0<doubleQuotes46>-<doubleQuotes46>\u0ce1<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0ce6<doubleQuotes46>-<doubleQuotes46>\u0cef<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0d02<doubleQuotes46>-<doubleQuotes46>\u0d03<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0d05<doubleQuotes46>-<doubleQuotes46>\u0d0c<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0d0e<doubleQuotes46>-<doubleQuotes46>\u0d10<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0d12<doubleQuotes46>-<doubleQuotes46>\u0d28<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0d2a<doubleQuotes46>-<doubleQuotes46>\u0d39<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0d3e<doubleQuotes46>-<doubleQuotes46>\u0d43<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0d46<doubleQuotes46>-<doubleQuotes46>\u0d48<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0d4a<doubleQuotes46>-<doubleQuotes46>\u0d4d<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0d57<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0d60<doubleQuotes46>-<doubleQuotes46>\u0d61<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0d66<doubleQuotes46>-<doubleQuotes46>\u0d6f<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0d82<doubleQuotes46>-<doubleQuotes46>\u0d83<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0d85<doubleQuotes46>-<doubleQuotes46>\u0d96<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0d9a<doubleQuotes46>-<doubleQuotes46>\u0db1<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0db3<doubleQuotes46>-<doubleQuotes46>\u0dbb<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0dbd<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0dc0<doubleQuotes46>-<doubleQuotes46>\u0dc6<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0dca<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0dcf<doubleQuotes46>-<doubleQuotes46>\u0dd4<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0dd6<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0dd8<doubleQuotes46>-<doubleQuotes46>\u0ddf<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0df2<doubleQuotes46>-<doubleQuotes46>\u0df3<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0e01<doubleQuotes46>-<doubleQuotes46>\u0e3a<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0e3f<doubleQuotes46>-<doubleQuotes46>\u0e4e<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0e50<doubleQuotes46>-<doubleQuotes46>\u0e59<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0e81<doubleQuotes46>-<doubleQuotes46>\u0e82<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0e84<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0e87<doubleQuotes46>-<doubleQuotes46>\u0e88<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0e8a<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0e8d<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0e94<doubleQuotes46>-<doubleQuotes46>\u0e97<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0e99<doubleQuotes46>-<doubleQuotes46>\u0e9f<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0ea1<doubleQuotes46>-<doubleQuotes46>\u0ea3<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0ea5<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0ea7<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0eaa<doubleQuotes46>-<doubleQuotes46>\u0eab<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0ead<doubleQuotes46>-<doubleQuotes46>\u0eb9<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0ebb<doubleQuotes46>-<doubleQuotes46>\u0ebd<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0ec0<doubleQuotes46>-<doubleQuotes46>\u0ec4<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0ec6<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0ec8<doubleQuotes46>-<doubleQuotes46>\u0ecd<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0ed0<doubleQuotes46>-<doubleQuotes46>\u0ed9<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0edc<doubleQuotes46>-<doubleQuotes46>\u0edd<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0f00<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0f18<doubleQuotes46>-<doubleQuotes46>\u0f19<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0f20<doubleQuotes46>-<doubleQuotes46>\u0f29<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0f35<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0f37<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0f39<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0f3e<doubleQuotes46>-<doubleQuotes46>\u0f47<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0f49<doubleQuotes46>-<doubleQuotes46>\u0f6a<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0f71<doubleQuotes46>-<doubleQuotes46>\u0f84<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0f86<doubleQuotes46>-<doubleQuotes46>\u0f8b<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0f90<doubleQuotes46>-<doubleQuotes46>\u0f97<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0f99<doubleQuotes46>-<doubleQuotes46>\u0fbc<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u0fc6<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u1000<doubleQuotes46>-<doubleQuotes46>\u1021<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u1023<doubleQuotes46>-<doubleQuotes46>\u1027<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u1029<doubleQuotes46>-<doubleQuotes46>\u102a<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u102c<doubleQuotes46>-<doubleQuotes46>\u1032<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u1036<doubleQuotes46>-<doubleQuotes46>\u1039<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u1040<doubleQuotes46>-<doubleQuotes46>\u1049<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u1050<doubleQuotes46>-<doubleQuotes46>\u1059<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u10a0<doubleQuotes46>-<doubleQuotes46>\u10c5<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u10d0<doubleQuotes46>-<doubleQuotes46>\u10f6<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u1100<doubleQuotes46>-<doubleQuotes46>\u1159<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u115f<doubleQuotes46>-<doubleQuotes46>\u11a2<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u11a8<doubleQuotes46>-<doubleQuotes46>\u11f9<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u1200<doubleQuotes46>-<doubleQuotes46>\u1206<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u1208<doubleQuotes46>-<doubleQuotes46>\u1246<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u1248<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u124a<doubleQuotes46>-<doubleQuotes46>\u124d<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u1250<doubleQuotes46>-<doubleQuotes46>\u1256<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u1258<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u125a<doubleQuotes46>-<doubleQuotes46>\u125d<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u1260<doubleQuotes46>-<doubleQuotes46>\u1286<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u1288<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u128a<doubleQuotes46>-<doubleQuotes46>\u128d<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u1290<doubleQuotes46>-<doubleQuotes46>\u12ae<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u12b0<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u12b2<doubleQuotes46>-<doubleQuotes46>\u12b5<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u12b8<doubleQuotes46>-<doubleQuotes46>\u12be<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u12c0<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u12c2<doubleQuotes46>-<doubleQuotes46>\u12c5<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u12c8<doubleQuotes46>-<doubleQuotes46>\u12ce<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u12d0<doubleQuotes46>-<doubleQuotes46>\u12d6<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u12d8<doubleQuotes46>-<doubleQuotes46>\u12ee<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u12f0<doubleQuotes46>-<doubleQuotes46>\u130e<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u1310<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u1312<doubleQuotes46>-<doubleQuotes46>\u1315<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u1318<doubleQuotes46>-<doubleQuotes46>\u131e<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u1320<doubleQuotes46>-<doubleQuotes46>\u1346<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u1348<doubleQuotes46>-<doubleQuotes46>\u135a<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u1369<doubleQuotes46>-<doubleQuotes46>\u1371<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u13a0<doubleQuotes46>-<doubleQuotes46>\u13f4<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u1401<doubleQuotes46>-<doubleQuotes46>\u166c<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u166f<doubleQuotes46>-<doubleQuotes46>\u1676<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u1681<doubleQuotes46>-<doubleQuotes46>\u169a<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u16a0<doubleQuotes46>-<doubleQuotes46>\u16ea<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u1780<doubleQuotes46>-<doubleQuotes46>\u17d3<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u17db<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u17e0<doubleQuotes46>-<doubleQuotes46>\u17e9<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u180b<doubleQuotes46>-<doubleQuotes46>\u180e<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u1810<doubleQuotes46>-<doubleQuotes46>\u1819<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u1820<doubleQuotes46>-<doubleQuotes46>\u1877<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u1880<doubleQuotes46>-<doubleQuotes46>\u18a9<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u1e00<doubleQuotes46>-<doubleQuotes46>\u1e9b<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u1ea0<doubleQuotes46>-<doubleQuotes46>\u1ef9<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u1f00<doubleQuotes46>-<doubleQuotes46>\u1f15<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u1f18<doubleQuotes46>-<doubleQuotes46>\u1f1d<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u1f20<doubleQuotes46>-<doubleQuotes46>\u1f45<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u1f48<doubleQuotes46>-<doubleQuotes46>\u1f4d<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u1f50<doubleQuotes46>-<doubleQuotes46>\u1f57<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u1f59<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u1f5b<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u1f5d<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u1f5f<doubleQuotes46>-<doubleQuotes46>\u1f7d<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u1f80<doubleQuotes46>-<doubleQuotes46>\u1fb4<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u1fb6<doubleQuotes46>-<doubleQuotes46>\u1fbc<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u1fbe<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u1fc2<doubleQuotes46>-<doubleQuotes46>\u1fc4<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u1fc6<doubleQuotes46>-<doubleQuotes46>\u1fcc<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u1fd0<doubleQuotes46>-<doubleQuotes46>\u1fd3<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u1fd6<doubleQuotes46>-<doubleQuotes46>\u1fdb<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u1fe0<doubleQuotes46>-<doubleQuotes46>\u1fec<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u1ff2<doubleQuotes46>-<doubleQuotes46>\u1ff4<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u1ff6<doubleQuotes46>-<doubleQuotes46>\u1ffc<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u200c<doubleQuotes46>-<doubleQuotes46>\u200f<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u202a<doubleQuotes46>-<doubleQuotes46>\u202e<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u203f<doubleQuotes46>-<doubleQuotes46>\u2040<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u206a<doubleQuotes46>-<doubleQuotes46>\u206f<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u207f<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u20a0<doubleQuotes46>-<doubleQuotes46>\u20af<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u20d0<doubleQuotes46>-<doubleQuotes46>\u20dc<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u20e1<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u2102<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u2107<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u210a<doubleQuotes46>-<doubleQuotes46>\u2113<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u2115<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u2119<doubleQuotes46>-<doubleQuotes46>\u211d<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u2124<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u2126<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u2128<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u212a<doubleQuotes46>-<doubleQuotes46>\u212d<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u212f<doubleQuotes46>-<doubleQuotes46>\u2131<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u2133<doubleQuotes46>-<doubleQuotes46>\u2139<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u2160<doubleQuotes46>-<doubleQuotes46>\u2183<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u3005<doubleQuotes46>-<doubleQuotes46>\u3007<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u3021<doubleQuotes46>-<doubleQuotes46>\u302f<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u3031<doubleQuotes46>-<doubleQuotes46>\u3035<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u3038<doubleQuotes46>-<doubleQuotes46>\u303a<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u3041<doubleQuotes46>-<doubleQuotes46>\u3094<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u3099<doubleQuotes46>-<doubleQuotes46>\u309a<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u309d<doubleQuotes46>-<doubleQuotes46>\u309e<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u30a1<doubleQuotes46>-<doubleQuotes46>\u30fe<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u3105<doubleQuotes46>-<doubleQuotes46>\u312c<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u3131<doubleQuotes46>-<doubleQuotes46>\u318e<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u31a0<doubleQuotes46>-<doubleQuotes46>\u31b7<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u3400<doubleQuotes46>-<doubleQuotes46>\u4db5<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\u4e00<doubleQuotes46>-<doubleQuotes46>\u9fa5<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\ua000<doubleQuotes46>-<doubleQuotes46>\ua48c<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\uac00<doubleQuotes46>-<doubleQuotes46>\ud7a3<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\uf900<doubleQuotes46>-<doubleQuotes46>\ufa2d<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\ufb00<doubleQuotes46>-<doubleQuotes46>\ufb06<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\ufb13<doubleQuotes46>-<doubleQuotes46>\ufb17<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\ufb1d<doubleQuotes46>-<doubleQuotes46>\ufb28<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\ufb2a<doubleQuotes46>-<doubleQuotes46>\ufb36<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\ufb38<doubleQuotes46>-<doubleQuotes46>\ufb3c<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\ufb3e<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\ufb40<doubleQuotes46>-<doubleQuotes46>\ufb41<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\ufb43<doubleQuotes46>-<doubleQuotes46>\ufb44<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\ufb46<doubleQuotes46>-<doubleQuotes46>\ufbb1<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\ufbd3<doubleQuotes46>-<doubleQuotes46>\ufd3d<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\ufd50<doubleQuotes46>-<doubleQuotes46>\ufd8f<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\ufd92<doubleQuotes46>-<doubleQuotes46>\ufdc7<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\ufdf0<doubleQuotes46>-<doubleQuotes46>\ufdfb<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\ufe20<doubleQuotes46>-<doubleQuotes46>\ufe23<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\ufe33<doubleQuotes46>-<doubleQuotes46>\ufe34<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\ufe4d<doubleQuotes46>-<doubleQuotes46>\ufe4f<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\ufe69<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\ufe70<doubleQuotes46>-<doubleQuotes46>\ufe72<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\ufe74<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\ufe76<doubleQuotes46>-<doubleQuotes46>\ufefc<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\ufeff<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\uff04<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\uff10<doubleQuotes46>-<doubleQuotes46>\uff19<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\uff21<doubleQuotes46>-<doubleQuotes46>\uff3a<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\uff3f<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\uff41<doubleQuotes46>-<doubleQuotes46>\uff5a<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\uff65<doubleQuotes46>-<doubleQuotes46>\uffbe<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\uffc2<doubleQuotes46>-<doubleQuotes46>\uffc7<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\uffca<doubleQuotes46>-<doubleQuotes46>\uffcf<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\uffd2<doubleQuotes46>-<doubleQuotes46>\uffd7<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\uffda<doubleQuotes46>-<doubleQuotes46>\uffdc<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\uffe0<doubleQuotes46>-<doubleQuotes46>\uffe1<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\uffe5<doubleQuotes46>-<doubleQuotes46>\uffe6<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>\ufff9<doubleQuotes46>-<doubleQuotes46>\ufffb<doubleQuotes46><newline46mondego>      ]<newline46mondego>  ><newline46mondego>}<newline46mondego><newline46mondego>TOKEN:<newline46mondego>{<newline46mondego>  < EQUAL: <doubleQuotes46>=<doubleQuotes46> >  <newline46mondego>}<newline46mondego><newline46mondego>void parse(PrintStream ps) :<newline46mondego>{<newline46mondego>  Token t;<newline46mondego>}<newline46mondego>{<newline46mondego>  (<newline46mondego>    < PRINT > <doubleQuotes46> <doubleQuotes46> t = < STR ><newline46mondego>  {<newline46mondego>    System.out.println(t.image);<newline46mondego>  }<newline46mondego>  )<newline46mondego>}<newline46mondego>"
"5741splitHere46","9550108splitHere46","initEngine"
"5742splitHere46","9550108splitHere46","GetMethodID()"
"5743splitHere46","9550108splitHere46","static<newline46mondego>{<newline46mondego>    // Load native library<newline46mondego>    System.loadLibrary(<doubleQuotes46>decoder<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"5744splitHere46","9550108splitHere46","jmethodID writeToAudioTrackMethodID = NULL;<newline46mondego>jclass cls = (*env)->FindClass(env, <doubleQuotes46>com.mautilus.audioplayer.Player<doubleQuotes46>);<newline46mondego><newline46mondego>if (!cls)<newline46mondego>writeToAudioTrackMethodID = (*env)->GetMethodID(env, cls, <doubleQuotes46>writeToAudioTrack<doubleQuotes46>, <doubleQuotes46>([B)V<doubleQuotes46>);<newline46mondego>"
"5745splitHere46","9550108splitHere46","initEngine"
"5746splitHere46","9550136splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>utf-8<doubleQuotes46>?><newline46mondego><LinearLayout xmlns:android=<doubleQuotes46>http://schemas.android.com/apk/res/android<doubleQuotes46><newline46mondego>    android:id=<doubleQuotes46>@+id/layout_root<doubleQuotes46><newline46mondego>    android:layout_width=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>    android:layout_height=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>    android:orientation=<doubleQuotes46>horizontal<doubleQuotes46><newline46mondego>    android:padding=<doubleQuotes46>10dp<doubleQuotes46> ><newline46mondego>    <CheckBox<newline46mondego>        xmlns:android=<doubleQuotes46>http://schemas.android.com/apk/res/android<doubleQuotes46><newline46mondego>        android:id=<doubleQuotes46>@+id/skip<doubleQuotes46><newline46mondego>        android:layout_width=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>        android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>        android:text=<doubleQuotes46>Ok please do not show again.<doubleQuotes46> ><newline46mondego>    </CheckBox><newline46mondego></LinearLayout><newline46mondego>"
"5747splitHere46","9550136splitHere46","public class SeActivity extends Activity {<newline46mondego>    public static final String PREFS_NAME = <doubleQuotes46>MyPrefsFile1<doubleQuotes46>;<newline46mondego>    public CheckBox dontShowAgain;<newline46mondego><newline46mondego>    /** Called when the activity is first created. */<newline46mondego>    @Override<newline46mondego>    public void onCreate(Bundle savedInstanceState) {<newline46mondego>        super.onCreate(savedInstanceState);<newline46mondego>        setContentView(R.layout.main);<newline46mondego>    }<newline46mondego><newline46mondego>    /** Called when the activity is brought to front. */<newline46mondego>    @Override<newline46mondego>    protected void onResume() {<newline46mondego>        AlertDialog.Builder adb = new AlertDialog.Builder(this);<newline46mondego>        LayoutInflater adbInflater = LayoutInflater.from(this);<newline46mondego>        View eulaLayout = adbInflater.inflate(R.layout.checkbox, null);<newline46mondego>        dontShowAgain = (CheckBox) eulaLayout.findViewById(R.id.skip);<newline46mondego>        adb.setView(eulaLayout);<newline46mondego>        adb.setTitle(<doubleQuotes46>Attention<doubleQuotes46>);<newline46mondego>        adb.setMessage(Html.fromHtml(<doubleQuotes46>Zukky, how can I see this then?<doubleQuotes46>));<newline46mondego>        adb.setPositiveButton(<doubleQuotes46>Ok<doubleQuotes46>, new DialogInterface.OnClickListener() {<newline46mondego>            public void onClick(DialogInterface dialog, int which) {<newline46mondego>                String checkBoxResult = <doubleQuotes46>NOT checked<doubleQuotes46>;<newline46mondego>                if (dontShowAgain.isChecked())<newline46mondego>                    checkBoxResult = <doubleQuotes46>checked<doubleQuotes46>;<newline46mondego>                SharedPreferences settings = getSharedPreferences(PREFS_NAME, 0);<newline46mondego>                SharedPreferences.Editor editor = settings.edit();<newline46mondego>                editor.putString(<doubleQuotes46>skipMessage<doubleQuotes46>, checkBoxResult);<newline46mondego>                // Commit the edits!<newline46mondego>                editor.commit();<newline46mondego>                startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(<doubleQuotes46>http://misha.beshkin.lv/android-alertdialog-with-checkbox/<doubleQuotes46>)));<newline46mondego>                return;<newline46mondego>            }<newline46mondego>        });<newline46mondego><newline46mondego>        adb.setNegativeButton(<doubleQuotes46>Cancel<doubleQuotes46>, new DialogInterface.OnClickListener() {<newline46mondego>            public void onClick(DialogInterface dialog, int which) {<newline46mondego>                String checkBoxResult = <doubleQuotes46>NOT checked<doubleQuotes46>;<newline46mondego>                if (dontShowAgain.isChecked())<newline46mondego>                    checkBoxResult = <doubleQuotes46>checked<doubleQuotes46>;<newline46mondego>                SharedPreferences settings = getSharedPreferences(PREFS_NAME, 0);<newline46mondego>                SharedPreferences.Editor editor = settings.edit();<newline46mondego>                editor.putString(<doubleQuotes46>skipMessage<doubleQuotes46>, checkBoxResult);<newline46mondego>                // Commit the edits!<newline46mondego>                editor.commit();<newline46mondego>                return;<newline46mondego>            }<newline46mondego>        });<newline46mondego>        SharedPreferences settings = getSharedPreferences(PREFS_NAME, 0);<newline46mondego>        String skipMessage = settings.getString(<doubleQuotes46>skipMessage<doubleQuotes46>, <doubleQuotes46>NOT checked<doubleQuotes46>);<newline46mondego>        if (!skipMessage.equals(<doubleQuotes46>checked<doubleQuotes46>))<newline46mondego>            adb.show();<newline46mondego><newline46mondego>        super.onResume();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5748splitHere46","9550193splitHere46","DataOutputStream.writeUTF()"
"5749splitHere46","9550193splitHere46","DataInputStream.readUTF()"
"5750splitHere46","9550193splitHere46","DataInput"
"5751splitHere46","9550269splitHere46","LinkedList"
"5752splitHere46","9550269splitHere46","O(n)"
"5753splitHere46","9550269splitHere46","n"
"5754splitHere46","9550269splitHere46","O(n)"
"5755splitHere46","9550269splitHere46","O(n)"
"5756splitHere46","9550269splitHere46","O(n)"
"5757splitHere46","9550269splitHere46","2n * O(n)"
"5758splitHere46","9550269splitHere46","O(n^2)"
"5759splitHere46","9550269splitHere46","O(n)"
"5760splitHere46","9550269splitHere46","iterator.remove()"
"5761splitHere46","9550269splitHere46","ArarayList"
"5762splitHere46","9550269splitHere46","O(n)"
"5763splitHere46","9550269splitHere46","n"
"5764splitHere46","9550269splitHere46","O(n)"
"5765splitHere46","9550269splitHere46","O(1)"
"5766splitHere46","9550269splitHere46","O(n)"
"5767splitHere46","9550269splitHere46","O(n^2)"
"5768splitHere46","9550269splitHere46","ArrayList"
"5769splitHere46","9550269splitHere46","O(n)"
"5770splitHere46","9550269splitHere46","O(n)"
"5771splitHere46","9550426splitHere46","ProcessBuilder processBuilder = new ProcessBuilder( <doubleQuotes46>cmd<doubleQuotes46> );        <newline46mondego>Process process = processBuilder.start();<newline46mondego>OutputStream stream = process.getOutputStream();<newline46mondego>"
"5772splitHere46","9550426splitHere46","getOutputStream()"
"5773splitHere46","9550426splitHere46","stream"
"5774splitHere46","9550498splitHere46","// <applet code='Exer09Laggui' width=400 height=200></applet><newline46mondego>import java.awt.Color;<newline46mondego>import java.awt.Graphics;<newline46mondego>import java.applet.Applet;<newline46mondego>import java.awt.event.KeyEvent;<newline46mondego>import java.awt.event.KeyListener;<newline46mondego><newline46mondego>public class Exer09Laggui extends Applet implements KeyListener {<newline46mondego><newline46mondego>   int width;<newline46mondego>   int height;<newline46mondego>   int carLength = 200;<newline46mondego>   int carWidth = 75;<newline46mondego><newline46mondego>   int nPoints = 4;<newline46mondego><newline46mondego>   // for body<newline46mondego>   int body_x = 0;<newline46mondego>   int body_y = 0;<newline46mondego><newline46mondego>   // for front windshield<newline46mondego>   // x coordinates<newline46mondego>   int frontWS_x1 = 125;<newline46mondego>   int frontWS_x2 = 125;<newline46mondego>   int frontWS_x3 = 145;<newline46mondego>   int frontWS_x4 = 145;<newline46mondego>   // y coordinates<newline46mondego>   int frontWS_y1 = 62;<newline46mondego>   int frontWS_y2 = 10;<newline46mondego>   int frontWS_y3 = 5;<newline46mondego>   int frontWS_y4 = 67;<newline46mondego><newline46mondego>   int[] xPoints1 = { frontWS_x1, frontWS_x2, frontWS_x3, frontWS_x4 };<newline46mondego>   int[] yPoints1 = { frontWS_y1, frontWS_y2, frontWS_y3, frontWS_y4 };<newline46mondego><newline46mondego>   public void init() {<newline46mondego>      width = getSize().width;<newline46mondego>      height = getSize().height;<newline46mondego>      setBackground(Color.GRAY);<newline46mondego>      addKeyListener(this);<newline46mondego>      setFocusable(true);<newline46mondego>      requestFocusInWindow();<newline46mondego>   }<newline46mondego><newline46mondego>   public void paint(Graphics g) {<newline46mondego>      // for the car body<newline46mondego>      g.setColor(Color.BLACK);<newline46mondego>      // fillRoundRect(int x, int y, int width, int height, int arcWidth, int<newline46mondego>      // arcHeight)<newline46mondego>      g.fillRoundRect(body_x, body_y, carLength, carWidth, 30, 30);<newline46mondego><newline46mondego>      // for the front windshield<newline46mondego>      // fillPolygon(int[] xPoints, int[] yPoints, int nPoints)<newline46mondego>      g.setColor(Color.white);<newline46mondego>      g.drawPolygon(xPoints1, yPoints1, nPoints);<newline46mondego>      g.setColor(new Color(200, 200, 255));<newline46mondego>      g.fillPolygon(xPoints1, yPoints1, nPoints);<newline46mondego>   }<newline46mondego><newline46mondego>   public void keyPressed(KeyEvent e) {<newline46mondego>      if (e.getKeyCode() == KeyEvent.VK_DOWN) {<newline46mondego>         // for body<newline46mondego>         body_y += 5;<newline46mondego>         // for front windshield<newline46mondego>         frontWS_y1 += 5;<newline46mondego>         frontWS_y2 += 5;<newline46mondego>         frontWS_y3 += 5;<newline46mondego>         frontWS_y4 += 5;<newline46mondego>      }<newline46mondego>      if (e.getKeyCode() == KeyEvent.VK_UP) {<newline46mondego>         // for body<newline46mondego>         body_y -= 5;<newline46mondego>         // for front windshield<newline46mondego>         frontWS_y1 -= 5;<newline46mondego>         frontWS_y2 -= 5;<newline46mondego>         frontWS_y3 -= 5;<newline46mondego>         frontWS_y4 -= 5;<newline46mondego>      }<newline46mondego>      if (e.getKeyCode() == KeyEvent.VK_LEFT) {<newline46mondego>         // for body<newline46mondego>         body_x -= 5;<newline46mondego>         // for front windshield<newline46mondego>         frontWS_x1 -= 5;<newline46mondego>         frontWS_x2 -= 5;<newline46mondego>         frontWS_x3 -= 5;<newline46mondego>         frontWS_x4 -= 5;<newline46mondego>      }<newline46mondego>      if (e.getKeyCode() == KeyEvent.VK_RIGHT) {<newline46mondego>         // for body<newline46mondego>         body_x += 5;<newline46mondego>         // for front windshield<newline46mondego>         frontWS_x1 += 5;<newline46mondego>         frontWS_x2 += 5;<newline46mondego>         frontWS_x3 += 5;<newline46mondego>         frontWS_x4 += 5;<newline46mondego>      }<newline46mondego>       xPoints1[0] = frontWS_x1;<newline46mondego>       xPoints1[1] = frontWS_x2;<newline46mondego>       xPoints1[2] = frontWS_x3;<newline46mondego>       xPoints1[3] = frontWS_x4;<newline46mondego>       yPoints1[0] = frontWS_y1;<newline46mondego>       yPoints1[1] = frontWS_y2;<newline46mondego>       yPoints1[2] = frontWS_y3;<newline46mondego>       yPoints1[3] = frontWS_y4;<newline46mondego>      repaint();<newline46mondego>   }<newline46mondego><newline46mondego>   public void keyReleased(KeyEvent e) {<newline46mondego>   }<newline46mondego><newline46mondego>   public void keyTyped(KeyEvent e) {<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"5775splitHere46","9550519splitHere46","//Grab the current touch coordinates<newline46mondego>    float x = event.getX();<newline46mondego>    float y = event.getY();<newline46mondego><newline46mondego>    //If you only want something to happen then the user touches down...<newline46mondego>    if (event.getAction() != MotionEvent.ACTION_UP) return true;<newline46mondego><newline46mondego>    //If the user pressed in the following area, run it's associated method<newline46mondego>    if (isXYInRect(x, y, new Rect(x1, y1, x2, y2)))<newline46mondego>    {<newline46mondego>        //Do whatever you want for your defined area<newline46mondego>    }<newline46mondego>    //or, if the user pressed in the following area, run it's associated method<newline46mondego>    else if (isXYInRect(x, y, new Rect(x1, y1, x2, y2)))<newline46mondego>    {<newline46mondego>        //Do whatever you want for your defined area<newline46mondego>    }<newline46mondego>"
"5776splitHere46","9550519splitHere46","//A helper method to determine if a coordinate is within a rectangle<newline46mondego>private boolean isXYInRect(float x, float y, Rect rect)<newline46mondego>{<newline46mondego>    //If it is within the bounds...<newline46mondego>    if (x > rect.left &&<newline46mondego>        x < rect.right &&<newline46mondego>        y > rect.top &&<newline46mondego>        y < rect.bottom)<newline46mondego>    {<newline46mondego>        //Then it's a hit<newline46mondego>        return true;<newline46mondego>    }<newline46mondego><newline46mondego>    //Otherwise, it's a miss<newline46mondego>    return false;<newline46mondego>}<newline46mondego>"
"5777splitHere46","9550634splitHere46","myList.get(0).set(1, 17);<newline46mondego>"
"5778splitHere46","9550634splitHere46","ArrayList"
"5779splitHere46","9550634splitHere46","ArrayList<ArrayList<Integer>> myList;<newline46mondego>"
"5780splitHere46","9550634splitHere46",".add(17)"
"5781splitHere46","9550746splitHere46","BlockingQueue"
"5782splitHere46","9550746splitHere46","Thread"
"5783splitHere46","9550746splitHere46","public class TwoThreads {<newline46mondego>  static final String FINISHED = <doubleQuotes46>Finished<doubleQuotes46>;<newline46mondego>  public static void main(String[] args) throws InterruptedException {<newline46mondego>    // The queue<newline46mondego>    final BlockingQueue<String> q = new ArrayBlockingQueue<String>(10);<newline46mondego>    // The sending thread.<newline46mondego>    new Thread() {<newline46mondego>      @Override<newline46mondego>      public void run() {<newline46mondego>        String message = <doubleQuotes46>Now is the time for all good men to come to he aid of the party.<doubleQuotes46>;<newline46mondego>        try {<newline46mondego>          // Send each word.<newline46mondego>          for (String word : message.split(<doubleQuotes46> <doubleQuotes46>)) {<newline46mondego>            q.put(word);<newline46mondego>          }<newline46mondego>          // Then the terminator.<newline46mondego>          q.put(FINISHED);<newline46mondego>        } catch (InterruptedException ex) {<newline46mondego>          Thread.currentThread().interrupt();<newline46mondego>        }<newline46mondego>      }<newline46mondego>      { start();}<newline46mondego>    };<newline46mondego>    // The receiving thread.<newline46mondego>    new Thread() {<newline46mondego>      @Override<newline46mondego>      public void run() {<newline46mondego>        try {<newline46mondego>          String word;<newline46mondego>          // Read each word until finished is detected.<newline46mondego>          while ((word = q.take()) != FINISHED) {<newline46mondego>            System.out.println(word);<newline46mondego>          }<newline46mondego>        } catch (InterruptedException ex) {<newline46mondego>          Thread.currentThread().interrupt();<newline46mondego>        }<newline46mondego>      }<newline46mondego>      { start();}<newline46mondego>    };<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"5784splitHere46","9550792splitHere46","while (1) {<newline46mondego>    sock = accept(listensock, NULL, NULL);<newline46mondego>    printf(<doubleQuotes46>client connected to child thread %i with pid %i.\n<doubleQuotes46>, pthread_self(), getpid());<newline46mondego><newline46mondego>    nread = 0;<newline46mondego>    while(nread >= 0) {<newline46mondego>        nread = recv(sock, buffer, 25, 0);<newline46mondego>        if (nread >= 0) {<newline46mondego>            buffer[nread] = '\0';<newline46mondego>            printf(<doubleQuotes46>%s\n<doubleQuotes46>, buffer);<newline46mondego>            send(sock, buffer, nread, 0);<newline46mondego>        }<newline46mondego>    }<newline46mondego>    close(sock);<newline46mondego>    printf(<doubleQuotes46>client disconnected from child thread %i with pid %i.\n<doubleQuotes46>, pthread_self(), getpid());<newline46mondego>"
"5785splitHere46","9550874splitHere46","BufferedReader br = new BufferedReader(new InputStreamReader(System.in));<newline46mondego>// or, to read from a file, do:<newline46mondego>// BufferedReader br = new BufferedReader(new FileReader(<doubleQuotes46>file.txt<doubleQuotes46>));<newline46mondego>String line;<newline46mondego>while ((line = br.readLine()) != null) {<newline46mondego>    String[] a = line.split(<doubleQuotes46>,<doubleQuotes46>);<newline46mondego><newline46mondego>    // do whatever you want here<newline46mondego>    // assuming the first element in your array is the class name, you can do this:<newline46mondego>    Animal animal = Class.forName(a[0]).newInstance();<newline46mondego><newline46mondego>    // the problem is that that calls the zero arg constructor. But I'll <newline46mondego>    // leave it up to you to figure out how to find the two arg matching<newline46mondego>    // constructor and call that instead (hint: Class.getConstructor(Class[] argTypes))<newline46mondego>}<newline46mondego>"
"5786splitHere46","9550900splitHere46","((HashMap<String, String>)l.getItemAtPosition(position)"
"5787splitHere46","9550900splitHere46","HashMap"
"5788splitHere46","9550900splitHere46","results2"
"5789splitHere46","9550900splitHere46","results2.get(position)"
"5790splitHere46","9550900splitHere46","HashMap"
"5791splitHere46","9550913splitHere46","FileInputStream fin = null;<newline46mondego>    BufferedInputStream bin = null;<newline46mondego>    try<newline46mondego>    {<newline46mondego>        fin = new FileInputStream(<doubleQuotes46>res/FancyPants.wav<doubleQuotes46>);<newline46mondego>        bin = new BufferedInputStream(fin);<newline46mondego>    }<newline46mondego>    catch(FileNotFoundException e)<newline46mondego>    {<newline46mondego>        e.printStackTrace();<newline46mondego>    }<newline46mondego>    WaveData waveFile = WaveData.create(bin);<newline46mondego>    AL10.alBufferData(buffer.get(0), waveFile.format, waveFile.data, waveFile.samplerate);<newline46mondego><newline46mondego>    waveFile.dispose();<newline46mondego>"
"5792splitHere46","9550922splitHere46","jPanel1"
"5793splitHere46","9550922splitHere46","Jframe2"
"5794splitHere46","9550922splitHere46","jPanel1"
"5795splitHere46","9550922splitHere46","public"
"5796splitHere46","9550922splitHere46","JFrame2"
"5797splitHere46","9550922splitHere46","public class JFrame2 extends JFrame{<newline46mondego>  //... <newline46mondego>  public void addButtong(JButton button){<newline46mondego>     jPanel1.add(bt);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"5798splitHere46","9550922splitHere46","JButton bt = new javax.swing.JButton();<newline46mondego>bt.setText(<doubleQuotes46>from jframe1 button1<doubleQuotes46>);<newline46mondego>Jframe2.addButtong(bt);<newline46mondego>"
"5799splitHere46","9550973splitHere46","WordUtils"
"5800splitHere46","9550973splitHere46","WordUtils.doSomething();<newline46mondego>"
"5801splitHere46","9550973splitHere46","WordUtils wu =  new WordUtils();<newline46mondego>wu.doSomething();<newline46mondego>"
"5802splitHere46","9550973splitHere46","new"
"5803splitHere46","9550973splitHere46","static"
"5804splitHere46","9551039splitHere46","Font menuFont = null;<newline46mondego>try {<newline46mondego>    menuFont = Font.createFont(...);<newline46mondego>}<newline46mondego>catch (...) {<newline46mondego><newline46mondego>}<newline46mondego>return menuFont;<newline46mondego>"
"5805splitHere46","9551039splitHere46","return Font.creatFont(...)"
"5806splitHere46","9551039splitHere46","return null"
"5807splitHere46","9551069splitHere46","Cell cell = sheetRow.getCell(column);"
"5808splitHere46","9551069splitHere46","if(sheetRow == null){sheetRow = sheet.createRow(row);}"
"5809splitHere46","9551110splitHere46","ApplicationContextFacade.executeMethod"
"5810splitHere46","9551110splitHere46","468 private Object executeMethod(final Method method, <newline46mondego>469                              final ApplicationContext context,<newline46mondego>470                              final Object[] params) <newline46mondego>471         throws PrivilegedActionException, <newline46mondego>472                IllegalAccessException,<newline46mondego>473                InvocationTargetException {<newline46mondego>474                                  <newline46mondego>475     if (SecurityUtil.isPackageProtectionEnabled()){<newline46mondego>476        return AccessController.doPrivileged(new PrivilegedExceptionAction(){<newline46mondego>477             public Object run() throws IllegalAccessException, InvocationTargetException{<newline46mondego>478                 return method.invoke(context,  params);<newline46mondego>479             }<newline46mondego>480         });<newline46mondego>481     } else {<newline46mondego>482         return method.invoke(context, params);<newline46mondego>483     }        <newline46mondego>484 }<newline46mondego>"
"5811splitHere46","9551110splitHere46","doPrivileged"
"5812splitHere46","9551239splitHere46","<context:property-placeholder location=<doubleQuotes46>${envfile}<doubleQuotes46>/><newline46mondego>"
"5813splitHere46","9551239splitHere46","-Denvfile=<doubleQuotes46>file:/var/server/environment.properties<doubleQuotes46><newline46mondego>"
"5814splitHere46","9551239splitHere46","CATALINA_OPTS=<doubleQuotes46> -Denvfile=file:/var/server/environment.properties<doubleQuotes46><newline46mondego>"
"5815splitHere46","9551239splitHere46","@Values(<doubleQuotes46>${myvalue}<doubleQuotes46>)<newline46mondego>private String myValue;<newline46mondego>"
"5816splitHere46","9551277splitHere46","<xxx>"
"5817splitHere46","9551277splitHere46","&xxx;"
"5818splitHere46","9551277splitHere46","b"
"5819splitHere46","9551277splitHere46","<xxx;"
"5820splitHere46","9551277splitHere46","&xxx>"
"5821splitHere46","9551277splitHere46","&"
"5822splitHere46","9551277splitHere46","<"
"5823splitHere46","9551277splitHere46",">"
"5824splitHere46","9551277splitHere46",";"
"5825splitHere46","9551277splitHere46","<"
"5826splitHere46","9551277splitHere46",">"
"5827splitHere46","9551277splitHere46","&"
"5828splitHere46","9551277splitHere46",";"
"5829splitHere46","9551277splitHere46","&xxx;"
"5830splitHere46","9551277splitHere46","<xxx>"
"5831splitHere46","9551277splitHere46","<p title=<doubleQuotes46>&amp;<doubleQuotes46>>"
"5832splitHere46","9551277splitHere46","temp += str.charAt(i);"
"5833splitHere46","9551277splitHere46","StringBuilder"
"5834splitHere46","9551277splitHere46","import java.util.Stack;<newline46mondego><newline46mondego>public String getFilteredPageContents() {<newline46mondego>    String str = getUnfilteredPageContents();<newline46mondego>    StringBuilder() temp = new StringBuilder();<newline46mondego><newline46mondego>    // The closing character for each thing that we're inside<newline46mondego>    Stack<Character> expectedClosing = new Stack<Character>();<newline46mondego><newline46mondego>    for(int i = 0; i<str.length(); i++) {<newline46mondego>        char c = str.charAt(i);<newline46mondego>        if(c == '<')<newline46mondego>            expectedClosing.push('>');<newline46mondego>        else if(c == '&')<newline46mondego>            expectedClosing.push(';');<newline46mondego><newline46mondego>        // Is the current character going to close something?<newline46mondego>        else if(!expectedClosing.empty() && c == expectedClosing.peek())<newline46mondego>            expectedClosing.pop();<newline46mondego><newline46mondego>        else {<newline46mondego>            // Only add to output if not currently inside something<newline46mondego>            if(expectedClosing.empty())<newline46mondego>                temp.append(c);<newline46mondego>        }<newline46mondego>    }<newline46mondego>    return temp.toString();<newline46mondego>}<newline46mondego>"
"5835splitHere46","9551441splitHere46","update"
"5836splitHere46","9551441splitHere46","update(data)"
"5837splitHere46","9551441splitHere46","digest(data)"
"5838splitHere46","9551441splitHere46","data"
"5839splitHere46","9551441splitHere46","digest(byte[])"
"5840splitHere46","9551441splitHere46","update(byte[])"
"5841splitHere46","9551441splitHere46","digest()"
"5842splitHere46","9551441splitHere46","int read = 0; <newline46mondego>while ((read = fis.read(buffer)) != -1) {<newline46mondego>    md.update(buffer, 0, read);<newline46mondego>};<newline46mondego>byte[] digest  = md.digest();<newline46mondego>"
"5843splitHere46","9551471splitHere46","AndroidTestCase"
"5844splitHere46","9551471splitHere46","null"
"5845splitHere46","9551471splitHere46","scrubClass"
"5846splitHere46","9551471splitHere46","setUp"
"5847splitHere46","9551471splitHere46","super.setUp()"
"5848splitHere46","9551471splitHere46","setUp"
"5849splitHere46","9551500splitHere46","String[] urlSplt = urlStr.split(<doubleQuotes46>/<doubleQuotes46>);<newline46mondego>if(urlSplt[urlSplt.length - 1].contains(<doubleQuotes46>.<doubleQuotes46>)){<newline46mondego>    //URL is a file<newline46mondego>} else{<newline46mondego>    //url is not a file<newline46mondego>}<newline46mondego>"
"5850splitHere46","9551590splitHere46","while ((line = in.readLine()) != null)<newline46mondego>{<newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"5851splitHere46","9551606splitHere46","static PrintStream formatDouble(PrintStream stream, double value, int precision) {<newline46mondego>    return stream.printf(<doubleQuotes46>%.<doubleQuotes46> + precision + <doubleQuotes46>f<doubleQuotes46>, value);<newline46mondego>}<newline46mondego>"
"5852splitHere46","9551624splitHere46","$ keytool -import -v -trustcacerts -alias clientkey -file ../client/client.cer -keystore cacerts.jks -keypass p@ssw0rd -storepass p@ssw0rd<newline46mondego>"
"5853splitHere46","9551624splitHere46","$ keytool -import -v -trustcacerts -alias serverkey -file ../server/server.cer -keystore cacerts.jks -keypass changeit -storepass changeit<newline46mondego>"
"5854splitHere46","9551624splitHere46","-Djavax.net.debug=ssl,handshake"
"5855splitHere46","9551690splitHere46","working"
"5856splitHere46","9551690splitHere46","volatile"
"5857splitHere46","9551690splitHere46","private volatile boolean working = true;<newline46mondego>"
"5858splitHere46","9551690splitHere46","What e.g. happens if the thread is in the process of changing working while at the exact same time the mainThread tries to read it?"
"5859splitHere46","9551690splitHere46","volatile"
"5860splitHere46","9551690splitHere46","volatile"
"5861splitHere46","9551715splitHere46","ij"
"5862splitHere46","9551756splitHere46","matches"
"5863splitHere46","9551756splitHere46","if"
"5864splitHere46","9551756splitHere46","$1"
"5865splitHere46","9551756splitHere46","String s = <doubleQuotes46>Hello my name is Joe<doubleQuotes46>;    <newline46mondego>Matcher m = Pattern.compile(<doubleQuotes46>Hello my name is ([\\w]*)<doubleQuotes46>).matcher(s);<newline46mondego>if(m.matches())<newline46mondego>{<newline46mondego>    System.out.println(<doubleQuotes46>Name entered: <doubleQuotes46> + m.group(1));<newline46mondego>}<newline46mondego>"
"5866splitHere46","9551795splitHere46","for (int i = 0; i < button.length; i++) {<newline46mondego>    for (int j = 0; j < button[0].length; j++) {<newline46mondego>        final int listenerI = i;<newline46mondego>        final int listenerJ = j;<newline46mondego>        button[i][j].setOnClickListener(new View.OnClickListener() {<newline46mondego>            public void onClick(View v) {<newline46mondego>                press(listenerI, listenerJ);<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5867splitHere46","9551843splitHere46","public class RegexSplitPageBrk {<newline46mondego><newline46mondego><newline46mondego>   public static void main(String[] args) {<newline46mondego>      String text = <doubleQuotes46>Hello world\nGoodbye cruel world!\nYeah this works!<doubleQuotes46>;<newline46mondego>      String regex = <doubleQuotes46>(?<=\\n)<doubleQuotes46>;  // with look-behind!<newline46mondego><newline46mondego>      String[] tokens = text.split(regex);<newline46mondego><newline46mondego>      for (String token : tokens) {<newline46mondego>         System.out.print(token);<newline46mondego>      }<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"5868splitHere46","9551980splitHere46","package com.spring.sample;<newline46mondego><newline46mondego>import org.springframework.beans.factory.annotation.Autowired;<newline46mondego>import org.springframework.context.ApplicationContext;<newline46mondego>import org.springframework.context.support.ClassPathXmlApplicationContext;<newline46mondego>import org.springframework.stereotype.Component;<newline46mondego><newline46mondego>import com.spring.sample.component.Sample;<newline46mondego><newline46mondego>@Component<newline46mondego>public class SampleMain {<newline46mondego><newline46mondego>    @Autowired<newline46mondego>    Sample testSample;<newline46mondego><newline46mondego>    static ApplicationContext appCtx = new ClassPathXmlApplicationContext(<doubleQuotes46>META-INF/webmvc-application.xml<doubleQuotes46>);<newline46mondego><newline46mondego>    public static void main(String[] args){<newline46mondego><newline46mondego>        SampleMain sampleMain = appCtx.getBean(SampleMain.class);<newline46mondego>        sampleMain.invokeSample();<newline46mondego>    }<newline46mondego><newline46mondego>    private void invokeSample(){<newline46mondego>        testSample.invokeSample();<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"5869splitHere46","9552313splitHere46","theContext"
"5870splitHere46","9552313splitHere46","getContext()"
"5871splitHere46","9552313splitHere46","((APP)(this.getApplication())).getContext().filelist()<newline46mondego>"
"5872splitHere46","9552368splitHere46","List<String> commandList = new ArrayList<String>(50);<newline46mondego><newline46mondego>public boolean onCommand(CommandSender sender, Command cmd, String commandLabel, String[] args){<newline46mondego>    //The ticket command<newline46mondego>    if(cmd.getName().equalsIgnoreCase(<doubleQuotes46>ticket<doubleQuotes46>)){<newline46mondego>        String ticket = <doubleQuotes46><doubleQuotes46>;<newline46mondego>        // ommiting<newline46mondego>        commandList.add(ticket);<newline46mondego>        return true;<newline46mondego>    } <newline46mondego>    else {<newline46mondego>        return false;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5873splitHere46","9552547splitHere46","new LinkedList<TreeNode>()"
"5874splitHere46","9552547splitHere46","LinkedList"
"5875splitHere46","9552547splitHere46","Queue"
"5876splitHere46","9552547splitHere46","Queue"
"5877splitHere46","9552547splitHere46","LinkedList"
"5878splitHere46","9552547splitHere46","Queue"
"5879splitHere46","9552547splitHere46","Object o = new LinkedList<TreeNode>();<newline46mondego>Queue<TreeNode> queue = new LinkedList<TreeNode>();<newline46mondego>LinkedList<TreeNode> list = new LinkedList<TreeNode>();<newline46mondego>"
"5880splitHere46","9552547splitHere46","LinkedList<TreeNode> o = new Object();<newline46mondego>LinkedList<TreeNode> queue = new Queue<TreeNode>();<newline46mondego>"
"5881splitHere46","9552547splitHere46","new"
"5882splitHere46","9552633splitHere46","ReentrantLock"
"5883splitHere46","9552633splitHere46","public static final ReentrantLock lock = new ReentrantLock(true);<newline46mondego>public static void i()<newline46mondego>{<newline46mondego>    lock.lock();<newline46mondego>    try {<newline46mondego>        System.out.println(Thread.currentThread().getName());<newline46mondego><newline46mondego>    } finally {<newline46mondego>        lock.unlock();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5884splitHere46","9552812splitHere46","URL url = new URL(URL_TO_APPLICATION);<newline46mondego>HttpURLConnection connection = (HttpURLConnection) url.openConnection();<newline46mondego>InputStream stream = connection.getInputStream();<newline46mondego>Scanner scanner = new Scanner(stream); // You can read the stream however you want. Scanner was just an easy example<newline46mondego>boolean found = false;<newline46mondego>while(scanner.hasNext()) {<newline46mondego>    String next = scanner.next();<newline46mondego>    if(TOKEN.equals(next)) {<newline46mondego>        found = true;<newline46mondego>        break;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>if(found) {<newline46mondego>    doSomethingAwesome();<newline46mondego>} else {<newline46mondego>    throw aFit();<newline46mondego>}<newline46mondego>"
"5885splitHere46","9552829splitHere46","if(month%15 == 0){<newline46mondego>     Thread.sleep(1000);<newline46mondego>}<newline46mondego>"
"5886splitHere46","9552834splitHere46","LinkedHashMap"
"5887splitHere46","9553002splitHere46","Broadcast"
"5888splitHere46","9553002splitHere46","Broadcast"
"5889splitHere46","9553002splitHere46","sendBroadcast"
"5890splitHere46","9553002splitHere46","Intent intent = new Intent(NEW_Intent);<newline46mondego>intent.putExtra(â€œTestâ€?,Test1);<newline46mondego>sendBroadcast(intent);<newline46mondego>"
"5891splitHere46","9553002splitHere46","BroadcastReceiver"
"5892splitHere46","9553002splitHere46","onReceive"
"5893splitHere46","9553002splitHere46","onReceive"
"5894splitHere46","9553002splitHere46","Broadcast"
"5895splitHere46","9553002splitHere46","<receiver android:name=â€?.ReceiverNameâ€?><newline46mondego><intent-filter><newline46mondego><action android:name=â€?com.paad.action.NEW_INTENTâ€?/><newline46mondego></intent-filter><newline46mondego></receiver><newline46mondego>"
"5896splitHere46","9553002splitHere46","IntentFilter filter = new IntentFilter(NEW_INTENT);<newline46mondego>ReceiverName r = new ReceiverName();<newline46mondego>registerReceiver(r, filter);<newline46mondego>"
"5897splitHere46","9553012splitHere46","String runMenuApp = <doubleQuotes46>path\\to\\runmenu.exe /show <doubleQuotes46>; <newline46mondego>    String file = <doubleQuotes46>\<doubleQuotes46><doubleQuotes46> + <doubleQuotes46>path\\to\\fileordir<doubleQuotes46> + <doubleQuotes46>\<doubleQuotes46><doubleQuotes46>;<newline46mondego>    Process p = Runtime.getRuntime().exec(runMenuApp + file);<newline46mondego>"
"5898splitHere46","9553091splitHere46","Container"
"5899splitHere46","9553091splitHere46","Collection"
"5900splitHere46","9553094splitHere46","employee.getProjects().clear();<newline46mondego>employee.getProjects().addAll(projectsSelectedByAdministrator);<newline46mondego>"
"5901splitHere46","9553114splitHere46","LazyInitializationException"
"5902splitHere46","9553114splitHere46","class Facade() {<newline46mondego>    @Inject<newline46mondego>    Dao dao;<newline46mondego><newline46mondego>    List<Company> companies;<newline46mondego><newline46mondego>    @PostConstruct<newline46mondego>    init() {<newline46mondego>        companies = Dao.findByNamedQuery(<doubleQuotes46>Companies.ALL<doubleQuotes46>);<newline46mondego>        Hibernate.initialize(companies.getPersonList()); <newline46mondego>    }<newline46mondego>} <newline46mondego>"
"5903splitHere46","9553114splitHere46","fetch join"
"5904splitHere46","9553114splitHere46","@Entity<newline46mondego>@NamedQueries( {<newline46mondego>    @NamedQuery(name = <doubleQuotes46>Company.ALL<doubleQuotes46>,query = <doubleQuotes46>SELECT c FROM Company c<doubleQuotes46>)<newline46mondego>    @NamedQuery(name = <doubleQuotes46>Company.ALL.WithPerson<doubleQuotes46>,query = <doubleQuotes46>SELECT c FROM Company c join fetch c.personList<doubleQuotes46>)<newline46mondego>})<newline46mondego>class Company {<newline46mondego>    @OneToMany(cascade = CascadeType.ALL)  // fetch=FetchType.EAGER <-ugly, but would work<newline46mondego>    List<Person> personList = new LinkedList<Person>();<newline46mondego>}<newline46mondego>"
"5905splitHere46","9553198splitHere46","this"
"5906splitHere46","9553198splitHere46","d=Display.getDisplay(new MyClassName());   <newline46mondego>"
"5907splitHere46","9553254splitHere46","public void testSendError() throws Exception {<newline46mondego>    // first advice the route to replace the input, and catch sending to FTP servers<newline46mondego>    context.getRouteDefinitions().get(0).adviceWith(context, new AdviceWithRouteBuilder() {<newline46mondego>        @Override<newline46mondego>        public void configure() throws Exception {<newline46mondego>            replaceFromWith(<doubleQuotes46>direct:input);<newline46mondego><newline46mondego>            // intercept valid messages<newline46mondego>            interceptSendToEndpoint(<doubleQuotes46>ftp://hostname/valid<doubleQuotes46>)<newline46mondego>                .skipSendToOriginalEndpoint()<newline46mondego>                .to(<doubleQuotes46>mock:valid<doubleQuotes46>);<newline46mondego><newline46mondego>            // intercept invalid messages<newline46mondego>            interceptSendToEndpoint(<doubleQuotes46>ftp://hostname/invalid<doubleQuotes46>)<newline46mondego>                .skipSendToOriginalEndpoint()<newline46mondego>                .to(<doubleQuotes46>mock:invalid<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    });<newline46mondego><newline46mondego>     // we must manually start when we are done with all the advice with<newline46mondego>    context.start();<newline46mondego><newline46mondego>    // setup expectations on the mocks<newline46mondego>    getMockEndpoint(<doubleQuotes46>mock:invalid<doubleQuotes46>).expectedMessageCount(1);<newline46mondego>    getMockEndpoint(<doubleQuotes46>mock:valid<doubleQuotes46>).expectedMessageCount(0);<newline46mondego><newline46mondego>    // send the invalid message to the route<newline46mondego>    template.sendBody(<doubleQuotes46>direct:input<doubleQuotes46>, <doubleQuotes46>Some invalid content here<doubleQuotes46>);<newline46mondego><newline46mondego>    // assert that the test was okay<newline46mondego>    assertMockEndpointsSatisfied();<newline46mondego>}<newline46mondego>"
"5908splitHere46","9553268splitHere46","FlowLayout(int align)"
"5909splitHere46","9553268splitHere46","FlowLayout"
"5910splitHere46","9553268splitHere46","FlowLayout.LEFT"
"5911splitHere46","9553268splitHere46","FlowLayout.RIGHT"
"5912splitHere46","9553268splitHere46","FlowLayout.CENTER"
"5913splitHere46","9553268splitHere46","FlowLayout.LEADING"
"5914splitHere46","9553268splitHere46","FlowLayout.TRAILING"
"5915splitHere46","9553268splitHere46","FlowLayout.RIGHT"
"5916splitHere46","9553281splitHere46","getAnnotation"
"5917splitHere46","9553281splitHere46","Class"
"5918splitHere46","9553281splitHere46","java.lang.reflect.Method"
"5919splitHere46","9553373splitHere46","if (booleanVariable[i] = true) {<newline46mondego>"
"5920splitHere46","9553373splitHere46","if (booleanVariable[i] == true) {<newline46mondego>"
"5921splitHere46","9553373splitHere46","=="
"5922splitHere46","9553373splitHere46","="
"5923splitHere46","9553373splitHere46","true"
"5924splitHere46","9553373splitHere46","if (booleanVariable[i]) {<newline46mondego>"
"5925splitHere46","9553602splitHere46","<attribute name=<doubleQuotes46>TransactionTimeout<doubleQuotes46>>100</attribute>"
"5926splitHere46","9553602splitHere46","userTransaction.setTransactionTimeout(100);"
"5927splitHere46","9553602splitHere46","//--<newline46mondego>    <method-attributes> <newline46mondego>       <method> <newline46mondego>         <method-name>someMethod</method-name> <newline46mondego>           <transaction-timeout>100</transaction-timeout> <newline46mondego>       </method> <newline46mondego>    </method-attributes><newline46mondego>//--<newline46mondego>"
"5928splitHere46","9553621splitHere46","Timer"
"5929splitHere46","9553621splitHere46","repaint()"
"5930splitHere46","9553621splitHere46","paintComponent()"
"5931splitHere46","9553621splitHere46","JPanel"
"5932splitHere46","9553621splitHere46","paint()"
"5933splitHere46","9553621splitHere46","import java.awt.*;<newline46mondego>import java.awt.event.*;<newline46mondego>import javax.swing.*;<newline46mondego><newline46mondego>public class PaintTest extends JPanel{<newline46mondego><newline46mondego>    boolean blueSqr = false;<newline46mondego><newline46mondego>    PaintTest() {<newline46mondego>        setPreferredSize(new Dimension(100,25));<newline46mondego>        ActionListener al = new ActionListener() {<newline46mondego>            public void actionPerformed(ActionEvent ae) {<newline46mondego>                blueSqr = !blueSqr;<newline46mondego>                repaint();<newline46mondego>            }<newline46mondego>        };<newline46mondego>        Timer timer = new Timer(1000,al);<newline46mondego>        timer.start();<newline46mondego>    }<newline46mondego><newline46mondego>    public void paintComponent(Graphics g) {<newline46mondego>        Color c = (blueSqr ? Color.BLUE : Color.RED);<newline46mondego>        g.setColor(c);<newline46mondego>        g.fillRect(10, 10, 10, 10);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args){<newline46mondego>        SwingUtilities.invokeLater(new Runnable() {<newline46mondego>            public void run() {<newline46mondego>                JFrame theWindow = new JFrame(<doubleQuotes46>Window<doubleQuotes46>);<newline46mondego>                theWindow.getContentPane().add(new PaintTest());<newline46mondego>                createWindow(theWindow);<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>    public static void createWindow(JFrame theWindow){<newline46mondego>        theWindow.pack();<newline46mondego>        theWindow.setLocationByPlatform(true);<newline46mondego>        theWindow.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        theWindow.setVisible(true);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5934splitHere46","9553627splitHere46","// Should be outside of your serialEvent method<newline46mondego>StringBuilder buffer = new StringBuilder();<newline46mondego><newline46mondego>public synchronized void serialEvent(SerialPortEvent oEvent) {<newline46mondego>    if (oEvent.getEventType() == SerialPortEvent.DATA_AVAILABLE) {<newline46mondego>        try {<newline46mondego>            int available = input.available();<newline46mondego>            byte chunk[] = new byte[available];<newline46mondego>            input.read(chunk, 0, available);<newline46mondego><newline46mondego>            // We store data in a buffer<newline46mondego>            buffer.append(new String(chunk));<newline46mondego>            // We check if we received the characters indicating<newline46mondego>            // the end of your data<newline46mondego>            int endOfLineIndex = buffer.indexOf(<doubleQuotes46>\r\n<doubleQuotes46>);<newline46mondego>            // We don't, so we leave and wait for more data<newline46mondego>            if (endOfLineIndex == -1) { <newline46mondego>                return;<newline46mondego>            }<newline46mondego><newline46mondego>            // The <doubleQuotes46>+2<doubleQuotes46> is to keep the <doubleQuotes46>\r\n<doubleQuotes46><newline46mondego>            String print = buffer.substring(0, endOfLineIndex+2);<newline46mondego>            // Do not forget to remove what was used in the buffer<newline46mondego>            buffer.delete(0, endOfLineIndex+2);<newline46mondego><newline46mondego>            test.write(print);<newline46mondego>            System.out.print(print);<newline46mondego><newline46mondego>        } catch (Exception e) {<newline46mondego>            System.err.println(e.toString());<newline46mondego>        }<newline46mondego>    }<newline46mondego>    // Ignore all the other eventTypes, but you should consider the other ones.<newline46mondego>}<newline46mondego>"
"5935splitHere46","9553690splitHere46","de.my.package"
"5936splitHere46","9553690splitHere46","de"
"5937splitHere46","9553690splitHere46","de"
"5938splitHere46","9553690splitHere46","package"
"5939splitHere46","9553690splitHere46","../../.."
"5940splitHere46","9553690splitHere46","out"
"5941splitHere46","9553690splitHere46","."
"5942splitHere46","9553690splitHere46","out"
"5943splitHere46","9553707splitHere46","D"
"5944splitHere46","9553707splitHere46","A"
"5945splitHere46","9553707splitHere46","m1()"
"5946splitHere46","9553707splitHere46","m1(int)"
"5947splitHere46","9553707splitHere46","X1"
"5948splitHere46","9553707splitHere46","f2()"
"5949splitHere46","9553707splitHere46","X2"
"5950splitHere46","9553707splitHere46","X1"
"5951splitHere46","9553707splitHere46","f2(int)"
"5952splitHere46","9553707splitHere46","X1"
"5953splitHere46","9553707splitHere46","X2 x2 = new X2();<newline46mondego>x2.f2(10); // Calls X2.f2(int)<newline46mondego>x2.f2(); // Calls X1.f2()<newline46mondego>"
"5954splitHere46","9553707splitHere46","@Override"
"5955splitHere46","9553707splitHere46","class X1<newline46mondego>{<newline46mondego>     public void f2(){}<newline46mondego>}<newline46mondego><newline46mondego>class X2 extends X1<newline46mondego>{<newline46mondego>     @Override public void f2(int x){}<newline46mondego>}<newline46mondego>"
"5956splitHere46","9553707splitHere46","error: method does not override or implement a method from a super type<newline46mondego>     @Override public void f2(int x){}<newline46mondego>     ^<newline46mondego>1 error<newline46mondego>"
"5957splitHere46","9553712splitHere46","d = (5 + a - b) % 5"
"5958splitHere46","9553712splitHere46","d = (3 + a - b) % 3"
"5959splitHere46","9553712splitHere46","d = (n + a - b) % n"
"5960splitHere46","9553729splitHere46","String"
"5961splitHere46","9553729splitHere46","org.mockito.exceptions.base.MockitoException: <newline46mondego>Cannot mock/spy class java.lang.String<newline46mondego>Mockito cannot mock/spy following:<newline46mondego>  - final classes<newline46mondego>  - anonymous classes<newline46mondego>  - primitive types<newline46mondego>    at Test.testShouldFail(Test.java:6)<newline46mondego>         ...<newline46mondego>"
"5962splitHere46","9553729splitHere46","String"
"5963splitHere46","9553729splitHere46","java.lang"
"5964splitHere46","9553729splitHere46","java.*"
"5965splitHere46","9553824splitHere46","mappedBy"
"5966splitHere46","9553824splitHere46","<the value of the mappedBy attribute>"
"5967splitHere46","9553824splitHere46","ShopProduct"
"5968splitHere46","9553871splitHere46","rmic"
"5969splitHere46","9553871splitHere46","rmic helloclass.HelloClass"
"5970splitHere46","9553909splitHere46","Bar bar = em.getReference(Bar.class, barId);<newline46mondego>foo.setBar(bar);<newline46mondego>"
"5971splitHere46","9553909splitHere46","getReference()"
"5972splitHere46","9553909splitHere46","Bar bar = em.find(Bar.class, barId);<newline46mondego>if (bar == null) {<newline46mondego>    throw someException();<newline46mondego>}<newline46mondego>foo.setBar(bar);<newline46mondego>"
"5973splitHere46","9553919splitHere46","string"
"5974splitHere46","9553919splitHere46","http://schemas.microsoft.com/2003/10/Serialization/Arrays"
"5975splitHere46","9553919splitHere46","http://schemas.microsoft.com/2003/10/Serialization"
"5976splitHere46","9553919splitHere46","@XmlElement(name=<doubleQuotes46>string<doubleQuotes46>,<newline46mondego>    namespace=<doubleQuotes46>http://schemas.microsoft.com/2003/10/Serialization/Arrays<doubleQuotes46>)<newline46mondego>private List<String> string;<newline46mondego>"
"5977splitHere46","9553927splitHere46","// Convert input string into a date<newline46mondego>DateFormat inputFormat = new SimpleDateFormat(<doubleQuotes46>yyyy-MM-dd hh:mm:ss.S<doubleQuotes46>);<newline46mondego>Date date = inputFormat.parse(inputString);<newline46mondego><newline46mondego>// Format date into output format<newline46mondego>DateFormat outputFormat = new SimpleDateFormat(<doubleQuotes46>dd-MM-yyyy HH:mm:ss<doubleQuotes46>);<newline46mondego>String outputString = outputFormat.format(date);<newline46mondego>"
"5978splitHere46","9554027splitHere46","add"
"5979splitHere46","9554027splitHere46","key"
"5980splitHere46","9554027splitHere46","null"
"5981splitHere46","9554027splitHere46","null"
"5982splitHere46","9554027splitHere46","false"
"5983splitHere46","9554027splitHere46","false"
"5984splitHere46","9554027splitHere46","true"
"5985splitHere46","9554027splitHere46","value"
"5986splitHere46","9554227splitHere46","isHorizontalSpaceFree()"
"5987splitHere46","9554227splitHere46","letterGrid[targetRow][targetCol]<newline46mondego>"
"5988splitHere46","9554336splitHere46","(let [s <doubleQuotes46>Hello<doubleQuotes46><newline46mondego>      n (count s)<newline46mondego>      cs (char-array n)]<newline46mondego>  (.getChars s 0 n cs 0)<newline46mondego>  (areduce cs i v 0 (+ v (int (aget cs i)))))<newline46mondego>=> 500<newline46mondego>"
"5989splitHere46","9554470splitHere46","CharSequence contentText = <doubleQuotes46>LEAVE NOW!! <doubleQuotes46> + System.currentTimeMillis();<newline46mondego>"
"5990splitHere46","9554470splitHere46","mNotificationManager.clear(HELLO_ID);<newline46mondego>"
"5991splitHere46","9554657splitHere46","CardLayout"
"5992splitHere46","9554657splitHere46","JInternalFrame"
"5993splitHere46","9554657splitHere46","JDesktopPane"
"5994splitHere46","9554657splitHere46","JTabbedPane"
"5995splitHere46","9554657splitHere46","JSplitPane"
"5996splitHere46","9554657splitHere46","JLayeredPane"
"5997splitHere46","9554657splitHere46","JToolBar"
"5998splitHere46","9554657splitHere46","JList"
"5999splitHere46","9554657splitHere46","JTree"
"6000splitHere46","9554657splitHere46","JFrame"
"6001splitHere46","9554657splitHere46","JDialog"
"6002splitHere46","9554657splitHere46","JOptionPane"
"6003splitHere46","9554657splitHere46","JLabel"
"6004splitHere46","9554657splitHere46","ImageViewer"
"6005splitHere46","9554657splitHere46","JList"
"6006splitHere46","9554801splitHere46","Comment comment = ...; // Wherever<newline46mondego>List<Integer> numbers = new List<Integer>();<newline46mondego>numbers.add(10);<newline46mondego>comment.setCommentsList(numbers);<newline46mondego>"
"6007splitHere46","9554801splitHere46","Comment"
"6008splitHere46","9554801splitHere46","public interface Comment<T extends Comment<T>> {<newline46mondego><newline46mondego>    // Note: no public modifier; it's allowed by the spec but discouraged<newline46mondego>    void setCommentList(List<T> comments);<newline46mondego>    List<T> getCommentList();<newline46mondego>}<newline46mondego>"
"6009splitHere46","9554832splitHere46","\build\classes"
"6010splitHere46","9554832splitHere46","log4j.xml"
"6011splitHere46","9554913splitHere46","SELECT NEXT VALUE FOR some_sequence;<newline46mondego>"
"6012splitHere46","9554913splitHere46","SELECT some_sequence.NEXTVAL;<newline46mondego>"
"6013splitHere46","9554929splitHere46","System.out.println(com.sun.javafx.runtime.VersionInfo.getVersion());<newline46mondego>"
"6014splitHere46","9554937splitHere46","public enum Suit {<newline46mondego>  Hearts, Spades, Diamonds, Clubs;<newline46mondego>}<newline46mondego>public enum Card {<newline46mondego>  A, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, J, Q, K;<newline46mondego>}<newline46mondego>"
"6015splitHere46","9555030splitHere46","for (int i = 0 ; i < size; i++)<newline46mondego>    for(int j = 0 ; j < size ; j++)<newline46mondego>    {<newline46mondego>         if ( arr[i][j] == 88)<newline46mondego>         {<newline46mondego>              `save this 2 indexes`<newline46mondego>              break;<newline46mondego>         }<newline46mondego>    }<newline46mondego>"
"6016splitHere46","9555053splitHere46","Time"
"6017splitHere46","9555053splitHere46","AbstractVehicle"
"6018splitHere46","9555053splitHere46","Time"
"6019splitHere46","9555053splitHere46","Time"
"6020splitHere46","9555053splitHere46","AbstractVehicle"
"6021splitHere46","9555053splitHere46","AbstractVehicle"
"6022splitHere46","9555053splitHere46","Time"
"6023splitHere46","9555112splitHere46","String s = new String(<doubleQuotes46>stringette<doubleQuotes46>);// DON'T DO THIS!<newline46mondego>"
"6024splitHere46","9555112splitHere46","String s = <doubleQuotes46>stringette<doubleQuotes46>;<newline46mondego>"
"6025splitHere46","9555127splitHere46","n = map[(down + 1)][across];<newline46mondego>"
"6026splitHere46","9555153splitHere46","E"
"6027splitHere46","9555153splitHere46","E"
"6028splitHere46","9555153splitHere46","BaseButton"
"6029splitHere46","9555153splitHere46","BaseButton"
"6030splitHere46","9555153splitHere46","int foo(String s)"
"6031splitHere46","9555153splitHere46","int bar(E arg) {<newline46mondego>    arg.foo(<doubleQuotes46>test<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"6032splitHere46","9555153splitHere46","E"
"6033splitHere46","9555153splitHere46","Object"
"6034splitHere46","9555153splitHere46","Object"
"6035splitHere46","9555153splitHere46","foo"
"6036splitHere46","9555237splitHere46","http://localhost/myApp"
"6037splitHere46","9555237splitHere46","http://localhost/myApp"
"6038splitHere46","9555237splitHere46","http://localhost/myAppi"
"6039splitHere46","9555237splitHere46","http://localhost:8080/myApp"
"6040splitHere46","9555362splitHere46","JFreeChart"
"6041splitHere46","9555362splitHere46","SpiderWebPlot"
"6042splitHere46","9555503splitHere46","if(!relations.hasRelation(user)) relations2.setRelation(user2);"
"6043splitHere46","9555503splitHere46","if(!relations2.hasRelation(user)) relations2.setRelation(user);"
"6044splitHere46","9555503splitHere46","x"
"6045splitHere46","9555503splitHere46","y"
"6046splitHere46","9555503splitHere46","y"
"6047splitHere46","9555503splitHere46","x"
"6048splitHere46","9555503splitHere46","Relations"
"6049splitHere46","9555503splitHere46","lockOrder"
"6050splitHere46","9555503splitHere46","private final int lockOrder;<newline46mondego>"
"6051splitHere46","9555503splitHere46","currentLockOrder"
"6052splitHere46","9555503splitHere46","private static int currentLockOrder = 0;<newline46mondego>"
"6053splitHere46","9555503splitHere46","Relations"
"6054splitHere46","9555503splitHere46","lockOrder"
"6055splitHere46","9555503splitHere46","currentLockOrder"
"6056splitHere46","9555503splitHere46","public Relations()<newline46mondego>{<newline46mondego>    synchronized(Relations.class) // a lock on currentLockOrder<newline46mondego>    {<newline46mondego>        lockOrder = currentLockOrder;<newline46mondego>        ++currentLockOrder;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6057splitHere46","9555503splitHere46","Relations"
"6058splitHere46","9555503splitHere46","lockOrder"
"6059splitHere46","9555503splitHere46","setRelation"
"6060splitHere46","9555503splitHere46","public void setRelation(final User thatUser)<newline46mondego>{<newline46mondego>    final Relations that = thatUser.getRelations();<newline46mondego><newline46mondego>    synchronized(lockOrder < that.lockOrder ? this : that)<newline46mondego>    {<newline46mondego>        synchronized(lockOrder < that.lockOrder ? that : this)<newline46mondego>        {<newline46mondego>            storeRelation(thatUser);<newline46mondego><newline46mondego>            if(! that.hasRelation(user))<newline46mondego>                that.storeRelation(user);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6061splitHere46","9555503splitHere46","x"
"6062splitHere46","9555503splitHere46","y"
"6063splitHere46","9555503splitHere46","x"
"6064splitHere46","9555503splitHere46","y"
"6065splitHere46","9555503splitHere46","setRelation"
"6066splitHere46","9555503splitHere46","storeRelation"
"6067splitHere46","9555503splitHere46","setRelation"
"6068splitHere46","9555503splitHere46","x.setRelation(u_y)"
"6069splitHere46","9555503splitHere46","x.storeRelation(u_y)"
"6070splitHere46","9555503splitHere46","y.setRelation(u_x)"
"6071splitHere46","9555503splitHere46","y.storeRelation(u_x)"
"6072splitHere46","9555503splitHere46","y"
"6073splitHere46","9555503splitHere46","Relations.storeRelation(...)"
"6074splitHere46","9555521splitHere46","ButtonAdapter"
"6075splitHere46","9555521splitHere46","Activity"
"6076splitHere46","9555521splitHere46","Context"
"6077splitHere46","9555521splitHere46","Activity"
"6078splitHere46","9555521splitHere46","ButtonAdapter adapter = new ButtonAdapter(this);// this is the activity(if you create in an activity the adapter)<newline46mondego>"
"6079splitHere46","9555521splitHere46","Context"
"6080splitHere46","9555521splitHere46","ButtonAdapter"
"6081splitHere46","9555521splitHere46","OnClickListener"
"6082splitHere46","9555521splitHere46","class MyOnClickListener implements OnClickListener  <newline46mondego>    {  <newline46mondego>     private final int position;  <newline46mondego>private Context ctx;<newline46mondego><newline46mondego>     public MyOnClickListener(int position, Context ctx)  <newline46mondego>     {  <newline46mondego>      this.position = position;  <newline46mondego>this.ctx = ctx;<newline46mondego>     }  <newline46mondego><newline46mondego>     public void onClick(View v)  <newline46mondego>     {  <newline46mondego>      // Preform a function based on the position  <newline46mondego>      someFunction(this.position)  <newline46mondego>      Intent i = new Intent(MyMain.this, MyNewActivity.class)<newline46mondego>ctx.startActivity(i);<newline46mondego>     }  <newline46mondego>    }  <newline46mondego>"
"6083splitHere46","9555521splitHere46","btn.setOnClickListener(new MyOnClickListener(position, mContext));<newline46mondego>"
"6084splitHere46","9555556splitHere46","public class Result {<newline46mondego>    private String result1;<newline46mondego>    private int result2;<newline46mondego>    // etc.<newline46mondego>}<newline46mondego>"
"6085splitHere46","9555556splitHere46","public int Nov2()<newline46mondego>{<newline46mondego>    char[] ops = new char[] {'+', '-', '*', '/'};<newline46mondego>    int i = rand.nextInt(4-0) + 0;<newline46mondego>    char op1 = ops[i];<newline46mondego><newline46mondego>    int novnum1 = rand.nextInt(101-1) + 1;<newline46mondego><newline46mondego>    int novnum2 = rand.nextInt(101-1) + 1;<newline46mondego><newline46mondego>    int result = 0;<newline46mondego><newline46mondego>    switch(op1) {<newline46mondego>        case '+': result = novnum1 + novnum2; break;<newline46mondego>        case '-': result = novnum1 - novnum2; break;<newline46mondego>        case '*': result = novnum1 * novnum2; break;<newline46mondego>        case '/': result = novnum1 / novnum2; break;<newline46mondego>    }<newline46mondego><newline46mondego>    String nov2Exp = novnum1 + <doubleQuotes46> <doubleQuotes46> + op1 + <doubleQuotes46> <doubleQuotes46> + novnum2 + <doubleQuotes46> = <doubleQuotes46>;<newline46mondego><newline46mondego>    setContentView(R.layout.gameview);<newline46mondego><newline46mondego>    TextView display = (TextView) findViewById(R.id.exp);<newline46mondego><newline46mondego>    display.setText(nov2Exp);<newline46mondego><newline46mondego>    return result;<newline46mondego>}<newline46mondego>"
"6086splitHere46","9555601splitHere46","BufferedImage"
"6087splitHere46","9555601splitHere46","JComponent"
"6088splitHere46","9555601splitHere46","JPanel"
"6089splitHere46","9555601splitHere46","paintComponent(Graphics)"
"6090splitHere46","9555601splitHere46","paint(Graphics)"
"6091splitHere46","9555668splitHere46","count"
"6092splitHere46","9555668splitHere46","int"
"6093splitHere46","9555668splitHere46","private final int count;<newline46mondego>"
"6094splitHere46","9555853splitHere46","final Type collectionType = new TypeToken<Collection<Fruit>>(){}.getType();<newline46mondego>final Collection<Fruit> fruits = gson.fromJson(json, collectionType);<newline46mondego><newline46mondego>for(final Fruit fruit; fruits) {<newline46mondego>    System.out.println(fruit.getAvailable());<newline46mondego>}<newline46mondego>"
"6095splitHere46","9556090splitHere46","x = A * cos(t)<newline46mondego>y = B * sin(t)<newline46mondego>"
"6096splitHere46","9556090splitHere46","t"
"6097splitHere46","9556091splitHere46","BufferedImage img = new BufferedImage(w,h,BufferedImage.TYPE_INT_RGB)"
"6098splitHere46","9556091splitHere46","img.getGraphics().fillRect(....)"
"6099splitHere46","9556091splitHere46","img.getGraphics().drawImage(image, 0, 0, null);"
"6100splitHere46","9556154splitHere46","main"
"6101splitHere46","9556154splitHere46","setColor"
"6102splitHere46","9556154splitHere46","main"
"6103splitHere46","9556179splitHere46","ArrayList"
"6104splitHere46","9556179splitHere46","LinkedList"
"6105splitHere46","9556179splitHere46","ArrayList"
"6106splitHere46","9556179splitHere46","LinkedList"
"6107splitHere46","9556179splitHere46","LinkedList"
"6108splitHere46","9556179splitHere46","ArrayList<LinkedList<TreeNode>> result = new ArrayList<LinkedList<TreeNode>>();"
"6109splitHere46","9556179splitHere46","List<List<TreeNode>> result = new ArrayList<List<TreeNode>>();"
"6110splitHere46","9556179splitHere46","for(List<TreeNode> entry : result)"
"6111splitHere46","9556202splitHere46","TreeMap"
"6112splitHere46","9556202splitHere46","String"
"6113splitHere46","9556202splitHere46","Date"
"6114splitHere46","9556369splitHere46","TreeMap"
"6115splitHere46","9556369splitHere46","class NumbersThenWordsComparator implements Comparator<String> {<newline46mondego>    private static Integer intValue(String s) {<newline46mondego>        try {<newline46mondego>            return Integer.valueOf(s);<newline46mondego>        } catch (NumberFormatException e) {<newline46mondego>            return null;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public int compare(String s1, String s2) {<newline46mondego>        Integer i1 = intValue(s1);<newline46mondego>        Integer i2 = intValue(s2);<newline46mondego>        if (i1 == null && i2 == null) {<newline46mondego>            return s1.compareTo(s2);<newline46mondego>        } else if (i1 == null) {<newline46mondego>            return -1;<newline46mondego>        } else if (i2 == null) {<newline46mondego>            return 1;<newline46mondego>        } else {<newline46mondego>            return i1.compareTo(i2);<newline46mondego>        }<newline46mondego>    }       <newline46mondego>}<newline46mondego><newline46mondego>public void myMethod(Map<String, String[]> originalMap) {<newline46mondego>    TreeMap<String, String[]> t =<newline46mondego>        new TreeMap<String, String[]>(new NumbersThenWordsComparator());<newline46mondego>    t.putAll(originalMap);<newline46mondego>    // now iterate over t, which will produce entries in the desired order<newline46mondego>}<newline46mondego>"
"6116splitHere46","9556371splitHere46","int[] b;<newline46mondego>b = {1,2,3}; // <== Syntax error<newline46mondego>"
"6117splitHere46","9556371splitHere46","a"
"6118splitHere46","9556371splitHere46","b"
"6119splitHere46","9556429splitHere46","byte data[] = new byte[1024];<newline46mondego>"
"6120splitHere46","9556429splitHere46","byte data[] = new byte[4096];<newline46mondego>"
"6121splitHere46","9556452splitHere46","gameField"
"6122splitHere46","9556452splitHere46","JScrollPane"
"6123splitHere46","9556452splitHere46","paintImmediately"
"6124splitHere46","9556452splitHere46","JPanel"
"6125splitHere46","9556452splitHere46","Canvas"
"6126splitHere46","9556452splitHere46","bufferStategy"
"6127splitHere46","9556452splitHere46","JScrollPane"
"6128splitHere46","9556452splitHere46","Canvas"
"6129splitHere46","9556452splitHere46","JScrollPane"
"6130splitHere46","9556452splitHere46","ScrollPane"
"6131splitHere46","9556452splitHere46","Canvas"
"6132splitHere46","9556452splitHere46","JScrollPane"
"6133splitHere46","9556452splitHere46","JScrollBar"
"6134splitHere46","9556452splitHere46","import java.awt.BorderLayout;<newline46mondego>import java.awt.Canvas;<newline46mondego>import java.awt.Color;<newline46mondego>import java.awt.Dimension;<newline46mondego>import java.awt.EventQueue;<newline46mondego>import java.awt.Graphics;<newline46mondego>import java.awt.Graphics2D;<newline46mondego>import java.awt.Toolkit;<newline46mondego>import java.awt.image.BufferStrategy;<newline46mondego>import java.awt.image.BufferedImage;<newline46mondego><newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JScrollBar;<newline46mondego><newline46mondego>public class BufferStrategyDemo extends JFrame {<newline46mondego>    private BufferStrategy bufferStrategy;<newline46mondego>    private Canvas gameField;<newline46mondego>    private JScrollBar scroll;<newline46mondego><newline46mondego>    public BufferStrategyDemo() {<newline46mondego>        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        getContentPane().setLayout(new BorderLayout());<newline46mondego>        getContentPane().setPreferredSize(new Dimension(800, 600));<newline46mondego><newline46mondego>        gameField = new Canvas();<newline46mondego>        gameField.setIgnoreRepaint(true);<newline46mondego>        gameField.setPreferredSize(new Dimension(800, 580));<newline46mondego>        getContentPane().add(gameField, BorderLayout.CENTER);<newline46mondego><newline46mondego>        scroll = new JScrollBar(JScrollBar.HORIZONTAL);<newline46mondego>        scroll.setPreferredSize(new Dimension(800, 20));<newline46mondego>        scroll.setMaximum(1400 - 800); // image width - viewport width<newline46mondego>        getContentPane().add(scroll, BorderLayout.SOUTH);<newline46mondego><newline46mondego>        this.pack();<newline46mondego><newline46mondego>        gameField.createBufferStrategy(2);<newline46mondego>        bufferStrategy = gameField.getBufferStrategy();<newline46mondego><newline46mondego>        new Renderer().start();<newline46mondego>    }<newline46mondego><newline46mondego>    private class Renderer extends Thread {<newline46mondego>        private BufferedImage imageOfGameField;<newline46mondego><newline46mondego>        public Renderer() {<newline46mondego>            // NOTE: image size is fixed now, but better to bind image size to the size of viewport<newline46mondego>            imageOfGameField = new BufferedImage(1400, 580, BufferedImage.TYPE_INT_ARGB);<newline46mondego>        }<newline46mondego><newline46mondego>        public void run() {<newline46mondego>            while (true) {<newline46mondego>                Graphics g = null;<newline46mondego>                try {<newline46mondego>                    g = bufferStrategy.getDrawGraphics();<newline46mondego>                    drawSprites(g);<newline46mondego>                } finally {<newline46mondego>                    g.dispose();<newline46mondego>                }<newline46mondego><newline46mondego>                bufferStrategy.show(); <newline46mondego>                Toolkit.getDefaultToolkit().sync();<newline46mondego><newline46mondego>                try {<newline46mondego>                    Thread.sleep(1000 / 60);<newline46mondego>                } catch (InterruptedException ie) {<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        private void drawSprites(Graphics g) {<newline46mondego>            Graphics2D g2d = (Graphics2D) g;<newline46mondego><newline46mondego>            Graphics g2d2 = imageOfGameField.createGraphics();<newline46mondego>            g2d2.setColor(Color.YELLOW); // clear background<newline46mondego>            g2d2.fillRect(0, 0, 1400, 580); // again, fixed width/height only for SSCCE<newline46mondego>            g2d2.setColor(Color.BLACK);<newline46mondego><newline46mondego>            int shift = -scroll.getValue(); // here it is - get shift value<newline46mondego><newline46mondego>            g2d2.fillRect(100 + shift, 100, 20, 20); // i am ugly black sprite<newline46mondego>            g2d2.fillRect(900 + shift, 100, 20, 20); // i am other black sprite<newline46mondego>                                                     // located outside of default view<newline46mondego><newline46mondego>            g2d.drawImage(imageOfGameField, 0, 0, null);<newline46mondego><newline46mondego>            g2d2.dispose();<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        EventQueue.invokeLater(new Runnable() {<newline46mondego>            public void run() {<newline46mondego>                BufferStrategyDemo mf = new BufferStrategyDemo();<newline46mondego>                mf.setVisible(true);<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6135splitHere46","9556452splitHere46","JScrollBar"
"6136splitHere46","9556452splitHere46","Canvas"
"6137splitHere46","9556452splitHere46","Graphics"
"6138splitHere46","9556452splitHere46","BufferStrategy"
"6139splitHere46","9556452splitHere46","BuffereImage"
"6140splitHere46","9556572splitHere46","generate-sources"
"6141splitHere46","9556572splitHere46","compile"
"6142splitHere46","9556728splitHere46","BaseFont bf = BaseFont.createFont(<doubleQuotes46>arialuni.ttf<doubleQuotes46>, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);<newline46mondego><newline46mondego>Paragraph p = new Paragraph(<doubleQuotes46>Åžinasi Ä±ssÄ±z ile aÄŸaÃ§<doubleQuotes46>, new Font(bf, 22));<newline46mondego><newline46mondego>document.add(p);<newline46mondego>"
"6143splitHere46","9556748splitHere46","<bean id=<doubleQuotes46>multipartResolver<doubleQuotes46> class=<doubleQuotes46>org.springframework.web.multipart.commons.CommonsMultipartResolver<doubleQuotes46>><newline46mondego>    <!-- one of the properties available; the maximum file size in bytes --><newline46mondego>    <property name=<doubleQuotes46>maxUploadSize<doubleQuotes46> value=<doubleQuotes46>1048576000<doubleQuotes46>/><newline46mondego>    <property name=<doubleQuotes46>defaultEncoding<doubleQuotes46> value=<doubleQuotes46>UTF-8<doubleQuotes46> /><newline46mondego></bean><newline46mondego>"
"6144splitHere46","9556748splitHere46","public ModelAndView handleRequest(HttpServletRequest req, HttpServletResponse resp) throws Exception {<newline46mondego>    if (!(req instanceof MultipartHttpServletRequest)) {<newline46mondego>        error(resp, <doubleQuotes46>Invalid request (multipart request expected)<doubleQuotes46>);<newline46mondego>        return null;<newline46mondego>    }<newline46mondego>Map<String, MultipartFile> files = ((MultipartHttpServletRequest)req).getFileMap();<newline46mondego>... do thomething with the files<newline46mondego>"
"6145splitHere46","9556760splitHere46","public static void insertIntoTable(BigInteger id, SessionData sd, byte[] rtsd, IvissWorker ivissWorker) {<newline46mondego>    PreparedStatement pstmt = null;<newline46mondego>    Connection con = null;<newline46mondego>    try {<newline46mondego>        con = getConnection();<newline46mondego>        pstmt = con<newline46mondego>                .prepareStatement(<doubleQuotes46>REPLACE INTO iviss_session_table (id, ivissblob, rtblob, lastaccess) VALUES(?,?,?,?)<doubleQuotes46>);<newline46mondego>        pstmt.setLong(1, Long.parseLong(id.toString()));<newline46mondego>        pstmt.setBytes(2, IvissUtil.getBytes(sd));<newline46mondego>        pstmt.setObject(3, rtsd);<newline46mondego>        pstmt.setDate(4, new Date(System.currentTimeMillis()));<newline46mondego>        pstmt.executeUpdate();<newline46mondego>        // System.out.println(<doubleQuotes46>Stored/Replaced session with ID: <doubleQuotes46> + id +<newline46mondego>        // <doubleQuotes46> in table.<doubleQuotes46>);<newline46mondego>    } catch (SQLException e) {<newline46mondego>        ivissWorker.getIvissWorkerOutputHandler().addError(Constants.ERROR_205, <doubleQuotes46><doubleQuotes46>, DbConfiguration.getDbUri());<newline46mondego>    } catch (IOException e) {<newline46mondego>        // TODO Auto-generated catch block<newline46mondego>        e.printStackTrace();<newline46mondego>    } finally {<newline46mondego>        try {<newline46mondego>            if (pstmt != null) {<newline46mondego>                pstmt.close();<newline46mondego>            }<newline46mondego>            if (con != null) {<newline46mondego>                con.close();<newline46mondego>            }<newline46mondego>        } catch (SQLException e) {<newline46mondego>            e.printStackTrace();<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6146splitHere46","9556760splitHere46","public static byte[] getBytes(Object obj) throws java.io.IOException {<newline46mondego>    ByteArrayOutputStream bos = new ByteArrayOutputStream();<newline46mondego>    ObjectOutputStream oos = new ObjectOutputStream(bos);<newline46mondego>    oos.writeObject(obj);<newline46mondego>    oos.flush();<newline46mondego>    oos.close();<newline46mondego>    bos.close();<newline46mondego>    byte[] data = bos.toByteArray();<newline46mondego>    return data;<newline46mondego>}<newline46mondego>"
"6147splitHere46","9556821splitHere46",".zzz"
"6148splitHere46","9556821splitHere46","text/sleepytime"
"6149splitHere46","9556821splitHere46",".zzz"
"6150splitHere46","9556821splitHere46","IntegrationService"
"6151splitHere46","9556862splitHere46","import java.util.Scanner;<newline46mondego><newline46mondego>public class CurrencyExchangeClient<newline46mondego>{<newline46mondego>   public static void main(String[] args)<newline46mondego>    {<newline46mondego>       Scanner scan = new Scanner(System.in); // you shod use this scanner object for getting inputs<newline46mondego><newline46mondego><newline46mondego>        System.out.print(<doubleQuotes46>Enter a dollar amount: <doubleQuotes46>);<newline46mondego>        double dollars = scan.nextDouble(); <newline46mondego><newline46mondego>        System.out.println(<doubleQuotes46>Enter the currency to convert to (1) euro, (2) pound, (3) taka, (4) yen, (5) rupees : <doubleQuotes46>);<newline46mondego>        int response = scan.nextInt();<newline46mondego><newline46mondego>        // ...<newline46mondego>        CurrencyExchange currencyExchange = new CurrencyExchange(dollars);<newline46mondego><newline46mondego>        switch (response)<newline46mondego>        {<newline46mondego>           case 1: // modified here to get the exact results as you need.<newline46mondego>               currencyExchange.setEuro(dollars); // this will convert the entered dollar into euros<newline46mondego>               System.out.println(currencyExchange.getEuro());// this will display the result<newline46mondego>               break;<newline46mondego>           //...change all other cases accordingly<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6152splitHere46","9556981splitHere46","import java.util.*;<newline46mondego><newline46mondego>public class Test {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        Properties defaults = new Properties();<newline46mondego>        defaults.setProperty(<doubleQuotes46>x<doubleQuotes46>, <doubleQuotes46>x-default<doubleQuotes46>);<newline46mondego><newline46mondego>        Properties withDefaults = new Properties(defaults);<newline46mondego>        withDefaults.setProperty(<doubleQuotes46>x<doubleQuotes46>, <doubleQuotes46>x-new<doubleQuotes46>);<newline46mondego>        withDefaults.remove(<doubleQuotes46>x<doubleQuotes46>);<newline46mondego>        // Prints x-default<newline46mondego>        System.out.println(withDefaults.getProperty(<doubleQuotes46>x<doubleQuotes46>));<newline46mondego><newline46mondego>        Properties withCopy = new Properties();<newline46mondego>        withCopy.putAll(defaults);<newline46mondego>        withCopy.setProperty(<doubleQuotes46>x<doubleQuotes46>, <doubleQuotes46>x-new<doubleQuotes46>);<newline46mondego>        withCopy.remove(<doubleQuotes46>x<doubleQuotes46>);<newline46mondego>        // Prints null<newline46mondego>        System.out.println(withCopy.getProperty(<doubleQuotes46>x<doubleQuotes46>));<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6153splitHere46","9557060splitHere46","for (int i = 0; i < 3; i++) {<newline46mondego>        triangle.moveTo(random.nextInt(400) + 50, random.nextInt(400) + 50);<newline46mondego>        triangle.lineTo(random.nextInt(400) + 50, random.nextInt(400) + 50);<newline46mondego>        triangle.lineTo(random.nextInt(400) + 50, random.nextInt(400) + 50);<newline46mondego>        triangle.closePath();<newline46mondego>        area.add(new Area(triangle));<newline46mondego>    }       <newline46mondego>"
"6154splitHere46","9557060splitHere46","for (int i = 0; i < 3; i++) {<newline46mondego>        triangle.moveTo(random.nextInt(400) + 50, random.nextInt(400) + 50);<newline46mondego>        triangle.lineTo(random.nextInt(400) + 50, random.nextInt(400) + 50);<newline46mondego>        triangle.lineTo(random.nextInt(400) + 50, random.nextInt(400) + 50);<newline46mondego>        triangle.closePath();<newline46mondego>        area.add(new Area(triangle));<newline46mondego>        triangle.reset();<newline46mondego>    }    <newline46mondego>"
"6155splitHere46","9557134splitHere46","public ClassA{<newline46mondego>   ClassB Child;<newline46mondego>}<newline46mondego><newline46mondego>public ClassB{<newline46mondego>   ClassA parent;<newline46mondego>   String data;<newline46mondego>}<newline46mondego>"
"6156splitHere46","9557134splitHere46","Person"
"6157splitHere46","9557134splitHere46","Address"
"6158splitHere46","9557257splitHere46","UserObject"
"6159splitHere46","9557257splitHere46","DefaultMutableTreeNode theNode = null;<newline46mondego>for (Enumeration e = root.depthFirstEnumeration(); e.hasMoreElements() && theNode == null;) {<newline46mondego>    DefaultMutableTreeNode node = (DefaultMutableTreeNode) e.nextElement();<newline46mondego>    if (whatIWantIs(node.getUserObject)) {<newline46mondego>        theNode = node;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6160splitHere46","9557318splitHere46","String changeString(String s)<newline46mondego>{<newline46mondego>   char[] characters = s.toCharArray();<newline46mondego>   int rand = (int)(Math.random() * s.length());<newline46mondego>   characters[rand] = '_';<newline46mondego>   return new String(characters);<newline46mondego>}<newline46mondego>"
"6161splitHere46","9557353splitHere46","finalize"
"6162splitHere46","9557353splitHere46","finalize"
"6163splitHere46","9557353splitHere46","finalize"
"6164splitHere46","9557353splitHere46","finalize"
"6165splitHere46","9557353splitHere46","finalize"
"6166splitHere46","9557377splitHere46","public static <T> T peekNext(ListIterator<T> iterator) {<newline46mondego>  T next = iterator.next();<newline46mondego>  iterator.previous();<newline46mondego>  return next;<newline46mondego>}<newline46mondego><newline46mondego>public static <T> T peekPrevious(ListIterator<T> iterator) {<newline46mondego>  T previous = iterator.previous();<newline46mondego>  iterator.next();<newline46mondego>  return previous;<newline46mondego>}<newline46mondego>"
"6167splitHere46","9557378splitHere46","onCreate"
"6168splitHere46","9557378splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>utf-8<doubleQuotes46>?><newline46mondego><LinearLayout xmlns:android=<doubleQuotes46>http://schemas.android.com/apk/res/android<doubleQuotes46><newline46mondego>    android:layout_width=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>    android:layout_height=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>    android:orientation=<doubleQuotes46>vertical<doubleQuotes46> ><newline46mondego>     <Button<newline46mondego>        android:id=<doubleQuotes46>@+id/button1<doubleQuotes46><newline46mondego>        android:layout_width=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>        android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>        android:text=<doubleQuotes46>Button1<doubleQuotes46> /><newline46mondego>      <Button<newline46mondego>        android:id=<doubleQuotes46>@+id/button10<doubleQuotes46><newline46mondego>        android:layout_width=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>        android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>        android:text=<doubleQuotes46>Button10<doubleQuotes46> /><newline46mondego></LinearLayout><newline46mondego>"
"6169splitHere46","9557378splitHere46","public void onCreate(Bundle savedInstanceState) {<newline46mondego>        super.onCreate(savedInstanceState);<newline46mondego>        setContentView(R.layout.main);<newline46mondego>        Button wg1 = (Button) findViewById(R.id.button1);<newline46mondego>        wg1.setOnClickListener(new View.OnClickListener() {<newline46mondego>            public void onClick(View view) {<newline46mondego>                Intent myIntent = new Intent(IzzynActivity.this, notes.class);<newline46mondego>                IzzynActivity.this.startActivity(myIntent);<newline46mondego>            }<newline46mondego>        });<newline46mondego>        Button wg10 = (Button) findViewById(R.id.button10);<newline46mondego>                wg10.setOnClickListener(new View.OnClickListener() {<newline46mondego>                    public void onClick(View view) {<newline46mondego>                        Intent intent = new Intent(IzzynActivity.this, calculator.class);<newline46mondego>                        setResult(RESULT_OK, intent);<newline46mondego>                        finish();<newline46mondego>                    }<newline46mondego>        });<newline46mondego>"
"6170splitHere46","9557483splitHere46","use(groovy.time.TimeCategory) {<newline46mondego>    def today = new Date()<newline46mondego>    println today<newline46mondego>    12.times { i -><newline46mondego>        println today - (i+1).months<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6171splitHere46","9557692splitHere46","g.drawOval(xPos, yPos, 2, 2);<newline46mondego>"
"6172splitHere46","9557692splitHere46","for (int j = 0; j < maxPointCount; j++) {<newline46mondego>     x = someMethodToGetX(j);<newline46mondego>     y = someMethodToGetY(j);<newline46mondego>     double balance = PanelHeight - ((((double) y / maxY) * <newline46mondego>           Y_AXIS_LENGTH) + Y_AXIS_OFFSET);<newline46mondego>     double weeks = (((double) x / maxX) * X_AXIS_LENGTH) + <newline46mondego>           X_AXIS_OFFSET;<newline46mondego><newline46mondego>     int xPos = (int) Math.round(weeks);<newline46mondego>     int yPos = (int) Math.round(balance); <newline46mondego><newline46mondego>     g2.setColor(Color.RED);<newline46mondego>     g.drawOval(xPos, yPos, 2, 2);<newline46mondego>  }<newline46mondego>"
"6173splitHere46","9557692splitHere46","import java.awt.BasicStroke;<newline46mondego>import java.awt.Color;<newline46mondego>import java.awt.Dimension;<newline46mondego>import java.awt.Graphics;<newline46mondego>import java.awt.Graphics2D;<newline46mondego>import java.awt.RenderingHints;<newline46mondego>import java.awt.Stroke;<newline46mondego>import java.awt.event.*;<newline46mondego>import java.awt.geom.Point2D;<newline46mondego>import java.util.ArrayList;<newline46mondego>import java.util.List;<newline46mondego>import javax.swing.*;<newline46mondego><newline46mondego>public class TestShowGraph {<newline46mondego>   private static final int MAX_POINTS = 30;<newline46mondego>   private static final int TIMER_DELAY = 800;<newline46mondego><newline46mondego>   private static void createAndShowGui() {<newline46mondego>      ShowGraph showGraphPanel = new ShowGraph(MAX_POINTS);<newline46mondego>      TimerListener timerListener = new TimerListener(MAX_POINTS, showGraphPanel);<newline46mondego><newline46mondego>      JFrame frame = new JFrame(<doubleQuotes46>TestShowGraph<doubleQuotes46>);<newline46mondego>      frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>      frame.getContentPane().add(showGraphPanel);<newline46mondego>      frame.pack();<newline46mondego>      frame.setLocationByPlatform(true);<newline46mondego>      frame.setVisible(true);<newline46mondego><newline46mondego>      new Timer(TIMER_DELAY, timerListener).start();<newline46mondego>   }<newline46mondego><newline46mondego>   public static void main(String[] args) {<newline46mondego>      SwingUtilities.invokeLater(new Runnable() {<newline46mondego>         public void run() {<newline46mondego>            createAndShowGui();<newline46mondego>         }<newline46mondego>      });<newline46mondego>   }  <newline46mondego>}<newline46mondego><newline46mondego>class TimerListener implements ActionListener {<newline46mondego>   private static final double EXP_MULTIPLIER = 0.2;<newline46mondego><newline46mondego>   // array of points created in constructor to hold data that<newline46mondego>   // will eventually be displayed in real time.<newline46mondego>   // A Swing Timer will copy a point into the pointsList above. <newline46mondego>   private Point2D[] initPoints;<newline46mondego><newline46mondego>   private int maxPoints;<newline46mondego>   private int count = 0;<newline46mondego>   private ShowGraph showGraph;<newline46mondego><newline46mondego>   public TimerListener(int maxPoints, ShowGraph showGraph) {<newline46mondego>      initPoints = new Point2D[maxPoints];<newline46mondego>      this.maxPoints = maxPoints;<newline46mondego>      this.showGraph = showGraph;<newline46mondego><newline46mondego>      // create all data points that will eventually be <newline46mondego>      // graphed. This is to simulate real-time data collection<newline46mondego>      for (int i = 0; i < initPoints.length; i++) {<newline46mondego>         double x = (double) i / initPoints.length;<newline46mondego>         double y = 1.0 - Math.exp(-1.0 * i * EXP_MULTIPLIER);        <newline46mondego>         initPoints[i] = new Point2D.Double(x, y);<newline46mondego>      }<newline46mondego>   }<newline46mondego><newline46mondego>   public void actionPerformed(ActionEvent e) {<newline46mondego>      if (count < maxPoints) {<newline46mondego>         // simply push data from initPoints into the list that will<newline46mondego>         // be used to draw the graph<newline46mondego>         showGraph.addPoint(initPoints[count]);<newline46mondego>         count++;<newline46mondego>      } else {<newline46mondego>         // unless we've run out of points. Then simply start over<newline46mondego>         count = 0;<newline46mondego>         showGraph.clearPointsList();<newline46mondego>      }<newline46mondego><newline46mondego>      // repaint so that the GUI will show the points<newline46mondego>      showGraph.repaint();<newline46mondego>   }<newline46mondego>}<newline46mondego><newline46mondego>@SuppressWarnings(<doubleQuotes46>serial<doubleQuotes46>)<newline46mondego>class ShowGraph extends JPanel {<newline46mondego><newline46mondego>   private static final int PREF_W = 800;<newline46mondego>   private static final int PREF_H = 600;<newline46mondego>   private static final int BORDER_GAP = 50;<newline46mondego>   private static final Color AXIS_COLOR = Color.blue;<newline46mondego>   private static final Color POINTS_COLOR = Color.red;<newline46mondego>   private static final Color BACKGRND_COLOR = Color.white;<newline46mondego>   private static final Stroke AXIS_STROKE = new BasicStroke(3f);<newline46mondego>   private static final Stroke POINTS_STROKE = new BasicStroke(2f);<newline46mondego>   private static final double X_SCALE = PREF_W - 2 * BORDER_GAP;<newline46mondego>   private static final double Y_SCALE = PREF_H - 2 * BORDER_GAP;<newline46mondego>   private static final int POINT_RADIUS = 3;<newline46mondego><newline46mondego>   // list that the paintComponent method loops through to<newline46mondego>   // draw points<newline46mondego>   private List<Point2D> pointsList = new ArrayList<Point2D>();<newline46mondego><newline46mondego><newline46mondego>   public ShowGraph(int maxPoints) {<newline46mondego>      setBackground(BACKGRND_COLOR);<newline46mondego>   }<newline46mondego><newline46mondego>   public void addPoint(Point2D point2d) {<newline46mondego>      pointsList.add(point2d);<newline46mondego>   }<newline46mondego><newline46mondego>   public void clearPointsList() {<newline46mondego>      pointsList.clear();<newline46mondego>   }<newline46mondego><newline46mondego>   @Override<newline46mondego>   protected void paintComponent(Graphics g) {<newline46mondego>      super.paintComponent(g);<newline46mondego>      Graphics2D g2 = (Graphics2D) g;<newline46mondego>      g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, <newline46mondego>            RenderingHints.VALUE_ANTIALIAS_ON);<newline46mondego>      drawAxises(g2);<newline46mondego>      drawPoints(g2);<newline46mondego>   }<newline46mondego><newline46mondego>   private void drawAxises(Graphics g2) {<newline46mondego>      // derive a Graphics2D object from the one provided by the <newline46mondego>      // JVM so we can change settings on it without effecting <newline46mondego>      // the Graphics object provided by the JVM<newline46mondego>      Graphics2D g2Axises = (Graphics2D) g2.create();<newline46mondego>      g2Axises.setStroke(AXIS_STROKE);<newline46mondego>      g2Axises.setColor(AXIS_COLOR);<newline46mondego>      int x1XAxis = BORDER_GAP;<newline46mondego>      int y1XAxis = PREF_H - BORDER_GAP;<newline46mondego>      int x2XAxis = PREF_W - BORDER_GAP;<newline46mondego>      int y2XAxis = PREF_H - BORDER_GAP;<newline46mondego>      g2Axises.drawLine(x1XAxis, y1XAxis, x2XAxis, y2XAxis);<newline46mondego>      int x1YAxis = BORDER_GAP;<newline46mondego>      int y1YAxis = BORDER_GAP;<newline46mondego>      int x2YAxis = BORDER_GAP;<newline46mondego>      int y2YAxis = PREF_H - BORDER_GAP;<newline46mondego>      g2Axises.drawLine(x1YAxis, y1YAxis, x2YAxis, y2YAxis);<newline46mondego>      g2Axises.dispose(); // because we derived this we must dispose it<newline46mondego>   }<newline46mondego><newline46mondego>   private void drawPoints(Graphics2D g2) {<newline46mondego>      Graphics2D g2Points = (Graphics2D) g2.create();<newline46mondego>      g2Points.setStroke(POINTS_STROKE);<newline46mondego>      g2Points.setColor(POINTS_COLOR); <newline46mondego><newline46mondego>      for (Point2D p : pointsList) {<newline46mondego>         // p points hold data between 0 and 1<newline46mondego>         // we must scale our points to fit the display<newline46mondego>         // before displaying them<newline46mondego>         int pX = (int)(X_SCALE * p.getX()) + BORDER_GAP;<newline46mondego>         int pY = PREF_H - (int)(Y_SCALE * p.getY()) - BORDER_GAP;<newline46mondego><newline46mondego>         // displayed the scaled points<newline46mondego>         int radius = POINT_RADIUS;<newline46mondego>         g2Points.drawOval(pX - radius, pY - radius, 2 * radius, 2 * radius);<newline46mondego>      }<newline46mondego>   }<newline46mondego><newline46mondego>   @Override<newline46mondego>   public Dimension getPreferredSize() {<newline46mondego>      return new Dimension(PREF_W, PREF_H);<newline46mondego>   }<newline46mondego><newline46mondego>}<newline46mondego>"
"6174splitHere46","9557695splitHere46","import java.awt.*;<newline46mondego>import java.awt.image.*;<newline46mondego>import java.net.*;<newline46mondego>import javax.swing.*;<newline46mondego>import javax.swing.plaf.basic.*;<newline46mondego>class MainPanel {<newline46mondego>  public JComponent makeUI() {<newline46mondego>    JComboBox combo = new JComboBox();<newline46mondego>    URL url1 = getClass().getResource(<doubleQuotes46>static.png<doubleQuotes46>);<newline46mondego>    URL url2 = getClass().getResource(<doubleQuotes46>animated.gif<doubleQuotes46>);<newline46mondego>    combo.setModel(new DefaultComboBoxModel(new Object[] {<newline46mondego>      new ImageIcon(url1), makeImageIcon(url2, combo, 1)<newline46mondego>    }));<newline46mondego>    JPanel p = new JPanel();<newline46mondego>    p.add(combo);<newline46mondego>    return p;<newline46mondego>  }<newline46mondego>  private static ImageIcon makeImageIcon(<newline46mondego>      URL url, final JComboBox combo, final int row) {<newline46mondego>    ImageIcon icon = new ImageIcon(url);<newline46mondego>    icon.setImageObserver(new ImageObserver() {<newline46mondego>      //http://www2.gol.com/users/tame/swing/examples/SwingExamples.html<newline46mondego>      //AnimatedIconTableExample.java<newline46mondego>      @Override public boolean imageUpdate(<newline46mondego>          Image img, int infoflags, int x, int y, int w, int h) {<newline46mondego>        if(combo.isShowing() && (infoflags & (FRAMEBITS|ALLBITS)) != 0) {<newline46mondego>          if(combo.getSelectedIndex()==row) {<newline46mondego>            combo.repaint();<newline46mondego>          }<newline46mondego>          BasicComboPopup p = (BasicComboPopup)<newline46mondego>            combo.getAccessibleContext().getAccessibleChild(0);<newline46mondego>          JList list = p.getList();<newline46mondego>          if(list.isShowing()) {<newline46mondego>            list.repaint(list.getCellBounds(row, row));<newline46mondego>          }<newline46mondego>        }<newline46mondego>        return (infoflags & (ALLBITS|ABORT)) == 0;<newline46mondego>      };<newline46mondego>    });<newline46mondego>    return icon;<newline46mondego>  }<newline46mondego>  public static void main(String[] args) {<newline46mondego>    EventQueue.invokeLater(new Runnable() {<newline46mondego>      @Override public void run() {<newline46mondego>        createAndShowGUI();<newline46mondego>      }<newline46mondego>    });<newline46mondego>  }<newline46mondego>  public static void createAndShowGUI() {<newline46mondego>    JFrame f = new JFrame();<newline46mondego>    f.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);<newline46mondego>    f.getContentPane().add(new MainPanel().makeUI());<newline46mondego>    f.setSize(320, 240);<newline46mondego>    f.setLocationRelativeTo(null);<newline46mondego>    f.setVisible(true);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"6175splitHere46","9557948splitHere46","byte[] originalData = ...<newline46mondego>String base64 = Base64.encode(myByteArray);<newline46mondego>byte[] decoded = Base64.decode(base64);<newline46mondego>"
"6176splitHere46","9557948splitHere46","byte[] encodedText = text.getBytes(<doubleQuotes46>utf-8<doubleQuotes46>);<newline46mondego>"
"6177splitHere46","9558005splitHere46","@Override <newline46mondego>public InputConnection onCreateInputConnection(EditorInfo outAttrs) { <newline46mondego>    return new MyInputConnection(this, surfaceView, false);    <newline46mondego>}<newline46mondego>"
"6178splitHere46","9558005splitHere46","class MyInputConnection extends BaseInputConnection{<newline46mondego><newline46mondego>    private MyActivity activity;<newline46mondego><newline46mondego>    public MyInputConnection(MyActivity activity, View targetView, boolean fullEditor)<newline46mondego>    {<newline46mondego>       super( targetView, fullEditor );<newline46mondego>       mActivity = activity;<newline46mondego>    }<newline46mondego><newline46mondego>    public boolean commitText(CharSequence text, int newCursorPosition){ <newline46mondego>        myActivity.drawText((String) text); <newline46mondego>        return true; <newline46mondego>    } <newline46mondego>"
"6179splitHere46","9558080splitHere46","for (int i = 1; i <= matcher.groupCount(); i++) {<newline46mondego>"
"6180splitHere46","9558112splitHere46","public double average()<newline46mondego>{<newline46mondego>     double average = 0.0;<newline46mondego>     for (int i = 0; i < people.size(); i++)  {<newline46mondego>         average += people.get(i).getMark() ; <newline46mondego>     }<newline46mondego>     return average/people.size();<newline46mondego> }<newline46mondego>"
"6181splitHere46","9558306splitHere46","Button plusButton = (Button) findViewById(R.id.plusbutton);<newline46mondego>            Button minusButton = (Button) findViewById(R.id.minusbutton);<newline46mondego>            Button prodButton = (Button) findViewById(R.id.prodbutton);<newline46mondego>            Button divButton = (Button) findViewById(R.id.divbutton);<newline46mondego>            Button equalButton = (Button) findViewById(R.id.equalbutton);<newline46mondego>"
"6182splitHere46","9558349splitHere46","public static int summation(int lower, int upper){<newline46mondego>    if (lower > upper) {<newline46mondego>        System.out.println(<doubleQuotes46>Returning: 0<doubleQuotes46>);               // print before return<newline46mondego>        return 0;<newline46mondego>    } else{<newline46mondego>        int result = lower + summation(lower+1, upper);<newline46mondego><newline46mondego>        System.out.println(<doubleQuotes46>Current lower bound: <doubleQuotes46> + lower);<newline46mondego>        System.out.println(<doubleQuotes46>Upper bound: <doubleQuotes46> + upper);<newline46mondego>        System.out.println(<doubleQuotes46>Returning: <doubleQuotes46> + result);       // print before return<newline46mondego>        return result;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6183splitHere46","9558409splitHere46","nameOfArray.get(row)[col] = ...;<newline46mondego>"
"6184splitHere46","9558409splitHere46","col"
"6185splitHere46","9558409splitHere46","row"
"6186splitHere46","9558409splitHere46","nameOfArray"
"6187splitHere46","9558409splitHere46","nameOfArray"
"6188splitHere46","9558409splitHere46","row"
"6189splitHere46","9558409splitHere46","nameOfArray.set(row, new Object[]);<newline46mondego>"
"6190splitHere46","9558409splitHere46","row"
"6191splitHere46","9558409splitHere46","nameOfArray"
"6192splitHere46","9558409splitHere46","ArrayList.set()"
"6193splitHere46","9558432splitHere46","j_spring_security_check"
"6194splitHere46","9558432splitHere46","createRequestCallback(RequestTransport.TransportReceiver receiver)"
"6195splitHere46","9558432splitHere46","j_spring_security_check"
"6196splitHere46","9558484splitHere46","Forms"
"6197splitHere46","9558484splitHere46","StateMachine"
"6198splitHere46","9558484splitHere46","StateMachine"
"6199splitHere46","9558484splitHere46","Form"
"6200splitHere46","9558484splitHere46","StateMachine"
"6201splitHere46","9558484splitHere46","beforeCustomGUIForm"
"6202splitHere46","9558484splitHere46","postCustomGUIForm"
"6203splitHere46","9558484splitHere46","exitGUIForm"
"6204splitHere46","9558484splitHere46","Form"
"6205splitHere46","9558484splitHere46","StateMachine"
"6206splitHere46","9558484splitHere46","StateMachine"
"6207splitHere46","9558508splitHere46","java -classpath .:pack.jar ClassName"
"6208splitHere46","9558625splitHere46","ZipFile"
"6209splitHere46","9558625splitHere46","ZipOutputStream"
"6210splitHere46","9558729splitHere46","BufferedImage[] bImg; <newline46mondego>"
"6211splitHere46","9558729splitHere46","BufferedImage[] bImg = new     BufferedImage[MAX_IMG_COUNT]; <newline46mondego>"
"6212splitHere46","9558820splitHere46","length()"
"6213splitHere46","9558872splitHere46","LinkedHashMap"
"6214splitHere46","9558872splitHere46","ImmutableMap"
"6215splitHere46","9558898splitHere46","public class MyClass {<newline46mondego>    private int value;<newline46mondego>    public int getValue() {<newline46mondego>        return value;<newline46mondego>    }<newline46mondego>    public int setValue(int val) {<newline46mondego>        value = val;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6216splitHere46","9558898splitHere46","public class MyClass {<newline46mondego>    public int value;<newline46mondego>}<newline46mondego>"
"6217splitHere46","9558898splitHere46","MyClass"
"6218splitHere46","9558898splitHere46","MyClass"
"6219splitHere46","9558898splitHere46","MyClass"
"6220splitHere46","9558898splitHere46","value"
"6221splitHere46","9558898splitHere46","value"
"6222splitHere46","9558898splitHere46","getValue()"
"6223splitHere46","9558898splitHere46","setValue(int)"
"6224splitHere46","9558898splitHere46","value"
"6225splitHere46","9558924splitHere46","Package[] pa = Package.getPackages();<newline46mondego>for (int i = 0; i < pa.length; i++) {<newline46mondego>    Package p = pa[i];<newline46mondego>    System.out.print(<doubleQuotes46>\<doubleQuotes46><doubleQuotes46> + p.getName() + <doubleQuotes46>\<doubleQuotes46>, <doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"6226splitHere46","9558924splitHere46","String[] systemPackages = new String[]{<all names of the packages>};<newline46mondego>Package[] pa = Package.getPackages();<newline46mondego>int n = 0;<newline46mondego><newline46mondego>for (int i = 0; i < pa.length; i++) {<newline46mondego>    Package p = pa[i];<newline46mondego>    boolean isSystemPackage = false;<newline46mondego>    String pname = p.getName();<newline46mondego>    for (int j = 0; j < systemPackages.length; j++) {<newline46mondego>        String spname = systemPackages[j];<newline46mondego>        if (pname.equals(spname)) {<newline46mondego>            isSystemPackage = true;<newline46mondego>            systemPackages[j] = null;<newline46mondego>            break;<newline46mondego>        }<newline46mondego>    }<newline46mondego>    if (!isSystemPackage) {<newline46mondego>        n++;<newline46mondego>    } else {<newline46mondego>        pa[i] = null;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>Package[] projectPackages = new Package[n];<newline46mondego>for (int i = 0, j = 0; i < pa.length; i++) {<newline46mondego>    Package p = pa[i];<newline46mondego>    if (p != null) {<newline46mondego>        projectPackages[j] = p;<newline46mondego>        j++;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6227splitHere46","9559023splitHere46","getParent()"
"6228splitHere46","9559023splitHere46","node"
"6229splitHere46","9559023splitHere46","null"
"6230splitHere46","9559023splitHere46","node"
"6231splitHere46","9559023splitHere46","node.getIndex(node.getParent())"
"6232splitHere46","9559023splitHere46","DefaultMutableTreeNode.getNextNode()"
"6233splitHere46","9559023splitHere46","DefaultMutableTreeNode.PreorderEnumeration"
"6234splitHere46","9559023splitHere46","{ node, treeDepth, siblingIndex }"
"6235splitHere46","9559031splitHere46","output = output + encodedBytes[i] * multiplier;<newline46mondego>"
"6236splitHere46","9559031splitHere46","output = output + encodedBytes[i] * Multiplyer;<newline46mondego>"
"6237splitHere46","9559031splitHere46","encodedBytes[i]"
"6238splitHere46","9559031splitHere46","byte"
"6239splitHere46","9559031splitHere46","long"
"6240splitHere46","9559031splitHere46","Int64"
"6241splitHere46","9559031splitHere46","byte"
"6242splitHere46","9559031splitHere46","-128"
"6243splitHere46","9559031splitHere46","127"
"6244splitHere46","9559031splitHere46","0"
"6245splitHere46","9559031splitHere46","255"
"6246splitHere46","9559031splitHere46","encodedBytes[i]"
"6247splitHere46","9559031splitHere46","B2"
"6248splitHere46","9559031splitHere46","1011 0010"
"6249splitHere46","9559031splitHere46","output = output + ((encodedBytes[i] + 256) % 256) * multiplier;<newline46mondego>"
"6250splitHere46","9559043splitHere46","// Flip the image vertically<newline46mondego>AffineTransform tx = AffineTransform.getScaleInstance(1, -1);<newline46mondego>tx.translate(0, -image.getHeight(null));<newline46mondego>AffineTransformOp op = new AffineTransformOp(tx, AffineTransformOp.TYPE_NEAREST_NEIGHBOR);<newline46mondego>image = op.filter(image, null);<newline46mondego><newline46mondego><newline46mondego>// Flip the image horizontally<newline46mondego>tx = AffineTransform.getScaleInstance(-1, 1);<newline46mondego>tx.translate(-image.getWidth(null), 0);<newline46mondego>op = new AffineTransformOp(tx, AffineTransformOp.TYPE_NEAREST_NEIGHBOR);<newline46mondego>image = op.filter(image, null);<newline46mondego><newline46mondego>// Flip the image vertically and horizontally; equivalent to rotating the image 180 degrees<newline46mondego>tx = AffineTransform.getScaleInstance(-1, -1);<newline46mondego>tx.translate(-image.getWidth(null), -image.getHeight(null));<newline46mondego>op = new AffineTransformOp(tx, AffineTransformOp.TYPE_NEAREST_NEIGHBOR);<newline46mondego>image = op.filter(image, null);<newline46mondego>"
"6251splitHere46","9559088splitHere46","public static Rooms[] rooms = new Rooms[4];<newline46mondego>"
"6252splitHere46","9559088splitHere46","main()"
"6253splitHere46","9559088splitHere46","public class MasterControlPanel {<newline46mondego>    public static Rooms[] rooms = new Rooms[4];<newline46mondego>    public static void main(String[] args) {<newline46mondego>    ...<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6254splitHere46","9559088splitHere46","rooms"
"6255splitHere46","9559088splitHere46","MasterControlPanel"
"6256splitHere46","9559088splitHere46","Class"
"6257splitHere46","9559088splitHere46","Rooms[] rooms = new Rooms[4];"
"6258splitHere46","9559088splitHere46","Type"
"6259splitHere46","9559088splitHere46","rooms"
"6260splitHere46","9559088splitHere46","ArrayIndexOutOfBounds"
"6261splitHere46","9559088splitHere46","private"
"6262splitHere46","9559088splitHere46","public"
"6263splitHere46","9559088splitHere46","protected"
"6264splitHere46","9559088splitHere46","private"
"6265splitHere46","9559088splitHere46","n"
"6266splitHere46","9559088splitHere46","n"
"6267splitHere46","9559088splitHere46","for"
"6268splitHere46","9559088splitHere46","n-1"
"6269splitHere46","9559088splitHere46","4"
"6270splitHere46","9559088splitHere46","4"
"6271splitHere46","9559088splitHere46","public class MasterControlPanel {<newline46mondego>    public static Room[] rooms = new Room[4];<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego><newline46mondego>        rooms[0] = new Room(<doubleQuotes46>Room U<doubleQuotes46>, 1, 4, 4);<newline46mondego>        rooms[1] = new Room(<doubleQuotes46>Room U<doubleQuotes46>, 2, 4, 4);<newline46mondego>        rooms[2] = new Room(<doubleQuotes46>Connector X<doubleQuotes46>, 3, 2, 4);<newline46mondego>        rooms[3] = new Room(<doubleQuotes46>Connector U<doubleQuotes46>, 4, 2, 4);<newline46mondego><newline46mondego>        for (int x = 0; x <= rooms.length-1; x++) {<newline46mondego>            rooms[x].createLights();<newline46mondego>            rooms[x].createWalls();<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public static Room retrieveRoom(int connectedRoom) {<newline46mondego>        connectedRoom -= 1;<newline46mondego>        return rooms[connectedRoom];<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>class Room {<newline46mondego>    // These are instance members for Room class<newline46mondego>    private String roomString;<newline46mondego>    private int roomInteger1, roomInteger2, roomInteger3;<newline46mondego><newline46mondego>    public Room(String string, int integer1, int integer2, int integer3) {<newline46mondego>        // This is the constructor for Room object<newline46mondego>        this.roomString = string;<newline46mondego>        this.roomInteger1 = integer1;<newline46mondego>        this.roomInteger2 = integer2;<newline46mondego>        this.roomInteger3 = integer3;<newline46mondego>    }<newline46mondego><newline46mondego>    public void createLights() {<newline46mondego>        // This method creates lights<newline46mondego>    }<newline46mondego><newline46mondego>    public void createWalls() {<newline46mondego>        // This method creates walls<newline46mondego>    }<newline46mondego><newline46mondego>    // These are Getters and Setters for Room members<newline46mondego>    public String getRoomString() {<newline46mondego>        return roomString;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setRoomString(String roomString) {<newline46mondego>        this.roomString = roomString;<newline46mondego>    }<newline46mondego><newline46mondego>    public int getRoomInteger1() {<newline46mondego>        return roomInteger1;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setRoomInteger1(int roomInteger1) {<newline46mondego>        this.roomInteger1 = roomInteger1;<newline46mondego>    }<newline46mondego><newline46mondego>    public int getRoomInteger2() {<newline46mondego>        return roomInteger2;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setRoomInteger2(int roomInteger2) {<newline46mondego>        this.roomInteger2 = roomInteger2;<newline46mondego>    }<newline46mondego><newline46mondego>    public int getRoomInteger3() {<newline46mondego>        return roomInteger3;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setRoomInteger3(int roomInteger3) {<newline46mondego>        this.roomInteger3 = roomInteger3;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6272splitHere46","9559095splitHere46","try {<newline46mondego>   FileOutputStream out = new FileOutputStream(file);<newline46mondego>   try {<newline46mondego>       FileChannel ch = out.getChannel();<newline46mondego>       ch.position(offset);<newline46mondego>       ch.write(ByteBuffer.wrap(data));<newline46mondego>   } finally {<newline46mondego>       out.close();<newline46mondego>   } <newline46mondego>} catch (IOException ex) {<newline46mondego>    // handle error<newline46mondego>}<newline46mondego>"
"6273splitHere46","9559121splitHere46","<f:attribute>"
"6274splitHere46","9559121splitHere46","UIComponent"
"6275splitHere46","9559121splitHere46","<h:inputText id=<doubleQuotes46>myinputtext<doubleQuotes46> value=<doubleQuotes46>#{cc.attrs.item}<doubleQuotes46>><newline46mondego>    <f:attribute name=<doubleQuotes46>minimum<doubleQuotes46> value=<doubleQuotes46>#{cc.attrs.minimum}<doubleQuotes46>/><newline46mondego>    <f:attribute name=<doubleQuotes46>maximum<doubleQuotes46> value=<doubleQuotes46>#{cc.attrs.maximum}<doubleQuotes46>/><newline46mondego></h:inputText><newline46mondego>"
"6276splitHere46","9559121splitHere46","UIComponent#getCompositeComponentParent()"
"6277splitHere46","9559121splitHere46","Object getCompositeParentAttribute(UIComponent component, String name) {<newline46mondego>    UIComponent composite = UIComponent.getCompositeComponentParent(component);<newline46mondego>    return composite.getAttributes().get(name);<newline46mondego>}<newline46mondego>"
"6278splitHere46","9559121splitHere46","<ui:decorate>"
"6279splitHere46","9559121splitHere46","<my:inputDouble value=<doubleQuotes46>...<doubleQuotes46> min=<doubleQuotes46>...<doubleQuotes46> max=<doubleQuotes46>...<doubleQuotes46> /><newline46mondego>"
"6280splitHere46","9559121splitHere46","<cc:implementation><newline46mondego>    <ui:decorate template=<doubleQuotes46>/WEB-INF/templates/someCommonTemplate.xhtml<doubleQuotes46>><newline46mondego>        <ui:define name=<doubleQuotes46>input<doubleQuotes46>><newline46mondego>            <h:inputText id=<doubleQuotes46>myinput<doubleQuotes46> value=<doubleQuotes46>#{cc.attrs.value}<doubleQuotes46>><newline46mondego>                <f:convertNumber minFractionDigits=<doubleQuotes46>2<doubleQuotes46> /><newline46mondego>                <f:validator validatorId=<doubleQuotes46>bindableDoubleRangeValidator<doubleQuotes46>/><newline46mondego>                <f:attribute name=<doubleQuotes46>minimum<doubleQuotes46> value=<doubleQuotes46>#{cc.attrs.min}<doubleQuotes46>/><newline46mondego>                <f:attribute name=<doubleQuotes46>maximum<doubleQuotes46> value=<doubleQuotes46>#{cc.attrs.max}<doubleQuotes46>/><newline46mondego>            </h:inputText><newline46mondego>        </ui:define><newline46mondego>    </ui:decorate><newline46mondego></cc:implementation><newline46mondego>"
"6281splitHere46","9559172splitHere46","((ArrayList) BoostList.get(Container)).add(GarbageList);<newline46mondego>"
"6282splitHere46","9559236splitHere46","gf-client-module.jar"
"6283splitHere46","9559236splitHere46","imqjmsra.jar"
"6284splitHere46","9559236splitHere46","imqbroker.jar"
"6285splitHere46","9559326splitHere46","public class MainApp {<newline46mondego>    public static void main(String... args) {<newline46mondego>        EventQueue.invokeLater(<newline46mondego>            new Runnable() {<newline46mondego>                @Override<newline46mondego>                public void run() {<newline46mondego>                    JFrame frame= new YourFrame();<newline46mondego>                    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>                    frame.setVisible(true);<newline46mondego>                }<newline46mondego>            }<newline46mondego>        );<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class YourFrame () extends JFrame implements ActionListener{<newline46mondego>    public YourFrame() {<newline46mondego>    }<newline46mondego><newline46mondego>    public void showGUI(BufferedImage img){<newline46mondego>    }<newline46mondego><newline46mondego>    private void add(JButtob button) {<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6286splitHere46","9559414splitHere46","String query = <doubleQuotes46>SELECT * FROM Table1 WHERE 1=1<doubleQuotes46>;<newline46mondego><newline46mondego>if (Field1Var != Value1) {<newline46mondego>    query += <doubleQuotes46> AND Field1 = ? <doubleQuotes46>;<newline46mondego>}<newline46mondego><newline46mondego>if (Field2Var != Value2) {<newline46mondego>    query += <doubleQuotes46> AND Field2 = ? <doubleQuotes46>;<newline46mondego>}<newline46mondego><newline46mondego>if (Field3Var != Value3) {<newline46mondego>    query += <doubleQuotes46> AND Field3 = ? <doubleQuotes46>;<newline46mondego>}<newline46mondego><newline46mondego>PreparedStatement s = conn.prepareStatement(query); <newline46mondego><newline46mondego>int i = 0;<newline46mondego><newline46mondego>if (Field1Var != Value1) {<newline46mondego>    s.setString(++i, Field1Var);<newline46mondego>}<newline46mondego><newline46mondego>if (Field2Var != Value2) {<newline46mondego>    s.setString(++i, Field2Var);<newline46mondego>}<newline46mondego><newline46mondego>if (Field3Var != Value3) {<newline46mondego>    s.setString(++i, Field3Var);<newline46mondego>}<newline46mondego>"
"6287splitHere46","9559524splitHere46","int b;<newline46mondego>while ((b = stream.read()) != -1)<newline46mondego>{<newline46mondego>    data[length++] = (byte) b;<newline46mondego>}<newline46mondego>"
"6288splitHere46","9559544splitHere46","JList"
"6289splitHere46","9559611splitHere46","\uXXXX"
"6290splitHere46","9559611splitHere46","native2ascii"
"6291splitHere46","9559611splitHere46","/bin"
"6292splitHere46","9559611splitHere46","native2ascii -encoding UTF-8 some.properties.utf8 some.properties<newline46mondego>"
"6293splitHere46","9559611splitHere46","some.properties.utf8"
"6294splitHere46","9559611splitHere46","some.properties"
"6295splitHere46","9559611splitHere46","some.key = é€™å°?ä¸­åœ‹çš„è€ƒé©—<newline46mondego>"
"6296splitHere46","9559611splitHere46","some.key = \u9019\u5c0d\u4e2d\u570b\u7684\u8003\u9a57<newline46mondego>"
"6297splitHere46","9559690splitHere46",".xhtml"
"6298splitHere46","9559690splitHere46",".jsp"
"6299splitHere46","9559690splitHere46","<context-param><newline46mondego>    <param-name>javax.faces.DEFAULT_SUFFIX</param-name><newline46mondego>    <param-value>.xhtml</param-value><newline46mondego></context-param><newline46mondego>"
"6300splitHere46","9559690splitHere46","FacesServlet"
"6301splitHere46","9559690splitHere46","*.jsf"
"6302splitHere46","9559736splitHere46","public Key ceiling_i(Key key)<newline46mondego>{<newline46mondego>    Node t = root;<newline46mondego>    Node t largestVisited = null;<newline46mondego>    while(t != null) {<newline46mondego>        int cmp = key.compareTo(t.key);<newline46mondego>        if(cmp == 0) return t.key;<newline46mondego>        else if(cmp < 0) { largestVisited = Min(t, largestVisited); t = t.left; }<newline46mondego>        else if(cmp > 0) { t = t.right; largestVisited = Min(t, largestVisited); }<newline46mondego><newline46mondego>    }<newline46mondego>    return largestVisited;<newline46mondego>}<newline46mondego><newline46mondego>Node Min(Node a, Node b) { return the node with the smaller key; }<newline46mondego>"
"6303splitHere46","9559858splitHere46","String.split()"
"6304splitHere46","9559858splitHere46","StringTokenizer"
"6305splitHere46","9559858splitHere46","String input = <doubleQuotes46>this \<doubleQuotes46>is a great\<doubleQuotes46> day<doubleQuotes46>;<newline46mondego><newline46mondego>    for (String  word: input.split(<doubleQuotes46>(?<=\<doubleQuotes46>).+(?=\<doubleQuotes46>)|\\b\\w+\\b<doubleQuotes46>))<newline46mondego>    {<newline46mondego>        System.out.println(<doubleQuotes46>[<doubleQuotes46>+word+<doubleQuotes46>]<doubleQuotes46>);<newline46mondego>    }<newline46mondego>"
"6306splitHere46","9559858splitHere46","[this]<newline46mondego>[is a great]<newline46mondego>[day]<newline46mondego>"
"6307splitHere46","9559858splitHere46","<doubleQuotes46> yes this \<doubleQuotes46>is a great\<doubleQuotes46> day all right<doubleQuotes46><newline46mondego>"
"6308splitHere46","9559940splitHere46","if (head.getFirstName().contains(searchEntry) || head.getLastName().contains(searchEntry) || head.getPhoneNum().contains(searchEntry) || head.getEmail().contains(searchEntry))<newline46mondego>"
"6309splitHere46","9559940splitHere46","null"
"6310splitHere46","9559940splitHere46","getFirstName"
"6311splitHere46","9559940splitHere46","getLastName"
"6312splitHere46","9559940splitHere46","getPhoneNum"
"6313splitHere46","9559940splitHere46","getEmail"
"6314splitHere46","9559940splitHere46","null"
"6315splitHere46","9559940splitHere46","null.someMethod()"
"6316splitHere46","9559940splitHere46","string firstName = head.getFirstName();<newline46mondego>string lastName = head.getLastName();<newline46mondego>string phoneNum = head.getPhoneNum();<newline46mondego>string email = head.getEmail();<newline46mondego><newline46mondego>if ((firstName != null && firstName.contains(searchEntry)) <newline46mondego>     || (lastName != null && lastName.contains(searchEntry)) <newline46mondego>     || (phoneNum != null && phoneNum.contains(searchEntry)) <newline46mondego>     || (email != null && email.contains(searchEntry)))<newline46mondego>"
"6317splitHere46","9559950splitHere46","public static Room retrieveRoom(int connectedRoom){<newline46mondego>   return rooms[connectedRoom];<newline46mondego>}<newline46mondego>"
"6318splitHere46","9559950splitHere46","public void roomHeatLoss(){<newline46mondego>    Room room = (Room)MasterControlPanel.retrieveRoom(1);<newline46mondego>}<newline46mondego>"
"6319splitHere46","9559964splitHere46","Dao.executeRaw()"
"6320splitHere46","9559964splitHere46","int numRowsChanged =<newline46mondego>   dao.executeRaw(<doubleQuotes46>load data infile '<doubleQuotes46> + infile.getPath() + <doubleQuotes46>'<doubleQuotes46>);<newline46mondego>"
"6321splitHere46","9560127splitHere46","a"
"6322splitHere46","9560127splitHere46","b"
"6323splitHere46","9560127splitHere46","x"
"6324splitHere46","9560200splitHere46","R.id.sayLinear"
"6325splitHere46","9560200splitHere46","<LinearLayout<newline46mondego>    <!-- other attributes --><newline46mondego>    android:orientation=<doubleQuotes46>vertical<doubleQuotes46> /><newline46mondego>"
"6326splitHere46","9560327splitHere46","File"
"6327splitHere46","9560327splitHere46","File f = new File(<doubleQuotes46>some_unknown_unexisting_file.bob<doubleQuotes46>);<newline46mondego>System.out.println(f.exists());  // most likely will print 'false'<newline46mondego>"
"6328splitHere46","9560327splitHere46","System.out.println(new File(<doubleQuotes46>.<doubleQuotes46>).getAbsolutePath());<newline46mondego>"
"6329splitHere46","9560327splitHere46","File[]"
"6330splitHere46","9560327splitHere46","File[] files = new File(<doubleQuotes46>icons<doubleQuotes46>).listFiles(new FileFilter() {<newline46mondego>   @Override<newline46mondego>   public boolean accept(File f) {<newline46mondego>      return !f.isDirectory() && f.canRead();<newline46mondego>   }<newline46mondego>});<newline46mondego>for (File f : files) {<newline46mondego>   System.out.println(f.getAbsolutePath());<newline46mondego>}<newline46mondego>"
"6331splitHere46","9560327splitHere46","File"
"6332splitHere46","9560327splitHere46","list()"
"6333splitHere46","9560327splitHere46","File parent = new File(<doubleQuotes46>icons<doubleQuotes46>);<newline46mondego>String[] fileStr = parent.list(new FilenameFilter() {<newline46mondego>   @Override<newline46mondego>   public boolean accept(File dir, String name) {<newline46mondego>      File f = new File(dir, name);<newline46mondego>      return !f.isDirectory() && f.canRead();<newline46mondego>   }<newline46mondego>});<newline46mondego>for (String f : fileStr) {<newline46mondego>   System.out.println(new File(parent, f).getAbsolutePath());<newline46mondego>}<newline46mondego>"
"6334splitHere46","9560327splitHere46","String[]"
"6335splitHere46","9560327splitHere46","String filename = fileStr[i];  // some file name within the array<newline46mondego>ImageIcon icon = new ImageIcon(<doubleQuotes46>icons<doubleQuotes46> + File.separator + filename); <newline46mondego>"
"6336splitHere46","9560327splitHere46","File[]"
"6337splitHere46","9560327splitHere46","File file = files[i];   // some file within the File[] array<newline46mondego>ImageIcon icon = new ImageIcon(file.getAbsolutePath());<newline46mondego>"
"6338splitHere46","9560436splitHere46","myActivity.runOnUIThread(new Runnable() {<newline46mondego>   @Override<newline46mondego>   public void run() {<newline46mondego>       someUIelement.setValue(someIntReadFromUSB);       <newline46mondego>   }<newline46mondego>}<newline46mondego>"
"6339splitHere46","9560436splitHere46","someUIElement"
"6340splitHere46","9560436splitHere46","someIntReadFromUSB"
"6341splitHere46","9560436splitHere46","final"
"6342splitHere46","9560568splitHere46","DateFormat sd = new SimpleDateFormat(<doubleQuotes46>EEE MMM dd HH:mm:ss zzz yyyy<doubleQuotes46>);<newline46mondego>"
"6343splitHere46","9560569splitHere46","public static void main(String[] args) {<newline46mondego>    Random randomGenerator = new Random();<newline46mondego>    int n = randomGenerator.nextInt(1000);<newline46mondego><newline46mondego>    StringBuilder output = new StringBUilder(<doubleQuotes46>The randomly generated number was: <doubleQuotes46> + n + <doubleQuotes46>\n<doubleQuotes46>);<newline46mondego><newline46mondego>    while(n > 1){<newline46mondego>        if(n % 2 == 0){<newline46mondego>            n = n / 2;<newline46mondego>        }<newline46mondego>        else{<newline46mondego>            n = 3 * n + 1;<newline46mondego>        }<newline46mondego>        output.append(n + <doubleQuotes46>\n<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    output.append(<doubleQuotes46>Done.<doubleQuotes46>);<newline46mondego>    JOptionPane.showMessageDialog(null, output);<newline46mondego><newline46mondego>}<newline46mondego>"
"6344splitHere46","9560583splitHere46","CellRenderer"
"6345splitHere46","9560583splitHere46","class MyRenderer extends DefaultListCellRenderer {<newline46mondego>   public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {<newline46mondego>      Component c = super.getListCellRendererComponent(...);<newline46mondego>      setText(getValue(value)); // where getValue is some method you implement that gets the text you want to render for the component<newline46mondego>      return c;<newline46mondego>}<newline46mondego>"
"6346splitHere46","9560591splitHere46","User"
"6347splitHere46","9560591splitHere46","User.addNote"
"6348splitHere46","9560591splitHere46","class User {<newline46mondego>    ...<newline46mondego>    public void addNote(Note note) {<newline46mondego>        note.user = this;<newline46mondego>        notes.add(note);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6349splitHere46","9560591splitHere46","Note note1 = new Note();<newline46mondego>note1.setContent(<doubleQuotes46>my first note<doubleQuotes46>);<newline46mondego>Note note2 = new Note();<newline46mondego>note2.setContent(<doubleQuotes46>my second note<doubleQuotes46>);<newline46mondego>User user = new User();<newline46mondego>user.setName(<doubleQuotes46>Andrei<doubleQuotes46>);<newline46mondego>user.addNote(note1);<newline46mondego>user.addNote(note2);<newline46mondego>session.save(user);<newline46mondego>"
"6350splitHere46","9560591splitHere46","User user = new User(<doubleQuotes46>Andrei<doubleQuotes46>);<newline46mondego>user.addNote(new Note(<doubleQuotes46>my first note<doubleQuotes46>));<newline46mondego>user.addNote(new Note(<doubleQuotes46>my second note<doubleQuotes46>));<newline46mondego>session.save(user);<newline46mondego>"
"6351splitHere46","9560633splitHere46","static class Thing"
"6352splitHere46","9560633splitHere46","Thing"
"6353splitHere46","9560633splitHere46","Hello"
"6354splitHere46","9560633splitHere46","new Thing();"
"6355splitHere46","9560633splitHere46","Hello"
"6356splitHere46","9560633splitHere46","Hello"
"6357splitHere46","9560656splitHere46","\r\n"
"6358splitHere46","9560656splitHere46","\r"
"6359splitHere46","9560802splitHere46","\r\n"
"6360splitHere46","9560802splitHere46","\n"
"6361splitHere46","9560802splitHere46","\r"
"6362splitHere46","9560802splitHere46","\n\r"
"6363splitHere46","9560802splitHere46","\n"
"6364splitHere46","9560802splitHere46","\r\n"
"6365splitHere46","9560802splitHere46","\r\n"
"6366splitHere46","9560802splitHere46","\n"
"6367splitHere46","9560802splitHere46","\r"
"6368splitHere46","9560802splitHere46","BufferedReader"
"6369splitHere46","9560802splitHere46","\n"
"6370splitHere46","9560802splitHere46","\r\n"
"6371splitHere46","9560802splitHere46","readLine()"
"6372splitHere46","9560802splitHere46","BufferedReader reader = new BufferedReader(new StringReader(string));<newline46mondego>List<String> lines = new ArrayList<String>();<newline46mondego><newline46mondego>for (String line = null; (line = reader.readLine()) != null;) {<newline46mondego>    lines.add(line);<newline46mondego>}<newline46mondego><newline46mondego>// ...<newline46mondego>"
"6373splitHere46","9560802splitHere46","\n"
"6374splitHere46","9560802splitHere46","<br/>"
"6375splitHere46","9560802splitHere46","white-space: pre;"
"6376splitHere46","9560802splitHere46","\n"
"6377splitHere46","9560802splitHere46","\r\n"
"6378splitHere46","9560802splitHere46","<meta>"
"6379splitHere46","9560802splitHere46","text/html"
"6380splitHere46","9560802splitHere46","Content-Type"
"6381splitHere46","9560802splitHere46","<meta http-equiv=<doubleQuotes46>content-type<doubleQuotes46>>"
"6382splitHere46","9560802splitHere46","<meta>"
"6383splitHere46","9560813splitHere46","enum Type {<newline46mondego>    Sentence,<newline46mondego>    NounPhrase,<newline46mondego>    VerbPhrase,<newline46mondego>    Conjunction,<newline46mondego>    ...<newline46mondego>};<newline46mondego><newline46mondego>interface PartOfSpeech { };<newline46mondego><newline46mondego>class NonTerminal implements PartOfSpeech {<newline46mondego>    Type type;<newline46mondego>    List<PartOfSpeech> subparts;<newline46mondego>};<newline46mondego><newline46mondego>class Terminal implements PartOfSpeech {<newline46mondego>    String word;<newline46mondego>};<newline46mondego>"
"6384splitHere46","9560813splitHere46","class VerbPhrase {<newline46mondego>    Verb verb;<newline46mondego>    AdverbPhrase adverb; /* optional */<newline46mondego>    ...<newline46mondego>};<newline46mondego>"
"6385splitHere46","9560813splitHere46","interface VerbPhrase { };<newline46mondego><newline46mondego>class IntransitiveVerbPhrase implements VerbPhrase {<newline46mondego>    Verb verb;<newline46mondego>    AdverbPhrase adverb; /* optional */<newline46mondego>};<newline46mondego><newline46mondego>class TransitiveVerbPhrase implements VerbPhrase {<newline46mondego>    Verb verb;<newline46mondego>    AdverbPhrase adverb; /* optional */<newline46mondego>    NounPhrase obj;<newline46mondego>};<newline46mondego>"
"6386splitHere46","9560813splitHere46","add_rule(NounPhrase, [Noun])<newline46mondego>add_rule(NounPhrase, [RelativeNounWord])<newline46mondego>add_rule(NounPhrase, [Noun, AdjectiveClause])<newline46mondego>add_rule(NounPhrase, [Article, Noun])<newline46mondego>add_rule(NounPhrase, [Article, Adjectives, Noun])<newline46mondego>add_rule(NounPhrase, [Article, Noun, AdjectiveClause])<newline46mondego>add_rule(NounPhrase, [Article, Adjectives, Noun, AdjectiveClause])<newline46mondego>add_rule(NounPhrase, [Adjectives, Noun])<newline46mondego>add_rule(NounPhrase, [Adjectives, Noun, AdjectiveClause])<newline46mondego>add_rule(NounPhrase, [Article, Adjectives, Noun])<newline46mondego>...<newline46mondego>"
"6387splitHere46","9560879splitHere46","String myVariable = request.getParameter(<doubleQuotes46>myVariable<doubleQuotes46>);<newline46mondego>"
"6388splitHere46","9560916splitHere46","public static JFrame openInJFrame(Container content, int width, int height,<newline46mondego>        String title, Color bgColor) {<newline46mondego><newline46mondego>    // ...<newline46mondego>    frame.setContentPane(content);      <newline46mondego><newline46mondego>    frame.setVisible(true);<newline46mondego>    return (frame);<newline46mondego>}<newline46mondego>"
"6389splitHere46","9560977splitHere46","arraycopy"
"6390splitHere46","9561117splitHere46","int[] toBeSorted = new int[10000];<newline46mondego>// fill the array with data<newline46mondego>int[] copied = new int[10000];<newline46mondego>System.arrayCopy(toBeSorted, 0, copied, 0, copied.length);<newline46mondego>// prepare the timer, but do not start it<newline46mondego>for (int = 0 ; i != 100 ; i++) {<newline46mondego>    System.arrayCopy(copied, 0, toBeSorted, 0, copied.length);<newline46mondego>    // Now the toBeSorted is in its initial state<newline46mondego>    // Start the timer<newline46mondego>    Arrays.sort(toBeSorted);<newline46mondego>    // Stop the timer before the next iteration<newline46mondego>}<newline46mondego>"
"6391splitHere46","9561193splitHere46","method.invoke(method,(Object[]) null)<newline46mondego>"
"6392splitHere46","9561193splitHere46","method.invoke(clazz.newInstance(), (Object[]) null)<newline46mondego>"
"6393splitHere46","9561334splitHere46","Optional"
"6394splitHere46","9561334splitHere46","Optional"
"6395splitHere46","9561334splitHere46","Optional"
"6396splitHere46","9561334splitHere46","other.method(a, b)"
"6397splitHere46","9561334splitHere46","a"
"6398splitHere46","9561334splitHere46","other.method"
"6399splitHere46","9561334splitHere46","Optional"
"6400splitHere46","9561334splitHere46","Optional"
"6401splitHere46","9561545splitHere46","ElementIterator"
"6402splitHere46","9561545splitHere46","getStartOffset()"
"6403splitHere46","9561545splitHere46","getEndOffset()"
"6404splitHere46","9561545splitHere46","Element"
"6405splitHere46","9561545splitHere46","getText()"
"6406splitHere46","9561847splitHere46","out.write(pName + <doubleQuotes46>,<doubleQuotes46> + mName + <doubleQuotes46>\r\n<doubleQuotes46>); <newline46mondego>"
"6407splitHere46","9561847splitHere46","mName"
"6408splitHere46","9561847splitHere46","mName"
"6409splitHere46","9562147splitHere46","<APPLET ARCHIVE=<doubleQuotes46>yourfile.jar<doubleQuotes46> CODE=<doubleQuotes46>yourApplet.class<doubleQuotes46> WIDTH=400 HEIGHT=200><newline46mondego> </APPLET><newline46mondego>"
"6410splitHere46","9562147splitHere46","yourApplet.class"
"6411splitHere46","9562194splitHere46","textureAtlas = TextureIO.newTexture(new File(<doubleQuotes46>textures/<doubleQuotes46> + name + <doubleQuotes46>.png<doubleQuotes46>), false);<newline46mondego>"
"6412splitHere46","9562203splitHere46","import java.util.ArrayList;<newline46mondego>import java.util.Hashtable;<newline46mondego>import java.util.Iterator;<newline46mondego>import java.util.List;<newline46mondego>import java.util.Set;<newline46mondego>import java.util.Vector;<newline46mondego><newline46mondego><newline46mondego>public class Main {<newline46mondego>/**<newline46mondego> * @param args<newline46mondego> */<newline46mondego>/*public static void main(String[] args) {<newline46mondego>    List<Integer> intList = new ArrayList<Integer>();<newline46mondego>    intList.add(0, new Integer(1));<newline46mondego>    intList.add(1, new Integer(1));<newline46mondego>    intList.add(2, new Integer(1));<newline46mondego>    intList.add(3, new Integer(1));<newline46mondego>    intList.add(4, new Integer(1));<newline46mondego>    intList.add(5, new Integer(1));<newline46mondego><newline46mondego>}*/<newline46mondego><newline46mondego><newline46mondego>public static void main(String [] args){<newline46mondego>Vector<String> vec = new Vector<String>(); <newline46mondego><newline46mondego>Hashtable<Integer, String> names=new Hashtable();<newline46mondego>vec.addElement(new String(<doubleQuotes46>name1<doubleQuotes46>));<newline46mondego>vec.addElement(new String(<doubleQuotes46>name2<doubleQuotes46>));<newline46mondego>vec.addElement(new String(<doubleQuotes46>name3<doubleQuotes46>));<newline46mondego>vec.addElement(new String(<doubleQuotes46>name4<doubleQuotes46>));<newline46mondego>vec.addElement(new String(<doubleQuotes46>name5<doubleQuotes46>));<newline46mondego><newline46mondego>int VecSize=vec.size();<newline46mondego><newline46mondego>for (int i=0;i<VecSize;i++){<newline46mondego><newline46mondego>names.put(new Integer(i), new String(vec.elementAt(i)));<newline46mondego>}<newline46mondego><newline46mondego>Set set=names.keySet();<newline46mondego>Iterator itr= set.iterator();<newline46mondego><newline46mondego>while (itr.hasNext()){<newline46mondego>Integer temp = (Integer) itr.next();<newline46mondego>System.out.println(temp+<doubleQuotes46>:<doubleQuotes46>+names.get(temp));}<newline46mondego>System.out.println();<newline46mondego>}}<newline46mondego>"
"6413splitHere46","9562235splitHere46","<jvmarg>"
"6414splitHere46","9562235splitHere46","<jvmarg value=<doubleQuotes46>-ea<doubleQuotes46>/><newline46mondego> <jvmarg value=<doubleQuotes46>-Dapp.URL=URL=${jvmargs}<doubleQuotes46>/><newline46mondego>"
"6415splitHere46","9562235splitHere46","ant tests -Djvmargs=\'jdbc:oracle:thin:@//192.168.56.42:1521/xe\':User=user:Password=password -debug<newline46mondego>"
"6416splitHere46","9562235splitHere46","[junit] '-ea'<newline46mondego> [junit] '-Dapp.URL=URL='jdbc:oracle:thin:@//192.168.56.42:1521/xe':User=user:Password=password'<newline46mondego>"
"6417splitHere46","9562235splitHere46","line"
"6418splitHere46","9562517splitHere46","package com.student.person.work;<newline46mondego><newline46mondego>/**<newline46mondego> *<newline46mondego> * @author sarath_sivan<newline46mondego> */<newline46mondego>public class Person {<newline46mondego><newline46mondego>    private String name;<newline46mondego>    private int age;<newline46mondego>    private String grade;<newline46mondego><newline46mondego>    public String getName() {<newline46mondego>       return this.name;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setName(String name) {<newline46mondego>        this.name = name;<newline46mondego>    }<newline46mondego><newline46mondego>    public int getAge() {<newline46mondego>        return this.age;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setAge(int age) {<newline46mondego>        this.age = age;<newline46mondego>    }<newline46mondego><newline46mondego>    public String getGrade() {<newline46mondego>        return this.grade;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setGrade(String grade) {<newline46mondego>        this.grade = grade;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"6419splitHere46","9562517splitHere46","package com.student.person.work;<newline46mondego><newline46mondego>/**<newline46mondego> *<newline46mondego> * @author sarath_sivan<newline46mondego> */<newline46mondego>public class Student {<newline46mondego><newline46mondego>    private String name;<newline46mondego>    private int age;<newline46mondego><newline46mondego>    public String getName() {<newline46mondego>       return this.name;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setName(String name) {<newline46mondego>        this.name = name;<newline46mondego>    }<newline46mondego><newline46mondego>    public int getAge() {<newline46mondego>        return this.age;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setAge(int age) {<newline46mondego>        this.age = age;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"6420splitHere46","9562517splitHere46","package com.student.person.work;<newline46mondego><newline46mondego>import java.util.ArrayList;<newline46mondego>import java.util.List;<newline46mondego><newline46mondego>/**<newline46mondego> *<newline46mondego> * @author sarath_sivan<newline46mondego> */<newline46mondego>public class Work {<newline46mondego><newline46mondego>    public static String calculateGrade() {<newline46mondego>        String grade = <doubleQuotes46><doubleQuotes46>;<newline46mondego>        // Your code to find the grade.<newline46mondego>        //............<newline46mondego>        return grade;<newline46mondego>    }<newline46mondego><newline46mondego>    public static void doWork() {<newline46mondego>        List<Student> studentList = new ArrayList<Student>();<newline46mondego><newline46mondego>        Student student = new Student();<newline46mondego>        student.setName(<doubleQuotes46>ABC<doubleQuotes46>);<newline46mondego>        student.setAge(24);<newline46mondego>        studentList.add(student);<newline46mondego><newline46mondego>        student = new Student();<newline46mondego>        student.setName(<doubleQuotes46>DEF<doubleQuotes46>);<newline46mondego>        student.setAge(28);<newline46mondego>        studentList.add(student);<newline46mondego><newline46mondego>        student = new Student();<newline46mondego>        student.setName(<doubleQuotes46>GHI<doubleQuotes46>);<newline46mondego>        student.setAge(21);<newline46mondego>        studentList.add(student);<newline46mondego><newline46mondego>        List<Person> personList = new ArrayList<Person>();<newline46mondego><newline46mondego>        for(Student students : studentList) {<newline46mondego>            Person person = new Person();<newline46mondego>            person.setName(students.getName());<newline46mondego>            person.setAge(students.getAge());<newline46mondego>            person.setGrade(Work.calculateGrade());// Setting the grade<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        Work.doWork();<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"6421splitHere46","9562520splitHere46","run"
"6422splitHere46","9562520splitHere46","Runnable"
"6423splitHere46","9562828splitHere46","long"
"6424splitHere46","9562828splitHere46","A"
"6425splitHere46","9562828splitHere46","C"
"6426splitHere46","9562828splitHere46","101"
"6427splitHere46","9562828splitHere46","boolean"
"6428splitHere46","9562828splitHere46","boolean[] flags = new boolean[MAX_NUMBER_OF_FLAGS];<newline46mondego>"
"6429splitHere46","9562828splitHere46","<doubleQuotes46>-----*-*<doubleQuotes46><newline46mondego>"
"6430splitHere46","9562828splitHere46","VARCHAR"
"6431splitHere46","9562868splitHere46","toURI()"
"6432splitHere46","9562893splitHere46","Properties props = new Properties();<newline46mondego>props.load(in); // create input stream for your file.<newline46mondego>// from now you have Properties object with your data.<newline46mondego>// since properties extends Hashtable the task is done.<newline46mondego>// if you still need keys in list, say<newline46mondego>List<Object> keys = new ArrayList<Object>(props.keySet());<newline46mondego>"
"6433splitHere46","9562993splitHere46","File--> Import"
"6434splitHere46","9562993splitHere46","General ---> Existing Projects into Workspace"
"6435splitHere46","9563063splitHere46","int count[5]; //initialize this to 0<newline46mondego>for(int i = 0; i<n; i++)<newline46mondego>{<newline46mondego>count[array[i]]+=1;<newline46mondego>}<newline46mondego>"
"6436splitHere46","9563089splitHere46","ExecutorService newFixedThreadPool(int nThreads, ThreadFactory threadFactory)"
"6437splitHere46","9563089splitHere46","public final Thread newThread(final Runnable r) {<newline46mondego>    Thread newThread = threadFactory.newThread(r); // you can use default thread factory<newline46mondego>    newThread.setName(<doubleQuotes46>threadName<doubleQuotes46>);<newline46mondego>    newThread.setDaemon(Boolean.TRUE);<newline46mondego>    newThread.setUncaughtExceptionHandler(new UncaughtExceptionHandler() {<newline46mondego>        @Override<newline46mondego>        public void uncaughtException(final Thread t, final Throwable e) {<newline46mondego>            // log<newline46mondego>        }<newline46mondego>    });<newline46mondego>    return newThread;<newline46mondego>}<newline46mondego>"
"6438splitHere46","9563469splitHere46","execute immediate 'insert into PRINTING_JOB_STATE (ID, NAME) values ... '<newline46mondego>execute immediate 'insert into REPRO_PRINTING_JOB_STATE (ID, NAME) values .... '<newline46mondego>"
"6439splitHere46","9563469splitHere46","PRINTING_JOB_STATE"
"6440splitHere46","9563469splitHere46","REPRO_PRINTING_JOB_STATE"
"6441splitHere46","9563469splitHere46","'"
"6442splitHere46","9563469splitHere46","'"
"6443splitHere46","9563469splitHere46","QU"
"6444splitHere46","9563469splitHere46","execute immediate 'insert into XYZZY (ID, NAME) values (''QU'', ''QUEUED'')';<newline46mondego>"
"6445splitHere46","9563469splitHere46","QU"
"6446splitHere46","9563469splitHere46","QUEUED"
"6447splitHere46","9563552splitHere46","if (stringInput == null || stringInput.length() == 0)  {<newline46mondego>  stringInput = <doubleQuotes46>0<doubleQuotes46>;<newline46mondego>}<newline46mondego>"
"6448splitHere46","9563552splitHere46","dinnerTextField.setText(stringInput);<newline46mondego>"
"6449splitHere46","9563619splitHere46","SomeClass.main();<newline46mondego>"
"6450splitHere46","9563619splitHere46","SomeClass.main(arg1, arg2);<newline46mondego>"
"6451splitHere46","9563757splitHere46","BigInteger big = new BigInteger(<doubleQuotes46>515377520732011331036461129765621272702107522001<doubleQuotes46>);<newline46mondego>ByteArrayOutputStream baos = new ByteArrayOutputStream();<newline46mondego>ObjectOutputStream outputStream = new ObjectOutputStream(baos);<newline46mondego>outputStream.writeObject(big);<newline46mondego>byte[] rawBytes = baos.toByteArray();<newline46mondego><newline46mondego>ObjectInputStream inputStream = new ObjectInputStream(new ByteArrayInputStream(rawBytes));<newline46mondego>BigInteger bigReadBack = (BigInteger) inputStream.readObject();<newline46mondego><newline46mondego>assertThat(big).isEqualTo(bigReadBack);<newline46mondego>"
"6452splitHere46","9563757splitHere46","3^100"
"6453splitHere46","9563757splitHere46","BigInteger big = new BigInteger(<doubleQuotes46>515377520732011331036461129765621272702107522001<doubleQuotes46>);<newline46mondego>OutputStream fos = new FileOutputStream(<doubleQuotes46>big.ser<doubleQuotes46>);<newline46mondego>ObjectOutputStream outputStream = new ObjectOutputStream(fos);<newline46mondego>outputStream.writeObject(big);<newline46mondego>fos.close();<newline46mondego><newline46mondego>ObjectInputStream inputStream = new ObjectInputStream(new FileInputStream(<doubleQuotes46>big.ser<doubleQuotes46>));<newline46mondego>BigInteger bigReadBack = (BigInteger) inputStream.readObject();<newline46mondego><newline46mondego>assertThat(big).isEqualTo(bigReadBack);<newline46mondego>"
"6454splitHere46","9563757splitHere46",".txt"
"6455splitHere46","9563757splitHere46","BufferedInputStream"
"6456splitHere46","9563757splitHere46","BufferedOutputstream"
"6457splitHere46","9563800splitHere46","Team-> Share-> Git"
"6458splitHere46","9563802splitHere46","java -jar jar-file<newline46mondego>"
"6459splitHere46","9563846splitHere46","getObject"
"6460splitHere46","9563846splitHere46","java.lang.Long"
"6461splitHere46","9563846splitHere46","public <T> T get(String variable, T defaultValue)<newline46mondego>"
"6462splitHere46","9563846splitHere46","public Object get(String variable, Object defaultValue)<newline46mondego>"
"6463splitHere46","9563846splitHere46","this.<Integer>get(<doubleQuotes46>foo<doubleQuotes46>, 0)<newline46mondego>"
"6464splitHere46","9563846splitHere46","(Integer)this.get(<doubleQuotes46>foo<doubleQuotes46>, 0)<newline46mondego>"
"6465splitHere46","9563846splitHere46","Object"
"6466splitHere46","9563846splitHere46","Long"
"6467splitHere46","9563846splitHere46","Integer"
"6468splitHere46","9563846splitHere46","Map"
"6469splitHere46","9563846splitHere46","Integer"
"6470splitHere46","9563846splitHere46","Number"
"6471splitHere46","9563846splitHere46","Number"
"6472splitHere46","9563846splitHere46","Number.intValue()"
"6473splitHere46","9563865splitHere46","today = tsdf.parse(tsdf.format(new Date()));<newline46mondego>System.out.println(today);<newline46mondego>"
"6474splitHere46","9563865splitHere46","Date"
"6475splitHere46","9563865splitHere46","Date"
"6476splitHere46","9563865splitHere46","long"
"6477splitHere46","9563865splitHere46","Date today = new Date();<newline46mondego>String formattedDate = tsdf.format(today);<newline46mondego>System.println(formattedDate);     // <- we print the string!!<newline46mondego>"
"6478splitHere46","9564173splitHere46","Thread"
"6479splitHere46","9564173splitHere46","onDestroy()"
"6480splitHere46","9564173splitHere46","onDestroy"
"6481splitHere46","9564173splitHere46","Thread"
"6482splitHere46","9564173splitHere46","isAlive()"
"6483splitHere46","9564173splitHere46","public class DelayedExitActivity extends Activity {<newline46mondego><newline46mondego>    private static final String LOG_TAG = <doubleQuotes46>DelayedExit<doubleQuotes46>;<newline46mondego>    private final  Runnable longOperation = new Runnable(){<newline46mondego>        @Override<newline46mondego>        public void run() {<newline46mondego>            for (int i=0 ; i < 50; i++){<newline46mondego>                Log.d(LOG_TAG, <doubleQuotes46>Iteration <doubleQuotes46>+i);<newline46mondego>                try {<newline46mondego>                    Thread.sleep(2 * 1000);<newline46mondego>                } catch (InterruptedException e) {<newline46mondego>                    // TODO Auto-generated catch block<newline46mondego>                    e.printStackTrace();<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego>    };<newline46mondego>    private Thread longThread ;<newline46mondego><newline46mondego>    /** Called when the activity is first created. */<newline46mondego>    @Override<newline46mondego>    public void onCreate(Bundle savedInstanceState) {<newline46mondego>        super.onCreate(savedInstanceState);<newline46mondego>        setContentView(R.layout.main);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void onDestroy() {<newline46mondego>        if(longThread == null){<newline46mondego>            longThread = new Thread(longOperation);<newline46mondego>        }<newline46mondego>        longThread.start();<newline46mondego>        super.onDestroy();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6484splitHere46","9564236splitHere46","@ManyToOne<newline46mondego>public Order order;<newline46mondego>"
"6485splitHere46","9564261splitHere46","extern <doubleQuotes46>C<doubleQuotes46>"
"6486splitHere46","9564279splitHere46","key1 = value1<newline46mondego>key2 = value2<newline46mondego>"
"6487splitHere46","9564279splitHere46","import java.util.ResourceBundle;<newline46mondego>...<newline46mondego>ResourceBundle rb = ResourceBundle.getBundle(<doubleQuotes46>MyResources<doubleQuotes46>);<newline46mondego>String myValue1 = rb.getString(<doubleQuotes46>key1<doubleQuotes46>);<newline46mondego>"
"6488splitHere46","9564301splitHere46","ResourcePatternResolver patternResolver = new PathMatchingResourcePatternResolver(new DefaultResourceLoader());<newline46mondego>Resource[] resources = patternResolver.getResources(<doubleQuotes46>classpath*:META-INF/spring.xml<doubleQuotes46>);<newline46mondego><newline46mondego>for(Resource resource : resources) {<newline46mondego>   System.out.println(resource.getDescription());<newline46mondego>}<newline46mondego>"
"6489splitHere46","9564495splitHere46",".matches()"
"6490splitHere46","9564495splitHere46","Pattern.compile(<doubleQuotes46>\\bMen<doubleQuotes46>).matcher(various[i]).find()<newline46mondego>"
"6491splitHere46","9564512splitHere46","type=<doubleQuotes46>redirect<doubleQuotes46>"
"6492splitHere46","9564512splitHere46","<rule><newline46mondego>    <note><newline46mondego>        The rule means that requests to /test/status/ will be redirected to /rewrite-status<newline46mondego>        the url will be rewritten.<newline46mondego>    </note><newline46mondego>    <from>/news/cricket</from><newline46mondego>    <to>/news.jsp/id=2</to><newline46mondego></rule><newline46mondego>"
"6493splitHere46","9564579splitHere46","String"
"6494splitHere46","9564579splitHere46","ID:"
"6495splitHere46","9564579splitHere46","JMSMessageID"
"6496splitHere46","9564579splitHere46","ID:"
"6497splitHere46","9564579splitHere46","ID:"
"6498splitHere46","9564635splitHere46","String resultString = subjectString.replaceAll(<doubleQuotes46>\\P{L}<doubleQuotes46>, <doubleQuotes46> <doubleQuotes46>);<newline46mondego>"
"6499splitHere46","9564638splitHere46","FieldCache.java"
"6500splitHere46","9564638splitHere46","FieldCacheImpl"
"6501splitHere46","9564638splitHere46","map (type -> cache)"
"6502splitHere46","9564638splitHere46","map (segment -> map (field -> fieldcache instance))"
"6503splitHere46","9564638splitHere46","byte[]"
"6504splitHere46","9564638splitHere46","getBytes"
"6505splitHere46","9564638splitHere46","String[]"
"6506splitHere46","9564638splitHere46","getStrings"
"6507splitHere46","9564638splitHere46","Cache"
"6508splitHere46","9564638splitHere46","Cache#createValue(AtomicReader, Entry, boolean)"
"6509splitHere46","9564650splitHere46","shortcutIntent.setClassName(<doubleQuotes46>com.android.calculator2<doubleQuotes46>, <doubleQuotes46>ClassName<doubleQuotes46>);<newline46mondego>"
"6510splitHere46","9564650splitHere46","<doubleQuotes46>ClassName<doubleQuotes46>"
"6511splitHere46","9564650splitHere46","<doubleQuotes46>com.android.calculator2.MainActivity<doubleQuotes46>"
"6512splitHere46","9564650splitHere46","<doubleQuotes46>ClassName<doubleQuotes46>"
"6513splitHere46","9564650splitHere46","PackageManager packageManager = context.getPackageManager();<newline46mondego>ResolveInfo info = packageManager.resolveActivity(shortcutIntent, 0);<newline46mondego>if(info != null) {<newline46mondego>    shortcutIntent.setClassName(info.activityInfo.packageName, info.activityInfo.name);<newline46mondego>}<newline46mondego>"
"6514splitHere46","9564773splitHere46","org.springframework.web.bind.ServletRequestUtils"
"6515splitHere46","9564773splitHere46","String jobDetails = new String((ServletRequestUtils.getStringParameter(request, <doubleQuotes46>jobDetails<doubleQuotes46>)).getBytes(<doubleQuotes46>ISO-8859-1<doubleQuotes46>), <doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>"
"6516splitHere46","9565024splitHere46","private void listFiles(String dirFrom) {<newline46mondego>        Resources res = getResources(); //if you are in an activity<newline46mondego>        AssetManager am = res.getAssets();<newline46mondego>        String fileList[] = am.list(dirFrom);<newline46mondego><newline46mondego>            if (fileList != null)<newline46mondego>            {   <newline46mondego>                for ( int i = 0;i<fileList.length;i++)<newline46mondego>                {<newline46mondego>                    Log.d(<doubleQuotes46><doubleQuotes46>,fileList[i]); <newline46mondego>                }<newline46mondego>            }<newline46mondego>    }<newline46mondego>"
"6517splitHere46","9565024splitHere46","listFiles(<doubleQuotes46>images<doubleQuotes46>);"
"6518splitHere46","9565034splitHere46","while(fromIndex>-1)         <newline46mondego>            {         <newline46mondego>                fromIndex = source.indexOf(test, fromIndex+1);         <newline46mondego>                System.out.println(<doubleQuotes46>found at<doubleQuotes46>+fromIndex);         <newline46mondego>                if(fromIndex!=-1) occurences++;         <newline46mondego>                }          <newline46mondego>            }       <newline46mondego>"
"6519splitHere46","9565070splitHere46","v.getContext().startActivity(myIntent);<newline46mondego>"
"6520splitHere46","9565339splitHere46","public class NotThatWellWrittenClass {<newline46mondego>   private static final WorkUtil THE_WORK_UTIL = new WorkUtil();<newline46mondego>   public static void do() {<newline46mondego>      // could introduce thread safety issues as the object is now shared.<newline46mondego>      THE_WORK_UTIL.do();<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"6521splitHere46","9565346splitHere46","public void setUserlist(Userlist[] userlist) {<newline46mondego>"
"6522splitHere46","9565346splitHere46","public void setUserlist(Userlist ... userlist) {<newline46mondego>"
"6523splitHere46","9565346splitHere46","obj.setUserlist (new Userlist[] { userlist });<newline46mondego>"
"6524splitHere46","9565504splitHere46","public static Map<Class<?>, List<Field>> getFieldsByType(Field[] fields) {<newline46mondego>  Map<Class<?>, List<Field>> result = new HashMap<Class<?>, List<Field>>();<newline46mondego>  for (Field field:fields) {<newline46mondego>    List<Field> fieldList = result.get(field.getType());<newline46mondego>    if (fieldList == null) {<newline46mondego>      fieldList = new ArrayList<Field>();<newline46mondego>      result.put(field.getType(), fieldList);<newline46mondego>    }<newline46mondego>    fieldList.add(field);<newline46mondego>  }<newline46mondego>  return result;<newline46mondego>}<newline46mondego>"
"6525splitHere46","9565504splitHere46","Map<Class<?>, List<Field>> map = getFieldsByType(MyClass.class.getDeclaredFields());<newline46mondego>List<Field> stringTypeMembers = map.get(String.class);<newline46mondego>"
"6526splitHere46","9565504splitHere46","stringTypeMember"
"6527splitHere46","9565504splitHere46","String"
"6528splitHere46","9565552splitHere46","Window a = getWindow();<newline46mondego>a.setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);<newline46mondego>"
"6529splitHere46","9565734splitHere46","TemplateHashMapEx"
"6530splitHere46","9565734splitHere46","Map"
"6531splitHere46","9565734splitHere46","Map"
"6532splitHere46","9565734splitHere46","String"
"6533splitHere46","9565734splitHere46","Map"
"6534splitHere46","9565734splitHere46","HashLiteral.SequenceHash"
"6535splitHere46","9565734splitHere46","java.util.Map"
"6536splitHere46","9565734splitHere46","ObjectWraper"
"6537splitHere46","9565734splitHere46","Environment.getCurrentEvironment().getObjectWrapper()"
"6538splitHere46","9565734splitHere46","ObjectWrapper"
"6539splitHere46","9565734splitHere46","BeansWrapper"
"6540splitHere46","9565734splitHere46","BeansWrapper.unwrap(theHashParam, Map.class)"
"6541splitHere46","9565734splitHere46","BeansWrapper"
"6542splitHere46","9565734splitHere46","Map"
"6543splitHere46","9565734splitHere46","Map"
"6544splitHere46","9565734splitHere46","Map"
"6545splitHere46","9565805splitHere46","CV_BGR2GRAY"
"6546splitHere46","9565805splitHere46","types_c.h"
"6547splitHere46","9565805splitHere46","CV_BGR2BGRA    =0,<newline46mondego>CV_RGB2RGBA    =CV_BGR2BGRA,<newline46mondego><newline46mondego>CV_BGRA2BGR    =1,<newline46mondego>CV_RGBA2RGB    =CV_BGRA2BGR,<newline46mondego><newline46mondego>CV_BGR2RGBA    =2,<newline46mondego>CV_RGB2BGRA    =CV_BGR2RGBA,<newline46mondego><newline46mondego>CV_RGBA2BGR    =3,<newline46mondego>CV_BGRA2RGB    =CV_RGBA2BGR,<newline46mondego><newline46mondego>CV_BGR2RGB     =4,<newline46mondego>CV_RGB2BGR     =CV_BGR2RGB,<newline46mondego><newline46mondego>CV_BGRA2RGBA   =5,<newline46mondego>CV_RGBA2BGRA   =CV_BGRA2RGBA,<newline46mondego><newline46mondego>CV_BGR2GRAY    =6,<newline46mondego>CV_RGB2GRAY    =7,<newline46mondego>CV_GRAY2BGR    =8,<newline46mondego>CV_GRAY2RGB    =CV_GRAY2BGR,<newline46mondego>CV_GRAY2BGRA   =9,<newline46mondego>CV_GRAY2RGBA   =CV_GRAY2BGRA,<newline46mondego>CV_BGRA2GRAY   =10,<newline46mondego>CV_RGBA2GRAY   =11,<newline46mondego><newline46mondego>CV_BGR2BGR565  =12,<newline46mondego>CV_RGB2BGR565  =13,<newline46mondego>CV_BGR5652BGR  =14,<newline46mondego>CV_BGR5652RGB  =15,<newline46mondego>CV_BGRA2BGR565 =16,<newline46mondego>CV_RGBA2BGR565 =17,<newline46mondego>CV_BGR5652BGRA =18,<newline46mondego>CV_BGR5652RGBA =19,<newline46mondego><newline46mondego>CV_GRAY2BGR565 =20,<newline46mondego>CV_BGR5652GRAY =21,<newline46mondego><newline46mondego>CV_BGR2BGR555  =22,<newline46mondego>CV_RGB2BGR555  =23,<newline46mondego>CV_BGR5552BGR  =24,<newline46mondego>CV_BGR5552RGB  =25,<newline46mondego>CV_BGRA2BGR555 =26,<newline46mondego>CV_RGBA2BGR555 =27,<newline46mondego>CV_BGR5552BGRA =28,<newline46mondego>CV_BGR5552RGBA =29,<newline46mondego><newline46mondego>CV_GRAY2BGR555 =30,<newline46mondego>CV_BGR5552GRAY =31,<newline46mondego><newline46mondego>CV_BGR2XYZ     =32,<newline46mondego>CV_RGB2XYZ     =33,<newline46mondego>CV_XYZ2BGR     =34,<newline46mondego>CV_XYZ2RGB     =35,<newline46mondego><newline46mondego>CV_BGR2YCrCb   =36,<newline46mondego>CV_RGB2YCrCb   =37,<newline46mondego>CV_YCrCb2BGR   =38,<newline46mondego>CV_YCrCb2RGB   =39,<newline46mondego><newline46mondego>CV_BGR2HSV     =40,<newline46mondego>CV_RGB2HSV     =41,<newline46mondego><newline46mondego>CV_BGR2Lab     =44,<newline46mondego>CV_RGB2Lab     =45,<newline46mondego><newline46mondego>CV_BayerBG2BGR =46,<newline46mondego>CV_BayerGB2BGR =47,<newline46mondego>CV_BayerRG2BGR =48,<newline46mondego>CV_BayerGR2BGR =49,<newline46mondego><newline46mondego>CV_BayerBG2RGB =CV_BayerRG2BGR,<newline46mondego>CV_BayerGB2RGB =CV_BayerGR2BGR,<newline46mondego>CV_BayerRG2RGB =CV_BayerBG2BGR,<newline46mondego>CV_BayerGR2RGB =CV_BayerGB2BGR,<newline46mondego><newline46mondego>CV_BGR2Luv     =50,<newline46mondego>CV_RGB2Luv     =51,<newline46mondego>CV_BGR2HLS     =52,<newline46mondego>CV_RGB2HLS     =53,<newline46mondego><newline46mondego>CV_HSV2BGR     =54,<newline46mondego>CV_HSV2RGB     =55,<newline46mondego><newline46mondego>CV_Lab2BGR     =56,<newline46mondego>CV_Lab2RGB     =57,<newline46mondego>CV_Luv2BGR     =58,<newline46mondego>CV_Luv2RGB     =59,<newline46mondego>CV_HLS2BGR     =60,<newline46mondego>CV_HLS2RGB     =61,<newline46mondego><newline46mondego>CV_BayerBG2BGR_VNG =62,<newline46mondego>CV_BayerGB2BGR_VNG =63,<newline46mondego>CV_BayerRG2BGR_VNG =64,<newline46mondego>CV_BayerGR2BGR_VNG =65,<newline46mondego><newline46mondego>CV_BayerBG2RGB_VNG =CV_BayerRG2BGR_VNG,<newline46mondego>CV_BayerGB2RGB_VNG =CV_BayerGR2BGR_VNG,<newline46mondego>CV_BayerRG2RGB_VNG =CV_BayerBG2BGR_VNG,<newline46mondego>CV_BayerGR2RGB_VNG =CV_BayerGB2BGR_VNG,<newline46mondego><newline46mondego>CV_BGR2HSV_FULL = 66,<newline46mondego>CV_RGB2HSV_FULL = 67,<newline46mondego>CV_BGR2HLS_FULL = 68,<newline46mondego>CV_RGB2HLS_FULL = 69,<newline46mondego><newline46mondego>CV_HSV2BGR_FULL = 70,<newline46mondego>CV_HSV2RGB_FULL = 71,<newline46mondego>CV_HLS2BGR_FULL = 72,<newline46mondego>CV_HLS2RGB_FULL = 73,<newline46mondego><newline46mondego>CV_LBGR2Lab     = 74,<newline46mondego>CV_LRGB2Lab     = 75,<newline46mondego>CV_LBGR2Luv     = 76,<newline46mondego>CV_LRGB2Luv     = 77,<newline46mondego><newline46mondego>CV_Lab2LBGR     = 78,<newline46mondego>CV_Lab2LRGB     = 79,<newline46mondego>CV_Luv2LBGR     = 80,<newline46mondego>CV_Luv2LRGB     = 81,<newline46mondego><newline46mondego>CV_BGR2YUV      = 82,<newline46mondego>CV_RGB2YUV      = 83,<newline46mondego>CV_YUV2BGR      = 84,<newline46mondego>CV_YUV2RGB      = 85,<newline46mondego><newline46mondego>CV_BayerBG2GRAY = 86,<newline46mondego>CV_BayerGB2GRAY = 87,<newline46mondego>CV_BayerRG2GRAY = 88,<newline46mondego>CV_BayerGR2GRAY = 89,<newline46mondego><newline46mondego>CV_YUV420i2RGB  = 90,<newline46mondego>CV_YUV420i2BGR  = 91,<newline46mondego>CV_YUV420sp2RGB = 92,<newline46mondego>CV_YUV420sp2BGR = 93,<newline46mondego><newline46mondego>CV_COLORCVT_MAX  =100 };<newline46mondego>"
"6548splitHere46","9565805splitHere46","types_c.h"
"6549splitHere46","9565805splitHere46","/usr/local/include/opencv2/imgproc/types_c.h"
"6550splitHere46","9565805splitHere46","-L/usr/local/lib"
"6551splitHere46","9565805splitHere46","-lopencv_core"
"6552splitHere46","9565805splitHere46","-lopencv_highgui"
"6553splitHere46","9565805splitHere46","-I/usr/local/include/opencv"
"6554splitHere46","9565805splitHere46","cv::cvCvtColor()"
"6555splitHere46","9565805splitHere46","CV_BGR2GRAY"
"6556splitHere46","9565805splitHere46","cvCvtColor(originalImage,grayImage, 6 );<newline46mondego>"
"6557splitHere46","9565888splitHere46","EmptyBorders"
"6558splitHere46","9565923splitHere46","for (int i = 0; i < main[0].getUserlistItem().length; i++) {<newline46mondego>    System.out.println(<doubleQuotes46>Pavan<doubleQuotes46><newline46mondego>            + main[0].getUserlistItem()[i].getUser().getName());<newline46mondego>}<newline46mondego>"
"6559splitHere46","9565951splitHere46","state2=state1;"
"6560splitHere46","9565951splitHere46","state1"
"6561splitHere46","9565951splitHere46","state2"
"6562splitHere46","9565987splitHere46","Easy12()"
"6563splitHere46","9565987splitHere46","question_label"
"6564splitHere46","9565987splitHere46","<TextView android:id=<doubleQuotes46>@+id/question_label<doubleQuotes46><newline46mondego>          android:layout_width=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>          android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>          android:text=<doubleQuotes46>Hello<doubleQuotes46> /><newline46mondego>"
"6565splitHere46","9565987splitHere46","setText()"
"6566splitHere46","9565987splitHere46","android:text"
"6567splitHere46","9566001splitHere46","getDefaultEncoding()"
"6568splitHere46","9566001splitHere46","?"
"6569splitHere46","9566001splitHere46","Writer"
"6570splitHere46","9566001splitHere46","OutputStream"
"6571splitHere46","9566124splitHere46","Window a;<newline46mondego>"
"6572splitHere46","9566124splitHere46","Window"
"6573splitHere46","9566124splitHere46","Window"
"6574splitHere46","9566124splitHere46","getWindow()"
"6575splitHere46","9566124splitHere46","new Window"
"6576splitHere46","9566124splitHere46","()"
"6577splitHere46","9566192splitHere46","ab"
"6578splitHere46","9566286splitHere46","AssetManager"
"6579splitHere46","9566286splitHere46","list()"
"6580splitHere46","9566286splitHere46","AssetManager"
"6581splitHere46","9566302splitHere46","break"
"6582splitHere46","9566302splitHere46","switch (value)<newline46mondego>{<newline46mondego>   case 0:<newline46mondego>      do();<newline46mondego>      break;<newline46mondego><newline46mondego>   case 2:  // fall through<newline46mondego>   case 3:<newline46mondego>      do2();<newline46mondego>      break;<newline46mondego>} <newline46mondego>"
"6583splitHere46","9566306splitHere46","SELECT * FROM Person p, Residence r<newline46mondego>WHERE p.ENTITY_ID = r.FK_ENTITY_ID_PERSON          // JOIN"
"6584splitHere46","9566306splitHere46","SELECT * FROM Person p, Residence r<newline46mondego>WHERE p.ENTITY_ID = r.FK_ENTITY_ID_PERSON AND<newline46mondego>p.recordTo=[infinity] and r.recordTo=[infinity]    // only current technical state"
"6585splitHere46","9566306splitHere46","SELECT * FROM Person p, Residence r<newline46mondego>WHERE p.ENTITY_ID = r.FK_ENTITY_ID_PERSON AND<newline46mondego>p.recordTo=[infinity] and r.recordTo=[infinity] AND<newline46mondego>p.validFrom <= [now] AND p.validTo > [now] AND        // only current valid state person<newline46mondego>r.validFrom <= [now] AND r.validTo > [now]            // only current valid state residence"
"6586splitHere46","9566481splitHere46","-keystore"
"6587splitHere46","9566481splitHere46",".keystore"
"6588splitHere46","9566526splitHere46","<%= com.example.MyUtility.getSomething() %><newline46mondego>"
"6589splitHere46","9566526splitHere46","request.setAttribute(<doubleQuotes46>someData<doubleQuotes46>, MyUtility.getSomething())<newline46mondego>RequestDispatcher dispatcher = request.getRequestDispatcher(<doubleQuotes46>page.jsp<doubleQuotes46>);<newline46mondego>dispatcher.forward(request, response);  <newline46mondego>"
"6590splitHere46","9566526splitHere46","page.jsp"
"6591splitHere46","9566526splitHere46","${someData}<newline46mondego>"
"6592splitHere46","9566579splitHere46","DecimalFormat myFormatter = new DecimalFormat(<doubleQuotes46>############<doubleQuotes46>);<newline46mondego>tvInput.setText(myFormatter.format(result));<newline46mondego>"
"6593splitHere46","9566879splitHere46","private Akbil_Classic(byte[] bArray, short bOffset, byte bLength) {<newline46mondego>            memory = new byte[SIZE_MEMORY];<newline46mondego>    }<newline46mondego><newline46mondego>private void charge(APDU apdu) {        <newline46mondego>    byte[] buffer = apdu.getBuffer();<newline46mondego>    byte numBytes = buffer[ISO7816.OFFSET_LC];<newline46mondego>    byte byteRead = (byte) (apdu.setIncomingAndReceive());<newline46mondego><newline46mondego>    if ((numBytes != 2) || (byteRead != 2)) {<newline46mondego>        ISOException.throwIt(ISO7816.SW_WRONG_LENGTH);<newline46mondego>    }<newline46mondego><newline46mondego>    short chargeAmount = (short) ((short) (buffer[ISO7816.OFFSET_CDATA] << (short) 8) | (buffer[ISO7816.OFFSET_CDATA + 1]));<newline46mondego><newline46mondego>    if ((chargeAmount > MAX_BALANCE) || (chargeAmount < (short) 0)) {<newline46mondego>        ISOException.throwIt(SW_INVALID_TRANSACTION_AMOUNT);<newline46mondego>    }<newline46mondego><newline46mondego>    if ((short) (balance + chargeAmount) > MAX_BALANCE) {<newline46mondego>        ISOException.throwIt(SW_MAX_BALANCE_EXCEEDED);<newline46mondego>    }<newline46mondego>    JCSystem.beginTransaction();<newline46mondego>    balance = (short) (balance - chargeAmount);<newline46mondego>    JCSystem.commitTransaction();<newline46mondego>}<newline46mondego>"
"6594splitHere46","9566917splitHere46","public class MyClassFactory {<newline46mondego><newline46mondego>    public MyClass fromCsvLine(String csvLine) {<newline46mondego>        String[] fields = StringUtils.split(csvLine, ',');<newline46mondego>        return new MyClass(fields[3], fields[15], Integer.parseInt([fields[8]));<newline46mondego>    }<newline46mondego><newline46mondego>    //...<newline46mondego>}<newline46mondego>"
"6595splitHere46","9566928splitHere46","-Djavax.net.ssl.trustStore=<doubleQuotes46>C:/test/truststore<doubleQuotes46>  <newline46mondego>    -Djavax.net.ssl.trustStorePassword=<doubleQuotes46>test<doubleQuotes46>.<newline46mondego>"
"6596splitHere46","9566984splitHere46","System.out.println(<doubleQuotes46>This is Java<doubleQuotes46>+'\r'+<doubleQuotes46>That<doubleQuotes46>);<newline46mondego>"
"6597splitHere46","9566984splitHere46","That is Java<newline46mondego>"
"6598splitHere46","9566984splitHere46","This is Java<newline46mondego>That<newline46mondego>"
"6599splitHere46","9567051splitHere46","executorService.shutDown()"
"6600splitHere46","9567051splitHere46","executorService.awaitTermination(10, TimeUnit.SECONDS)"
"6601splitHere46","9567051splitHere46","while (!executorService.isTerminated()) { }"
"6602splitHere46","9567081splitHere46","import java.awt.*;<newline46mondego><newline46mondego>import java.awt.event.*;<newline46mondego><newline46mondego>import javax.swing.*;<newline46mondego><newline46mondego>import javax.swing.border.*;<newline46mondego><newline46mondego>import javax.swing.text.AttributeSet;<newline46mondego>import javax.swing.text.SimpleAttributeSet;<newline46mondego>import javax.swing.text.StyleConstants;<newline46mondego>import javax.swing.text.StyleContext;<newline46mondego><newline46mondego>public class TextPaneTest extends JFrame<newline46mondego>{<newline46mondego>    private JPanel topPanel;<newline46mondego>    private JTextPane tPane;<newline46mondego><newline46mondego>    public TextPaneTest()<newline46mondego>    {<newline46mondego>        topPanel = new JPanel();        <newline46mondego><newline46mondego>        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        setLocationRelativeTo(null);            <newline46mondego><newline46mondego>        EmptyBorder eb = new EmptyBorder(new Insets(10, 10, 10, 10));<newline46mondego><newline46mondego>        tPane = new JTextPane();                <newline46mondego>        tPane.setBorder(eb);<newline46mondego>        //tPane.setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY));<newline46mondego>        tPane.setMargin(new Insets(5, 5, 5, 5));<newline46mondego><newline46mondego>        topPanel.add(tPane);<newline46mondego><newline46mondego>        appendToPane(tPane, <doubleQuotes46>My Name is Too Good.\n<doubleQuotes46>, Color.RED);<newline46mondego>        appendToPane(tPane, <doubleQuotes46>I wish I could be ONE of THE BEST on <doubleQuotes46>, Color.BLUE);<newline46mondego>        appendToPane(tPane, <doubleQuotes46>Stack<doubleQuotes46>, Color.DARK_GRAY);<newline46mondego>        appendToPane(tPane, <doubleQuotes46>Over<doubleQuotes46>, Color.MAGENTA);<newline46mondego>        appendToPane(tPane, <doubleQuotes46>flow<doubleQuotes46>, Color.ORANGE);<newline46mondego><newline46mondego>        getContentPane().add(topPanel);<newline46mondego><newline46mondego>        pack();<newline46mondego>        setVisible(true);   <newline46mondego>    }<newline46mondego><newline46mondego>    private void appendToPane(JTextPane tp, String msg, Color c)<newline46mondego>    {<newline46mondego>        StyleContext sc = StyleContext.getDefaultStyleContext();<newline46mondego>        AttributeSet aset = sc.addAttribute(SimpleAttributeSet.EMPTY, StyleConstants.Foreground, c);<newline46mondego><newline46mondego>        aset = sc.addAttribute(aset, StyleConstants.FontFamily, <doubleQuotes46>Lucida Console<doubleQuotes46>);<newline46mondego>        aset = sc.addAttribute(aset, StyleConstants.Alignment, StyleConstants.ALIGN_JUSTIFIED);<newline46mondego><newline46mondego>        int len = tp.getDocument().getLength();<newline46mondego>        tp.setCaretPosition(len);<newline46mondego>        tp.setCharacterAttributes(aset, false);<newline46mondego>        tp.replaceSelection(msg);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String... args)<newline46mondego>    {<newline46mondego>        SwingUtilities.invokeLater(new Runnable()<newline46mondego>            {<newline46mondego>                public void run()<newline46mondego>                {<newline46mondego>                    new TextPaneTest();<newline46mondego>                }<newline46mondego>            });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6603splitHere46","9567101splitHere46","[0,0,0,1,1,1,0,0,0,0] == [3A,4,5L]<newline46mondego>-> add after [0,0,0,1,2,2,2,1,1,0] == [3A,4,5,6,7,8L]<newline46mondego>-> add before [0,0,0,2,2,2,1,1,1,0] == [3,4,5,6A,7,8L]<newline46mondego>"
"6604splitHere46","9567101splitHere46","[1,0,0,0,0,0,0,0,0,0]<newline46mondego>-> add after [1,0,0,0,0,0,0,0,0,0]<newline46mondego>"
"6605splitHere46","9567101splitHere46","private static void printSelection(ListSelectionModel model) {<newline46mondego>    System.out.print(<doubleQuotes46>[<doubleQuotes46>);<newline46mondego>    for (int i = model.getMinSelectionIndex(); i <= model.getMaxSelectionIndex(); i++) {<newline46mondego>        if(i > model.getMinSelectionIndex()) {<newline46mondego>            System.out.print(<doubleQuotes46>,<doubleQuotes46>);<newline46mondego>        }<newline46mondego>        if(model.isSelectedIndex(i)) {<newline46mondego>            System.out.print(i);<newline46mondego>            if(i == model.getAnchorSelectionIndex()) {<newline46mondego>                System.out.print(<doubleQuotes46>A<doubleQuotes46>);<newline46mondego>            }<newline46mondego>            if(i == model.getLeadSelectionIndex()) {<newline46mondego>                System.out.print(<doubleQuotes46>L<doubleQuotes46>);<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>    System.out.println(<doubleQuotes46>]<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"6606splitHere46","9567182splitHere46","FocusControl.isAutoFocusSupported()"
"6607splitHere46","9567194splitHere46","@XmlType<newline46mondego>public class Data {<newline46mondego>    private String fname;<newline46mondego>    private String lname;<newline46mondego>    private Collection<String> cars;<newline46mondego><newline46mondego>    // getters<newline46mondego>    public String getFname() {<newline46mondego>        return fname;<newline46mondego>    }<newline46mondego>    public String getLname() {<newline46mondego>        return lname;<newline46mondego>    }<newline46mondego>    @XmlElementWrapper(name = <doubleQuotes46>cars<doubleQuotes46>)<newline46mondego>    @XmlElement(name = <doubleQuotes46>car<doubleQuotes46>)<newline46mondego>    public String getCars() {<newline46mondego>        return cars;<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>    // setters.....<newline46mondego>}<newline46mondego>"
"6608splitHere46","9567194splitHere46","JAXBContext ctx = JAXBContext.newInstance(<doubleQuotes46>com.yourpackage<doubleQuotes46>);<newline46mondego>Marshaller m = ctx.createMarshaller();<newline46mondego>m.marshal(data, System.out);<newline46mondego>"
"6609splitHere46","9567194splitHere46","JAXBContext ctx = JAXBContext.newInstance(<doubleQuotes46>com.panpwr.api.model.deployment<doubleQuotes46>);<newline46mondego>Unmarshaller unmarshaller = ctx.createUnmarshaller();<newline46mondego>Data data = (Data)unmarshaller.unmarshal(in); // in is the input stream for XML<newline46mondego>// now your instance of data is populated from XML<newline46mondego>"
"6610splitHere46","9567408splitHere46","ArrayList<Integer> al = new ArrayList<Integer>(); <newline46mondego>"
"6611splitHere46","9567408splitHere46","Arrays.Sort(al);<newline46mondego>"
"6612splitHere46","9567408splitHere46","Collections.Sort(al);<newline46mondego>"
"6613splitHere46","9567466splitHere46","import java.io.BufferedReader;<newline46mondego>import java.io.File;<newline46mondego>import java.io.FileInputStream;<newline46mondego>import java.io.InputStream;<newline46mondego>import java.io.InputStreamReader;<newline46mondego>import com.google.gson.Gson;<newline46mondego><newline46mondego><newline46mondego>public class ConfigLoader {<newline46mondego>    public static void main(final String[] args) {<newline46mondego>        final ConfigurationSettings loadedConfigSettigs = load(new FileInputStream(new File(<doubleQuotes46>testSettings.json<doubleQuotes46>)),<newline46mondego>                ConfigurationSettings.class);<newline46mondego><newline46mondego>        final AlternativeConfigurationSettings alternativeConfigSettigs = load(new FileInputStream(new File(<doubleQuotes46>testSettings2.json<doubleQuotes46>)),<newline46mondego>                AlternativeConfigurationSettings.class);<newline46mondego>    }<newline46mondego><newline46mondego>    public static <T> T load(final InputStream inputStream, final Class<T> clazz) {<newline46mondego>        try {<newline46mondego>            if (inputStream != null) {<newline46mondego>                final Gson gson = new Gson();<newline46mondego>                final BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream));<newline46mondego>                return gson.fromJson(reader, clazz);<newline46mondego>            }<newline46mondego>        } catch (final Exception e) {<newline46mondego>        }<newline46mondego>        return null;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6614splitHere46","9567711splitHere46","SSLProtocol -all +TLSv1<newline46mondego>"
"6615splitHere46","9567711splitHere46","SSLProtocol -all +SSLv3 +TLSv1<newline46mondego>"
"6616splitHere46","9567722splitHere46","Runtime.getRuntime().exec(<doubleQuotes46>mysql -u <username> -p<password> <youdbname> <  <youbackupfile><doubleQuotes46>);<newline46mondego>"
"6617splitHere46","9567722splitHere46","<username>"
"6618splitHere46","9567722splitHere46","<password>"
"6619splitHere46","9567722splitHere46","<yourdbname>"
"6620splitHere46","9567722splitHere46","<yourbackupfile>"
"6621splitHere46","9568170splitHere46","BufferedOutputStream"
"6622splitHere46","9568170splitHere46","DataOutputStream"
"6623splitHere46","9568170splitHere46","OutputStream"
"6624splitHere46","9568170splitHere46","writeInt()"
"6625splitHere46","9568170splitHere46","write(byte[], int, int)"
"6626splitHere46","9568170splitHere46","writeUTF(String)"
"6627splitHere46","9568170splitHere46","byte[]"
"6628splitHere46","9568170splitHere46","int"
"6629splitHere46","9568170splitHere46","double"
"6630splitHere46","9568198splitHere46","List<? extends List<? extends Number>> a;<newline46mondego>List<List<Integer>> b;<newline46mondego>a = b;<newline46mondego>"
"6631splitHere46","9568409splitHere46","outputViewer.getTable().setLinesVisable(true);<newline46mondego>"
"6632splitHere46","9568416splitHere46","xterm"
"6633splitHere46","9568416splitHere46","ProcessBuilder"
"6634splitHere46","9568431splitHere46","public class MyPair<newline46mondego>{<newline46mondego>    private final Double key;<newline46mondego>    private final Double value;<newline46mondego><newline46mondego>    public MyPair(Double aKey, Double aValue)<newline46mondego>    {<newline46mondego>        key   = aKey;<newline46mondego>        value = aValue;<newline46mondego>    }<newline46mondego><newline46mondego>    public Double key()   { return key; }<newline46mondego>    public Double value() { return value; }<newline46mondego>}<newline46mondego>"
"6635splitHere46","9568431splitHere46","Pair"
"6636splitHere46","9568439splitHere46","co-variant"
"6637splitHere46","9568439splitHere46","List<SubChild>"
"6638splitHere46","9568439splitHere46","List<SuperChild>"
"6639splitHere46","9568439splitHere46","List<Animals>"
"6640splitHere46","9568439splitHere46","List<Dogs>"
"6641splitHere46","9568439splitHere46","Dog"
"6642splitHere46","9568439splitHere46","Animal"
"6643splitHere46","9568439splitHere46","List<Dogs> dogs = new ArrayList<Dogs>();<newline46mondego>List<Animals> animals = dogs; //not allowed.<newline46mondego>"
"6644splitHere46","9568439splitHere46","animals.add(new Cat());<newline46mondego>"
"6645splitHere46","9568439splitHere46","Dog dog = dogs.get(0); //fail<newline46mondego>"
"6646splitHere46","9568439splitHere46","List<? extends SuperChild>"
"6647splitHere46","9568486splitHere46","<%<newline46mondego>    Reader reader = new FileReader(<doubleQuotes46>c:/path/to/external/file.html<doubleQuotes46>);<newline46mondego>    try {<newline46mondego>        for (int i = 0; (i = reader.read()) != -1;) {<newline46mondego>            out.write(i);<newline46mondego>        }<newline46mondego>    } finally {<newline46mondego>        try { reader.close(); } catch (IOException ignore) {}<newline46mondego>    }<newline46mondego>%><newline46mondego>"
"6648splitHere46","9568486splitHere46","String"
"6649splitHere46","9568587splitHere46","String stringResponse = <doubleQuotes46><doubleQuotes46>;<newline46mondego>   try {<newline46mondego>      // execute GET to graph service<newline46mondego>      WS.WSRequest wsRequest = WS.url( serviceURL ).authenticate( USERNAME, PASSWORD );<newline46mondego>      WS.HttpResponse response = wsRequest.get();<newline46mondego>      stringResponse = response.getString();<newline46mondego><newline46mondego>      ... more cool stuff ...<newline46mondego>"
"6650splitHere46","9568658splitHere46","<target name=<doubleQuotes46>test<doubleQuotes46> ><newline46mondego><newline46mondego> <javac srcdir=<doubleQuotes46>/src<doubleQuotes46><newline46mondego>     destdir=<doubleQuotes46>/bin<doubleQuotes46><newline46mondego>     classpath=<doubleQuotes46>/lib/junit.jar<doubleQuotes46>  /><newline46mondego><newline46mondego><newline46mondego><junit haltonfailure=<doubleQuotes46>false<doubleQuotes46>><newline46mondego>  <formatter type=<doubleQuotes46>xml<doubleQuotes46> /><newline46mondego>  <batchtest todir=<doubleQuotes46>/test-reports<doubleQuotes46>><newline46mondego>    <fileset dir=<doubleQuotes46>/bin<doubleQuotes46> includes=<doubleQuotes46>tests/ExampleTest.class<doubleQuotes46>  /><newline46mondego>  </batchtest><newline46mondego></junit><newline46mondego></target><newline46mondego>"
"6651splitHere46","9568712splitHere46","gif"
"6652splitHere46","9568712splitHere46","animated gif"
"6653splitHere46","9568712splitHere46","Swing"
"6654splitHere46","9568712splitHere46","import java.awt.Insets;<newline46mondego>import java.awt.event.MouseEvent;<newline46mondego>import java.awt.event.MouseListener;<newline46mondego>import javax.swing.Icon;<newline46mondego>import javax.swing.JButton;<newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.SwingUtilities;<newline46mondego>import javax.swing.UIManager;<newline46mondego><newline46mondego>public class MyToggleButton extends JFrame {<newline46mondego><newline46mondego>    private static final long serialVersionUID = 1L;<newline46mondego>    private Icon errorIcon = UIManager.getIcon(<doubleQuotes46>OptionPane.errorIcon<doubleQuotes46>);<newline46mondego>    private Icon infoIcon = UIManager.getIcon(<doubleQuotes46>OptionPane.informationIcon<doubleQuotes46>);<newline46mondego>    private Icon warnIcon = UIManager.getIcon(<doubleQuotes46>OptionPane.warningIcon<doubleQuotes46>);<newline46mondego><newline46mondego>    public MyToggleButton() {<newline46mondego>        final JButton toggleButton = new JButton();<newline46mondego>        toggleButton.setBorderPainted(false);<newline46mondego>        toggleButton.setBorder(null);<newline46mondego>        toggleButton.setFocusable(false);<newline46mondego>        toggleButton.setMargin(new Insets(0, 0, 0, 0));<newline46mondego>        toggleButton.setContentAreaFilled(false);<newline46mondego>        toggleButton.setIcon((errorIcon));<newline46mondego>        toggleButton.setSelectedIcon(infoIcon);<newline46mondego>        toggleButton.setRolloverIcon((infoIcon));<newline46mondego>        toggleButton.setPressedIcon(warnIcon);<newline46mondego>        toggleButton.setDisabledIcon(warnIcon);<newline46mondego>        add(toggleButton);<newline46mondego>        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        pack();<newline46mondego>        setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        SwingUtilities.invokeLater(new Runnable() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                MyToggleButton t = new MyToggleButton();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6655splitHere46","9568783splitHere46","file"
"6656splitHere46","9569054splitHere46","for (ActivityManager.RunningAppProcessInfo runningAppProcessInfo : appinfolist) {<newline46mondego>        TaskObject runningtask = new TaskObject();<newline46mondego>        String ringgo = new String();<newline46mondego><newline46mondego>        ringgo = runningAppProcessInfo.processName.toLowerCase().trim();<newline46mondego>        if (!ringgo.equals(<doubleQuotes46>system<doubleQuotes46>)){<newline46mondego>            if (ringgo.length()>12){<newline46mondego>            runningtask.setPid(runningAppProcessInfo.pid);<newline46mondego>            runningtask.setProcessName(ringgo.substring(12).substring(0,1).toUpperCase()+ringgo.substring(13));<newline46mondego>            adapter.addTask(runningtask);}<newline46mondego>            else{<newline46mondego>                runningtask.setPid(runningAppProcessInfo.pid);<newline46mondego>                runningtask.setProcessName(ringgo.substring(0,1).toUpperCase()+ringgo.substring(1));<newline46mondego>                adapter.addTask(runningtask);<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6657splitHere46","9569059splitHere46","mainFrame.getContentPane().add(new BrowserFrame());<newline46mondego>"
"6658splitHere46","9569059splitHere46","setLayout(new BorderLayout());<newline46mondego>add(jEditorPane);<newline46mondego>"
"6659splitHere46","9569059splitHere46","SwingUtilities.invokeLater"
"6660splitHere46","9569098splitHere46","String input = <doubleQuotes46>Graaf Karel De Goedelaan 1 8500 Kortrijk<doubleQuotes46>;<newline46mondego>String[] results = input.split(<doubleQuotes46>([0-9]{4})<doubleQuotes46>);<newline46mondego>String road = results[0].trim();<newline46mondego>String city = results[1].trim();<newline46mondego>String postcode = <doubleQuotes46><doubleQuotes46>;<newline46mondego>Pattern p = Pattern.compile(<doubleQuotes46>([0-9]{4})<doubleQuotes46>);<newline46mondego>Matcher m = p.matcher(input);<newline46mondego>while(m.find()) {<newline46mondego>    postcode = m.group(1);<newline46mondego>}<newline46mondego>System.out.println(input);<newline46mondego>System.out.println(<doubleQuotes46>Road: <doubleQuotes46> + road);<newline46mondego>System.out.println(<doubleQuotes46>Postcode: <doubleQuotes46> + postcode);<newline46mondego>System.out.println(<doubleQuotes46>City: <doubleQuotes46> + city);<newline46mondego>"
"6661splitHere46","9569298splitHere46","Class"
"6662splitHere46","9569298splitHere46","Field.getDeclaredAnnotations()"
"6663splitHere46","9569298splitHere46","Binder.requestStaticInjection()"
"6664splitHere46","9569298splitHere46","requestStaticInjection()"
"6665splitHere46","9569298splitHere46","Injector.getInstance()"
"6666splitHere46","9569298splitHere46","guice-servlet"
"6667splitHere46","9569298splitHere46","serve().with()"
"6668splitHere46","9569298splitHere46","web.xml"
"6669splitHere46","9569298splitHere46","Binder.requestInjection()"
"6670splitHere46","9569457splitHere46","String.split(String regex,int limit)"
"6671splitHere46","9569457splitHere46","String[]"
"6672splitHere46","9569551splitHere46","public static class MyDBWorker extends SwingWorker<Void, Object[]> {<newline46mondego><newline46mondego>    private JTable table;<newline46mondego>    private DefaultTableModel model;<newline46mondego>    private ResultSet resultado;<newline46mondego><newline46mondego>    public MyDBWorker(JTable table, ResultSet resultado) {<newline46mondego>        this.table = table;<newline46mondego>        this.resultado = resultado;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected Void doInBackground() throws Exception {<newline46mondego>        ResultSetMetaData metadata = resultado.getMetaData();<newline46mondego>        int columnas = metadata.getColumnCount();<newline46mondego>        Object[] etiquetas = new Object[columnas];<newline46mondego>        for (int i = 0; i < columnas; i++) {<newline46mondego>            etiquetas[i] = metadata.getColumnName(i + 1);<newline46mondego>        }<newline46mondego>        publish(etiquetas);<newline46mondego>        while (resultado.next() && !this.isCancelled()) {<newline46mondego>            Object fila[] = new Object[columnas];<newline46mondego>            for (int i = 0; i < columnas; i++) {<newline46mondego>                fila[i] = resultado.getObject(i + 1);<newline46mondego>            }<newline46mondego>            publish(fila);<newline46mondego>        }<newline46mondego>        return null;<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void process(List<Object[]> chunks) {<newline46mondego>        int startIndex = 0;<newline46mondego>        // first chunk, set up a new model<newline46mondego>        if (model == null) {<newline46mondego>            model = new DefaultTableModel();<newline46mondego>            model.setColumnIdentifiers(chunks.get(0));<newline46mondego>            table.setModel(model);<newline46mondego>            startIndex = 1;<newline46mondego>        }<newline46mondego>        for (int i = startIndex; i < chunks.size(); i++) {<newline46mondego>            model.addRow(chunks.get(i));<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void done() {<newline46mondego>        // nothing to do, we were cancelled<newline46mondego>        if (isCancelled()) return;<newline46mondego>        // check for errors thrown in doInBackground<newline46mondego>        try {<newline46mondego>            get();<newline46mondego>            // all was well in the background thread<newline46mondego>            // check if there are any results<newline46mondego>            if (table.getModel().getRowCount() == 0) {<newline46mondego>                // show message<newline46mondego>            }<newline46mondego>        } catch (ExecutionException e) {<newline46mondego>            // we get here if f.i. an SQLException is thrown<newline46mondego>            // handle it as appropriate, f.i. inform user/logging system<newline46mondego>        } catch (InterruptedException e) {<newline46mondego>            // <newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>// use it<newline46mondego>SwingWorker worker = new MyDBWorker(table, resultado);<newline46mondego>PropertyChangeListener stateListener = new PropertyChangeListener() {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void propertyChange(PropertyChangeEvent e) {<newline46mondego>        if (e.getNewValue() == SwingWorker.StateValue.STARTED) {<newline46mondego>            progressBar.setIndeterminate(true);<newline46mondego>        }<newline46mondego>        if (e.getNewValue() == SwingWorker.StateValue.DONE) {<newline46mondego>            progressBar.setIndeterminate(false);<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>};<newline46mondego>worker.addPropertyChangeListener(doneListener);<newline46mondego>worker.execute();<newline46mondego>"
"6673splitHere46","9569644splitHere46","FileReader"
"6674splitHere46","9569644splitHere46","FileWriter"
"6675splitHere46","9569644splitHere46","InputStreamReader"
"6676splitHere46","9569644splitHere46","OutputStreamWriter"
"6677splitHere46","9569644splitHere46","private static final String FILE = <doubleQuotes46>file<doubleQuotes46>;<newline46mondego>private static final String CHARSET = <doubleQuotes46>charset<doubleQuotes46>;<newline46mondego><newline46mondego>public static BufferedReader createReader( File file, Encoding charset ) throws IOException {<newline46mondego>    JavaUtils.notNull( FILE, file );<newline46mondego>    JavaUtils.notNull( CHARSET, charset );<newline46mondego><newline46mondego>    FileInputStream stream = null;<newline46mondego>    try {<newline46mondego>        stream = new FileInputStream( file );<newline46mondego>        return createReader( stream, charset );<newline46mondego>    } catch( IOException e ) {<newline46mondego>        IOUtils.closeQuietly( stream );<newline46mondego>        throw e;<newline46mondego>    } catch( RuntimeException e ) {<newline46mondego>        IOUtils.closeQuietly( stream );<newline46mondego>        throw e;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public static BufferedReader createReader( InputStream stream, Encoding charset ) throws IOException {<newline46mondego>    JavaUtils.notNull( <doubleQuotes46>stream<doubleQuotes46>, stream );<newline46mondego>    JavaUtils.notNull( <doubleQuotes46>charset<doubleQuotes46>, charset );<newline46mondego><newline46mondego>    try {<newline46mondego>        return new BufferedReader( new InputStreamReader( stream, charset.encoding() ) );<newline46mondego>    } catch( UnsupportedEncodingException e ) {<newline46mondego>        IOUtils.closeQuietly( stream );<newline46mondego>        throw new UnknownEncodingException( charset, e );<newline46mondego>    } catch( RuntimeException e ) {<newline46mondego>        IOUtils.closeQuietly( stream );<newline46mondego>        throw e;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public static BufferedWriter createWriter( File file, Encoding charset ) throws IOException {<newline46mondego>    JavaUtils.notNull( FILE, file );<newline46mondego>    JavaUtils.notNull( CHARSET, charset );<newline46mondego><newline46mondego>    FileOutputStream stream = null;<newline46mondego>    try {<newline46mondego>        stream = new FileOutputStream( file );<newline46mondego>        return new BufferedWriter( new OutputStreamWriter( stream, charset.encoding() ) );<newline46mondego>    } catch( UnsupportedEncodingException e ) {<newline46mondego>        IOUtils.closeQuietly( stream );<newline46mondego>        throw new UnknownEncodingException( charset, e );<newline46mondego>    } catch( IOException e ) {<newline46mondego>        IOUtils.closeQuietly( stream );<newline46mondego>        throw e;<newline46mondego>    } catch( RuntimeException e ) {<newline46mondego>        IOUtils.closeQuietly( stream );<newline46mondego>        throw e;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6678splitHere46","9569644splitHere46","Encoding"
"6679splitHere46","9569644splitHere46","enum"
"6680splitHere46","9569644splitHere46","public interface Encoding {<newline46mondego>    String encoding();<newline46mondego>    Charset charset();<newline46mondego>}<newline46mondego>"
"6681splitHere46","9569725splitHere46","ActionListener"
"6682splitHere46","9569725splitHere46","addActionListener"
"6683splitHere46","9569725splitHere46","ActionListener"
"6684splitHere46","9569725splitHere46","yourButton.addActionListener(new ActionListener() { <newline46mondego>    public void actionPerformed(ActionEvent e) { <newline46mondego>        hillClimb();<newline46mondego>    } <newline46mondego>});<newline46mondego>"
"6685splitHere46","9569743splitHere46","IOException"
"6686splitHere46","9569743splitHere46","NullPointerException"
"6687splitHere46","9569804splitHere46","@Consumes(<doubleQuotes46>application/octet-stream<doubleQuotes46>)"
"6688splitHere46","9569824splitHere46","equals"
"6689splitHere46","9569824splitHere46","Predicate"
"6690splitHere46","9570070splitHere46","Map<Class<?>, IToStringService<?>>"
"6691splitHere46","9570070splitHere46","Map<Class<(exists T1 extends Object)>, IToStringService<(exist T2 extends Object)>> <newline46mondego>"
"6692splitHere46","9570070splitHere46","Map<(exists T extends Object Class<T>, IToStringService<T>> <newline46mondego>"
"6693splitHere46","9570076splitHere46","PendingIntent"
"6694splitHere46","9570085splitHere46","withX()"
"6695splitHere46","9570085splitHere46","java.lang.String"
"6696splitHere46","9570085splitHere46","deriveFoo()"
"6697splitHere46","9570120splitHere46","Selected resources"
"6698splitHere46","9570144splitHere46","suspend=y"
"6699splitHere46","9570144splitHere46","suspend=y"
"6700splitHere46","9570242splitHere46","WAR"
"6701splitHere46","9570242splitHere46","<tomcat>/conf/catalina.properties"
"6702splitHere46","9570242splitHere46","# List of JAR files that should not be scanned for configuration information<newline46mondego># such as web fragments, TLD files etc. It must be a comma separated list of<newline46mondego># JAR file names.<newline46mondego># The JARs listed below include:<newline46mondego># - Tomcat Bootstrap JARs<newline46mondego># - Tomcat API JARs<newline46mondego># - Catalina JARs<newline46mondego># - Jasper JARs<newline46mondego># - Tomcat JARs<newline46mondego># - Common non-Tomcat JARs<newline46mondego># - Sun JDK JARs<newline46mondego># - Apple JDK JARs<newline46mondego>"
"6703splitHere46","9570299splitHere46","protected void paint(Graphics g)<newline46mondego>{<newline46mondego>    super.paint(g);<newline46mondego>    //do your drawing here<newline46mondego>} <newline46mondego>"
"6704splitHere46","9570306splitHere46","CardLayout"
"6705splitHere46","9570311splitHere46","Receiver.send()"
"6706splitHere46","9570311splitHere46","Calendar"
"6707splitHere46","9570311splitHere46","java.sql.Timestamp"
"6708splitHere46","9570311splitHere46","Date"
"6709splitHere46","9570311splitHere46","Calendar"
"6710splitHere46","9570311splitHere46","Date"
"6711splitHere46","9570496splitHere46","char"
"6712splitHere46","9570496splitHere46","String"
"6713splitHere46","9570496splitHere46","Byte"
"6714splitHere46","9570496splitHere46","Map<String, Byte>"
"6715splitHere46","9570634splitHere46","etc/hosts"
"6716splitHere46","9570711splitHere46","map.put(channel, temp);<newline46mondego>out.println(<doubleQuotes46>array added to map<doubleQuotes46>);<newline46mondego>temp.clear();<newline46mondego>"
"6717splitHere46","9570711splitHere46","temp.clear()"
"6718splitHere46","9570711splitHere46","temp"
"6719splitHere46","9570789splitHere46","Path"
"6720splitHere46","9570789splitHere46","toPath()"
"6721splitHere46","9570998splitHere46","q.getSingleResult();"
"6722splitHere46","9570998splitHere46","user a(uname,pwd)= (<doubleQuotes46>usera<doubleQuotes46>,<doubleQuotes46>123<doubleQuotes46>)<newline46mondego>user b(uname,pwd)= (<doubleQuotes46>userb<doubleQuotes46>,<doubleQuotes46>123<doubleQuotes46>)<newline46mondego>"
"6723splitHere46","9571000splitHere46","%JDK_HOME%\lib\visualvm\etc\visualvm.conf"
"6724splitHere46","9571000splitHere46","Xms"
"6725splitHere46","9571000splitHere46","Xmx"
"6726splitHere46","9571000splitHere46","default_options"
"6727splitHere46","9571048splitHere46","package com.overflow.stack;<newline46mondego><newline46mondego>    /**<newline46mondego>     *<newline46mondego>     * @author sarath_sivan<newline46mondego>     */<newline46mondego><newline46mondego>    public class ExtractHtmlTags {<newline46mondego><newline46mondego>        public static void getHtmlTags(String html) {<newline46mondego>            int beginIndex = 0;<newline46mondego>            while(beginIndex!=-1) {<newline46mondego>                beginIndex = html.indexOf(<doubleQuotes46><<doubleQuotes46>, 0);<newline46mondego>                int endIndex = html.indexOf(<doubleQuotes46>><doubleQuotes46>, beginIndex+1);<newline46mondego>                String htmlTag = <doubleQuotes46><doubleQuotes46>;<newline46mondego>                try {<newline46mondego>                    if(beginIndex!=-1) {<newline46mondego>                        htmlTag = html.substring(beginIndex, endIndex+1);<newline46mondego>                    }<newline46mondego>                } catch(Exception e) {<newline46mondego>                    e.printStackTrace();<newline46mondego>                }<newline46mondego>                System.out.println(htmlTag);<newline46mondego>                html = html.substring(endIndex+1, html.length());<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        public static void main(String[] args) {<newline46mondego>            String html = <doubleQuotes46><html><body><h2>List HTML tags from a String</h2>hello<br /></body></html><doubleQuotes46>;<newline46mondego>            ExtractHtmlTags.getHtmlTags(html);<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego>"
"6728splitHere46","9571221splitHere46","Criterion"
"6729splitHere46","9571221splitHere46","List<PlayerEntity> playerList = (List<PlayerEntity>)session.createCriteria(PlayerEntity.class)<newline46mondego>.add(Restrictions.sqlRestriction(<doubleQuotes46>(a- b) > 5<doubleQuotes46>)).list();<newline46mondego>"
"6730splitHere46","9571221splitHere46","select * from PlayerEntity  where (a-b) > 5"
"6731splitHere46","9571221splitHere46","@Formula"
"6732splitHere46","9571221splitHere46","@Entity<newline46mondego>public class PlayerEntity {<newline46mondego><newline46mondego>  @Column(nullable = false)<newline46mondego>  private Integer a;<newline46mondego><newline46mondego>  @Column(nullable = false)<newline46mondego>  private Integer b;<newline46mondego><newline46mondego>  @Formula(<doubleQuotes46>a - b<doubleQuotes46>) <newline46mondego>  private Integer delta<newline46mondego>}<newline46mondego><newline46mondego>List<PlayerEntity> playerList = (List<PlayerEntity>)session.createCriteria(PlayerEntity.class)<newline46mondego>.add(Restrictions.gt(<doubleQuotes46>delta<doubleQuotes46>, 5).list();<newline46mondego>"
"6733splitHere46","9571245splitHere46","public static CharSequence getRelativeTimeSpanString(Context c, long millis,<newline46mondego>        boolean withPreposition) {<newline46mondego><newline46mondego>    long now = System.currentTimeMillis();<newline46mondego>    long span = now - millis;<newline46mondego><newline46mondego>    if (sNowTime == null) {<newline46mondego>        sNowTime = new Time();<newline46mondego>        sThenTime = new Time();<newline46mondego>    }<newline46mondego><newline46mondego>    sNowTime.set(now);<newline46mondego>    sThenTime.set(millis);<newline46mondego><newline46mondego>    String result;<newline46mondego>    int prepositionId;<newline46mondego>    if (span < DAY_IN_MILLIS && sNowTime.weekDay == sThenTime.weekDay) {<newline46mondego>        // Same day<newline46mondego>        int flags = FORMAT_SHOW_TIME;<newline46mondego>        result = formatDateRange(c, millis, millis, flags);<newline46mondego>        prepositionId = R.string.preposition_for_time;<newline46mondego>    } else if (sNowTime.year != sThenTime.year) {<newline46mondego>        // Different years<newline46mondego>        int flags = FORMAT_SHOW_DATE | FORMAT_SHOW_YEAR | FORMAT_NUMERIC_DATE;<newline46mondego>        result = formatDateRange(c, millis, millis, flags);<newline46mondego><newline46mondego>        // This is a date (like <doubleQuotes46>10/31/2008<doubleQuotes46> so use the date preposition)<newline46mondego>        prepositionId = R.string.preposition_for_date;<newline46mondego>    } else {<newline46mondego>        // Default<newline46mondego>        int flags = FORMAT_SHOW_DATE | FORMAT_ABBREV_MONTH;<newline46mondego>        result = formatDateRange(c, millis, millis, flags);<newline46mondego>        prepositionId = R.string.preposition_for_date;<newline46mondego>    }<newline46mondego>    if (withPreposition) {<newline46mondego>        Resources res = c.getResources();<newline46mondego>        result = res.getString(prepositionId, result);<newline46mondego>    }<newline46mondego>    return result;<newline46mondego>}<newline46mondego>"
"6734splitHere46","9571437splitHere46","T[z][i]"
"6735splitHere46","9571437splitHere46","true"
"6736splitHere46","9571437splitHere46","T[z][i]"
"6737splitHere46","9571437splitHere46","true"
"6738splitHere46","9571437splitHere46","for i = 1 to k<newline46mondego>    for z = 0 to sum:<newline46mondego>        for j = z-x_i to 0:<newline46mondego>            if(T[j][i-1]): <newline46mondego>                T[z][i]=true;<newline46mondego>                break;<newline46mondego>"
"6739splitHere46","9571437splitHere46","T[z][i]"
"6740splitHere46","9571437splitHere46","T[z-x_i..0][i-1]"
"6741splitHere46","9571437splitHere46","T[z+1][i]"
"6742splitHere46","9571437splitHere46","T[z+1-x_i..0][i-1]"
"6743splitHere46","9571437splitHere46","T[z][i]"
"6744splitHere46","9571437splitHere46","true"
"6745splitHere46","9571437splitHere46","T[z+1-x_i][i-1]"
"6746splitHere46","9571437splitHere46","T[z+1][i-1]"
"6747splitHere46","9571437splitHere46","true"
"6748splitHere46","9571437splitHere46","T[z][i]"
"6749splitHere46","9571437splitHere46","changed"
"6750splitHere46","9571437splitHere46","T[z][i] = changed && T[z-1][i]"
"6751splitHere46","9571437splitHere46","T[z,i]"
"6752splitHere46","9571437splitHere46","T[z-1,i]"
"6753splitHere46","9571437splitHere46","T[z-1-x_i,i-1]"
"6754splitHere46","9571437splitHere46","T[z,i]"
"6755splitHere46","9571437splitHere46","(i-1)"
"6756splitHere46","9571437splitHere46","T[z,i]"
"6757splitHere46","9571439splitHere46","showOutput"
"6758splitHere46","9571558splitHere46","SurfaceHolder.lockCanvas"
"6759splitHere46","9571558splitHere46","null"
"6760splitHere46","9571558splitHere46","try {               <newline46mondego>            canvas = this.surfaceHolder.lockCanvas(null);<newline46mondego>            synchronized (surfaceHolder) {<newline46mondego>                Log.v(TAG, <doubleQuotes46>CANVAS <doubleQuotes46> + canvas);<newline46mondego>                canvas.drawColor(Color.BLACK);<newline46mondego>"
"6761splitHere46","9571558splitHere46","synchronized (surfaceHolder)"
"6762splitHere46","9571558splitHere46","if (canvas != null)"
"6763splitHere46","9571625splitHere46","update"
"6764splitHere46","9571625splitHere46","<p:columns>"
"6765splitHere46","9571625splitHere46","<p:inputText value=<doubleQuotes46>#{bean.input}<doubleQuotes46> /><newline46mondego><p:commandButton value=<doubleQuotes46>submit<doubleQuotes46> action=<doubleQuotes46>#{bean.submit}<doubleQuotes46> update=<doubleQuotes46>table<doubleQuotes46> /><newline46mondego><newline46mondego><p:dataTable id=<doubleQuotes46>table<doubleQuotes46> value=<doubleQuotes46>#{bean.model}<doubleQuotes46> var=<doubleQuotes46>item<doubleQuotes46>><newline46mondego>    <p:columns value=<doubleQuotes46>#{bean.columns}<doubleQuotes46> var=<doubleQuotes46>column<doubleQuotes46>><newline46mondego>        <h:outputText value=<doubleQuotes46>#{item[column]}<doubleQuotes46> /><newline46mondego>    </p:columns><newline46mondego></p:dataTable><newline46mondego>"
"6766splitHere46","9571625splitHere46","public void submit() {<newline46mondego>    model = populateModelBasedOn(input);<newline46mondego>    columns = populateColumnsBasedOn(input);<newline46mondego>}<newline46mondego>"
"6767splitHere46","9571745splitHere46","select ID, Time, Sum(Total) as Total<newline46mondego>from Table1<newline46mondego>group by ID, Time<newline46mondego>"
"6768splitHere46","9571745splitHere46","select ID, Sum(Total) as Total<newline46mondego>from Table1<newline46mondego>group by ID<newline46mondego>"
"6769splitHere46","9571789splitHere46","FormLayout l = new FormLayout();<newline46mondego>...<newline46mondego>l.setContraints(component, newconstraints);<newline46mondego>"
"6770splitHere46","9571789splitHere46","revalidate()"
"6771splitHere46","9571830splitHere46","FileEntity"
"6772splitHere46","9571830splitHere46","MultipartEntity"
"6773splitHere46","9571830splitHere46","HttpPost"
"6774splitHere46","9572105splitHere46","...<newline46mondego><receiver android:name=<doubleQuotes46>.AutoStart<doubleQuotes46>><newline46mondego>    <intent-filter><newline46mondego>        <action android:name=<doubleQuotes46>android.intent.action.BOOT_COMPLETED<doubleQuotes46>></action><newline46mondego>    </intent-filter><newline46mondego></receiver><newline46mondego>...<newline46mondego>"
"6775splitHere46","9572105splitHere46","package YourPackageName;<newline46mondego>import android.content.BroadcastReceiver;<newline46mondego>import android.content.Context;<newline46mondego>import android.content.Intent;<newline46mondego><newline46mondego>public class AutoStart extends BroadcastReceiver<newline46mondego>{   <newline46mondego>    @Override<newline46mondego>    public void onReceive(Context context, Intent intent)<newline46mondego>    {   <newline46mondego>        if (intent.getAction().equals(<doubleQuotes46>android.intent.action.BOOT_COMPLETED<doubleQuotes46>))<newline46mondego>        {<newline46mondego>            // Your Code<newline46mondego>            Toast.makeText(context, <doubleQuotes46>Started !!!<doubleQuotes46>, Toast.LENGTH_LONG).show();           <newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6776splitHere46","9572111splitHere46","ArrayList<Integer> list = new ArrayList();<newline46mondego>list.add(new Integer(1));<newline46mondego>list.add(new Integer(2));<newline46mondego>.....<newline46mondego><newline46mondego>Integer i = (Integer)list.get(1);<newline46mondego>"
"6777splitHere46","9572111splitHere46","ArrayList<Integer> list = new ArrayList<Integer>();<newline46mondego>list.add(new Integer(1));<newline46mondego>list.add(new Integer(2));<newline46mondego>.....<newline46mondego><newline46mondego>Integer i = list.get(1);<newline46mondego>"
"6778splitHere46","9572134splitHere46","Runtime.getRuntime().exec"
"6779splitHere46","9572134splitHere46","Process p = null;<newline46mondego>try {<newline46mondego>    p = Runtime.getRuntime().exec(<doubleQuotes46>ls -l<doubleQuotes46>);<newline46mondego>    //process output here<newline46mondego>    p.waitFor();<newline46mondego>} finally {<newline46mondego>    if (p != null) {<newline46mondego>        p.getOutputStream().close();<newline46mondego>        p.getInputStream().close();<newline46mondego>        p.getErrorStream().close(); <newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6780splitHere46","9572141splitHere46","'/'"
"6781splitHere46","9572141splitHere46","'/'"
"6782splitHere46","9572141splitHere46","<doubleQuotes46>subDir<doubleQuotes46>"
"6783splitHere46","9572141splitHere46","<doubleQuotes46>subDir/subsubDir<doubleQuotes46>"
"6784splitHere46","9572267splitHere46","map (reader -> cache)"
"6785splitHere46","9572267splitHere46","IndexReader"
"6786splitHere46","9572267splitHere46","this"
"6787splitHere46","9572267splitHere46","IndexReader"
"6788splitHere46","9572267splitHere46","FilterIndexReader"
"6789splitHere46","9572267splitHere46","IndexReader"
"6790splitHere46","9572267splitHere46","FilterIndexReader#getCoreCacheKey"
"6791splitHere46","9572267splitHere46","IndexReader"
"6792splitHere46","9572273splitHere46","label:<newline46mondego>{<newline46mondego>    for(Foo f : AppleList) if(!f.slotted) break label;<newline46mondego><newline46mondego>    // Here you guaranteed that all slotted fields are true<newline46mondego>}<newline46mondego>"
"6793splitHere46","9572305splitHere46","FileOutputStream"
"6794splitHere46","9572305splitHere46","ByteArrayOutputStream"
"6795splitHere46","9572305splitHere46","ByteArrayOutputStream"
"6796splitHere46","9572434splitHere46","insert into test(:testname)"
"6797splitHere46","9572434splitHere46","insert into [TABLE_NAME]([FIELD_NAME],...) values ([VALUE],...)"
"6798splitHere46","9572434splitHere46","session.save(youHibernateObject);<newline46mondego>"
"6799splitHere46","9572539splitHere46","def sitemap = SiteMap(<newline46mondego>  Menu.i(<doubleQuotes46>Home<doubleQuotes46>) / <doubleQuotes46>index<doubleQuotes46> >> pickTemplate(),<newline46mondego>  Menu.i(<doubleQuotes46>First<doubleQuotes46>) / <doubleQuotes46>first<doubleQuotes46> <newline46mondego>)<newline46mondego><newline46mondego>//Show mobile or regular page<newline46mondego>def pickTemplate() ={<newline46mondego>  //If the browser is Chrome, pick this template<newline46mondego>  if(S.request.map(_.isChrome) openOr true  ){<newline46mondego>    Template( ()=>Templates(<doubleQuotes46>chrome<doubleQuotes46> :: Nil) openOr (NodeSeq.Empty))<newline46mondego>  } else{<newline46mondego>    Template( ()=>Templates(<doubleQuotes46>other<doubleQuotes46> :: Nil) openOr (NodeSeq.Empty))<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"6800splitHere46","9572754splitHere46","se.influen.wink.handler.OauthRequestHandler"
"6801splitHere46","9572754splitHere46","new"
"6802splitHere46","9572754splitHere46","public List<? extends org.apache.wink.server.handlers.RequestHandler> getRequestHandlers() {<newline46mondego><newline46mondego>return Arrays.asList(new se.influen.wink.handler.OauthRequestHandler());<newline46mondego><newline46mondego>}<newline46mondego>"
"6803splitHere46","9572820splitHere46","Foo[] array = list.toArray(new Foo[list.size()]);<newline46mondego>"
"6804splitHere46","9572820splitHere46","Foo[] array = new Foo[list.size()];<newline46mondego>list.toArray(array); // fill the array<newline46mondego>"
"6805splitHere46","9572820splitHere46","List<Integer> list = ...;<newline46mondego>int[] array = new int[list.size()];<newline46mondego>for(int i = 0; i < list.size(); i++) array[i] = list.get(i);<newline46mondego>"
"6806splitHere46","9573006splitHere46","AsyncTask"
"6807splitHere46","9573069splitHere46","import java.awt.event.ActionEvent;<newline46mondego>import java.awt.event.ActionListener;<newline46mondego>import javax.swing.JButton;<newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.SwingUtilities;<newline46mondego><newline46mondego><newline46mondego>public class StartupWindow extends JFrame implements ActionListener<newline46mondego>{<newline46mondego>    private JButton btn;<newline46mondego><newline46mondego>    public StartupWindow()<newline46mondego>    {<newline46mondego>        super(<doubleQuotes46>Simple GUI<doubleQuotes46>);<newline46mondego>        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego><newline46mondego>        btn = new JButton(<doubleQuotes46>Open the other JFrame!<doubleQuotes46>);<newline46mondego>        btn.addActionListener(this);<newline46mondego>        btn.setActionCommand(<doubleQuotes46>Open<doubleQuotes46>);<newline46mondego>        add(btn);<newline46mondego>        pack();<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void actionPerformed(ActionEvent e)<newline46mondego>    {<newline46mondego>        String cmd = e.getActionCommand();<newline46mondego><newline46mondego>        if(cmd.equals(<doubleQuotes46>Open<doubleQuotes46>))<newline46mondego>        {<newline46mondego>            dispose();<newline46mondego>            new AnotherJFrame();<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args)<newline46mondego>    {<newline46mondego>        SwingUtilities.invokeLater(new Runnable(){<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void run()<newline46mondego>            {<newline46mondego>                new StartupWindow().setVisible(true);<newline46mondego>            }<newline46mondego><newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6808splitHere46","9573069splitHere46","import javax.swing.JFrame;<newline46mondego>import javax.swing.JLabel;<newline46mondego><newline46mondego>public class AnotherJFrame extends JFrame<newline46mondego>{<newline46mondego>    public AnotherJFrame()<newline46mondego>    {<newline46mondego>        super(<doubleQuotes46>Another GUI<doubleQuotes46>);<newline46mondego>        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego><newline46mondego>        add(new JLabel(<doubleQuotes46>Empty JFrame<doubleQuotes46>));<newline46mondego>        pack();<newline46mondego>        setVisible(true);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6809splitHere46","9573150splitHere46","Object attr = getServletContext().getAttribute(<doubleQuotes46>ATTR_NAME<doubleQuotes46>);<newline46mondego>// Do something with it and...<newline46mondego><newline46mondego>getServletContext().setAttribute(<doubleQuotes46>ATTR_NAME<doubleQuotes46>, attr);<newline46mondego>"
"6810splitHere46","9573171splitHere46","Iterator<?>"
"6811splitHere46","9573171splitHere46","?"
"6812splitHere46","9573171splitHere46","Object"
"6813splitHere46","9573171splitHere46","Iterator"
"6814splitHere46","9573171splitHere46","Object"
"6815splitHere46","9573171splitHere46","?"
"6816splitHere46","9573171splitHere46","Object"
"6817splitHere46","9573171splitHere46","List foo = new ArrayList();<newline46mondego>foo.add(<doubleQuotes46>Foo!<doubleQuotes46>);<newline46mondego><newline46mondego>for(Iterator i = foo.iterator(); i.hasNext(); )<newline46mondego>{<newline46mondego>    Object element = i.next();<newline46mondego><newline46mondego>    System.out.println((String)element);<newline46mondego>}<newline46mondego>"
"6818splitHere46","9573171splitHere46","Object"
"6819splitHere46","9573171splitHere46","List"
"6820splitHere46","9573171splitHere46","String"
"6821splitHere46","9573171splitHere46","Integer"
"6822splitHere46","9573171splitHere46","Integer"
"6823splitHere46","9573171splitHere46","String"
"6824splitHere46","9573171splitHere46","List<String> foo = new ArrayList();<newline46mondego>foo.add(<doubleQuotes46>Foo!<doubleQuotes46>);<newline46mondego><newline46mondego>for(Iterator<String> i = foo.iterator(); i.hasNext(); )<newline46mondego>{<newline46mondego>    String element = i.next();<newline46mondego><newline46mondego>    System.out.println(element);<newline46mondego>}<newline46mondego>"
"6825splitHere46","9573171splitHere46","List<String>"
"6826splitHere46","9573171splitHere46","Iterator<String>"
"6827splitHere46","9573171splitHere46","Map<String, Map<String, Map<String, SomeRandomObject>>> complexMap;<newline46mondego>"
"6828splitHere46","9573251splitHere46","public static String getTagValue(String tag, Element eElement) {<newline46mondego>    System.out.println(<doubleQuotes46>Getting Tage Value for: <doubleQuotes46> + tag);<newline46mondego>    NodeList n1List = eElement.getElementsByTagName(<doubleQuotes46>field<doubleQuotes46>);<newline46mondego>    for (int i = 0; i < n1List.getLength(); i++) {<newline46mondego>        Node nNode = n1List.item(i);<newline46mondego>        if (((Element) nNode).getAttribute(<doubleQuotes46>name<doubleQuotes46>).equalsIgnoreCase(tag)) {<newline46mondego>            return nNode.getTextContent();<newline46mondego>        }<newline46mondego>    }<newline46mondego>    return null;<newline46mondego>}<newline46mondego>"
"6829splitHere46","9573362splitHere46","if(text.equals(<doubleQuotes46>hello<doubleQuotes46>))"
"6830splitHere46","9573362splitHere46","if(text == <doubleQuotes46>hello<doubleQuotes46>)"
"6831splitHere46","9573362splitHere46","if(text.equalsIgnoreCase(<doubleQuotes46>hello<doubleQuotes46>))"
"6832splitHere46","9573362splitHere46","String text = textArea.getText();<newline46mondego><newline46mondego>// capture everything except the last word into group 1<newline46mondego>Pattern regex = Pattern.compile(<doubleQuotes46>(.*?)\\w+\\s*\\Z<doubleQuotes46>, Pattern.DOTALL);<newline46mondego>Matcher matcher = regex.matcher(text);<newline46mondego><newline46mondego>if (matcher.find()) {<newline46mondego>    text = matcher.group(1);<newline46mondego>    textArea.setText(text);<newline46mondego>}<newline46mondego>"
"6833splitHere46","9573380splitHere46","public void retrieveToDB(String data) {<newline46mondego>    Session session = HibernateUtil.getSessionFactory().openSession();<newline46mondego>    // I don't think you need to start a transaction just to do a SELECT statement<newline46mondego>    //session.beginTransaction();<newline46mondego><newline46mondego>    Query q = session.createQuery(<doubleQuotes46>SELECT e from Employee e where e.empName = :empname<doubleQuotes46>);<newline46mondego>    q.setParameter(<doubleQuotes46>empname<doubleQuotes46>, data);<newline46mondego>    List results = (List) q.list();<newline46mondego><newline46mondego>    String test = null;<newline46mondego>    Iterator iter = results.iterator();<newline46mondego><newline46mondego>    while (iter.hasNext()) {<newline46mondego>        Employee emp = (Employee) iter.next();<newline46mondego>        test = emp.getEmpName();<newline46mondego>    }<newline46mondego><newline46mondego>    sendMsg(test);<newline46mondego>}<newline46mondego>"
"6834splitHere46","9573380splitHere46","List"
"6835splitHere46","9573380splitHere46","ArrayList"
"6836splitHere46","9573380splitHere46","Employee"
"6837splitHere46","9573445splitHere46","String executePost(String targetURL, String urlParameters){<newline46mondego><newline46mondego>    URL url;<newline46mondego>    HttpURLConnection connection = null;        <newline46mondego>    try{<newline46mondego>        //Create connection<newline46mondego><newline46mondego>        url = new URL(targetURL);<newline46mondego>        connection = (HttpURLConnection)url.openConnection();<newline46mondego><newline46mondego>        connection.setRequestMethod(<doubleQuotes46>POST<doubleQuotes46>);<newline46mondego>        connection.setRequestProperty(<doubleQuotes46>Content-Type<doubleQuotes46>, <newline46mondego>                   <doubleQuotes46>application/x-www-form-urlencoded<doubleQuotes46>);<newline46mondego>        connection.setRequestProperty(<doubleQuotes46>Content-Language<doubleQuotes46>, <doubleQuotes46>en-US<doubleQuotes46>); <newline46mondego>        connection.setRequestProperty(<doubleQuotes46>User-Agent<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>Mozilla/5.0 (Windows NT 5.1) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.56 Safari/535.11<doubleQuotes46>);<newline46mondego><newline46mondego>        connection.setUseCaches(false);<newline46mondego>        connection.setDoInput(true);<newline46mondego>        connection.setDoOutput(true);<newline46mondego><newline46mondego>        //send Request <newline46mondego>        DataOutputStream dataout = new DataOutputStream(connection.getOutputStream());<newline46mondego>        dataout.writeBytes(urlParameters);<newline46mondego>        dataout.flush();<newline46mondego>        dataout.close();<newline46mondego><newline46mondego>        //get response<newline46mondego>        InputStream is = connection.getInputStream();<newline46mondego>        BufferedReader br = new BufferedReader(new InputStreamReader(is));<newline46mondego>        String line;<newline46mondego>        StringBuffer response = new StringBuffer();<newline46mondego><newline46mondego>        while((line = br.readLine()) != null){<newline46mondego>            response.append(line);<newline46mondego>            response.append('\n');<newline46mondego><newline46mondego>        }<newline46mondego>        System.out.println(response.toString());<newline46mondego>        br.close();<newline46mondego>        return response.toString();<newline46mondego>    }catch(Exception e){<newline46mondego>        System.out.println(<doubleQuotes46>Unable to full create connection<doubleQuotes46>);<newline46mondego>        e.printStackTrace();<newline46mondego>        return null;<newline46mondego>    }finally {<newline46mondego><newline46mondego>          if(connection != null) {<newline46mondego>            connection.disconnect(); <newline46mondego>          }<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>}<newline46mondego>"
"6838splitHere46","9573511splitHere46","public static <T> Collection<T> getBeans(String prop, Class<T> clazz) throws InstantiationException, IllegalAccessException, InvocationTargetException, NoSuchMethodException {<newline46mondego>  Pattern pattern = Pattern.compile(<doubleQuotes46>^<doubleQuotes46> + prop.replace(<doubleQuotes46>.<doubleQuotes46>, <doubleQuotes46>\\.<doubleQuotes46>) + <doubleQuotes46>(\\d*)\\.(\\w+)$<doubleQuotes46>);<newline46mondego>  Map<String, T> beans = new TreeMap<String, T>();<newline46mondego>  @SuppressWarnings(<doubleQuotes46>rawtypes<doubleQuotes46>)<newline46mondego>  Map description = null;<newline46mondego>  T tmpBean = null;<newline46mondego>  Iterator<String> itKeys = m_propStore.getKeys();<newline46mondego>  while (itKeys.hasNext()) {<newline46mondego>    String key = itKeys.next();<newline46mondego>    Matcher matcher = pattern.matcher(key);<newline46mondego>    boolean matchFound = matcher.find();<newline46mondego><newline46mondego>    if (matchFound) {<newline46mondego>      if (description == null) {<newline46mondego>        tmpBean = clazz.newInstance();<newline46mondego>        description = BeanUtils.describe(tmpBean);<newline46mondego>      }<newline46mondego><newline46mondego>      String beanPropName = matcher.group(2);<newline46mondego>      if (description.containsKey(beanPropName)) {<newline46mondego>        String beanKey = matcher.group(1);<newline46mondego>        T bean = beans.get(beanKey);<newline46mondego>        if (bean == null) {<newline46mondego>          bean = tmpBean == null ? clazz.newInstance() : tmpBean;<newline46mondego>          tmpBean = null;<newline46mondego>          beans.put(beanKey, bean);<newline46mondego>        }<newline46mondego>        try {<newline46mondego>          BeanUtils.setProperty(bean, beanPropName, m_propStore.getString(key));<newline46mondego>        } catch (Exception e) {<newline46mondego>          m_logger.error(String.format(<doubleQuotes46>[SystemConfiguration]: failed to set the %s.%s bean property to the value of the %s configuration property - %s<doubleQuotes46>,<newline46mondego>            bean.getClass().getName(), beanPropName, key, e.getMessage()));<newline46mondego>        }<newline46mondego>      }<newline46mondego>    }<newline46mondego>  }<newline46mondego>  return beans.values();<newline46mondego>}<newline46mondego>"
"6839splitHere46","9573580splitHere46","sc query"
"6840splitHere46","9573669splitHere46","ProcessBuilder"
"6841splitHere46","9573669splitHere46","java -Xms1024M -Xmx1024M -jar app.jar"
"6842splitHere46","9573670splitHere46","(maxLatOfAllPoints+minLatOfAllPoints)/2"
"6843splitHere46","9573670splitHere46","(maxLngOfAllPoints+minLngOfAllPoints)/2"
"6844splitHere46","9573816splitHere46","public class TestTcpClientServer<newline46mondego>{<newline46mondego>    public static final int SERVER_PORT = 10111;<newline46mondego><newline46mondego>    public static void main(String[] args) throws Exception<newline46mondego>    {<newline46mondego>        Server server = new Server();<newline46mondego>        server.start();<newline46mondego><newline46mondego>        Thread.sleep(500);<newline46mondego><newline46mondego>        Client client = new Client();<newline46mondego>        client.start();<newline46mondego><newline46mondego>        System.out.println(<doubleQuotes46>Press enter to shutdown...<doubleQuotes46>);<newline46mondego><newline46mondego>        System.in.read();<newline46mondego><newline46mondego>        client.shutdown();<newline46mondego>        client.join();<newline46mondego>        server.shutdown();<newline46mondego>        server.join();<newline46mondego><newline46mondego>        System.out.println(<doubleQuotes46>Done.<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    public static class Client extends Thread<newline46mondego>    {<newline46mondego>        private volatile boolean shutdown = false;<newline46mondego><newline46mondego>        public void run()<newline46mondego>        {<newline46mondego>            try<newline46mondego>            {<newline46mondego>                int totalClientConnections = 0;<newline46mondego><newline46mondego>                while (!shutdown)<newline46mondego>                {<newline46mondego>                    Socket socket = new Socket(<doubleQuotes46>localhost<doubleQuotes46>, SERVER_PORT);<newline46mondego><newline46mondego>                    InputStream inputStream = socket.getInputStream();<newline46mondego>                    BufferedReader br = new BufferedReader(new InputStreamReader(inputStream));<newline46mondego><newline46mondego>                    OutputStream outputStream = socket.getOutputStream();<newline46mondego>                    BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(outputStream));<newline46mondego><newline46mondego>                    bw.write(<doubleQuotes46>Client saying hello to server<doubleQuotes46>);<newline46mondego>                    bw.newLine();<newline46mondego>                    bw.flush();<newline46mondego><newline46mondego>                    String readLine = br.readLine();<newline46mondego>                    //System.out.println(<doubleQuotes46>Client read from server: <doubleQuotes46> + readLine);<newline46mondego><newline46mondego>                    System.out.println(<doubleQuotes46>Socket local port: <doubleQuotes46> + socket.getLocalPort());<newline46mondego><newline46mondego>                    socket.close();<newline46mondego><newline46mondego>                    totalClientConnections++;<newline46mondego>                    if (totalClientConnections % 10000 == 0)<newline46mondego>                    {<newline46mondego>                        System.out.println(<doubleQuotes46>totalClientConnections=<doubleQuotes46> + totalClientConnections);<newline46mondego>                    }<newline46mondego><newline46mondego>                    Thread.sleep(1000);<newline46mondego>                }<newline46mondego>            }<newline46mondego>            catch (Exception e)<newline46mondego>            {<newline46mondego>                e.printStackTrace();<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        public void shutdown()<newline46mondego>        {<newline46mondego>            shutdown = true;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public static class Server extends Thread<newline46mondego>    {<newline46mondego>        private volatile boolean shutdown = false;<newline46mondego>        private ServerSocket serverSocket = null;<newline46mondego><newline46mondego>        public void run()<newline46mondego>        {<newline46mondego>            try<newline46mondego>            {<newline46mondego>                int totalServerConnections = 0;<newline46mondego><newline46mondego>                serverSocket = new ServerSocket(SERVER_PORT);<newline46mondego><newline46mondego>                while (!shutdown)<newline46mondego>                {<newline46mondego>                    Socket socket = serverSocket.accept();<newline46mondego><newline46mondego>                    InputStream inputStream = socket.getInputStream();<newline46mondego>                    BufferedReader br = new BufferedReader(new InputStreamReader(inputStream));<newline46mondego><newline46mondego>                    OutputStream outputStream = socket.getOutputStream();<newline46mondego>                    BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(outputStream));<newline46mondego><newline46mondego>                    String readLine = br.readLine();<newline46mondego>                    //System.out.println(<doubleQuotes46>Server read from client: <doubleQuotes46> + readLine);<newline46mondego><newline46mondego>                    bw.write(<doubleQuotes46>Server saying hello to client<doubleQuotes46>);<newline46mondego>                    bw.newLine();<newline46mondego>                    bw.flush();<newline46mondego><newline46mondego>                    socket.close();<newline46mondego><newline46mondego>                    totalServerConnections++;<newline46mondego>                    if (totalServerConnections % 10000 == 0)<newline46mondego>                    {<newline46mondego>                        System.out.println(<doubleQuotes46>totalServerConnections=<doubleQuotes46> + totalServerConnections);<newline46mondego>                    }<newline46mondego>                }<newline46mondego>            }<newline46mondego>            catch (Exception e)<newline46mondego>            {<newline46mondego>                if (!shutdown)<newline46mondego>                {<newline46mondego>                    e.printStackTrace();<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        public void shutdown()<newline46mondego>        {<newline46mondego>            shutdown = true;<newline46mondego>            try<newline46mondego>            {<newline46mondego>                serverSocket.close();<newline46mondego>            }<newline46mondego>            catch (IOException e)<newline46mondego>            {<newline46mondego>                e.printStackTrace();<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6845splitHere46","9573836splitHere46","public ParticleEffect particleEffect;<newline46mondego>"
"6846splitHere46","9573836splitHere46","particleEffect = new ParticleEffect();<newline46mondego>    particleEffect.load(Gdx.files.internal(<doubleQuotes46>data/particleEffect.p<doubleQuotes46>), <newline46mondego>            Gdx.files.internal(<doubleQuotes46>data<doubleQuotes46>));<newline46mondego>"
"6847splitHere46","9573836splitHere46","render()"
"6848splitHere46","9573836splitHere46","particleEffect.setPosition(world.effectX, world.effectY);<newline46mondego>"
"6849splitHere46","9573836splitHere46","render()"
"6850splitHere46","9573836splitHere46","particleEffect.draw(spriteBatch, delta);<newline46mondego>"
"6851splitHere46","9574032splitHere46","HibernateTransactionManager"
"6852splitHere46","9574032splitHere46","DataSourceUtils"
"6853splitHere46","9574058splitHere46","com.mysql.jdbc"
"6854splitHere46","9574068splitHere46","Object value = mMBSC.getAttribute(objectName, attributeName);<newline46mondego>"
"6855splitHere46","9574068splitHere46","MBeanServer mbs = ManagementFactory.getPlatformMBeanServer();"
"6856splitHere46","9574144splitHere46","void FreeData(char** myVar)<newline46mondego>{<newline46mondego>    delete [] *myVar;<newline46mondego>}<newline46mondego>"
"6857splitHere46","9574144splitHere46","Pointer myVar = new Memory(Pointer.SIZE);<newline46mondego>this.Lib.LoadData(myVar);<newline46mondego>this.someVar = myVar.getPointer(0).getString(0);<newline46mondego>this.Lib.FreeData(myVar);<newline46mondego>"
"6858splitHere46","9574222splitHere46","Node"
"6859splitHere46","9574222splitHere46","Node"
"6860splitHere46","9574222splitHere46","Node"
"6861splitHere46","9574222splitHere46","2<newline46mondego>   |<newline46mondego>|-----|<newline46mondego>1     3<newline46mondego>"
"6862splitHere46","9574222splitHere46","1"
"6863splitHere46","9574222splitHere46","3"
"6864splitHere46","9574222splitHere46","null"
"6865splitHere46","9574222splitHere46","Node simpleTreeToList(Node root) {<newline46mondego>    if (root == null) {<newline46mondego>        return null;<newline46mondego>    }<newline46mondego>    Node left = root.left;<newline46mondego>    Node right = root.right;<newline46mondego>    Node head;<newline46mondego>    if (left == null) {<newline46mondego>        head = root;<newline46mondego>    } else {<newline46mondego>        head = left;<newline46mondego>        left.right = root;<newline46mondego>        // root.left is already correct<newline46mondego>    }<newline46mondego>    if (right == null) {<newline46mondego>        head.left = root;<newline46mondego>        root.right = head;<newline46mondego>    } else {<newline46mondego>        head.left = right;<newline46mondego>        right.right = head;<newline46mondego>        right.left = root;<newline46mondego>    }<newline46mondego>    return head;<newline46mondego>}<newline46mondego>"
"6866splitHere46","9574222splitHere46","Node treeToList(Node root) {<newline46mondego>    if (root == null) {<newline46mondego>        return null;<newline46mondego>    }<newline46mondego>    Node leftTree = treeToList(root.left);<newline46mondego>    Node rightTree = treeToList(root.right);<newline46mondego>    Node head;<newline46mondego>    if (leftTree == null) {<newline46mondego>        head = root;<newline46mondego>    } else {<newline46mondego>        head = leftTree;<newline46mondego>        leftTree.left.right = root;<newline46mondego>        root.left = leftTree.left;<newline46mondego>    }<newline46mondego>    if (rightTree == null) {<newline46mondego>        head.left = root;<newline46mondego>        root.right = head;<newline46mondego>    } else {<newline46mondego>        head.left = rightTree.left;<newline46mondego>        rightTree.left.right = head;<newline46mondego>        rightTree.left = root;<newline46mondego>        root.right = rightTree;<newline46mondego>    }<newline46mondego>    return head;<newline46mondego>}<newline46mondego>"
"6867splitHere46","9574265splitHere46","byte[] array = new BigInteger(<doubleQuotes46>123456<doubleQuotes46>).toByteArray(); <newline46mondego>int[] unsigned_array = new int[array.length]; <newline46mondego>for (int i = 0; i < array.length; i++) { <newline46mondego>    unsigned_array[i] = array[i] >= 0 ? array[i] : array[i] + 256;<newline46mondego>}<newline46mondego>"
"6868splitHere46","9574388splitHere46","byte[]"
"6869splitHere46","9574388splitHere46","ByteArrayInputStream"
"6870splitHere46","9574388splitHere46","AudioSystem.getAudioInputStream(InputStream)"
"6871splitHere46","9574388splitHere46","AudioSystem.write(..)"
"6872splitHere46","9574444splitHere46","java.lang.String.split()"
"6873splitHere46","9574444splitHere46","String[]"
"6874splitHere46","9574444splitHere46","String s = <doubleQuotes46>a:very:big:string<doubleQuotes46>;<newline46mondego>String[] parts = s.split(<doubleQuotes46>:<doubleQuotes46>);<newline46mondego><newline46mondego>for (String part: parts)<newline46mondego>{<newline46mondego>    System.out.println(part);<newline46mondego>}<newline46mondego>"
"6875splitHere46","9574444splitHere46","Pattern"
"6876splitHere46","9574444splitHere46","Matcher"
"6877splitHere46","9574445splitHere46","MatrixIndex"
"6878splitHere46","9574445splitHere46","MatrixIndex"
"6879splitHere46","9574445splitHere46","containsKey()"
"6880splitHere46","9574445splitHere46","equals()"
"6881splitHere46","9574445splitHere46","hashcode()"
"6882splitHere46","9574552splitHere46","Connector"
"6883splitHere46","9574552splitHere46","stmt"
"6884splitHere46","9574552splitHere46","con.stmt = con.conn.prepareStatement(<doubleQuotes46>insert into staff (name, profession) values (?, ?)<doubleQuotes46>);<newline46mondego>con.stmt.setString(1, name);<newline46mondego>con.stmt.setString(2, profession);<newline46mondego>con.stmt.executeUpdate();<newline46mondego>"
"6885splitHere46","9574555splitHere46","Pattern.compile(<doubleQuotes46>\<doubleQuotes46>([a-zA-Z_0-9]+)\<doubleQuotes46><doubleQuotes46>);<newline46mondego>"
"6886splitHere46","9574555splitHere46","Pattern.compile(<doubleQuotes46>\<doubleQuotes46>([^\<doubleQuotes46>]+)\<doubleQuotes46><doubleQuotes46>);<newline46mondego>"
"6887splitHere46","9574555splitHere46","+"
"6888splitHere46","9574555splitHere46","+"
"6889splitHere46","9574573splitHere46","taskOption.taskName(name.toLowerCase().replaceAll(<doubleQuotes46>[^a-z0-9]+<doubleQuotes46>,<doubleQuotes46><doubleQuotes46>) + System.currentTimeMillis())<newline46mondego>"
"6890splitHere46","9574829splitHere46","1  1  1<newline46mondego>  A =  1  2  2<newline46mondego>       2  3  4<newline46mondego>"
"6891splitHere46","9575168splitHere46","public class Building{<newline46mondego><newline46mondego>public static Rooms roomArray[] = new Rooms[4];<newline46mondego>private float outsideTemp;<newline46mondego>List<Room> rooms;<newline46mondego><newline46mondego>public Building(float temp){<newline46mondego>    rooms = new ArrayList<Room>();<newline46mondego>    rooms.add(new Room()); <newline46mondego>    rooms.add(new Room());<newline46mondego>    outsideTemp = temp;<newline46mondego>}<newline46mondego><newline46mondego>public List<Rooms> getRoomList() {<newline46mondego>    return this.rooms;<newline46mondego>}<newline46mondego>}<newline46mondego>"
"6892splitHere46","9575168splitHere46","public class MasterControlPanel{<newline46mondego>    public static Building building = new Building();<newline46mondego><newline46mondego>    public static void main(String[] args){<newline46mondego>    building.getRoomList.get(0).*whatever*<newline46mondego><newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6893splitHere46","9575168splitHere46","List"
"6894splitHere46","9575168splitHere46","static"
"6895splitHere46","9575168splitHere46","float"
"6896splitHere46","9575170splitHere46","<doubleQuotes46>\\/<doubleQuotes46>"
"6897splitHere46","9575170splitHere46","\/"
"6898splitHere46","9575170splitHere46","\/"
"6899splitHere46","9575170splitHere46","/"
"6900splitHere46","9575170splitHere46","\"
"6901splitHere46","9575170splitHere46","\$"
"6902splitHere46","9575170splitHere46","<doubleQuotes46>Hello/You/There<doubleQuotes46>.replaceAll(<doubleQuotes46>/<doubleQuotes46>, <doubleQuotes46>\\\\/<doubleQuotes46>);<newline46mondego>"
"6903splitHere46","9575170splitHere46","<doubleQuotes46>Hello/You/There<doubleQuotes46>.replaceAll(<doubleQuotes46>/<doubleQuotes46>, Matcher.quoteReplacement(<doubleQuotes46>\\/<doubleQuotes46>));<newline46mondego>"
"6904splitHere46","9575170splitHere46","java.util.regex.Matcher.quoteReplacement(String)"
"6905splitHere46","9575216splitHere46","T2.java"
"6906splitHere46","9575216splitHere46","import java.util.*;<newline46mondego>import java.util.regex.*;<newline46mondego>import java.lang.reflect.*;<newline46mondego><newline46mondego>public class T2 {<newline46mondego><newline46mondego>    public static void main(String[] args) throws Exception {<newline46mondego>      String String = <doubleQuotes46>abc<doubleQuotes46>;<newline46mondego>      outputAll((String instanceof java.lang.String), String);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void outputAll(Object... args) {<newline46mondego>      System.out.println();<newline46mondego>      for (Object o: args) {<newline46mondego>        System.out.println(o);<newline46mondego>      }<newline46mondego>    }<newline46mondego><newline46mondego>    public static void output(String msg, Object... args) {<newline46mondego>      System.out.println(String.format(msg, args));<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6907splitHere46","9575230splitHere46","Multiset<String> strings = HashMultiset.create(arrayList);<newline46mondego>int countX = strings.count(<doubleQuotes46>x<doubleQuotes46>); // the count of x<newline46mondego>"
"6908splitHere46","9575261splitHere46","LAUNCHER"
"6909splitHere46","9575261splitHere46","android.intent.category.INFO"
"6910splitHere46","9575329splitHere46","class Job implements Comparable<Job> {<newline46mondego>    @Override<newline46mondego>    public int compareTo(final Job other) {<newline46mondego>        return getPriorityLevel() - other.getPriorityLevel();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6911splitHere46","9575401splitHere46","@Override"
"6912splitHere46","9575401splitHere46","import java.awt.*;<newline46mondego>import java.awt.event.*;<newline46mondego>import javax.swing.*;<newline46mondego><newline46mondego>public class ComboBoxTest extends JPanel implements ItemListener {<newline46mondego>   private static final int PREF_W = 300;<newline46mondego>   private static final int PREF_H = PREF_W;<newline46mondego>   final String[] sizes = { <doubleQuotes46>10%<doubleQuotes46>, <doubleQuotes46>20%<doubleQuotes46>, <doubleQuotes46>33%<doubleQuotes46> };<newline46mondego>   JComboBox combobox = new JComboBox(sizes);<newline46mondego>   int selectedIndex;<newline46mondego>   private double scaleFactor = 1;<newline46mondego><newline46mondego>   public ComboBoxTest() {<newline46mondego>      setLayout(new GridBagLayout());<newline46mondego>      combobox.setSelectedIndex(-1);<newline46mondego>      combobox.addItemListener(this);<newline46mondego>      GridBagConstraints comboBoxConstraints = new GridBagConstraints();<newline46mondego>      comboBoxConstraints.gridx = 0;<newline46mondego>      comboBoxConstraints.gridy = 0;<newline46mondego>      comboBoxConstraints.gridwidth = 1;<newline46mondego>      comboBoxConstraints.gridheight = 1;<newline46mondego>      comboBoxConstraints.fill = GridBagConstraints.NONE;<newline46mondego>      add(combobox, comboBoxConstraints);// This should be placed at top, in<newline46mondego>                                         // middle.<newline46mondego><newline46mondego>      GridBagConstraints displayConstraints = new GridBagConstraints();<newline46mondego>      displayConstraints.gridx = 0;<newline46mondego>      displayConstraints.gridy = 1;<newline46mondego>      displayConstraints.gridwidth = 1;<newline46mondego>      displayConstraints.gridheight = 1;<newline46mondego>      displayConstraints.fill = GridBagConstraints.BOTH;<newline46mondego>   }<newline46mondego><newline46mondego>   @Override<newline46mondego>   public Dimension getPreferredSize() {<newline46mondego>      return new Dimension(PREF_W, PREF_H);<newline46mondego>   }<newline46mondego><newline46mondego>   public void itemStateChanged(ItemEvent e) {<newline46mondego>      if (e.getStateChange() == ItemEvent.SELECTED) {<newline46mondego>         JComboBox combo = (JComboBox) e.getSource();<newline46mondego>         selectedIndex = combo.getSelectedIndex();<newline46mondego>         System.out.println(<doubleQuotes46>selectedIndex is: <doubleQuotes46> + selectedIndex);<newline46mondego>         if (selectedIndex == -1) {<newline46mondego>            return;<newline46mondego>         }<newline46mondego>         String selectedItem = combo.getSelectedItem().toString().trim();<newline46mondego>         selectedItem = selectedItem.replace(<doubleQuotes46>%<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>         scaleFactor = Double.parseDouble(selectedItem) / 100.0;<newline46mondego>         repaint();<newline46mondego>      }<newline46mondego>   }<newline46mondego><newline46mondego>   @Override<newline46mondego>   protected void paintComponent(Graphics g) {<newline46mondego>      super.paintComponent(g);<newline46mondego>         int xStart = (getWidth() / 2) - (int)(getWidth() * scaleFactor);<newline46mondego>         int yStart = (getHeight() / 2) - (int)(getHeight() * scaleFactor);<newline46mondego>         g.drawRect(xStart, yStart, (int)(getWidth() * scaleFactor),<newline46mondego>               (int)(getHeight() * scaleFactor));<newline46mondego>   }<newline46mondego><newline46mondego>   private static void createAndShowGui() {<newline46mondego>      JFrame frame = new JFrame(<doubleQuotes46>ComboBoxTest<doubleQuotes46>);<newline46mondego>      frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>      frame.getContentPane().add(new ComboBoxTest());<newline46mondego>      frame.pack();<newline46mondego>      frame.setLocationRelativeTo(null);<newline46mondego>      frame.setVisible(true);<newline46mondego>   }<newline46mondego><newline46mondego>   public static void main(String[] args) {<newline46mondego>      SwingUtilities.invokeLater(new Runnable() {<newline46mondego>         public void run() {<newline46mondego>            createAndShowGui();<newline46mondego>         }<newline46mondego>      });<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"6913splitHere46","9575561splitHere46","in-reply-to"
"6914splitHere46","9575561splitHere46","reply-with"
"6915splitHere46","9575705splitHere46","IF @modifiedAfter IS NOT NULL BEGIN<newline46mondego>    SET @SQL = @SQL + N'AND mytable.ThingLastUpdated > @modifiedAfter'<newline46mondego>END<newline46mondego>"
"6916splitHere46","9575705splitHere46","@SQL"
"6917splitHere46","9575705splitHere46","@modifiedAfter"
"6918splitHere46","9575705splitHere46","DATETIME"
"6919splitHere46","9575705splitHere46","mytable.ThingLastUpdated"
"6920splitHere46","9575705splitHere46","VARCHAR"
"6921splitHere46","9575705splitHere46","DATETIME"
"6922splitHere46","9575705splitHere46","@modifiedAfter"
"6923splitHere46","9575705splitHere46","mytable.ThingLastUpdated"
"6924splitHere46","9575705splitHere46","mytable.ThingLastUpdated"
"6925splitHere46","9575705splitHere46","DATETIME"
"6926splitHere46","9575899splitHere46","r.nextInt(possibleSlots.size())<newline46mondego>"
"6927splitHere46","9576116splitHere46","new String()<newline46mondego>"
"6928splitHere46","9576116splitHere46","String bioText =<doubleQuotes46><doubleQuotes46>;<newline46mondego>bioText = bio.getText().toString();<newline46mondego>"
"6929splitHere46","9576116splitHere46","TextView bio = (TextView)findViewById(R.id.biographyText);<newline46mondego>String bioText = <doubleQuotes46><doubleQuotes46>;<newline46mondego>bioText = bio.getText().toString();<newline46mondego>"
"6930splitHere46","9576116splitHere46","bioText = bio.getText().toString();<newline46mondego>"
"6931splitHere46","9576116splitHere46","String bioText = bio.getText().toString();<newline46mondego>"
"6932splitHere46","9576127splitHere46","Jasper Reports"
"6933splitHere46","9576127splitHere46","Jasper Reports"
"6934splitHere46","9576281splitHere46","ExecutorService"
"6935splitHere46","9576281splitHere46","ServerSocket"
"6936splitHere46","9576366splitHere46","-15"
"6937splitHere46","9576366splitHere46","List"
"6938splitHere46","9576366splitHere46","String fileContent = <doubleQuotes46>S107184CB78120EA52S107184CB78120EA57<doubleQuotes46>;<newline46mondego>int len = fileContent.length();<newline46mondego>List<Byte[]> arrays = new ArrayList<Byte[]>();<newline46mondego>List<Byte> data = new ArrayList<Byte>();<newline46mondego>for (int i = 0; i < len; i += 2) {<newline46mondego>    byte b = (byte) ((Character.digit(fileContent.charAt(i), 16) << 4) + Character.digit(fileContent.charAt(i + 1), 16));<newline46mondego>    if (b == -15) {<newline46mondego>        arrays.add(data.toArray(new Byte[data.size()]));<newline46mondego>        data.clear();<newline46mondego>    }<newline46mondego>    data.add(b);<newline46mondego>}<newline46mondego>arrays.add(data.toArray(new Byte[data.size()]));<newline46mondego>"
"6939splitHere46","9576366splitHere46","List<Byte[]>"
"6940splitHere46","9576366splitHere46","List<byte[]>"
"6941splitHere46","9576366splitHere46",".toArray()"
"6942splitHere46","9576366splitHere46","List"
"6943splitHere46","9576366splitHere46","List<byte[]>"
"6944splitHere46","9576366splitHere46","data"
"6945splitHere46","9576369splitHere46","setPreferredSize(new Dimension(100, 100));<newline46mondego>"
"6946splitHere46","9576472splitHere46","totalHours = date.getHours() - 5;<newline46mondego>totalMinutes = (totalHours * 60) + date.getMinutes();<newline46mondego>"
"6947splitHere46","9576472splitHere46","Calendar"
"6948splitHere46","9576472splitHere46","Date date = new Date();<newline46mondego>Calendar calendar = GregorianCalendar.getInstance();<newline46mondego>calendat.setTime(date);<newline46mondego><newline46mondego>if(calendar.get(Calendar.HOUR_OF_DAY) > 5 && calendar.get(Calendar.HOUR_OF_DAY) < 17)<newline46mondego>{<newline46mondego>    int totalHours = calendar.get(Calendar.HOUR_OF_DAY) - 5;<newline46mondego>    int totalMinutes = (totalHours * 60) + calendar.get(Calendar.MINUTE);<newline46mondego>}<newline46mondego><newline46mondego>else<newline46mondego>{<newline46mondego>    totalHours = 24 - calendar.get(HOUR_OF_DAY) + 5;<newline46mondego>    totalMinutes = (totalHours * 60) - (60 - calendar.get(Calendar.MINUTE);<newline46mondego>}<newline46mondego>"
"6949splitHere46","9576545splitHere46","public AddressList() {<newline46mondego>    head = null<newline46mondego>}<newline46mondego>"
"6950splitHere46","9576545splitHere46","if (head == null) {  // empty list<newline46mondego>    head = n<newline46mondego>}<newline46mondego>else {<newline46mondego>    head.setPrev(n);<newline46mondego>    n.setNext(head);<newline46mondego>    head = n;<newline46mondego>}<newline46mondego>"
"6951splitHere46","9576704splitHere46","min"
"6952splitHere46","9576704splitHere46","Math.pow"
"6953splitHere46","9576704splitHere46","Math.min"
"6954splitHere46","9576760splitHere46","import java.awt.*;<newline46mondego>import java.awt.event.*;<newline46mondego>import javax.swing.*;<newline46mondego><newline46mondego>public class DialogExample {<newline46mondego>   private static void createAndShowGui() {<newline46mondego>      JFrame frame = new JFrame(<doubleQuotes46>Dialog Example<doubleQuotes46>);<newline46mondego>      MainPanel mainPanel = new MainPanel(frame);<newline46mondego><newline46mondego>      frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>      frame.getContentPane().add(mainPanel);<newline46mondego>      frame.pack();<newline46mondego>      frame.setLocationByPlatform(true);<newline46mondego>      frame.setVisible(true);<newline46mondego>   }<newline46mondego><newline46mondego>   public static void main(String[] args) {<newline46mondego>      SwingUtilities.invokeLater(new Runnable() {<newline46mondego>         public void run() {<newline46mondego>            createAndShowGui();<newline46mondego>         }<newline46mondego>      });<newline46mondego>   }<newline46mondego>}<newline46mondego><newline46mondego>class MainPanel extends JPanel {<newline46mondego>   private InputPanel inputPanel = new InputPanel();<newline46mondego>   private JTextField responseField = new JTextField(10);<newline46mondego>   private JDialog inputDialog;<newline46mondego>   private JFrame inputFrame;<newline46mondego><newline46mondego>   public MainPanel(final JFrame mainJFrame) {<newline46mondego>      responseField.setEditable(false);<newline46mondego>      responseField.setFocusable(false);<newline46mondego><newline46mondego>      add(responseField);<newline46mondego>      add(new JButton(new AbstractAction(<doubleQuotes46>Open Input Modal Dialog<doubleQuotes46>) {<newline46mondego><newline46mondego>         @Override<newline46mondego>         public void actionPerformed(ActionEvent e) {<newline46mondego>            if (inputDialog == null) {<newline46mondego>               inputDialog = new JDialog(mainJFrame, <doubleQuotes46>Input Dialog<doubleQuotes46>, true);<newline46mondego>            }<newline46mondego>            inputDialog.getContentPane().add(inputPanel);<newline46mondego>            inputDialog.pack();<newline46mondego>            inputDialog.setLocationRelativeTo(mainJFrame);<newline46mondego>            inputDialog.setVisible(true);  <newline46mondego><newline46mondego>            // all code is now suspended at this point until the dialog has been <newline46mondego>            // made invisible<newline46mondego><newline46mondego>            if (inputPanel.isConfirmed()) {<newline46mondego>               responseField.setText(inputPanel.getInputFieldText());<newline46mondego>               inputPanel.setConfirmed(false);<newline46mondego>            }<newline46mondego>         }<newline46mondego>      }));<newline46mondego>      add(new JButton(new AbstractAction(<doubleQuotes46>Open Input JFrame<doubleQuotes46>) {<newline46mondego><newline46mondego>         @Override<newline46mondego>         public void actionPerformed(ActionEvent e) {<newline46mondego>            if (inputFrame == null) {<newline46mondego>               inputFrame = new JFrame(<doubleQuotes46>Input Frame<doubleQuotes46>);<newline46mondego>            }<newline46mondego><newline46mondego>            inputFrame.getContentPane().add(inputPanel);<newline46mondego>            inputFrame.pack();<newline46mondego>            inputFrame.setLocationRelativeTo(mainJFrame);<newline46mondego>            inputFrame.setVisible(true);  <newline46mondego><newline46mondego>            // all code continues whether or not the inputFrame has been<newline46mondego>            // dealt with or not.<newline46mondego><newline46mondego>            if (inputPanel.isConfirmed()) {<newline46mondego>               responseField.setText(inputPanel.getInputFieldText());<newline46mondego>               inputPanel.setConfirmed(false);<newline46mondego>            }<newline46mondego><newline46mondego>         }<newline46mondego>      }));<newline46mondego>   }<newline46mondego>}<newline46mondego><newline46mondego>class InputPanel extends JPanel {<newline46mondego>   private JTextField inputField = new JTextField(10);<newline46mondego>   private JButton confirmBtn = new JButton(<doubleQuotes46>Confirm<doubleQuotes46>);<newline46mondego>   private JButton cancelBtn = new JButton(<doubleQuotes46>Cancel<doubleQuotes46>);<newline46mondego>   private boolean confirmed = false;<newline46mondego><newline46mondego>   public InputPanel() {<newline46mondego>      add(inputField);<newline46mondego>      add(confirmBtn);<newline46mondego>      add(cancelBtn);<newline46mondego><newline46mondego>      confirmBtn.addActionListener(new ActionListener() {<newline46mondego><newline46mondego>         @Override<newline46mondego>         public void actionPerformed(ActionEvent arg0) {<newline46mondego>            confirmed = true;<newline46mondego>            Window win = SwingUtilities.getWindowAncestor(InputPanel.this);<newline46mondego>            win.setVisible(false);<newline46mondego>         }<newline46mondego>      });<newline46mondego>      cancelBtn.addActionListener(new ActionListener() {<newline46mondego><newline46mondego>         @Override<newline46mondego>         public void actionPerformed(ActionEvent arg0) {<newline46mondego>            confirmed = false;<newline46mondego>            Window win = SwingUtilities.getWindowAncestor(InputPanel.this);<newline46mondego>            win.setVisible(false);<newline46mondego>         }<newline46mondego>      });<newline46mondego>   }<newline46mondego><newline46mondego>   public boolean isConfirmed() {<newline46mondego>      return confirmed;<newline46mondego>   }<newline46mondego><newline46mondego>   public void setConfirmed(boolean confirmed) {<newline46mondego>      this.confirmed = confirmed;<newline46mondego>   }<newline46mondego><newline46mondego>   public String getInputFieldText() {<newline46mondego>      return inputField.getText();<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"6955splitHere46","9576955splitHere46","list.toArray(new String[list.size()])"
"6956splitHere46","9576955splitHere46","Object[]"
"6957splitHere46","9576955splitHere46","String[]"
"6958splitHere46","9576955splitHere46","Object[]"
"6959splitHere46","9576955splitHere46","String"
"6960splitHere46","9576955splitHere46","List"
"6961splitHere46","9577151splitHere46","String script = <doubleQuotes46>C:\\work\\selenium\\chrome\\test.vbs<doubleQuotes46>;<newline46mondego>// search for real path:<newline46mondego>String executable = <doubleQuotes46>C:\\windows\\...\\vbs.exe<doubleQuotes46>; <newline46mondego>String cmdArr [] = {executable, script};<newline46mondego>Runtime.getRuntime ().exec (cmdArr);<newline46mondego>"
"6962splitHere46","9577160splitHere46","String path = Test.class.getProtectionDomain().getCodeSource().getLocation().getPath();<newline46mondego>String decodedPath = URLDecoder.decode(path, <doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>"
"6963splitHere46","9577396splitHere46","cipher.init(Cipher.ENCRYPT_MODE, key)"
"6964splitHere46","9577396splitHere46","ciper.init"
"6965splitHere46","9577396splitHere46","getObject"
"6966splitHere46","9577518splitHere46","Module"
"6967splitHere46","9577518splitHere46","class Module {<newline46mondego>    private static HashMap<Integer, Integer> courseCounts = new HashMap<Integer, Integer>();<newline46mondego><newline46mondego>    public Module(int semester, String name) {<newline46mondego>        this.semester = semester;<newline46mondego>        this.name = name;<newline46mondego>        Integer count = courseCounts.get(semester);<newline46mondego>        if (count == null)<newline46mondego>            count = 0;<newline46mondego>        ++count;<newline46mondego>        this.code = <doubleQuotes46>M<doubleQuotes46> + (semester * 100 + count);<newline46mondego>        courseCounts.put(semester, count);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6968splitHere46","9577565splitHere46","ILogger"
"6969splitHere46","9577565splitHere46","Map"
"6970splitHere46","9577565splitHere46","public static final Map<Class, String> classMap = new HashMap<Class, String>();<newline46mondego>"
"6971splitHere46","9577565splitHere46","public class Sub implements ILogger<Sub> {<newline46mondego><newline46mondego>    static {<newline46mondego>        ILogger.classMap.put(Sub.class, /* ... value ... */);<newline46mondego>    }<newline46mondego><newline46mondego>    public Sub() {<newline46mondego>        Log.debug(LogTag, ...);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6972splitHere46","9577593splitHere46","heatloss"
"6973splitHere46","9577593splitHere46","heatloss"
"6974splitHere46","9577593splitHere46","public static double heatloss(double x, double m, double a) {<newline46mondego>    double heatloss = x - m * (x - a);<newline46mondego><newline46mondego>    if (x < 55) {<newline46mondego>        System.out.println(<doubleQuotes46>potatoe too cold<doubleQuotes46>);<newline46mondego>        return /* put something here */<newline46mondego>    }<newline46mondego>    else {<newline46mondego>        System.out.println(heatloss);<newline46mondego>        x = heatloss(x,m,a);<newline46mondego>        return /* put something here */<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6975splitHere46","9577729splitHere46","public static void main(String[] args)  {<newline46mondego>    for (int i = 0; i < args.length; i++)  {<newline46mondego>        System.out.println(args[i]);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6976splitHere46","9577805splitHere46","[^A-Za-z0-9]"
"6977splitHere46","9577805splitHere46","\\W"
"6978splitHere46","9577805splitHere46","_"
"6979splitHere46","9577805splitHere46","Pattern p = Pattern.compile(<doubleQuotes46>[^A-Za-z0-9]<doubleQuotes46>);<newline46mondego>if (p.matcher(stringToMatch).find()) {<newline46mondego>    //...<newline46mondego>}<newline46mondego>"
"6980splitHere46","9577843splitHere46","public class SetCoefProvider {<newline46mondego>  private String[] set;<newline46mondego>  private double[] coef;<newline46mondego><newline46mondego>  public SetCoefProvider(String[] set, double[] coef) {<newline46mondego>    this.set  = set;<newline46mondego>    this.coef = coef;<newline46mondego>  }<newline46mondego><newline46mondego>  public String[] getSet() {<newline46mondego>    return set;<newline46mondego>  }<newline46mondego>  public double[] getCoef() {<newline46mondego>    return coef;<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>public class SetCoefProviderFactory {<newline46mondego>  public static SetCoefProvider createObj1Provider() {<newline46mondego>    return new SetCoefProvider(new String[] {<doubleQuotes46>a<doubleQuotes46>, <doubleQuotes46>b<doubleQuotes46>, <doubleQuotes46>c<doubleQuotes46>}, new double[] {1,2,3});<newline46mondego>  }<newline46mondego>  public static SetCoefProvider createObj2Provider() {<newline46mondego>    return new SetCoefProvider(new String[] {<doubleQuotes46>x<doubleQuotes46>, <doubleQuotes46>y<doubleQuotes46>, <doubleQuotes46>z<doubleQuotes46>}, new double[] {11,12,13});<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"6981splitHere46","9577843splitHere46","public class SingletonSetCoefProviders {<newline46mondego>  private static SetCoefProvider obj1Provider, obj2Provider;<newline46mondego><newline46mondego>  static {<newline46mondego>    obj1Provider = SetCoefProviderFactory.createObj1Provider();<newline46mondego>    obj2Provider = SetCoefProviderFactory.createObj2Provider();<newline46mondego>  }<newline46mondego><newline46mondego>  public static SetCoefProvider getObj1Provider() {<newline46mondego>    return obj1Provider;<newline46mondego>  }<newline46mondego>  public static SetCoefProvider getObj2Provider() {<newline46mondego>    return obj2Provider;<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"6982splitHere46","9577883splitHere46","Line2D.ptSegDist(Point2D)"
"6983splitHere46","9577920splitHere46","grammar ::= [{ assignment }] eoi<newline46mondego>assignment ::= name ('::=' | '=') expression<newline46mondego>expression = term [{ '|' term }]<newline46mondego>term = factor [{ white factor }]<newline46mondego>factor = IO | name | '[' expression ']' | '&{' expression '&}'<newline46mondego>IO = '\'' string '\'' | '<doubleQuotes46>' string '<doubleQuotes46>' | '`' string '`'<newline46mondego>"
"6984splitHere46","9577923splitHere46","a"
"6985splitHere46","9577923splitHere46","val1"
"6986splitHere46","9577923splitHere46","val2"
"6987splitHere46","9577923splitHere46","a"
"6988splitHere46","9577923splitHere46","val1"
"6989splitHere46","9577923splitHere46","val2"
"6990splitHere46","9577923splitHere46","Object aMonitor = new Object();<newline46mondego><newline46mondego>synchronized(aMonitor) {<newline46mondego>   a = 55;<newline46mondego>   aMonitor.wait();<newline46mondego>}<newline46mondego>"
"6991splitHere46","9577923splitHere46","wait()"
"6992splitHere46","9577923splitHere46","notify()"
"6993splitHere46","9577923splitHere46","java.util.concurrent"
"6994splitHere46","9578232splitHere46","ViewGroup v = (ViewGroup)inflater.inflate(R.layout.popup, null, false);<newline46mondego><newline46mondego>pw = new PopupWindow(<newline46mondego>       v, <newline46mondego>       400, <newline46mondego>       600, <newline46mondego>       true);<newline46mondego>        pw.showAtLocation(this.findViewById(R.id.main), Gravity.CENTER, 0, 0);<newline46mondego><newline46mondego>TextView view = (TextView)v.findViewById(R.id.textView1);<newline46mondego>"
"6995splitHere46","9578295splitHere46","public static String camelcasify(String in)<newline46mondego>  StringBuilder sb = new StringBuilder();<newline46mondego>  boolean capitalizeNext = false;<newline46mondego>  for (char c:in.charArray()) {<newline46mondego>    if (c == '_') {<newline46mondego>      capitalizeNext = true;<newline46mondego>    } else {<newline46mondego>      if (capitalizeNext) {<newline46mondego>        sb.append(Character.toUpperCase(c));<newline46mondego>        capitalizeNext = false;<newline46mondego>      } else {<newline46mondego>        sb.append(c);<newline46mondego>      }<newline46mondego>    }<newline46mondego>  }<newline46mondego>  return sb.toString();<newline46mondego>}<newline46mondego>"
"6996splitHere46","9578435splitHere46","@ElementCollection<newline46mondego>private Map<String, Resource> resources;<newline46mondego>"
"6997splitHere46","9578435splitHere46","@ElementColection<newline46mondego>private Set<Resource> resources;<newline46mondego>"
"6998splitHere46","9578497splitHere46","a op= b<newline46mondego>"
"6999splitHere46","9578497splitHere46","(a = (type of a)((a) op (b));<newline46mondego>"
"7000splitHere46","9578665splitHere46","ArrayList"
"7001splitHere46","9578665splitHere46","List<String> birthDates = new ArrayList<String>();<newline46mondego>Pattern datePattern = Pattern.compile(<doubleQuotes46>\\d\\d-\\d\\d-\\d\\d\\d\\d<doubleQuotes46>);<newline46mondego>for(String name : names) {<newline46mondego>    Matcher m = datePattern.matcher(name);<newline46mondego>    while(m.find()) {<newline46mondego>        birthDates.add(m.group());<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7002splitHere46","9578665splitHere46","Collections.sort(birthDates)"
"7003splitHere46","9578665splitHere46","Date"
"7004splitHere46","9578665splitHere46","m.group()"
"7005splitHere46","9578665splitHere46","Date"
"7006splitHere46","9578665splitHere46","ArrayList"
"7007splitHere46","9578665splitHere46","ArrayList<Date>"
"7008splitHere46","9578665splitHere46",".toArray(T[])"
"7009splitHere46","9578665splitHere46","List"
"7010splitHere46","9578665splitHere46","String[] birthDatesArray = birthDates.toArray(new String[birthDates.size()]);<newline46mondego>"
"7011splitHere46","9578666splitHere46","int x = -1;<newline46mondego>long y = x & 0x00000000ffffffffL;<newline46mondego>"
"7012splitHere46","9578666splitHere46","public static long getUnsignedInt(int x) {<newline46mondego>    return x & 0x00000000ffffffffL;<newline46mondego>}<newline46mondego>"
"7013splitHere46","9578783splitHere46","progBar.setIndeterminate(true);<newline46mondego>"
"7014splitHere46","9578783splitHere46","SwingUtilities.invokeLater"
"7015splitHere46","9578783splitHere46","//inside your long running thread when you want to update a Swing component<newline46mondego>SwingUtilities.invokeLater(new Runnable() {<newline46mondego>    public void run() {<newline46mondego><newline46mondego>        //This will be called on the EDT<newline46mondego>        progressBar.setValue(progressBar.getValue() + 1);<newline46mondego><newline46mondego><newline46mondego>    }<newline46mondego>});<newline46mondego>"
"7016splitHere46","9578914splitHere46","public void openURL(Context context) <newline46mondego>    {<newline46mondego>     Intent intent = new Intent(<doubleQuotes46>com.ingage.pocs.phonegap.URL<doubleQuotes46>);<newline46mondego>     intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);<newline46mondego>     context.startActivity(intent);<newline46mondego>     }<newline46mondego>"
"7017splitHere46","9578914splitHere46","package com.ingage.pocs.phonegap;<newline46mondego><newline46mondego>    import android.app.Activity;<newline46mondego>    import android.content.Intent;<newline46mondego>    import android.net.Uri;<newline46mondego>    import android.os.Bundle;<newline46mondego><newline46mondego>    public class OpenURL extends Activity{<newline46mondego><newline46mondego>        @Override<newline46mondego>protected void onCreate(Bundle savedInstanceState) {<newline46mondego>    // TODO Auto-generated method stub<newline46mondego>    super.onCreate(savedInstanceState);<newline46mondego>    DebugLog.LOGD(<doubleQuotes46>Within BookTicketsActivity Activity GO button <doubleQuotes46>);<newline46mondego><newline46mondego>    Intent browserIntent = new Intent(Intent.ACTION_VIEW, Uri.parse(<doubleQuotes46>http://www.thecinema.in<doubleQuotes46>));<newline46mondego>    startActivity(browserIntent);<newline46mondego><newline46mondego>}<newline46mondego>"
"7018splitHere46","9578914splitHere46","private Context applicationContext;<newline46mondego><newline46mondego>    deleteButton.setOnClickListener(new View.OnClickListener() {<newline46mondego>      public void onClick(View v) {<newline46mondego>         DebugLog.LOGD(<doubleQuotes46>Within onClick event of 'GO' button <doubleQuotes46>);<newline46mondego>        ImageTargets ia =new ImageTargets();<newline46mondego>             ia.openURL(applicationContext);<newline46mondego>        iA.openURL();<newline46mondego><newline46mondego><newline46mondego>    }<newline46mondego>});<newline46mondego>"
"7019splitHere46","9578940splitHere46","mvn dependency:tree<newline46mondego>"
"7020splitHere46","9578940splitHere46","<exclusion><newline46mondego>    <groupId>log4j</groupId><newline46mondego>    <artifactId>log4j</artifactId><newline46mondego></exclusion><newline46mondego>"
"7021splitHere46","9579161splitHere46","valueOf()"
"7022splitHere46","9579161splitHere46","Type value = Type.valueOf(scanner.next().toUpperCase());<newline46mondego>"
"7023splitHere46","9579161splitHere46","values()"
"7024splitHere46","9579161splitHere46","Type value = Type.values()[scanner.nextInt()];<newline46mondego>"
"7025splitHere46","9579240splitHere46","user.authorities"
"7026splitHere46","9579418splitHere46","ERROR"
"7027splitHere46","9579418splitHere46","bean"
"7028splitHere46","9579418splitHere46","INFO"
"7029splitHere46","9579418splitHere46","INFO"
"7030splitHere46","9579418splitHere46","jdbcAppender"
"7031splitHere46","9579418splitHere46","STDOUT"
"7032splitHere46","9579418splitHere46","<category name=<doubleQuotes46>bean<doubleQuotes46>><newline46mondego>    <appender-ref ref=<doubleQuotes46>jdbcAppender<doubleQuotes46>/> <newline46mondego>  </category><newline46mondego>"
"7033splitHere46","9579418splitHere46","ERROR"
"7034splitHere46","9579418splitHere46","jdbcAppender"
"7035splitHere46","9579418splitHere46","LevelMatchFilter"
"7036splitHere46","9579418splitHere46","DenyAllFilter"
"7037splitHere46","9579418splitHere46","jdbcAppender"
"7038splitHere46","9579418splitHere46","<appender name=<doubleQuotes46>jdbcAppender<doubleQuotes46> class=<doubleQuotes46>bean.CustomJdbcAppender<doubleQuotes46>> <newline46mondego>        <param name = <doubleQuotes46>jndiDataSource<doubleQuotes46> value=<doubleQuotes46>myjdbcDS<doubleQuotes46>/>        <newline46mondego>        <layout class=<doubleQuotes46>org.apache.log4j.PatternLayout<doubleQuotes46>> <newline46mondego>           <param name=<doubleQuotes46>ConversionPattern<doubleQuotes46> value=<doubleQuotes46>INSERT INTO errors (log_level, location, message) VALUES ( '%p','%C;%L', '%m' )<doubleQuotes46>  /> <newline46mondego>        </layout> <newline46mondego>        <filter class=<doubleQuotes46>org.apache.log4j.varia.LevelMatchFilter<doubleQuotes46>><newline46mondego>                  <param name=<doubleQuotes46>LevelToMatch<doubleQuotes46> value=<doubleQuotes46>error<doubleQuotes46> /><newline46mondego>                  <param name=<doubleQuotes46>AcceptOnMatch<doubleQuotes46> value=<doubleQuotes46>true<doubleQuotes46>/><newline46mondego>        </filter><newline46mondego>        <filter class=<doubleQuotes46>org.apache.log4j.varia.DenyAllFilter<doubleQuotes46> /><newline46mondego> </appender><newline46mondego>"
"7039splitHere46","9579420splitHere46","setListAdapter(new ListRow(this, your_theme_names_array, your_theme_icon_array));<newline46mondego>"
"7040splitHere46","9579600splitHere46","import java.awt.*;<newline46mondego>import java.awt.event.*;<newline46mondego>import javax.swing.*;<newline46mondego><newline46mondego>public class AddItemOrColor extends JFrame<newline46mondego>{<newline46mondego>    private JPanel contentPane;<newline46mondego>    private JButton modifyItemButton;<newline46mondego>    private JButton modifyColorButton;<newline46mondego>    private ActionListener action;<newline46mondego>    private int count = 0;<newline46mondego>    private Color[] color = { <newline46mondego>                                Color.RED, Color.BLUE, Color.GRAY,<newline46mondego>                                Color.WHITE, Color.CYAN, Color.PINK,                                                                                                                                     <newline46mondego>                                Color.DARK_GRAY, Color.ORANGE, Color.MAGENTA<newline46mondego>                            };<newline46mondego><newline46mondego>    public AddItemOrColor()<newline46mondego>    {<newline46mondego>        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        setLocationByPlatform(true);<newline46mondego><newline46mondego>        contentPane = new JPanel(new FlowLayout(FlowLayout.LEFT, 3, 3));<newline46mondego>        //contentPane.setMargin(new Insets(10, 10, 10, 10));<newline46mondego>        contentPane.setBackground(Color.BLUE);<newline46mondego><newline46mondego>        modifyItemButton = new JButton(<doubleQuotes46>MODIFY CONTENT<doubleQuotes46>);<newline46mondego>        modifyColorButton = new JButton(<doubleQuotes46>MODIFY COLOR<doubleQuotes46>);<newline46mondego><newline46mondego>        action = new ActionListener()<newline46mondego>        {<newline46mondego>            public void actionPerformed(ActionEvent ae)<newline46mondego>            {<newline46mondego>                JButton button = (JButton) ae.getSource();<newline46mondego><newline46mondego>                if (count == 9)<newline46mondego>                    count = 0;<newline46mondego><newline46mondego>                if (button == modifyItemButton)<newline46mondego>                {<newline46mondego>                    contentPane.add(new JLabel(<doubleQuotes46>LABEL <doubleQuotes46> + count));                  <newline46mondego>                }<newline46mondego>                else if (button == modifyColorButton)<newline46mondego>                {<newline46mondego>                    contentPane.setBackground(color[count]);<newline46mondego>                }<newline46mondego><newline46mondego>                contentPane.revalidate();<newline46mondego>                contentPane.repaint();<newline46mondego>                count++;<newline46mondego>            }<newline46mondego>        };<newline46mondego><newline46mondego>        modifyItemButton.addActionListener(action);<newline46mondego>        modifyColorButton.addActionListener(action);<newline46mondego><newline46mondego>        add(modifyColorButton, BorderLayout.PAGE_START);<newline46mondego>        add(contentPane, BorderLayout.CENTER);<newline46mondego>        add(modifyItemButton, BorderLayout.PAGE_END);<newline46mondego><newline46mondego>        setSize(400, 400);<newline46mondego>        setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String... args)<newline46mondego>    {<newline46mondego>        SwingUtilities.invokeLater(new Runnable()<newline46mondego>        {<newline46mondego>            public void run()<newline46mondego>            {<newline46mondego>                new AddItemOrColor();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7041splitHere46","9579609splitHere46","aaUtils.cleanUp(null, ps, result)"
"7042splitHere46","9579692splitHere46","<context-param><newline46mondego>    <param-name>contextConfigLocation</param-name><newline46mondego>    <param-value><newline46mondego>        classpath:/com/vsg/dataccess/framework/context/dataaccess-context.xml<newline46mondego>    </param-value><newline46mondego></context-param><newline46mondego>"
"7043splitHere46","9579858splitHere46","for (int i = 0; i < iterations; i++) {<newline46mondego>    executor.schedule(new Runnable() {<newline46mondego>        public void run() {<newline46mondego>            // do stuff here<newline46mondego>        }<newline46mondego>    }, delay * i, TimeUnit.MILLISECONDS);<newline46mondego>}<newline46mondego>"
"7044splitHere46","9579884splitHere46","public Socket getSocket() {<newline46mondego>    return clientSocket;<newline46mondego>}<newline46mondego>"
"7045splitHere46","9579919splitHere46","byte fileContent[] = new byte[(int) file.length()];<newline46mondego>fin.read(fileContent);<newline46mondego>"
"7046splitHere46","9579919splitHere46","byte fileContent[] = new byte[3000];<newline46mondego>try (FileInputStream fin = new FileInputStream(file)) {<newline46mondego>    while(fin.read(fileContent) >= 0) {<newline46mondego>         Base64.encodeBase64(fileContent);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7047splitHere46","9579919splitHere46","Base64.encodeBase64()"
"7048splitHere46","9579919splitHere46","encoded"
"7049splitHere46","9579919splitHere46","public void encode(File file, OutputStream base64OutputStream)<newline46mondego>"
"7050splitHere46","9579919splitHere46","base64OutputStream"
"7051splitHere46","9579919splitHere46","public void encode(File file, OutputStream base64OutputStream) {<newline46mondego>  InputStream is = new FileInputStream(file);<newline46mondego>  OutputStream out = new Base64OutputStream(base64OutputStream)<newline46mondego>  IOUtils.copy(is, out);<newline46mondego>  is.close();<newline46mondego>  out.close();<newline46mondego>}<newline46mondego>"
"7052splitHere46","9579919splitHere46","Base64OutputStream"
"7053splitHere46","9579919splitHere46","IOUtils"
"7054splitHere46","9579919splitHere46","FileInputStream"
"7055splitHere46","9579919splitHere46","Base64OutputStream"
"7056splitHere46","9579919splitHere46","="
"7057splitHere46","9579919splitHere46","IOUtils.copy()"
"7058splitHere46","9580217splitHere46","beginTransaction"
"7059splitHere46","9580308splitHere46","ErrorHandler"
"7060splitHere46","9580308splitHere46","public interface ErrorHandler {<newline46mondego><newline46mondego>    /**<newline46mondego>     * Handle the given error, possibly rethrowing it as a fatal exception<newline46mondego>     */<newline46mondego>    void handleError(Throwable t);<newline46mondego><newline46mondego>}<newline46mondego>"
"7061splitHere46","9580413splitHere46","volatile"
"7062splitHere46","9580472splitHere46","showConfirmDialog(Component parentComponent,Object message)"
"7063splitHere46","9580472splitHere46","parentComponent"
"7064splitHere46","9580472splitHere46","parentComponent"
"7065splitHere46","9580485splitHere46","add"
"7066splitHere46","9580485splitHere46","removeFirst"
"7067splitHere46","9580485splitHere46","import java.util.LinkedList;<newline46mondego><newline46mondego>class Test {<newline46mondego>    public static void main(String args[]) {<newline46mondego>        char arr[] = {3,1,4,1,5,9,2,6,5,3,5,8,9};<newline46mondego>        LinkedList<Integer> fifo = new LinkedList<Integer>();<newline46mondego><newline46mondego>        for (int i = 0; i < arr.length; i++)<newline46mondego>            fifo.add (new Integer (arr[i]));<newline46mondego><newline46mondego>        System.out.print (fifo.removeFirst() + <doubleQuotes46>.<doubleQuotes46>);<newline46mondego>        while (! fifo.isEmpty())<newline46mondego>            System.out.print (fifo.removeFirst());<newline46mondego>        System.out.println();<newline46mondego>    }<newline46mondego>} <newline46mondego>"
"7068splitHere46","9580485splitHere46","Queue"
"7069splitHere46","9580485splitHere46","import java.util.LinkedList;<newline46mondego>import java.util.Queue;<newline46mondego><newline46mondego>class Test {<newline46mondego>    public static void main(String args[]) {<newline46mondego>        char arr[] = {3,1,4,1,5,9,2,6,5,3,5,8,9};<newline46mondego>        Queue<Integer> fifo = new LinkedList<Integer>();<newline46mondego><newline46mondego>        for (int i = 0; i < arr.length; i++)<newline46mondego>            fifo.add (new Integer (arr[i]));<newline46mondego><newline46mondego>        System.out.print (fifo.remove() + <doubleQuotes46>.<doubleQuotes46>);<newline46mondego>        while (! fifo.isEmpty())<newline46mondego>            System.out.print (fifo.remove());<newline46mondego>        System.out.println();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7070splitHere46","9580485splitHere46","Queue"
"7071splitHere46","9580485splitHere46","fifo"
"7072splitHere46","9580485splitHere46","Queue"
"7073splitHere46","9580485splitHere46","remove()"
"7074splitHere46","9580485splitHere46","removeFirst()"
"7075splitHere46","9580485splitHere46","Queue"
"7076splitHere46","9580485splitHere46","isEmpty()"
"7077splitHere46","9580485splitHere46","Collection"
"7078splitHere46","9580485splitHere46","Queue"
"7079splitHere46","9580554splitHere46","String iki = <doubleQuotes46>brescia calcioâ€Ž<doubleQuotes46>;<newline46mondego><newline46mondego>for(int i=0;i<iki.length();i++)<newline46mondego>    System.out.println(i+<doubleQuotes46>: <doubleQuotes46>+iki.charAt(i)+<doubleQuotes46> (<doubleQuotes46> + (int) iki.charAt(i)+<doubleQuotes46>)<doubleQuotes46>);<newline46mondego>"
"7080splitHere46","9580554splitHere46","0: b (98)<newline46mondego>1: r (114)<newline46mondego>2: e (101)<newline46mondego>3: s (115)<newline46mondego>4: c (99)<newline46mondego>5: i (105)<newline46mondego>6: a (97)<newline46mondego>7:   (32)<newline46mondego>8: c (99)<newline46mondego>9: a (97)<newline46mondego>10: l (108)<newline46mondego>11: c (99)<newline46mondego>12: i (105)<newline46mondego>13: o (111)<newline46mondego>14: â€Ž (8206)<newline46mondego>"
"7081splitHere46","9580570splitHere46","@ManyToMany(mappedBy = <doubleQuotes46>categories<doubleQuotes46>) // in the class VideoCategory<newline46mondego>"
"7082splitHere46","9580621splitHere46","export CLASSPATH=$CLASSPATH:$(find $REQUIRED_DIRECTORY -name <doubleQuotes46>*.jar<doubleQuotes46>|tr <doubleQuotes46>\n<doubleQuotes46> <doubleQuotes46>:<doubleQuotes46>)<newline46mondego>"
"7083splitHere46","9580644splitHere46","<%@page import=<doubleQuotes46>java.net.URLEncoder<doubleQuotes46> %><newline46mondego><%<newline46mondego>    String fbURL = <doubleQuotes46>http://www.facebook.com/dialog/oauth?client_id=myfacebookappid&redirect_uri=<doubleQuotes46> + URLEncoder.encode(<doubleQuotes46>http://myappengineappid.appspot.com/signin_fb.do<doubleQuotes46>) + <doubleQuotes46>&scope=email<doubleQuotes46>;<newline46mondego>%><newline46mondego><newline46mondego><a href=<doubleQuotes46><%= fbURL %><doubleQuotes46>><img src=<doubleQuotes46>/img/facebook.png<doubleQuotes46> border=<doubleQuotes46>0<doubleQuotes46> /></a><newline46mondego>"
"7084splitHere46","9580644splitHere46","import org.json.JSONObject;<newline46mondego>import org.json.JSONException;<newline46mondego><newline46mondego>import java.io.BufferedReader;<newline46mondego>import java.io.InputStreamReader;<newline46mondego>import java.io.IOException;<newline46mondego><newline46mondego>import java.net.URL;<newline46mondego>import java.net.URLConnection;<newline46mondego>import java.net.URLEncoder;<newline46mondego><newline46mondego>import javax.servlet.ServletException;<newline46mondego>import javax.servlet.http.HttpServlet;<newline46mondego>import javax.servlet.http.HttpServletRequest;<newline46mondego>import javax.servlet.http.HttpServletResponse;<newline46mondego><newline46mondego>public class SignInFB extends HttpServlet {<newline46mondego><newline46mondego>    public void service(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {            <newline46mondego>        String code = req.getParameter(<doubleQuotes46>code<doubleQuotes46>);<newline46mondego>        if (code == null || code.equals(<doubleQuotes46><doubleQuotes46>)) {<newline46mondego>            // an error occurred, handle this<newline46mondego>        }<newline46mondego><newline46mondego>        String token = null;<newline46mondego>        try {<newline46mondego>            String g = <doubleQuotes46>https://graph.facebook.com/oauth/access_token?client_id=myfacebookappid&redirect_uri=<doubleQuotes46> + URLEncoder.encode(<doubleQuotes46>http://myappengineappid.appspot.com/signin_fb.do<doubleQuotes46>, <doubleQuotes46>UTF-8<doubleQuotes46>) + <doubleQuotes46>&client_secret=myfacebookappsecret&code=<doubleQuotes46> + code;<newline46mondego>            URL u = new URL(g);<newline46mondego>            URLConnection c = u.openConnection();<newline46mondego>            BufferedReader in = new BufferedReader(new InputStreamReader(c.getInputStream()));<newline46mondego>            String inputLine;<newline46mondego>            StringBuffer b = new StringBuffer();<newline46mondego>            while ((inputLine = in.readLine()) != null)<newline46mondego>                b.append(inputLine + <doubleQuotes46>\n<doubleQuotes46>);            <newline46mondego>            in.close();<newline46mondego>            token = b.toString();<newline46mondego>            if (token.startsWith(<doubleQuotes46>{<doubleQuotes46>))<newline46mondego>                throw new Exception(<doubleQuotes46>error on requesting token: <doubleQuotes46> + token + <doubleQuotes46> with code: <doubleQuotes46> + code);<newline46mondego>        } catch (Exception e) {<newline46mondego>                // an error occurred, handle this<newline46mondego>        }<newline46mondego><newline46mondego>        String graph = null;<newline46mondego>        try {<newline46mondego>            String g = <doubleQuotes46>https://graph.facebook.com/me?<doubleQuotes46> + token;<newline46mondego>            URL u = new URL(g);<newline46mondego>            URLConnection c = u.openConnection();<newline46mondego>            BufferedReader in = new BufferedReader(new InputStreamReader(c.getInputStream()));<newline46mondego>            String inputLine;<newline46mondego>            StringBuffer b = new StringBuffer();<newline46mondego>            while ((inputLine = in.readLine()) != null)<newline46mondego>                b.append(inputLine + <doubleQuotes46>\n<doubleQuotes46>);            <newline46mondego>            in.close();<newline46mondego>            graph = b.toString();<newline46mondego>        } catch (Exception e) {<newline46mondego>                // an error occurred, handle this<newline46mondego>        }<newline46mondego><newline46mondego>        String facebookId;<newline46mondego>        String firstName;<newline46mondego>        String middleNames;<newline46mondego>        String lastName;<newline46mondego>        String email;<newline46mondego>        Gender gender;<newline46mondego>        try {<newline46mondego>            JSONObject json = new JSONObject(graph);<newline46mondego>            facebookId = json.getString(<doubleQuotes46>id<doubleQuotes46>);<newline46mondego>            firstName = json.getString(<doubleQuotes46>first_name<doubleQuotes46>);<newline46mondego>            if (json.has(<doubleQuotes46>middle_name<doubleQuotes46>))<newline46mondego>               middleNames = json.getString(<doubleQuotes46>middle_name<doubleQuotes46>);<newline46mondego>            else<newline46mondego>                middleNames = null;<newline46mondego>            if (middleNames != null && middleNames.equals(<doubleQuotes46><doubleQuotes46>))<newline46mondego>                middleNames = null;<newline46mondego>            lastName = json.getString(<doubleQuotes46>last_name<doubleQuotes46>);<newline46mondego>            email = json.getString(<doubleQuotes46>email<doubleQuotes46>);<newline46mondego>            if (json.has(<doubleQuotes46>gender<doubleQuotes46>)) {<newline46mondego>                String g = json.getString(<doubleQuotes46>gender<doubleQuotes46>);<newline46mondego>                if (g.equalsIgnoreCase(<doubleQuotes46>female<doubleQuotes46>))<newline46mondego>                    gender = Gender.FEMALE;<newline46mondego>                else if (g.equalsIgnoreCase(<doubleQuotes46>male<doubleQuotes46>))<newline46mondego>                    gender = Gender.MALE;<newline46mondego>                else<newline46mondego>                    gender = Gender.UNKNOWN;<newline46mondego>            } else {<newline46mondego>                gender = Gender.UNKNOWN;<newline46mondego>            }<newline46mondego>        } catch (JSONException e) {<newline46mondego>            // an error occurred, handle this<newline46mondego>        }<newline46mondego><newline46mondego>        ...<newline46mondego>"
"7085splitHere46","9580765splitHere46","Socket socket = new Socket();<newline46mondego>        int linger = -2;//To distinguish the <doubleQuotes46>initial value<doubleQuotes46><newline46mondego>        try {<newline46mondego>            linger = socket.getSoLinger();<newline46mondego>        } catch (SocketException e) {<newline46mondego>            // TODO Auto-generated catch block<newline46mondego>            e.printStackTrace();<newline46mondego>        }<newline46mondego>        System.out.println(<doubleQuotes46>Socket.getLinger() = <doubleQuotes46>+linger);<newline46mondego>"
"7086splitHere46","9580779splitHere46","License"
"7087splitHere46","9580779splitHere46","name"
"7088splitHere46","9580779splitHere46","@JoinColumn"
"7089splitHere46","9580779splitHere46","@JoinColumn"
"7090splitHere46","9580779splitHere46","@ManyToOne<newline46mondego>@JoinColumn(name = <doubleQuotes46>user_Id<doubleQuotes46>)<newline46mondego>@ForeignKey(name = <doubleQuotes46>license_users_fk<doubleQuotes46>)<newline46mondego>public User getUser() {<newline46mondego>    return user;<newline46mondego>}<newline46mondego><newline46mondego>@ManyToOne<newline46mondego>@JoinColumn(name = <doubleQuotes46>key_acct_mgr_id<doubleQuotes46>)<newline46mondego>@ForeignKey(name = <doubleQuotes46>license_kam_fk<doubleQuotes46>)<newline46mondego>public User getKeyAccountManager() {<newline46mondego>    return keyAccountManager;<newline46mondego>}<newline46mondego>"
"7091splitHere46","9580779splitHere46","==================================================<newline46mondego>| License                                        |<newline46mondego>==================================================<newline46mondego>|id (Primary key of table License)               |<newline46mondego>|user_Id (Foreign key to the User Table)         |<newline46mondego>|key_acct_mgr_id (Foreign key to the User Table) |<newline46mondego>==================================================<newline46mondego>"
"7092splitHere46","9581078splitHere46","Integer.MAX_VALUE"
"7093splitHere46","9581344splitHere46","Class.forName"
"7094splitHere46","9581344splitHere46","Class.forName(<doubleQuotes46>com.mysql.jdbc.Driver<doubleQuotes46>);<newline46mondego>"
"7095splitHere46","9581417splitHere46","PriorityQueue"
"7096splitHere46","9581417splitHere46","Collections.reverseOrder(...)"
"7097splitHere46","9581417splitHere46","poll()"
"7098splitHere46","9581563splitHere46","byte"
"7099splitHere46","9581563splitHere46","byte"
"7100splitHere46","9581563splitHere46","int"
"7101splitHere46","9581563splitHere46","int i=rno[0];<newline46mondego>"
"7102splitHere46","9581563splitHere46","Byte"
"7103splitHere46","9581563splitHere46","Byte b = rno[0]; // Boxing conversion converts `byte` to `Byte`<newline46mondego>int i = b.intValue();<newline46mondego>"
"7104splitHere46","9581563splitHere46","Byte"
"7105splitHere46","9581563splitHere46","Byte b = new Byte(rno[0]);<newline46mondego>int i = b.intValue();<newline46mondego>"
"7106splitHere46","9581563splitHere46","int"
"7107splitHere46","9581563splitHere46","byte"
"7108splitHere46","9581563splitHere46","int i;<newline46mondego>byte b;<newline46mondego><newline46mondego>i = 5;<newline46mondego>b = (byte)i;<newline46mondego>"
"7109splitHere46","9581658splitHere46","WHERE index(info) = c AND info.score = 'whatever'<newline46mondego>"
"7110splitHere46","9581729splitHere46","Generator<CountedObject> gen = new BasicGenerator1<CountedObject>(CountedObject.class);<newline46mondego>"
"7111splitHere46","9581877splitHere46","public class Response {<newline46mondego>    public boolean error;<newline46mondego>    public int id;<newline46mondego>    public Result result;<newline46mondego>}<newline46mondego><newline46mondego>public class Result {<newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"7112splitHere46","9581877splitHere46","Response response = new Response();<newline46mondego>Gson gson = new Gson();<newline46mondego>response = gson.fromJson(response, Response.class);<newline46mondego>"
"7113splitHere46","9581919splitHere46","import javax.swing.text.MutableAttributeSet;<newline46mondego>import javax.swing.text.html.HTML;<newline46mondego>import javax.swing.text.html.HTMLEditorKit;<newline46mondego>import javax.swing.text.html.parser.ParserDelegator;<newline46mondego>import java.io.Reader;<newline46mondego>import java.io.StringReader;<newline46mondego><newline46mondego>public class Test2 {<newline46mondego>    public static final String content = <doubleQuotes46><html> \n<doubleQuotes46> +<newline46mondego>            <doubleQuotes46><head> \n<doubleQuotes46> +<newline46mondego>            <doubleQuotes46><title>test</title> \n<doubleQuotes46> +<newline46mondego>            <doubleQuotes46></head> \n<doubleQuotes46> +<newline46mondego>            <doubleQuotes46><body> \n<doubleQuotes46> +<newline46mondego>            <doubleQuotes46>test \n<doubleQuotes46> +<newline46mondego>            <doubleQuotes46><a href=\<doubleQuotes46>http://localhost/t/1.html\<doubleQuotes46>>link1</a> \n<doubleQuotes46> +<newline46mondego>            <doubleQuotes46>sdf \n<doubleQuotes46> +<newline46mondego>            <doubleQuotes46><a href=\<doubleQuotes46>http://localhost/t/2.html\<doubleQuotes46>>link2</a> \n<doubleQuotes46> +<newline46mondego>            <doubleQuotes46>sdf \n<doubleQuotes46> +<newline46mondego>            <doubleQuotes46><a href=\<doubleQuotes46>http://localhost/t/1.html\<doubleQuotes46>>link3</a> \n<doubleQuotes46> +<newline46mondego>            <doubleQuotes46>sdf \n<doubleQuotes46> +<newline46mondego>            <doubleQuotes46><a href=\<doubleQuotes46>http://localhost/t/2.html\<doubleQuotes46>>link3</a> \n<doubleQuotes46> +<newline46mondego>            <doubleQuotes46></body> \n<doubleQuotes46> +<newline46mondego>            <doubleQuotes46></html> <doubleQuotes46>;<newline46mondego><newline46mondego>    public static void main(String args[]) throws Exception {<newline46mondego>        Reader reader = new StringReader(content);<newline46mondego>        new ParserDelegator().parse(reader, new LinkPage(), true);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class LinkPage extends HTMLEditorKit.ParserCallback {<newline46mondego>    int startPos = -1;<newline46mondego><newline46mondego>    public void handleText(char[] data, int pos) {<newline46mondego>        if (startPos >= 0) {<newline46mondego>            startPos = pos;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public void handleEndTag(HTML.Tag t, int pos) {<newline46mondego>        super.handleEndTag(t, pos);<newline46mondego>        if (t == HTML.Tag.TITLE) {<newline46mondego>            System.out.println(Test2.content.substring(startPos, pos));<newline46mondego>            startPos = -1;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public void handleStartTag(HTML.Tag t, MutableAttributeSet a, int pos) {<newline46mondego>        super.handleStartTag(t, a, pos);<newline46mondego>        if (t == HTML.Tag.TITLE) {<newline46mondego>            startPos = pos;<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7114splitHere46","9581975splitHere46","ByteArrayContent.fromString(null, placeJSON)"
"7115splitHere46","9581975splitHere46","String placeJSON =<newline46mondego>            <doubleQuotes46>{<doubleQuotes46>+<newline46mondego>              <doubleQuotes46>\<doubleQuotes46>location\<doubleQuotes46>: {<doubleQuotes46> +<newline46mondego>                <doubleQuotes46>\<doubleQuotes46>lat\<doubleQuotes46>: <doubleQuotes46> + latitude + <doubleQuotes46>,<doubleQuotes46> +<newline46mondego>                <doubleQuotes46>\<doubleQuotes46>lng\<doubleQuotes46>: <doubleQuotes46> + longitude +<newline46mondego>               <doubleQuotes46>},<doubleQuotes46> + <newline46mondego>              <doubleQuotes46>\<doubleQuotes46>accuracy\<doubleQuotes46>:<doubleQuotes46> + accuracy + <doubleQuotes46>,<doubleQuotes46> +<newline46mondego>               <doubleQuotes46>\<doubleQuotes46>name\<doubleQuotes46>: \<doubleQuotes46><doubleQuotes46> + name + <doubleQuotes46>\<doubleQuotes46>,<doubleQuotes46> +<newline46mondego>               <doubleQuotes46>\<doubleQuotes46>types\<doubleQuotes46>: [\<doubleQuotes46><doubleQuotes46> + type + <doubleQuotes46>\<doubleQuotes46>],<doubleQuotes46> +<newline46mondego>               <doubleQuotes46>\<doubleQuotes46>language\<doubleQuotes46>: \<doubleQuotes46>en\<doubleQuotes46> <doubleQuotes46> +<newline46mondego>            <doubleQuotes46>}<doubleQuotes46>;<newline46mondego><newline46mondego>        HttpRequest request;            <newline46mondego>        request = t.buildPostRequest(new GenericUrl(PLACES_ADD_URL), ByteArrayContent.fromString(null, placeJSON));<newline46mondego><newline46mondego>        //Set the Google headers<newline46mondego>        GoogleHeaders headers = new GoogleHeaders();<newline46mondego><newline46mondego>        headers.setContentType(<doubleQuotes46>application/json<doubleQuotes46>);     <newline46mondego>        request.setHeaders(headers);<newline46mondego><newline46mondego>        request.getUrl().put(<doubleQuotes46>key<doubleQuotes46>, <doubleQuotes46>....<doubleQuotes46>);<newline46mondego>        request.getUrl().put(<doubleQuotes46>sensor<doubleQuotes46>, <doubleQuotes46>true<doubleQuotes46>); <newline46mondego>        request.execute();<newline46mondego>"
"7116splitHere46","9581998splitHere46","getChildView"
"7117splitHere46","9582003splitHere46","AjaxFormComponentUpdatingBehavior"
"7118splitHere46","9582003splitHere46","DropDownChoice<String> ddc = new DropDownChoice<String>(<doubleQuotes46>ddc<doubleQuotes46>, model, Arrays.asList(<doubleQuotes46>a<doubleQuotes46>, <doubleQuotes46>b<doubleQuotes46>, <doubleQuotes46>c<doubleQuotes46>));<newline46mondego>ddc.add(new AjaxFormComponentUpdatingBehavior(<doubleQuotes46>onchange<doubleQuotes46>) {<newline46mondego>    @Override<newline46mondego>    protected void onUpdate(AjaxRequestTarget target) {<newline46mondego>        System.out.println(<doubleQuotes46>selected: <doubleQuotes46> + model.getObject());<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"7119splitHere46","9582118splitHere46","HttpURLConnection con = (HttpURLConnection) new <newline46mondego>URL(<doubleQuotes46>https://www.example.com<doubleQuotes46>).openConnection();<newline46mondego>con.setRequestMethod(<doubleQuotes46>POST<doubleQuotes46>);<newline46mondego>con.getOutputStream().write(<doubleQuotes46>LOGIN<doubleQuotes46>.getBytes(<doubleQuotes46>UTF-8<doubleQuotes46>));<newline46mondego>con.getInputStream();<newline46mondego>"
"7120splitHere46","9582118splitHere46","con.setRequestProperty(<doubleQuotes46>Authorization<doubleQuotes46>, <doubleQuotes46>Basic dXNlcm5hbWU6cGFzc3dvcmQ=<doubleQuotes46>);"
"7121splitHere46","9582118splitHere46","//username:password base64 encoded"
"7122splitHere46","9582170splitHere46","Window > Preferences > Java > Compiler"
"7123splitHere46","9582236splitHere46","ResultSet"
"7124splitHere46","9582236splitHere46","Object"
"7125splitHere46","9582236splitHere46","ArrayList"
"7126splitHere46","9582236splitHere46","count"
"7127splitHere46","9582236splitHere46","ArrayList"
"7128splitHere46","9582236splitHere46","mx.collections.ArrayCollection"
"7129splitHere46","9582236splitHere46","Array"
"7130splitHere46","9582236splitHere46","List -> array"
"7131splitHere46","9582236splitHere46","List<MyObject> myList = new ArrayList<MyObject>();<newline46mondego>... populate myList from ResultSet ...<newline46mondego>MyObject[] array = myList.toArray(new MyObject[myList.size()]);<newline46mondego>"
"7132splitHere46","9582301splitHere46","paintComponent(g)"
"7133splitHere46","9582301splitHere46","JButon"
"7134splitHere46","9582453splitHere46","Pattern"
"7135splitHere46","9582512splitHere46","private static final Map BASIC_TYPES;<newline46mondego>...<newline46mondego>basics.put( java.util.Date.class.getName(), Hibernate.TIMESTAMP );<newline46mondego>...<newline46mondego>BASIC_TYPES = Collections.unmodifiableMap( basics );<newline46mondego>"
"7136splitHere46","9582512splitHere46","Iterator clsMappings = cfg.getClassMappings();<newline46mondego>while(clsMappings.hasNext()){<newline46mondego>    PersistentClass mapping = (PersistentClass) clsMappings.next();<newline46mondego>    handleProperties(mapping.getPropertyIterator(), map);<newline46mondego>}<newline46mondego>"
"7137splitHere46","9582512splitHere46","Type result = TypeFactory.heuristicType(typeName, typeParameters);<newline46mondego>"
"7138splitHere46","9582512splitHere46","public class HibernatePersistenceExtensions extends HibernatePersistence {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public EntityManagerFactory createContainerEntityManagerFactory(PersistenceUnitInfo info, Map map) {<newline46mondego><newline46mondego>        if (<doubleQuotes46>true<doubleQuotes46>.equals(map.get(<doubleQuotes46>hibernate.use.custom.entity.manager.factory<doubleQuotes46>))) {<newline46mondego>            return CustomeEntityManagerFactoryFactory.createCustomEntityManagerFactory(info, map);<newline46mondego>        } else {<newline46mondego>            return super.createContainerEntityManagerFactory(info, map);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7139splitHere46","9582512splitHere46","public class ReattachingEntityManagerFactoryFactory {<newline46mondego><newline46mondego><newline46mondego>    @SuppressWarnings(<doubleQuotes46>rawtypes<doubleQuotes46>)<newline46mondego>    public static EntityManagerFactory createContainerEntityManagerFactory(<newline46mondego>    PersistenceUnitInfo info, Map map) {<newline46mondego>        Ejb3Configuration cfg = new Ejb3Configuration();<newline46mondego><newline46mondego>        Ejb3Configuration configured = cfg.configure( info, map );<newline46mondego><newline46mondego>        handleClassMappings(cfg, map);<newline46mondego><newline46mondego>        return configured != null ? configured.buildEntityManagerFactory() : null;<newline46mondego>    }<newline46mondego><newline46mondego>    @SuppressWarnings(<doubleQuotes46>rawtypes<doubleQuotes46>)<newline46mondego>    private static void handleClassMappings(Ejb3Configuration cfg, Map map) {<newline46mondego>        Iterator clsMappings = cfg.getClassMappings();<newline46mondego>        while(clsMappings.hasNext()){<newline46mondego>             PersistentClass mapping = (PersistentClass) clsMappings.next();<newline46mondego>             handleProperties(mapping.getPropertyIterator(), map);<newline46mondego>        }<newline46mondego>    } <newline46mondego><newline46mondego><newline46mondego><newline46mondego>    private static void handleProperties(Iterator props, Map map) {<newline46mondego><newline46mondego>        while(props.hasNext()){<newline46mondego>             Property prop = (Property) props.next();<newline46mondego>             Value value = prop.getValue();<newline46mondego>             if (value instanceof Component) {<newline46mondego>                 Component c = (Component) value;<newline46mondego>                 handleProperties(c.getPropertyIterator(), map);<newline46mondego>             } else {<newline46mondego><newline46mondego>                 handleReturnUtilDateInsteadOfTimestamp(prop, map);<newline46mondego><newline46mondego>             }<newline46mondego>         }<newline46mondego><newline46mondego>    private static void handleReturnUtilDateInsteadOfTimestamp(Property prop, Map map) {<newline46mondego>        if (<doubleQuotes46>true<doubleQuotes46>.equals(map.get(<doubleQuotes46>hibernate.return.date.instead.of.timestamp<doubleQuotes46>))) {<newline46mondego>            Value value = prop.getValue();<newline46mondego><newline46mondego>            if (value instanceof SimpleValue) {<newline46mondego>                SimpleValue simpleValue = (SimpleValue) value;<newline46mondego>                String typeName = simpleValue.getTypeName();<newline46mondego>                if (<doubleQuotes46>java.util.Date<doubleQuotes46>.equals(typeName)) {<newline46mondego>                    UtilDateSimpleValue udsv = new UtilDateSimpleValue(simpleValue);<newline46mondego>                    prop.setValue(udsv);<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"7140splitHere46","9582512splitHere46","public class UtilDateSimpleValue implements KeyValue{<newline46mondego><newline46mondego>    private SimpleValue value;<newline46mondego><newline46mondego>    public UtilDateSimpleValue(SimpleValue value) {<newline46mondego>        this.value = value;<newline46mondego>    }<newline46mondego><newline46mondego>    public SimpleValue getValue() {<newline46mondego>        return value;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public int getColumnSpan() {<newline46mondego>        return value.getColumnSpan();<newline46mondego>    }<newline46mondego><newline46mondego>    ...<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Type getType() throws MappingException {<newline46mondego>        final String typeName = value.getTypeName();<newline46mondego><newline46mondego>        if (typeName == null) {<newline46mondego>                throw new MappingException(<doubleQuotes46>No type name<doubleQuotes46>);<newline46mondego>        }<newline46mondego><newline46mondego>        Type result = new UtilDateUserType();<newline46mondego><newline46mondego>        return result;<newline46mondego>    }<newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"7141splitHere46","9582512splitHere46","public class UtilDateUserType extends TimestampType{<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Object get(ResultSet rs, String name) throws SQLException {<newline46mondego>        Timestamp ts = rs.getTimestamp(name);<newline46mondego><newline46mondego>        Date result = null;<newline46mondego>        if(ts != null){<newline46mondego>            result = new Date(ts.getTime());<newline46mondego>        }<newline46mondego><newline46mondego>        return result;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7142splitHere46","9582529splitHere46","KeyStore trustStore  = KeyStore.getInstance( <doubleQuotes46>BKS<doubleQuotes46> /*KeyStore.getDefaultType()*/ );<newline46mondego>FileInputStream instream = new FileInputStream(new File(<doubleQuotes46>/mnt/sdcard/keystore.bks<doubleQuotes46>));<newline46mondego>try {<newline46mondego>    trustStore.load(instream, <doubleQuotes46>222222<doubleQuotes46>.toCharArray());<newline46mondego>} catch (NoSuchAlgorithmException e) {<newline46mondego>    e.printStackTrace();<newline46mondego>} catch (CertificateException e) {<newline46mondego>    e.printStackTrace();<newline46mondego>} catch (IOException e) {<newline46mondego>    e.printStackTrace();<newline46mondego>} finally {<newline46mondego>    try { instream.close(); } catch (Exception ignore) {}<newline46mondego>}<newline46mondego><newline46mondego>// Create socket factory with given keystore.<newline46mondego>SSLSocketFactory socketFactory = new SSLSocketFactory(trustStore);<newline46mondego><newline46mondego>SSLSocketFactory socketFactory = new SSLSocketFactory(trustStore);<newline46mondego>Scheme sch = new Scheme(<doubleQuotes46>https<doubleQuotes46>, socketFactory, 443);<newline46mondego>httpclient.getConnectionManager().getSchemeRegistry().register(sch);<newline46mondego><newline46mondego>HttpGet httpget = new HttpGet(<doubleQuotes46>https://10.2.20.20/fido/EzPay/login.php<doubleQuotes46>);<newline46mondego><newline46mondego>System.out.println(<doubleQuotes46>executing request <doubleQuotes46> + httpget.getRequestLine());<newline46mondego><newline46mondego>HttpResponse response = httpclient.execute(httpget);<newline46mondego>HttpEntity entity = response.getEntity();<newline46mondego><newline46mondego>System.out.println(<doubleQuotes46>----------------------------------------<doubleQuotes46>);<newline46mondego>System.out.println(response.getStatusLine());<newline46mondego>if (entity != null) {<newline46mondego>    System.out.println(<doubleQuotes46>Response content length:  <doubleQuotes46> + entity.getContentLength());<newline46mondego>}<newline46mondego><newline46mondego>// Print html.<newline46mondego>BufferedReader in = new BufferedReader(new InputStreamReader(response.getEntity().getContent()));<newline46mondego>String line = <doubleQuotes46><doubleQuotes46>;<newline46mondego>while ((line = in.readLine()) != null) {<newline46mondego>     System.out.println(line);<newline46mondego>}<newline46mondego>in.close();<newline46mondego>"
"7143splitHere46","9582556splitHere46","(<doubleQuotes46>insert into mytablename (rest_dt) values to_date(?, 'DD-MM-YYYY')<doubleQuotes46>);  <newline46mondego>"
"7144splitHere46","9582556splitHere46","TO_DATE(?, 'DD-MM-YYYY','NLS_DATE_LANGUAGE = American')  <newline46mondego>"
"7145splitHere46","9582693splitHere46","public DatabaseHelper(Context context) <newline46mondego>{<newline46mondego>    super(context, dbName, null,Increment the value here);<newline46mondego>}<newline46mondego>"
"7146splitHere46","9582711splitHere46","getInstance()"
"7147splitHere46","9582711splitHere46","NetworkConnection"
"7148splitHere46","9582758splitHere46","Matcher.find"
"7149splitHere46","9582758splitHere46","public static void main(String[] args) {<newline46mondego>    Matcher m = Pattern.compile(<doubleQuotes46>^(0039|\\+39)<doubleQuotes46>).matcher(<doubleQuotes46>00392121<doubleQuotes46>);<newline46mondego><newline46mondego>    if (m.find())<newline46mondego>        System.out.println(<doubleQuotes46>Found<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"7150splitHere46","9582758splitHere46","^"
"7151splitHere46","9582758splitHere46","Pattern.matches(regex, input)"
"7152splitHere46","9582758splitHere46","Pattern.compile(regex).matcher(input).matches()<newline46mondego>"
"7153splitHere46","9582758splitHere46","Matcher.matches"
"7154splitHere46","9582998splitHere46","<context:component-scan base-package=<doubleQuotes46>mypackage.com....<doubleQuotes46>/><newline46mondego>   <context:annotation-config/><newline46mondego>"
"7155splitHere46","9583131splitHere46","public class MyAction extends ActionSupport{<newline46mondego><newline46mondego> private String idUser;<newline46mondego> getter and setters   <newline46mondego><newline46mondego>}<newline46mondego>"
"7156splitHere46","9583131splitHere46","idUser"
"7157splitHere46","9583131splitHere46","idUser"
"7158splitHere46","9583146splitHere46","char letter = 'a';<newline46mondego>char convertedletter;<newline46mondego>convertedletter = (char) (letter + 5);<newline46mondego>System.out.print(convertedletter);<newline46mondego>"
"7159splitHere46","9583197splitHere46","Object someObject = someSet.iterator().next();<newline46mondego>"
"7160splitHere46","9583197splitHere46","Set"
"7161splitHere46","9583326splitHere46","public class TreePopulator implements IStartup<newline46mondego>{<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void earlyStartup()<newline46mondego>    {<newline46mondego>        PlatformUI.getWorkbench().getDisplay().asyncExec(new Runnable() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void run()<newline46mondego>            {<newline46mondego>                ViewMenuOffers viewMenuOffers = (ViewMenuOffers) PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage().findView(ViewMenuOffers.ID);<newline46mondego>                TreeViewer treeViewer = viewMenuOffers.getTreeViewer();<newline46mondego>                Tree tree = treeViewer.getTree();<newline46mondego><newline46mondego>                TreeItem trtmS = new TreeItem(tree, SWT.NONE);<newline46mondego>                trtmS.setText(<doubleQuotes46>Test<doubleQuotes46>);<newline46mondego><newline46mondego>            }<newline46mondego><newline46mondego>        });<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"7162splitHere46","9583501splitHere46","has-a"
"7163splitHere46","9583501splitHere46","has-many"
"7164splitHere46","9583501splitHere46","List"
"7165splitHere46","9583501splitHere46","List"
"7166splitHere46","9583501splitHere46","Window"
"7167splitHere46","9583501splitHere46","StandardWindow"
"7168splitHere46","9583501splitHere46","ManSizeWindow"
"7169splitHere46","9583501splitHere46","is-a"
"7170splitHere46","9583501splitHere46","StandardWindow"
"7171splitHere46","9583501splitHere46","Window"
"7172splitHere46","9583611splitHere46","(\d+)<newline46mondego>"
"7173splitHere46","9583611splitHere46","<sub>$1</sub><newline46mondego>"
"7174splitHere46","9583611splitHere46","str = str.replaceAll(<doubleQuotes46>(\\d+)<doubleQuotes46>, <doubleQuotes46><sub>$1</sub><doubleQuotes46>);<newline46mondego>"
"7175splitHere46","9583620splitHere46","HttpPost"
"7176splitHere46","9583620splitHere46","HttpGet"
"7177splitHere46","9583643splitHere46","<doubleQuotes46>"
"7178splitHere46","9583643splitHere46","s = s.replaceAll(<doubleQuotes46>^\<doubleQuotes46>+<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>).replaceAll(<doubleQuotes46>\<doubleQuotes46>+$<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>"
"7179splitHere46","9583643splitHere46","<doubleQuotes46>"
"7180splitHere46","9583643splitHere46","s = s.replaceAll(<doubleQuotes46>^[\<doubleQuotes46>()]+<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>).replaceAll(<doubleQuotes46>[\<doubleQuotes46>()]+$<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>"
"7181splitHere46","9583643splitHere46","StringUtils.strip()"
"7182splitHere46","9583705splitHere46","LinkedHashMap"
"7183splitHere46","9583705splitHere46","TreeMap"
"7184splitHere46","9583705splitHere46","keySet()"
"7185splitHere46","9583705splitHere46","values()"
"7186splitHere46","9583705splitHere46","Map"
"7187splitHere46","9583705splitHere46","LinkedHashMap"
"7188splitHere46","9583705splitHere46","keySet()"
"7189splitHere46","9583705splitHere46","values()"
"7190splitHere46","9583705splitHere46","HashMap"
"7191splitHere46","9583710splitHere46","String text = <doubleQuotes46>supervisors signature tom hanks<doubleQuotes46>;<newline46mondego>String[] tokens = text.split(<doubleQuotes46>\\s+<doubleQuotes46>);<newline46mondego>for (String str : tokens)<newline46mondego>{<newline46mondego>    //Do what you need with your tokens here.<newline46mondego>}<newline46mondego>"
"7192splitHere46","9583830splitHere46","... temp.getIndex() != selection ...<newline46mondego>"
"7193splitHere46","9583830splitHere46","else if (selection == size()){<newline46mondego>"
"7194splitHere46","9583830splitHere46","temp.setPrev(null);<newline46mondego>        temp.setNext(null);<newline46mondego>        temp.getPrev().setNext(null);<newline46mondego>"
"7195splitHere46","9583830splitHere46","NullPointerException"
"7196splitHere46","9583857splitHere46","Bitmap.createScaledBitmap()"
"7197splitHere46","9583915splitHere46","CancellationException"
"7198splitHere46","9583915splitHere46","get"
"7199splitHere46","9583915splitHere46","RuntimeException"
"7200splitHere46","9583915splitHere46","invokeAll"
"7201splitHere46","9583938splitHere46","String DATE_PATTERN = <doubleQuotes46>yyyyMMdd kk:mm:ss z Z<doubleQuotes46>;<newline46mondego>SimpleDateFormat dateFormat = new SimpleDateFormat(DATE_PATTERN);<newline46mondego>Date date = dateFormat.parse(dateString.replaceAll(<doubleQuotes46>MSK<doubleQuotes46>, <doubleQuotes46>GMT<doubleQuotes46>));<newline46mondego>"
"7202splitHere46","9584010splitHere46","UploadedFile#getContentType()"
"7203splitHere46","9584010splitHere46","Content-Type"
"7204splitHere46","9584010splitHere46","ExternalContext#getMimeType()"
"7205splitHere46","9584010splitHere46","ServletContext#getMimeType()"
"7206splitHere46","9584010splitHere46","String filename = FilenameUtils.getName(uploadedFile.getName()); // This is available by Commons IO which you should already have.<newline46mondego>String mimetype = FacesContext.getCurrentInstance().getExternalContext().getMimeType(filename);<newline46mondego>// ...<newline46mondego>"
"7207splitHere46","9584010splitHere46","<mime-mapping>"
"7208splitHere46","9584010splitHere46","web.xml"
"7209splitHere46","9584010splitHere46","web.xml"
"7210splitHere46","9584010splitHere46","/conf"
"7211splitHere46","9584010splitHere46","web.xml"
"7212splitHere46","9584010splitHere46","<mime-mapping><newline46mondego>    <extension>xlsx</extension><newline46mondego>    <mime-type>application/vnd.openxmlformats-officedocument.spreadsheetml.sheet</mime-type><newline46mondego></mime-mapping><newline46mondego>"
"7213splitHere46","9584225splitHere46","log4j.category.org.apache.axiom=INFO<newline46mondego>log4j.category.org.apache.axis2=INFO<newline46mondego>"
"7214splitHere46","9584225splitHere46","false"
"7215splitHere46","9584225splitHere46","<log4j:configuration xmlns:log4j=<doubleQuotes46>http://jakarta.apache.org/log4j/<doubleQuotes46>><newline46mondego><newline46mondego><appender name=<doubleQuotes46>FILE<doubleQuotes46> class=<doubleQuotes46>org.apache.log4j.RollingFileAppender<doubleQuotes46>> <newline46mondego>...<newline46mondego></appender> <newline46mondego><newline46mondego><category name=<doubleQuotes46>com.apache.axiom<doubleQuotes46>><newline46mondego>    <priority value=<doubleQuotes46>INFO<doubleQuotes46> /><newline46mondego></category><newline46mondego><newline46mondego><root> <newline46mondego>    <priority value =<doubleQuotes46>DEBUG<doubleQuotes46> /> <newline46mondego>    <appender-ref ref=<doubleQuotes46>FILE<doubleQuotes46> /> <newline46mondego></root><newline46mondego><newline46mondego></log4j:configuration><newline46mondego>"
"7216splitHere46","9584358splitHere46","com.xx.a"
"7217splitHere46","9584358splitHere46","com.xx.a"
"7218splitHere46","9584358splitHere46","javac"
"7219splitHere46","9584469splitHere46","\s+(?=([^<doubleQuotes46>]*<doubleQuotes46>[^<doubleQuotes46>]*<doubleQuotes46>)*[^<doubleQuotes46>]*$)<newline46mondego>"
"7220splitHere46","9584469splitHere46","(this is a test <doubleQuotes46>sentence for the regex<doubleQuotes46> foo bar)<newline46mondego>"
"7221splitHere46","9584469splitHere46","(thisisatest<doubleQuotes46>sentence for the regex<doubleQuotes46>foobar)<newline46mondego>"
"7222splitHere46","9584469splitHere46","\s+(?=((\\[\\<doubleQuotes46>]|[^\\<doubleQuotes46>])*<doubleQuotes46>(\\[\\<doubleQuotes46>]|[^\\<doubleQuotes46>])*<doubleQuotes46>)*(\\[\\<doubleQuotes46>]|[^\\<doubleQuotes46>])*$)<newline46mondego>"
"7223splitHere46","9584469splitHere46","(this is a test <doubleQuotes46>sentence \<doubleQuotes46>for the regex<doubleQuotes46> foo bar)<newline46mondego>"
"7224splitHere46","9584469splitHere46","(thisisatest<doubleQuotes46>sentence \<doubleQuotes46>for the regex<doubleQuotes46>foobar)<newline46mondego>"
"7225splitHere46","9584469splitHere46","(thisisatest<doubleQuotes46>sentence \\\<doubleQuotes46>for the regex<doubleQuotes46>foobar)"
"7226splitHere46","9584469splitHere46","String text = <doubleQuotes46>(this is a test \<doubleQuotes46>sentence \\\<doubleQuotes46>for the regex\<doubleQuotes46> foo bar)<doubleQuotes46>;<newline46mondego>String regex = <doubleQuotes46>\\s+(?=((\\\\[\\\\\<doubleQuotes46>]|[^\\\\\<doubleQuotes46>])*\<doubleQuotes46>(\\\\[\\\\\<doubleQuotes46>]|[^\\\\\<doubleQuotes46>])*\<doubleQuotes46>)*(\\\\[\\\\\<doubleQuotes46>]|[^\\\\\<doubleQuotes46>])*$)<doubleQuotes46>;<newline46mondego>System.out.println(text.replaceAll(regex, <doubleQuotes46><doubleQuotes46>));<newline46mondego><newline46mondego>// output: (thisisatest<doubleQuotes46>sentence \<doubleQuotes46>for the regex<doubleQuotes46>foobar)<newline46mondego>"
"7227splitHere46","9584478splitHere46","Gson gson = new Gson();<newline46mondego>    Type listType = new TypeToken<List<Item>>() {}.getType();<newline46mondego>    List<Item> itemList = gson.fromJson(items, listType);<newline46mondego>"
"7228splitHere46","9584493splitHere46","@Test     <newline46mondego>public void testOtherNumber() {        <newline46mondego>     String result = FizzBuzz.translateNumber(23);<newline46mondego>     assertEquals(<doubleQuotes46>23<doubleQuotes46>, result);<newline46mondego> } <newline46mondego><newline46mondego>@Test     <newline46mondego>public void testMultipleOfThree() {        <newline46mondego>     String result = FizzBuzz.translateNumber(3);<newline46mondego>     assertEquals(<doubleQuotes46>Fizz<doubleQuotes46>, result);<newline46mondego> } <newline46mondego><newline46mondego>@Test     <newline46mondego>public void testMultipleOfFive() {        <newline46mondego>     String result = FizzBuzz.translateNumber(25);<newline46mondego>     assertEquals(<doubleQuotes46>Buzz<doubleQuotes46>, result);<newline46mondego> } <newline46mondego><newline46mondego>@Test     <newline46mondego>public void testMultipleOfFifteen() {        <newline46mondego>     String result = FizzBuzz.translateNumber(45);<newline46mondego>     assertEquals(<doubleQuotes46>FizzBuzz<doubleQuotes46>, result);<newline46mondego> } <newline46mondego>"
"7229splitHere46","9584769splitHere46","String str = <doubleQuotes46>Ø¨Ù‡<doubleQuotes46>;   <newline46mondego>"
"7230splitHere46","9584769splitHere46","public class DetectOrdering{   <newline46mondego>public static boolean hasTrueOrdering()<newline46mondego>{<newline46mondego>    boolean b = false;<newline46mondego>    try {<newline46mondego>        char[] chArr = {65169, 65258};<newline46mondego>        String str = new String(chArr);<newline46mondego>        System.out.println(str);<newline46mondego>        int width = f1.charWidth(chArr[1]) / 2;<newline46mondego>        int height = f1.getHeight();<newline46mondego>        image1 = Image.createImage(width, height);<newline46mondego>        image2 = Image.createImage(width, height);<newline46mondego>        Graphics g1 = image1.getGraphics();<newline46mondego>        Graphics g2 = image2.getGraphics();<newline46mondego>        g1.drawString(str, 0, 0, 0);<newline46mondego>        g2.drawChar(chArr[1], 0, 0, 0);<newline46mondego>        int[] im1 = new int[width * height];<newline46mondego>        int[] im2 = new int[width * height];<newline46mondego><newline46mondego>        image1.getRGB(im1, 0, width, 0, 0, width, height);<newline46mondego>        image2.getRGB(im2, 0, width, 0, 0, width, height);<newline46mondego>        if (areEqualIntArrrays(im1, im2)) {<newline46mondego>            b = true;<newline46mondego>        } else {<newline46mondego>            b = false;<newline46mondego>        }<newline46mondego>    } catch (Exception e) {<newline46mondego>        e.printStackTrace();<newline46mondego>    }<newline46mondego>    return b;<newline46mondego>}<newline46mondego><newline46mondego>private static boolean areEqualIntArrrays(int[] i1, int[] i2) {<newline46mondego>    if (i1.length != i2.length) {<newline46mondego>        return false;<newline46mondego>    } else {<newline46mondego>        for (int i = 0; i < i1.length; i++) {<newline46mondego>            if (i1[i] != i2[i]) {<newline46mondego>                return false;<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>    return true;<newline46mondego>}<newline46mondego>}    <newline46mondego>"
"7231splitHere46","9584979splitHere46","+-- pom.xml (war packaging)<newline46mondego>  +-- src/main/java (java Sources)<newline46mondego>  +-- src/main/webapp (jsp pages etc.)<newline46mondego>  +-- src/main/resources (language bundles etc.)<newline46mondego>"
"7232splitHere46","9584979splitHere46","root<newline46mondego>  +-- pom.xml (parent of all)<newline46mondego>  +-- mod-war (incl. pom.xml)<newline46mondego>  +-- mod-1 (incl. pom.xml)<newline46mondego>  +-- mod-2 (incl. pom.xml)<newline46mondego>"
"7233splitHere46","9585038splitHere46","fatherName = rs.getString(<doubleQuotes46>FATHERNAME<doubleQuotes46>);"
"7234splitHere46","9585112splitHere46","private Module[] modules = new Module[6]; // initialize"
"7235splitHere46","9585112splitHere46","Module"
"7236splitHere46","9585112splitHere46","String"
"7237splitHere46","9585112splitHere46","public void addModule(Module newModule, int index){<newline46mondego>    this.modules[index] = newModule; // put the instance in the correct bucket<newline46mondego>}<newline46mondego>"
"7238splitHere46","9585112splitHere46","addModule"
"7239splitHere46","9585112splitHere46","addModule"
"7240splitHere46","9585112splitHere46","newModule"
"7241splitHere46","9585112splitHere46","CourseYear courseYear = new CourseYear(); // create a courseyear<newline46mondego>courseYear.addModule(new Module(), 0); // create a module and add it at index 0<newline46mondego>courseYear.addModule(new Module(), 1); // create a module and add it at index 1<newline46mondego>...<newline46mondego>"
"7242splitHere46","9585112splitHere46","addModule"
"7243splitHere46","9585112splitHere46","CourseYear"
"7244splitHere46","9585112splitHere46","public CourseYear(){<newline46mondego>    this.addModule(new Module(), 0); // create a module and add it at index 0<newline46mondego>    this.addModule(new Module(), 1); // create a module and add it at index 1<newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"7245splitHere46","9585112splitHere46","getModule"
"7246splitHere46","9585156splitHere46","Cipher"
"7247splitHere46","9585156splitHere46","Cipher cipher = Cipher.getInstance(<doubleQuotes46>AES/CBC/PKCS5Padding<doubleQuotes46>);<newline46mondego>"
"7248splitHere46","9585156splitHere46","Cipher"
"7249splitHere46","9585156splitHere46","cipher.getIV()"
"7250splitHere46","9585339splitHere46","Cursor contactCursor = getContentResolver().query(ContactsContract.CommonDataKinds.Phone.CONTENT_URI, null,<newline46mondego>                null, null, null);<newline46mondego>contactCursor.moveToFirst();<newline46mondego>do {<newline46mondego>            String num = contactCursor.getString(contactCursor<newline46mondego>                    .getColumnIndex(CommonDataKinds.Phone.NUMBER));<newline46mondego>            acontactslist.add(num);<newline46mondego>            }<newline46mondego>        } while (contactCursor.moveToNext());<newline46mondego><newline46mondego>phonenumber.setAdapter(acontactslist);<newline46mondego>"
"7251splitHere46","9585418splitHere46","interface Collection<E> { <newline46mondego>  public boolean remove(E e);  // not really<newline46mondego>  public void removeAll(Collection<? extends E> c);  // not really<newline46mondego>}<newline46mondego>"
"7252splitHere46","9585418splitHere46","interface Collection<E> { <newline46mondego>  public boolean remove(Object o);  <newline46mondego>  public void removeAll(Collection<?> c);<newline46mondego>}<newline46mondego>"
"7253splitHere46","9585418splitHere46","Collection<? extends E>"
"7254splitHere46","9585418splitHere46","// a collection of Integers<newline46mondego>Collection c = new HashSet();<newline46mondego>// a collection of Objects<newline46mondego>Collection r = new HashSet();<newline46mondego>c.removeAll(r);<newline46mondego>"
"7255splitHere46","9585418splitHere46","Collection<Integer>"
"7256splitHere46","9585418splitHere46","Collection<Object>"
"7257splitHere46","9585418splitHere46","Collection<? extends E>"
"7258splitHere46","9585599splitHere46","ArrayList.contains"
"7259splitHere46","9585599splitHere46","hashCode"
"7260splitHere46","9585599splitHere46","equals"
"7261splitHere46","9585841splitHere46","public class YourClass {<newline46mondego><newline46mondego>public CountDownTimer timer = null;<newline46mondego><newline46mondego>...<newline46mondego>timer = new CountDownTimer(11000, 1000) {<newline46mondego><newline46mondego>         public void onTick(long millisUntilFinished) {<newline46mondego>            clock.setText(<doubleQuotes46>Seconds Remaining: <doubleQuotes46> + millisUntilFinished / 1000);<newline46mondego>            secsrem = (int) millisUntilFinished / 1000;<newline46mondego>         }<newline46mondego><newline46mondego>         public void onFinish() {<newline46mondego>             //...}<newline46mondego>      }<newline46mondego><newline46mondego>timer.start();<newline46mondego>...<newline46mondego>"
"7262splitHere46","9585841splitHere46","timer.onFinish();<newline46mondego>"
"7263splitHere46","9585841splitHere46","onFinish"
"7264splitHere46","9585841splitHere46","timer.cancel();<newline46mondego>"
"7265splitHere46","9585860splitHere46","Pair.avsc"
"7266splitHere46","9585860splitHere46","...<newline46mondego>  <doubleQuotes46>namespace<doubleQuotes46>: <doubleQuotes46>org.sooo<doubleQuotes46>,<newline46mondego>...<newline46mondego>"
"7267splitHere46","9585867splitHere46","public class HRPerson {<newline46mondego>    public String firstName;<newline46mondego>    public String lastName;<newline46mondego>    public String email;<newline46mondego>    public int salary;<newline46mondego>}<newline46mondego>"
"7268splitHere46","9585867splitHere46","query = <doubleQuotes46>SELECT first_name, last_name, email, salary FROM HR.Employees where rownum < 6<doubleQuotes46>;<newline46mondego>rset = stmt.executeQuery(query);<newline46mondego>List<HRPerson> returnHRdata = new ArrayList<HRPerson>();<newline46mondego>while (rset.next()) {<newline46mondego>   HRPerson person = new HRPerson();<newline46mondego>   person.firstName = rset.getString(<doubleQuotes46>first_name<doubleQuotes46>);<newline46mondego>   person.lastName  = rset.getString(<doubleQuotes46>last_name<doubleQuotes46>);<newline46mondego>   person.email     = rset.getString(<doubleQuotes46>email<doubleQuotes46>);<newline46mondego>   person.salary    = rset.getInt(<doubleQuotes46>salary<doubleQuotes46>);<newline46mondego>   returnHRdata.add(person);<newline46mondego>}<newline46mondego>"
"7269splitHere46","9585911splitHere46","Try editing /etc/sysconfig/rngd to contain:<newline46mondego><newline46mondego># Add extra options here<newline46mondego>EXTRAOPTIONS=<doubleQuotes46>-r /dev/urandom<doubleQuotes46><newline46mondego><newline46mondego>Then <doubleQuotes46>service rngd start<doubleQuotes46>. If that works, then <doubleQuotes46>chkconfig rngd on<doubleQuotes46> will start it at boot.<newline46mondego>"
"7270splitHere46","9585920splitHere46","public ArrayList<String> getLinks() {<newline46mondego><newline46mondego>    String link = <doubleQuotes46><doubleQuotes46>;<newline46mondego><newline46mondego>    for(int i = 0; i<url.length()-6; i++) {<newline46mondego>        if(url.charAt(i) == 'h' && url.charAt(i+1) == 'r') {<newline46mondego>            for(int k = i; k<url.length();k++ ){<newline46mondego>                if(url.charAt(k) == '>'){<newline46mondego>                    link = url.substring(i+6,k-1);<newline46mondego>                    links.add(link);<newline46mondego>                    // Break the loop <newline46mondego>                    k = url.length();<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>    return links;<newline46mondego>"
"7271splitHere46","9585924splitHere46","Pattern p = Pattern.compile(myPattern,Pattern.DOTALL);<newline46mondego>"
"7272splitHere46","9586403splitHere46","Employee"
"7273splitHere46","9586403splitHere46","Person"
"7274splitHere46","9586403splitHere46","Person"
"7275splitHere46","9586403splitHere46","super()"
"7276splitHere46","9586403splitHere46","Employee"
"7277splitHere46","9586403splitHere46","class Employee extends Person {<newline46mondego>     Employee(int id) {<newline46mondego>         super();          // implicitly added by the compiler.<newline46mondego>     }<newline46mondego> }<newline46mondego>"
"7278splitHere46","9586403splitHere46","Person"
"7279splitHere46","9586403splitHere46","class Employee extends Person {<newline46mondego>     Employee(int id) {<newline46mondego>         super(id);<newline46mondego>     }<newline46mondego> }<newline46mondego>"
"7280splitHere46","9586403splitHere46","Person"
"7281splitHere46","9586403splitHere46","class Person {<newline46mondego>    Person() {<newline46mondego>    }<newline46mondego><newline46mondego>    Person(int a) {<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7282splitHere46","9586416splitHere46","shell.redraw();"
"7283splitHere46","9586416splitHere46","shell.print(gc)"
"7284splitHere46","9586619splitHere46","Preferences"
"7285splitHere46","9586778splitHere46","combinations(s.substring(i), prfx + s.charAt(i), n-1);<newline46mondego>               ^^^^^^^^^^^^^^<newline46mondego>"
"7286splitHere46","9586778splitHere46","i"
"7287splitHere46","9586778splitHere46","combinations(<doubleQuotes46>b<doubleQuotes46>, <doubleQuotes46><doubleQuotes46> + <doubleQuotes46>b<doubleQuotes46>, 1)"
"7288splitHere46","9586778splitHere46","combinations(<doubleQuotes46>ab<doubleQuotes46>, <doubleQuotes46><doubleQuotes46> + <doubleQuotes46>b<doubleQuotes46>, 1)"
"7289splitHere46","9586778splitHere46","combinations(s, prfx + s.charAt(i), n-1);<newline46mondego>"
"7290splitHere46","9586973splitHere46","b.transfer (id,r.nextInt(max),r.nextInt(100));<newline46mondego>"
"7291splitHere46","9586973splitHere46","b"
"7292splitHere46","9586973splitHere46","r"
"7293splitHere46","9586973splitHere46","null"
"7294splitHere46","9586973splitHere46","assert"
"7295splitHere46","9586973splitHere46","id"
"7296splitHere46","9586973splitHere46","max"
"7297splitHere46","9586973splitHere46","Integer"
"7298splitHere46","9586973splitHere46","null"
"7299splitHere46","9586973splitHere46","n_operations"
"7300splitHere46","9586973splitHere46","n_operations"
"7301splitHere46","9586973splitHere46","for (int i=0;i<100;i++){<newline46mondego>    try {<newline46mondego>        t[i].join();<newline46mondego>    } catch(Exception e){;}<newline46mondego>}<newline46mondego>"
"7302splitHere46","9586973splitHere46","for (int i = 0; i < t.length; i++) {<newline46mondego>"
"7303splitHere46","9586973splitHere46","} catch(Exception e){ e.printStackTrace(); }<newline46mondego>"
"7304splitHere46","9587041splitHere46","entity-name=<doubleQuotes46>HistoricalSession<doubleQuotes46><newline46mondego>"
"7305splitHere46","9587041splitHere46","saveOrUpdate(<doubleQuotes46>HistoricalSession<doubleQuotes46>,session);<newline46mondego>"
"7306splitHere46","9587114splitHere46","printf"
"7307splitHere46","9587114splitHere46","\n"
"7308splitHere46","9587114splitHere46","\n"
"7309splitHere46","9587114splitHere46","%n"
"7310splitHere46","9587114splitHere46","printf"
"7311splitHere46","9587349splitHere46","Sets.newHashSet(multiMap.values());<newline46mondego>"
"7312splitHere46","9587349splitHere46","ImmutableSet.copyOf(multiMap.values());<newline46mondego>"
"7313splitHere46","9587541splitHere46","// command invokes db2 command window, sets current instance and issues list db command<newline46mondego> String command = <doubleQuotes46>db2cmd /c /w /i \<doubleQuotes46>set DB2INSTANCE=<doubleQuotes46>+instance+<doubleQuotes46> & db2 list db directory\<doubleQuotes46><doubleQuotes46>;<newline46mondego>"
"7314splitHere46","9587546splitHere46","<project name=<doubleQuotes46>Your Project<doubleQuotes46>><newline46mondego>    <include file=<doubleQuotes46>my_clspath.xml<doubleQuotes46> /><newline46mondego><newline46mondego>    <ant antfile=<doubleQuotes46>sub1.xml<doubleQuotes46> inheritAll=<doubleQuotes46>true<doubleQuotes46> inheritRefs=<doubleQuotes46>true<doubleQuotes46> /><newline46mondego></project><newline46mondego>"
"7315splitHere46","9587546splitHere46","id"
"7316splitHere46","9587546splitHere46","<fileset dir=<doubleQuotes46>../myApp_Ear/build/<doubleQuotes46> id=<doubleQuotes46>my.EAR.fileset<doubleQuotes46>><newline46mondego>    <include name=<doubleQuotes46>**/*.jar<doubleQuotes46> /><newline46mondego></fileset><newline46mondego>"
"7317splitHere46","9587546splitHere46","sub1.xml"
"7318splitHere46","9587546splitHere46","<fileset refid=<doubleQuotes46>my.EAR.fileset<doubleQuotes46> />"
"7319splitHere46","9587661splitHere46","ObservableList<Text> items = FXCollections.<Text>observableArrayList();<newline46mondego><newline46mondego>items.add(TextBuilder.create().text(<doubleQuotes46>BOLD<doubleQuotes46>).style(<doubleQuotes46>-fx-font-weight:bold;<doubleQuotes46>).build());<newline46mondego>// or you can aggregate similar styles in stylesheet and use classname:<newline46mondego>items.add(TextBuilder.create().text(<doubleQuotes46>BOLD2<doubleQuotes46>).styleClass(<doubleQuotes46>myClassBoldText<doubleQuotes46>).build());<newline46mondego>items.add(new Text(<doubleQuotes46>regular<doubleQuotes46>));<newline46mondego><newline46mondego>list.setItems(items);<newline46mondego>"
"7320splitHere46","9587708splitHere46","static byte[] intToBytesBigEndian(int i) {<newline46mondego>  return new byte[] {<newline46mondego>    (byte) ((i >>> 24) & 0xff),<newline46mondego>    (byte) ((i >>> 16) & 0xff),<newline46mondego>    (byte) ((i >>> 8) & 0xff),<newline46mondego>    (byte) (i & 0xff),<newline46mondego>  };<newline46mondego>}<newline46mondego>"
"7321splitHere46","9587709splitHere46","BlockingQueue"
"7322splitHere46","9587709splitHere46","LinkedBlockingQueue"
"7323splitHere46","9587709splitHere46","// allow only 10 outstanding objects to be in the work queue before it blocks<newline46mondego>queue1 = new LinkedBlockingQueue<SourceObject>(10);<newline46mondego>new Thread(new TargetDatabaseThread(<doubleQuotes46>url-to-database1<doubleQuotes46>, queue1)).start();<newline46mondego>queue2 = new LinkedBlockingQueue<SourceObject>(10);<newline46mondego>new Thread(new TargetDatabaseThread(<doubleQuotes46>url-to-database2<doubleQuotes46>, queue2)).start();<newline46mondego>queue3 = new LinkedBlockingQueue<SourceObject>(10);<newline46mondego>new Thread(new TargetDatabaseThread(<doubleQuotes46>url-to-database3<doubleQuotes46>, queue3)).start();<newline46mondego>while (true) {<newline46mondego>    SourceObject sourceObj = getFromSourceDatabase();<newline46mondego>    // this might block if you set a capacity on your queue and it was full<newline46mondego>    queue1.put(sourceObj);<newline46mondego>    queue2.put(sourceObj);<newline46mondego>    queue3.put(sourceObj);<newline46mondego>}<newline46mondego>"
"7324splitHere46","9587709splitHere46","public class TargetDatabaseThread implements Runnable {<newline46mondego>    private final String jdbcUrl;<newline46mondego>    private final BlockingQueue queue;<newline46mondego>    private volatile boolean shutdown;<newline46mondego>    public TargetDatabaseThread(String jdbcUrl, BlockingQueue queue) {<newline46mondego>        this.jdbcUrl = jdbcUrl;<newline46mondego>        this.queue = queue;<newline46mondego>    }<newline46mondego>    public void run() {<newline46mondego>        // maybe some initialization, make database connection, etc.<newline46mondego>        while (!shutdown) {<newline46mondego>            // this would block if nothing is in the queue<newline46mondego>            SourceObject sourceObj = queue.take();<newline46mondego>            SourceObject targetObj =<newline46mondego>                getObjectFromTargetDatabase(sourceObj.getId());<newline46mondego>            if (updateTarget(sourceObj, targetObj)) {<newline46mondego>               updateMyTargetObjectInDatabase(targetObj);<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7325splitHere46","9587726splitHere46","TimeUnit.SECONDS.sleep(x)"
"7326splitHere46","9587726splitHere46","Thread.sleep"
"7327splitHere46","9587726splitHere46","Thread.sleep(180000)"
"7328splitHere46","9587726splitHere46","TimeUnit.MINUTES.sleep(3)"
"7329splitHere46","9587726splitHere46","sleep()"
"7330splitHere46","9587726splitHere46","public void sleep(long timeout) throws InterruptedException {<newline46mondego>    if (timeout > 0) {<newline46mondego>        long ms = toMillis(timeout);<newline46mondego>        int ns = excessNanos(timeout, ms);<newline46mondego>        Thread.sleep(ms, ns);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7331splitHere46","9587848splitHere46","BufferedImage"
"7332splitHere46","9587848splitHere46","Graphics"
"7333splitHere46","9587887splitHere46","0"
"7334splitHere46","9588008splitHere46","Swing JComponents"
"7335splitHere46","9588008splitHere46","AWT Components"
"7336splitHere46","9588008splitHere46","Swing JComponents"
"7337splitHere46","9588147splitHere46","InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);<newline46mondego>imm.toggleSoftInput(InputMethodManager.SHOW_FORCED,0);<newline46mondego>"
"7338splitHere46","9588279splitHere46","parsedExampleDataSet.getView()"
"7339splitHere46","9588368splitHere46","fieldValue.getClass().getName().contains(<doubleQuotes46>org.rhq<doubleQuotes46>)"
"7340splitHere46","9588368splitHere46","// Before returning your response, invoke the next line on your object<newline46mondego>HibernateDetachUtility.nullOutUninitializedFields(your_object_here, SerializationType.SERIALIZATION);<newline46mondego>// Your object is now safe to be returned to the GWT client<newline46mondego>"
"7341splitHere46","9588451splitHere46","@XmlRootElement"
"7342splitHere46","9588451splitHere46","@XmlTransient"
"7343splitHere46","9588451splitHere46","@XmlElement(type=BarImpl.class)"
"7344splitHere46","9588451splitHere46","bar"
"7345splitHere46","9588451splitHere46","import javax.xml.bind.annotation.XmlElement;<newline46mondego>import javax.xml.bind.annotation.XmlElements;<newline46mondego>import javax.xml.bind.annotation.XmlRootElement;<newline46mondego>import javax.xml.bind.annotation.XmlTransient;<newline46mondego><newline46mondego>import org.junit.Test;<newline46mondego><newline46mondego><newline46mondego>public class JAXBTest {<newline46mondego><newline46mondego>    @Test<newline46mondego>    public void test() throws javax.xml.bind.JAXBException {<newline46mondego>        String xml = <newline46mondego>            <doubleQuotes46><foo><doubleQuotes46> +<newline46mondego>            <doubleQuotes46>  <bar><doubleQuotes46> +<newline46mondego>            <doubleQuotes46>    <baz>qux</baz><doubleQuotes46> +<newline46mondego>            <doubleQuotes46>  </bar><doubleQuotes46> +<newline46mondego>            <doubleQuotes46></foo><doubleQuotes46>;<newline46mondego><newline46mondego>        javax.xml.bind.JAXBContext context = javax.xml.bind.JAXBContext.newInstance(<newline46mondego>                FooImpl.class,<newline46mondego>                BarImpl.class<newline46mondego>        );<newline46mondego><newline46mondego>        javax.xml.bind.Unmarshaller unmarshaller = context.createUnmarshaller();<newline46mondego><newline46mondego>        unmarshaller.unmarshal(new java.io.StringReader(xml));<newline46mondego>    }<newline46mondego><newline46mondego>    @XmlTransient<newline46mondego>    public static abstract class Foo {<newline46mondego>        @XmlElements({<newline46mondego>            @XmlElement(name=<doubleQuotes46>bar<doubleQuotes46>,type=BarImpl.class),<newline46mondego>            @XmlElement(name=<doubleQuotes46>bar<doubleQuotes46>,type=BarImpl2.class),<newline46mondego>        })<newline46mondego>        Bar bar;<newline46mondego>    }<newline46mondego><newline46mondego>    @XmlTransient<newline46mondego>    public static abstract class Bar {<newline46mondego>        @XmlElement(name=<doubleQuotes46>baz<doubleQuotes46>)<newline46mondego>        String baz;<newline46mondego>    }<newline46mondego><newline46mondego>    @XmlRootElement(name=<doubleQuotes46>foo<doubleQuotes46>)<newline46mondego>    public static class FooImpl extends Foo { }<newline46mondego><newline46mondego>    @XmlRootElement(name=<doubleQuotes46>bar<doubleQuotes46>)<newline46mondego>    public static class BarImpl extends Bar { }<newline46mondego><newline46mondego>    public static class BarImpl2 extends Bar { }<newline46mondego>}<newline46mondego>"
"7346splitHere46","9588458splitHere46","char[] myBuffer = new char[512];<newline46mondego>int bytesRead = 0;<newline46mondego>BufferedReader in = new BufferedReader(new FileReader(<doubleQuotes46>foo.txt<doubleQuotes46>));<newline46mondego>while ((bytesRead = in.read(myBuffer,0,512)) != -1)<newline46mondego>{<newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"7347splitHere46","9588508splitHere46","QueryRunner queryRunner = new QueryRunner(dataSource);<newline46mondego>ResultSetHandler<List<Student>> resultSetHandler = new BeanListHandler<Student>(Student.class);<newline46mondego>List<Student> studentList = queryRunner.query(<doubleQuotes46>SELECT student_id, student_name FROM tbl_student<doubleQuotes46>, resultSetHandler);<newline46mondego>"
"7348splitHere46","9588593splitHere46","s = s.replace(<doubleQuotes46>[<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>).replace(<doubleQuotes46>]<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>String[] split = s.split(<doubleQuotes46>,<doubleQuotes46>);<newline46mondego>List<String> list = Arrays.asList(split);<newline46mondego>"
"7349splitHere46","9588657splitHere46","Class.forName(<doubleQuotes46>com.mysql.jdbc.Driver<doubleQuotes46>);<newline46mondego>"
"7350splitHere46","9588696splitHere46","int index = string.indexOf('\'');<newline46mondego>return index == -1 ? string : string.substring(0, index);<newline46mondego>"
"7351splitHere46","9588785splitHere46","if (input.hasNextInt()) {<newline46mondego>  System.out.println(<doubleQuotes46>You Entered A Number <doubleQuotes46> + input.nextInt());<newline46mondego>} else if (input.hasNext(<doubleQuotes46>\\w<doubleQuotes46>)) {<newline46mondego>  System.out.println(<doubleQuotes46>You Entered An Alphabet <doubleQuotes46> + input.next());<newline46mondego>} else {<newline46mondego>  System.out.println(<doubleQuotes46>You Enter A Special Character<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"7352splitHere46","9588886splitHere46","while ( rs.next() ) {<newline46mondego>"
"7353splitHere46","9588886splitHere46","NullPointerException"
"7354splitHere46","9588886splitHere46","rs"
"7355splitHere46","9588886splitHere46","null"
"7356splitHere46","9588886splitHere46","rs"
"7357splitHere46","9588886splitHere46","ResultSet rs = con.stmt.executeQuery(...);<newline46mondego>"
"7358splitHere46","9588886splitHere46","rs"
"7359splitHere46","9588886splitHere46","Statement"
"7360splitHere46","9588886splitHere46","Connector"
"7361splitHere46","9588886splitHere46","select * from login ..."
"7362splitHere46","9588886splitHere46","Statement st = con.con.createStatement();<newline46mondego>ResultSet rs = st.executeQuery(<doubleQuotes46>SELECT StudentID, date from ...<doubleQuotes46>);<newline46mondego>while (rs.hasNext()) {<newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"7363splitHere46","9588886splitHere46","Statement"
"7364splitHere46","9588886splitHere46","ResultSet"
"7365splitHere46","9588886splitHere46","close()"
"7366splitHere46","9588886splitHere46","finally"
"7367splitHere46","9588972splitHere46","BufferedReader"
"7368splitHere46","9588972splitHere46","InputStream"
"7369splitHere46","9588972splitHere46","OutputStream"
"7370splitHere46","9588972splitHere46","Reader"
"7371splitHere46","9588972splitHere46","Writer"
"7372splitHere46","9588972splitHere46","Reader"
"7373splitHere46","9588993splitHere46","HashMap<String, Object>"
"7374splitHere46","9588993splitHere46","Map<String, Object>"
"7375splitHere46","9588993splitHere46","Map<String, Object>"
"7376splitHere46","9588993splitHere46","HashMap<String, Object>"
"7377splitHere46","9588993splitHere46","Map"
"7378splitHere46","9588993splitHere46","HashMap"
"7379splitHere46","9588993splitHere46","Map"
"7380splitHere46","9588993splitHere46","LinkedHashMap"
"7381splitHere46","9588993splitHere46","Map"
"7382splitHere46","9588993splitHere46","HashMap"
"7383splitHere46","9588993splitHere46","Map"
"7384splitHere46","9589153splitHere46","BufferedReader()"
"7385splitHere46","9589153splitHere46","readLine()"
"7386splitHere46","9589153splitHere46","BufferedReader br = new BufferedReader(new FileReader(<doubleQuotes46>Customers.txt<doubleQuotes46>));<newline46mondego>String line;<newline46mondego><newline46mondego>while ((line = br.readLine()) != null)<newline46mondego>{<newline46mondego>    ...<newline46mondego>}<newline46mondego><newline46mondego>br.close();<newline46mondego>"
"7387splitHere46","9589153splitHere46","WriteToFile()"
"7388splitHere46","9589153splitHere46","while"
"7389splitHere46","9589153splitHere46","S"
"7390splitHere46","9589153splitHere46","static"
"7391splitHere46","9589153splitHere46","String"
"7392splitHere46","9589153splitHere46","setNewCustomer()"
"7393splitHere46","9589153splitHere46","WriteToFile()"
"7394splitHere46","9589153splitHere46","NEWLINE"
"7395splitHere46","9589153splitHere46","BufferedWriter"
"7396splitHere46","9589153splitHere46","newLine()"
"7397splitHere46","9589219splitHere46","JPanel cards"
"7398splitHere46","9589219splitHere46","CardLayoutLoginTest"
"7399splitHere46","9589219splitHere46","JPanel"
"7400splitHere46","9589219splitHere46","Cards"
"7401splitHere46","9589219splitHere46","CardLayout"
"7402splitHere46","9589219splitHere46","setLocationRelativeTo(null);"
"7403splitHere46","9589219splitHere46","import java.awt.*;<newline46mondego>import java.awt.event.*;<newline46mondego>import javax.swing.*;<newline46mondego><newline46mondego>public class CardTest<newline46mondego>{   <newline46mondego>    private JFrame frame;<newline46mondego>    public static final String CARD_LOGIN =  <doubleQuotes46>Card Login<doubleQuotes46>; <newline46mondego>    public static final String CARD_WELCOME = <doubleQuotes46>Card Welcome<doubleQuotes46>;<newline46mondego>    public static JPanel cards;<newline46mondego>    public CardLogin cardLogin = null;<newline46mondego><newline46mondego>    public CardTest()<newline46mondego>    {<newline46mondego>        frame = new JFrame(<doubleQuotes46>Card LOGIN<doubleQuotes46>);<newline46mondego>        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        frame.setLocationByPlatform(true);<newline46mondego><newline46mondego>        cards = new JPanel();<newline46mondego>        cards.setLayout(new CardLayout(20, 20));<newline46mondego><newline46mondego>        cardLogin = new CardLogin(this);<newline46mondego>        cards.add(cardLogin, CARD_LOGIN);       <newline46mondego><newline46mondego>        frame.getContentPane().add(cards);<newline46mondego>        frame.pack();<newline46mondego>        frame.setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>    public void swapView(String key) <newline46mondego>    {<newline46mondego>        CardLayout cardLayout = (CardLayout) cards.getLayout();<newline46mondego>        cardLayout.show(cards, key);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String... args)<newline46mondego>    {<newline46mondego>        SwingUtilities.invokeLater(new Runnable()<newline46mondego>        {<newline46mondego>            public void run()<newline46mondego>            {<newline46mondego>                new CardTest();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class CardLogin extends JPanel <newline46mondego>{ <newline46mondego>    private ActionListener action; <newline46mondego>    CardTest cardLayoutLoginTest;<newline46mondego>    /*<newline46mondego>     *  Made JTextField an instance variable so that<newline46mondego>     * ActionListener can access it or you can make <newline46mondego>     * it final.<newline46mondego>     */<newline46mondego>    private JTextField tfUsername= null; <newline46mondego>    private String username = null;<newline46mondego><newline46mondego>    public CardLogin(CardTest cardLayoutLoginTest) <newline46mondego>    { <newline46mondego>        this.cardLayoutLoginTest = cardLayoutLoginTest;<newline46mondego>        init(); <newline46mondego>    } <newline46mondego><newline46mondego>    private void init() <newline46mondego>    { <newline46mondego><newline46mondego>        JPanel panel = new JPanel(new GridBagLayout());<newline46mondego>        GridBagConstraints gc = new GridBagConstraints();<newline46mondego><newline46mondego>        gc.fill = GridBagConstraints.HORIZONTAL;<newline46mondego><newline46mondego>        JLabel lbUsername = new JLabel(<doubleQuotes46>Username: <doubleQuotes46>);<newline46mondego>        gc.gridx = 0;<newline46mondego>        gc.gridy = 0;<newline46mondego>        gc.gridwidth = 1;<newline46mondego>        panel.add(lbUsername, gc);<newline46mondego><newline46mondego>        tfUsername = new JTextField(20);<newline46mondego>        gc.gridx = 1;<newline46mondego>        gc.gridy = 0;<newline46mondego>        gc.gridwidth = 2;<newline46mondego>        panel.add(tfUsername, gc);<newline46mondego><newline46mondego>        JLabel lbPassword = new JLabel(<doubleQuotes46>Password: <doubleQuotes46>);<newline46mondego>        gc.gridx = 0;<newline46mondego>        gc.gridy = 1;<newline46mondego>        gc.gridwidth = 1;<newline46mondego>        panel.add(lbPassword, gc);<newline46mondego><newline46mondego>        JPasswordField pfPassword = new JPasswordField(20);<newline46mondego>        gc.gridx = 1;<newline46mondego>        gc.gridy = 1;<newline46mondego>        gc.gridwidth = 2;<newline46mondego>        panel.add(pfPassword, gc);<newline46mondego><newline46mondego>        final JButton loginButton = new JButton(<doubleQuotes46>Login<doubleQuotes46>); <newline46mondego><newline46mondego>        action = new ActionListener() <newline46mondego>        { <newline46mondego>            public void actionPerformed(ActionEvent ae) <newline46mondego>            {<newline46mondego><newline46mondego>                    // Here need code to update text filed of welcome card<newline46mondego>                /*<newline46mondego>                 * Here we are first checking if there is any text inside<newline46mondego>                 * the JTextField for USERNAME, if found we will send it to the<newline46mondego>                 * next JPanel which will be serving as a new Card.<newline46mondego>                 */ <newline46mondego>                if (tfUsername.getDocument().getLength() > 0)   <newline46mondego>                {<newline46mondego>                    username = tfUsername.getText();<newline46mondego>                    CardWelcome cardWelcome = new CardWelcome(cardLayoutLoginTest.cardLogin);<newline46mondego>                    CardTest.cards.add(cardWelcome, cardLayoutLoginTest.CARD_WELCOME);<newline46mondego>                    cardLayoutLoginTest.swapView(cardLayoutLoginTest.CARD_WELCOME);<newline46mondego>                }<newline46mondego>            } <newline46mondego>        }; <newline46mondego><newline46mondego>        loginButton.addActionListener(action); <newline46mondego><newline46mondego>        JPanel bp = new JPanel();<newline46mondego>        bp.add(loginButton);<newline46mondego><newline46mondego>        /*set size of the frame*/<newline46mondego>        setSize( 640, 480);<newline46mondego><newline46mondego>        add(panel, BorderLayout.CENTER);<newline46mondego>        add(bp, BorderLayout.PAGE_END);<newline46mondego><newline46mondego>    } <newline46mondego><newline46mondego>    public String getUserName()<newline46mondego>    {<newline46mondego>        return username;<newline46mondego>    }<newline46mondego>} <newline46mondego><newline46mondego>class CardWelcome extends JPanel <newline46mondego>{ <newline46mondego>    private JTextField textField;<newline46mondego>    private CardLogin cardLogin;<newline46mondego><newline46mondego>    public CardWelcome(CardLogin cl) <newline46mondego>    { <newline46mondego>        cardLogin = cl;<newline46mondego>        init(); <newline46mondego>    } <newline46mondego><newline46mondego>    private void init() <newline46mondego>    { <newline46mondego>        setLayout(new GridLayout(1, 1)); <newline46mondego>        JLabel userLabel = new JLabel(<doubleQuotes46>Welcome <doubleQuotes46>); <newline46mondego>        textField = new JTextField(); <newline46mondego>        textField.setText(cardLogin.getUserName());<newline46mondego>        System.out.println(<doubleQuotes46>UserName : <doubleQuotes46> + cardLogin.getUserName());<newline46mondego><newline46mondego>        add(userLabel); <newline46mondego>        add(textField); <newline46mondego>    } <newline46mondego>}<newline46mondego>"
"7404splitHere46","9589219splitHere46","JLabel"
"7405splitHere46","9589219splitHere46","import java.awt.*;<newline46mondego>import java.awt.event.*;<newline46mondego>import javax.swing.*;<newline46mondego><newline46mondego>public class UpdateLabel extends JFrame<newline46mondego>{<newline46mondego>    private int count = 0;<newline46mondego>    public UpdateLabel()<newline46mondego>    {<newline46mondego>        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        setLocationByPlatform(true);<newline46mondego><newline46mondego>        final JPanel contentPane = new JPanel();<newline46mondego>        contentPane.setLayout(new BorderLayout());<newline46mondego><newline46mondego>        final JLabel label = new JLabel(<doubleQuotes46>JLabel <doubleQuotes46> + count);<newline46mondego>        JButton button = new JButton(<doubleQuotes46>UPDATE JLABEL<doubleQuotes46>);<newline46mondego>        button.addActionListener(new ActionListener()<newline46mondego>        {<newline46mondego>            public void actionPerformed(ActionEvent ae)<newline46mondego>            {<newline46mondego>                count++;<newline46mondego>                label.setText(<doubleQuotes46>JLabel <doubleQuotes46> + count);<newline46mondego>                contentPane.revalidate(); // sometimes you require to do this and the below line.<newline46mondego>                contentPane.repaint();<newline46mondego>            }<newline46mondego>        });<newline46mondego><newline46mondego>        contentPane.add(label, BorderLayout.CENTER);<newline46mondego>        contentPane.add(button, BorderLayout.PAGE_END);<newline46mondego><newline46mondego>        setContentPane(contentPane);<newline46mondego>        pack();<newline46mondego>        setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String... args)<newline46mondego>    {<newline46mondego>        Runnable runnable = new Runnable()<newline46mondego>        {<newline46mondego>            public void run()<newline46mondego>            {<newline46mondego>                new UpdateLabel();<newline46mondego>            }<newline46mondego>        };<newline46mondego>        SwingUtilities.invokeLater(runnable);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7406splitHere46","9589346splitHere46","getPreferredSize()"
"7407splitHere46","9589346splitHere46","public class CardDisplay extends JComponent {<newline46mondego>    private BufferedImage cardImage;<newline46mondego><newline46mondego>    public CardDisplay() {<newline46mondego>        try {<newline46mondego>            cardImage = ImageIO.read(new File(<doubleQuotes46>Phase10//res//Blue2.png<doubleQuotes46>));<newline46mondego>        } catch (final IOException e) {<newline46mondego>            e.printStackTrace();<newline46mondego>        }    <newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void paintComponent(final Graphics g) {<newline46mondego>        super.paintComponent(g);<newline46mondego>        g.drawImage(cardImage, 0, 0, null);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Dimension getPreferredSize() {<newline46mondego>        if (cardImage == null) {<newline46mondego>            return new Dimension(100, 100);<newline46mondego>        } else {<newline46mondego>            return new Dimension(cardImage.getWidth(null), cardImage.getHeight(null));<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public static class View {<newline46mondego>        public View() {}<newline46mondego><newline46mondego>        public void makeFrame() {<newline46mondego>            final JFrame frame = new JFrame(<doubleQuotes46>Phase 10<doubleQuotes46>);<newline46mondego>            frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>            frame.setLayout(new BorderLayout());<newline46mondego>            final JPanel handPanel = new JPanel();<newline46mondego>            final CardDisplay cd = new CardDisplay();<newline46mondego>            handPanel.setLayout(new FlowLayout());<newline46mondego>            frame.add(handPanel, BorderLayout.SOUTH);<newline46mondego>            handPanel.add(cd);<newline46mondego>            frame.pack();<newline46mondego>            frame.setResizable(false);<newline46mondego>            frame.setLocationRelativeTo(null);<newline46mondego>            frame.setVisible(true);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(final String[] args) {<newline46mondego>        final View view = new View();<newline46mondego>        view.makeFrame();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7408splitHere46","9589424splitHere46","boolean b = true;<newline46mondego>"
"7409splitHere46","9589424splitHere46","if (b) {<newline46mondego>//<newline46mondego>} else {<newline46mondego>//<newline46mondego>}<newline46mondego>"
"7410splitHere46","9589424splitHere46","b1.setOnClickListener(new View.OnClickListener() {<newline46mondego><newline46mondego>    private boolean b = true;<newline46mondego><newline46mondego>    public void onClick(View arg0) {<newline46mondego>        // TODO Auto-generated method stub<newline46mondego>        if(b){<newline46mondego>            b2.setEnabled(false);<newline46mondego>            tv1.setText(<doubleQuotes46>true<doubleQuotes46>);<newline46mondego>        } else {<newline46mondego>            b2.setEnabled(true);<newline46mondego>            tv1.setText(<doubleQuotes46>false<doubleQuotes46>);<newline46mondego>        }<newline46mondego><newline46mondego>        b = !b; //this changes b from true to false and vice versa at each call<newline46mondego>    }<newline46mondego>   });<newline46mondego>"
"7411splitHere46","9589450splitHere46","finally<newline46mondego>{<newline46mondego>    try<newline46mondego>    {<newline46mondego>       bw.close();<newline46mondego>       fw.close();<newline46mondego>    }<newline46mondego>    catch(Exception e)<newline46mondego>    {}<newline46mondego>}<newline46mondego>"
"7412splitHere46","9589496splitHere46","/ROOT/NODE[contains(concat(',', @ord, ','), ',2,')]<newline46mondego>"
"7413splitHere46","9589496splitHere46","XsltProcessor processor = new XsltProcessor();<newline46mondego>processor.importStyleSheet(styleSheetText);<newline46mondego>processor.importSource(sourceText);<newline46mondego>processor.setParameter(<doubleQuotes46>ord<doubleQuotes46>, <doubleQuotes46>2<doubleQuotes46>);<newline46mondego>processor.setParameter(<doubleQuotes46>style<doubleQuotes46>, <doubleQuotes46>whatever<doubleQuotes46>);<newline46mondego>String resultString = processor.transform();<newline46mondego>// do something with resultString<newline46mondego>"
"7414splitHere46","9589496splitHere46","styleSheetText"
"7415splitHere46","9589496splitHere46","<xsl:stylesheet version=<doubleQuotes46>1.0<doubleQuotes46> xmlns:xsl=<doubleQuotes46>http://www.w3.org/1999/XSL/Transform<doubleQuotes46>><newline46mondego>  <xsl:param name=<doubleQuotes46>ord<doubleQuotes46>   select=<doubleQuotes46>''<doubleQuotes46> /><newline46mondego>  <xsl:param name=<doubleQuotes46>style<doubleQuotes46> select=<doubleQuotes46>''<doubleQuotes46> /><newline46mondego><newline46mondego>  <xsl:template match=<doubleQuotes46>node()|@*<doubleQuotes46>><newline46mondego>    <xsl:copy><newline46mondego>      <xsl:apply-templates select=<doubleQuotes46>node()|@*<doubleQuotes46> /><newline46mondego>    </xsl:copy><newline46mondego>  </xsl:template><newline46mondego><newline46mondego>  <xsl:template match=<doubleQuotes46>NODE<doubleQuotes46>><newline46mondego>    <xsl:copy><newline46mondego>      <xsl:apply-templates select=<doubleQuotes46>@*<doubleQuotes46> /><newline46mondego>      <xsl:if test=<doubleQuotes46>contains(concat(',', @ord, ','), concat(',', $ord, ','))<doubleQuotes46>><newline46mondego>        <xsl:attribute name=<doubleQuotes46>style<doubleQuotes46>><newline46mondego>          <xsl:value-of select=<doubleQuotes46>$style<doubleQuotes46> /><newline46mondego>        </xsl:attribute><newline46mondego>      </xsl:if><newline46mondego>      <xsl:apply-templates select=<doubleQuotes46>node()<doubleQuotes46> /><newline46mondego>    </xsl:copy><newline46mondego>  </xsl:template><newline46mondego></xsl:stylesheet><newline46mondego>"
"7416splitHere46","9589496splitHere46","concat()"
"7417splitHere46","9589496splitHere46","@ord"
"7418splitHere46","9589567splitHere46","stack(<.*?>|& |\s)*overflow<newline46mondego>"
"7419splitHere46","9589614splitHere46","public static void main(String[] args) {<newline46mondego>    int[] a = new int[Integer.MAX_VALUE];<newline46mondego>}<newline46mondego>"
"7420splitHere46","9589652splitHere46","getSelectedFile()"
"7421splitHere46","9589652splitHere46","getCurrentDirectory()"
"7422splitHere46","9589688splitHere46","<jdk6home>/lib/tools.jar"
"7423splitHere46","9589688splitHere46","-javaagent:jmockit.jar"
"7424splitHere46","9589737splitHere46","rs.next()"
"7425splitHere46","9589737splitHere46","rs.next()"
"7426splitHere46","9589737splitHere46","if (rs.next()) {<newline46mondego>    String student = rs.getString(<doubleQuotes46>StudentID<doubleQuotes46>);<newline46mondego>    String date = rs.getString(<doubleQuotes46>date<doubleQuotes46>);<newline46mondego>    System.out.println(student+<doubleQuotes46><doubleQuotes46>);<newline46mondego>    System.out.println(date);<newline46mondego>    JOptionPane.showMessageDialog(frmAttendanceHistory,<newline46mondego>       <doubleQuotes46>Attendance has been registered.<doubleQuotes46>);<newline46mondego>    frmAttendanceHistory.setVisible(false);<newline46mondego>} else {<newline46mondego>    JOptionPane.showMessageDialog(frmAttendanceHistory,<newline46mondego>        <doubleQuotes46>A record for the given Student ID doesn't exist<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"7427splitHere46","9589745splitHere46","BufferedReader br = new BufferedReader(new FileReader(<doubleQuotes46>Customers.txt<doubleQuotes46>));<newline46mondego>String line;<newline46mondego><newline46mondego>while ((line = br.readLine()) != null)<newline46mondego>{<newline46mondego>    ...<newline46mondego>    for(int i=0;i<3;i++){ br.readLine(); }<newline46mondego>}<newline46mondego><newline46mondego>br.close();<newline46mondego>"
"7428splitHere46","9589849splitHere46","Statement"
"7429splitHere46","9589849splitHere46","SELECT"
"7430splitHere46","9589849splitHere46","INSERT"
"7431splitHere46","9589849splitHere46","ResultSet"
"7432splitHere46","9589849splitHere46","Statement"
"7433splitHere46","9589849splitHere46","Statement"
"7434splitHere46","9589849splitHere46","executeUpdate()"
"7435splitHere46","9589849splitHere46","PreparedStatement"
"7436splitHere46","9589849splitHere46","?"
"7437splitHere46","9589997splitHere46","public class TwitterActivity extends ListActivity {<newline46mondego>    List<String> tweets = new LinkedList<String>();<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void onCreate(Bundle savedInstanceState) {<newline46mondego>            super.onCreate(savedInstanceState);<newline46mondego><newline46mondego>            setListAdapter(new ArrayAdapter<String>(this, R.layout.layout, tweets));<newline46mondego>            ListView lv = getListView();<newline46mondego>            lv.setOnItemLongClickListener(new AdapterView.OnItemLongClickListener(){ <newline46mondego>                   @Override <newline46mondego>                   public boolean onItemLongClick(AdapterView<?> av, View v, int pos, long id) <newline46mondego>                  { <newline46mondego>                       Toast.makeText(TwitterActivity.this, <doubleQuotes46>LongClick<doubleQuotes46>, Toast.LENGTH_LONG).show();<newline46mondego>                  } <newline46mondego>             }); <newline46mondego><newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7438splitHere46","9589997splitHere46","public class MyActivity extends Activity implements View.onLongClickListener {<newline46mondego><newline46mondego>   View myView = null;<newline46mondego><newline46mondego><newline46mondego>   public void onCreate(Bundle state) {<newline46mondego>      super.onCreate(state);<newline46mondego>      setContentView(R.layout.my_activity);<newline46mondego>      myView = findViewById(r.id.my_view);<newline46mondego>      myView.setOnLongClickListener(this);<newline46mondego>   }<newline46mondego><newline46mondego>   @Override<newline46mondego>   public void onLongClick(View v) {<newline46mondego>    //long clicked<newline46mondego>   }<newline46mondego><newline46mondego>}<newline46mondego>"
"7439splitHere46","9590160splitHere46","HashSet<String> hs = new HashSet<String>();<newline46mondego>int i = 0;<newline46mondego>while ((line = br.readLine()) != null)<newline46mondego>{<newline46mondego>    i++;<newline46mondego>       if (i % 4 == 0)<newline46mondego>       {<newline46mondego>          if(hs.contains(line))<newline46mondego>             //name already exist<newline46mondego>          else<newline46mondego>            hs.add(line);<newline46mondego>            // new customer do what you want with it<newline46mondego><newline46mondego>       }<newline46mondego>}<newline46mondego>"
"7440splitHere46","9590166splitHere46","SingletonFoo"
"7441splitHere46","9590166splitHere46","com.mycorp"
"7442splitHere46","9590166splitHere46","getInstance()"
"7443splitHere46","9590213splitHere46","int i = readqueue_tail;<newline46mondego>while (i != readqueue_head)<newline46mondego>{<newline46mondego>    i = (i + 1) % 256;<newline46mondego>}<newline46mondego>"
"7444splitHere46","9590278splitHere46","@Provider<newline46mondego>public class DBPoolInjectableProvider extends SingletonTypeInjectableProvider<Context, BoneCPDataSource> {<newline46mondego><newline46mondego>    public DBPoolInjectableProvider() throws SQLException {<newline46mondego>        super(BoneCPDataSource.class, APIMain.getDBPool());<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7445splitHere46","9590278splitHere46","public TestResponse testGet(@Context final BoneCPDataSource ds) throws SQLException {<newline46mondego>   ...<newline46mondego>}<newline46mondego>"
"7446splitHere46","9590312splitHere46","SetUniqueList"
"7447splitHere46","9590312splitHere46","List"
"7448splitHere46","9590332splitHere46","final HtmlForm form = page1.getFirstByXPath(<doubleQuotes46>//form[@action='doDelete']<doubleQuotes46>);<newline46mondego>"
"7449splitHere46","9590437splitHere46","else{<newline46mondego>    score--;<newline46mondego>    scoredisplay.setText(<doubleQuotes46><doubleQuotes46> + score);<newline46mondego>}<newline46mondego>"
"7450splitHere46","9590437splitHere46","case R.id.keypad_hash:<newline46mondego>   getQuestion();<newline46mondego>   checkAnswer();<newline46mondego>"
"7451splitHere46","9590437splitHere46","case R.id.keypad_hash:<newline46mondego>    checkAnswer();<newline46mondego>    getQuestion();<newline46mondego>"
"7452splitHere46","9590539splitHere46","head1 and head2"
"7453splitHere46","9590539splitHere46","list"
"7454splitHere46","9590539splitHere46","head2"
"7455splitHere46","9590539splitHere46","head1"
"7456splitHere46","9590539splitHere46","head1"
"7457splitHere46","9590539splitHere46","head2"
"7458splitHere46","9590539splitHere46","head2"
"7459splitHere46","9590539splitHere46","NULL"
"7460splitHere46","9590539splitHere46","head2"
"7461splitHere46","9590539splitHere46","NULL"
"7462splitHere46","9590539splitHere46","head1"
"7463splitHere46","9590539splitHere46","head1"
"7464splitHere46","9590539splitHere46","head2"
"7465splitHere46","9590628splitHere46","class Room {<newline46mondego><newline46mondego>     // room properties<newline46mondego>     int x, y, z;<newline46mondego><newline46mondego>     // constructor taking properties<newline46mondego>     public Room (int x, int y, int z) {<newline46mondego>         this.x = x;<newline46mondego>         this.y = y;<newline46mondego>         this.z = z;<newline46mondego>     }<newline46mondego><newline46mondego>     // factory methods<newline46mondego>     public static Room createRoomType1() {<newline46mondego>         return new Room(100, 200, 300);<newline46mondego>     }<newline46mondego><newline46mondego>     public static Room createRoomType2() {<newline46mondego>         return new Room(400, 500, 600);<newline46mondego>     }<newline46mondego><newline46mondego>}<newline46mondego>"
"7466splitHere46","9590646splitHere46","buttonhash = (Button) findViewById(R.id.keypad_hash);<newline46mondego>getGame(diff)<newline46mondego>"
"7467splitHere46","9590715splitHere46","NativeFunctions"
"7468splitHere46","9590715splitHere46","public interface NativeFunctions {<newline46mondego>    public void openURL(String url);<newline46mondego>}<newline46mondego>"
"7469splitHere46","9590715splitHere46","public class MyGame extends Game/ApplicationListener {<newline46mondego>    public NativeFunctions mNativeFunctions;<newline46mondego><newline46mondego>    public MyGame(NativeFunctions nativeFunctions) {<newline46mondego>        mNativeFunctions = nativeFunctions;<newline46mondego>    }<newline46mondego>    // Exemplary function call, of course this doesn't make sense in render() ;)<newline46mondego>    public void render() {<newline46mondego>        mNativeFunctions.openURL(<doubleQuotes46>http://www.example.com<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7470splitHere46","9590715splitHere46","public class MyGameActivity extends AndroidApplication implements NativeFunctions {<newline46mondego>    public void onCreate(Bundle savedInstanceState) {<newline46mondego>        super.onCreate(savedInstanceState);<newline46mondego>        initialize(new MyGame(this), false);<newline46mondego>    }<newline46mondego>    public void openURL(String url) {<newline46mondego>        Intent viewIntent = new Intent(<doubleQuotes46>android.intent.action.VIEW<doubleQuotes46>, <newline46mondego>            Uri.parse(url));<newline46mondego>        startActivity(viewIntent);  <newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7471splitHere46","9590715splitHere46","public class MyGameDesktop implements NativeFunctions {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        MyGameDesktop game = new MyGameDesktop();<newline46mondego>        new LwjglApplication(new MyGame(game), <doubleQuotes46>MyGame<doubleQuotes46>, 800,<newline46mondego>             480, false);<newline46mondego>    }<newline46mondego>    public void openURL(String url) {<newline46mondego>        // Your implementation to open URL on dekstop<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7472splitHere46","9590746splitHere46","aspect CloningServiceAspect {<newline46mondego>  declare parents : PersonService extends DefaultCloningServiceImpl<Object>;<newline46mondego>}<newline46mondego>"
"7473splitHere46","9590746splitHere46","aspect CloningServiceAspect {<newline46mondego>  declare parents : (@CloningService *) extends DefaultCloningServiceImpl<Object>;<newline46mondego>}<newline46mondego>"
"7474splitHere46","9590802splitHere46","Criteria crit = session.createCriteria(Notification.class, <doubleQuotes46>main<doubleQuotes46>);<newline46mondego><newline46mondego>DetachedCriteria notificationSubQuery = DetachedCriteria.forClass(Notification.class, <doubleQuotes46>sub<doubleQuotes46>);<newline46mondego>notificationSubQuery.setProjection(Projections.max(<doubleQuotes46>date<doubleQuotes46>));<newline46mondego>notificationSubQuery.add(Restrictions.eqProperty(<doubleQuotes46>sub.serviceId<doubleQuotes46>, <doubleQuotes46>main.serviceId<doubleQuotes46>));<newline46mondego><newline46mondego>crit.add(Subqueries.propertyIn(<doubleQuotes46>date<doubleQuotes46>, notificationSubQuery));<newline46mondego>crit.addOrder(Order.desc(<doubleQuotes46>date<doubleQuotes46>));<newline46mondego>"
"7475splitHere46","9590802splitHere46","FROM Notification main WHERE date IN <newline46mondego>    (SELECT MAX(sub.date) FROM Notification sub WHERE sub.serviceId = main.serviceId) <newline46mondego>ORDER BY date ASC<newline46mondego>"
"7476splitHere46","9590802splitHere46","serviceId = 1: date = 3,4,5<newline46mondego>serviceId = 2: date = 4,5,6<newline46mondego>"
"7477splitHere46","9590802splitHere46","serviceId: 1, date: 5<newline46mondego>serviceId: 2, date: 5,6<newline46mondego>"
"7478splitHere46","9590802splitHere46","serviceId: 1, date: 5 <newline46mondego>serviceId: 2, date: 6<newline46mondego>"
"7479splitHere46","9590816splitHere46","synchronized"
"7480splitHere46","9590816splitHere46","final Object lock = new Object(); // globally visible lock object<newline46mondego>"
"7481splitHere46","9590816splitHere46","synchronized(lock) {<newline46mondego>   int size = balls.size();<newline46mondego>   for(int i = 0; i < size; i++){<newline46mondego>         Ball ball = balls.get(i);<newline46mondego>         drawBall(ball.xCoord, ball.yCoord, ball.image);<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"7482splitHere46","9590816splitHere46","synchronized(lock) {<newline46mondego>   int size = balls.size();<newline46mondego>   for(int i = size -1; i >= 0; i--){<newline46mondego>       i.updateBallPosition();<newline46mondego>       i.updateBallVelocity();<newline46mondego><newline46mondego>       if(i.isOutOfBounds())<newline46mondego>           balls.remove(i);<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"7483splitHere46","9590817splitHere46","Layer1"
"7484splitHere46","9590817splitHere46","package framework;<newline46mondego>public class Layer1 {<newline46mondego>    public String write() {<newline46mondego>        return <doubleQuotes46>hello<doubleQuotes46>;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7485splitHere46","9590817splitHere46","package framework;<newline46mondego>class Layer1 { // do note the non-use of public keyword here<newline46mondego>}<newline46mondego>"
"7486splitHere46","9590873splitHere46","JFrame newFrame"
"7487splitHere46","9590873splitHere46","JRButton button"
"7488splitHere46","9590873splitHere46","newFrame.addWindowListener(new WindowAdapter() {<newline46mondego>        public void windowClosed(WindowEvent e) {<newline46mondego>            button.setEnabled(true);<newline46mondego>        }            <newline46mondego>    });<newline46mondego>"
"7489splitHere46","9590921splitHere46","resources"
"7490splitHere46","9590921splitHere46","shortcuts"
"7491splitHere46","9590921splitHere46","IntegrationService"
"7492splitHere46","9590921splitHere46","requestShortcut(desktop,menu,submenu)"
"7493splitHere46","9590921splitHere46","boolean"
"7494splitHere46","9590921splitHere46","submenu"
"7495splitHere46","9590921splitHere46","user.language"
"7496splitHere46","9590921splitHere46","Locale.getDefault()"
"7497splitHere46","9590924splitHere46","Ordering.sortedCopy"
"7498splitHere46","9590924splitHere46","FluentIterable"
"7499splitHere46","9591006splitHere46","keytool"
"7500splitHere46","9591006splitHere46","keytool -genkey -alias myalias -keystore mykeystore.jks -dname <doubleQuotes46>CN=www.example.com<doubleQuotes46><newline46mondego>"
"7501splitHere46","9591006splitHere46","keytool"
"7502splitHere46","9591006splitHere46","keytool -genkey -alias myalias -keystore mykeystore.jks -dname <doubleQuotes46>CN=www.example.com<doubleQuotes46> -ext san=dns:www.example.com<newline46mondego>"
"7503splitHere46","9591006splitHere46","www.example.com"
"7504splitHere46","9591006splitHere46","dname"
"7505splitHere46","9591006splitHere46","CN"
"7506splitHere46","9591006splitHere46","keytool -export myservercert.crt -alias myalias -keystore mykeystore.jks<newline46mondego>"
"7507splitHere46","9591073splitHere46","def repositoryPath = '/home/test/lib'<newline46mondego><newline46mondego>repositories {<newline46mondego>    flatDir {<newline46mondego>       dirs repositoryPath<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7508splitHere46","9591073splitHere46","repositories {<newline46mondego>    ivy {<newline46mondego>       url repositoryPath<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7509splitHere46","9591073splitHere46","dependencies {<newline46mondego>    compile <doubleQuotes46>org.springframework:spring-orm:3.0.2.RELEASE<doubleQuotes46><newline46mondego>    compile <doubleQuotes46>org.springframework:spring-context-support:3.0.2.RELEASE<doubleQuotes46><newline46mondego>    compile 'commons-dbcp:commons-dbcp:1.4'<newline46mondego>    compile 'org.apache.ibatis:ibatis-sqlmap:2.3.4.726'<newline46mondego>    compile 'commons-dbutils:commons-dbutils:1.3'<newline46mondego>    compile 'joda-time:joda-time:1.6'<newline46mondego>    compile 'commons-lang:commons-lang:2.5'<newline46mondego>    compile 'com.google.collections:google-collections:1.0'<newline46mondego>}<newline46mondego>"
"7510splitHere46","9591073splitHere46","dependencies {<newline46mondego>    compile <doubleQuotes46>:spring-orm:3.0.2.RELEASE<doubleQuotes46><newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"7511splitHere46","9591075splitHere46","int numberOfParties = 5;<newline46mondego> AtomicInteger numberOfJobsToExecute = new AtomicInteger(1000);<newline46mondego> ExecutorService pool = Executors.newFixedThreadPool(numberOfParties );<newline46mondego> for(int i =0; i < numberOfParties; i++){<newline46mondego>     pool.submit(new Runnable(){<newline46mondego>        public void run(){<newline46mondego>            while(numberOfJobsToExecute.decrementAndGet() >= 0){<newline46mondego>                makeJobs(1).get(0).run();<newline46mondego>            }<newline46mondego>        }<newline46mondego>     });<newline46mondego> }<newline46mondego>"
"7512splitHere46","9591075splitHere46","get()"
"7513splitHere46","9591143splitHere46","Runtime.exec()"
"7514splitHere46","9591192splitHere46","setInstanceFollowRedirects()"
"7515splitHere46","9591192splitHere46","setFollowRedirects()"
"7516splitHere46","9591192splitHere46","setFollowRedirects()"
"7517splitHere46","9591307splitHere46","public enum Constants {<newline46mondego>    INSTANCE;<newline46mondego><newline46mondego>    public void isInDebugMode() { <newline46mondego>        return true;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7518splitHere46","9591307splitHere46","if(Constants.INSTANCE.isInDebugMode()) {....}<newline46mondego>"
"7519splitHere46","9591307splitHere46","public enum Constants {<newline46mondego>    DEBUG(true),<newline46mondego>    PRINT_VARS(false);<newline46mondego><newline46mondego>    private boolean enabled;<newline46mondego><newline46mondego>    private Constants(boolean enabled) {<newline46mondego>        this.enabled = enabled;<newline46mondego>    }<newline46mondego><newline46mondego>    public boolean isEnabled() {<newline46mondego>        return enabled;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7520splitHere46","9591307splitHere46","if(Constants.DEBUG.isEnabled()) {....}<newline46mondego>"
"7521splitHere46","9591420splitHere46","$HOME/.keystore"
"7522splitHere46","9591420splitHere46","CAkey.pem"
"7523splitHere46","9591420splitHere46","keytool"
"7524splitHere46","9591420splitHere46","-keysize 2048"
"7525splitHere46","9591420splitHere46","keytool"
"7526splitHere46","9591420splitHere46","CAcert.pem"
"7527splitHere46","9591420splitHere46","CAkey.pem"
"7528splitHere46","9591420splitHere46","CAcert.pem"
"7529splitHere46","9591420splitHere46",".p12"
"7530splitHere46","9591420splitHere46","PKCS12"
"7531splitHere46","9591420splitHere46","keystoreType=<doubleQuotes46>PKCS12<doubleQuotes46>"
"7532splitHere46","9591420splitHere46","keytool"
"7533splitHere46","9591420splitHere46","-certreq"
"7534splitHere46","9591420splitHere46","keytool"
"7535splitHere46","9591420splitHere46","-export"
"7536splitHere46","9591482splitHere46","LayoutManager"
"7537splitHere46","9591482splitHere46","LayoutManager"
"7538splitHere46","9591482splitHere46","BorderLayout"
"7539splitHere46","9591522splitHere46","Set<Point> set = new HashSet<Point>();<newline46mondego>String str1[] = str.split(<doubleQuotes46>\\^<doubleQuotes46>);<newline46mondego>set.add(new Point(str1[0], str1[1], str1[2]));<newline46mondego>"
"7540splitHere46","9591522splitHere46","public class Point {<newline46mondego><newline46mondego>    String str1;<newline46mondego>    String str2;<newline46mondego>    String str3;<newline46mondego><newline46mondego>    public Point(String str1, String str2, String str3) {<newline46mondego>        this.str1 = str1;<newline46mondego>        this.str2 = str2;<newline46mondego>        this.str3 = str3;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public int hashCode() {<newline46mondego>        final int prime = 31;<newline46mondego>        int result = 1;<newline46mondego>        result = prime * result + ((str1 == null) ? 0 : str1.hashCode());<newline46mondego>        result = prime * result + ((str2 == null) ? 0 : str2.hashCode());<newline46mondego>        return result;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean equals(Object obj) {<newline46mondego>        if (this == obj)<newline46mondego>            return true;<newline46mondego>        if (obj == null)<newline46mondego>            return false;<newline46mondego>        if (getClass() != obj.getClass())<newline46mondego>            return false;<newline46mondego>        Point other = (Point) obj;<newline46mondego>        if (str1 == null) {<newline46mondego>            if (other.str1 != null)<newline46mondego>                return false;<newline46mondego>        } else if (!str1.equals(other.str1))<newline46mondego>            return false;<newline46mondego>        if (str2 == null) {<newline46mondego>            if (other.str2 != null)<newline46mondego>                return false;<newline46mondego>        } else if (!str2.equals(other.str2))<newline46mondego>            return false;<newline46mondego>        return true;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7541splitHere46","9591546splitHere46","sessionFactory.openStatelessSession()"
"7542splitHere46","9591546splitHere46","session.setFlushMode(..)"
"7543splitHere46","9591666splitHere46","@Entity<newline46mondego>@Audited<newline46mondego>public class Person {<newline46mondego>    @Id<newline46mondego>    @GeneratedValue<newline46mondego>    private int id;<newline46mondego><newline46mondego>    private String name;<newline46mondego><newline46mondego>    private String surname;<newline46mondego><newline46mondego>    @ManyToOne<newline46mondego>    private Address address;<newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"7544splitHere46","9591676splitHere46","response"
"7545splitHere46","9591676splitHere46","response = response.trim()"
"7546splitHere46","9591751splitHere46","setPreferredSize()"
"7547splitHere46","9591751splitHere46","JButton button = new JButton(<doubleQuotes46>Choose a file!<doubleQuotes46>);<newline46mondego>button.addActionListener(new ActionListener()<newline46mondego>{ <newline46mondego>  public void actionPerformed(ActionEvent e)<newline46mondego>  { <newline46mondego>     JFileChooser fileChooser = new JFileChooser();<newline46mondego>     fileChooser.setDialogTitle( <doubleQuotes46>Choose a file<doubleQuotes46> );<newline46mondego>     fileChooser.setVisible( true );<newline46mondego>     fileChooser.setPreferredSize( new Dimension(100, 100) );<newline46mondego>  } <newline46mondego>});<newline46mondego>"
"7548splitHere46","9591777splitHere46","public static void generate(int[][] sets) {<newline46mondego>    int solutions = 1;<newline46mondego>    for(int i = 0; i < sets.length; solutions *= sets[i].length, i++);<newline46mondego>    for(int i = 0; i < solutions; i++) {<newline46mondego>        int j = 1;<newline46mondego>        for(int[] set : sets) {<newline46mondego>            System.out.print(set[(i/j)%set.length] + <doubleQuotes46> <doubleQuotes46>);<newline46mondego>            j *= set.length;<newline46mondego>        }<newline46mondego>        System.out.println();<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public static void main(String[] args) {<newline46mondego>    generate(new int[][]{{1,2,3}, {3,2}, {5,6,7}});<newline46mondego>}<newline46mondego>"
"7549splitHere46","9591777splitHere46","1 3 5<newline46mondego>2 3 5<newline46mondego>3 3 5<newline46mondego>1 2 5<newline46mondego>2 2 5<newline46mondego>3 2 5<newline46mondego>1 3 6<newline46mondego>2 3 6<newline46mondego>3 3 6<newline46mondego>1 2 6<newline46mondego>2 2 6<newline46mondego>3 2 6<newline46mondego>1 3 7<newline46mondego>2 3 7<newline46mondego>3 3 7<newline46mondego>1 2 7<newline46mondego>2 2 7<newline46mondego>3 2 7<newline46mondego>"
"7550splitHere46","9591777splitHere46","set"
"7551splitHere46","9591777splitHere46","import java.util.Arrays;<newline46mondego>import java.util.LinkedHashMap;<newline46mondego>import java.util.Vector;<newline46mondego><newline46mondego>public class Foo {<newline46mondego><newline46mondego>    private LinkedHashMap<String, Vector<String>> dataStructure;<newline46mondego><newline46mondego>    public Foo(LinkedHashMap<String, Vector<String>> dataStructure){<newline46mondego>        this.dataStructure = dataStructure;<newline46mondego>    }<newline46mondego><newline46mondego>    public String[][] allUniqueCombinations(){<newline46mondego>        int n = dataStructure.keySet().size();<newline46mondego>        int solutions = 1;<newline46mondego><newline46mondego>        for(Vector<String> vector : dataStructure.values()) {<newline46mondego>            solutions *= vector.size();            <newline46mondego>        }<newline46mondego><newline46mondego>        String[][] allCombinations = new String[solutions + 1][];<newline46mondego>        allCombinations[0] = dataStructure.keySet().toArray(new String[n]);<newline46mondego><newline46mondego>        for(int i = 0; i < solutions; i++) {<newline46mondego>            Vector<String> combination = new Vector<String>(n);<newline46mondego>            int j = 1;<newline46mondego>            for(Vector<String> vec : dataStructure.values()) {<newline46mondego>                combination.add(vec.get((i/j)%vec.size()));<newline46mondego>                j *= vec.size();<newline46mondego>            }<newline46mondego>            allCombinations[i + 1] = combination.toArray(new String[n]);<newline46mondego>        }<newline46mondego><newline46mondego>        return allCombinations;<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        LinkedHashMap<String, Vector<String>> data = new LinkedHashMap<String, Vector<String>>();<newline46mondego>        data.put(<doubleQuotes46>foo<doubleQuotes46>, new Vector<String>(Arrays.asList(<doubleQuotes46>1<doubleQuotes46>, <doubleQuotes46>2<doubleQuotes46>, <doubleQuotes46>3<doubleQuotes46>)));<newline46mondego>        data.put(<doubleQuotes46>bar<doubleQuotes46>, new Vector<String>(Arrays.asList(<doubleQuotes46>3<doubleQuotes46>, <doubleQuotes46>2<doubleQuotes46>)));<newline46mondego>        data.put(<doubleQuotes46>baz<doubleQuotes46>, new Vector<String>(Arrays.asList(<doubleQuotes46>5<doubleQuotes46>, <doubleQuotes46>6<doubleQuotes46>, <doubleQuotes46>7<doubleQuotes46>)));<newline46mondego><newline46mondego>        Foo foo = new Foo(data);<newline46mondego><newline46mondego>        for(String[] combination : foo.allUniqueCombinations()) {<newline46mondego>            System.out.println(Arrays.toString(combination));            <newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7552splitHere46","9591777splitHere46","[foo, bar, baz]<newline46mondego>[1, 3, 5]<newline46mondego>[2, 3, 5]<newline46mondego>[3, 3, 5]<newline46mondego>[1, 2, 5]<newline46mondego>[2, 2, 5]<newline46mondego>[3, 2, 5]<newline46mondego>[1, 3, 6]<newline46mondego>[2, 3, 6]<newline46mondego>[3, 3, 6]<newline46mondego>[1, 2, 6]<newline46mondego>[2, 2, 6]<newline46mondego>[3, 2, 6]<newline46mondego>[1, 3, 7]<newline46mondego>[2, 3, 7]<newline46mondego>[3, 3, 7]<newline46mondego>[1, 2, 7]<newline46mondego>[2, 2, 7]<newline46mondego>[3, 2, 7]<newline46mondego>"
"7553splitHere46","9591816splitHere46","setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);<newline46mondego>"
"7554splitHere46","9591816splitHere46","windowClosing(WindowEvent event)"
"7555splitHere46","9591816splitHere46","dispose()"
"7556splitHere46","9591849splitHere46","@Service(<doubleQuotes46>userService<doubleQuotes46>)<newline46mondego>@RemotingDestination(channels={<doubleQuotes46>my-amf<doubleQuotes46>,<doubleQuotes46>my-secure-amf<doubleQuotes46>})<newline46mondego>public class UserService {<newline46mondego><newline46mondego>    @RemotingExclude<newline46mondego>    @RequestMapping(<doubleQuotes46>/user/{id}<doubleQuotes46>, method=RequestMethod.GET)<newline46mondego>    public String getUserByIdRest(@PathVariable String id) {<newline46mondego>        return this.getUserById(id);<newline46mondego>    }<newline46mondego><newline46mondego>    @RemotingInclude<newline46mondego>    public String getUserById(String id) {<newline46mondego>       //..<newline46mondego>       return id;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7557splitHere46","9592053splitHere46","pcb"
"7558splitHere46","9592053splitHere46","fbMain"
"7559splitHere46","9592053splitHere46","public class fbMain {<newline46mondego>    //...<newline46mondego>    public class pcb {<newline46mondego>    }<newline46mondego>    //...<newline46mondego>}<newline46mondego>"
"7560splitHere46","9592053splitHere46","pcb"
"7561splitHere46","9592053splitHere46","public static class pcb {<newline46mondego> }<newline46mondego>"
"7562splitHere46","9592053splitHere46","pcb"
"7563splitHere46","9592053splitHere46","fbMain"
"7564splitHere46","9592053splitHere46","pcb"
"7565splitHere46","9592053splitHere46","fbMain"
"7566splitHere46","9592053splitHere46","notHere[i] = instanceOfFbMain.new pcb(pI, arr, bst);<newline46mondego>"
"7567splitHere46","9592257splitHere46","HighLighter"
"7568splitHere46","9592257splitHere46","Html"
"7569splitHere46","9592257splitHere46","Html3.2"
"7570splitHere46","9592257splitHere46","Html5"
"7571splitHere46","9592257splitHere46","prepareRenderer()"
"7572splitHere46","9592257splitHere46","getTableCellRendererComponent()"
"7573splitHere46","9592257splitHere46","BoundedRangeModel"
"7574splitHere46","9592259splitHere46","from(<doubleQuotes46>timer://foo?fixedRate=true&delay=0&period=5000<doubleQuotes46>)<newline46mondego>    .to(<doubleQuotes46>http4://.../sitemap.xml<doubleQuotes46>)<newline46mondego>    ...;<newline46mondego>"
"7575splitHere46","9592309splitHere46","OutputStream.write(int)"
"7576splitHere46","9592309splitHere46","int[] ints = new int[] { 0x52, 0xe4, 0x18, 0xcb };<newline46mondego>FileOutputStream os = new FileOutputStream(new File(<doubleQuotes46>/tmp/x<doubleQuotes46>));<newline46mondego>for (int i : ints) {<newline46mondego>    os.write(i);<newline46mondego>}<newline46mondego>os.close();<newline46mondego>"
"7577splitHere46","9592309splitHere46","> hexdump /tmp/x<newline46mondego>0000000 52 e4 18 cb                                    <newline46mondego>"
"7578splitHere46","9592380splitHere46","int choice = readInt();<newline46mondego>switch(choice){<newline46mondego>    case 1:<newline46mondego>    case 2:<newline46mondego>        // your code<newline46mondego>        break;<newline46mondego>    case 3:<newline46mondego>        // exit code<newline46mondego>        break;<newline46mondego><newline46mondego>}<newline46mondego>"
"7579splitHere46","9592390splitHere46","String text1 = <doubleQuotes46>some string with -Click 2U - Files in it<doubleQuotes46>;<newline46mondego> String text2 = text1.replace(<doubleQuotes46>-Click 2U - Files<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego> // here text2.equals(<doubleQuotes46>some string with  in it<doubleQuotes46>)<newline46mondego>"
"7580splitHere46","9592390splitHere46","String.replaceAll()"
"7581splitHere46","9592390splitHere46","String text1 = <doubleQuotes46>some Click 2U title for Clicking away<doubleQuotes46>;<newline46mondego> String text2 = text1.replaceAll(<doubleQuotes46>C.*?k<doubleQuotes46>, <doubleQuotes46>XXX<doubleQuotes46>);<newline46mondego> // here text2.equals(<doubleQuotes46>some [XXX 2U title for XXXing away<doubleQuotes46>)<newline46mondego>"
"7582splitHere46","9592390splitHere46","<doubleQuotes46>C.*?k<doubleQuotes46>"
"7583splitHere46","9592390splitHere46","C"
"7584splitHere46","9592390splitHere46","k"
"7585splitHere46","9592390splitHere46","?"
"7586splitHere46","9592390splitHere46","k"
"7587splitHere46","9592395splitHere46","Project Properties -> Project Facets -> Convert to faceted form..."
"7588splitHere46","9592395splitHere46","Java"
"7589splitHere46","9592395splitHere46","Dynamic Web Module"
"7590splitHere46","9592395splitHere46","Check out as a project configured using the New Project Wizard"
"7591splitHere46","9592395splitHere46",".project"
"7592splitHere46","9592599splitHere46","for (String parameterName : request.getParameters()) {<newline46mondego>  String value = request.getParameter(parameterName);<newline46mondego>  // store parameter values in any structure you need<newline46mondego>  ...<newline46mondego>}<newline46mondego>// here you cann access any class from your web application to perform<newline46mondego>// DB operations.<newline46mondego>...<newline46mondego>// to propagate result to client obtain an OutputStream from response object<newline46mondego>// and simply write data to it<newline46mondego>OutputStream os = response.getOutputStream();<newline46mondego>os.write(your data);<newline46mondego>"
"7593splitHere46","9592624splitHere46","Scanner sc = new Scanner(System.in);<newline46mondego><newline46mondego>while (!sc.hasNextInt()) { // <-- 'peeks' at, doesn't remove, the next token<newline46mondego>    System.out.println(<doubleQuotes46>Please enter a number!<doubleQuotes46>);<newline46mondego>    sc.next(); // <-- skips over an invalid token<newline46mondego>}<newline46mondego><newline46mondego>return sc.nextInt();<newline46mondego>"
"7594splitHere46","9592641splitHere46","public class SomeClass {<newline46mondego>    // this is local to this class only<newline46mondego>    ArrayList<String> viewArray = new ArrayList<String>();<newline46mondego>    public void process() {<newline46mondego>       // i'm guessing there is some sort of processing method that is called<newline46mondego>    }<newline46mondego>    public ArrayList<String> getView() {<newline46mondego>       return viewArray;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7595splitHere46","9592641splitHere46","a1"
"7596splitHere46","9592641splitHere46","public class YourActivity {<newline46mondego>    ArrayList<String> al = new ArrayList<String>();<newline46mondego>    public void someMethod() {<newline46mondego>        // here a1 will be the same blank List you initialized it with<newline46mondego>        // unless someMethod() has been called before or a1 modified elsewhere<newline46mondego>        al = parsedExampleDataSet.getView();<newline46mondego>        // after the call to getView, a1 is now a reference to SomeClass.viewArray<newline46mondego>        // the ArrayList that a1 was initialized with is then garbage collected<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7597splitHere46","9592760splitHere46","this.counter = 10;<newline46mondego><newline46mondego>...<newline46mondego><newline46mondego>case R.id.keypad_hash:<newline46mondego>  checkAnswer();<newline46mondego>  this.counter--;<newline46mondego>  if( this.counter > 0 ){<newline46mondego>    getQuestion();<newline46mondego>  } else {<newline46mondego>    scoreText.setText(score);<newline46mondego>  }<newline46mondego>  break;<newline46mondego>"
"7598splitHere46","9592887splitHere46","start.bigMavenProject"
"7599splitHere46","9592887splitHere46","<project xmlns=<doubleQuotes46>http://maven.apache.org/POM/4.0.0<doubleQuotes46><newline46mondego>         xmlns:xsi=<doubleQuotes46>http://www.w3.org/2001/XMLSchema-instance<doubleQuotes46><newline46mondego>         xsi:schemaLocation=<doubleQuotes46>http://maven.apache.org/POM/4.0.0<newline46mondego>                             http://maven.apache.org/maven-v4_0_0.xsd<doubleQuotes46>><newline46mondego>    <modelVersion>4.0.0</modelVersion><newline46mondego><newline46mondego>    <groupId>starto</groupId><newline46mondego>    <artifactId>bigMavenProject</artifactId><newline46mondego>    <packaging>pom</packaging><newline46mondego>    <version>1.0</version><newline46mondego><newline46mondego>    <modules><newline46mondego>      <module>commons</module><newline46mondego>      <module>hibernate</module><newline46mondego>      <module>server</module><newline46mondego>    </modules><newline46mondego></project><newline46mondego>"
"7600splitHere46","9592887splitHere46","<packaging>pom</packaging>"
"7601splitHere46","9593119splitHere46","subprocess.Popen"
"7602splitHere46","9593119splitHere46",".communicate()"
"7603splitHere46","9593198splitHere46","public double getWeeklyPay()//Call the getWeeklyHours method of the Emp's timecard to     get the total<newline46mondego>//hours worked and then multiply the returned value by the emp's hourly rate and return the value.<newline46mondego>"
"7604splitHere46","9593198splitHere46","double empWeeklyPay;<newline46mondego>double sumOtHours = 0;<newline46mondego>double sumRegHours = 0;<newline46mondego>int i = 0;<newline46mondego><newline46mondego><newline46mondego>while(i < getTimeCard().NUMDAYS)<newline46mondego>{<newline46mondego>//grabbing the overtime and reghours and storing them<newline46mondego>double otHours = 0;<newline46mondego>double regHours = 0;<newline46mondego>otHours += getTimeCard().getHoursByDay(i);<newline46mondego>regHours += getTimeCard().getHoursByDay(i) - otHours;<newline46mondego>sumOtHours += otHours;<newline46mondego>sumRegHours += regHours;<newline46mondego>i++;<newline46mondego>} <newline46mondego><newline46mondego><newline46mondego>empWeeklyPay = (sumRegHours * getHourlyRate()) + (sumOtHours * getHourlyRate() * 1.5);<newline46mondego>if(Integer.toString(getEmployeeId()).charAt(0) == '0' ||          Integer.toString(getEmployeeId()).charAt(0) == '2'<newline46mondego>|| Integer.toString(getEmployeeId()).charAt(0) == '9')//Java reads in 1010 so need to     convert to a string to do a count on the value.<newline46mondego><newline46mondego>{<newline46mondego> double tmpBasePay = (sumRegHours * getHourlyRate()) + (sumOtHours * getHourlyRate() *     1.5);  <newline46mondego>  tmpBasePay += (tmpBasePay * .10); <newline46mondego>  empWeeklyPay = tmpBasePay;<newline46mondego>}<newline46mondego> else if(Integer.toString(getEmployeeId()).charAt(0) == '3')<newline46mondego>{<newline46mondego>  double tmpBasePay = (sumRegHours * getHourlyRate()) + (sumOtHours * getHourlyRate() * 1.5);<newline46mondego>  tmpBasePay -= (tmpBasePay *.10);<newline46mondego>  empWeeklyPay = tmpBasePay;<newline46mondego>}<newline46mondego>  else if(Integer.toString(getEmployeeId()).charAt(0) == '8')<newline46mondego>{ <newline46mondego>  double tmpBasePay = (sumRegHours * getHourlyRate()) + (sumOtHours * getHourlyRate() * 1.5);  <newline46mondego>  tmpBasePay += (tmpBasePay * .20);<newline46mondego>  empWeeklyPay = tmpBasePay;<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>if(sumRegHours > 34)<newline46mondego><newline46mondego>{<newline46mondego>empWeeklyPay -= (empWeeklyPay * .06 );<newline46mondego>return empWeeklyPay;<newline46mondego>}<newline46mondego>else<newline46mondego>return empWeeklyPay;<newline46mondego>"
"7605splitHere46","9593272splitHere46","ValueWatcher"
"7606splitHere46","9593272splitHere46","AtomicLong"
"7607splitHere46","9593272splitHere46","private final VersionValue versionValue = new VersionValue();<newline46mondego><newline46mondego>public void setValue(int value) {<newline46mondego>    synchronized (monitor) {<newline46mondego>       versionValue.value = value;<newline46mondego>       versionValue.version++;<newline46mondego>       monitor.notifyAll();<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego> private class ValueWatcher {<newline46mondego>     private long localVersion = 0;<newline46mondego>     public int waitForValue() {<newline46mondego>         synchronized (monitor) {<newline46mondego>             while (true) {<newline46mondego>                 if (localVersion < versionValue.version) {<newline46mondego>                     // NOTE: the value might have been set twice here<newline46mondego>                     localVersion = versionValue.version;<newline46mondego>                     return versionValue.value;<newline46mondego>                 }<newline46mondego>                 monitor.wait();<newline46mondego>             }<newline46mondego>         }<newline46mondego>     }<newline46mondego>}<newline46mondego><newline46mondego>private static class VersionValue {<newline46mondego>    int value;<newline46mondego>    long version;<newline46mondego>}<newline46mondego>"
"7608splitHere46","9593322splitHere46","<doubleQuotes46>I    have    this      string. <doubleQuotes46>.replaceAll (<doubleQuotes46>\\s\\s+<doubleQuotes46>, <doubleQuotes46> <doubleQuotes46>).trim ();<newline46mondego>"
"7609splitHere46","9593322splitHere46","<doubleQuotes46>I    have    this      string. <doubleQuotes46>.replaceAll (<doubleQuotes46>  +<doubleQuotes46>, <doubleQuotes46> <doubleQuotes46>).trim ();<newline46mondego>"
"7610splitHere46","9593495splitHere46","WEB-INF/lib"
"7611splitHere46","9593495splitHere46","<scope>provided</scope>"
"7612splitHere46","9593495splitHere46","<provided>"
"7613splitHere46","9593551splitHere46","IF (RList.contains(r1.getRouteName() == <doubleQuotes46>Route2<doubleQuotes46>))<newline46mondego>c1.setCollision1(b1.getStartTime ++ c1.getCollision1)<newline46mondego><newline46mondego>ELSE<newline46mondego>c1.setCollision2(b1.getStartTime ++ c1.getCollision2)<newline46mondego>"
"7614splitHere46","9593551splitHere46","if (RList.contains(r1.getRouteName() == <doubleQuotes46>Route2<doubleQuotes46>)) {<newline46mondego>    c1.setCollision1(b1.getStartTime + c1.getCollision1);<newline46mondego>}<newline46mondego>else {<newline46mondego>    c1.setCollision2(b1.getStartTime + c1.getCollision2);<newline46mondego>}<newline46mondego>"
"7615splitHere46","9593551splitHere46","RList.contains(r1.getRouteName() == <doubleQuotes46>Route2<doubleQuotes46>)"
"7616splitHere46","9593551splitHere46","Strings"
"7617splitHere46","9593551splitHere46","equals"
"7618splitHere46","9593551splitHere46","=="
"7619splitHere46","9593551splitHere46","r1.getRouteName().equals(<doubleQuotes46>Route2<doubleQuotes46>)"
"7620splitHere46","9593551splitHere46","RList"
"7621splitHere46","9593551splitHere46","true"
"7622splitHere46","9593551splitHere46","false"
"7623splitHere46","9593551splitHere46","r1.getRouteName().equals(<doubleQuotes46>Route2<doubleQuotes46>)"
"7624splitHere46","9593551splitHere46","RList"
"7625splitHere46","9593551splitHere46","if(RList.contains(r1) && r1.getRouteName().equals(<doubleQuotes46>Route2<doubleQuotes46>))<newline46mondego>"
"7626splitHere46","9593551splitHere46","equalsIgnoreCase()"
"7627splitHere46","9593551splitHere46","equals"
"7628splitHere46","9593573splitHere46","<%@page import=<doubleQuotes46>java.sql.*<doubleQuotes46>%><newline46mondego><%<newline46mondego>try {<newline46mondego>String name=request.getParameter(<doubleQuotes46>name<doubleQuotes46>);<newline46mondego>String address=request.getParameter(<doubleQuotes46>address<doubleQuotes46>);<newline46mondego>Class.forName(<doubleQuotes46>com.mysql.jdbc.Driver<doubleQuotes46>);<newline46mondego>           Connection con = DriverManager.getConnection(<doubleQuotes46>jdbc:mysql://localhost:3306/yourdb<doubleQuotes46>, youruser, yourpassword);<newline46mondego>           Statement st=cn.createStatement();<newline46mondego>           int i = st.executeUpdate(<doubleQuotes46>insert into user(name,address) values('<doubleQuotes46>+name+<doubleQuotes46>','<doubleQuotes46>+address+<doubleQuotes46>')<doubleQuotes46>);<newline46mondego>           out.println(<doubleQuotes46>Data is inserted successfully<doubleQuotes46>);<newline46mondego>           st.close();<newline46mondego>           cn.close();<newline46mondego>} catch (Exception e) {<newline46mondego>   out.println(e.getMessage());<newline46mondego>}<newline46mondego>%><newline46mondego>"
"7629splitHere46","9593671splitHere46","<build><newline46mondego>    <pluginManagement><newline46mondego>      <plugins><newline46mondego>        <plugin><newline46mondego>          <artifactId>maven-compiler-plugin</artifactId><newline46mondego>          <version>2.3.2</version><newline46mondego>          <configuration><newline46mondego>            <testSource>1.6</testSource><newline46mondego>            <testTarget>1.6</testTarget><newline46mondego>            <target>1.4</target><newline46mondego>            <source>1.4</source><newline46mondego>          </configuration><newline46mondego>        </plugin><newline46mondego>      </plugins><newline46mondego>    </pluginManagement><newline46mondego>  </build><newline46mondego>"
"7630splitHere46","9593737splitHere46","public Component getTableCellRendererComponent(JTable jtable, Object o, boolean bln, boolean bln1, int i, int i1) {<newline46mondego>        int v = Integer.parseInt(o.toString());<newline46mondego>        JProgressBar b = progress.get(i);<newline46mondego>        b.setValue(v);<newline46mondego>        return b;<newline46mondego>    }<newline46mondego>"
"7631splitHere46","9593759splitHere46","is.markSupported()<newline46mondego>"
"7632splitHere46","9593759splitHere46","class MyInputStream extends InputStream {<newline46mondego><newline46mondego>  InputStream original = null;<newline46mondego><newline46mondego>  public MyInputStream(InputStream original) {<newline46mondego>    this.original = original;<newline46mondego>  }<newline46mondego><newline46mondego>  @Override<newline46mondego>  public int read() throws IOException {<newline46mondego>    int c = original.read();<newline46mondego>    System.out.printf(<doubleQuotes46>%c<doubleQuotes46>, c);<newline46mondego>    return c;<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"7633splitHere46","9593759splitHere46",".<newline46mondego>.<newline46mondego>.<newline46mondego><newline46mondego>InputStream myIs = new MyInputStream(is);<newline46mondego>Reader r = new InputStreamReader(myIs);<newline46mondego><newline46mondego>.<newline46mondego>.<newline46mondego>.<newline46mondego>"
"7634splitHere46","9593785splitHere46","ClassCastException"
"7635splitHere46","9593785splitHere46","List<Integer> intList = new ArrayList<Integer>();<newline46mondego>List asRaw = intList; // Bad! Your compiler will complain / warn. Don't ignore it.<newline46mondego>asRaw.add(<doubleQuotes46>not a number<doubleQuotes46>);<newline46mondego>Integer myInt = intList.get(0); // ClassCastException<newline46mondego>"
"7636splitHere46","9593785splitHere46","ArrayList"
"7637splitHere46","9593785splitHere46","Object"
"7638splitHere46","9593785splitHere46","ClassCastException"
"7639splitHere46","9593832splitHere46","int r = ( pix[index] >> 16 ) & 0xff;<newline46mondego>            int g = ( pix[index] >> 8 ) & 0xff;<newline46mondego>            int b = pix[index] & 0xff;<newline46mondego>"
"7640splitHere46","9593832splitHere46","RY = ( 70 * r - 59 * g - 11 * b ) / 100;<newline46mondego>            GY = (-30 * r + 41 * g - 11 * b ) / 100;<newline46mondego>            BY = (-30 * r - 59 * g + 89 * b ) / 100;<newline46mondego>"
"7641splitHere46","9593832splitHere46","Y  = ( 30 * r + 59 * g + 11 * b ) / 100;<newline46mondego>            RYY = ( S * BY + C * RY ) / 256;<newline46mondego>            BYY = ( C * BY - S * RY ) / 256;<newline46mondego>            GYY = (-51 * RYY - 19 * BYY ) / 100;<newline46mondego>"
"7642splitHere46","9593837splitHere46","DatabaseTableModel"
"7643splitHere46","9593837splitHere46","AbstractTableModel"
"7644splitHere46","9593837splitHere46","JTable"
"7645splitHere46","9593837splitHere46","ResultSet"
"7646splitHere46","9593837splitHere46","public final void constructModel(ResultSet rs) throws SQLException {<newline46mondego>    ResultSetMetaData rsmd = rs.getMetaData();<newline46mondego>    rs.last();<newline46mondego>    rowCount = rs.getRow();<newline46mondego>    int columnCount = rsmd.getColumnCount();<newline46mondego>    // DatabaseColumn simply holds a name and a Class<?>.<newline46mondego>    columns = new DatabaseColumn[columnCount];<newline46mondego>    // This is the Object[][] array that you were talking about.<newline46mondego>    // It holds all the data from the ResultSet.<newline46mondego>    data = new Object[columnCount][rowCount];<newline46mondego>    for (int i = 0; i < columnCount; ++i) {<newline46mondego>        // Figure out the column name and type.<newline46mondego>        int j = i + 1;<newline46mondego>        String colName = rsmd.getColumnLabel(j);<newline46mondego>        Class<?> colClass = String.class;<newline46mondego>        try {<newline46mondego>            colClass = Class.forName(rsmd.getColumnClassName(j));<newline46mondego>        } catch (ClassNotFoundException ex) {<newline46mondego>            colClass = String.class;<newline46mondego>        }<newline46mondego>        columns[i] = new DatabaseColumn(colName, colClass);<newline46mondego>        // Get the data in the current column as an Object.<newline46mondego>        rs.beforeFirst();<newline46mondego>        for (int k = 0; rs.next(); ++k) {<newline46mondego>            data[i][k] = rs.getObject(j);<newline46mondego>        }<newline46mondego>    }<newline46mondego>    // Notify listeners about the changes so they can update themselves.<newline46mondego>    fireTableStructureChanged();<newline46mondego>}<newline46mondego>"
"7647splitHere46","9593837splitHere46","ResultSet"
"7648splitHere46","9593864splitHere46",".contains()"
"7649splitHere46","9593864splitHere46","#"
"7650splitHere46","9593864splitHere46","sed do eiusmod tempor incididunt HOMER ut labore et dolore magna#aliqua. Ut enim ad minim veniam, CANDY BAR quis nostrud exercitation#aliqua. Ut enim ad minim veniam, quis nostrud CANDY CANE exercitation#....<newline46mondego>"
"7651splitHere46","9593882splitHere46","<%@ page trimDirectiveWhitespaces=<doubleQuotes46>true<doubleQuotes46> %><newline46mondego>"
"7652splitHere46","9593924splitHere46","PipedWriter"
"7653splitHere46","9593924splitHere46","mkfifo"
"7654splitHere46","9594058splitHere46","bbox"
"7655splitHere46","9594058splitHere46","geofilt"
"7656splitHere46","9594058splitHere46","createSpatialQuery"
"7657splitHere46","9594058splitHere46","[start TO end]"
"7658splitHere46","9594058splitHere46","getRangeQuery"
"7659splitHere46","9594058splitHere46","getRangeQuery"
"7660splitHere46","9594058splitHere46","subFieldType"
"7661splitHere46","9594058splitHere46","subFieldSuffix"
"7662splitHere46","9594058splitHere46","TrieDoubleField"
"7663splitHere46","9594058splitHere46","<fieldType name=<doubleQuotes46>tdouble<doubleQuotes46> class=<doubleQuotes46>solr.TrieDoubleField<doubleQuotes46> precisionStep=<doubleQuotes46>8<doubleQuotes46> omitNorms=<doubleQuotes46>true<doubleQuotes46> positionIncrementGap=<doubleQuotes46>0<doubleQuotes46>/><newline46mondego><fieldType name=<doubleQuotes46>latLon<doubleQuotes46> class=<doubleQuotes46>solr.LatLonType<doubleQuotes46> subFieldSuffix=<doubleQuotes46>_latLon<doubleQuotes46>/><newline46mondego><field name=<doubleQuotes46>lat_lon<doubleQuotes46> type=<doubleQuotes46>latLon<doubleQuotes46> indexed=<doubleQuotes46>true<doubleQuotes46> stored=<doubleQuotes46>true<doubleQuotes46>/><newline46mondego><dynamicField name=<doubleQuotes46>*_latLon<doubleQuotes46> type=<doubleQuotes46>tdouble<doubleQuotes46> indexed=<doubleQuotes46>true<doubleQuotes46> stored=<doubleQuotes46>false<doubleQuotes46> multiValued=<doubleQuotes46>true<doubleQuotes46>/><newline46mondego>"
"7664splitHere46","9594076splitHere46","NEW"
"7665splitHere46","9594076splitHere46","RUNNABLE"
"7666splitHere46","9594076splitHere46","BLOCKED"
"7667splitHere46","9594076splitHere46","WAITING"
"7668splitHere46","9594076splitHere46","TIMED_WAITING"
"7669splitHere46","9594076splitHere46","TERMINATED"
"7670splitHere46","9594076splitHere46","RUNNABLE"
"7671splitHere46","9594076splitHere46","System.in"
"7672splitHere46","9594076splitHere46","BLOCKED"
"7673splitHere46","9594076splitHere46","InputStream"
"7674splitHere46","9594076splitHere46","System.in"
"7675splitHere46","9594076splitHere46","RUNNABLE"
"7676splitHere46","9594076splitHere46","TIMED_WAITING"
"7677splitHere46","9594076splitHere46","BLOCKED"
"7678splitHere46","9594076splitHere46","BLOCKED"
"7679splitHere46","9594076splitHere46","TIMED_WAITING"
"7680splitHere46","9594194splitHere46","Map"
"7681splitHere46","9594194splitHere46","// NOTE! I assume that elements of theArray are Integers, not primitives like ints<newline46mondego>// You'll nee to cast things to Integers if they are ints to put them in a Map as<newline46mondego>// Maps can't take primitives as keys or values<newline46mondego>Map<Integer, Integer> elementCount = new HashMap<Integer, Integer>();<newline46mondego>for (int i = 0; i < theArray.length; i++) {<newline46mondego>   if (elementCount.containsKey(theArray[i]) {<newline46mondego>     elementCount.put(theArray[i], new Integer(elementCount.get(theArray[i]) + 1));<newline46mondego>   } else {<newline46mondego>     elementCount.put(theArray[i], new Integer(1));<newline46mondego>   }<newline46mondego>}<newline46mondego><newline46mondego>List<Integer> moreThanOne = new ArrayList<Integer>();<newline46mondego>for (Integer key : elementCount.keySet()) { // method may be getKeySet(), can't remember<newline46mondego>   if (elementCount.get(key) > 1) {<newline46mondego>      moreThanOne.add(key);<newline46mondego>   }<newline46mondego>}<newline46mondego><newline46mondego>// do whatever you want with the moreThanOne list<newline46mondego>"
"7682splitHere46","9594194splitHere46","theArray"
"7683splitHere46","9594194splitHere46","elementCount"
"7684splitHere46","9594245splitHere46","ObjectInputStream"
"7685splitHere46","9594245splitHere46","ObjectOutputStream"
"7686splitHere46","9594245splitHere46","ObjectOutputStream"
"7687splitHere46","9594245splitHere46","ObjectInputStream"
"7688splitHere46","9594245splitHere46","StreamCorruptedException"
"7689splitHere46","9594245splitHere46","ObjectInputStream"
"7690splitHere46","9594245splitHere46","ObjectOutputStream"
"7691splitHere46","9594245splitHere46","ObjectOutputStream.reset()"
"7692splitHere46","9594245splitHere46",".writeUnshared()"
"7693splitHere46","9594250splitHere46","Class<T> clazz"
"7694splitHere46","9594250splitHere46","Class<?>[] paramTypes = new Class[values.length];<newline46mondego>for (int i = 0; i < paramTypes.length; i++) {<newline46mondego>    paramTypes[i] = values[i].getClass();<newline46mondego>}<newline46mondego>return clazz.getConstructor(paramTypes).newInstance(values);<newline46mondego>"
"7695splitHere46","9594250splitHere46","values"
"7696splitHere46","9594250splitHere46","{ <doubleQuotes46>Hello<doubleQuotes46>, new Integer(2) }"
"7697splitHere46","9594250splitHere46","SomeClass(String, Integer)"
"7698splitHere46","9594250splitHere46","SomeClass(Object, Object)"
"7699splitHere46","9594314splitHere46","public class Record<S extends fooClassName,O>  {<newline46mondego>HashSet allStuffs(fooClassName arg); // do not <doubleQuotes46>override<doubleQuotes46> S by putting S HashSet<S> allStuffs; <newline46mondego>HashMap whoOwnsWhat (fooClassName arg1, O arg2);<newline46mondego>} <newline46mondego>"
"7700splitHere46","9594412splitHere46","<zipfileset src=<doubleQuotes46>libs/mail.jar<doubleQuotes46>><newline46mondego>  <exclude name=<doubleQuotes46>**/*.RSA, **/*.SF, **/*.DSA<doubleQuotes46>/><newline46mondego></zipfileset><newline46mondego>... ...<newline46mondego>"
"7701splitHere46","9594607splitHere46","compareTo()"
"7702splitHere46","9594607splitHere46","equals("
"7703splitHere46","9594607splitHere46","E"
"7704splitHere46","9594607splitHere46","equals()"
"7705splitHere46","9594607splitHere46","hashCode()"
"7706splitHere46","9594607splitHere46","E"
"7707splitHere46","9594607splitHere46","equals()"
"7708splitHere46","9594607splitHere46","Object"
"7709splitHere46","9594607splitHere46","equals()"
"7710splitHere46","9594607splitHere46","E"
"7711splitHere46","9594607splitHere46","equals()"
"7712splitHere46","9594688splitHere46","public String readLine(BufferedReader br){<newline46mondego>    String rl = br.readLine();<newline46mondego>    if (rl.trim().length() > 2) {<newline46mondego>        return rl;<newline46mondego>    }else return readLine(br);<newline46mondego>}<newline46mondego>"
"7713splitHere46","9594688splitHere46","...<newline46mondego>     while(infile.ready())<newline46mondego>        {<newline46mondego>          String username = readLine(infile); // instead of String username = infile.readLine();<newline46mondego>"
"7714splitHere46","9594688splitHere46","setX(String arg)"
"7715splitHere46","9594751splitHere46","new Timer(5000, new ActionListener(){<newline46mondego>  public void actionPerformed(ActionEvent e) {<newline46mondego>    panel.repaint();<newline46mondego>  }<newline46mondego>}).start();<newline46mondego>"
"7716splitHere46","9594793splitHere46","public boolean test(boolean var);<newline46mondego>    0  iload_1 [var]<newline46mondego>    1  ifeq 6<newline46mondego>    4  iconst_1<newline46mondego>    5  ireturn<newline46mondego>    6  iconst_0<newline46mondego>    7  ireturn<newline46mondego>      Line numbers:<newline46mondego>        [pc: 0, line: 5]<newline46mondego>        [pc: 4, line: 6]<newline46mondego>        [pc: 6, line: 8]<newline46mondego>      Local variable table:<newline46mondego>        [pc: 0, pc: 8] local: this index: 0 type: scratch.Else1<newline46mondego>        [pc: 0, pc: 8] local: var index: 1 type: boolean<newline46mondego><newline46mondego>  public boolean test(boolean var);<newline46mondego>    0  iload_1 [var]<newline46mondego>    1  ifeq 6<newline46mondego>    4  iconst_1<newline46mondego>    5  ireturn<newline46mondego>    6  iconst_0<newline46mondego>    7  ireturn<newline46mondego>      Line numbers:<newline46mondego>        [pc: 0, line: 5]<newline46mondego>        [pc: 4, line: 6]<newline46mondego>        [pc: 6, line: 8]<newline46mondego>      Local variable table:<newline46mondego>        [pc: 0, pc: 8] local: this index: 0 type: scratch.Else2<newline46mondego>        [pc: 0, pc: 8] local: var index: 1 type: boolean<newline46mondego>"
"7717splitHere46","9594793splitHere46","public boolean test(boolean var){<newline46mondego>    return var;<newline46mondego>}<newline46mondego>"
"7718splitHere46","9594927splitHere46","String tDir = System.getProperty(<doubleQuotes46>java.io.tmpdir<doubleQuotes46>);<newline46mondego>"
"7719splitHere46","9594927splitHere46","tDir"
"7720splitHere46","9594927splitHere46","tempFiles[]"
"7721splitHere46","9594959splitHere46","new XYZ(p1, p2, p3)"
"7722splitHere46","9594959splitHere46","[[XYZ alloc] initWithParm1:p1 parm2:p2 parm3:p3]"
"7723splitHere46","9594997splitHere46","Iterable<Dog> dogs = Iterables.filter(animals, Dog.class);<newline46mondego>"
"7724splitHere46","9595004splitHere46","target"
"7725splitHere46","9595004splitHere46","Location"
"7726splitHere46","9595004splitHere46","public static final int NORTH = 0;<newline46mondego>public static final int EAST = 90;<newline46mondego>public static final int SOUTH = 180;<newline46mondego>public static final int WEST = 270;<newline46mondego>public static final int NORTHEAST = 45;<newline46mondego>public static final int SOUTHEAST = 135;<newline46mondego>public static final int SOUTHWEST = 225;<newline46mondego>public static final int NORTHWEST = 315;<newline46mondego>"
"7727splitHere46","9595324splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46>?><newline46mondego><xs:schema xmlns:xs=<doubleQuotes46>http://www.w3.org/2001/XMLSchema<doubleQuotes46><newline46mondego>           targetNamespace=<doubleQuotes46>http://www.example.com<doubleQuotes46><newline46mondego>           xmlns=<doubleQuotes46>http://www.example.com<doubleQuotes46><newline46mondego>           elementFormDefault=<doubleQuotes46>qualified<doubleQuotes46>><newline46mondego>    <xs:simpleType name=<doubleQuotes46>uuid-type<doubleQuotes46>><newline46mondego>        <xs:restriction base=<doubleQuotes46>xs:string<doubleQuotes46>><newline46mondego>            <xs:pattern value=<doubleQuotes46>.*<doubleQuotes46>/><newline46mondego>        </xs:restriction><newline46mondego>    </xs:simpleType><newline46mondego>    <xs:complexType name=<doubleQuotes46>example-type<doubleQuotes46>><newline46mondego>        <xs:all><newline46mondego>            <xs:element name=<doubleQuotes46>uuid<doubleQuotes46> type=<doubleQuotes46>uuid-type<doubleQuotes46>/><newline46mondego>        </xs:all><newline46mondego>    </xs:complexType><newline46mondego>    <xs:element name=<doubleQuotes46>example<doubleQuotes46> type=<doubleQuotes46>example-type<doubleQuotes46>/><newline46mondego></xs:schema><newline46mondego>"
"7728splitHere46","9595324splitHere46","printMethod"
"7729splitHere46","9595324splitHere46","parseMethod"
"7730splitHere46","9595324splitHere46","UuidConverter"
"7731splitHere46","9595324splitHere46","UuidConverter"
"7732splitHere46","9595324splitHere46","com.foo.bar"
"7733splitHere46","9595324splitHere46","com.foo.bar.UuidConverter.parse"
"7734splitHere46","9595324splitHere46","com.foo.bar.UuidConverter.print"
"7735splitHere46","9595324splitHere46","<!-- Modify the schema location to be a path or url --><newline46mondego><jxb:bindings version=<doubleQuotes46>1.0<doubleQuotes46><newline46mondego>              xmlns:jxb=<doubleQuotes46>http://java.sun.com/xml/ns/jaxb<doubleQuotes46><newline46mondego>              xmlns:xs=<doubleQuotes46>http://www.w3.org/2001/XMLSchema<doubleQuotes46><newline46mondego>              node=<doubleQuotes46>/xs:schema<doubleQuotes46><newline46mondego>              schemaLocation=<doubleQuotes46>example.xsd<doubleQuotes46>><newline46mondego>    <!-- Modify this XPATH to suit your needs! --><newline46mondego>    <jxb:bindings node=<doubleQuotes46>//xs:simpleType[@name='uuid-type']<doubleQuotes46>><newline46mondego>        <jxb:javaType name=<doubleQuotes46> java.util.UUID<doubleQuotes46><newline46mondego>                      parseMethod=<doubleQuotes46>UuidConverter.parse<doubleQuotes46><newline46mondego>                      printMethod=<doubleQuotes46>UuidConverter.print<doubleQuotes46>/><newline46mondego>    </jxb:bindings><newline46mondego></jxb:bindings> <newline46mondego>"
"7736splitHere46","9595324splitHere46","import java.util.UUID;<newline46mondego><newline46mondego>public class UuidConverter {<newline46mondego>    public static UUID parse(String xmlValue) {<newline46mondego>        return UUID.fromString(xmlValue);<newline46mondego>    }<newline46mondego><newline46mondego>    public static String print(UUID value) {<newline46mondego>        return value.toString();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7737splitHere46","9595567splitHere46","slider1"
"7738splitHere46","9595567splitHere46","test()"
"7739splitHere46","9595567splitHere46","slider1.setMajorTickSpacing( 5 );<newline46mondego>slider1.setPaintLabels( true );<newline46mondego>"
"7740splitHere46","9595567splitHere46","add()"
"7741splitHere46","9595567splitHere46","getContentPane().add()"
"7742splitHere46","9595567splitHere46","public test2()<newline46mondego>{<newline46mondego>    slider1 = new JSlider(JSlider.VERTICAL, 0, 50, 0);<newline46mondego>    setLayout(new FlowLayout(FlowLayout.TRAILING));<newline46mondego>    slider1.setMajorTickSpacing( 5 );<newline46mondego>    slider1.setPaintLabels( true );<newline46mondego>    this.getContentPane().add(slider1);<newline46mondego>}<newline46mondego>"
"7743splitHere46","9595567splitHere46","changeValue()"
"7744splitHere46","9595567splitHere46","main()"
"7745splitHere46","9595567splitHere46","changeValue()"
"7746splitHere46","9595567splitHere46","setValue()"
"7747splitHere46","9595567splitHere46","public void changeValue (int newValue) <newline46mondego>{<newline46mondego>    slider1.setValue(newValue);<newline46mondego>}<newline46mondego>"
"7748splitHere46","9595567splitHere46","test2 gui = new test2();<newline46mondego>gui.changeValue( 25 );<newline46mondego>"
"7749splitHere46","9595567splitHere46","ActionListener"
"7750splitHere46","9595567splitHere46","button.addActionListener(new ActionListener() {<newline46mondego>    public void actionPerformed(ActionEvent arg0) {<newline46mondego>        changeValue( 25 ); // change 25 to desired value.<newline46mondego>    }   <newline46mondego>});<newline46mondego>"
"7751splitHere46","9595839splitHere46","id = (String) m.invoke(adminTask, new Object[]{ new Object[] {<doubleQuotes46>a<doubleQuotes46>, <doubleQuotes46>b<doubleQuotes46>, <doubleQuotes46>c<doubleQuotes46>} });<newline46mondego>"
"7752splitHere46","9596018splitHere46","null"
"7753splitHere46","9596018splitHere46","String str = null;<newline46mondego>int number = 0;<newline46mondego>try<newline46mondego>{<newline46mondego>    number = Integer.parseInt( str );<newline46mondego>}<newline46mondego>catch ( Exception e )<newline46mondego>{<newline46mondego>    number = 0;<newline46mondego>}<newline46mondego>"
"7754splitHere46","9596073splitHere46","dependency"
"7755splitHere46","9596073splitHere46","war"
"7756splitHere46","9596151splitHere46","public class StoreListActivity extends Activity {<newline46mondego>    private List<Store> mStores;<newline46mondego>    private StoreAdapter mStoreAdapter;<newline46mondego>    private ListView mListView;<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void onCreate(Bundle savedInstanceState) {<newline46mondego>        super.onCreate(savedInstanceState);<newline46mondego>        setContentView(R.layout.store_list);<newline46mondego>        mListView = (ListView) findViewById(R.id.store_listview);<newline46mondego><newline46mondego>            mStores = getTheStoresFromSomewhere();<newline46mondego>        mStoreAdapter = new StoreAdapter(this, mStores);<newline46mondego>        mListView.setAdapter(mStoreAdapter);<newline46mondego>    }<newline46mondego>"
"7757splitHere46","9596183splitHere46","String provider;<newline46mondego>    public double latitude, longitude = 0;<newline46mondego>    CurrentPositionTask getCurrentLocation;<newline46mondego>    Location currentLocation;<newline46mondego>    LocationListener locationListener;<newline46mondego>    LocationManager locationManager;<newline46mondego>    private long time=0;<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void onCreate(Bundle savedInstanceState) {<newline46mondego>        super.onCreate(savedInstanceState);<newline46mondego>        setContentView(R.layout.main);<newline46mondego><newline46mondego>        try {<newline46mondego>            locationManager = (LocationManager) getSystemService(Context.LOCATION_SERVICE);<newline46mondego>            setCriteria();<newline46mondego>            currentLocation = AndroidLocationActivity.this.locationManager.getLastKnownLocation(provider);<newline46mondego><newline46mondego>            if (currentLocation == null) {<newline46mondego>                currentLocation = new Location(provider);<newline46mondego>            }<newline46mondego>            time = currentLocation.getTime();<newline46mondego><newline46mondego>            if (latitude == 0 && longitude == 0) {<newline46mondego>                latitude = currentLocation.getLatitude();<newline46mondego>                longitude = currentLocation.getLongitude();    <newline46mondego>            }<newline46mondego>            Toast.makeText(AndroidLocationActivity.this, String.valueOf(time), Toast.LENGTH_LONG).show();<newline46mondego>"
"7758splitHere46","9596183splitHere46","if (time >= 100000) {<newline46mondego>                latitude = 0;<newline46mondego>                longitude = 0;<newline46mondego>            }<newline46mondego>        } catch (NullPointerException e) {<newline46mondego>            // TODO: handle exception<newline46mondego>            System.out.println(<doubleQuotes46>Null<doubleQuotes46>);<newline46mondego>            e.printStackTrace();<newline46mondego>        } <newline46mondego>        catch (Exception e) {<newline46mondego>            // TODO: handle exception<newline46mondego>            e.printStackTrace();<newline46mondego>        }<newline46mondego><newline46mondego>        runAsyncTask();    <newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void onDestroy() {<newline46mondego>        // TODO Auto-generated method stub<newline46mondego>        super.onDestroy();<newline46mondego>        locationManager.removeUpdates(locationListener);<newline46mondego>    }<newline46mondego><newline46mondego>    public void setCriteria() {<newline46mondego>        Criteria criteria = new Criteria();<newline46mondego>        criteria.setAccuracy(Criteria.ACCURACY_FINE);<newline46mondego>        criteria.setAltitudeRequired(false);<newline46mondego>        criteria.setBearingRequired(false);<newline46mondego>        criteria.setCostAllowed(true);<newline46mondego>        criteria.setPowerRequirement(Criteria.POWER_MEDIUM);<newline46mondego>        provider = locationManager.getBestProvider(criteria, true);<newline46mondego>        Toast.makeText(getApplicationContext(), <doubleQuotes46>Provider - <doubleQuotes46> + provider, Toast.LENGTH_SHORT).show();<newline46mondego>        if (provider == null) {<newline46mondego>            provider = LocationManager.GPS_PROVIDER;<newline46mondego>        }<newline46mondego>    }    <newline46mondego><newline46mondego><newline46mondego>    public void runAsyncTask() {<newline46mondego>        // TODO Auto-generated method stub<newline46mondego>        if (getCurrentLocation == null) {<newline46mondego>            getCurrentLocation = new CurrentPositionTask();    <newline46mondego>        }<newline46mondego><newline46mondego>        if (getCurrentLocation != null) {<newline46mondego>            getCurrentLocation.execute(<doubleQuotes46>Searching for Location<doubleQuotes46>);    <newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public boolean checkConnection()<newline46mondego>    {<newline46mondego>        //ARE WE CONNECTED TO THE NET<newline46mondego><newline46mondego>        ConnectivityManager conMgr = (ConnectivityManager) getSystemService (AndroidLocationActivity.CONNECTIVITY_SERVICE);<newline46mondego>        if (conMgr.getActiveNetworkInfo() != null && conMgr.getActiveNetworkInfo().isAvailable()&& conMgr.getActiveNetworkInfo().isConnected()) {<newline46mondego>            return true;<newline46mondego>        } else {<newline46mondego>            return false;<newline46mondego>        }<newline46mondego>    } <newline46mondego><newline46mondego><newline46mondego>    private class CurrentPositionTask extends AsyncTask<String, Void, Void><newline46mondego>    {<newline46mondego>        private ProgressDialog Dialog = new ProgressDialog(AndroidLocationActivity.this);<newline46mondego>        private boolean flag = true;<newline46mondego><newline46mondego>        public CurrentPositionTask() {<newline46mondego>            locationListener = new MyLocationListener();<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        protected void onPreExecute() {<newline46mondego>            // TODO Auto-generated method stub<newline46mondego>            super.onPreExecute();<newline46mondego>            try {<newline46mondego>                if (checkConnection()) {<newline46mondego>                    Dialog.setTitle(<doubleQuotes46>Loading<doubleQuotes46>);<newline46mondego>                    Dialog.setMessage(<doubleQuotes46>Searching for Location<doubleQuotes46>);<newline46mondego>                    Dialog.show();<newline46mondego>                    locationManager.requestLocationUpdates(provider, 0, 0, locationListener);<newline46mondego>                }<newline46mondego>                else {<newline46mondego>                    Toast.makeText(getApplicationContext(), <doubleQuotes46>Internet is Not Available<doubleQuotes46>, Toast.LENGTH_LONG).show();<newline46mondego>                }    <newline46mondego>            } catch (Exception e) {<newline46mondego>                // TODO: handle exception<newline46mondego>                e.printStackTrace();<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        protected Void doInBackground(String... params) {<newline46mondego>            // TODO Auto-generated method stub<newline46mondego>            while (flag) {<newline46mondego>                if (latitude !=0 && longitude != 0) {<newline46mondego>                    flag=false;<newline46mondego>                }<newline46mondego>            }<newline46mondego>            return null;<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        protected void onPostExecute(Void result) {<newline46mondego>            // TODO Auto-generated method stub<newline46mondego>            Toast.makeText(AndroidLocationActivity.this, <doubleQuotes46>Location Floats:- <doubleQuotes46> + latitude + <doubleQuotes46>,<doubleQuotes46> + longitude, Toast.LENGTH_LONG).show();<newline46mondego><newline46mondego>            super.onPostExecute(result);<newline46mondego>            if (Dialog != null && Dialog.isShowing()) {<newline46mondego>                Dialog.dismiss();<newline46mondego>                time=0;<newline46mondego>                Intent homeIntent = new Intent(AndroidLocationActivity.this.getApplicationContext(), HomeMenuActivity.class);<newline46mondego>"
"7759splitHere46","9596183splitHere46","homeIntent.putExtra(<doubleQuotes46>lat<doubleQuotes46>, latitude);<newline46mondego>    homeIntent.putExtra(<doubleQuotes46>lng<doubleQuotes46>, longitude);<newline46mondego>            startActivity(homeIntent);<newline46mondego>            }<newline46mondego>            locationManager.removeUpdates(locationListener);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    class MyLocationListener implements LocationListener {<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void onLocationChanged(Location location) {<newline46mondego>            // TODO Auto-generated method stub<newline46mondego>            if (location != null) {<newline46mondego>                latitude = location.getLatitude();<newline46mondego>                longitude = location.getLongitude();    <newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void onProviderDisabled(String arg0) {<newline46mondego>            // TODO Auto-generated method stub<newline46mondego>            Toast.makeText( getApplicationContext(),<doubleQuotes46>Gps Disabled<doubleQuotes46>,Toast.LENGTH_SHORT).show();<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void onProviderEnabled(String arg0) {<newline46mondego>            // TODO Auto-generated method stub<newline46mondego>            Toast.makeText( getApplicationContext(),<doubleQuotes46>Gps Enabled<doubleQuotes46>,Toast.LENGTH_SHORT).show();<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void onStatusChanged(String arg0, int arg1, Bundle arg2) {<newline46mondego>            // TODO Auto-generated method stub<newline46mondego>        }<newline46mondego>    } <newline46mondego>"
"7760splitHere46","9596183splitHere46","public static Context context;<newline46mondego>onCreate(..) {<newline46mondego>    context = getApplicationContext(); // it will be used in Itemized Overlay<newline46mondego>     latitude = getIntent().getDoubleExtra(<doubleQuotes46>lat<doubleQuotes46>, 0);//get the lat & lng<newline46mondego>     longitude = getIntent().getDoubleExtra(<doubleQuotes46>lng<doubleQuotes46>, 0);<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>public void showMap() {<newline46mondego><newline46mondego>    // TODO Auto-generated method stub<newline46mondego>    try {<newline46mondego><newline46mondego>        geoPoint = new GeoPoint((int)(latitude * 1E6),(int)(longitude * 1E6));<newline46mondego><newline46mondego>        mapview = (MapView)findViewById(R.id.mapview);<newline46mondego><newline46mondego>        mapControll= mapview.getController();<newline46mondego><newline46mondego>        mapview.setBuiltInZoomControls(true);<newline46mondego><newline46mondego>        mapview.setStreetView(true);<newline46mondego><newline46mondego>        mapview.setTraffic(true);<newline46mondego><newline46mondego>        mapControll.setZoom(16);<newline46mondego><newline46mondego>        mapControll.animateTo(geoPoint);<newline46mondego><newline46mondego><newline46mondego><newline46mondego>        userPic = this.getResources().getDrawable(your pic....);<newline46mondego><newline46mondego>        userPicOverlay = new MyItemizedOverlay(userPic);<newline46mondego><newline46mondego>        OverlayItem overlayItem = new OverlayItem(geoPoint, <doubleQuotes46><doubleQuotes46>, null);<newline46mondego><newline46mondego>        userPicOverlay.addOverlay(overlayItem);<newline46mondego><newline46mondego>        mapview.getOverlays().add(userPicOverlay);<newline46mondego>        //Added symbols will be displayed when map is redrawn so force redraw now<newline46mondego><newline46mondego>        mapview.postInvalidate();<newline46mondego><newline46mondego>    } catch (Exception e) {<newline46mondego><newline46mondego>        // TODO: handle exception<newline46mondego><newline46mondego>        e.printStackTrace();<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"7761splitHere46","9596183splitHere46","public class MyItemizedOverlay extends ItemizedOverlay<OverlayItem> {<newline46mondego><newline46mondego><newline46mondego><newline46mondego>    private ArrayList<OverlayItem> myOverlays ;<newline46mondego><newline46mondego><newline46mondego><newline46mondego>    public MyItemizedOverlay(Drawable defaultMarker) {<newline46mondego><newline46mondego>        super(boundCenterBottom(defaultMarker));<newline46mondego><newline46mondego>        myOverlays = new ArrayList<OverlayItem>();<newline46mondego><newline46mondego>        populate();<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego><newline46mondego>    public void addOverlay(OverlayItem overlay){<newline46mondego><newline46mondego>        myOverlays.add(overlay);<newline46mondego><newline46mondego>        populate();<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego><newline46mondego>    @Override<newline46mondego><newline46mondego>    protected OverlayItem createItem(int i) {<newline46mondego><newline46mondego>        return myOverlays.get(i);<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego><newline46mondego>    // Removes overlay item i<newline46mondego><newline46mondego>    public void removeItem(int i){<newline46mondego><newline46mondego>        myOverlays.remove(i);<newline46mondego><newline46mondego>        populate();<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego><newline46mondego>    // Returns present number of items in list<newline46mondego><newline46mondego>    @Override<newline46mondego><newline46mondego>    public int size() {<newline46mondego><newline46mondego>        return myOverlays.size();<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego><newline46mondego><newline46mondego><newline46mondego>    public void addOverlayItem(OverlayItem overlayItem) {<newline46mondego><newline46mondego>        myOverlays.add(overlayItem);<newline46mondego><newline46mondego>        populate();<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego><newline46mondego><newline46mondego><newline46mondego>    public void addOverlayItem(int lat, int lon, String title) {<newline46mondego><newline46mondego>        try {<newline46mondego><newline46mondego>            GeoPoint point = new GeoPoint(lat, lon);<newline46mondego><newline46mondego>            OverlayItem overlayItem = new OverlayItem(point, title, null);<newline46mondego><newline46mondego>            addOverlayItem(overlayItem);    <newline46mondego><newline46mondego>        } catch (Exception e) {<newline46mondego><newline46mondego>            // TODO: handle exception<newline46mondego><newline46mondego>            e.printStackTrace();<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego><newline46mondego>    @Override<newline46mondego><newline46mondego>    protected boolean onTap(int index) {<newline46mondego><newline46mondego>        // TODO Auto-generated method stub<newline46mondego><newline46mondego>        String title = myOverlays.get(index).getTitle();<newline46mondego><newline46mondego>        Toast.makeText(HomeMenuActivity.context, title, Toast.LENGTH_LONG).show();<newline46mondego><newline46mondego>        return super.onTap(index);<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"7762splitHere46","9596265splitHere46","Connection conn = DriverManager.getConnection(<doubleQuotes46>jdbc:mysql://localhost:3306/db<doubleQuotes46>, <doubleQuotes46>user<doubleQuotes46>,<doubleQuotes46>****<doubleQuotes46>);<newline46mondego>DatabaseMetaData metaData = conn.getMetaData();<newline46mondego>"
"7763splitHere46","9596400splitHere46","/**<newline46mondego> * @return true if the external storage is mounted or read only.<newline46mondego> */<newline46mondego>public static boolean isExternalStorageReadable() {<newline46mondego>    String state = Environment.getExternalStorageState();<newline46mondego>    return Environment.MEDIA_MOUNTED.equals(state) || Environment.MEDIA_MOUNTED_READ_ONLY.equals(state);<newline46mondego>}<newline46mondego><newline46mondego>/**<newline46mondego> * @return true if the external storage is mounted and writable.<newline46mondego> */<newline46mondego>public static boolean isExternalStorageWritable() {<newline46mondego>    String state = Environment.getExternalStorageState();<newline46mondego>    return Environment.MEDIA_MOUNTED.equals(state);<newline46mondego>}<newline46mondego>"
"7764splitHere46","9596400splitHere46","/**<newline46mondego> * @return the amount of free space on the external storage.<newline46mondego> */<newline46mondego>public static long getAvailableExternalMemorySize() {<newline46mondego>    File path = Environment.getExternalStorageDirectory();<newline46mondego>    StatFs stat = new StatFs(path.getPath());<newline46mondego>    long blockSize = stat.getBlockSize();<newline46mondego>    long availableBlocks = stat.getAvailableBlocks();<newline46mondego>    return availableBlocks * blockSize;<newline46mondego>}<newline46mondego>"
"7765splitHere46","9596400splitHere46","/**<newline46mondego> * @return true if the external storage is available, writable, <newline46mondego> * and contains enough free space.<newline46mondego> */<newline46mondego>public static boolean isExternalStorageAvailable() {<newline46mondego>    if (!isExternalStorageWritable()) return false;<newline46mondego>    long availableSize = getAvailableExternalMemorySize();<newline46mondego>    if (availableSize < REQUIRED_STORAGE_SPACE) {<newline46mondego>        return false;<newline46mondego>    }<newline46mondego>    return true;<newline46mondego>}<newline46mondego>"
"7766splitHere46","9596400splitHere46","REQUIRED_STORAGE_SPACE"
"7767splitHere46","9596400splitHere46","/**<newline46mondego> * @return the File from the given filename.<newline46mondego> */<newline46mondego>public static File getImageFile(String filename) {<newline46mondego>    if (!isExternalStorageReadable()) return null;<newline46mondego>    // The images folder path.<newline46mondego>    String imagesFolder = Environment.getExternalStorageDirectory().getPath()<newline46mondego>                          + <doubleQuotes46>Android/data/your.app.package/images/<doubleQuotes46>;<newline46mondego>    // Creating the file.<newline46mondego>    File file = new File(imagesFolder + filename);        <newline46mondego>    return file;<newline46mondego>}<newline46mondego><newline46mondego>/**<newline46mondego> * Write the contents of the HTTP entity to the external <newline46mondego> * storage if available and writable.<newline46mondego> */<newline46mondego>public static boolean storeImage(HttpEntity entity, String filename) throws IOException     {<newline46mondego>    if (isExternalStorageAvailable()) {<newline46mondego>        File file = getImageFile(filename);<newline46mondego>        if (file == null) return false;<newline46mondego>        // Write to file output stream.<newline46mondego>        FileOutputStream os = new FileOutputStream(file);<newline46mondego>        entity.writeTo(os);<newline46mondego>        os.close();<newline46mondego>        return true;<newline46mondego>    }<newline46mondego>    return false;<newline46mondego>}<newline46mondego>"
"7768splitHere46","9596400splitHere46","ImageHelper"
"7769splitHere46","9596409splitHere46","[a-zA-Z_0-9][a-zA-Z_0-9 ]*"
"7770splitHere46","9596431splitHere46","BufferedReader"
"7771splitHere46","9596431splitHere46","BufferedReader"
"7772splitHere46","9596431splitHere46","readLine()"
"7773splitHere46","9596431splitHere46","1"
"7774splitHere46","9596620splitHere46","// create a filechooser;<newline46mondego>            JFileChooser chooser = new JFileChooser(cwd);<newline46mondego>            FileNameExtensionFilter xmlfilter = new FileNameExtensionFilter(<newline46mondego>                <doubleQuotes46>xml files (*.xml)<doubleQuotes46>, <doubleQuotes46>xml<doubleQuotes46>));<newline46mondego>            chooser.setFileFilter(xmlfilter);<newline46mondego>            chooser.setDialogTitle(<doubleQuotes46>Open schedule file<doubleQuotes46>);<newline46mondego> // set selected filter<newline46mondego>        chooser.setFileFilter(xmlfilter);<newline46mondego>"
"7775splitHere46","9596655splitHere46","String yourAccountTypeInString;<newline46mondego>               if (myAccount.accountType == yourAccountType)<newline46mondego>                   yourAccountTypeInString= <doubleQuotes46>theStringOfAccountType<doubleQuotes46>;<newline46mondego>         // use else if <newline46mondego><newline46mondego>               int pos = typeOfAccountAdapter.getPosition(yourAccountTypeInString);<newline46mondego>               typeOfAccount.setSelection(pos);<newline46mondego>"
"7776splitHere46","9596809splitHere46","the return value is constrained to the range [0,PI]."
"7777splitHere46","9596809splitHere46","if(point.getX()<100){<newline46mondego>            angle=(Math.PI*2-angle);<newline46mondego>}<newline46mondego>"
"7778splitHere46","9596809splitHere46","Math"
"7779splitHere46","9596809splitHere46","Point procket=new Point(100,100);<newline46mondego>angle=(Math.atan2( point.getY()-procket.getY(), point.getX()-procket.getX())+(Math.PI/2));<newline46mondego>"
"7780splitHere46","9596809splitHere46","point"
"7781splitHere46","9596966splitHere46","<plugin><newline46mondego>         <groupId>org.apache.maven.plugins</groupId><newline46mondego>         <artifactId>maven-dependency-plugin</artifactId><newline46mondego>         <version>2.4</version><newline46mondego>         <executions><newline46mondego>           <execution><newline46mondego>             <id>unpack</id><newline46mondego>             <phase>package</phase><newline46mondego>             <goals><newline46mondego>               <goal>unpack</goal><newline46mondego>             </goals><newline46mondego>             <configuration><newline46mondego>               <artifactItems><newline46mondego>                 <artifactItem><newline46mondego>                   <groupId>com.example</groupId><newline46mondego>                   <artifactId>webapp-common</artifactId><newline46mondego>                   <version>1.0-SNAPSHOT</version><newline46mondego>                   <outputDirectory>[target jsp directory]</outputDirectory><newline46mondego>                   <includes>**/*.jsp</includes><newline46mondego>                 </artifactItem><newline46mondego>               </artifactItems><newline46mondego>             </configuration><newline46mondego>           </execution><newline46mondego>         </executions><newline46mondego>       </plugin><newline46mondego>"
"7782splitHere46","9597020splitHere46","call(void Point.setX(int))<newline46mondego>"
"7783splitHere46","9597020splitHere46","Point.setX(int)"
"7784splitHere46","9597020splitHere46","Point"
"7785splitHere46","9597020splitHere46","void setX"
"7786splitHere46","9597020splitHere46","int"
"7787splitHere46","9597160splitHere46","if (a == null) {<newline46mondego>    return b == null ? 0 : -1;<newline46mondego>} else if (b == null) {<newline46mondego>    return 1;<newline46mondego>} else <newline46mondego>"
"7788splitHere46","9597160splitHere46","null"
"7789splitHere46","9597160splitHere46","Double"
"7790splitHere46","9597160splitHere46","if ((a==null) || (b==null)) {return -1;}<newline46mondego>"
"7791splitHere46","9597160splitHere46","null < 1.0  AND 1.0 < null<newline46mondego><newline46mondego>null < null<newline46mondego>"
"7792splitHere46","9597160splitHere46","compare"
"7793splitHere46","9597220splitHere46","false"
"7794splitHere46","9597220splitHere46","equals"
"7795splitHere46","9597220splitHere46","null"
"7796splitHere46","9597220splitHere46","public boolean equals(Node<T> root1, Node<T> root2) {<newline46mondego>    // Shortcut for reference equality; also handles equals(null, null)<newline46mondego>    if (root1 == root2) {<newline46mondego>        return true;<newline46mondego>    }<newline46mondego>    if (root1 == null || root2 == null) {<newline46mondego>        return false;<newline46mondego>    }<newline46mondego>    return root1.getData().equals(root2.getData()) &&<newline46mondego>           equals(root1.getLeft(), root2.getLeft()) &&<newline46mondego>           equals(root1.getRight(), root2.getRight());<newline46mondego>} <newline46mondego>"
"7797splitHere46","9597220splitHere46","root1.getData()"
"7798splitHere46","9597220splitHere46","null"
"7799splitHere46","9597250splitHere46","Workbook.write(java.io.OutputStream)"
"7800splitHere46","9597295splitHere46","Intent i = new Intent(this, ChatActivity.class);<newline46mondego>i.putExtra(<doubleQuotes46>value<doubleQuotes46>, <doubleQuotes46>This value one for ChatActivity <doubleQuotes46>);<newline46mondego>startActivity(Intent)<newline46mondego>"
"7801splitHere46","9597295splitHere46","Bundle extras = getIntent().getExtras();<newline46mondego>if (extras == null) {<newline46mondego>        return;<newline46mondego>        }<newline46mondego>// Get data via the key<newline46mondego>String value = extras.getString(Intent.EXTRA_TEXT);<newline46mondego>if (value != null) {<newline46mondego>    setAttr(value)<newline46mondego>}<newline46mondego>"
"7802splitHere46","9597295splitHere46","welcome = (TextView)findViewById(R.id.txtWelcome)"
"7803splitHere46","9597295splitHere46","this.setContentView(<layout>)<newline46mondego>"
"7804splitHere46","9597445splitHere46","&"
"7805splitHere46","9597520splitHere46","jar"
"7806splitHere46","9597520splitHere46","jar cvf classes.jar .*.class"
"7807splitHere46","9597520splitHere46","jar"
"7808splitHere46","9597520splitHere46","jar"
"7809splitHere46","9597573splitHere46","Archive for required library: 'lib/powermock-mockito-junit-1.4.11 4/powermock-release-junit-without-mock-framework-1.4.11.pom' in project 'Test' cannot be read or is not a valid ZIP file  Test        Build path  Build Path Problem<newline46mondego>Archive for required library: 'lib/powermock-mockito-junit-1.4.11 4/powermock-release-without-test-and-mock-framework-1.4.11.pom' in project 'Test' cannot be read or is not a valid ZIP file   Test        Build path  Build Path Problem<newline46mondego>"
"7810splitHere46","9597589splitHere46","hashCode"
"7811splitHere46","9597589splitHere46","int"
"7812splitHere46","9597589splitHere46","String"
"7813splitHere46","9597589splitHere46","1..k"
"7814splitHere46","9597589splitHere46","String hi = <doubleQuotes46>Hello<doubleQuotes46>;<newline46mondego>int hash = (hi.hashCode() % K) + 1;<newline46mondego>"
"7815splitHere46","9597746splitHere46","public class Executor_Demo {<newline46mondego>    public static void main(String... arg) throws ExecutionException, InterruptedException {<newline46mondego>        int nThreads = 5100;<newline46mondego>        ExecutorService executor = Executors.newFixedThreadPool(nThreads, new DaemonThreadFactory());<newline46mondego><newline46mondego>        List<Future<Results>> futures = new ArrayList<Future<Results>>();<newline46mondego>        for (int i = 0; i < nThreads; i++) {<newline46mondego>            futures.add(executor.submit(new BackgroundCallable()));<newline46mondego>        }<newline46mondego>        Results result = new Results();<newline46mondego>        for (Future<Results> future : futures) {<newline46mondego>            result.merge(future.get());<newline46mondego>        }<newline46mondego>        executor.shutdown();<newline46mondego><newline46mondego>        result.print(System.out);<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    static class Results {<newline46mondego>        private long cpuTime;<newline46mondego>        private long userTime;<newline46mondego><newline46mondego>        Results() {<newline46mondego>            final ThreadMXBean tb = ManagementFactory.getThreadMXBean();<newline46mondego>            cpuTime = tb.getCurrentThreadCpuTime();<newline46mondego>            userTime = tb.getCurrentThreadUserTime();<newline46mondego>        }<newline46mondego><newline46mondego><newline46mondego>        public void merge(Results results) {<newline46mondego>            cpuTime += results.cpuTime;<newline46mondego>            userTime += results.userTime;<newline46mondego>        }<newline46mondego><newline46mondego>        public void print(PrintStream out) {<newline46mondego>            ThreadMXBean tb = ManagementFactory.getThreadMXBean();<newline46mondego><newline46mondego>            List<MemoryPoolMXBean> pools = ManagementFactory.getMemoryPoolMXBeans();<newline46mondego>            for (int i = 0, poolsSize = pools.size(); i < poolsSize; i++) {<newline46mondego>                MemoryPoolMXBean pool = pools.get(i);<newline46mondego>                MemoryUsage peak = pool.getPeakUsage();<newline46mondego>                out.format(<doubleQuotes46>Peak %s memory used:\t%,d%n<doubleQuotes46>, pool.getName(), peak.getUsed());<newline46mondego>                out.format(<doubleQuotes46>Peak %s memory reserved:\t%,d%n<doubleQuotes46>, pool.getName(), peak.getCommitted());<newline46mondego>            }<newline46mondego><newline46mondego>            out.println(<doubleQuotes46>Total thread CPU time\t<doubleQuotes46> + cpuTime);<newline46mondego>            out.println(<doubleQuotes46>Total thread user time\t<doubleQuotes46> + userTime);<newline46mondego>            out.println(<doubleQuotes46>Total started thread count\t<doubleQuotes46> + tb.getTotalStartedThreadCount());<newline46mondego>            out.println(<doubleQuotes46>Current Thread Count\t<doubleQuotes46> + tb.getThreadCount());<newline46mondego>            out.println(<doubleQuotes46>Peak Thread Count\t<doubleQuotes46> + tb.getPeakThreadCount());<newline46mondego>            out.println(<doubleQuotes46>Daemon Thread Count\t<doubleQuotes46> + tb.getDaemonThreadCount());<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    static class DaemonThreadFactory implements ThreadFactory {<newline46mondego>        @Override<newline46mondego>        public Thread newThread(Runnable r) {<newline46mondego>            Thread t = new Thread(r);<newline46mondego>            t.setDaemon(true);<newline46mondego>            return t;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    static class BackgroundCallable implements Callable<Results> {<newline46mondego>        @Override<newline46mondego>        public Results call() throws Exception {<newline46mondego>            Thread.sleep(100);<newline46mondego>            return new Results();<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7816splitHere46","9597746splitHere46","-XX:MaxNewSize=64m"
"7817splitHere46","9597746splitHere46","100 threads<newline46mondego>Peak Code Cache memory used:    386,880<newline46mondego>Peak Code Cache memory reserved:    2,555,904<newline46mondego>Peak PS Eden Space memory used: 41,280,984<newline46mondego>Peak PS Eden Space memory reserved: 50,331,648<newline46mondego>Peak PS Survivor Space memory used: 0<newline46mondego>Peak PS Survivor Space memory reserved: 8,388,608<newline46mondego>Peak PS Old Gen memory used:    0<newline46mondego>Peak PS Old Gen memory reserved:    192,675,840<newline46mondego>Peak PS Perm Gen memory used:   3,719,616<newline46mondego>Peak PS Perm Gen memory reserved:   21,757,952<newline46mondego>Total thread CPU time   20000000<newline46mondego>Total thread user time  20000000<newline46mondego>Total started thread count  105<newline46mondego>Current Thread Count    93<newline46mondego>Peak Thread Count   105<newline46mondego>Daemon Thread Count 92<newline46mondego><newline46mondego>5100 threads<newline46mondego>Peak Code Cache memory used:    425,728<newline46mondego>Peak Code Cache memory reserved:    2,555,904<newline46mondego>Peak PS Eden Space memory used: 59,244,544<newline46mondego>Peak PS Eden Space memory reserved: 59,244,544<newline46mondego>Peak PS Survivor Space memory used: 2,949,152<newline46mondego>Peak PS Survivor Space memory reserved: 8,388,608<newline46mondego>Peak PS Old Gen memory used:    3,076,400<newline46mondego>Peak PS Old Gen memory reserved:    192,675,840<newline46mondego>Peak PS Perm Gen memory used:   3,787,096<newline46mondego>Peak PS Perm Gen memory reserved:   21,757,952<newline46mondego>Total thread CPU time   810000000<newline46mondego>Total thread user time  150000000<newline46mondego>Total started thread count  5105<newline46mondego>Current Thread Count    5105<newline46mondego>Peak Thread Count   5105<newline46mondego>Daemon Thread Count 5104<newline46mondego>"
"7818splitHere46","9597875splitHere46","OutOfMemoryError"
"7819splitHere46","9597924splitHere46",".product"
"7820splitHere46","9597924splitHere46","Dependencies"
"7821splitHere46","9597924splitHere46","Include optional dependencies"
"7822splitHere46","9597924splitHere46","Add required Plug-ins"
"7823splitHere46","9597957splitHere46","ServletRequest#getServerName()"
"7824splitHere46","9597957splitHere46","public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) <newline46mondego>throws IOException, ServletException {<newline46mondego>    ...<newline46mondego>    [other processing/validations]<newline46mondego>    ...<newline46mondego>    if(request.getServerName().equals(<doubleQuotes46>domain1.com<doubleQuotes46>))<newline46mondego>      request.getRequestDispatcher(<doubleQuotes46>/servlet1<doubleQuotes46>).forward(request, response)<newline46mondego>    else<newline46mondego>      request.getRequestDispatcher(<doubleQuotes46>/servlet2<doubleQuotes46>).forward(request, response)<newline46mondego><newline46mondego>}<newline46mondego>"
"7825splitHere46","9597957splitHere46","<init-param>"
"7826splitHere46","9597957splitHere46","web.xml"
"7827splitHere46","9598016splitHere46","try-catch"
"7828splitHere46","9598035splitHere46","Quartz Scheduler successful shutdown.<newline46mondego>"
"7829splitHere46","9598045splitHere46","import java.io.InputStream;<newline46mondego>import java.io.OutputStream;<newline46mondego><newline46mondego>import javax.microedition.io.Connector;<newline46mondego>import javax.microedition.io.HttpConnection;<newline46mondego><newline46mondego>import net.rim.blackberry.api.browser.URLEncodedPostData;<newline46mondego>import net.rim.device.api.io.http.HttpProtocolConstants;<newline46mondego><newline46mondego>public class HttpPostSample {<newline46mondego>    HttpConnection hc = null;<newline46mondego>    StringBuffer stringBuffer = new StringBuffer();<newline46mondego>    InputStream inputStream;<newline46mondego><newline46mondego>    public HttpPostSample(String url) {<newline46mondego>        try{<newline46mondego>            hc = (HttpConnection)Connector.open(url+<doubleQuotes46>;interface=wifi<doubleQuotes46>);//you have to use connection extension <doubleQuotes46>;interface=wifi<doubleQuotes46> this is only for wifi <newline46mondego>            URLEncodedPostData oPostData = new URLEncodedPostData(URLEncodedPostData.DEFAULT_CHARSET, false);<newline46mondego>            //These are your appending values and tags <newline46mondego>            oPostData.append(<doubleQuotes46>property_id<doubleQuotes46>,<doubleQuotes46>value<doubleQuotes46>);<newline46mondego>            oPostData.append(<doubleQuotes46>property_name<doubleQuotes46>,<doubleQuotes46>value<doubleQuotes46>);<newline46mondego>            oPostData.append(<doubleQuotes46>category<doubleQuotes46>,<doubleQuotes46>value<doubleQuotes46>);<newline46mondego>            oPostData.append(<doubleQuotes46>address<doubleQuotes46>,<doubleQuotes46>value<doubleQuotes46>);<newline46mondego>            oPostData.append(<doubleQuotes46>country<doubleQuotes46>,<doubleQuotes46>value<doubleQuotes46>);<newline46mondego>            hc.setRequestMethod(HttpConnection.POST);<newline46mondego>            hc.setRequestProperty(HttpProtocolConstants.HEADER_CONTENT_TYPE, oPostData.getContentType());<newline46mondego>            byte [] postBytes = oPostData.getBytes();<newline46mondego>            hc.setRequestProperty(HttpProtocolConstants.HEADER_CONTENT_LENGTH, Integer.toString(postBytes.length));<newline46mondego>            OutputStream strmOut = hc.openOutputStream();<newline46mondego>            strmOut.write(postBytes);<newline46mondego>            strmOut.flush();<newline46mondego>            strmOut.close();<newline46mondego><newline46mondego>            String returnMessage = hc.getResponseMessage();<newline46mondego>            System.out.println(<doubleQuotes46>============<doubleQuotes46>+returnMessage);<newline46mondego>            if(hc.getResponseCode()==HttpConnection.HTTP_OK)<newline46mondego>            {<newline46mondego>                inputStream = hc.openInputStream();<newline46mondego>                int c;<newline46mondego>                while((c=inputStream.read())!=-1)<newline46mondego>                {<newline46mondego>                    stringBuffer.append((char)c);<newline46mondego>                }<newline46mondego>                System.out.println(<doubleQuotes46>>>>>>>>>>>>>>>>>><doubleQuotes46>+stringBuffer.toString());<newline46mondego>                parseResults(stringBuffer.toString());<newline46mondego><newline46mondego>            }else{<newline46mondego>                parseResults(<doubleQuotes46>ERROR<doubleQuotes46>);<newline46mondego>            }<newline46mondego><newline46mondego><newline46mondego>        }catch (Exception e) {<newline46mondego>            // TODO: handle exception<newline46mondego>        }<newline46mondego>    }<newline46mondego>    private void parseResults(String response)<newline46mondego>    {<newline46mondego>        if(response.equalsIgnoreCase(<doubleQuotes46>ERROR<doubleQuotes46>))<newline46mondego>        {<newline46mondego>            System.out.println(<doubleQuotes46>Error in Connection please check your internet and Connection extension<doubleQuotes46>);<newline46mondego>        }else{<newline46mondego>            System.out.println(response);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"7830splitHere46","9598045splitHere46","HttpPostSample post=new HttpPostSample(url);<newline46mondego>"
"7831splitHere46","9598201splitHere46","String[] parts = resultString.split(<doubleQuotes46>\n+<doubleQuotes46>);"
"7832splitHere46","9598201splitHere46","\n+"
"7833splitHere46","9598201splitHere46","parts"
"7834splitHere46","9598281splitHere46","Database database=CommandLineUtils.createDatabaseObject(OracleDriver.class.getClassLoader(), <doubleQuotes46>jdbc:oracle:thin:@xxx.xx.xxx.xx:1521:XE<doubleQuotes46>, <doubleQuotes46>archive_dbs<doubleQuotes46>, <doubleQuotes46>123<doubleQuotes46>, <doubleQuotes46>oracle.jdbc.driver.OracleDriver<doubleQuotes46>, <doubleQuotes46>archive_dbs<doubleQuotes46>, null, null);<newline46mondego>    //CommandLineUtils.doGenerateChangeLog(<doubleQuotes46>test.xml<doubleQuotes46>, database, <doubleQuotes46>archive_dbs<doubleQuotes46>, null, null, null, null);uncomment to generate changelog<newline46mondego>    Database database2=CommandLineUtils.createDatabaseObject(OracleDriver.class.getClassLoader(), <doubleQuotes46>jdbc:oracle:thin:@yy.yy.yy.yy:1521:XE<doubleQuotes46>, <doubleQuotes46>archive_dbs<doubleQuotes46>, <doubleQuotes46>123<doubleQuotes46>, <doubleQuotes46>oracle.jdbc.driver.OracleDriver<doubleQuotes46>, <doubleQuotes46>archive_dbs<doubleQuotes46>, null, null);<newline46mondego>   /* CommandLineUtils.doDiffToChangeLog(<doubleQuotes46>chageLog.xml<doubleQuotes46>, database2, database);//This can generate changeLog for diff<newline46mondego>        ResourceAccessor resource=new FileSystemResourceAccessor();<newline46mondego>        File sql=new File(<doubleQuotes46>SQLscript.sql<doubleQuotes46>);<newline46mondego>        FileWriter writer=new FileWriter(sql);<newline46mondego>        Liquibase base=new Liquibase(<doubleQuotes46>chageLog.xml<doubleQuotes46>,resource,database);<newline46mondego>        base.update(<doubleQuotes46>Update<doubleQuotes46>,writer);//store diff sql to file,but donot execute it<newline46mondego>        base.update(<doubleQuotes46>Update<doubleQuotes46>);//execute diff sql*/<newline46mondego>        //CommandLineUtils.doDiff(database2, database);//show diff in console<newline46mondego>   /* DatabaseSnapshot dbsnap1=new DatabaseSnapshot(database,<doubleQuotes46>archive_dbs<doubleQuotes46>);<newline46mondego>    DatabaseSnapshot dbsnap2=new DatabaseSnapshot(database2,<doubleQuotes46>archive_dbs<doubleQuotes46>);*/<newline46mondego>    Diff res=new Diff(database2,database);<newline46mondego>    DiffResult result=res.compare();<newline46mondego>    if(result.differencesFound()){<newline46mondego>        System.out.println(<doubleQuotes46>Different<doubleQuotes46>);<newline46mondego>    }else{<newline46mondego>        System.out.println(<doubleQuotes46>Equal<doubleQuotes46>);<newline46mondego>    }<newline46mondego>    ByteArrayOutputStream baos=new ByteArrayOutputStream();<newline46mondego>    PrintStream stream=new PrintStream(baos);<newline46mondego>    result.printResult(stream);<newline46mondego>    System.out.println(baos.toString());//show diff report<newline46mondego>    System.out.println(<doubleQuotes46>Done<doubleQuotes46>);<newline46mondego>"
"7835splitHere46","9598292splitHere46","<jaxb:bindings version=<doubleQuotes46>2.1<doubleQuotes46> xmlns:wsdl=<doubleQuotes46>http://schemas.xmlsoap.org/wsdl/<doubleQuotes46><newline46mondego>    xmlns:xjc=<doubleQuotes46>http://java.sun.com/xml/ns/jaxb/xjc<doubleQuotes46> xmlns:jaxb=<doubleQuotes46>http://java.sun.com/xml/ns/jaxb<doubleQuotes46><newline46mondego>    xmlns:xs=<doubleQuotes46>http://www.w3.org/2001/XMLSchema<doubleQuotes46> xmlns:com.fnf=<doubleQuotes46>http://www.fnf.com/xes<doubleQuotes46>><newline46mondego>  <jaxb:bindings schemaLocation=<doubleQuotes46>your schema location here<doubleQuotes46> node=<doubleQuotes46>/xs:schema<doubleQuotes46>><newline46mondego>    <jaxb:bindings node=<doubleQuotes46>//XPath selector<doubleQuotes46>><newline46mondego>      <jaxb:property name=<doubleQuotes46>HereIsTheProblem2<doubleQuotes46> /><newline46mondego>    </jaxb:bindings><newline46mondego>  </jaxb:bindings><newline46mondego></jaxb:bindings><newline46mondego>"
"7836splitHere46","9598350splitHere46","DatagramPacket"
"7837splitHere46","9598409splitHere46","public int Sum(int a, int b) {<newline46mondego>    return a + b;<newline46mondego>}<newline46mondego><newline46mondego>public double Sum (double a, double b) {<newline46mondego>    return a + b;<newline46mondego>}<newline46mondego>"
"7838splitHere46","9598409splitHere46","public int Sum(int a, int b) {<newline46mondego>    return Sum(a, b, 0);<newline46mondego>}<newline46mondego><newline46mondego>public int Sum (int a, int b, int c) {<newline46mondego>    return a + b + c;<newline46mondego>}<newline46mondego>"
"7839splitHere46","9598409splitHere46","//Without overloading you'll have to set the properties after instantiating the class<newline46mondego>public MyClass() {<newline46mondego>    this.PropertyOne = <doubleQuotes46>1<doubleQuotes46>;<newline46mondego>    this.PropertyTwo = 2;<newline46mondego>}<newline46mondego><newline46mondego>//usage:<newline46mondego>MyClass instance = new MyClass(); <newline46mondego>//now theproperties are already set to <doubleQuotes46>1<doubleQuotes46> and 2, wheter you like it or not<newline46mondego>//here you change the values<newline46mondego>instance.PropertyOne = <doubleQuotes46>...<doubleQuotes46>;<newline46mondego>instance.PropertyTwo = 0;<newline46mondego><newline46mondego>//With constructor overloading you have this<newline46mondego>public MyClass() {<newline46mondego>    this(<doubleQuotes46>One<doubleQuotes46>, 2);<newline46mondego>}<newline46mondego><newline46mondego>public MyClass(string propOne, int propTwo) {<newline46mondego>    this.PropertyOne = propOne;<newline46mondego>    this.PropertyTwo = propTwo;<newline46mondego>}<newline46mondego><newline46mondego>//usage:<newline46mondego>MyClass instance = new MyClass(<doubleQuotes46>MyValue<doubleQuotes46>, 1000);<newline46mondego>//if you call MyClass() the default values STILL will be set :)<newline46mondego>"
"7840splitHere46","9598580splitHere46","List<List<String>> allTheStrings = new ArrayList<List<String>>();<newline46mondego><newline46mondego>List<String> myStrings = null;<newline46mondego><newline46mondego>// Add a subset<newline46mondego>myStrings = new ArrayList<String>();<newline46mondego>myStrings.add(<doubleQuotes46>something<doubleQuotes46>);<newline46mondego>myStrings.add(<doubleQuotes46>something<doubleQuotes46>);<newline46mondego>myStrings.add(<doubleQuotes46>something<doubleQuotes46>);<newline46mondego>allTheStrings.add(myStrings);<newline46mondego><newline46mondego>// Add another subset<newline46mondego>myStrings = new ArrayList<String>();<newline46mondego>myStrings.add(<doubleQuotes46>something<doubleQuotes46>);<newline46mondego>myStrings.add(<doubleQuotes46>something<doubleQuotes46>);<newline46mondego>myStrings.add(<doubleQuotes46>something<doubleQuotes46>);<newline46mondego>allTheStrings.add(myStrings);<newline46mondego><newline46mondego><newline46mondego>...<newline46mondego><newline46mondego>// Obtain one of the strings<newline46mondego>String str = allTheStrings.get(1).get(2);<newline46mondego>"
"7841splitHere46","9598585splitHere46","HashSet<String> test=new HashSet<String>(Arrays.asList(s.split(<doubleQuotes46>,<doubleQuotes46>)));<newline46mondego>"
"7842splitHere46","9598585splitHere46","Arrays.asList(s.split(<doubleQuotes46>,<doubleQuotes46>))"
"7843splitHere46","9598758splitHere46","02:00"
"7844splitHere46","9598758splitHere46","1979-04-29"
"7845splitHere46","9598758splitHere46","-04:00"
"7846splitHere46","9598909splitHere46","XMLEventWriter"
"7847splitHere46","9598909splitHere46","XMLEventWriter"
"7848splitHere46","9598909splitHere46","XMLStreamReader"
"7849splitHere46","9598909splitHere46","skipSpaces()"
"7850splitHere46","9598909splitHere46","XMLStreamReader"
"7851splitHere46","9598911splitHere46","Set myJavaWindow = JavaWindow(<doubleQuotes46>index:=0<doubleQuotes46>)<newline46mondego>"
"7852splitHere46","9598911splitHere46","Dim myJW, i<newline46mondego>For i = 0 to 1023<newline46mondego>    Set myJW = JavaWindow(<doubleQuotes46>index:=<doubleQuotes46> & i)<newline46mondego>    If not myJW.Exist Then Exit For<newline46mondego><newline46mondego>    msgbox <doubleQuotes46>Text for JavaWindow <doubleQuotes46> & i & <doubleQuotes46>: <doubleQuotes46> & myJW.GetRoProperty(<doubleQuotes46>label<doubleQuotes46>)<newline46mondego>Next<newline46mondego>"
"7853splitHere46","9598911splitHere46","myLabel = <doubleQuotes46>Xyzzy!<doubleQuotes46><newline46mondego>If JavaWindow(<doubleQuotes46>label:=<doubleQuotes46> & myLabel, <doubleQuotes46>index:=0<doubleQuotes46>).exist Then<newline46mondego>    msgbox <doubleQuotes46>Woei! A Javawindow with label '<doubleQuotes46> & myLabel & <doubleQuotes46>' exists!<doubleQuotes46><newline46mondego>End if<newline46mondego>"
"7854splitHere46","9598941splitHere46","@Configuration<newline46mondego>public class Conf {<newline46mondego><newline46mondego>    @Bean<newline46mondego>    public MyObject myObject() {<newline46mondego>        return MyStaticFactory.getObject()<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"7855splitHere46","9598941splitHere46","MyStaticFactory"
"7856splitHere46","9598988splitHere46","Gson"
"7857splitHere46","9598988splitHere46","Gson"
"7858splitHere46","9598988splitHere46","channelSearchEnum[] enums = gson.fromJson(yourJson, channelSearchEnum[].class);<newline46mondego>"
"7859splitHere46","9598988splitHere46","Type collectionType = new TypeToken<Collection<channelSearchEnum>>(){}.getType();<newline46mondego>Collection<channelSearchEnum> enums = gson.fromJson(json, collectionType);<newline46mondego>"
"7860splitHere46","9599173splitHere46","log4j.jar"
"7861splitHere46","9599173splitHere46","tomcat/lib"
"7862splitHere46","9599173splitHere46","log4j.xml"
"7863splitHere46","9599173splitHere46","log4j.properties"
"7864splitHere46","9599173splitHere46","System.out.println()"
"7865splitHere46","9599233splitHere46","Date"
"7866splitHere46","9599233splitHere46","Calendar"
"7867splitHere46","9599233splitHere46","06.01.1980 00:00:00"
"7868splitHere46","9599233splitHere46","getTime()"
"7869splitHere46","9599233splitHere46","Date"
"7870splitHere46","9599233splitHere46","SimpleDateFormatter"
"7871splitHere46","9599284splitHere46","enum"
"7872splitHere46","9599284splitHere46","public static <T> T findByString(T[] values, String toString) {<newline46mondego>    Objects.requireNonNull(toString);<newline46mondego>    for (T t : values) {<newline46mondego>        if (toString.equals(t.toString())) {<newline46mondego>            return t;<newline46mondego>        }<newline46mondego>    }<newline46mondego>    throw new IllegalArgumentException();<newline46mondego>}<newline46mondego>"
"7873splitHere46","9599284splitHere46","Blah blah = SomeClass.findByString(Blah.values(), str);<newline46mondego>"
"7874splitHere46","9599284splitHere46","Blah.values()"
"7875splitHere46","9599284splitHere46","public interface ByString<T> { // Choose a better name.<newline46mondego>    T find(String toString);<newline46mondego>}<newline46mondego>[...]<newline46mondego>    private static final ByString<Blah> blahs = byString(Blah.values());<newline46mondego>[...]<newline46mondego>    public static <T> ByString<T> byString(T[] values) {<newline46mondego>        final T[] valuesCopy = values.clone();<newline46mondego>        return new ByString<T>() {<newline46mondego>            public T find(String toString) {<newline46mondego>                return SomeClass.findByString(valuesCopy, toString);<newline46mondego>            }<newline46mondego>        };<newline46mondego>    }<newline46mondego>[...]<newline46mondego>"
"7876splitHere46","9599284splitHere46","Blah blah = blahs.find(str);<newline46mondego>"
"7877splitHere46","9599284splitHere46","toString"
"7878splitHere46","9599284splitHere46","public static <T> ByString<T> byString(T[] values) {<newline46mondego>        final Map<String,T> byToStrings = new HashMap<>(<newline46mondego>            (int)(values.length/0.75f)+1 // Doesn't HashMap construction suck.<newline46mondego>        );<newline46mondego>        for (T value : values) {<newline46mondego>            byToStrings.put(values.toString(), value);<newline46mondego>        }<newline46mondego>        return new ByString<T>() {<newline46mondego>            public T find(String toString) {<newline46mondego>                T value = byToStrings.get(toString);<newline46mondego>                if (value == null) {<newline46mondego>                    throw new IllegalArgumentException();<newline46mondego>                }<newline46mondego>                return value;<newline46mondego>            }<newline46mondego>        };<newline46mondego>    }<newline46mondego>"
"7879splitHere46","9599370splitHere46","src/main/resources"
"7880splitHere46","9599370splitHere46","getResourceAsStream"
"7881splitHere46","9599492splitHere46","ContextListener"
"7882splitHere46","9599554splitHere46","x"
"7883splitHere46","9599554splitHere46","y"
"7884splitHere46","9599554splitHere46","rho"
"7885splitHere46","9599554splitHere46","theta"
"7886splitHere46","9599554splitHere46","C++"
"7887splitHere46","9599732splitHere46","xpath.toFile().createNewFile(); <newline46mondego>"
"7888splitHere46","9599732splitHere46","xpath.toFile().mkdirs(); <newline46mondego>"
"7889splitHere46","9599732splitHere46","new File(destDir).mkdirs();<newline46mondego>"
"7890splitHere46","9599758splitHere46","public static void main(String[] args) {<newline46mondego>    // TODO Auto-generated method stub<newline46mondego>    Scanner input = new Scanner(System.in);<newline46mondego>    double[] entered = new double[3]; <newline46mondego>    System.out.println(<doubleQuotes46>Enter 3 values to find the maximum:<doubleQuotes46>);<newline46mondego>    for(int i=0;i<3;i++){<newline46mondego>    entered[i] = input.nextDouble();<newline46mondego>    }<newline46mondego>    System.out.println(<doubleQuotes46>Maximum is - <doubleQuotes46> + getMaxValue(entered)); <newline46mondego>}<newline46mondego><newline46mondego>//Find maximum (largest) value in array using loop<newline46mondego>public static double getMaxValue(double[] numbers){<newline46mondego>double maxValue = numbers[0];<newline46mondego>for(int i = 1; i < numbers.length; i++){<newline46mondego>if(numbers[i] > maxValue){<newline46mondego>maxValue = numbers[i]; } } return maxValue;<newline46mondego><newline46mondego>}<newline46mondego>"
"7891splitHere46","9599838splitHere46","b.setA((A)this); // <- Unchecked cast<newline46mondego>"
"7892splitHere46","9599838splitHere46","this"
"7893splitHere46","9599838splitHere46","InterfaceA<? extends InterfaceA.InterfaceB<? extends InterfaceA>>"
"7894splitHere46","9599838splitHere46","InterfaceA<? extends InterfaceA.InterfaceB<? extends InterfaceA<? extends InterfaceA.InterfaceB<...>>>>"
"7895splitHere46","9599838splitHere46","public interface InterfaceA<B extends InterfaceA.InterfaceB<?>> {<newline46mondego><newline46mondego>    public interface InterfaceB<A extends InterfaceA<B>> { //<- cannot make a static reference to the non-static type B<newline46mondego><newline46mondego>        void setA(A a);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7896splitHere46","9599838splitHere46","B"
"7897splitHere46","9599838splitHere46","public interface InterfaceA<B extends InterfaceA.InterfaceB<?>> {<newline46mondego><newline46mondego>    public interface InterfaceB<A extends InterfaceA<? extends InterfaceA.InterfaceB<?>>> {<newline46mondego><newline46mondego>        void setA(A a);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>abstract class AImplTwo<B extends InterfaceA.InterfaceB<A>, A extends InterfaceA<B>> implements InterfaceA<B> {<newline46mondego><newline46mondego>    private final B b;<newline46mondego><newline46mondego>    public AImplTwo(B b) {<newline46mondego>        this.b = b;<newline46mondego>        b.setA((A)this); // <-- Unchecked cast<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7898splitHere46","9599838splitHere46","InterfaceA"
"7899splitHere46","9599838splitHere46","interface InterfaceB<A extends InterfaceA<? extends InterfaceA.InterfaceB<?>>>"
"7900splitHere46","9599838splitHere46","InterfaceA.InterfaceB<?>"
"7901splitHere46","9599838splitHere46","public interface InterfaceA {<newline46mondego><newline46mondego>    public interface InterfaceB {<newline46mondego><newline46mondego>        void setA(InterfaceA a);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7902splitHere46","9599838splitHere46","public interface A<TB extends A.B<?>> {<newline46mondego><newline46mondego>    public interface B<TA extends A<? extends A.B<?>>> {<newline46mondego><newline46mondego>        void setA(TA a);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>class AImplTwo<TB extends A.B<TA>, TA extends AImplTwo<TB, TA> super AImplTwo<TB, TA>> implements A<TB> {<newline46mondego><newline46mondego>    private final TB b;<newline46mondego><newline46mondego>    public AImplTwo(TB b) {<newline46mondego>        this.b = b;<newline46mondego>        b.setA((TA)this);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7903splitHere46","9599878splitHere46","public int hashCode() {<newline46mondego>    return (name + fatherName+ Id + filePath + age + address).hashCode();<newline46mondego>}<newline46mondego><newline46mondego>public boolean equals(Object obj) {<newline46mondego>    return ( hashCode() == obj.hashCode() );<newline46mondego>}<newline46mondego>"
"7904splitHere46","9599909splitHere46","private static <T> JsArray<T> convertListToJsArray(Collection<T> list) {}<newline46mondego>"
"7905splitHere46","9599945splitHere46","Calendar"
"7906splitHere46","9599945splitHere46","private static final DateFormat DEFAULT_DATE_FORMAT;<newline46mondego><newline46mondego>static {<newline46mondego>    DEFAULT_DATE_FORMAT = new SimpleDateFormat(<doubleQuotes46>yyyyMMdd<doubleQuotes46>);<newline46mondego>    DEFAULT_DATE_FORMAT.setLenient(false);<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego><newline46mondego>public Calendar getCalendar(String dateAsString) {<newline46mondego>    Calendar value = Calendar.getInstance();<newline46mondego>    Date d = DEFAULT_DATE_FORMAT.parse(dateAsString);<newline46mondego>    value.setTime(d);<newline46mondego>    return value;<newline46mondego>}<newline46mondego>"
"7907splitHere46","9599945splitHere46","Calendar"
"7908splitHere46","9600089splitHere46","request.getAttribute()"
"7909splitHere46","9600089splitHere46","request.getParameter()"
"7910splitHere46","9600089splitHere46","<%! Vector vNumbers = new Vector();%><newline46mondego>"
"7911splitHere46","9600089splitHere46","vNumbers"
"7912splitHere46","9600089splitHere46","request.setAttribute(<doubleQuotes46>vector<doubleQuotes46>, vNumbers);"
"7913splitHere46","9600089splitHere46","Vector  v = (Vector)request.getAttribute(<doubleQuotes46>vector<doubleQuotes46>);"
"7914splitHere46","9600106splitHere46","nextLine()"
"7915splitHere46","9600106splitHere46","String line;<newline46mondego>if ((line=s.nextLine())!=null && !line.trim().equals(<doubleQuotes46><doubleQuotes46>)){<newline46mondego>    names.add(line);<newline46mondego>}<newline46mondego>"
"7916splitHere46","9600106splitHere46","if (!<doubleQuotes46><doubleQuotes46>.equals(line=s.nextLine()))<newline46mondego>"
"7917splitHere46","9600268splitHere46","import java.io.BufferedReader;<newline46mondego>import java.io.IOException;<newline46mondego>import java.io.InputStreamReader;<newline46mondego>import java.net.MalformedURLException;<newline46mondego>import java.net.URL;<newline46mondego>import java.net.URLEncoder;<newline46mondego><newline46mondego>import org.slf4j.Logger;<newline46mondego><newline46mondego>import com.google.gson.Gson;<newline46mondego>import com.google.gson.JsonIOException;<newline46mondego>import com.google.gson.JsonSyntaxException;<newline46mondego><newline46mondego><newline46mondego>public class GeoCoder {<newline46mondego>    private Gson gson = new Gson();<newline46mondego><newline46mondego>    private volatile long lastRequest = 0L;<newline46mondego><newline46mondego>    public GeocodeResponse getLocation(String... addressElements) throws JsonSyntaxException, JsonIOException, MalformedURLException,<newline46mondego>            IOException {<newline46mondego>        StringBuilder sb = new StringBuilder();<newline46mondego>        for (String string : addressElements) {<newline46mondego>            if (sb.length() > 0) {<newline46mondego>                sb.append('+');<newline46mondego>            }<newline46mondego>            sb.append(URLEncoder.encode(string.replace(' ', '+'), <doubleQuotes46>UTF-8<doubleQuotes46>));<newline46mondego>        }<newline46mondego>        String url = <doubleQuotes46>http://maps.googleapis.com/maps/api/geocode/json?sensor=false&address=<doubleQuotes46> + sb.toString();<newline46mondego>        // Google limits this web service to 2500/day and 10 requests/s<newline46mondego>        synchronized (this) {<newline46mondego>            try {<newline46mondego>                long elapsed = System.currentTimeMillis() - lastRequest;<newline46mondego>                if (elapsed < 100) {<newline46mondego>                    try {<newline46mondego>                        Thread.sleep(100 - elapsed);<newline46mondego>                    } catch (InterruptedException e) {<newline46mondego>                    }<newline46mondego>                }<newline46mondego>                return gson.fromJson(new BufferedReader(new InputStreamReader(new URL(url).openStream())), GeocodeResponse.class);<newline46mondego>            } finally {<newline46mondego>                lastRequest = System.currentTimeMillis();<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7918splitHere46","9600268splitHere46","import java.util.List;<newline46mondego><newline46mondego>public class GeocodeResponse {<newline46mondego><newline46mondego>    public enum Status {<newline46mondego>        OK, ZERO_RESULTS, OVER_QUERY_LIMIT, REQUEST_DENIED, INVALID_REQUEST;<newline46mondego>    }<newline46mondego><newline46mondego>    public static class Result {<newline46mondego><newline46mondego>        public static enum Type {<newline46mondego>            street_address,<newline46mondego>            route,<newline46mondego>            intersection,<newline46mondego>            political,<newline46mondego>            country,<newline46mondego>            administrative_area_level_1,<newline46mondego>            administrative_area_level_2,<newline46mondego>            administrative_area_level_3,<newline46mondego>            colloquial_area,<newline46mondego>            locality,<newline46mondego>            sublocality,<newline46mondego>            neighborhood,<newline46mondego>            premise,<newline46mondego>            subpremise,<newline46mondego>            postal_code,<newline46mondego>            natural_feature,<newline46mondego>            airport,<newline46mondego>            park,<newline46mondego>            point_of_interest,<newline46mondego>            post_box,<newline46mondego>            street_number,<newline46mondego>            floor,<newline46mondego>            room;<newline46mondego>        }<newline46mondego><newline46mondego>        public static class AddressComponent {<newline46mondego><newline46mondego>            private String long_name;<newline46mondego>            private String short_name;<newline46mondego>            private Type[] types;<newline46mondego><newline46mondego>            public String getLong_name() {<newline46mondego>                return long_name;<newline46mondego>            }<newline46mondego><newline46mondego>            public void setLong_name(String long_name) {<newline46mondego>                this.long_name = long_name;<newline46mondego>            }<newline46mondego><newline46mondego>            public String getShort_name() {<newline46mondego>                return short_name;<newline46mondego>            }<newline46mondego><newline46mondego>            public void setShort_name(String short_name) {<newline46mondego>                this.short_name = short_name;<newline46mondego>            }<newline46mondego><newline46mondego>            public Type[] getTypes() {<newline46mondego>                return types;<newline46mondego>            }<newline46mondego><newline46mondego>            public void setTypes(Type[] types) {<newline46mondego>                this.types = types;<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        private String formatted_address;<newline46mondego>        private List<AddressComponent> address_components;<newline46mondego>        private Geometry geometry;<newline46mondego>        private Type[] types;<newline46mondego><newline46mondego>        public Type[] getTypes() {<newline46mondego>            return types;<newline46mondego>        }<newline46mondego><newline46mondego>        public void setTypes(Type[] types) {<newline46mondego>            this.types = types;<newline46mondego>        }<newline46mondego><newline46mondego>        public String getFormatted_address() {<newline46mondego>            return formatted_address;<newline46mondego>        }<newline46mondego><newline46mondego>        public void setFormatted_address(String formatted_address) {<newline46mondego>            this.formatted_address = formatted_address;<newline46mondego>        }<newline46mondego><newline46mondego>        public List<AddressComponent> getAddress_components() {<newline46mondego>            return address_components;<newline46mondego>        }<newline46mondego><newline46mondego>        public void setAddress_components(List<AddressComponent> address_components) {<newline46mondego>            this.address_components = address_components;<newline46mondego>        }<newline46mondego><newline46mondego>        public Geometry getGeometry() {<newline46mondego>            return geometry;<newline46mondego>        }<newline46mondego><newline46mondego>        public void setGeometry(Geometry geometry) {<newline46mondego>            this.geometry = geometry;<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    public static class Geometry {<newline46mondego>        public static enum LocationType {<newline46mondego>            ROOFTOP, RANGE_INTERPOLATED, GEOMETRIC_CENTER, APPROXIMATE;<newline46mondego>        }<newline46mondego><newline46mondego>        public static class ViewPort {<newline46mondego>            private Location northeast;<newline46mondego>            private Location southwest;<newline46mondego><newline46mondego>            public Location getNortheast() {<newline46mondego>                return northeast;<newline46mondego>            }<newline46mondego><newline46mondego>            public void setNortheast(Location northeast) {<newline46mondego>                this.northeast = northeast;<newline46mondego>            }<newline46mondego><newline46mondego>            public Location getSouthwest() {<newline46mondego>                return southwest;<newline46mondego>            }<newline46mondego><newline46mondego>            public void setSouthwest(Location southwest) {<newline46mondego>                this.southwest = southwest;<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        private Location location;<newline46mondego>        private LocationType location_type;<newline46mondego>        private ViewPort viewport;<newline46mondego><newline46mondego>        public Location getLocation() {<newline46mondego>            return location;<newline46mondego>        }<newline46mondego><newline46mondego>        public void setLocation(Location location) {<newline46mondego>            this.location = location;<newline46mondego>        }<newline46mondego><newline46mondego>        public LocationType getLocation_type() {<newline46mondego>            return location_type;<newline46mondego>        }<newline46mondego><newline46mondego>        public void setLocation_type(LocationType location_type) {<newline46mondego>            this.location_type = location_type;<newline46mondego>        }<newline46mondego><newline46mondego>        public ViewPort getViewport() {<newline46mondego>            return viewport;<newline46mondego>        }<newline46mondego><newline46mondego>        public void setViewport(ViewPort viewport) {<newline46mondego>            this.viewport = viewport;<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    private Status status;<newline46mondego>    private List<Result> results;<newline46mondego><newline46mondego>    public Status getStatus() {<newline46mondego>        return status;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setStatus(Status status) {<newline46mondego>        this.status = status;<newline46mondego>    }<newline46mondego><newline46mondego>    public List<Result> getResults() {<newline46mondego>        return results;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setResults(List<Result> results) {<newline46mondego>        this.results = results;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"7919splitHere46","9600268splitHere46","public class Location {<newline46mondego>    private double lat;<newline46mondego>    private double lng;<newline46mondego><newline46mondego>    public Location() {<newline46mondego>    }<newline46mondego><newline46mondego>    public Location(double lat, double lng) {<newline46mondego>        this.lat = lat;<newline46mondego>        this.lng = lng;<newline46mondego>    }<newline46mondego><newline46mondego>    public double getLat() {<newline46mondego>        return lat;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setLat(double lat) {<newline46mondego>        this.lat = lat;<newline46mondego>    }<newline46mondego><newline46mondego>    public double getLng() {<newline46mondego>        return lng;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setLng(double lng) {<newline46mondego>        this.lng = lng;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7920splitHere46","9600275splitHere46","int[][] array = new int[][] { { 1, 0 }, { 1, 0 }, { 1, 1 } };<newline46mondego>int[] newArray = new int[6];<newline46mondego>int index = 0;<newline46mondego><newline46mondego>// Populating 1D array.<newline46mondego>for (int i = array[0].length; i > 0; i--)<newline46mondego>    for (int j = 0; j < array.length; j++)<newline46mondego>        newArray[index++] = array[j][i - 1];<newline46mondego><newline46mondego>// See the contents of 1D array.<newline46mondego>for (int i = 0; i < newArray.length; i++)<newline46mondego>    System.out.println(newArray[i]);<newline46mondego>"
"7921splitHere46","9600396splitHere46","f"
"7922splitHere46","9600396splitHere46","float"
"7923splitHere46","9600396splitHere46","f = 12345.6748046875<newline46mondego>d = 12345.674499999999170540831983089447021484375<newline46mondego>"
"7924splitHere46","9600396splitHere46","f"
"7925splitHere46","9600396splitHere46","d"
"7926splitHere46","9600396splitHere46","BigDecimal"
"7927splitHere46","9600478splitHere46","setMediaTime()"
"7928splitHere46","9600478splitHere46","setStopTime()"
"7929splitHere46","9600577splitHere46","long"
"7930splitHere46","9600609splitHere46","<h:panelGroup id=<doubleQuotes46>Texto_Header<doubleQuotes46>><newline46mondego>    <h:form><newline46mondego>        <p:toolbar><newline46mondego>            <p:toolbarGroup><newline46mondego>                <!-- Operaciones de aplicaciÃ³n --><newline46mondego>                <c:forEach items=<doubleQuotes46>#{logedBean._apps}<doubleQuotes46> var=<doubleQuotes46>opBean<doubleQuotes46>><newline46mondego>                    <!-- MAIN OPERATION --><newline46mondego>                    <h:panelGroup rendered=<doubleQuotes46>#{opBean._Clickable}<doubleQuotes46>><newline46mondego>                        <p:commandButton value=<doubleQuotes46>#{opBean._Nombre}<doubleQuotes46><newline46mondego>                            action=<doubleQuotes46>#{opBean.actionOperationClick}<doubleQuotes46> update=<doubleQuotes46>:linkPanel<doubleQuotes46> /><newline46mondego>                    </h:panelGroup><newline46mondego>                    <!-- OPERATION WITH SUBOPERATIONS --><newline46mondego>                    <h:panelGroup rendered=<doubleQuotes46>#{!opBean._Clickable}<doubleQuotes46>><newline46mondego>                        <p:menuButton value=<doubleQuotes46>#{opBean._Nombre}<doubleQuotes46>><newline46mondego>                            <c:forEach items=<doubleQuotes46>#{opBean._subOperaciones}<doubleQuotes46> var=<doubleQuotes46>opBean2<doubleQuotes46>><newline46mondego>                                <p:menuitem value=<doubleQuotes46>#{opBean2._Nombre}<doubleQuotes46><newline46mondego>                                    action=<doubleQuotes46>#{opBean2.actionOperationClick}<doubleQuotes46> update=<doubleQuotes46>:linkPanel<doubleQuotes46> /><newline46mondego>                            </c:forEach><newline46mondego>                        </p:menuButton><newline46mondego>                    </h:panelGroup><newline46mondego>                </c:forEach><newline46mondego>            </p:toolbarGroup><newline46mondego>        </p:toolbar><newline46mondego>    </h:form><newline46mondego></h:panelGroup><newline46mondego>"
"7931splitHere46","9600708splitHere46","List<Double>"
"7932splitHere46","9600708splitHere46","List<Number>"
"7933splitHere46","9600708splitHere46","List<Double>"
"7934splitHere46","9600708splitHere46","List<Double> list = new List<Double>();<newline46mondego>List<Number> list1 = list; // This does not work<newline46mondego>list1.add(new Integer(0));<newline46mondego>Double d = list.get(0);// Hu-hoh you received an Integer, not a Double!!<newline46mondego>List<? extends Number> list2 = list; // This does work<newline46mondego>"
"7935splitHere46","9600708splitHere46","myFn(String, List<Number>, List<Number>)<newline46mondego>"
"7936splitHere46","9600708splitHere46","myFn(String, List<? extends Number>, List<? extends Number>)<newline46mondego>"
"7937splitHere46","9600760splitHere46","toString()"
"7938splitHere46","9600760splitHere46","string"
"7939splitHere46","9600760splitHere46","String"
"7940splitHere46","9600760splitHere46","@Override<newline46mondego>public String toString() {<newline46mondego>    return <doubleQuotes46>Person{<doubleQuotes46> +<newline46mondego>            <doubleQuotes46>address='<doubleQuotes46> + address + '\'' +<newline46mondego>            <doubleQuotes46>, name='<doubleQuotes46> + name + '\'' +<newline46mondego>            <doubleQuotes46>, spouse=<doubleQuotes46> + spouse +<newline46mondego>            '}';<newline46mondego>}<newline46mondego>"
"7941splitHere46","9600760splitHere46","@Override<newline46mondego>public String toString() {<newline46mondego>    return <doubleQuotes46>Person{<doubleQuotes46> +<newline46mondego>            <doubleQuotes46>address='<doubleQuotes46> + address + '\'' +<newline46mondego>            <doubleQuotes46>, name='<doubleQuotes46> + name + '\'' +<newline46mondego>            <doubleQuotes46>, spouse=<doubleQuotes46> + spouse != null ? spouse.getName() : <doubleQuotes46> {none}<doubleQuotes46> +<newline46mondego>            '}';<newline46mondego>}<newline46mondego>"
"7942splitHere46","9600854splitHere46","HttpServletRequest.getQueryString()"
"7943splitHere46","9600854splitHere46","String"
"7944splitHere46","9600854splitHere46","getParameter()"
"7945splitHere46","9600854splitHere46","getParameterMap()"
"7946splitHere46","9600854splitHere46","HttpServletRequestWrapper"
"7947splitHere46","9600854splitHere46","getParameter()"
"7948splitHere46","9600854splitHere46","HttpServletrequest"
"7949splitHere46","9600917splitHere46","import java.awt.*;<newline46mondego>import java.awt.event.*;<newline46mondego>import javax.swing.*;<newline46mondego>import javax.swing.border.*;<newline46mondego><newline46mondego>public class RadioSelection extends JFrame<newline46mondego>{<newline46mondego>    private ActionListener action;  <newline46mondego>    private JPanel bottomPanel;<newline46mondego>    private LineBorder lineBorder ;<newline46mondego><newline46mondego>    public RadioSelection()<newline46mondego>    {<newline46mondego>        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        setLocationByPlatform(true);<newline46mondego><newline46mondego>        lineBorder = new LineBorder(Color.BLUE.darker());<newline46mondego><newline46mondego>        JPanel topPanel = new JPanel();<newline46mondego>        topPanel.setLayout(new FlowLayout(FlowLayout.LEFT));<newline46mondego><newline46mondego>        bottomPanel = new JPanel();<newline46mondego><newline46mondego>        final JRadioButton threeSquareButton = new JRadioButton(<doubleQuotes46>3 X 3<doubleQuotes46>, false);<newline46mondego>        final JRadioButton fourSquareButton = new JRadioButton(<doubleQuotes46>4 X 4<doubleQuotes46>, false);<newline46mondego><newline46mondego>        threeSquareButton.setBorder(lineBorder);<newline46mondego>        fourSquareButton.setBorder(lineBorder);<newline46mondego><newline46mondego>        action = new ActionListener()<newline46mondego>        {<newline46mondego>            public void actionPerformed(ActionEvent ae)<newline46mondego>            {<newline46mondego>                if (ae.getSource() == threeSquareButton)<newline46mondego>                {<newline46mondego>                    remove(bottomPanel);<newline46mondego>                    bottomPanel = getCenterPanel(3);<newline46mondego>                    add(bottomPanel, BorderLayout.CENTER);<newline46mondego>                }<newline46mondego>                else if (ae.getSource() == fourSquareButton)<newline46mondego>                {<newline46mondego>                    remove(bottomPanel);<newline46mondego>                    bottomPanel = getCenterPanel(4);<newline46mondego>                    add(bottomPanel, BorderLayout.CENTER);<newline46mondego>                }<newline46mondego>                revalidate(); // If you are using JDK 1.7 +<newline46mondego>                // getContentPane().revalidate(); // if you using JDK 1.6 or lower<newline46mondego>                repaint();<newline46mondego>            }<newline46mondego>        };<newline46mondego><newline46mondego>        threeSquareButton.addActionListener(action);<newline46mondego>        fourSquareButton.addActionListener(action);<newline46mondego><newline46mondego>        ButtonGroup bg = new ButtonGroup();<newline46mondego>        bg.add(threeSquareButton);<newline46mondego>        bg.add(fourSquareButton);<newline46mondego><newline46mondego>        topPanel.add(threeSquareButton);<newline46mondego>        topPanel.add(fourSquareButton);<newline46mondego><newline46mondego>        add(topPanel, BorderLayout.PAGE_START);<newline46mondego>        add(bottomPanel, BorderLayout.CENTER);<newline46mondego><newline46mondego>        setSize(300, 300);<newline46mondego>        setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>    private JPanel getCenterPanel(int size)<newline46mondego>    {<newline46mondego>        JPanel bottomPanel = new JPanel(new GridLayout(size, size));<newline46mondego><newline46mondego>        for (int row = 0; row < size; row++)<newline46mondego>        {<newline46mondego>            for (int column = 0; column < size; column++)<newline46mondego>            {<newline46mondego>                JButton button = new JButton(<doubleQuotes46>Button <doubleQuotes46> + row + <doubleQuotes46> <doubleQuotes46> + column);<newline46mondego>                button.setBorder(lineBorder);<newline46mondego>                button.setMargin(new Insets(2, 2, 2, 2));<newline46mondego>                bottomPanel.add(button);<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        return bottomPanel;<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String... args)<newline46mondego>    {<newline46mondego>        SwingUtilities.invokeLater(new Runnable()<newline46mondego>        {<newline46mondego>            public void run()<newline46mondego>            {<newline46mondego>                new RadioSelection();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7950splitHere46","9600917splitHere46","import java.awt.*;<newline46mondego>import java.awt.event.*;<newline46mondego><newline46mondego>import java.util.Random;<newline46mondego><newline46mondego>import javax.swing.*;<newline46mondego>import javax.swing.border.*;<newline46mondego><newline46mondego>public class RadioSelection extends JFrame implements ActionListener<newline46mondego>{<newline46mondego>    private ActionListener action;  <newline46mondego>    private JButton[][] button;<newline46mondego><newline46mondego>    private JPanel bottomPanel;<newline46mondego>    private LineBorder lineBorder;<newline46mondego><newline46mondego>    private int randomRowLimit;<newline46mondego>    private int randomColumnLimit;<newline46mondego>    private Random random;<newline46mondego>    private int size;<newline46mondego><newline46mondego>    public RadioSelection()<newline46mondego>    {<newline46mondego>        randomRowLimit = 0;<newline46mondego>        randomColumnLimit = 0;<newline46mondego>        random = new Random();<newline46mondego>        size = 0;<newline46mondego><newline46mondego>        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        setLocationByPlatform(true);<newline46mondego><newline46mondego>        lineBorder = new LineBorder(Color.BLUE.darker());<newline46mondego><newline46mondego>        JPanel topPanel = new JPanel();<newline46mondego>        topPanel.setLayout(new FlowLayout(FlowLayout.LEFT));<newline46mondego><newline46mondego>        bottomPanel = new JPanel();<newline46mondego><newline46mondego>        final JRadioButton threeSquareButton = new JRadioButton(<doubleQuotes46>3 X 3<doubleQuotes46>, false);<newline46mondego>        final JRadioButton fourSquareButton = new JRadioButton(<doubleQuotes46>4 X 4<doubleQuotes46>, false);<newline46mondego>        final JRadioButton fiveSquareButton = new JRadioButton(<doubleQuotes46>5 X 5<doubleQuotes46>, false);<newline46mondego><newline46mondego>        threeSquareButton.setBorder(lineBorder);<newline46mondego>        fourSquareButton.setBorder(lineBorder);<newline46mondego>        fiveSquareButton.setBorder(lineBorder);<newline46mondego><newline46mondego>        action = new ActionListener()<newline46mondego>        {<newline46mondego>            public void actionPerformed(ActionEvent ae)<newline46mondego>            {<newline46mondego>                if (ae.getSource() == threeSquareButton)<newline46mondego>                {<newline46mondego>                    remove(bottomPanel);<newline46mondego>                    bottomPanel = getCenterPanel(3);<newline46mondego>                    add(bottomPanel, BorderLayout.CENTER);<newline46mondego>                }<newline46mondego>                else if (ae.getSource() == fourSquareButton)<newline46mondego>                {<newline46mondego>                    remove(bottomPanel);<newline46mondego>                    bottomPanel = getCenterPanel(4);<newline46mondego>                    add(bottomPanel, BorderLayout.CENTER);<newline46mondego>                }<newline46mondego>                else if (ae.getSource() == fiveSquareButton)<newline46mondego>                {<newline46mondego>                    remove(bottomPanel);<newline46mondego>                    bottomPanel = getCenterPanel(5);<newline46mondego>                    add(bottomPanel, BorderLayout.CENTER);<newline46mondego>                }<newline46mondego>                revalidate(); // If you are using JDK 1.7 +<newline46mondego>                // getContentPane().revalidate(); // if you using JDK 1.6 or lower<newline46mondego>                repaint();<newline46mondego>            }<newline46mondego>        };<newline46mondego><newline46mondego>        threeSquareButton.addActionListener(action);<newline46mondego>        fourSquareButton.addActionListener(action);<newline46mondego>        fiveSquareButton.addActionListener(action);<newline46mondego><newline46mondego>        ButtonGroup bg = new ButtonGroup();<newline46mondego>        bg.add(threeSquareButton);<newline46mondego>        bg.add(fourSquareButton);<newline46mondego>        bg.add(fiveSquareButton);<newline46mondego><newline46mondego>        topPanel.add(threeSquareButton);<newline46mondego>        topPanel.add(fourSquareButton);<newline46mondego>        topPanel.add(fiveSquareButton);<newline46mondego><newline46mondego>        add(topPanel, BorderLayout.PAGE_START);<newline46mondego>        add(bottomPanel, BorderLayout.CENTER);<newline46mondego><newline46mondego>        setSize(300, 300);<newline46mondego>        //pack();<newline46mondego>        setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>    private JPanel getCenterPanel(int size)<newline46mondego>    {<newline46mondego>        JPanel bottomPanel = new JPanel(new GridLayout(size, size));<newline46mondego>        button = new JButton[size][size];<newline46mondego>        this.size = size;<newline46mondego><newline46mondego>        for (int row = 0; row < size; row++)<newline46mondego>        {<newline46mondego>            for (int column = 0; column < size; column++)<newline46mondego>            {<newline46mondego>                button[row][column] = new JButton();<newline46mondego>                button[row][column].setBorder(lineBorder);<newline46mondego>                button[row][column].setMargin(new Insets(2, 2, 2, 2));<newline46mondego>                button[row][column].addActionListener(this);<newline46mondego>                bottomPanel.add(button[row][column]);<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        randomRowLimit = random.nextInt(size);<newline46mondego>        randomColumnLimit = random.nextInt(size);<newline46mondego>        button[randomRowLimit][randomColumnLimit].setText(<doubleQuotes46>X<doubleQuotes46>);<newline46mondego><newline46mondego>        return bottomPanel;<newline46mondego>    }<newline46mondego><newline46mondego>    public void actionPerformed(ActionEvent ae)<newline46mondego>    {<newline46mondego>        JButton button = (JButton) ae.getSource();<newline46mondego><newline46mondego>        if ((button.getText()).equals(<doubleQuotes46>X<doubleQuotes46>))<newline46mondego>        {<newline46mondego>            randomRowLimit = random.nextInt(size);<newline46mondego>            randomColumnLimit = random.nextInt(size);<newline46mondego>            System.out.println(<doubleQuotes46>Row : <doubleQuotes46> + randomRowLimit);<newline46mondego>            System.out.println(<doubleQuotes46>Column : <doubleQuotes46> + randomColumnLimit);<newline46mondego>            button.setText(<doubleQuotes46><doubleQuotes46>);<newline46mondego>            this.button[randomRowLimit][randomColumnLimit].setText(<doubleQuotes46>X<doubleQuotes46>);            <newline46mondego>        }<newline46mondego>        else<newline46mondego>        {<newline46mondego>            JOptionPane.showMessageDialog(this, <doubleQuotes46>Please Click on X Mark to follow it.<doubleQuotes46>, <doubleQuotes46>Small Game : <doubleQuotes46>, JOptionPane.ERROR_MESSAGE);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String... args)<newline46mondego>    {<newline46mondego>        SwingUtilities.invokeLater(new Runnable()<newline46mondego>        {<newline46mondego>            public void run()<newline46mondego>            {<newline46mondego>                new RadioSelection();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7951splitHere46","9601166splitHere46","item"
"7952splitHere46","9601166splitHere46","DefaultObjectWrapper"
"7953splitHere46","9601166splitHere46","BeansWrapper"
"7954splitHere46","9601166splitHere46","Configuration.setObjectWrapper(new YourObjectWrapper())"
"7955splitHere46","9601166splitHere46","DefaultObjectWrapper"
"7956splitHere46","9601166splitHere46","BeansWrapper"
"7957splitHere46","9601166splitHere46","${item.name}"
"7958splitHere46","9601166splitHere46","YourHashModel.get(<doubleQuotes46>name<doubleQuotes46>)"
"7959splitHere46","9601166splitHere46","YourHashModel"
"7960splitHere46","9601166splitHere46","freemarker.template.TemplateHashModel"
"7961splitHere46","9601166splitHere46","get"
"7962splitHere46","9601166splitHere46","return new SimpleScalar(item.getLocale(currentLocale).get(<doubleQuotes46>name<doubleQuotes46>))"
"7963splitHere46","9601391splitHere46","java.util.Collections.indexOfSubList()"
"7964splitHere46","9601391splitHere46","int startIdx = Collections.indexOfSubList(arrayList, subSetArrayList);<newline46mondego>if (-1 != startIdx)<newline46mondego>{<newline46mondego>    int endIdx = startIdx + subSetArrayList.size() - 1;<newline46mondego>}<newline46mondego>"
"7965splitHere46","9601397splitHere46","public class Main {<newline46mondego><newline46mondego>    public enum IpHdrProtocol {<newline46mondego><newline46mondego>        TCP(6), SCTP(132), MPLS(137);<newline46mondego>        int Value;<newline46mondego><newline46mondego>        IpHdrProtocol(int value) {<newline46mondego>            Value = value;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] argv) throws NoSuchMethodException, IllegalArgumentException, InvocationTargetException,<newline46mondego>            IllegalAccessException, SecurityException, NoSuchFieldException {<newline46mondego>        System.err.println(getProtocol(6));<newline46mondego>        System.err.println(getProtocol(132));<newline46mondego>        System.err.println(getProtocol(137));<newline46mondego>    }<newline46mondego><newline46mondego>    private static IpHdrProtocol getProtocol(int i) throws NoSuchMethodException, IllegalAccessException, InvocationTargetException,<newline46mondego>            SecurityException, NoSuchFieldException {<newline46mondego>        Field f = IpHdrProtocol.class.getDeclaredField(<doubleQuotes46>Value<doubleQuotes46>);<newline46mondego>        Method m = IpHdrProtocol.class.getMethod(<doubleQuotes46>values<doubleQuotes46>, null);<newline46mondego>        Object[] invoke = (Object[]) m.invoke(null, null);<newline46mondego>        for (Object o : invoke) {<newline46mondego>            if (!f.isAccessible()) {<newline46mondego>                f.setAccessible(true);<newline46mondego>            }<newline46mondego>            if (((Integer) f.get(o)).intValue() == i) {<newline46mondego>                return (IpHdrProtocol) o;<newline46mondego>            }<newline46mondego>        }<newline46mondego>        return null;<newline46mondego>    }<newline46mondego><newline46mondego>    }<newline46mondego>"
"7966splitHere46","9601484splitHere46","final boolean oldAutoCommit = stat.getConnection().getAutoCommit();<newline46mondego>stat.getConnection().setAutoCommit(false);<newline46mondego><newline46mondego>try {<newline46mondego>    // Your update and insert code here<newline46mondego>} catch(Exception e) {<newline46mondego>    stat.getConnection().rollback();<newline46mondego>} finally {<newline46mondego>    stat.getConnection().commit();<newline46mondego>    stat.getConnection().setAutoCommit(oldAutoCommit);<newline46mondego>}<newline46mondego>"
"7967splitHere46","9601484splitHere46","for(String query: queries) {<newline46mondego>    stat.addBatch(query);<newline46mondego>}<newline46mondego><newline46mondego>try {<newline46mondego>    stat.executeBatch();<newline46mondego>} catch(Exception e) {<newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"7968splitHere46","9601484splitHere46","DatabaseMetaData.supportsBatchUpdates()"
"7969splitHere46","9601527splitHere46","Connection"
"7970splitHere46","9601527splitHere46","ResultSet"
"7971splitHere46","9601527splitHere46","Statement"
"7972splitHere46","9601527splitHere46","void"
"7973splitHere46","9601527splitHere46","Object [][]"
"7974splitHere46","9601597splitHere46","show()"
"7975splitHere46","9601597splitHere46","Point p"
"7976splitHere46","9601597splitHere46","p"
"7977splitHere46","9601597splitHere46","show()"
"7978splitHere46","9601597splitHere46","p"
"7979splitHere46","9601597splitHere46","p"
"7980splitHere46","9601597splitHere46","p"
"7981splitHere46","9601597splitHere46","p"
"7982splitHere46","9601597splitHere46","Point p = new Point(1, 2);<newline46mondego>show(p);<newline46mondego>// p.x == 100 here<newline46mondego><newline46mondego>void show(Point p) {<newline46mondego>   p.x = 100;<newline46mondego>}<newline46mondego>"
"7983splitHere46","9601597splitHere46","void show(Point p){<newline46mondego>    // use p in some way<newline46mondego>    // can p's state be changed safely ?<newline46mondego>    // can a new thread be started to work with p safely ?      <newline46mondego>}<newline46mondego>"
"7984splitHere46","9601597splitHere46","p"
"7985splitHere46","9601597splitHere46","showPoints()"
"7986splitHere46","9601597splitHere46","showNextPoint()"
"7987splitHere46","9601597splitHere46","Point"
"7988splitHere46","9601597splitHere46","Point"
"7989splitHere46","9601597splitHere46","Point"
"7990splitHere46","9601597splitHere46","x"
"7991splitHere46","9601597splitHere46","y"
"7992splitHere46","9601597splitHere46","show"
"7993splitHere46","9601597splitHere46","show()"
"7994splitHere46","9601597splitHere46","Point"
"7995splitHere46","9601597splitHere46","showPoints()"
"7996splitHere46","9601597splitHere46","p"
"7997splitHere46","9601641splitHere46","public class City extends JComponent{<newline46mondego>    private boolean active=false;<newline46mondego>    protected int x;<newline46mondego>    private int y;<newline46mondego>    public City(int x, int y){<newline46mondego>        setBounds(x, y, 20, 20);<newline46mondego>        setPreferredSize(new Dimension(20,20));<newline46mondego>        setMaximumSize(new Dimension(20,20));<newline46mondego>        setMinimumSize(new Dimension(20,20));<newline46mondego>    }<newline46mondego>protected void paintComponent(Graphics g){<newline46mondego>    super.paintComponent(g);<newline46mondego>        if(active==true)<newline46mondego>            active(g);<newline46mondego><newline46mondego>        else if(active==true)<newline46mondego>            notActive(g);<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>public void active(Graphics g){<newline46mondego>    g.setColor(Color.RED);<newline46mondego>    g.fillRect(0,0,getWidth(),getHeight());<newline46mondego>}<newline46mondego><newline46mondego>public void notActive(Graphics g){<newline46mondego>    g.setColor(Color.BLUE);<newline46mondego>    g.fillRect(0, 0, getWidth(),getHeight());<newline46mondego>}<newline46mondego>public boolean clicked(boolean b){<newline46mondego>active=b;<newline46mondego>repaint();  //repaint whenever the flag active changes<newline46mondego>}<newline46mondego>public boolean isActive(){<newline46mondego>   return active;<newline46mondego>}<newline46mondego>"
"7998splitHere46","9601641splitHere46","public class cityListener extends MouseAdapter{<newline46mondego>    public void mouseClicked(MouseEvent e){<newline46mondego>       City current=(City)e.getSource();<newline46mondego><newline46mondego>               if(current.active==false)<newline46mondego>                  current.clicked(true);<newline46mondego>              else if(current.active==true)<newline46mondego>                  current.clicked(false);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7999splitHere46","9601768splitHere46","runOnUI"
"8000splitHere46","9601768splitHere46","runOnUiThread(new Runnable() {<newline46mondego>    public void run() {<newline46mondego>        keresetTv.setText(<doubleQuotes46> <doubleQuotes46>);<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"8001splitHere46","9601768splitHere46","handler.post(new Runnable...);"
"8002splitHere46","9601831splitHere46","choice"
"8003splitHere46","9601831splitHere46","choice = Validator.getInt(ip, <doubleQuotes46>Enter menu number: <doubleQuotes46>, 1, 3);<newline46mondego>"
"8004splitHere46","9601881splitHere46","this"
"8005splitHere46","9601881splitHere46","this"
"8006splitHere46","9601881splitHere46","init"
"8007splitHere46","9601881splitHere46","dw"
"8008splitHere46","9601881splitHere46","loop"
"8009splitHere46","9601881splitHere46","dw"
"8010splitHere46","9601881splitHere46","null"
"8011splitHere46","9601881splitHere46","delta"
"8012splitHere46","9601881splitHere46","lastTime"
"8013splitHere46","9601881splitHere46","dw"
"8014splitHere46","9601881splitHere46","final PhysicsThread pt = new PhysicsThread();<newline46mondego>final Thread t = new Thread(pt);<newline46mondego>t.setPriority(Thread.MIN_PRIORITY);<newline46mondego>t.start();<newline46mondego>"
"8015splitHere46","9601881splitHere46","init"
"8016splitHere46","9601881splitHere46","dw"
"8017splitHere46","9601881splitHere46","init"
"8018splitHere46","9601881splitHere46","dw"
"8019splitHere46","9601881splitHere46","final"
"8020splitHere46","9601881splitHere46","Thread"
"8021splitHere46","9601881splitHere46","Runnable"
"8022splitHere46","9601881splitHere46","PhysicsTask"
"8023splitHere46","9601881splitHere46","PhysicsSimulationRun"
"8024splitHere46","9601964splitHere46","Logger log = LoggerFactory.getLogger(Controller.class);<newline46mondego>"
"8025splitHere46","9601964splitHere46","Controller"
"8026splitHere46","9602033splitHere46","// String => byte []<newline46mondego>byte[] bytes = message.getBytes(Charset.forName(<doubleQuotes46>ISO-8859-1<doubleQuotes46>));<newline46mondego><newline46mondego>// byte [] => String <newline46mondego>String foo = new String(bytes, Charset.forName(<doubleQuotes46>ISO-8859-1<doubleQuotes46>));<newline46mondego>"
"8027splitHere46","9602033splitHere46","for (String c : Charset.availableCharsets().keySet()) {<newline46mondego>    System.out.println(c);<newline46mondego>}<newline46mondego>"
"8028splitHere46","9602088splitHere46","Chronometer"
"8029splitHere46","9602088splitHere46","Chronometer"
"8030splitHere46","9602088splitHere46","Timer"
"8031splitHere46","9602088splitHere46","TimerTask"
"8032splitHere46","9602173splitHere46","TableSorter"
"8033splitHere46","9602173splitHere46","TableModel"
"8034splitHere46","9602189splitHere46","public class Room {<newline46mondego><newline46mondego>    private List<Window> windows = new ArrayList<Window>();<newline46mondego>    private List<Wall> walls = new ArrayList<Wall>();<newline46mondego>    private List<Door> doors = new ArrayList<Door>();<newline46mondego><newline46mondego>    public Room(int windows, int walls, int doors){<newline46mondego>        for(int i=0; i < windows; i++)<newline46mondego>            windows.add(new Window());<newline46mondego>         //similarly for walls and Doors :)<newline46mondego>    }<newline46mondego><newline46mondego>     //getters<newline46mondego>}<newline46mondego>"
"8035splitHere46","9602189splitHere46","has-a"
"8036splitHere46","9602189splitHere46","//you see rooms have walls, and many. So constructor takes List of <newline46mondego>//windows and doors in each wall. So, a List of walls that has List <newline46mondego>// (mixed bag) of windows and doors in each wall -- some may have no <newline46mondego>//window/door, then 2nd list will be empty.<newline46mondego>public class Room {<newline46mondego><newline46mondego>    List<Wall> _walls = new ArrayList<Wall>();<newline46mondego><newline46mondego>    public Room(List<List<Openable>> walls){<newline46mondego>        for(List<Openable> windowsOrDoors : walls){<newline46mondego>            this._walls.add(new Wall(windowsOrDoors));<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>//wall can have many doors and/or windows. We pass out mixed <newline46mondego>// bag list here, constructor will figure out how to keep <newline46mondego>//them in separate lists<newline46mondego>public class Wall {<newline46mondego><newline46mondego>    List<Door> doors = new ArrayList<Door>();<newline46mondego>    List<Window> windows = new ArrayList<Window>();<newline46mondego><newline46mondego>    public Wall(List<Openable> openables){<newline46mondego>        for(Openable windowsOrDoor : openables){<newline46mondego>            if(windowsOrDoor instanceOf Window)<newline46mondego>                this.windows.add(windowsOrDoors);<newline46mondego>            else<newline46mondego>                this.doors.add(windowsOrDoors);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>//Window class, simple class -- it is of type Openable<newline46mondego>public class Window implements Openable{<newline46mondego>    public Window(int w, int h){<newline46mondego>        //do something<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>//Door class, simple class -- it is of type Openable<newline46mondego>public class Door implements Openable{<newline46mondego>    public Door(int w, int h){<newline46mondego>        //do something<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>//Openable -- a common interface to Window and Door, you can use <newline46mondego>//abstract class here and have getHeight, getWidth and other common <newline46mondego>//methods. This just for the purpose that if you wanted to add another <newline46mondego>//Window/Door class like `ArchedDoor` which has a `radius` as well, <newline46mondego>//you will just write a `ArchedDoor implements Openable` and pass into <newline46mondego>//the Room/Wall constructor. Nothing will break. <newline46mondego>public interface Openable{}<newline46mondego>"
"8037splitHere46","9602385splitHere46","<%@ taglib uri=<doubleQuotes46>http://java.sun.com/jsp/jstl/core<doubleQuotes46> prefix=<doubleQuotes46>c<doubleQuotes46>%><newline46mondego><newline46mondego><html><newline46mondego>    <%<newline46mondego>        Map myMap = new HashMap();<newline46mondego>        pageContext.setAttribute(<doubleQuotes46>theMap<doubleQuotes46>, myMap);<newline46mondego>    %><newline46mondego>    <c:set target=<doubleQuotes46>${theMap}<doubleQuotes46> property=<doubleQuotes46>aKey<doubleQuotes46> value=<doubleQuotes46>value for a key<doubleQuotes46> /><newline46mondego>    <c:set target=<doubleQuotes46>${theMap}<doubleQuotes46> property=<doubleQuotes46>otherKey<doubleQuotes46> value=<doubleQuotes46>value for other key<doubleQuotes46> /><newline46mondego><newline46mondego>    Map content: ${theMap}<newline46mondego></html><newline46mondego>"
"8038splitHere46","9602393splitHere46","play netbeansify"
"8039splitHere46","9602436splitHere46","@OneToOne(optional = true)<newline46mondego>@JoinColumn(name = <doubleQuotes46>SoulmateId<doubleQuotes46>)<newline46mondego>private Person soulmate;<newline46mondego>"
"8040splitHere46","9602440splitHere46","Waypoint"
"8041splitHere46","9602440splitHere46","<many-to-one name=<doubleQuotes46>route<doubleQuotes46> column=<doubleQuotes46>routeid<doubleQuotes46> not-null=<doubleQuotes46>true<doubleQuotes46> cascade=<doubleQuotes46>all<doubleQuotes46> /><newline46mondego>"
"8042splitHere46","9602440splitHere46","cascade=<doubleQuotes46>all<doubleQuotes46>"
"8043splitHere46","9602440splitHere46","<many-to-one name=<doubleQuotes46>route<doubleQuotes46> column=<doubleQuotes46>routeid<doubleQuotes46> not-null=<doubleQuotes46>true<doubleQuotes46>  /><newline46mondego>"
"8044splitHere46","9602452splitHere46","void"
"8045splitHere46","9602491splitHere46","<doubleQuotes46>select 1<doubleQuotes46>"
"8046splitHere46","9602501splitHere46","View v = new View(this);<newline46mondego>RelativeLayout.LayoutParams viewLp = new LayoutParams(LayoutParams.FILL_PARENT, 1);<newline46mondego>viewLp.addRule(RelativeLayout.BELOW, imageViewID);<newline46mondego>viewLp.addRule(RelativeLayout.CENTER_HORIZONTAL);<newline46mondego>viewLp.setMargins(0, 5, 0, 0);<newline46mondego><newline46mondego>v.setLayoutParams(viewLp);<newline46mondego>v.setBackgroundColor(0x808080);<newline46mondego><newline46mondego>rl.addView(v);<newline46mondego>"
"8047splitHere46","9602501splitHere46","lineParams.width = 1;"
"8048splitHere46","9602501splitHere46","lineParams.height = 1;"
"8049splitHere46","9602502splitHere46","System.out.printf(<doubleQuotes46>%.1f<doubleQuotes46>, 1654621658874684.0);<newline46mondego>"
"8050splitHere46","9602502splitHere46","double"
"8051splitHere46","9602502splitHere46","BigDecimal"
"8052splitHere46","9602502splitHere46","double"
"8053splitHere46","9602530splitHere46","if (<doubleQuotes46>N<doubleQuotes46>.equals(items[item]))<newline46mondego>{<newline46mondego>    Intent intent = new Intent();<newline46mondego>    Intent i0 = new Intent(Brain.this, CropImageActivity.class);<newline46mondego>    startActivity(i0);<newline46mondego>}<newline46mondego>else if (<doubleQuotes46>M<doubleQuotes46>.equals(items[item]))<newline46mondego>{<newline46mondego>    Intent intent = new Intent();<newline46mondego>    Intent i2 = new Intent(Brain.this, Test2.class);<newline46mondego>    startActivity(i2);<newline46mondego>}<newline46mondego>"
"8054splitHere46","9602564splitHere46","public class Parameter {<newline46mondego><newline46mondego>    private String mParameterName;<newline46mondego>    private String mParameterValue;<newline46mondego><newline46mondego>    // [[ ParameterName<newline46mondego><newline46mondego>    public void setParameterName(String ParameterName){<newline46mondego>        mParameterName = ParameterName;<newline46mondego>    }<newline46mondego><newline46mondego>    public String getParameterName(){<newline46mondego>        return mParameterName;<newline46mondego>    }<newline46mondego><newline46mondego>    // ]]<newline46mondego><newline46mondego>    // [[ ParameterValue<newline46mondego><newline46mondego>    public void setParameterValue(String ParameterValue){<newline46mondego>        mParameterValue = ParameterValue;<newline46mondego>    }<newline46mondego><newline46mondego>    public String getParameterValue(){<newline46mondego>        return mParameterValue;<newline46mondego>    }<newline46mondego><newline46mondego>    // ]]<newline46mondego>}<newline46mondego>"
"8055splitHere46","9602564splitHere46","public static Document GetWebServiceData(String WebServiceMethod, List<Parameter> Params) {<newline46mondego>    try { <newline46mondego>        SoapObject request = new SoapObject(NameSpace, WebServiceMethod);         <newline46mondego>        HttpTransportSE androidHttpTransport = new HttpTransportSE(URL);<newline46mondego>        SoapSerializationEnvelope envelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);<newline46mondego>        envelope.dotNet = true;<newline46mondego><newline46mondego>        for(Parameter param : Params)<newline46mondego>            request.addProperty(param.getParameterName(), param.getParameterValue());<newline46mondego><newline46mondego>        envelope.setOutputSoapObject(request);<newline46mondego>        androidHttpTransport.call(NameSpace + <doubleQuotes46>/<doubleQuotes46> + WebServiceMethod, envelope); <newline46mondego><newline46mondego>        SoapPrimitive responseData = (SoapPrimitive) envelope.getResponse();<newline46mondego>        if (responseData != null)<newline46mondego>        {<newline46mondego>            //get the factory<newline46mondego>            DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();<newline46mondego><newline46mondego>            //Using factory get an instance of document builder<newline46mondego>            DocumentBuilder db = dbf.newDocumentBuilder();<newline46mondego><newline46mondego>            //parse using builder to get DOM representation of the XML file<newline46mondego>            InputSource is = new InputSource(new StringReader(responseData.toString()));<newline46mondego>            return db.parse(is);<newline46mondego>        }<newline46mondego>        else<newline46mondego>            return null;<newline46mondego>    }<newline46mondego>    catch (Exception e)<newline46mondego>    {<newline46mondego>        Errors.LogError(e);<newline46mondego>        return null;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8056splitHere46","9602564splitHere46","List<Parameter> Params = new ArrayList<Parameter>();<newline46mondego><newline46mondego>    Parameter Param = new Parameter();<newline46mondego>    Param.setParameterName(<doubleQuotes46>Customer<doubleQuotes46>);<newline46mondego>    Param.setParameterValue(<doubleQuotes46>ABC<doubleQuotes46>);<newline46mondego>    Params.add(Param);<newline46mondego><newline46mondego>    Param = new Parameter();<newline46mondego>    Param.setParameterName(<doubleQuotes46>Local<doubleQuotes46>);<newline46mondego>    Param.setParameterValue(<doubleQuotes46>USA<doubleQuotes46>);<newline46mondego>    Params.add(Param);<newline46mondego><newline46mondego>    Document doc = GetWebServiceData(<doubleQuotes46>GetTickets<doubleQuotes46>, Params);<newline46mondego>"
"8057splitHere46","9602622splitHere46","ContentHandler"
"8058splitHere46","9602622splitHere46","ContentHandler"
"8059splitHere46","9602622splitHere46","Primary"
"8060splitHere46","9602622splitHere46","Secondary"
"8061splitHere46","9602622splitHere46","startElement"
"8062splitHere46","9602622splitHere46","endElement"
"8063splitHere46","9602622splitHere46","readCharacters"
"8064splitHere46","9602843splitHere46","./aptana -vm /etc/alternatives/java<newline46mondego>"
"8065splitHere46","9602843splitHere46","./aptana -vm <doubleQuotes46>/path/to/java/bin/directory<doubleQuotes46><newline46mondego>"
"8066splitHere46","9602853splitHere46","public class X {<newline46mondego>  final void template() {<newline46mondego>    Vital statement;<newline46mondego>    method();<newline46mondego>  }<newline46mondego><newline46mondego>  void method() {<newline46mondego>    // do something;<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>public class Y extends X {<newline46mondego>  @Override<newline46mondego>  void method() {<newline46mondego>    // specific code to the class Y<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"8067splitHere46","9602940splitHere46","printReponse"
"8068splitHere46","9602940splitHere46","print"
"8069splitHere46","9602940splitHere46","printResponse"
"8070splitHere46","9602940splitHere46","printResponse"
"8071splitHere46","9602940splitHere46","public abstract class BasePrintable {<newline46mondego>    protected abstract void printResponse();<newline46mondego>    public void print() {<newline46mondego>        // Print the common part<newline46mondego>        printResponse();<newline46mondego>        // Print more common parts<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public class FirstPrintable extends BasePrintable {<newline46mondego>    protected void printResponse() {<newline46mondego>        // first implementation<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public class SecondPrintable extends BasePrintable {<newline46mondego>    protected void printResponse() {<newline46mondego>        // second implementation<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8072splitHere46","9603065splitHere46","<doubleQuotes46><doubleQuotes46>"
"8073splitHere46","9603065splitHere46","editText.setText(<doubleQuotes46><doubleQuotes46>);<newline46mondego>"
"8074splitHere46","9603067splitHere46","HashMap"
"8075splitHere46","9603067splitHere46","HashMap"
"8076splitHere46","9603067splitHere46","map.get(keyOriginal)"
"8077splitHere46","9603067splitHere46","map.keySet()"
"8078splitHere46","9603130splitHere46","MessageBodyReader"
"8079splitHere46","9603130splitHere46","MessageBodyWriter"
"8080splitHere46","9603130splitHere46","import java.io.*;<newline46mondego>import java.lang.annotation.Annotation;<newline46mondego>import java.lang.reflect.Type;<newline46mondego>import java.util.Collection;<newline46mondego>import javax.xml.transform.stream.StreamSource;<newline46mondego><newline46mondego>import javax.ws.rs.*;<newline46mondego>import javax.ws.rs.core.*;<newline46mondego>import javax.ws.rs.ext.*;<newline46mondego>import javax.xml.bind.*;<newline46mondego><newline46mondego>@Provider<newline46mondego>@Produces(MediaType.APPLICATION_JSON)<newline46mondego>@Consumes(MediaType.APPLICATION_JSON)<newline46mondego>public class MOXyJSONProvider implements <newline46mondego>    MessageBodyReader<Object>, MessageBodyWriter<Object>{<newline46mondego><newline46mondego>    @Context<newline46mondego>    protected Providers providers;<newline46mondego><newline46mondego>    public boolean isReadable(Class<?> type, Type genericType,<newline46mondego>        Annotation[] annotations, MediaType mediaType) {<newline46mondego>        return true;<newline46mondego>    }<newline46mondego><newline46mondego>    public Object readFrom(Class<Object> type, Type genericType,<newline46mondego>        Annotation[] annotations, MediaType mediaType,<newline46mondego>        MultivaluedMap<String, String> httpHeaders, InputStream entityStream)<newline46mondego>        throws IOException, WebApplicationException {<newline46mondego>        try {<newline46mondego>            Unmarshaller u = getJAXBContext(type, mediaType).createUnmarshaller();<newline46mondego>            u.setProperty(<doubleQuotes46>eclipselink.media-type<doubleQuotes46>, mediaType.toString());<newline46mondego>            m.setProperty(<doubleQuotes46>eclipselink.json.include-root<doubleQuotes46>, false);<newline46mondego>            return u.unmarshal(new StreamSource(entityStream), (Class) genericType);<newline46mondego>        } catch(JAXBException jaxbException) {<newline46mondego>            throw new WebApplicationException(jaxbException);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public boolean isWriteable(Class<?> type, Type genericType,<newline46mondego>        Annotation[] annotations, MediaType mediaType) {<newline46mondego>        return true;<newline46mondego>    }<newline46mondego><newline46mondego>    public void writeTo(Object object, Class<?> type, Type genericType,<newline46mondego>        Annotation[] annotations, MediaType mediaType,<newline46mondego>        MultivaluedMap<String, Object> httpHeaders,<newline46mondego>        OutputStream entityStream) throws IOException,<newline46mondego>        WebApplicationException {<newline46mondego>        try {<newline46mondego>            Marshaller m = getJAXBContext(Customer.class, mediaType).createMarshaller();<newline46mondego>            m.setProperty(<doubleQuotes46>eclipselink.media-type<doubleQuotes46>, mediaType.toString());<newline46mondego>            m.setProperty(<doubleQuotes46>eclipselink.json.include-root<doubleQuotes46>, false);<newline46mondego>            m.marshal(object, entityStream);<newline46mondego>        } catch(JAXBException jaxbException) {<newline46mondego>            throw new WebApplicationException(jaxbException);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public long getSize(Object t, Class<?> type, Type genericType,<newline46mondego>        Annotation[] annotations, MediaType mediaType) {<newline46mondego>        return -1;<newline46mondego>    }<newline46mondego><newline46mondego>    private JAXBContext getJAXBContext(Class<?> type, MediaType mediaType) <newline46mondego>        throws JAXBException {<newline46mondego>        ContextResolver<JAXBContext> resolver <newline46mondego>            = providers.getContextResolver(JAXBContext.class, mediaType);<newline46mondego>        JAXBContext jaxbContext;<newline46mondego>        if(null == resolver || null == (jaxbContext = resolver.getContext(type))) {<newline46mondego>            return JAXBContext.newInstance(type);<newline46mondego>        } else {<newline46mondego>            return jaxbContext;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"8081splitHere46","9603149splitHere46","playn.java.JavaGroupLayer.paint(JavaGroupLayer.java:96)<newline46mondego>"
"8082splitHere46","9603149splitHere46","paint"
"8083splitHere46","9603149splitHere46","JavaGroupLayer"
"8084splitHere46","9603227splitHere46","actionPerformed()"
"8085splitHere46","9603227splitHere46","patient"
"8086splitHere46","9603227splitHere46","null"
"8087splitHere46","9603227splitHere46","null"
"8088splitHere46","9603227splitHere46","public void actionPerformed(ActionEvent e)<newline46mondego>{<newline46mondego>    if(e.getSource() == reportButton && patient != null)<newline46mondego>    {<newline46mondego>        System.out.println(<doubleQuotes46>I'm Clicked!<doubleQuotes46>);<newline46mondego>        patient.setAge(ageField, log);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8089splitHere46","9603227splitHere46","initalize"
"8090splitHere46","9603227splitHere46","public void actionPerformed(ActionEvent e)<newline46mondego>{<newline46mondego>    if (patient == null)<newline46mondego>    {<newline46mondego>        patient = new Patient();<newline46mondego>    }<newline46mondego><newline46mondego>    if(e.getSource() == reportButton)<newline46mondego>    {<newline46mondego>        System.out.println(<doubleQuotes46>I'm Clicked!<doubleQuotes46>);<newline46mondego>        patient.setAge(ageField, log);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8091splitHere46","9603227splitHere46","initalize"
"8092splitHere46","9603227splitHere46","declare"
"8093splitHere46","9603227splitHere46","private Patient patient = new Patient();<newline46mondego>"
"8094splitHere46","9603256splitHere46","java.io.FilterWriter"
"8095splitHere46","9603256splitHere46","java.io.FilterOutputStream"
"8096splitHere46","9603256splitHere46","com.sun.xml.txw2.output.IndentingXMLStreamWriter"
"8097splitHere46","9603267splitHere46","invoice.delete()"
"8098splitHere46","9603267splitHere46","deleteAll()"
"8099splitHere46","9603267splitHere46","deleteAll()"
"8100splitHere46","9603267splitHere46","javax.persistence.Query"
"8101splitHere46","9603267splitHere46","delete()"
"8102splitHere46","9603267splitHere46","EntityManager"
"8103splitHere46","9603267splitHere46","remove()"
"8104splitHere46","9603267splitHere46","deleteAll()"
"8105splitHere46","9603267splitHere46","Invoice"
"8106splitHere46","9603267splitHere46","Invoice"
"8107splitHere46","9603267splitHere46","createInvoiceLine()"
"8108splitHere46","9603267splitHere46","invoice.refresh()"
"8109splitHere46","9603267splitHere46","Parent1"
"8110splitHere46","9603267splitHere46","Invoice"
"8111splitHere46","9603267splitHere46","Child1"
"8112splitHere46","9603267splitHere46","InvoiceLine"
"8113splitHere46","9603267splitHere46","import java.util.*;<newline46mondego>import javax.persistence.*;<newline46mondego>import org.junit.*;<newline46mondego>import play.test.*;<newline46mondego>import models.*;<newline46mondego><newline46mondego>public class Parent1Test extends UnitTest {<newline46mondego><newline46mondego>    public Parent1 p;<newline46mondego>    public Child1 c1;<newline46mondego>    public Child1 c2;<newline46mondego>    public Child1 c3;<newline46mondego><newline46mondego>    @Before<newline46mondego>    public void setUp() {<newline46mondego>        Fixtures.deleteAllModels();<newline46mondego><newline46mondego>        p = new Parent1();<newline46mondego>        c1 = new Child1();<newline46mondego>        c2 = new Child1();<newline46mondego>        c3 = new Child1();<newline46mondego>    }<newline46mondego><newline46mondego>    public void byAddingParentToChilds() {<newline46mondego>        c1.parent = p;<newline46mondego>        c2.parent = p;<newline46mondego>        c3.parent = p;<newline46mondego><newline46mondego>        c1.save();<newline46mondego>        c2.save();<newline46mondego>        c3.save();<newline46mondego>        p.refresh();<newline46mondego>    }<newline46mondego><newline46mondego>    @Test<newline46mondego>    public void testByAddingParentToChilds() {<newline46mondego>        byAddingParentToChilds();<newline46mondego>        assertEquals(p.id, c1.parent.id);<newline46mondego>        assertEquals(3, Child1.count());<newline46mondego>    }<newline46mondego><newline46mondego>    public void byAddingChildsToParent() {<newline46mondego>        p.childs = new ArrayList<Child1>();<newline46mondego>        p.childs.add(c1);<newline46mondego>        p.childs.add(c2);<newline46mondego>        p.childs.add(c3);<newline46mondego>        p.save();<newline46mondego>    }<newline46mondego><newline46mondego>    @Test<newline46mondego>    public void testByAddingChildsToParent() {<newline46mondego>        // By adding childs<newline46mondego>        byAddingChildsToParent();<newline46mondego><newline46mondego>        c1.refresh();<newline46mondego>        assertEquals(3, Child1.count());<newline46mondego>        // This will be null, because you added the childs to the <newline46mondego>        // parent while the childs are the owning side of the <newline46mondego>        // relation.<newline46mondego>        assertNull(c1.parent);<newline46mondego>    }<newline46mondego><newline46mondego>    @Test<newline46mondego>    public void testDeletingAfterAddingParentToChilds() {<newline46mondego>        byAddingParentToChilds();<newline46mondego>        p.delete();<newline46mondego>        assertEquals(0, Parent1.count());<newline46mondego>        assertEquals(0, Child1.count());<newline46mondego>    }<newline46mondego><newline46mondego>    @Test<newline46mondego>    public void testDeletingAfterAddingChildsToParent() {<newline46mondego>        byAddingChildsToParent();<newline46mondego>        p.delete();<newline46mondego>        assertEquals(0, Parent1.count());<newline46mondego>        assertEquals(0, Child1.count());<newline46mondego>    }<newline46mondego><newline46mondego>    @Test(expected=PersistenceException.class)<newline46mondego>    public void testDeleteAllAfterAddingParentToChilds() {<newline46mondego>        byAddingParentToChilds();<newline46mondego>        // The cascading doesn't work for deleteAll() so this line<newline46mondego>        // will throw an exception because the child elements still<newline46mondego>        // reference the parent.<newline46mondego>        assertEquals(1, Parent1.deleteAll());<newline46mondego>    }<newline46mondego><newline46mondego>    @Test<newline46mondego>    public void testDeleteAllAfterAddingChildsToParent() {<newline46mondego>        byAddingChildsToParent();<newline46mondego>        assertEquals(1, Parent1.deleteAll());<newline46mondego>        assertEquals(0, Parent1.count());<newline46mondego>        // Again the cascading doesn't work for deleteAll()<newline46mondego>        assertEquals(3, Child1.count());<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"8114splitHere46","9603369splitHere46","String s = <doubleQuotes46>S<doubleQuotes46>; // always a single character!<newline46mondego>Rectangle rect = getRect(); // defines the desired size and position<newline46mondego>FontMetrics fm = g2d.getFontMetrics();<newline46mondego>FontRenderContext frc = g2d.getFontRenderContext();<newline46mondego>TextLayout tl = new TextLayout(s, g2d.getFont(), frc);<newline46mondego>AffineTransform transform = new AffineTransform();<newline46mondego>transform.setToTranslation(rect.getX(), rect.getY());<newline46mondego>double scaleY = <newline46mondego>   rect.getHeight() / (double) (tl.getOutline(null).getBounds().getMaxY() <newline46mondego>                                - tl.getOutline(null).getBounds().getMinY());<newline46mondego>transform.scale(rect.getWidth() / (double) fm.stringWidth(s), scaleY);<newline46mondego>Shape shape = tl.getOutline(transform);<newline46mondego>g2d.setClip(shape);<newline46mondego>g2d.fill(shape.getBounds());<newline46mondego>"
"8115splitHere46","9603510splitHere46","accept"
"8116splitHere46","9603510splitHere46","accept"
"8117splitHere46","9603665splitHere46","jPanel1.isDisplayable()"
"8118splitHere46","9603665splitHere46","jPanel2.isDisplayable()"
"8119splitHere46","9603846splitHere46","private Calendar workingDaysBack(final Calendar from, final int count) {<newline46mondego>    for (int daysBack = 0; daysBack < count; ++daysBack) {<newline46mondego>        do {<newline46mondego>            from.add(Calendar.DAY_OF_YEAR, -1);<newline46mondego>        } while(isWeekend(from));<newline46mondego>    }<newline46mondego>    return from;<newline46mondego>}<newline46mondego><newline46mondego>private boolean isWeekend(Calendar cal) {<newline46mondego>    return cal.get(Calendar.DAY_OF_WEEK) == Calendar.SATURDAY ||<newline46mondego>           cal.get(Calendar.DAY_OF_WEEK) == Calendar.SUNDAY;<newline46mondego>}<newline46mondego>"
"8120splitHere46","9603880splitHere46","getMillis()"
"8121splitHere46","9603935splitHere46","Bundle b=new Bundle();<newline46mondego>b.putStringArray(<doubleQuotes46>key<doubleQuotes46>, strarray);<newline46mondego>Intent intent=new Intent(this, nextActivity.class);<newline46mondego>intent.putExtras(b);<newline46mondego>startActivity(intent);<newline46mondego>"
"8122splitHere46","9604016splitHere46","web.xml"
"8123splitHere46","9604042splitHere46","Connection db = DriverManager.getConnection( jdbc:mysql://192.168.0.3:3306,<user>,<password>);<newline46mondego>Statement stmt = db.createStatement();<newline46mondego>PreparedStatement psmt = con.prepareStatement(<doubleQuotes46>SELECT * FROM DB<doubleQuotes46>);<newline46mondego>ResultSet rs = psmt.executeQuery();<newline46mondego><newline46mondego>// get column names<newline46mondego>int len = rs.getMetaData().getColumnCount();<newline46mondego>Vector cols= new Vector(len);<newline46mondego>for(int i=1; i<=len; i++) // Note starting at 1<newline46mondego>    cols.add(rs.getMetaData().getColumnName(i));<newline46mondego><newline46mondego><newline46mondego>// Add Data<newline46mondego>Vector data = new Vector();<newline46mondego>while(rs.next())<newline46mondego>{<newline46mondego>    Vector row; = new Vector(len);<newline46mondego>    for(int i=1; i<=len; i++)<newline46mondego>    {<newline46mondego>        row.add(rs.getString(i));<newline46mondego>    }<newline46mondego>    data.add(row);<newline46mondego>}<newline46mondego><newline46mondego>// Now create the table<newline46mondego>JTable table = new JTable(data, cols);<newline46mondego>"
"8124splitHere46","9604064splitHere46","session.load(Supplier.class, id);"
"8125splitHere46","9604314splitHere46","public static void updateTableModelData(DefaultTableModel tModel, ResultSet rs) <newline46mondego>        throws Exception {<newline46mondego>    tModel.setRowCount(0);<newline46mondego>    ResultSetMetaData metaData = rs.getMetaData();<newline46mondego><newline46mondego>    while (rs.next()) {<newline46mondego>        Vector newRow = new Vector();<newline46mondego>        for (int i = 1; i <= numberOfColumns; i++) {<newline46mondego>            newRow.addElement(rs.getObject(i));<newline46mondego>        }<newline46mondego>        tModel.addRow(newRow);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8126splitHere46","9604314splitHere46","PreparedStatement pst = conn.prepareStatement(<doubleQuotes46>SQL Query here<doubleQuotes46>);<newline46mondego>ResultSet rs = pst.ExecuteQuery();<newline46mondego>DbUtils.updateTableModelData((DefaultTableModel) jTable1.getModel(), rs);<newline46mondego>"
"8127splitHere46","9604570splitHere46","ClassCastException"
"8128splitHere46","9604570splitHere46","int"
"8129splitHere46","9604570splitHere46","String"
"8130splitHere46","9604570splitHere46","int"
"8131splitHere46","9604570splitHere46","String"
"8132splitHere46","9604570splitHere46","ClassCastException"
"8133splitHere46","9604570splitHere46","int"
"8134splitHere46","9604570splitHere46","String"
"8135splitHere46","9604619splitHere46","@Table(name = <doubleQuotes46>USERS<doubleQuotes46>)<newline46mondego>"
"8136splitHere46","9604890splitHere46","public String getStatusMessage(StatusCode code) {<newline46mondego>    int status = code.getStatusCode();<newline46mondego>    String message = ...do stuff to get message :)<newline46mondego>    return message;<newline46mondego>}<newline46mondego>"
"8137splitHere46","9605011splitHere46","CDStore"
"8138splitHere46","9605011splitHere46","ListModel"
"8139splitHere46","9605011splitHere46","CDStore"
"8140splitHere46","9605011splitHere46","JList"
"8141splitHere46","9605011splitHere46","CDStore store = new CDStore(<doubleQuotes46>Store<doubleQuotes46>);<newline46mondego>// add some CDs<newline46mondego><newline46mondego>JList listOfCD = new JList(store);<newline46mondego>listOfCD.setVisibleRowCount(4);<newline46mondego>JScrollPane listPane = new JScrollPane(listOfCD);<newline46mondego>JTextField valueField = new JTextField(<doubleQuotes46>None<doubleQuotes46>, 7);<newline46mondego>"
"8142splitHere46","9605011splitHere46","CDStore implements ListModel"
"8143splitHere46","9605011splitHere46","discsArray"
"8144splitHere46","9605011splitHere46","fireContentsChanged"
"8145splitHere46","9605011splitHere46","public class CDStore implements ListModel {<newline46mondego>    private String storeName;<newline46mondego>    private List<CD> discsArray;<newline46mondego>    private List<Person> peopleArray;<newline46mondego><newline46mondego>    public CDStore(String storeNme) {<newline46mondego>        storeName = storeNme;<newline46mondego>        discsArray = new ArrayList<CD>();<newline46mondego>        peopleArray = new ArrayList<Person>();<newline46mondego>    }<newline46mondego><newline46mondego>    //your methods<newline46mondego><newline46mondego>    //ListModel<newline46mondego>    private List<ListDataListener> listener = new ArrayList<ListDataListener>();<newline46mondego><newline46mondego>    public void addListDataListener(ListDataListener l) {<newline46mondego>        listener.add(l);<newline46mondego>    }<newline46mondego><newline46mondego>    public void removeListDataListener(ListDataListener l) {<newline46mondego>        listener.remove(l);<newline46mondego>    }<newline46mondego><newline46mondego>    protected void fireContentsChanged() {<newline46mondego>        for (ListDataListener l : listener) {<newline46mondego>            l.contentsChanged(new ListDataEvent(this, ListDataEvent.CONTENTS_CHANGED, 0, discsArray.size()-1));<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public Object getElementAt(int index) {<newline46mondego>        return discsArray.get(index);<newline46mondego>    }<newline46mondego><newline46mondego>    public int getSize() {<newline46mondego>        return discsArray.size()<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8146splitHere46","9605027splitHere46","{"
"8147splitHere46","9605027splitHere46","public static void main(String[] args) {<newline46mondego>        String s = <doubleQuotes46>{3: {108:TR2011052300088}}<doubleQuotes46>;<newline46mondego>        String[] ss  = s.split(<doubleQuotes46>\\{3: \\{108:<doubleQuotes46>);<newline46mondego>        System.out.println(ss[1]); //prints TR2011052300088}}<newline46mondego>    }<newline46mondego>"
"8148splitHere46","9605108splitHere46","../lib/foo.jar"
"8149splitHere46","9605108splitHere46","build.properties"
"8150splitHere46","9605108splitHere46","myproject.library.foojar=C:/foopath/foo.jar<newline46mondego>"
"8151splitHere46","9605108splitHere46","build.xml"
"8152splitHere46","9605108splitHere46","<property file=<doubleQuotes46>../build.properties<doubleQuotes46>/><newline46mondego>"
"8153splitHere46","9605108splitHere46","nbproject/project.properties"
"8154splitHere46","9605108splitHere46","file.reference.foo.jar=C:/foopath/foo.jar<newline46mondego>"
"8155splitHere46","9605108splitHere46","file.reference.foo.jar=${myproject.library.foojar}<newline46mondego>"
"8156splitHere46","9605108splitHere46","build.properties"
"8157splitHere46","9605248splitHere46","ManagementFactory.getMemoryMXBean();<newline46mondego>ManagementFactory.getOperatingSystemMXBean();<newline46mondego>"
"8158splitHere46","9605265splitHere46","Thread"
"8159splitHere46","9605265splitHere46","Thread"
"8160splitHere46","9605265splitHere46","run()"
"8161splitHere46","9605265splitHere46","Thread.run()"
"8162splitHere46","9605265splitHere46","public void run() {<newline46mondego>    if (target != null) {<newline46mondego>        target.run();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8163splitHere46","9605265splitHere46","Thread"
"8164splitHere46","9605265splitHere46","Runnable"
"8165splitHere46","9605265splitHere46","target"
"8166splitHere46","9605265splitHere46","Thread"
"8167splitHere46","9605265splitHere46","@Override"
"8168splitHere46","9605265splitHere46","run()"
"8169splitHere46","9605265splitHere46","Thread"
"8170splitHere46","9605265splitHere46","run()"
"8171splitHere46","9605265splitHere46","Runnable()"
"8172splitHere46","9605265splitHere46","Runnable"
"8173splitHere46","9605265splitHere46","run()"
"8174splitHere46","9605265splitHere46","Thread"
"8175splitHere46","9605265splitHere46","final"
"8176splitHere46","9605265splitHere46","final"
"8177splitHere46","9605265splitHere46","implement"
"8178splitHere46","9605265splitHere46","override"
"8179splitHere46","9605302splitHere46","placemarkOnMap = new Hashtable<String, Hashtable<String,String>> ((Hashtable<String, Hashtable<String,String>>)data);<newline46mondego>"
"8180splitHere46","9605302splitHere46","placemarkOnMap = (Hashtable<String, Hashtable<String,String>>)data;<newline46mondego>"
"8181splitHere46","9605428splitHere46","fontChBox.getSelectionModel().selectFirst();<newline46mondego>"
"8182splitHere46","9605454splitHere46","Scanner.next()"
"8183splitHere46","9605454splitHere46","Scanner.nextLine()"
"8184splitHere46","9605454splitHere46","System.out.println(prompt);<newline46mondego>String e = ip.nextLine();<newline46mondego>return e;<newline46mondego>"
"8185splitHere46","9605478splitHere46","import java.awt.BorderLayout;<newline46mondego>import java.awt.Color;<newline46mondego>import java.awt.Container;<newline46mondego>import java.awt.Dimension;<newline46mondego>import java.awt.Toolkit;<newline46mondego>import java.awt.event.ActionListener;<newline46mondego>import java.io.File;<newline46mondego><newline46mondego>import java.awt.event.ActionEvent;<newline46mondego>import java.awt.event.ActionListener;<newline46mondego><newline46mondego><newline46mondego>import javax.swing.Icon;<newline46mondego>import javax.swing.ImageIcon;<newline46mondego>import javax.swing.JButton;<newline46mondego>import javax.swing.JDialog;<newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JLabel;<newline46mondego><newline46mondego>import javax.swing.JPanel;<newline46mondego><newline46mondego>//import Controller.HomeController;<newline46mondego><newline46mondego><newline46mondego>//import music.PlaySound;<newline46mondego><newline46mondego>public class Home extends JFrame {<newline46mondego><newline46mondego>    private JLabel label, label1, label2;<newline46mondego>    private JPanel panel;<newline46mondego>    private JButton logo, logo1, logo2, logo3, logo4, logo5, selectie;<newline46mondego>    private Container window = getContentPane();<newline46mondego>    private HomeController Controller;<newline46mondego><newline46mondego>    public Home (){<newline46mondego>        initGUI();<newline46mondego>    }<newline46mondego>    public void addHomeListener(ActionListener a){<newline46mondego>        selectie.addActionListener(a);<newline46mondego>    }<newline46mondego>    public void initGUI(){<newline46mondego><newline46mondego>        setLayout(null);<newline46mondego>        setTitle(<doubleQuotes46><doubleQuotes46>);<newline46mondego>        setPreferredSize(new Dimension(800,600));<newline46mondego>        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego><newline46mondego>        label = new JLabel();       <newline46mondego>        label.setBounds(0, 0, 266, 800);<newline46mondego>        label.setBackground(Color.WHITE);<newline46mondego>        label.setOpaque(true);<newline46mondego>        window.add(label);<newline46mondego><newline46mondego>        label1 = new JLabel();<newline46mondego>        label1.setBounds(267, 0, 266, 800);<newline46mondego>        label1.setBackground(Color.RED);<newline46mondego>        label1.setOpaque(true);<newline46mondego>        window.add(label1);<newline46mondego><newline46mondego>        label2 = new JLabel();<newline46mondego>        label2.setBounds(533, 0, 266, 800);<newline46mondego>        label2.setBackground(Color.WHITE);<newline46mondego>        label2.setOpaque(true);<newline46mondego>        window.add(label2);<newline46mondego><newline46mondego>        logo = new JButton(new ImageIcon(<doubleQuotes46>../Ajax/src/img/logotje.gif<doubleQuotes46>));<newline46mondego>        logo.setBorderPainted(false);<newline46mondego>        logo.setBounds(40, 150, 188, 188);<newline46mondego>        label1.add(logo);<newline46mondego><newline46mondego>        logo1 = new JButton(new ImageIcon(<doubleQuotes46>../Ajax/src/img/Ster.png<doubleQuotes46>));<newline46mondego>        logo1.setBorderPainted(false);<newline46mondego>        logo1.setBounds(10, 50, 82, 82);<newline46mondego>        label1.add(logo1);<newline46mondego><newline46mondego>        logo2 = new JButton(new ImageIcon(<doubleQuotes46>../Ajax/src/img/Ster.png<doubleQuotes46>));<newline46mondego>        logo2.setBorderPainted(false);<newline46mondego>        logo2.setBounds(92, 20, 82, 82);<newline46mondego>        label1.add(logo2);<newline46mondego><newline46mondego>        logo3 = new JButton(new ImageIcon(<doubleQuotes46>../Ajax/src/img/Ster.png<doubleQuotes46>));<newline46mondego>        logo3.setBorderPainted(false);<newline46mondego>        logo3.setBounds(174, 50, 82, 82);<newline46mondego>        label1.add(logo3);<newline46mondego><newline46mondego>        logo4 = new JButton(new ImageIcon(<doubleQuotes46>../Ajax/src/img/shirt.png<doubleQuotes46>));<newline46mondego>        logo4.setBorderPainted(false);<newline46mondego>        logo4.setBounds(50, 50, 135, 182);<newline46mondego>        label.add(logo4);<newline46mondego><newline46mondego>        logo5 = new JButton(new ImageIcon(<doubleQuotes46>../Ajax/src/img/uitshirt.png<doubleQuotes46>));<newline46mondego>        logo5.setBorderPainted(false);<newline46mondego>        logo5.setBounds(65, 50, 138, 190);<newline46mondego>        label2.add(logo5);<newline46mondego><newline46mondego>        selectie = new JButton(<doubleQuotes46>Selectie<doubleQuotes46>);<newline46mondego>        selectie.setBounds(60, 500, 99, 25);<newline46mondego>        selectie.setActionCommand(<doubleQuotes46>selectie<doubleQuotes46>);<newline46mondego>        label.add(selectie);<newline46mondego><newline46mondego>        pack();<newline46mondego><newline46mondego>        /*<newline46mondego>         * You are making a new object again,<newline46mondego>         * when you already had declared it as <newline46mondego>         * an instance Variable. So I used the <newline46mondego>         * one declared as instance variable..<newline46mondego>         * To this we will send the object of Home<newline46mondego>         * class, means the object of this class..<newline46mondego>         * And as we know that object of the <newline46mondego>         * class we are in is by default known <newline46mondego>         * as this, so passing this to HomeController class.<newline46mondego>         */<newline46mondego>        Controller = new HomeController(this);<newline46mondego>        addHomeListener(Controller);<newline46mondego><newline46mondego>        setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String... args)<newline46mondego>    {<newline46mondego>        javax.swing.SwingUtilities.invokeLater(new Runnable()<newline46mondego>        {<newline46mondego>            public void run()<newline46mondego>            {<newline46mondego>                new Home();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class HomeController implements ActionListener {<newline46mondego><newline46mondego>    /*<newline46mondego>     * Here we declared a Home class's variable,<newline46mondego>     * that we will use to dispose that JFrame.<newline46mondego>     */<newline46mondego>    private Home home;<newline46mondego><newline46mondego>    public HomeController(Home home)<newline46mondego>    {<newline46mondego>        this.home = home;<newline46mondego>    }<newline46mondego><newline46mondego>    public void actionPerformed (ActionEvent e){<newline46mondego><newline46mondego>            home.dispose();<newline46mondego>            Selectie selectie = new Selectie();<newline46mondego>            selectie.setVisible(true);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class Selectie extends JFrame<newline46mondego>{<newline46mondego>    public Selectie()<newline46mondego>    {<newline46mondego>        initGUI();<newline46mondego>    }<newline46mondego><newline46mondego>    public void initGUI()<newline46mondego>    {<newline46mondego>        setDefaultCloseOperation(EXIT_ON_CLOSE);<newline46mondego>        setLocationByPlatform(true);<newline46mondego><newline46mondego>        setSize(300, 300);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8186splitHere46","9605698splitHere46","hashCode()"
"8187splitHere46","9605698splitHere46","this(...)"
"8188splitHere46","9605740splitHere46","classpath*:/servlet-context.xml"
"8189splitHere46","9605740splitHere46","servlet-context.xml"
"8190splitHere46","9605740splitHere46","/myproject/WebContent/WEB-INF/spring/appServlet/servlet-context.xml"
"8191splitHere46","9605740splitHere46","servlet-context.xml"
"8192splitHere46","9605740splitHere46","WEB-INF/classes"
"8193splitHere46","9605740splitHere46","WEB-INF/classes/servlet-context.xml"
"8194splitHere46","9605740splitHere46","WEB-INF/classes/spring/appServlet/servlet-context.xml"
"8195splitHere46","9605740splitHere46","classpath*:/spring/appServlet/servlet-context.xml"
"8196splitHere46","9605861splitHere46","List"
"8197splitHere46","9605861splitHere46","List"
"8198splitHere46","9605861splitHere46","ArrayList"
"8199splitHere46","9605861splitHere46","mList = new ArrayList<Mat>();<newline46mondego>"
"8200splitHere46","9605861splitHere46","List"
"8201splitHere46","9605861splitHere46","List"
"8202splitHere46","9605861splitHere46","ArrayList"
"8203splitHere46","9605861splitHere46","LinkedList"
"8204splitHere46","9605861splitHere46","Vector"
"8205splitHere46","9605979splitHere46","String text = <doubleQuotes46>\<doubleQuotes46>text\<doubleQuotes46>,\<doubleQuotes46>1\<doubleQuotes46>,\<doubleQuotes46>more, more text\<doubleQuotes46>,\<doubleQuotes46>3\<doubleQuotes46><doubleQuotes46>;<newline46mondego><newline46mondego>    String[] split = text.split(<doubleQuotes46>\<doubleQuotes46>(,\<doubleQuotes46>)?<doubleQuotes46>);<newline46mondego>    for (String string : split) {<newline46mondego>        System.out.println(string);<newline46mondego>    }<newline46mondego>"
"8206splitHere46","9605979splitHere46","Pattern pattern = Pattern.compile(<doubleQuotes46>\<doubleQuotes46>([^\<doubleQuotes46>]+)\<doubleQuotes46><doubleQuotes46>);<newline46mondego>    Matcher matcher = pattern.matcher(text);<newline46mondego>    while(matcher.find()){<newline46mondego>        System.out.println(matcher.group(1));<newline46mondego>    }<newline46mondego>"
"8207splitHere46","9606269splitHere46","<!--Binary data type. The data should be sent/retrieved in as Base64 encoded Strings --><newline46mondego><fieldtype name=<doubleQuotes46>binary<doubleQuotes46> class=<doubleQuotes46>solr.BinaryField<doubleQuotes46>/><newline46mondego>"
"8208splitHere46","9606269splitHere46","binary"
"8209splitHere46","9606282splitHere46","javabin"
"8210splitHere46","9606282splitHere46","xml"
"8211splitHere46","9606293splitHere46","Icon / ImageIcons"
"8212splitHere46","9606293splitHere46","Queue"
"8213splitHere46","9606293splitHere46","Map"
"8214splitHere46","9606293splitHere46","Array"
"8215splitHere46","9606293splitHere46","List"
"8216splitHere46","9606293splitHere46","Vector"
"8217splitHere46","9606293splitHere46","Icon / ImageIcon"
"8218splitHere46","9606293splitHere46","invokeLater()"
"8219splitHere46","9606295splitHere46","Set"
"8220splitHere46","9606553splitHere46","edittext.getText().toString().substring(0, edittext.getText().toString().length()-1);<newline46mondego>"
"8221splitHere46","9606584splitHere46","public class ButtonClickHandler implements View.OnClickListener<newline46mondego>{<newline46mondego>public void onClick( View view ){<newline46mondego>    startCameraActivity();<newline46mondego>}<newline46mondego>}<newline46mondego>"
"8222splitHere46","9606606splitHere46","nsubj(CEO-6, John-1)"
"8223splitHere46","9606606splitHere46","nsubj(played-11, John-1)"
"8224splitHere46","9606606splitHere46","cop(CEO-6, was-4)"
"8225splitHere46","9606606splitHere46","det(CEO-6, the-5)"
"8226splitHere46","9606606splitHere46","rcmod(John-1, CEO-6)"
"8227splitHere46","9606606splitHere46","det(company-9, a-8)"
"8228splitHere46","9606606splitHere46","prep_of(CEO-6, company-9)"
"8229splitHere46","9606606splitHere46","root(ROOT-0, played-11)"
"8230splitHere46","9606606splitHere46","dobj(played-11, golf-12)"
"8231splitHere46","9606606splitHere46","nsubj(CEO-6, John-1)"
"8232splitHere46","9606606splitHere46","nsubj(CEO-6, John-1)"
"8233splitHere46","9606606splitHere46","John-1"
"8234splitHere46","9606606splitHere46","nsubj(played-11, John-1)"
"8235splitHere46","9606606splitHere46","CEO-6"
"8236splitHere46","9606606splitHere46","cop(CEO-6, was-4)"
"8237splitHere46","9606606splitHere46","det(CEO-6, the-5)"
"8238splitHere46","9606606splitHere46","rcmod(John-1, CEO-6)"
"8239splitHere46","9606606splitHere46","prep_of(CEO-6, company-9)"
"8240splitHere46","9606606splitHere46","was-4, the-5, company-9"
"8241splitHere46","9606606splitHere46","cop(CEO-6, was-4)"
"8242splitHere46","9606606splitHere46","det(CEO-6, the-5)"
"8243splitHere46","9606606splitHere46","rcmod(John-1, CEO-6)"
"8244splitHere46","9606606splitHere46","prep_of(CEO-6, company-9)"
"8245splitHere46","9606606splitHere46","det(company-9, a-8)"
"8246splitHere46","9606606splitHere46","nsubj(CEO-6, John-1)"
"8247splitHere46","9606606splitHere46","John was the CEO a company"
"8248splitHere46","9606606splitHere46","of"
"8249splitHere46","9606606splitHere46","prep_of(CEO-6, company-9)"
"8250splitHere46","9606606splitHere46","of"
"8251splitHere46","9606606splitHere46","John played golf"
"8252splitHere46","9606729splitHere46","create line Scanner<newline46mondego>while scanner has next *line*<newline46mondego>   get the next line<newline46mondego>   use String#split(<doubleQuotes46> <doubleQuotes46>) to create a String array from this line<newline46mondego>   Create your object from the items in this array<newline46mondego>   Add your new object into your list<newline46mondego>end while loop<newline46mondego>"
"8253splitHere46","9606868splitHere46","public class A {<newline46mondego><newline46mondego>    public void myMethod() {<newline46mondego>        System.out.println(<doubleQuotes46>A.myMethod()<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    public void myOtherMethod() {<newline46mondego>        System.out.println(<doubleQuotes46>A.myOtherMethod()<doubleQuotes46>);<newline46mondego>        myMethod();<newline46mondego>    }<newline46mondego><newline46mondego>    public static class SubA extends A {<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void myMethod() {<newline46mondego>            System.out.println(<doubleQuotes46>SubA.myMethod()<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        A a = new A();<newline46mondego>        SubA subA = new SubA();<newline46mondego>        a.myMethod(); //A.myMethod()<newline46mondego>        subA.myMethod(); //SubA.myMethod()<newline46mondego>        a.myOtherMethod(); //A.myOtherMethod() + A.myMethod()<newline46mondego>        subA.myOtherMethod(); //A.myOtherMethod() + SubA.myMethod()<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"8254splitHere46","9606940splitHere46","-XX:+UseConcMarkSweepGC"
"8255splitHere46","9607068splitHere46","stacktrace"
"8256splitHere46","9607068splitHere46","ant"
"8257splitHere46","9607068splitHere46","maven"
"8258splitHere46","9607102splitHere46","antlib:"
"8259splitHere46","9607102splitHere46","org/apache.ivy/antlib.xml"
"8260splitHere46","9607102splitHere46","<ant install>/lib"
"8261splitHere46","9607102splitHere46","-lib"
"8262splitHere46","9607102splitHere46","CLASSPATH"
"8263splitHere46","9607102splitHere46","${property}"
"8264splitHere46","9607102splitHere46","<property>"
"8265splitHere46","9607102splitHere46","<property>"
"8266splitHere46","9607150splitHere46","println"
"8267splitHere46","9607150splitHere46","sleep(1)"
"8268splitHere46","9607150splitHere46","Thread"
"8269splitHere46","9607150splitHere46","System.out"
"8270splitHere46","9607150splitHere46","<doubleQuotes46>ONE<doubleQuotes46>"
"8271splitHere46","9607150splitHere46","<doubleQuotes46>TWO<doubleQuotes46>"
"8272splitHere46","9607150splitHere46","yield()"
"8273splitHere46","9607150splitHere46","/tmp/x"
"8274splitHere46","9607150splitHere46","yield()"
"8275splitHere46","9607150splitHere46","sort | uniq -c"
"8276splitHere46","9607150splitHere46","243152 ONE<newline46mondego>240409 TWO<newline46mondego>"
"8277splitHere46","9607150splitHere46","yield()"
"8278splitHere46","9607154splitHere46","@SuppressWarnings"
"8279splitHere46","9607154splitHere46","@SuppressWarnings"
"8280splitHere46","9607154splitHere46","@SuppressWarnings"
"8281splitHere46","9607154splitHere46","@Target(value={TYPE,FIELD,METHOD,PARAMETER,CONSTRUCTOR,LOCAL_VARIABLE})<newline46mondego>"
"8282splitHere46","9607154splitHere46","ANNOTATION_TYPE"
"8283splitHere46","9607154splitHere46","@SuppressWarnings"
"8284splitHere46","9607181splitHere46","ArrayList"
"8285splitHere46","9607181splitHere46","x"
"8286splitHere46","9607181splitHere46","ArrayList <Objects> xcoords = new ArrayList<Objects>();<newline46mondego>"
"8287splitHere46","9607181splitHere46","xcoords"
"8288splitHere46","9607181splitHere46","ArrayList"
"8289splitHere46","9607181splitHere46","ArrayList"
"8290splitHere46","9607181splitHere46","xco"
"8291splitHere46","9607181splitHere46","public ArrayList<Integer> xco() { // make sure to parameterize the ArrayList<newline46mondego>    ArrayList<Integer> xcoords = new ArrayList<Integer>();<newline46mondego><newline46mondego>    // .. add all the elements ..<newline46mondego><newline46mondego>    return xcoords;<newline46mondego>}<newline46mondego>"
"8292splitHere46","9607181splitHere46","main"
"8293splitHere46","9607181splitHere46","public static void main(String [] args) { // add correct arguments<newline46mondego><newline46mondego>    //..<newline46mondego>    ArrayList <Integer> xcoords = (new Objects()).xco();<newline46mondego><newline46mondego>    for( int x = 0 ; x < xcoords.size() ; x++ ) { // start from index 0<newline46mondego>        System.out.println(xcoords.get(x));<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8294splitHere46","9607223splitHere46","//get the size of the ResultSet<newline46mondego>    myResultSet.last();<newline46mondego>    int resultSetSize = myResultSet.getRow();<newline46mondego>    //initialize your arrays to be joined<newline46mondego>    int[] array1 = new int[resultSetSize];<newline46mondego>    int[] array2 = new int[resultSetSize];<newline46mondego>   //loop through the result so array1 will be the same as column1 of your table, etc.<newline46mondego>    int count = 0;<newline46mondego>    myResultSet.beforeFirst();<newline46mondego>    while (myResultSet.next()){<newline46mondego>        array1[count] = myResultSet.getInt(<doubleQuotes46>my column 1<doubleQuotes46>);<newline46mondego>        array2[count] = myResultSet.getInt(<doubleQuotes46>my column 2<doubleQuotes46>);<newline46mondego>        count++;<newline46mondego>    }<newline46mondego>    //declare rows and columns for easy code readability<newline46mondego>    int row = 0;<newline46mondego>    int column = 2;<newline46mondego>    //set your combined array row and column lengths<newline46mondego>    int[][] aCombined = new int[array1.length][column];<newline46mondego>    //reset your column value to put array1 down column 0<newline46mondego>    column = 0;<newline46mondego>    for (int tempInt : array1){<newline46mondego>        aCombined[row][column] = tempInt;<newline46mondego>        row++;<newline46mondego>    }<newline46mondego>    //reset your row and go to the next column to do the same as above<newline46mondego>    row = 0;<newline46mondego>    column = 1;<newline46mondego>    for (int tempInt : array2){<newline46mondego>        aCombined[row][column] = tempInt;<newline46mondego>        row++;<newline46mondego>    }<newline46mondego>"
"8295splitHere46","9607223splitHere46","public ArrayList getMarkerID(int objectId){<newline46mondego>     ArrayList<int> myArrayList = new ArrayList<>();<newline46mondego>     myResultSet.beforeFirst();<newline46mondego>     while (myResultSet.next()){<newline46mondego>         if (myResultSet.getInt(<doubleQuotes46>object_id<doubleQuotes46>) == objectId){<newline46mondego>              myArrayList.add(myResultSet.getInt(<doubleQuotes46>marker_id<doubleQuotes46>));<newline46mondego>         }<newline46mondego>      }<newline46mondego>      return myArrayList;<newline46mondego>  }<newline46mondego>"
"8296splitHere46","9607250splitHere46","file.exists()"
"8297splitHere46","9607268splitHere46","getFilePath()"
"8298splitHere46","9607268splitHere46","AbstractAgent"
"8299splitHere46","9607268splitHere46","getFilePath()"
"8300splitHere46","9607268splitHere46","FileUtil"
"8301splitHere46","9607324splitHere46","public class TablePanel<newline46mondego>{<newline46mondego>  public static void addTableToPanel(JPanel jPanel, Vector rowData, Vector columnNames)<newline46mondego>  {<newline46mondego>    JTable jTable = new JTable(rowData, columnNames);<newline46mondego>    jTable.setFillsViewportHeight(true);<newline46mondego><newline46mondego>    JScrollPane jScrollPane = new JScrollPane(jTable);<newline46mondego>    jScrollPane.setPreferredSize(new Dimension(300, 50));<newline46mondego><newline46mondego>    jPanel.add(jScrollPane);<newline46mondego>  }<newline46mondego><newline46mondego>  public static void main(String[] args) throws Exception<newline46mondego>  {<newline46mondego>    SwingUtilities.invokeAndWait(new Runnable()<newline46mondego>    {<newline46mondego>      @Override<newline46mondego>      public void run()<newline46mondego>      {<newline46mondego>        Vector cols = new Vector();<newline46mondego>        Vector rows = new Vector();<newline46mondego>        Vector row1 = new Vector();<newline46mondego><newline46mondego>        cols.add(<doubleQuotes46>A<doubleQuotes46>);<newline46mondego>        cols.add(<doubleQuotes46>B<doubleQuotes46>);<newline46mondego>        cols.add(<doubleQuotes46>C<doubleQuotes46>);<newline46mondego>        row1.add(<doubleQuotes46>1<doubleQuotes46>);<newline46mondego>        row1.add(<doubleQuotes46>2<doubleQuotes46>);<newline46mondego>        row1.add(<doubleQuotes46>3<doubleQuotes46>);<newline46mondego>        rows.add(row1);<newline46mondego>        rows.add(row1.clone());<newline46mondego>        rows.add(row1.clone());<newline46mondego>        rows.add(row1.clone());<newline46mondego><newline46mondego>        JFrame frame = new JFrame(<doubleQuotes46>TableTest<doubleQuotes46>);<newline46mondego>        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego><newline46mondego>        JPanel jPanel = new JPanel();<newline46mondego>        jPanel.setLayout(new BorderLayout(0, 0));<newline46mondego>        TablePanel.addTableToPanel(jPanel, rows, cols);<newline46mondego><newline46mondego>        frame.getContentPane().add(jPanel);<newline46mondego>        frame.pack();<newline46mondego>        frame.setVisible(true);<newline46mondego>      }<newline46mondego>    });<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"8302splitHere46","9607334splitHere46","AssetManagerTest"
"8303splitHere46","9607334splitHere46","manager.load()"
"8304splitHere46","9607334splitHere46","AssetManager"
"8305splitHere46","9607334splitHere46","load()"
"8306splitHere46","9607334splitHere46","get()"
"8307splitHere46","9607334splitHere46","unload()"
"8308splitHere46","9607383splitHere46","Map<Walls, Windows> myMAp = new HashMap<Walls, Windows>();<newline46mondego>mMap.put(new Walls(1,2), new Windows(1,2));<newline46mondego>"
"8309splitHere46","9607383splitHere46","List<Walls> rooms = new ArrayList<Walls>();<newline46mondego>rooms.add(new Walls(1,2,new Windows(1,2)));<newline46mondego><newline46mondego>//--- in Walls class:<newline46mondego>Windows windows;<newline46mondego><newline46mondego>public Walls(int height, int width, Windows windows) {<newline46mondego>    this.windows = windows;<newline46mondego>    // the rest<newline46mondego>}<newline46mondego>"
"8310splitHere46","9607463splitHere46","new JSONDeserializer().use(<doubleQuotes46>some.path.to.bar<doubleQuotes46>, new EnhancedStringObjectFactory() ).deserialize( json, new SomeObject() );<newline46mondego><newline46mondego><newline46mondego><newline46mondego>public class EnhancedStringObjectFactory implements ObjectFactory {<newline46mondego>    public Object instantiate(ObjectBinder context, Object value, Type targetType, Class targetClass) {<newline46mondego>        if( value instanceof String ) {<newline46mondego>            return value;<newline46mondego>        } else if( value instanceof Number ) {<newline46mondego>            return ((Number)value).toString();<newline46mondego>        } else {<newline46mondego>           throw context.cannotConvertValueToTargetType(value, String.class);<newline46mondego>        }<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"8311splitHere46","9607463splitHere46","new JSONDeserializer().use( String.class, new EnhancedStringObjectFactory() ).deserialize( json, new SomeObject() );<newline46mondego>"
"8312splitHere46","9607482splitHere46","String SQL_QUERY =<doubleQuotes46>Select items.iname,items.iid,items.iprice from Item items where items.iid = '<doubleQuotes46>+selecteditem+<doubleQuotes46>'<doubleQuotes46>;<newline46mondego>"
"8313splitHere46","9607482splitHere46","selectedItem"
"8314splitHere46","9607482splitHere46","String SQL_QUERY =<doubleQuotes46>Select items.iname,items.iid,items.iprice from Item items where items.iid = :selecteditem<doubleQuotes46>;    <newline46mondego>SQLQuery query = session.createSQLQuery(SQL_QUERY);    <newline46mondego>query.setParameter(<doubleQuotes46>selecteditem<doubleQuotes46>, selecteditem);<newline46mondego>List<Object[]> results = query.list();<newline46mondego>"
"8315splitHere46","9607655splitHere46","JSONArray"
"8316splitHere46","9607655splitHere46","JSONObject"
"8317splitHere46","9607695splitHere46","SwingUtilities#getWindowAncestor"
"8318splitHere46","9607695splitHere46","Window topLevelWindow = SwingUtilities.getWindowAncestor(myComponent);<newline46mondego>topLevelWindow.pack();<newline46mondego>"
"8319splitHere46","9607705splitHere46","Object get(Object key)"
"8320splitHere46","9607705splitHere46","key1"
"8321splitHere46","9607705splitHere46","textDict"
"8322splitHere46","9607705splitHere46","// first access testDict at index 0 in the ArrayList al <newline46mondego>// and then it's element with key <doubleQuotes46>key1<doubleQuotes46><newline46mondego>al.get(0).get(<doubleQuotes46>key1<doubleQuotes46>);<newline46mondego>"
"8323splitHere46","9607705splitHere46","Dictionary"
"8324splitHere46","9607705splitHere46","Hashtable"
"8325splitHere46","9607705splitHere46","HashMap"
"8326splitHere46","9607705splitHere46","testDict = new Hashtable<String, String>();<newline46mondego>"
"8327splitHere46","9607705splitHere46","dataVar"
"8328splitHere46","9607752splitHere46","$ wget http://www.lua.org/ftp/lua-5.1.5.tar.gz<newline46mondego>$ tar xzf lua-5.1.5.tar.gz<newline46mondego>$ cd lua-5.1.5<newline46mondego>$ make -j macosx<newline46mondego>$ make install<newline46mondego>$ cd ..<newline46mondego>"
"8329splitHere46","9607752splitHere46","$ wget https://github.com/jasonsantos/luajava/zipball/master<newline46mondego>$ mv master luajava.zip<newline46mondego>$ unzip luajava.zip<newline46mondego>$ mv jasonsantos-luajava-32a3fcd/ luajava<newline46mondego>$ cd luajava<newline46mondego>"
"8330splitHere46","9607752splitHere46","$ diff -u config.old config<newline46mondego>--- config.old  2007-12-27 08:38:30.000000000 +0100<newline46mondego>+++ config  2012-03-07 20:11:28.000000000 +0100<newline46mondego>@@ -1,11 +1,11 @@<newline46mondego> #############################################################<newline46mondego> #Linux/BSD/Mac<newline46mondego>-LUA_DIR= /usr/local/share/lua/5.1.1<newline46mondego>+LUA_DIR= /usr/local/share/lua/5.1<newline46mondego> LUA_LIBDIR= /usr/local/lib<newline46mondego>-LUA_INCLUDES= /usr/local/include<newline46mondego>-JDK= $(JAVA_HOME)<newline46mondego>+LUA_INCLUDES= -I/usr/local/include -I/System/Library/Frameworks/JavaVM.framework/Headers<newline46mondego>+#JDK= $(JAVA_HOME)<newline46mondego> # For Mac OS, comment the above line and uncomment this one<newline46mondego>-#JDK=/Library/Java/Home<newline46mondego>+JDK=/Library/Java/Home<newline46mondego><newline46mondego> # Full path to Lua static library<newline46mondego> LIB_LUA=$(LUA_LIBDIR)/liblua.a<newline46mondego>@@ -18,15 +18,15 @@<newline46mondego> LIB_PREFIX= lib<newline46mondego><newline46mondego> #Linux/BSD<newline46mondego>-LIB_OPTION= -shared<newline46mondego>+#LIB_OPTION= -shared<newline46mondego> #Mac OS<newline46mondego>-#LIB_OPTION= -dynamiclib -all_load<newline46mondego>+LIB_OPTION= -dynamiclib -all_load<newline46mondego><newline46mondego> ## On FreeBSD and Mac OS systems, the following line should be commented<newline46mondego> DLLIB= -ldl<newline46mondego><newline46mondego> WARN= -O2 -Wall -fPIC -W -Waggregate-return -Wcast-align -Wmissing-prototypes -Wnested-externs -Wshadow -Wwrite-strings<newline46mondego>-INCS= -I$(JDK)/include -I$(JDK)/include/linux -I$(LUA_INCLUDES)<newline46mondego>+INCS= -I$(JDK)/include -I$(JDK)/include/linux $(LUA_INCLUDES)<newline46mondego> CFLAGS= $(WARN) $(INCS)<newline46mondego><newline46mondego> CC= gcc<newline46mondego>"
"8331splitHere46","9607752splitHere46","$ make<newline46mondego>gcc -O2 -Wall -fPIC -W -Waggregate-return -Wcast-align -Wmissing-prototypes -Wnested-externs -Wshadow -Wwrite-strings -I/Library/Java/Home/include -I/Library/Java/Home/include/linux -I/usr/local/include -I/System/Library/Frameworks/JavaVM.framework/Headers   -c -o src/c/luajava.o src/c/luajava.c<newline46mondego>... a million warnings later ...<newline46mondego>export MACOSX_DEPLOYMENT_TARGET=10.3; gcc -dynamiclib -all_load -o libluajava-1.1.so src/c/luajava.o /usr/local/lib/liblua.a<newline46mondego>------------------<newline46mondego>Build Complete<newline46mondego>------------------<newline46mondego>"
"8332splitHere46","9607780splitHere46","jar xf cobertura.jar tasks.properties; cat tasks.properties <newline46mondego>"
"8333splitHere46","9607817splitHere46","if"
"8334splitHere46","9607817splitHere46","if ((row == 0) && (column == 0)) {<newline46mondego>    d.setBackground(new java.awt.Color(255, 72, 72));<newline46mondego>}<newline46mondego>else {<newline46mondego>    d.setBackground(Color.WHITE);<newline46mondego>}<newline46mondego>"
"8335splitHere46","9607937splitHere46","config.setAuthEndpoint()"
"8336splitHere46","9607937splitHere46","config.setServiceEndpoint()"
"8337splitHere46","9608008splitHere46","java.net.URI"
"8338splitHere46","9608008splitHere46","java.net.URL"
"8339splitHere46","9608008splitHere46","equals"
"8340splitHere46","9608008splitHere46","java.net.URI"
"8341splitHere46","9608008splitHere46","public static String getDomainName(String url) throws URISyntaxException {<newline46mondego>    URI uri = new URI(url);<newline46mondego>    String domain = uri.getHost();<newline46mondego>    return domain.startsWith(<doubleQuotes46>www.<doubleQuotes46>) ? domain.substring(4) : domain;<newline46mondego>}<newline46mondego>"
"8342splitHere46","9608008splitHere46","httpfoo/bar"
"8343splitHere46","9608008splitHere46","http"
"8344splitHere46","9608008splitHere46","HTTP://example.com/"
"8345splitHere46","9608008splitHere46","//example.com/"
"8346splitHere46","9608008splitHere46","www/foo"
"8347splitHere46","9608008splitHere46","www"
"8348splitHere46","9608008splitHere46","wwwexample.com"
"8349splitHere46","9608008splitHere46","www."
"8350splitHere46","9608008splitHere46","www"
"8351splitHere46","9608008splitHere46","java.net.URI"
"8352splitHere46","9608008splitHere46","^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?<newline46mondego>   12            3  4          5       6  7        8 9<newline46mondego>"
"8353splitHere46","9608192splitHere46","p1(-1,-1)<newline46mondego>p4(5,5)<newline46mondego><newline46mondego>p2(-1,-11)<newline46mondego>p3(5,0)<newline46mondego>"
"8354splitHere46","9608192splitHere46","p3(5,-5)<newline46mondego>"
"8355splitHere46","9608303splitHere46","jta.jar"
"8356splitHere46","9608316splitHere46","int operator1 =  (int) rand.nextInt(4);<newline46mondego>// ...<newline46mondego>char op;<newline46mondego>switch(operator1) {<newline46mondego>   case 0: op = '+'; break;<newline46mondego>   case 1: op = '-'; break;<newline46mondego>   // ...<newline46mondego>}<newline46mondego>String display = aString + op + ...<newline46mondego>c1 = a;<newline46mondego>switch(operator1) {<newline46mondego>   case 0: c1 += b; break;<newline46mondego>   case 1: c1 -= b; break;<newline46mondego>   // ...<newline46mondego> }<newline46mondego>"
"8357splitHere46","9608490splitHere46","interface DoStuff{<newline46mondego>    void doIt();<newline46mondego>}<newline46mondego>"
"8358splitHere46","9608490splitHere46","doIt()"
"8359splitHere46","9608490splitHere46","DoStuff"
"8360splitHere46","9608490splitHere46","userStuffDoer.doIt()"
"8361splitHere46","9608514splitHere46","@SecondaryTable"
"8362splitHere46","9608514splitHere46","@Column(name=<doubleQuotes46>featureName<doubleQuotes46>, table=<doubleQuotes46>secondTable<doubleQuotes46>)<newline46mondego>String featureName;<newline46mondego>"
"8363splitHere46","9608722splitHere46","new A()"
"8364splitHere46","9608722splitHere46","aob"
"8365splitHere46","9608722splitHere46","A"
"8366splitHere46","9608722splitHere46","d"
"8367splitHere46","9608722splitHere46","aob"
"8368splitHere46","9608722splitHere46","A"
"8369splitHere46","9608722splitHere46","A firstA = new A();<newline46mondego>A secondA = new A();<newline46mondego>secondA.aob = firstA;<newline46mondego>A d = secondA.aob;<newline46mondego>"
"8370splitHere46","9608722splitHere46","secondA"
"8371splitHere46","9608725splitHere46","ArrayList<Integer> iconList = new ArrayList<Integer>();"
"8372splitHere46","9608725splitHere46","iconList.add(Integer.parseInt(cursor.getString(0)));"
"8373splitHere46","9608725splitHere46","for (int i: iconList)<newline46mondego>{<newline46mondego>    // i is your entire array starting at index 0<newline46mondego>}<newline46mondego>"
"8374splitHere46","9608725splitHere46","for (int i=0; i< iconList.size(), i++)<newline46mondego>{<newline46mondego><newline46mondego>}<newline46mondego>"
"8375splitHere46","9608920splitHere46","public void cancelar(){<newline46mondego>    fechar();<newline46mondego>    //Limpa todos os campos do formulÃ¡rio<newline46mondego>    FacesContext context = FacesContext.getCurrentInstance();<newline46mondego>    Application application = context.getApplication();<newline46mondego>    ViewHandler viewHandler = application.getViewHandler();<newline46mondego>    UIViewRoot viewRoot = viewHandler.createView(context, context<newline46mondego>            .getViewRoot().getViewId());<newline46mondego>    context.setViewRoot(viewRoot);<newline46mondego>    context.renderResponse();<newline46mondego>}<newline46mondego>"
"8376splitHere46","9608920splitHere46","<p:commandButton value=<doubleQuotes46>CANCELAR<doubleQuotes46> styleClass=<doubleQuotes46>hrgi-botao-popup<doubleQuotes46><newline46mondego>    update=<doubleQuotes46>@form<doubleQuotes46> immediate=<doubleQuotes46>true<doubleQuotes46> action=<doubleQuotes46>#{controladorPopup.cancelar}<doubleQuotes46>/><newline46mondego>"
"8377splitHere46","9608995splitHere46","<h:dataTable value=<doubleQuotes46>#{pagination.pagesList}<doubleQuotes46> var=<doubleQuotes46>page<doubleQuotes46>><newline46mondego>  <h:column><newline46mondego>    <h:outputText value=<doubleQuotes46>#{page}<doubleQuotes46>></h:outputText><newline46mondego>  </h:column><newline46mondego></h:dataTable><newline46mondego>"
"8378splitHere46","9608995splitHere46","List<Integer>"
"8379splitHere46","9608995splitHere46","h:dataTable"
"8380splitHere46","9609278splitHere46","getString()"
"8381splitHere46","9609278splitHere46","HSSFTextBox"
"8382splitHere46","9609278splitHere46","HSSFRichTextString"
"8383splitHere46","9609278splitHere46","getString()"
"8384splitHere46","9609278splitHere46","String comment = cell.getComment().getString().getString();<newline46mondego>"
"8385splitHere46","9609278splitHere46","null"
"8386splitHere46","9609437splitHere46","UnsignedBytes"
"8387splitHere46","9609505splitHere46","import android.graphics.*;<newline46mondego><newline46mondego>public class AniSprite {<newline46mondego><newline46mondego>public RectF target;<newline46mondego>public Rect source;<newline46mondego>public Bitmap bitmap;<newline46mondego>public int width;<newline46mondego>public int height;<newline46mondego>public float posx;<newline46mondego>public float posy;<newline46mondego>public int frames;<newline46mondego>public int curframe = 0;<newline46mondego><newline46mondego>public AniSprite(Bitmap bitmap, float posx, float posy, int width, int height, int frames) {<newline46mondego>    this.drawview = drawview;<newline46mondego>    this.bitmap = bitmap;<newline46mondego>    this.width = width;<newline46mondego>    this.height = height;<newline46mondego>    this.posx = posx;<newline46mondego>    this.posy = posy;<newline46mondego>    this.frames = frames;<newline46mondego>    source = new Rect(curframe * width, 0, (curframe * width) + width, height);<newline46mondego>    target = new RectF(posx, posy, posx + (width), posy + (height));<newline46mondego>}<newline46mondego><newline46mondego>public void animate() {<newline46mondego>    curframe++;<newline46mondego>    if(curframe >= frames){<newline46mondego>        curframe = 0;<newline46mondego>    }<newline46mondego>    source = new Rect(curframe, 0, (curframe) + width, height);<newline46mondego>}<newline46mondego><newline46mondego>public void setSourceRect(Rect rect) {<newline46mondego>    source = rect;<newline46mondego>    curframe = rect.right/width;<newline46mondego>}<newline46mondego><newline46mondego>public void ChangePos(float posx, float posy) {<newline46mondego>    this.posx = posx;<newline46mondego>    this.posy = posy;<newline46mondego>    source = new Rect(curframe * width, 0, (curframe * width) + width, height);<newline46mondego>    target = new RectF(posx, posy, posx + (width), posy + (height));<newline46mondego>}<newline46mondego><newline46mondego>}<newline46mondego>"
"8388splitHere46","9609505splitHere46","canvas.drawBitmap(sprite.bitmap, sprite.source, sprite.target, null);<newline46mondego>"
"8389splitHere46","9609547splitHere46","thisImage = thisImage = ... a java.awt.Image from a scanner<newline46mondego>if(thisImage!=null){  <newline46mondego>  ByteArrayOutputStream baos = new ByteArrayOutputStream();<newline46mondego>  ImageOutputStream ios = ImageIO.createImageOutputStream(baos);<newline46mondego>  boolean foundWriter = false;<newline46mondego>  BufferedImage bimg = new BufferedImage(thisImage.getWidth(null),thisImage.getHeight(null), BufferedImage.TYPE_BYTE_BINARY);<newline46mondego>  bimg.createGraphics().drawImage(thisImage, 0, 0, null); <newline46mondego>  for(Iterator<ImageWriter> writerIter = ImageIO.getImageWritersByFormatName(<doubleQuotes46>tif<doubleQuotes46>); writerIter.hasNext() && !foundWriter;) {<newline46mondego>    foundWriter = true;<newline46mondego>    ImageWriter writer = (ImageWriter)writerIter.next();<newline46mondego>    writer.setOutput(ios);<newline46mondego>    TIFFImageWriteParam writeParam = (TIFFImageWriteParam)writer.getDefaultWriteParam();<newline46mondego>    writeParam.setCompressionMode(ImageWriteParam.MODE_EXPLICIT);<newline46mondego>    writeParam.setCompressionType(<doubleQuotes46>CCITT T.6<doubleQuotes46>); <newline46mondego>    writer.prepareWriteSequence(null);<newline46mondego>    ImageTypeSpecifier spec = ImageTypeSpecifier.createFromRenderedImage(bimg);<newline46mondego>    javax.imageio.metadata.IIOMetadata metadata = writer.getDefaultImageMetadata(spec, writeParam);<newline46mondego>    IIOImage iioImage = new IIOImage(bimg, null, metadata);<newline46mondego>    writer.writeToSequence(iioImage, writeParam);<newline46mondego>    bimg.flush();<newline46mondego>    writer.endWriteSequence();<newline46mondego>    ios.flush();<newline46mondego>    writer.dispose();<newline46mondego>    ios.close();<newline46mondego>    thisByteArray = baos.toByteArray(); <newline46mondego>    baos.close();<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"8390splitHere46","9609552splitHere46","/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Libraries/<newline46mondego>"
"8391splitHere46","9609607splitHere46","public workPoS() { <newline46mondego>  super(); <newline46mondego>"
"8392splitHere46","9609607splitHere46","for (int x = 0; x < some_list.length; x++) {<newline46mondego>      some_list[x] = wp.new dataList();<newline46mondego>        some_list[x].firstName = <doubleQuotes46>John<doubleQuotes46>;<newline46mondego>        some_list[x].middleName = <doubleQuotes46>Jacob<doubleQuotes46>;<newline46mondego>        some_list[x].lastName = <doubleQuotes46>Jingle-Heimer-Schmidt<doubleQuotes46>;<newline46mondego>        some_list[x].age = 101;<newline46mondego>    }<newline46mondego><newline46mondego>    for (int x = 0; x < some_list.length; x++) {<newline46mondego>        System.out.println(some_list[x].firstName + <doubleQuotes46> <doubleQuotes46><newline46mondego>                + some_list[x].middleName + <doubleQuotes46> <doubleQuotes46> + some_list[x].lastName<newline46mondego>                + <doubleQuotes46> Age: <doubleQuotes46> + some_list[x].age);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>public class dataList {<newline46mondego>    String firstName, middleName, lastName;<newline46mondego>    int age;<newline46mondego><newline46mondego>    public dataList() {<newline46mondego>        firstName = <doubleQuotes46><doubleQuotes46>;<newline46mondego>        middleName = <doubleQuotes46><doubleQuotes46>;<newline46mondego>        lastName = <doubleQuotes46><doubleQuotes46>;<newline46mondego>        age = 0;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8393splitHere46","9609653splitHere46","activity"
"8394splitHere46","9609653splitHere46","intent-filter"
"8395splitHere46","9609653splitHere46","application"
"8396splitHere46","9609653splitHere46","<activity android:name=<doubleQuotes46>.BaseActivity<doubleQuotes46>><newline46mondego>    <intent-filter><newline46mondego>        <action android:name=<doubleQuotes46>android.intent.action.MAIN<doubleQuotes46>/><newline46mondego>        <category android:name=<doubleQuotes46>android.intent.category.LAUNCHER<doubleQuotes46>/><newline46mondego>    </intent-filter><newline46mondego></activity><newline46mondego>"
"8397splitHere46","9609724splitHere46","LocalDate"
"8398splitHere46","9609724splitHere46","DateTime"
"8399splitHere46","9609844splitHere46","Exchange exchange = consumerTemplate.receiveNoWait(<doubleQuotes46>ftp://host/incoming?fileName=processed/<doubleQuotes46> + theNameOfTheFile);<newline46mondego>assertNotNull(exchange);<newline46mondego>"
"8400splitHere46","9609871splitHere46","dismissDialog(DIALOG_DOWNLOAD_PROGRESS);"
"8401splitHere46","9609871splitHere46","IllegalArgumentException"
"8402splitHere46","9609906splitHere46","HttpParams"
"8403splitHere46","9609906splitHere46","httpcore-4.1.3.jar"
"8404splitHere46","9610004splitHere46","addWindowListener(new WindowAdapter() {<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void windowOpened(WindowEvent e) {<newline46mondego>            new File(<doubleQuotes46>C:\\foo\\bar<doubleQuotes46>).mkdir();<newline46mondego>        }<newline46mondego><newline46mondego>});<newline46mondego>"
"8405splitHere46","9610123splitHere46","private static void createAndShowGui() {<newline46mondego>  ShowGraph showGraphPanel = new ShowGraph(MAX_POINTS);<newline46mondego>  TimerListener timerListener = new TimerListener(MAX_POINTS, showGraphPanel);<newline46mondego><newline46mondego>  JFrame frame = new JFrame(<doubleQuotes46>TestShowGraph<doubleQuotes46>);<newline46mondego>  frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>  frame.getContentPane().add(showGraphPanel);<newline46mondego>  frame.pack();<newline46mondego>  frame.setLocationByPlatform(true);<newline46mondego>  frame.setVisible(true);<newline46mondego><newline46mondego>  // Timer now made a final variable so it can be referred to<newline46mondego>  final Timer timer = new Timer(TIMER_DELAY, timerListener);<newline46mondego>  timer.start();<newline46mondego><newline46mondego>  frame.addWindowListener(new WindowAdapter() {<newline46mondego><newline46mondego>     @Override<newline46mondego>     public void windowOpened(WindowEvent arg0) {<newline46mondego>        timer.start();<newline46mondego>     }<newline46mondego><newline46mondego>     @Override<newline46mondego>     public void windowIconified(WindowEvent arg0) {<newline46mondego>        timer.stop();<newline46mondego>     }<newline46mondego><newline46mondego>     @Override<newline46mondego>     public void windowDeiconified(WindowEvent arg0) {<newline46mondego>        timer.start();<newline46mondego>     }<newline46mondego><newline46mondego>     @Override<newline46mondego>     public void windowActivated(WindowEvent arg0) {<newline46mondego>        timer.start();<newline46mondego>     }<newline46mondego>  });<newline46mondego>}<newline46mondego>"
"8406splitHere46","9610157splitHere46","UIComponentA"
"8407splitHere46","9610252splitHere46","?operator=greaterThan&column=studentId&value=5"
"8408splitHere46","9610252splitHere46","?operator=like&column=name&value=%A"
"8409splitHere46","9610252splitHere46","?queryId=5"
"8410splitHere46","9610344splitHere46","String.format(<doubleQuotes46>%05X<doubleQuotes46>, decInt & 0xFFFFF);<newline46mondego>"
"8411splitHere46","9610368splitHere46","(360 - circle's angle + (surface's angle * 2)) % 360"
"8412splitHere46","9610368splitHere46","dx"
"8413splitHere46","9610368splitHere46","dy"
"8414splitHere46","9610368splitHere46","(180 / Ï€) * arctan(dy / dx)"
"8415splitHere46","9610368splitHere46","dy / dx"
"8416splitHere46","9610368splitHere46","180 / Ï€"
"8417splitHere46","9610368splitHere46","(x1, y1)"
"8418splitHere46","9610368splitHere46","(x2, y2)"
"8419splitHere46","9610368splitHere46","(y1 - y2) / (x1 - x2)"
"8420splitHere46","9610368splitHere46","(180 / Ï€) * arctan((y1 - y2) / (x1 - x2))"
"8421splitHere46","9610391splitHere46","<activity<newline46mondego>        android:label=<doubleQuotes46>eMuse<doubleQuotes46><newline46mondego>        android:windowSoftInputMode=<doubleQuotes46>stateHidden<doubleQuotes46><newline46mondego>        android:name=<doubleQuotes46>.MainClass<doubleQuotes46> ><newline46mondego>        <intent-filter ><newline46mondego>            <action android:name=<doubleQuotes46>android.intent.action.MAIN<doubleQuotes46> /><newline46mondego><newline46mondego>            <category android:name=<doubleQuotes46>android.intent.category.LAUNCHER<doubleQuotes46> /><newline46mondego>        </intent-filter><newline46mondego>    </activity><newline46mondego>"
"8422splitHere46","9610566splitHere46","addRobble"
"8423splitHere46","9610566splitHere46","public addRobble(Robble r) {<newline46mondego>"
"8424splitHere46","9610566splitHere46","public void addRobble(Robble r) {<newline46mondego>"
"8425splitHere46","9610566splitHere46","addRobble"
"8426splitHere46","9610566splitHere46","storage"
"8427splitHere46","9610696splitHere46","ftype jarfile=<doubleQuotes46>C:\PATH_TO\javaw.exe<doubleQuotes46> -jar <doubleQuotes46>%1<doubleQuotes46> %<newline46mondego>"
"8428splitHere46","9610709splitHere46","while exists(<doubleQuotes46>foo.png<doubleQuotes46>):<newline46mondego>    hover(<doubleQuotes46>bar.png<doubleQuotes46>)<newline46mondego>    ClickMeRegion = find(<doubleQuotes46>bar.png<doubleQuotes46>).nearby(5).right()<newline46mondego>    ClickMeRegion.click(<doubleQuotes46>baz.png<doubleQuotes46>)<newline46mondego>"
"8429splitHere46","9610789splitHere46","newFixedThreadPool(1)"
"8430splitHere46","9610789splitHere46","Foo"
"8431splitHere46","9610789splitHere46","Bar"
"8432splitHere46","9610789splitHere46","newCachedThreadPool()"
"8433splitHere46","9610789splitHere46","submit(Foo foo)"
"8434splitHere46","9610789splitHere46","submit(Bar bar)"
"8435splitHere46","9610789splitHere46","submit(Object obj)"
"8436splitHere46","9610789splitHere46","Foo"
"8437splitHere46","9610789splitHere46","Bar"
"8438splitHere46","9610789splitHere46","public class FooBarExecutor {<newline46mondego>    private ExecutorService fooExecutor = Executors.newFixedThreadPool(1000);<newline46mondego>    private ExecutorService barExecutor = Executors.newCachedThreadPool();<newline46mondego><newline46mondego>    public <T> Future<T> submit(Foo foo) {<newline46mondego>        return fooExecutor.submit(foo);<newline46mondego>    }<newline46mondego><newline46mondego>    public <T> Future<T> submit(Bar bar) {<newline46mondego>        return barExecutor.submit(bar);<newline46mondego>    }<newline46mondego><newline46mondego>    public <T> Future<T> submit(Object obj) {<newline46mondego>        if (obj instanceof Foo) {<newline46mondego>            return submit((Foo)obj);<newline46mondego>        } else if (obj instanceof Bar) {<newline46mondego>            return submit((Bar)obj);<newline46mondego>        } else {<newline46mondego>           throw new IllegalArgumentException(<newline46mondego>              <doubleQuotes46>Object should be either Foo or Bar<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8439splitHere46","9610789splitHere46","Foo"
"8440splitHere46","9610789splitHere46","Bar"
"8441splitHere46","9610789splitHere46","Runnable"
"8442splitHere46","9610789splitHere46","Callable"
"8443splitHere46","9610881splitHere46","0,0"
"8444splitHere46","9610881splitHere46","Graphics"
"8445splitHere46","9610881splitHere46","buffy.getDrawGraphics();"
"8446splitHere46","9610881splitHere46","JFrame"
"8447splitHere46","9610881splitHere46","JFrame.getInsets()"
"8448splitHere46","9610881splitHere46","setUndecorated(true)"
"8449splitHere46","9610881splitHere46","JFrame"
"8450splitHere46","9610881splitHere46","Canvas"
"8451splitHere46","9610881splitHere46","Canvas"
"8452splitHere46","9610881splitHere46","createBufferStrategy"
"8453splitHere46","9610881splitHere46","JPanel drawPanel = new JPanel();<newline46mondego>drawPanel.setLayout(new BorderLayout());<newline46mondego>Canvas canvas = new Canvas();<newline46mondego>canvas.setPreferredSize(new Dimension(WIDTH, HEIGHT));<newline46mondego>drawPanel.add(canvas, BorderLayout.CENTER);<newline46mondego><newline46mondego>// some code skipped<newline46mondego><newline46mondego>canvas.setIgnoreRepaint(true); //important<newline46mondego>canvas.createBufferStrategy(2);<newline46mondego><newline46mondego>buffy = canvas.getBufferStrategy();<newline46mondego>"
"8454splitHere46","9610896splitHere46","import java.io.*;<newline46mondego>class FileRead {<newline46mondego>    public static void main(String args[]) {<newline46mondego>        try{<newline46mondego>            BufferedReader br = new BufferedReader(new FileReader(<doubleQuotes46>textfile.txt<doubleQuotes46>));<newline46mondego>            String strLine;<newline46mondego>            //Read File Line By Line<newline46mondego>            while ((strLine = br.readLine()) != null)   {<newline46mondego>               // Print the content on the console<newline46mondego>               System.out.println (strLine);<newline46mondego>            }<newline46mondego>            //Close the input stream<newline46mondego>            br.close();<newline46mondego>         } catch (Exception e){//Catch exception if any<newline46mondego>             System.err.println(<doubleQuotes46>Error: <doubleQuotes46> + e.getMessage());<newline46mondego>         }<newline46mondego>     }<newline46mondego> }<newline46mondego><newline46mondego><newline46mondego>import java.io.*;<newline46mondego>class FileWrite {<newline46mondego>    public static void main(String args[]) {<newline46mondego>        String var = <doubleQuotes46>var<doubleQuotes46>;<newline46mondego>        try {<newline46mondego>            // Create file <newline46mondego>            FileWriter fstream = new FileWriter(<doubleQuotes46>out.txt<doubleQuotes46>);<newline46mondego>            BufferedWriter out = new BufferedWriter(fstream);<newline46mondego>            out.write(var);<newline46mondego>            //Close the output stream<newline46mondego>            out.close();<newline46mondego>        } catch (Exception e){//Catch exception if any<newline46mondego>            System.err.println(<doubleQuotes46>Error: <doubleQuotes46> + e.getMessage());<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8455splitHere46","9611048splitHere46","protected boolean DFS(String key) {<newline46mondego>    boolean found = false;<newline46mondego><newline46mondego>    for(int i = 0; i < leafs.size() && !found; i++) {<newline46mondego>        Tree<T> child = leafs.get(i);<newline46mondego><newline46mondego>        if(child.head.equals(key))<newline46mondego>            found = true;<newline46mondego>        else<newline46mondego>            found = child.DFS(key);<newline46mondego>    }<newline46mondego><newline46mondego>    return found;<newline46mondego>}<newline46mondego>"
"8456splitHere46","9611146splitHere46","t1.start()"
"8457splitHere46","9611146splitHere46","t2.start()"
"8458splitHere46","9611146splitHere46","run"
"8459splitHere46","9611146splitHere46","run"
"8460splitHere46","9611146splitHere46","run"
"8461splitHere46","9611146splitHere46","start"
"8462splitHere46","9611209splitHere46","ResultSet"
"8463splitHere46","9611209splitHere46","if ( rs == null )<newline46mondego>{<newline46mondego>    return null;<newline46mondego>}<newline46mondego>"
"8464splitHere46","9611209splitHere46","if ( ! rs.next( ) )<newline46mondego>{<newline46mondego>    return null;<newline46mondego>}<newline46mondego>"
"8465splitHere46","9611381splitHere46","connection.setDoOutput()"
"8466splitHere46","9611381splitHere46","connection.connect()"
"8467splitHere46","9611421splitHere46","Random"
"8468splitHere46","9611428splitHere46","URIEncoding=<doubleQuotes46>UTF-8<doubleQuotes46>"
"8469splitHere46","9611428splitHere46","<Connector>"
"8470splitHere46","9611428splitHere46","server.xml"
"8471splitHere46","9611490splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>utf-8<doubleQuotes46>?><newline46mondego><data-map xmlns=<doubleQuotes46>http://cayenne.apache.org/schema/3.0/modelMap<doubleQuotes46><newline46mondego>  xmlns:xsi=<doubleQuotes46>http://www.w3.org/2001/XMLSchema-instance<doubleQuotes46><newline46mondego>  xsi:schemaLocation=<doubleQuotes46>http://cayenne.apache.org/schema/3.0/modelMap http://cayenne.apache.org/schema/3.0/modelMap.xsd<doubleQuotes46><newline46mondego>  project-version=<doubleQuotes46>3.0.0.1<doubleQuotes46>><newline46mondego>    <db-entity name=<doubleQuotes46>composition<doubleQuotes46>><newline46mondego>        <db-attribute name=<doubleQuotes46>BASE_ID<doubleQuotes46> type=<doubleQuotes46>INTEGER<doubleQuotes46> isPrimaryKey=<doubleQuotes46>true<doubleQuotes46> isMandatory=<doubleQuotes46>true<doubleQuotes46>/><newline46mondego>        <db-attribute name=<doubleQuotes46>CONTAINED_ID<doubleQuotes46> type=<doubleQuotes46>INTEGER<doubleQuotes46> isPrimaryKey=<doubleQuotes46>true<doubleQuotes46> isMandatory=<doubleQuotes46>true<doubleQuotes46>/><newline46mondego>    </db-entity><newline46mondego>    <db-entity name=<doubleQuotes46>product<doubleQuotes46>><newline46mondego>        <db-attribute name=<doubleQuotes46>ID<doubleQuotes46> type=<doubleQuotes46>INTEGER<doubleQuotes46> isPrimaryKey=<doubleQuotes46>true<doubleQuotes46> isMandatory=<doubleQuotes46>true<doubleQuotes46>/><newline46mondego>        <db-attribute name=<doubleQuotes46>NAME<doubleQuotes46> type=<doubleQuotes46>VARCHAR<doubleQuotes46> length=<doubleQuotes46>255<doubleQuotes46>/><newline46mondego>    </db-entity><newline46mondego>    <obj-entity name=<doubleQuotes46>Product<doubleQuotes46> dbEntityName=<doubleQuotes46>product<doubleQuotes46>><newline46mondego>        <obj-attribute name=<doubleQuotes46>name<doubleQuotes46> type=<doubleQuotes46>java.lang.String<doubleQuotes46> db-attribute-path=<doubleQuotes46>NAME<doubleQuotes46>/><newline46mondego>    </obj-entity><newline46mondego>    <db-relationship name=<doubleQuotes46>base<doubleQuotes46> source=<doubleQuotes46>composition<doubleQuotes46> target=<doubleQuotes46>product<doubleQuotes46> toMany=<doubleQuotes46>false<doubleQuotes46>><newline46mondego>        <db-attribute-pair source=<doubleQuotes46>BASE_ID<doubleQuotes46> target=<doubleQuotes46>ID<doubleQuotes46>/><newline46mondego>    </db-relationship><newline46mondego>    <db-relationship name=<doubleQuotes46>contained<doubleQuotes46> source=<doubleQuotes46>composition<doubleQuotes46> target=<doubleQuotes46>product<doubleQuotes46> toMany=<doubleQuotes46>false<doubleQuotes46>><newline46mondego>        <db-attribute-pair source=<doubleQuotes46>CONTAINED_ID<doubleQuotes46> target=<doubleQuotes46>ID<doubleQuotes46>/><newline46mondego>    </db-relationship><newline46mondego>    <db-relationship name=<doubleQuotes46>base<doubleQuotes46> source=<doubleQuotes46>product<doubleQuotes46> target=<doubleQuotes46>composition<doubleQuotes46> toDependentPK=<doubleQuotes46>true<doubleQuotes46> toMany=<doubleQuotes46>true<doubleQuotes46>><newline46mondego>        <db-attribute-pair source=<doubleQuotes46>ID<doubleQuotes46> target=<doubleQuotes46>BASE_ID<doubleQuotes46>/><newline46mondego>    </db-relationship><newline46mondego>    <db-relationship name=<doubleQuotes46>contained<doubleQuotes46> source=<doubleQuotes46>product<doubleQuotes46> target=<doubleQuotes46>composition<doubleQuotes46> toDependentPK=<doubleQuotes46>true<doubleQuotes46> toMany=<doubleQuotes46>true<doubleQuotes46>><newline46mondego>        <db-attribute-pair source=<doubleQuotes46>ID<doubleQuotes46> target=<doubleQuotes46>CONTAINED_ID<doubleQuotes46>/><newline46mondego>    </db-relationship><newline46mondego>    <obj-relationship name=<doubleQuotes46>base<doubleQuotes46> source=<doubleQuotes46>Product<doubleQuotes46> target=<doubleQuotes46>Product<doubleQuotes46> deleteRule=<doubleQuotes46>Deny<doubleQuotes46> db-relationship-path=<doubleQuotes46>contained.base<doubleQuotes46>/><newline46mondego>    <obj-relationship name=<doubleQuotes46>contained<doubleQuotes46> source=<doubleQuotes46>Product<doubleQuotes46> target=<doubleQuotes46>Product<doubleQuotes46> deleteRule=<doubleQuotes46>Deny<doubleQuotes46> db-relationship-path=<doubleQuotes46>base.contained<doubleQuotes46>/><newline46mondego></data-map><newline46mondego>"
"8472splitHere46","9611562splitHere46","YearMonth ym = new YearMonth(2012, DateTimeConstants.MARCH);<newline46mondego>    Interval interval = ym.toInterval();<newline46mondego>    LocalDate monthStart = interval.getStart().toLocalDate();<newline46mondego>    LocalDate monthEnd = interval.getEnd().toLocalDate();<newline46mondego><newline46mondego>    System.out.println(<doubleQuotes46>Start:<doubleQuotes46> + monthStart);<newline46mondego>    System.out.println(<doubleQuotes46>End: <doubleQuotes46> + monthEnd);<newline46mondego>"
"8473splitHere46","9611582splitHere46","java.net.URLClassLoader"
"8474splitHere46","9611582splitHere46","ClassLoader systemClassLoader = ClassLoader.getSystemClassLoader();<newline46mondego><newline46mondego>    // This URL for a directory will be searched *recursively*<newline46mondego>    URL classes =<newline46mondego>        new URL( <doubleQuotes46>file:///D:/code/myCustomClassesAreUnderThisFolder/<doubleQuotes46> );<newline46mondego><newline46mondego>    ClassLoader custom = <newline46mondego>        new URLClassLoader( new URL[] { classes }, systemClassLoader );<newline46mondego><newline46mondego>    // this class should be loaded from your directory<newline46mondego>    Class< ? > clazz = custom.loadClass( <doubleQuotes46>my.custom.class.Name<doubleQuotes46> ); <newline46mondego>    // this class will be loaded as well, because you specified the system <newline46mondego>    // class loader as the parent<newline46mondego>    Class< ? > clazzString = custom.loadClass( <doubleQuotes46>java.lang.String<doubleQuotes46> ); <newline46mondego>"
"8475splitHere46","9611641splitHere46","BufferedReader"
"8476splitHere46","9611641splitHere46","BufferedReader in = new BufferedReader(new File(<doubleQuotes46>SomeFile.csv<doubleQuotes46>));<newline46mondego>int lineCount = 0;<newline46mondego>while((String line = in.readLine()) != null)<newline46mondego>    ++lineCount;<newline46mondego>"
"8477splitHere46","9611641splitHere46","lineCount"
"8478splitHere46","9611720splitHere46","Jsoup.parseBodyFragment()"
"8479splitHere46","9611720splitHere46","Jsoup.parseBodyFragment(input)"
"8480splitHere46","9611720splitHere46","input"
"8481splitHere46","9611720splitHere46","String"
"8482splitHere46","9611720splitHere46","JSoup.parse(File in, String charsetName)"
"8483splitHere46","9611720splitHere46","File in = new File(input);<newline46mondego>Document doc = JSoup.parse(in, null);<newline46mondego>"
"8484splitHere46","9611752splitHere46","Collections.nCopies(int n, T o)"
"8485splitHere46","9611752splitHere46","List<T>"
"8486splitHere46","9611752splitHere46","n"
"8487splitHere46","9611752splitHere46","o"
"8488splitHere46","9611820splitHere46","JPasswordField"
"8489splitHere46","9611820splitHere46","DocumentFilter"
"8490splitHere46","9611820splitHere46","DocumentFilter"
"8491splitHere46","9611820splitHere46","Action"
"8492splitHere46","9611820splitHere46","Reset"
"8493splitHere46","9611820splitHere46","import java.awt.*;<newline46mondego>import java.awt.event.ActionEvent;<newline46mondego>import java.awt.event.KeyEvent;<newline46mondego>import javax.swing.*;<newline46mondego>import javax.swing.text.*;<newline46mondego><newline46mondego>/** @see http://stackoverflow.com/q/9610386/230513 */<newline46mondego>public class Login {<newline46mondego><newline46mondego>    private static final String PWD = <doubleQuotes46>pass<doubleQuotes46>;<newline46mondego>    private static final String RESET = <doubleQuotes46>Reset<doubleQuotes46>;<newline46mondego>    private PlainDocument doc = new PlainDocument();<newline46mondego>    private JTextField text = new JTextField(doc, <doubleQuotes46><doubleQuotes46>, 10);<newline46mondego><newline46mondego>    public Login() {<newline46mondego>        doc.setDocumentFilter(new FieldFilter(PWD));<newline46mondego>        JLabel label = new JLabel(<doubleQuotes46>Password is '<doubleQuotes46> + PWD + <doubleQuotes46>'<doubleQuotes46>, JLabel.RIGHT);<newline46mondego>        label.setLabelFor(text);<newline46mondego>        text.setToolTipText(<doubleQuotes46>Press ESC to reset.<doubleQuotes46>);<newline46mondego>        text.getInputMap().put(<newline46mondego>            KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), RESET);<newline46mondego>        text.getActionMap().put(RESET, new Reset());<newline46mondego>        JPanel p = new JPanel();<newline46mondego>        p.setLayout(new GridLayout(0, 2, 5, 5));<newline46mondego>        p.add(label);<newline46mondego>        p.add(text);<newline46mondego>        JFrame f = new JFrame(<doubleQuotes46>Login<doubleQuotes46>);<newline46mondego>        f.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);<newline46mondego>        f.setContentPane(p);<newline46mondego>        f.setLocationByPlatform(true);<newline46mondego>        f.pack();<newline46mondego>        f.setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>    private static class FieldFilter extends DocumentFilter {<newline46mondego><newline46mondego>        private String password;<newline46mondego>        private boolean unlocked;<newline46mondego>        private StringBuilder sb = new StringBuilder();<newline46mondego><newline46mondego>        public FieldFilter(String password) {<newline46mondego>            this.password = password;<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void replace(FilterBypass fb, int offset, int length,<newline46mondego>            String text, AttributeSet attrs) throws BadLocationException {<newline46mondego>            if (unlocked) {<newline46mondego>                super.replace(fb, offset, length, text, attrs);<newline46mondego>            } else {<newline46mondego>                sb.append(text);<newline46mondego>                unlocked = password.equals(sb.toString());<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        public void reset() {<newline46mondego>            sb.delete(0, sb.length());<newline46mondego>            unlocked = false;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    private static class Reset extends AbstractAction {<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void actionPerformed(ActionEvent e) {<newline46mondego>            JTextField jtf = (JTextField) e.getSource();<newline46mondego>            PlainDocument doc = (PlainDocument) jtf.getDocument();<newline46mondego>            try {<newline46mondego>                doc.remove(0, doc.getLength());<newline46mondego>            } catch (BadLocationException ex) {<newline46mondego>                ex.printStackTrace(System.err);<newline46mondego>            }<newline46mondego>            FieldFilter filter = (FieldFilter) doc.getDocumentFilter();<newline46mondego>            filter.reset();<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        javax.swing.SwingUtilities.invokeLater(new Runnable() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                Login log = new Login();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8494splitHere46","9611851splitHere46","public class TweetDao {<newline46mondego>    private static final String SELECT_TWEETS = <doubleQuotes46>SELECT COUNT(tid) as TC FROM TWEETS WHERE replyTo =  ? <doubleQuotes46>;<newline46mondego>    // inject this - setter or constructor<newline46mondego>    private Connection connection;<newline46mondego><newline46mondego>    public int getTweetCount(int tid) throws SQLException {<newline46mondego>        int tweetCount = -1;<newline46mondego>        PreparedStatement ps = null;<newline46mondego>        ResultSet rs = null;<newline46mondego>        try {<newline46mondego>            ps = this.connection.prepareStatement(SELECT_TWEETS);<newline46mondego>            ps.setInt(1, tid);<newline46mondego>            rs = ps.executeQuery();<newline46mondego>            while (rs.hasNext()) {<newline46mondego>                tweetCount = rs.getInt(<doubleQuotes46>TC<doubleQuotes46>);<newline46mondego>            }<newline46mondego>        } finally {<newline46mondego>            DatabaseUtils.close(rs);<newline46mondego>            DatabaseUtils.close(ps);<newline46mondego>        }<newline46mondego>        return tweetCount;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8495splitHere46","9611939splitHere46","Thread.join()"
"8496splitHere46","9611962splitHere46","File src = new File(<doubleQuotes46>user/big folder/data<doubleQuotes46>);<newline46mondego>File dest = new File(<doubleQuotes46>user<doubleQuotes46>);<newline46mondego><newline46mondego>boolean success = src.renameTo(new File(dest, src.getName()));<newline46mondego>if (!success) {<newline46mondego>    // Directory was not successfully moved<newline46mondego>}<newline46mondego>"
"8497splitHere46","9612119splitHere46","Thread"
"8498splitHere46","9612119splitHere46","Thread"
"8499splitHere46","9612119splitHere46","Runnable"
"8500splitHere46","9612119splitHere46","run()"
"8501splitHere46","9612119splitHere46",".java"
"8502splitHere46","9612119splitHere46","Thread"
"8503splitHere46","9612119splitHere46","Thread"
"8504splitHere46","9612119splitHere46","java.util.concurrent"
"8505splitHere46","9612205splitHere46","JFrame"
"8506splitHere46","9612205splitHere46","JEditorPane"
"8507splitHere46","9612205splitHere46","ActionListener"
"8508splitHere46","9612205splitHere46","JTextField"
"8509splitHere46","9612205splitHere46","ActionListener"
"8510splitHere46","9612205splitHere46","DefaultButton"
"8511splitHere46","9612205splitHere46","ActionListener"
"8512splitHere46","9612205splitHere46","DefaultButton"
"8513splitHere46","9612205splitHere46","JTextField"
"8514splitHere46","9612245splitHere46","connection org.apache.http.conn.HttpHostConnectException: Connection to http://localhost refused"
"8515splitHere46","9612515splitHere46","binary"
"8516splitHere46","9612515splitHere46","varbinary"
"8517splitHere46","9612515splitHere46","varchar"
"8518splitHere46","9612696splitHere46","android:launchMode=<doubleQuotes46>singleInstance<doubleQuotes46><newline46mondego>"
"8519splitHere46","9612720splitHere46","HttpServletRequest"
"8520splitHere46","9612720splitHere46","HttpServletContext"
"8521splitHere46","9612720splitHere46","@Context private HttpServletRequest servletRequest;<newline46mondego>@Context private HttpServletContext servletContext;<newline46mondego>"
"8522splitHere46","9612816splitHere46","onPause()"
"8523splitHere46","9612816splitHere46","onResume()"
"8524splitHere46","9612873splitHere46","yyyy/MM/dd"
"8525splitHere46","9612873splitHere46","yyyy/mm/dd"
"8526splitHere46","9612873splitHere46","mm"
"8527splitHere46","9612873splitHere46","MM"
"8528splitHere46","9612902splitHere46","self.name = name;"
"8529splitHere46","9612902splitHere46","this.name = name;"
"8530splitHere46","9612902splitHere46","mouseCliked()"
"8531splitHere46","9612902splitHere46","println()"
"8532splitHere46","9612902splitHere46","ArrayList<Obj> items = new ArrayList<Obj>();<newline46mondego><newline46mondego>void setup(){<newline46mondego><newline46mondego>}<newline46mondego>void draw () {<newline46mondego><newline46mondego>}<newline46mondego>void mouseClicked () {<newline46mondego>  items.add(new Obj(<doubleQuotes46>Bob<doubleQuotes46>));<newline46mondego>  println(<doubleQuotes46>items size: <doubleQuotes46> + items.size());<newline46mondego>} <newline46mondego>class Obj {<newline46mondego>    String name;<newline46mondego>    Obj(String name) {<newline46mondego>        this.name = name;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8533splitHere46","9612928splitHere46","Calendar"
"8534splitHere46","9612928splitHere46","Date"
"8535splitHere46","9612928splitHere46","Calendar#getTime"
"8536splitHere46","9612928splitHere46","import java.util.Calendar;<newline46mondego>import java.util.Locale;<newline46mondego>import java.util.Scanner;<newline46mondego><newline46mondego>public class Main {<newline46mondego><newline46mondego>    public static int dayOfWeekIWant(final String dayOfWeekIWantString)<newline46mondego>            throws Exception {<newline46mondego><newline46mondego>        final int dayOfWeekIWant;<newline46mondego><newline46mondego>        if (<doubleQuotes46>sunday<doubleQuotes46>.equalsIgnoreCase(dayOfWeekIWantString)) {<newline46mondego>            dayOfWeekIWant = Calendar.SUNDAY;<newline46mondego>        } else if (<doubleQuotes46>monday<doubleQuotes46>.equalsIgnoreCase(dayOfWeekIWantString)) {<newline46mondego>            dayOfWeekIWant = Calendar.MONDAY;<newline46mondego>        } else if (<doubleQuotes46>tuesday<doubleQuotes46>.equalsIgnoreCase(dayOfWeekIWantString)) {<newline46mondego>            dayOfWeekIWant = Calendar.TUESDAY;<newline46mondego>        } else if (<doubleQuotes46>wednesday<doubleQuotes46>.equalsIgnoreCase(dayOfWeekIWantString)) {<newline46mondego>            dayOfWeekIWant = Calendar.WEDNESDAY;<newline46mondego>        } else if (<doubleQuotes46>thursday<doubleQuotes46>.equalsIgnoreCase(dayOfWeekIWantString)) {<newline46mondego>            dayOfWeekIWant = Calendar.THURSDAY;<newline46mondego>        } else if (<doubleQuotes46>friday<doubleQuotes46>.equalsIgnoreCase(dayOfWeekIWantString)) {<newline46mondego>            dayOfWeekIWant = Calendar.FRIDAY;<newline46mondego>        } else if (<doubleQuotes46>saturday<doubleQuotes46>.equalsIgnoreCase(dayOfWeekIWantString)) {<newline46mondego>            dayOfWeekIWant = Calendar.SATURDAY;<newline46mondego>        } else {<newline46mondego>            throw new Exception(<newline46mondego>                    <doubleQuotes46>Invalid input, it must be \<doubleQuotes46>DAY_OF_WEEK HOUR\<doubleQuotes46><doubleQuotes46>);<newline46mondego>        }<newline46mondego><newline46mondego>        return dayOfWeekIWant;<newline46mondego>    }<newline46mondego><newline46mondego>    public static String getOrdinal(int cardinal) {<newline46mondego>        String ordinal = String.valueOf(cardinal);<newline46mondego><newline46mondego>        switch ((cardinal % 10)) {<newline46mondego>        case 1:<newline46mondego>            ordinal += <doubleQuotes46>st<doubleQuotes46>;<newline46mondego>            break;<newline46mondego>        case 2:<newline46mondego>            ordinal += <doubleQuotes46>nd<doubleQuotes46>;<newline46mondego>            break;<newline46mondego>        case 3:<newline46mondego>            ordinal += <doubleQuotes46>rd<doubleQuotes46>;<newline46mondego>            break;<newline46mondego>        default:<newline46mondego>            ordinal += <doubleQuotes46>th<doubleQuotes46>;<newline46mondego>        }<newline46mondego><newline46mondego>        return ordinal;<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    public static void printDate(Calendar calendar) {<newline46mondego>        String dayOfWeek = calendar.getDisplayName(Calendar.DAY_OF_WEEK,<newline46mondego>                Calendar.LONG, Locale.ENGLISH);<newline46mondego>        String dayOfMonth = getOrdinal(calendar.get(Calendar.DAY_OF_MONTH));<newline46mondego>        int hour = calendar.get(Calendar.HOUR_OF_DAY);<newline46mondego>        int minute = calendar.get(Calendar.MINUTE);<newline46mondego>        System.out.printf(<doubleQuotes46>%s %s %02d:%02d<doubleQuotes46>, dayOfWeek, dayOfMonth, hour, minute);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego><newline46mondego>        Calendar calendar = Calendar.getInstance();<newline46mondego>        Scanner scanner = new Scanner(System.in);<newline46mondego><newline46mondego>        final int today = calendar.get(Calendar.DAY_OF_WEEK);<newline46mondego><newline46mondego>        System.out.println(<doubleQuotes46>Please, input the day of week you want to know:<doubleQuotes46>);<newline46mondego><newline46mondego>        boolean inputOk = false;<newline46mondego><newline46mondego>        while (!inputOk)<newline46mondego><newline46mondego>            try {<newline46mondego>                String input = scanner.nextLine();<newline46mondego>                String[] split = input.split(<doubleQuotes46>\\s<doubleQuotes46>);<newline46mondego>                String dayOfWeekIWantString = split[0];<newline46mondego><newline46mondego>                String[] splitHour = split[1].split(<doubleQuotes46>:<doubleQuotes46>);<newline46mondego>                int hour = Integer.parseInt(splitHour[0]);<newline46mondego>                int minute = Integer.parseInt(splitHour[1]);<newline46mondego><newline46mondego>                int dayOfWeekIWant = dayOfWeekIWant(dayOfWeekIWantString);<newline46mondego><newline46mondego>                int diff = (today >= dayOfWeekIWant) ? (7 - (today - dayOfWeekIWant))<newline46mondego>                        : (dayOfWeekIWant - today);<newline46mondego><newline46mondego>                calendar.add(Calendar.DAY_OF_WEEK, diff);<newline46mondego>                calendar.set(Calendar.HOUR_OF_DAY, hour);<newline46mondego>                calendar.set(Calendar.MINUTE, minute);<newline46mondego>                calendar.set(Calendar.SECOND, 0);<newline46mondego>                calendar.set(Calendar.MILLISECOND, 0);<newline46mondego><newline46mondego>                inputOk = true;<newline46mondego><newline46mondego>            } catch (Exception e) {<newline46mondego><newline46mondego>                // Using a generic exception just for explanation purpose<newline46mondego>                // You must create a specific Exception<newline46mondego>                System.out<newline46mondego>                        .println(<doubleQuotes46>Invalid input, you must enter a valid input in format: \<doubleQuotes46>DAY_OF_WEEK HOUR\<doubleQuotes46><doubleQuotes46>);<newline46mondego>                continue;<newline46mondego>            }<newline46mondego><newline46mondego>        printDate(calendar);<newline46mondego><newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8537splitHere46","9612991splitHere46","getGraphics()"
"8538splitHere46","9612991splitHere46","paintComponent()"
"8539splitHere46","9613045splitHere46","PriorityQueue"
"8540splitHere46","9613045splitHere46","PriorityBlockingQueue"
"8541splitHere46","9613045splitHere46","add()"
"8542splitHere46","9613045splitHere46","peek()"
"8543splitHere46","9613045splitHere46","poll()"
"8544splitHere46","9613045splitHere46","remove()"
"8545splitHere46","9613130splitHere46","String message = <doubleQuotes46><doubleQuotes46>;<newline46mondego><newline46mondego>for(int i=1; i<=5; i++){<newline46mondego>    message += i +<doubleQuotes46>\t<doubleQuotes46>;<newline46mondego>}<newline46mondego>JOptionPane.showMessageDialog(null, new JTextArea(message));<newline46mondego>"
"8546splitHere46","9613150splitHere46","NoClassDefFoundError"
"8547splitHere46","9613150splitHere46","1.3v"
"8548splitHere46","9613191splitHere46","request.getRemoteAddr()"
"8549splitHere46","9613191splitHere46","Server"
"8550splitHere46","9613191splitHere46","localhost"
"8551splitHere46","9613193splitHere46","@Entity<newline46mondego>@Table(name = <doubleQuotes46>TABLE_A<doubleQuotes46>)<newline46mondego>@XmlRootElement<newline46mondego>@NamedQueries({<newline46mondego>    @NamedQuery(name = <doubleQuotes46>MyComplex.findAll<doubleQuotes46>, query = <doubleQuotes46>SELECT j FROM MyComplex j<doubleQuotes46>),<newline46mondego>    @NamedQuery(name = <doubleQuotes46>MyComplex.findA1<doubleQuotes46>, query = <doubleQuotes46>SELECT j FROM MyComplex j WHERE j.a1 = :A1<doubleQuotes46>)<newline46mondego>})<newline46mondego>public class MyComplex implements Serializable {<newline46mondego>/* ------------------------------------ */<newline46mondego>@OneToOne<newline46mondego>@JoinTable(<newline46mondego>        name=<doubleQuotes46>Table_B<doubleQuotes46>,<newline46mondego>        joinColumns=<newline46mondego>            @JoinColumn(name=<doubleQuotes46>A2<doubleQuotes46>, referencedColumnName=<doubleQuotes46>A2<doubleQuotes46>),<newline46mondego>        inverseJoinColumns=<newline46mondego>            @JoinColumn(name=<doubleQuotes46>B1<doubleQuotes46>, referencedColumnName=<doubleQuotes46>B1<doubleQuotes46>)<newline46mondego>    )<newline46mondego>private Table_C tableC;<newline46mondego>/* ------------ */<newline46mondego>}<newline46mondego>"
"8552splitHere46","9613199splitHere46","RescaleOp"
"8553splitHere46","9613199splitHere46","lightLevel"
"8554splitHere46","9613224splitHere46","JOptionPane"
"8555splitHere46","9613224splitHere46","int number = 0;<newline46mondego>boolean ok = false;<newline46mondego>String input = <doubleQuotes46><doubleQuotes46>;<newline46mondego><newline46mondego>while(!ok)<newline46mondego>{<newline46mondego>    try<newline46mondego>    {<newline46mondego>        number = Integer.parseInt( input );<newline46mondego>        ok = true;<newline46mondego>    }<newline46mondego>    catch(Exception e)<newline46mondego>    {<newline46mondego>        // Change your JOptionPane message here to warn the user.<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8556splitHere46","9613253splitHere46","gradlew"
"8557splitHere46","9613342splitHere46","res/layout"
"8558splitHere46","9613342splitHere46","res/layout-large"
"8559splitHere46","9613342splitHere46","res/values"
"8560splitHere46","9613342splitHere46","res/values-large"
"8561splitHere46","9613342splitHere46","res/layout/main.xml"
"8562splitHere46","9613342splitHere46","<RelativeLayout<newline46mondego>    android:layout_width=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>    android:layout_height=<doubleQuotes46>@dimen/relative_layout_height<doubleQuotes46><newline46mondego>    android:orientation=<doubleQuotes46>vertical<doubleQuotes46> ><newline46mondego>    <ScrollView android:id=<doubleQuotes46>@+id/ScrollView01<doubleQuotes46><newline46mondego>        android:layout_width=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>        android:layout_height=<doubleQuotes46>@dimen/scroll_view_height<doubleQuotes46><newline46mondego>        android:background=<doubleQuotes46>#86C3C6<doubleQuotes46> ><newline46mondego>        <TextView<newline46mondego>            android:id=<doubleQuotes46>@+id/tvHistory<doubleQuotes46><newline46mondego>            android:layout_width=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>            android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>            android:background=<doubleQuotes46>#86C3C6<doubleQuotes46><newline46mondego>            android:gravity=<doubleQuotes46>right<doubleQuotes46><newline46mondego>            android:focusable=<doubleQuotes46>true<doubleQuotes46><newline46mondego>            android:text=<doubleQuotes46><doubleQuotes46><newline46mondego>            android:textColor=<doubleQuotes46>#FFFFFF<doubleQuotes46> /><newline46mondego>    </ScrollView><newline46mondego></RelativeLayout><newline46mondego>"
"8563splitHere46","9613342splitHere46","dimens.xml"
"8564splitHere46","9613342splitHere46","res/values/dimens.xml"
"8565splitHere46","9613342splitHere46","<dimen name=<doubleQuotes46>relative_layout_height<doubleQuotes46>>150dp</dimen><newline46mondego><dimen name=<doubleQuotes46>scroll_view_height<doubleQuotes46>>200dp</dimen><newline46mondego>"
"8566splitHere46","9613342splitHere46","res/values-large/dimens.xml"
"8567splitHere46","9613342splitHere46","<dimen name=<doubleQuotes46>relative_layout_height<doubleQuotes46>>250dp</dimen><newline46mondego><dimen name=<doubleQuotes46>scroll_view_height<doubleQuotes46>>300dp</dimen><newline46mondego>"
"8568splitHere46","9613416splitHere46","jdbc:oracle:thin:@//[HOST][:PORT]/SERVICE<newline46mondego>"
"8569splitHere46","9613416splitHere46","import java.sql.*;<newline46mondego>class Conn {<newline46mondego>  public static void main (String[] args) throws Exception<newline46mondego>  {<newline46mondego>   Class.forName (<doubleQuotes46>oracle.jdbc.OracleDriver<doubleQuotes46>);<newline46mondego><newline46mondego>   Connection conn = DriverManager.getConnection<newline46mondego>     (<doubleQuotes46>jdbc:oracle:thin:@//localhost:1521/orcl<doubleQuotes46>, <doubleQuotes46>scott<doubleQuotes46>, <doubleQuotes46>tiger<doubleQuotes46>);<newline46mondego>                        // @//machineName:port/SID,   userid,  password<newline46mondego>   try {<newline46mondego>     Statement stmt = conn.createStatement();<newline46mondego>     try {<newline46mondego>       ResultSet rset = stmt.executeQuery(<doubleQuotes46>select BANNER from SYS.V_$VERSION<doubleQuotes46>);<newline46mondego>       try {<newline46mondego>         while (rset.next())<newline46mondego>           System.out.println (rset.getString(1));   // Print col 1<newline46mondego>       } <newline46mondego>       finally {<newline46mondego>          try { rset.close(); } catch (Exception ignore) {}<newline46mondego>       }<newline46mondego>     } <newline46mondego>     finally {<newline46mondego>       try { stmt.close(); } catch (Exception ignore) {}<newline46mondego>     }<newline46mondego>   } <newline46mondego>   finally {<newline46mondego>     try { conn.close(); } catch (Exception ignore) {}<newline46mondego>   }<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"8570splitHere46","9613479splitHere46","double noX = 0;<newline46mondego>try {<newline46mondego>   noX = Double.parseDouble(NumberField.getText());<newline46mondego>} catch(NumberFormatException e) {<newline46mondego>   System.out.println(<doubleQuotes46>Not a valid number<doubleQuotes46>);<newline46mondego>}<newline46mondego>if(noX < 0) {<newline46mondego>   System.out.println(<doubleQuotes46>Number can not be negative.<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"8571splitHere46","9613757splitHere46","for( attempt = 1; attempt >= 0; --attempt)<newline46mondego>        {<newline46mondego>        System.out.print(<doubleQuotes46> 50 + 10 = <doubleQuotes46>);<newline46mondego>        answer = input.nextInt();<newline46mondego>        input.nextLine();<newline46mondego><newline46mondego>            if( answer != 60)<newline46mondego>            {<newline46mondego><newline46mondego>                if(attempt!=0)<newline46mondego>                    {<newline46mondego>                     System.out.printf( <doubleQuotes46>Invalid! Try Again! %d attempt(s) left!\n <doubleQuotes46>, attempt);<newline46mondego>                        continue;<newline46mondego>                    }<newline46mondego>                else<newline46mondego>                     System.out.print( <doubleQuotes46>Sorry!  You have no more attempts left!<doubleQuotes46> );<newline46mondego><newline46mondego>            }<newline46mondego>                System.exit(0);<newline46mondego>    }<newline46mondego>"
"8572splitHere46","9613856splitHere46","takeTileObject"
"8573splitHere46","9613856splitHere46","HashMap<String, HashMap> takeTileObject = new HashMap<String, HashMap>();<newline46mondego>"
"8574splitHere46","9613856splitHere46","takeTileObject.get(<doubleQuotes46>unique-coordinate<doubleQuotes46>).get(<doubleQuotes46>key1<doubleQuotes46>);<newline46mondego>"
"8575splitHere46","9613915splitHere46","byte[] buffer = new byte[imgSize];<newline46mondego><newline46mondego>//read all data to the buffer<newline46mondego><newline46mondego>BitmapFactory.decodeByteArray(buffer, 0, buffer.length);<newline46mondego>"
"8576splitHere46","9614130splitHere46","browser.displayContent(content, path)"
"8577splitHere46","9614130splitHere46","path"
"8578splitHere46","9614225splitHere46","com.packageA"
"8579splitHere46","9614225splitHere46","packageB"
"8580splitHere46","9614225splitHere46","import com.packageA.R;"
"8581splitHere46","9614303splitHere46","public class Sort {<newline46mondego><newline46mondego><newline46mondego>private static class Counter {<newline46mondego><newline46mondego>    private int one;<newline46mondego>    private int mixed;<newline46mondego><newline46mondego>    public void incrementOne() {<newline46mondego>        one++;<newline46mondego>    }<newline46mondego><newline46mondego>    public void incrementMixed() {<newline46mondego>        mixed++;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public static void main(String[] args) throws IOException {<newline46mondego>    Map<String, Counter> map = new LinkedHashMap<String, Counter>();<newline46mondego>    String fileName = <doubleQuotes46>input.txt<doubleQuotes46>;<newline46mondego>    BufferedReader reader = new BufferedReader(new FileReader(fileName));<newline46mondego><newline46mondego>    for (String line = reader.readLine(); line != null; line = reader.readLine()) {<newline46mondego>        StringTokenizer tokenizer = new StringTokenizer(line);<newline46mondego>        String key = tokenizer.nextToken();<newline46mondego>        String value = tokenizer.nextToken();<newline46mondego>        Counter counter = map.get(key);<newline46mondego>        if (counter == null) {<newline46mondego>            counter = new Counter();<newline46mondego>            map.put(key, counter);<newline46mondego>        }<newline46mondego>        if (value.equals(<doubleQuotes46>1<doubleQuotes46>)) {<newline46mondego>            counter.incrementOne();<newline46mondego>        } else {<newline46mondego>            counter.incrementMixed();<newline46mondego>        }<newline46mondego>    }<newline46mondego>    reader.close();<newline46mondego>    BufferedWriter writer = new BufferedWriter(new FileWriter(<doubleQuotes46>output.txt<doubleQuotes46>));<newline46mondego>    for(Map.Entry<String, Counter>entry:map.entrySet()){<newline46mondego>        Counter counter = entry.getValue();<newline46mondego>        if(counter.one>0){<newline46mondego>            writer.write(String.valueOf(counter.one));<newline46mondego>            writer.write(<doubleQuotes46> x <doubleQuotes46>);<newline46mondego>            writer.write(entry.getKey());<newline46mondego>            writer.write(<doubleQuotes46>   1<doubleQuotes46>);<newline46mondego>            writer.newLine();<newline46mondego>        }<newline46mondego>        if(counter.mixed>0){<newline46mondego>            writer.write(String.valueOf(counter.mixed));<newline46mondego>            writer.write(<doubleQuotes46> x <doubleQuotes46>);<newline46mondego>            writer.write(entry.getKey());<newline46mondego>            writer.write(<doubleQuotes46>   MIXED<doubleQuotes46>);<newline46mondego>            writer.newLine();<newline46mondego>        }<newline46mondego>    }<newline46mondego>    writer.close();<newline46mondego><newline46mondego>}<newline46mondego>"
"8582splitHere46","9614325splitHere46","=="
"8583splitHere46","9614325splitHere46","Enum"
"8584splitHere46","9614426splitHere46","resultType"
"8585splitHere46","9614426splitHere46","java.util.LinkedHashMap"
"8586splitHere46","9614426splitHere46","<select id=<doubleQuotes46>getList<doubleQuotes46> resultType=<doubleQuotes46>java.util.LinkedHashMap<doubleQuotes46>><newline46mondego>    SELECT A,B,C,D FROM MYTABLE<newline46mondego></select><newline46mondego>"
"8587splitHere46","9614469splitHere46","ObjectOutputStream"
"8588splitHere46","9614469splitHere46","ObjectInputStream"
"8589splitHere46","9614469splitHere46","byte[]"
"8590splitHere46","9614469splitHere46","String"
"8591splitHere46","9614469splitHere46","String"
"8592splitHere46","9614469splitHere46","String"
"8593splitHere46","9614599splitHere46","Blog"
"8594splitHere46","9614599splitHere46","BlogManager"
"8595splitHere46","9614599splitHere46","@Named(<doubleQuotes46>blogManager<doubleQuotes46>)<newline46mondego>@SessionScoped<newline46mondego>public class BlogManager {<newline46mondego>    private List<Blog> blogs;<newline46mondego><newline46mondego>    private Blog blog;<newline46mondego><newline46mondego>    public BlogManager() {<newline46mondego>        blogs = new ArrayList<Blog>();<newline46mondego>            blog = new Blog();<newline46mondego>    }<newline46mondego><newline46mondego>    // getter setters for blog and blogs<newline46mondego><newline46mondego>    public void addBlog() {<newline46mondego>        blogs.add(blog);<newline46mondego>    }<newline46mondego><newline46mondego>    public void removeBlog(Blog blog) {<newline46mondego>        blogs.add(blog);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8596splitHere46","9614599splitHere46","public class Blog {<newline46mondego><newline46mondego>    private Integer id;<newline46mondego><newline46mondego>    private String title;<newline46mondego>    private String text;<newline46mondego>    private Date date;<newline46mondego>    private Integer readed;<newline46mondego><newline46mondego>    public Blog() {<newline46mondego>        id = (int) System.currentTimeMillis();<newline46mondego>    }<newline46mondego><newline46mondego>    // getters-setters<newline46mondego><newline46mondego>}<newline46mondego>"
"8597splitHere46","9614599splitHere46","<h:form><newline46mondego>            <fieldset><newline46mondego>                <legend>Blog</legend><newline46mondego>                <p><newline46mondego>                    Title:<newline46mondego>                    <h:inputText value=<doubleQuotes46>#{blogManager.blog.title}<doubleQuotes46> /><newline46mondego>                </p><newline46mondego>                <p><newline46mondego>                    Text:<newline46mondego>                    <h:inputTextarea value=<doubleQuotes46>#{blogManager.blog.text}<doubleQuotes46> /><newline46mondego>                </p><newline46mondego>                <p><newline46mondego>                    <h:commandButton action=<doubleQuotes46>#{blogManager.addBlog}<doubleQuotes46> /><newline46mondego>                </p><newline46mondego>            </fieldset><newline46mondego>        </h:form><newline46mondego>"
"8598splitHere46","9614633splitHere46","try"
"8599splitHere46","9614633splitHere46","catch"
"8600splitHere46","9614633splitHere46","finally"
"8601splitHere46","9614633splitHere46","v$session"
"8602splitHere46","9614685splitHere46","/ availableProcessors"
"8603splitHere46","9614685splitHere46","Current CPU usage in percentage : 99.95763231535723<newline46mondego>Current CPU usage in percentage : 99.94895863534565<newline46mondego>Current CPU usage in percentage : 99.40642907762789<newline46mondego>Current CPU usage in percentage : 99.96184668521532<newline46mondego>Current CPU usage in percentage : 99.89017532820115<newline46mondego>Current CPU usage in percentage : 99.91157680329947<newline46mondego>Current CPU usage in percentage : 99.96919753553432<newline46mondego>Current CPU usage in percentage : 99.94121334997978<newline46mondego>"
"8604splitHere46","9614701splitHere46","$post = file_get_contents('php://input');<newline46mondego>"
"8605splitHere46","9614701splitHere46","$HTTP_RAW_POST_DATA"
"8606splitHere46","9614739splitHere46","import org.eclipse.jetty.server.Server;<newline46mondego>import org.eclipse.jetty.server.Connector;<newline46mondego>import org.eclipse.jetty.server.nio.SelectChannelConnector;<newline46mondego><newline46mondego>public class Main {<newline46mondego>    public static void main(String[] args) {<newline46mondego><newline46mondego>        Server server = new Server();<newline46mondego><newline46mondego>        SelectChannelConnector connector = new SelectChannelConnector();<newline46mondego>        connector.setReuseAddress(false);<newline46mondego>        connector.setPort(80);<newline46mondego>        server.setConnectors(new Connector[]{connector});<newline46mondego><newline46mondego>        try {<newline46mondego>            server.start();<newline46mondego>        } catch (Exception e) {<newline46mondego>            e.printStackTrace(); <newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8607splitHere46","9614739splitHere46","java.net.BindException: Address already in use: bind"
"8608splitHere46","9614756splitHere46","public"
"8609splitHere46","9615058splitHere46","new java.sql.Date(locDate.toDateTime(LocalTime.MIDNIGHT).getMillis()));<newline46mondego>new java.sql.Time(locTime.toDateTimeToday().getMillis()) );<newline46mondego>"
"8610splitHere46","9615195splitHere46","Map<String, Object> map = new HashMap<String, Object>();<newline46mondego>map.put(kProfileSetupDoneKey  , initialSetupDone);<newline46mondego>// etc...<newline46mondego>"
"8611splitHere46","9615208splitHere46","public class Bean {<newline46mondego>  private Object emp;<newline46mondego>  public Object getEmp() { return emp; }<newline46mondego>  public void setEmp(Object emp) { this.emp = emp; }<newline46mondego>}<newline46mondego>"
"8612splitHere46","9615354splitHere46","import java.io.PrintWriter;<newline46mondego>import java.io.StringWriter;<newline46mondego>import java.text.SimpleDateFormat;<newline46mondego>import java.util.Date;<newline46mondego>import java.util.logging.LogRecord;<newline46mondego>import java.util.logging.SimpleFormatter;<newline46mondego><newline46mondego>public class JBossAS7LikeFormatter extends SimpleFormatter<newline46mondego>{<newline46mondego>    private final String nl = System.getProperty(<doubleQuotes46>line.separator<doubleQuotes46>);<newline46mondego>    private final DateFormat df = new SimpleDateFormat(<doubleQuotes46>HH:mm:ss,SSS<doubleQuotes46>);<newline46mondego><newline46mondego>    @Override<newline46mondego>    public synchronized String format(LogRecord lr)<newline46mondego>    {<newline46mondego>        StringBuffer sb = new StringBuffer();<newline46mondego><newline46mondego>        // time only<newline46mondego>        Date dt = new Date();<newline46mondego>        dt.setTime(lr.getMillis());<newline46mondego><newline46mondego>        sb.append(df.format(dt));<newline46mondego>        sb.append(<doubleQuotes46> <doubleQuotes46>);<newline46mondego><newline46mondego>        // level (longest is <doubleQuotes46>WARNING<doubleQuotes46> = 7 chars, space fill for level output)<newline46mondego>        String level = lr.getLevel().getName();<newline46mondego><newline46mondego>        int numSpaces = 7 - level.length();<newline46mondego><newline46mondego>        sb.append(level);<newline46mondego><newline46mondego>        for ( int i = 0 ; i < numSpaces + 1 ; i++ )<newline46mondego>        {<newline46mondego>            sb.append(<doubleQuotes46> <doubleQuotes46>);<newline46mondego>        }<newline46mondego><newline46mondego>        // package<newline46mondego>        sb.append(<doubleQuotes46>[<doubleQuotes46>);<newline46mondego>        sb.append(lr.getSourceClassName());<newline46mondego>        sb.append(<doubleQuotes46>] <doubleQuotes46>);<newline46mondego><newline46mondego>        // thread (name?)<newline46mondego>        sb.append(<doubleQuotes46>(<doubleQuotes46>);<newline46mondego>        sb.append(lr.getThreadID());<newline46mondego>        sb.append(<doubleQuotes46>) <doubleQuotes46>);<newline46mondego><newline46mondego>        // message<newline46mondego>        sb.append(formatMessage(lr));<newline46mondego>        sb.append(nl);<newline46mondego><newline46mondego>        // optional stack trace<newline46mondego>        if ( lr.getThrown() != null )<newline46mondego>        {<newline46mondego>            try<newline46mondego>            {<newline46mondego>                StringWriter sw = new StringWriter();<newline46mondego>                PrintWriter pw = new PrintWriter(sw);<newline46mondego>                lr.getThrown().printStackTrace(pw);<newline46mondego>                pw.close();<newline46mondego>                sb.append(sw.toString());<newline46mondego>            }<newline46mondego>            catch ( Exception e )<newline46mondego>            {<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        return sb.toString();<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"8613splitHere46","9615354splitHere46","domain/lib/ext"
"8614splitHere46","9615354splitHere46","Mrz 08, 2012 9:39:14 AM com.sun.enterprise.admin.launcher.GFLauncherLogger info<newline46mondego>Information: Successfully launched in 5 msec.<newline46mondego>Launching GlassFish on Felix platform<newline46mondego>Exception in thread <doubleQuotes46>main<doubleQuotes46> java.lang.reflect.InvocationTargetException<newline46mondego>    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)<newline46mondego>    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)<newline46mondego>    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)<newline46mondego>    at java.lang.reflect.Method.invoke(Method.java:601)<newline46mondego>    at com.sun.enterprise.glassfish.bootstrap.GlassFishMain.main(GlassFishMain.java:97)<newline46mondego>    at com.sun.enterprise.glassfish.bootstrap.ASMain.main(ASMain.java:55)<newline46mondego>Caused by: java.lang.NoClassDefFoundError: com/sun/enterprise/server/logging/UniformLogFormatter<newline46mondego>    at java.lang.ClassLoader.defineClass1(Native Method)<newline46mondego>    at java.lang.ClassLoader.defineClass(ClassLoader.java:791)<newline46mondego>    at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)<newline46mondego>    at java.net.URLClassLoader.defineClass(URLClassLoader.java:449)<newline46mondego>    at java.net.URLClassLoader.access$100(URLClassLoader.java:71)<newline46mondego>    at java.net.URLClassLoader$1.run(URLClassLoader.java:361)<newline46mondego>    at java.net.URLClassLoader$1.run(URLClassLoader.java:355)<newline46mondego>    at java.security.AccessController.doPrivileged(Native Method)<newline46mondego>    at java.net.URLClassLoader.findClass(URLClassLoader.java:354)<newline46mondego>    at java.lang.ClassLoader.loadClass(ClassLoader.java:423)<newline46mondego>    at java.lang.ClassLoader.loadClass(ClassLoader.java:410)<newline46mondego>    at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)<newline46mondego>    at java.lang.ClassLoader.loadClass(ClassLoader.java:356)<newline46mondego>    at java.util.logging.LogManager.getFormatterProperty(LogManager.java:1048)<newline46mondego>    at java.util.logging.StreamHandler.configure(StreamHandler.java:76)<newline46mondego>    at java.util.logging.StreamHandler.<init>(StreamHandler.java:94)<newline46mondego>    at java.util.logging.ConsoleHandler.<init>(ConsoleHandler.java:88)<newline46mondego>    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)<newline46mondego>    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)<newline46mondego>    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)<newline46mondego>    at java.lang.reflect.Constructor.newInstance(Constructor.java:525)<newline46mondego>    at java.lang.Class.newInstance0(Class.java:372)<newline46mondego>    at java.lang.Class.newInstance(Class.java:325)<newline46mondego>    at java.util.logging.LogManager$3.run(LogManager.java:419)<newline46mondego>    at java.security.AccessController.doPrivileged(Native Method)<newline46mondego>    at java.util.logging.LogManager.loadLoggerHandlers(LogManager.java:405)<newline46mondego>    at java.util.logging.LogManager.initializeGlobalHandlers(LogManager.java:1076)<newline46mondego>    at java.util.logging.LogManager.access$1100(LogManager.java:148)<newline46mondego>    at java.util.logging.LogManager$RootLogger.getHandlers(LogManager.java:1157)<newline46mondego>    at java.util.logging.Logger.log(Logger.java:521)<newline46mondego>    at com.sun.logging.LogDomains$1.log(LogDomains.java:372)<newline46mondego>    at java.util.logging.Logger.doLog(Logger.java:543)<newline46mondego>    at java.util.logging.Logger.log(Logger.java:587)<newline46mondego>    at com.sun.enterprise.server.logging.LogManagerService.postConstruct(LogManagerService.java:354)<newline46mondego>    at com.sun.hk2.component.AbstractCreatorImpl.inject(AbstractCreatorImpl.java:131)<newline46mondego>    at com.sun.hk2.component.ConstructorCreator.initialize(ConstructorCreator.java:91)<newline46mondego>    at com.sun.hk2.component.AbstractCreatorImpl.get(AbstractCreatorImpl.java:82)<newline46mondego>    at com.sun.hk2.component.SingletonInhabitant.get(SingletonInhabitant.java:67)<newline46mondego>    at com.sun.hk2.component.EventPublishingInhabitant.get(EventPublishingInhabitant.java:139)<newline46mondego>    at com.sun.hk2.component.AbstractInhabitantImpl.get(AbstractInhabitantImpl.java:78)<newline46mondego>    at com.sun.enterprise.v3.server.AppServerStartup.run(AppServerStartup.java:229)<newline46mondego>    at com.sun.enterprise.v3.server.AppServerStartup.doStart(AppServerStartup.java:145)<newline46mondego>    at com.sun.enterprise.v3.server.AppServerStartup.start(AppServerStartup.java:136)<newline46mondego>    at com.sun.enterprise.glassfish.bootstrap.GlassFishImpl.start(GlassFishImpl.java:79)<newline46mondego>    at com.sun.enterprise.glassfish.bootstrap.GlassFishDecorator.start(GlassFishDecorator.java:63)<newline46mondego>    at com.sun.enterprise.glassfish.bootstrap.osgi.OSGiGlassFishImpl.start(OSGiGlassFishImpl.java:69)<newline46mondego>    at com.sun.enterprise.glassfish.bootstrap.GlassFishMain$Launcher.launch(GlassFishMain.java:117)<newline46mondego>    ... 6 more<newline46mondego>Caused by: java.lang.ClassNotFoundException: com.sun.enterprise.server.logging.UniformLogFormatter<newline46mondego>    at java.net.URLClassLoader$1.run(URLClassLoader.java:366)<newline46mondego>    at java.net.URLClassLoader$1.run(URLClassLoader.java:355)<newline46mondego>    at java.security.AccessController.doPrivileged(Native Method)<newline46mondego>    at java.net.URLClassLoader.findClass(URLClassLoader.java:354)<newline46mondego>    at java.lang.ClassLoader.loadClass(ClassLoader.java:423)<newline46mondego>    at java.lang.ClassLoader.loadClass(ClassLoader.java:356)<newline46mondego>    ... 53 more<newline46mondego>Completed shutdown of GlassFish runtime<newline46mondego>Command start-domain failed.<newline46mondego>The DAS was stopped.<newline46mondego>"
"8615splitHere46","9615354splitHere46","12:13:02,400 INFO    [com.sun.enterprise.web.WebContainer] (1) WEB0172: Virtual server [server] loaded default web module []<newline46mondego>12:13:07,700 INFO    [org.hibernate.validator.util.Version] (1) Hibernate Validator 4.2.0.Final<newline46mondego>12:13:08,919 WARNING [null] (1) Multiple [2] JMX MBeanServer instances exist, we will use the server at index [0] : [com.sun.enterprise.v3.admin.DynamicInterceptor@1a53cab6].<newline46mondego>12:13:08,920 WARNING [null] (1) JMX MBeanServer in use: [com.sun.enterprise.v3.admin.DynamicInterceptor@1a53cab6] from index [0] <newline46mondego>12:13:08,920 WARNING [null] (1) JMX MBeanServer in use: [com.sun.jmx.mbeanserver.JmxMBeanServer@2f740f7e] from index [1] <newline46mondego>"
"8616splitHere46","9615366splitHere46","this.getClass.getResource(<doubleQuotes46>/foo.png<doubleQuotes46>)<newline46mondego>"
"8617splitHere46","9615366splitHere46","this.getClass.getResource(<doubleQuotes46>foo.png<doubleQuotes46>)<newline46mondego>// When running this from Eclipse, it would refer to files in project root!<newline46mondego>"
"8618splitHere46","9615405splitHere46","if(b!= -15 && i + 2 < srec.length() && (Character.digit(srec.charAt(i + 2), 16) << 4) + Character.digit(srec.charAt(i + 3), 16) != -15 <newline46mondego>                && (Character.digit(srec.charAt(i + 2), 16) << 4) + Character.digit(srec.charAt(i + 3), 16) != -11)<newline46mondego><newline46mondego>b != 15 -> true<newline46mondego>i + 2 = 124 < srec.length() = 142 -> true<newline46mondego><newline46mondego>(Character.digit(srec.charAt(i + 2), 16) << 4)+ Character.digit(srec.charAt(i + 3), 16) = -7 and -7 != -15 and also -7 != -11<newline46mondego>"
"8619splitHere46","9615405splitHere46","data.add(b)"
"8620splitHere46","9615555splitHere46","break"
"8621splitHere46","9615555splitHere46","attempt = -1"
"8622splitHere46","9615555splitHere46","if( answer == 24)<newline46mondego>{<newline46mondego>    ...<newline46mondego>    attempt = -1; // An ugly 'break'<newline46mondego>}<newline46mondego>"
"8623splitHere46","9615555splitHere46","do { } while();"
"8624splitHere46","9615555splitHere46","if"
"8625splitHere46","9615555splitHere46","// These two lines of code are no longer required.<newline46mondego>    //System.out.printf(<doubleQuotes46>Enter the word of the day:  <doubleQuotes46>);<newline46mondego>    //wordOfTheDay = input.nextLine();<newline46mondego><newline46mondego>    do<newline46mondego>    {<newline46mondego>        System.out.printf(<doubleQuotes46>Enter the word of the day:  <doubleQuotes46>);<newline46mondego>        wordOfTheDay = input.nextLine();<newline46mondego><newline46mondego>        if(!wordOfTheDay.equals(<doubleQuotes46>tired<doubleQuotes46>))<newline46mondego>        {<newline46mondego>            System.out.printf(<newline46mondego>                <doubleQuotes46>Invalid! Try Again! %d attempt(s) left!\n <doubleQuotes46>, --attempt);<newline46mondego>        }<newline46mondego>        else<newline46mondego>        {<newline46mondego>            attempt = 0; // Another ugly 'break'<newline46mondego>        }<newline46mondego>    } while (attempt >= 1);<newline46mondego><newline46mondego><newline46mondego>    if(wordOfTheDay.equals(<doubleQuotes46>tired<doubleQuotes46>))<newline46mondego>    {<newline46mondego>    }<newline46mondego>    // Remove else branch as not required.<newline46mondego>"
"8626splitHere46","9615682splitHere46","FooBarModelImpl"
"8627splitHere46","9615682splitHere46","PersistenceContext"
"8628splitHere46","9615682splitHere46","begin()"
"8629splitHere46","9615682splitHere46","commit()"
"8630splitHere46","9615682splitHere46","UserTransaction"
"8631splitHere46","9615807splitHere46","QName"
"8632splitHere46","9615807splitHere46","new QName(<doubleQuotes46>http://lit.com/schemas/Bobsled<doubleQuotes46>, <doubleQuotes46>sessionId<doubleQuotes46>,<doubleQuotes46>bob<doubleQuotes46>)<newline46mondego>"
"8633splitHere46","9615970splitHere46","CLASSPATH"
"8634splitHere46","9615970splitHere46","getResourceAsStream()"
"8635splitHere46","9616073splitHere46","private String getString( String bundle, String key, String defaultValue, Object... arguments ){<newline46mondego>    String result = ResourceBundle.getBundle( bundle ).getString( key );<newline46mondego>    if ( result == null ){<newline46mondego>        result = defaultValue;<newline46mondego>    }<newline46mondego>    if ( arguments.length > 0 && result != null ){<newline46mondego>        result = MessageFormat.format( result, arguments );<newline46mondego>    }<newline46mondego>    return result; <newline46mondego>}<newline46mondego>"
"8636splitHere46","9616099splitHere46","org.hibernate.HibernateException: 'hibernate.dialect' must be set when no Connection available<newline46mondego>"
"8637splitHere46","9616111splitHere46","@RequestMapping(value=<doubleQuotes46>/*/test2.do<doubleQuotes46>)<newline46mondego>public void getMeta5(HttpServletRequest request, HttpServletResponse response) throws IOException {<newline46mondego>    final PrintWriter writer = response.getWriter();<newline46mondego>    writer.print(<doubleQuotes46>requestURI:<doubleQuotes46> + request.getRequestURI());<newline46mondego>    writer.flush();<newline46mondego>}<newline46mondego>"
"8638splitHere46","9616111splitHere46","<servlet><newline46mondego>    <servlet-name>spring</servlet-name><newline46mondego>    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class><newline46mondego>    <load-on-startup>1</load-on-startup><newline46mondego></servlet><newline46mondego><servlet-mapping><newline46mondego>    <servlet-name>spring</servlet-name><newline46mondego>    <url-pattern>*.do</url-pattern><newline46mondego></servlet-mapping><newline46mondego>"
"8639splitHere46","9616154splitHere46","remove"
"8640splitHere46","9616154splitHere46","final Iterator<byte[]> iter = bytearrays.iterator();<newline46mondego>while (iter.hasNext()) {<newline46mondego>    final byte[] temp = iter.next();<newline46mondego>    // TODO check for zero-length arrays<newline46mondego>    if (temp[0] == -7) {<newline46mondego>        iter.remove();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8641splitHere46","9616197splitHere46","if(ae.getSource() == submit)<newline46mondego>    {<newline46mondego><newline46mondego>        pictures = new ImageIcon(<doubleQuotes46>galileo2.jpg<doubleQuotes46>);<newline46mondego>        images = new JLabel(pictures);<newline46mondego><newline46mondego>        System.out.println(<doubleQuotes46>test<doubleQuotes46>);<newline46mondego>    }<newline46mondego>"
"8642splitHere46","9616197splitHere46","if(ae.getSource() == submit)<newline46mondego>    {<newline46mondego><newline46mondego>        pictures = new ImageIcon(<doubleQuotes46>galileo2.jpg<doubleQuotes46>);<newline46mondego>        images.setIcon(pictures);<newline46mondego><newline46mondego>        System.out.println(<doubleQuotes46>test<doubleQuotes46>);<newline46mondego>    }<newline46mondego>"
"8643splitHere46","9616206splitHere46","<form:options>"
"8644splitHere46","9616206splitHere46","<form:select path=<doubleQuotes46>empDesignation<doubleQuotes46>><newline46mondego>    <form:options items=<doubleQuotes46>${designation}<doubleQuotes46> itemLabel=<doubleQuotes46>designationDesc<doubleQuotes46> itemValue=<doubleQuotes46>designationDesc<doubleQuotes46>/><newline46mondego></form:select><newline46mondego>"
"8645splitHere46","9616243splitHere46","request.getsession().getAttribute().getClass().getClassloader()"
"8646splitHere46","9616243splitHere46","abc.ClassA.class.getClassloader()"
"8647splitHere46","9616441splitHere46","<fieldType name=<doubleQuotes46>text_country<doubleQuotes46> class=<doubleQuotes46>solr.TextField<doubleQuotes46> positionIncrementGap=<doubleQuotes46>100<doubleQuotes46>>"
"8648splitHere46","9616441splitHere46","<fieldType name=<doubleQuotes46>string<doubleQuotes46> class=<doubleQuotes46>solr.StrField<doubleQuotes46> sortMissingLast=<doubleQuotes46>true<doubleQuotes46> omitNorms=<doubleQuotes46>true<doubleQuotes46>/>"
"8649splitHere46","9616565splitHere46","String input = <doubleQuotes46>0102FFAB<doubleQuotes46>;<newline46mondego>byte[] bytes = new byte[input.length() / 2];<newline46mondego><newline46mondego>for( int i = 0; i < input.length(); i+=2)<newline46mondego>{<newline46mondego>  bytes[i/2] = Integer.decode( <doubleQuotes46>0x<doubleQuotes46> + input.substring( i, i + 2 )  ).byteValue();<newline46mondego>}<newline46mondego>"
"8650splitHere46","9616591splitHere46","main"
"8651splitHere46","9616591splitHere46","BreakDictionary"
"8652splitHere46","9616612splitHere46","<sec:custom-filter>"
"8653splitHere46","9616725splitHere46","<uses-permission android:name=<doubleQuotes46>android.permission.WRITE_SMS<doubleQuotes46>> </ uses-permission><newline46mondego><uses-permission android:name=<doubleQuotes46>android.permission.READ_SMS<doubleQuotes46>> </ uses-permission><newline46mondego>"
"8654splitHere46","9616725splitHere46","//Available Uri string<newline46mondego>  String strUriInbox = <doubleQuotes46>content://sms/inbox<doubleQuotes46>;//SMS_INBOX:1<newline46mondego>  String strUriFailed = <doubleQuotes46>content://sms/failed<doubleQuotes46>;//SMS_FAILED:2<newline46mondego>  String strUriQueued = <doubleQuotes46>content://sms/queued<doubleQuotes46>;//SMS_QUEUED:3<newline46mondego>  String strUriSent = <doubleQuotes46>content://sms/sent<doubleQuotes46>;//SMS_SENT:4<newline46mondego>  String strUriDraft = <doubleQuotes46>content://sms/draft<doubleQuotes46>;//SMS_DRAFT:5<newline46mondego>  String strUriOutbox = <doubleQuotes46>content://sms/outbox<doubleQuotes46>;//SMS_OUTBOX:6<newline46mondego>  String strUriUndelivered = <doubleQuotes46>content://sms/undelivered<doubleQuotes46>;//SMS_UNDELIVERED<newline46mondego>  String strUriAll = <doubleQuotes46>content://sms/all<doubleQuotes46>;//SMS_ALL<newline46mondego>  String strUriConversations = <doubleQuotes46>content://sms/conversations<doubleQuotes46>;//you can delete one conversation by thread_id<newline46mondego>  String strUriAll = <doubleQuotes46>content://sms<doubleQuotes46>//you can delete one message by _id <newline46mondego>"
"8655splitHere46","9616729splitHere46","public static void main(String[] args) {<newline46mondego><newline46mondego>    JFrame frame = new JFrame(<doubleQuotes46>Test<doubleQuotes46>);<newline46mondego><newline46mondego>    frame.add(new JComponent() {<newline46mondego>        @Override<newline46mondego>        protected void paintComponent(Graphics g) {<newline46mondego>            super.paintComponent(g);<newline46mondego><newline46mondego>            String text = <doubleQuotes46>Hello World!<doubleQuotes46>;<newline46mondego><newline46mondego>            g.setFont(g.getFont().deriveFont(40f));<newline46mondego><newline46mondego>            Rectangle2D b = g.getFontMetrics().getStringBounds(text, g);<newline46mondego>            Rectangle2D bounds = new Rectangle2D.Double(100 + b.getX(),<newline46mondego>                                                        100 + b.getY(),<newline46mondego>                                                        b.getWidth(), <newline46mondego>                                                        b.getHeight() / 2);<newline46mondego>            g.setClip(bounds);<newline46mondego>            g.drawString(text, (int) bounds.getX(), <newline46mondego>                               (int) (bounds.getMaxY() + b.getMaxY()));<newline46mondego>        }<newline46mondego>    });<newline46mondego><newline46mondego>    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>    frame.setSize(400, 300);<newline46mondego>    frame.setVisible(true);<newline46mondego><newline46mondego>}<newline46mondego>"
"8656splitHere46","9616782splitHere46","getKeys()"
"8657splitHere46","9616782splitHere46","LinkedHashMap"
"8658splitHere46","9616782splitHere46","LinkedHashSet"
"8659splitHere46","9616782splitHere46","Set"
"8660splitHere46","9616782splitHere46","List<TheType> keys = new ArrayList<TheType>map.getKeys();<newline46mondego>TheType theLastKey = keys.get(keys.size() -1);<newline46mondego>"
"8661splitHere46","9616784splitHere46","mysql -u dbuser â€“h remote.host.name â€“p < script.sql<newline46mondego>"
"8662splitHere46","9617064splitHere46","BasicEditField.FILTER_REAL_NUMERIC"
"8663splitHere46","9617113splitHere46","View  row= inflator.inflate(R.layout.itemslist, null);<newline46mondego>"
"8664splitHere46","9617162splitHere46","onException(HttpOperationFailedException.class)<newline46mondego>   .maximumRedeliveries(3).redeliveryDelay(1000)<newline46mondego>   .handled(true)<newline46mondego>   .to(<doubleQuotes46>log:com.xcg.routes?level=WARN&showAll=true&multiline=true<doubleQuotes46>);<newline46mondego>"
"8665splitHere46","9617164splitHere46","public static void main(String... args) {<newline46mondego>    perfTestIntrinsic();<newline46mondego><newline46mondego>    perfTestACopy();<newline46mondego>}<newline46mondego><newline46mondego>private static void perfTestIntrinsic() {<newline46mondego>    long start = System.nanoTime();<newline46mondego>    long countBits = 0;<newline46mondego>    for (int i = 0; i < Integer.MAX_VALUE; i++)<newline46mondego>        countBits += Integer.bitCount(i);<newline46mondego>    long time = System.nanoTime() - start;<newline46mondego>    System.out.printf(<doubleQuotes46>Intrinsic: Each bit count took %.1f ns, countBits=%d%n<doubleQuotes46>, (double) time / Integer.MAX_VALUE, countBits);<newline46mondego>}<newline46mondego><newline46mondego>private static void perfTestACopy() {<newline46mondego>    long start2 = System.nanoTime();<newline46mondego>    long countBits2 = 0;<newline46mondego>    for (int i = 0; i < Integer.MAX_VALUE; i++)<newline46mondego>        countBits2 += myBitCount(i);<newline46mondego>    long time2 = System.nanoTime() - start2;<newline46mondego>    System.out.printf(<doubleQuotes46>Copy of same code: Each bit count took %.1f ns, countBits=%d%n<doubleQuotes46>, (double) time2 / Integer.MAX_VALUE, countBits2);<newline46mondego>}<newline46mondego><newline46mondego>// Copied from Integer.bitCount()<newline46mondego>public static int myBitCount(int i) {<newline46mondego>    // HD, Figure 5-2<newline46mondego>    i = i - ((i >>> 1) & 0x55555555);<newline46mondego>    i = (i & 0x33333333) + ((i >>> 2) & 0x33333333);<newline46mondego>    i = (i + (i >>> 4)) & 0x0f0f0f0f;<newline46mondego>    i = i + (i >>> 8);<newline46mondego>    i = i + (i >>> 16);<newline46mondego>    return i & 0x3f;<newline46mondego>}<newline46mondego>"
"8666splitHere46","9617164splitHere46","Intrinsic: Each bit count took 0.4 ns, countBits=33285996513<newline46mondego>Copy of same code: Each bit count took 2.4 ns, countBits=33285996513<newline46mondego>"
"8667splitHere46","9617296splitHere46","@PostConstruct"
"8668splitHere46","9617296splitHere46","import org.springframework.beans.factory.annotation.Value;<newline46mondego><newline46mondego>import javax.annotation.PostConstruct;<newline46mondego><newline46mondego>public class AutowireTest {<newline46mondego>  @Value(<doubleQuotes46>default<doubleQuotes46>)<newline46mondego>  public String testField;<newline46mondego><newline46mondego>  @PostConstruct<newline46mondego>  public void init() {<newline46mondego>    if (testField == null)<newline46mondego>      throw new RuntimeException(<doubleQuotes46>FAIL<doubleQuotes46>);<newline46mondego>  }<newline46mondego><newline46mondego>  public void setTestField(String testField) {<newline46mondego>    this.testField = testField;<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"8669splitHere46","9617300splitHere46","$PATH"
"8670splitHere46","9617300splitHere46","jps"
"8671splitHere46","9617300splitHere46",".bash_profile"
"8672splitHere46","9617300splitHere46",".bashrc"
"8673splitHere46","9617300splitHere46",".bash_profile"
"8674splitHere46","9617300splitHere46",".bashrc"
"8675splitHere46","9617382splitHere46",";jsessionid=[session id]"
"8676splitHere46","9617382splitHere46","web.xml"
"8677splitHere46","9617382splitHere46","<session-config><newline46mondego>    <tracking-mode>COOKIE</tracking-mode><newline46mondego></session-config><newline46mondego>"
"8678splitHere46","9617382splitHere46","<h:outputText value=<doubleQuotes46>#{session.id}<doubleQuotes46> />"
"8679splitHere46","9617382splitHere46","Cookie"
"8680splitHere46","9617382splitHere46","<Connector>"
"8681splitHere46","9617382splitHere46","emptySessionPath"
"8682splitHere46","9617430splitHere46","doPreProcessing"
"8683splitHere46","9617430splitHere46","doPostProcessing"
"8684splitHere46","9617430splitHere46","public abstract class Worker {<newline46mondego>    private Worker next;<newline46mondego><newline46mondego>    protected Worker(Worker next) {<newline46mondego>        this.next = next;<newline46mondego>    }<newline46mondego><newline46mondego>    public void process(Workpiece wp) {<newline46mondego>        preProcess(wp);<newline46mondego><newline46mondego>        if (next != null)<newline46mondego>            next.process(wp);<newline46mondego><newline46mondego>        postProcess(wp);<newline46mondego>    }<newline46mondego><newline46mondego>    public abstract void preProcess(Workpiece wp);<newline46mondego>    public abstract void postProcess(Workpiece wp);<newline46mondego>}<newline46mondego>"
"8685splitHere46","9617430splitHere46","public class MyWorker extends Worker {<newline46mondego><newline46mondego>    public MyWorker() {<newline46mondego>        super(new MyOtherWorker());<newline46mondego>    }<newline46mondego><newline46mondego>    public abstract void preProcess(Workpiece wp) {<newline46mondego>        // code<newline46mondego>    }<newline46mondego><newline46mondego>    public abstract void postProcess(Workpiece wp) {<newline46mondego>        // code<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8686splitHere46","9617431splitHere46","list.setFixedCellHeight(50);<newline46mondego>list.setFixedCellWidth(100);<newline46mondego>"
"8687splitHere46","9617431splitHere46","setBorder()"
"8688splitHere46","9617431splitHere46","list.setBorder(new EmptyBorder(10,10, 10, 10));<newline46mondego>"
"8689splitHere46","9617458splitHere46","<activity android:screenOrientation=<doubleQuotes46>portrait<doubleQuotes46><newline46mondego>        android:configChanges=<doubleQuotes46>orientation|keyboardHidden<doubleQuotes46> android:name=<doubleQuotes46>com.package1.ClassName<doubleQuotes46><newline46mondego>        android:theme=<doubleQuotes46>@android:style/Theme.NoTitleBar<doubleQuotes46> />      <newline46mondego><newline46mondego><newline46mondego><activity android:screenOrientation=<doubleQuotes46>portrait<doubleQuotes46><newline46mondego>        android:configChanges=<doubleQuotes46>orientation|keyboardHidden<doubleQuotes46> android:name=<doubleQuotes46>com.package2.ClassName<doubleQuotes46><newline46mondego>        android:theme=<doubleQuotes46>@android:style/Theme.NoTitleBar<doubleQuotes46> /><newline46mondego>"
"8690splitHere46","9617477splitHere46","rowData"
"8691splitHere46","9617477splitHere46","updateTable"
"8692splitHere46","9617477splitHere46","rowData"
"8693splitHere46","9617477splitHere46","TableClass"
"8694splitHere46","9617477splitHere46","JTable"
"8695splitHere46","9617477splitHere46","TableModel"
"8696splitHere46","9617477splitHere46","updateTable"
"8697splitHere46","9617477splitHere46","rowData"
"8698splitHere46","9617477splitHere46","updateTable"
"8699splitHere46","9617477splitHere46","rowData"
"8700splitHere46","9617477splitHere46","class tableClass<newline46mondego>{<newline46mondego>    public Vector columnNames = null; <newline46mondego>    private JTable jTable; <newline46mondego>    DefaultTableModel model;<newline46mondego><newline46mondego>    public tableClass(JPanel jPanel, Vector rowDataInput, Vector columnNamesInput)<newline46mondego>    {       <newline46mondego>        Vector rowData = rowDataInput; <newline46mondego>        columnNames = columnNamesInput;<newline46mondego><newline46mondego>        jTable = new JTable(rowData, columnNames);<newline46mondego>        jTable.setFillsViewportHeight(true);<newline46mondego><newline46mondego>        JScrollPane jScrollPane = new JScrollPane(jTable);<newline46mondego>        jScrollPane.setPreferredSize(new Dimension(300, 100));<newline46mondego>        jPanel.add(jScrollPane,BorderLayout.CENTER);<newline46mondego>    }<newline46mondego><newline46mondego>    public void updateTable(Vector rowDataInput)<newline46mondego>    {<newline46mondego>        Vector rowData = rowDataInput;  <newline46mondego>        model =(DefaultTableModel)jTable.getModel();  <newline46mondego>        model.fireTableDataChanged();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8701splitHere46","9617477splitHere46","updateTable"
"8702splitHere46","9617477splitHere46","class MyTable {<newline46mondego>    private Vector columnNames = null; <newline46mondego>    private JTable jTable;<newline46mondego><newline46mondego>    public tableClass(JPanel jPanel, Vector rowDataInput, Vector columnNamesInput) {<newline46mondego>        // ...<newline46mondego>        jTable = new JTable(rowData, columnNames);<newline46mondego>        // ...<newline46mondego>    }<newline46mondego><newline46mondego>    public void updateTable(Vector rowDataInput) {<newline46mondego>        model =(DefaultTableModel)jTable.getModel();<newline46mondego><newline46mondego>        // Now actually update the model with your new data:<newline46mondego>        model.setDataVector(rowDataInput, columnNames);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8703splitHere46","9617708splitHere46","org.eclipse.jdt.internal.jarinjarloader"
"8704splitHere46","9617708splitHere46","org.apache.."
"8705splitHere46","9617708splitHere46","MANIFEST.MF"
"8706splitHere46","9617708splitHere46","Main-Class: org.eclipse.jdt.internal.jarinjarloader.JarRsrcLoader<newline46mondego>"
"8707splitHere46","9617708splitHere46","Main-Class: YourMainClass<newline46mondego>"
"8708splitHere46","9617856splitHere46","String str=(fileChooser.getSelectedFile()).toString();<newline46mondego>System.out.println(<doubleQuotes46>old:\t<doubleQuotes46>+str);<newline46mondego>String aaa= str.replaceAll(<doubleQuotes46>\\\\<doubleQuotes46>, <doubleQuotes46>/<doubleQuotes46>);<newline46mondego>System.out.println(<doubleQuotes46>new:\t<doubleQuotes46>+aaa);<newline46mondego>StringBuilder myName = new StringBuilder(aaa);<newline46mondego>myName.setCharAt(2, '\\');<newline46mondego>System.out.println(<doubleQuotes46>Final String:\t<doubleQuotes46>+myName.toString());<newline46mondego>"
"8709splitHere46","9617856splitHere46","createDatabase(myName.toString());<newline46mondego>"
"8710splitHere46","9618056splitHere46","ArrayList#set"
"8711splitHere46","9618056splitHere46","xcoords.set(0, new Rectangle2D.Double(10,15,34,54));<newline46mondego>            ^  ^---------------------------------^<newline46mondego>            |  The new rectangle<newline46mondego>            The index<newline46mondego>"
"8712splitHere46","9618129splitHere46","sleep()"
"8713splitHere46","9618129splitHere46","TimeUnit.HOURS.sleep(24)<newline46mondego>"
"8714splitHere46","9618129splitHere46","java.util.Timer#scheduleAtFixedRate()"
"8715splitHere46","9618129splitHere46","@Scheduled"
"8716splitHere46","9618129splitHere46","@Schedule"
"8717splitHere46","9618129splitHere46","@Scheduled(fixedRate=DateUtils.MILLIS_PER_DAY)<newline46mondego>public void generateReport() {<newline46mondego>  //...<newline46mondego>}<newline46mondego>"
"8718splitHere46","9618129splitHere46","newTrigger().<newline46mondego>  withSchedule(<newline46mondego>    simpleSchedule().<newline46mondego>      withIntervalInHours(24).<newline46mondego>      repeatForever()<newline46mondego>    ).build();<newline46mondego>"
"8719splitHere46","9618129splitHere46","newTrigger().<newline46mondego>  withSchedule(<newline46mondego>    cronSchedule().<newline46mondego>      dailyAtHourAndMinute(17, 30).  //17:30<newline46mondego>    ).build();<newline46mondego>"
"8720splitHere46","9618179splitHere46","public class SampleApplication extends Application {<newline46mondego><newline46mondego>private static String username;<newline46mondego>private static String password;<newline46mondego><newline46mondego>@Override<newline46mondego>public void onCreate() {<newline46mondego>super.onCreate();<newline46mondego>username=<doubleQuotes46><doubleQuotes46>;<newline46mondego>password=<doubleQuotes46><doubleQuotes46>;<newline46mondego>}<newline46mondego><newline46mondego>public static String getUsername() {<newline46mondego>return username;<newline46mondego>}<newline46mondego><newline46mondego>   public static void setUsername(String username) {<newline46mondego>   SampleApplication.username = username;<newline46mondego>}<newline46mondego><newline46mondego>public static String getPassword() {<newline46mondego>    return password;<newline46mondego>}<newline46mondego><newline46mondego>public static void setPassword(String password) {<newline46mondego>    SampleApplication.password = password;<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>}<newline46mondego>"
"8721splitHere46","9618179splitHere46","<application <newline46mondego>android:name=<doubleQuotes46>.SampleApplication<doubleQuotes46><newline46mondego>android:icon=<doubleQuotes46>@drawable/icon<doubleQuotes46> android:label=<doubleQuotes46>@string/app_name<doubleQuotes46>><newline46mondego><activity android:name=<doubleQuotes46>.SampleApp<doubleQuotes46><newline46mondego>          android:label=<doubleQuotes46>@string/app_name<doubleQuotes46><newline46mondego>          ><newline46mondego>    <intent-filter><newline46mondego>        <action android:name=<doubleQuotes46>android.intent.action.MAIN<doubleQuotes46> /><newline46mondego>        <category android:name=<doubleQuotes46>android.intent.category.LAUNCHER<doubleQuotes46> /><newline46mondego>    </intent-filter><newline46mondego></activity><newline46mondego>"
"8722splitHere46","9618179splitHere46","SampleApplication.setUsername(<doubleQuotes46><doubleQuotes46>);<newline46mondego>String currentUserName=SampleApplication.getUsername();<newline46mondego>SampleApplication.setPassword(<doubleQuotes46><doubleQuotes46>);<newline46mondego>String currentPassword=SampleApplication.getPassword();<newline46mondego>"
"8723splitHere46","9618298splitHere46","VerticalFieldManager backg = new VerticalFieldManager(Field.USE_ALL_WIDTH | Field.USE_ALL_HEIGHT){<newline46mondego>public void paint(Graphics graphics) {<newline46mondego>graphics.setBackgroundColor(Color.BLACK);<newline46mondego>graphics.clear();<newline46mondego>super.paint(graphics);<newline46mondego>    }<newline46mondego>};<newline46mondego>"
"8724splitHere46","9618298splitHere46","EditField edit= new EditField(<doubleQuotes46><doubleQuotes46>, <doubleQuotes46><doubleQuotes46>, 100, Field.FOCUSABLE){<newline46mondego>protected void paintBackground(Graphics g) {<newline46mondego>           g.setBackgroundColor(Color.WHITE);<newline46mondego>           g.clear();<newline46mondego>       }<newline46mondego><newline46mondego><newline46mondego><newline46mondego>backg.add(edit);<newline46mondego>add(backg);<newline46mondego>"
"8725splitHere46","9618298splitHere46","g.setColor(Color.WHITE);"
"8726splitHere46","9618363splitHere46","out.write(sb.toString());<newline46mondego>"
"8727splitHere46","9618363splitHere46","StringBuilder"
"8728splitHere46","9618363splitHere46","PrintWriter"
"8729splitHere46","9618363splitHere46","response.getWriter()"
"8730splitHere46","9618363splitHere46","StringBuilder.toString()"
"8731splitHere46","9618363splitHere46","out.write()"
"8732splitHere46","9618363splitHere46","StringBuilder.toString()"
"8733splitHere46","9618363splitHere46","substring()"
"8734splitHere46","9618363splitHere46","out.write()"
"8735splitHere46","9618363splitHere46","out.write()"
"8736splitHere46","9618363splitHere46","StringBuilder"
"8737splitHere46","9618363splitHere46","StringBuilder"
"8738splitHere46","9618391splitHere46","listen()"
"8739splitHere46","9618391splitHere46","TrapReceiver"
"8740splitHere46","9618391splitHere46","listen()"
"8741splitHere46","9618391splitHere46","run()"
"8742splitHere46","9618444splitHere46","public class PlayerId {<newline46mondego>    private String nickname;<newline46mondego>    private Team team;  -> this should be <doubleQuotes46>name<doubleQuotes46> to match the Id in the class Team.<newline46mondego><newline46mondego>...<newline46mondego><newline46mondego>}<newline46mondego>"
"8743splitHere46","9618444splitHere46","@Entity<newline46mondego>class User {<newline46mondego>  @EmbeddedId<newline46mondego>  @AttributeOverride(name=<doubleQuotes46>firstName<doubleQuotes46>, column=@Column(name=<doubleQuotes46>fld_firstname<doubleQuotes46>)<newline46mondego>  UserId id;<newline46mondego><newline46mondego>  Integer age;<newline46mondego>}<newline46mondego><newline46mondego>@Embeddable<newline46mondego>class UserId implements Serializable {<newline46mondego>  String firstName;<newline46mondego>  String lastName;<newline46mondego>}<newline46mondego>"
"8744splitHere46","9618610splitHere46","public final class MyClass { //final not required but clearly states intention<newline46mondego>    //private default constructor ==> can't be instantiated<newline46mondego>    //side effect: class is final because it can't be subclassed:<newline46mondego>    //super() can't be called from subclasses<newline46mondego>    private MyClass() {<newline46mondego>        throw new AssertionError()<newline46mondego>    }<newline46mondego><newline46mondego>    //...<newline46mondego>    public static void doSomething() {}<newline46mondego>}<newline46mondego>"
"8745splitHere46","9618611splitHere46","if (end != start + len)<newline46mondego>    System.arraycopy(value, end, value, start + len, count - end);<newline46mondego>"
"8746splitHere46","9618611splitHere46","public static void arraycopy(Object src,  int  srcPos,<newline46mondego>                                    Object dest, int destPos,<newline46mondego>                                    int length) {<newline46mondego>    if (srcPos != destPos && length != 0)<newline46mondego>       arraycopy0(src, srcPos, dest, destPos, length);<newline46mondego>"
"8747splitHere46","9618611splitHere46","private static native void arraycopy0(Object src,  int  srcPos,<newline46mondego>                                    Object dest, int destPos,<newline46mondego>                                    int length);<newline46mondego>"
"8748splitHere46","9618652splitHere46","pom.xml"
"8749splitHere46","9618652splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego><project xmlns=<doubleQuotes46>http://maven.apache.org/POM/4.0.0<doubleQuotes46> xmlns:xsi=<doubleQuotes46>http://www.w3.org/2001/XMLSchema-instance<doubleQuotes46> xsi:schemaLocation=<doubleQuotes46>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd<doubleQuotes46>><newline46mondego>    <modelVersion>4.0.0</modelVersion><newline46mondego>    <groupId>com.example</groupId><newline46mondego>    <artifactId>example</artifactId><newline46mondego>    <version>1.0.0-SNAPSHOT</version><newline46mondego><newline46mondego>    <dependencies><newline46mondego>        <dependency><newline46mondego>            <groupId>org.springframework</groupId><newline46mondego>            <artifactId>spring-core</artifactId><newline46mondego>            <version>3.1.0.RELEASE</version><newline46mondego>        </dependency><newline46mondego>        <dependency><newline46mondego>            <groupId>org.springframework</groupId><newline46mondego>            <artifactId>spring-aspects</artifactId><newline46mondego>            <version>3.1.0.RELEASE</version><newline46mondego>        </dependency><newline46mondego>        <dependency><newline46mondego>            <groupId>org.springframework</groupId><newline46mondego>            <artifactId>spring-orm</artifactId><newline46mondego>            <version>3.1.0.RELEASE</version><newline46mondego>        </dependency><newline46mondego>        <dependency><newline46mondego>            <groupId>org.springframework</groupId><newline46mondego>            <artifactId>spring-test</artifactId><newline46mondego>            <version>3.1.0.RELEASE</version><newline46mondego>            <scope>test</scope><newline46mondego>        </dependency><newline46mondego><newline46mondego>        <dependency><newline46mondego>            <groupId>org.springframework.data</groupId><newline46mondego>            <artifactId>spring-data-jpa</artifactId><newline46mondego>            <version>1.0.3.RELEASE</version><newline46mondego>        </dependency><newline46mondego>    </dependencies><newline46mondego><newline46mondego></project><newline46mondego>"
"8750splitHere46","9618652splitHere46","$ mvn dependency:tree<newline46mondego>    com.example:example:jar:1.0.0-SNAPSHOT<newline46mondego>+- org.springframework:spring-core:jar:3.1.0.RELEASE:compile<newline46mondego>|  +- org.springframework:spring-asm:jar:3.1.0.RELEASE:compile<newline46mondego>|  \- commons-logging:commons-logging:jar:1.1.1:compile<newline46mondego>+- org.springframework:spring-aspects:jar:3.1.0.RELEASE:compile<newline46mondego>|  +- org.springframework:spring-beans:jar:3.1.0.RELEASE:compile<newline46mondego>|  +- org.springframework:spring-context:jar:3.1.0.RELEASE:compile<newline46mondego>|  |  +- org.springframework:spring-aop:jar:3.1.0.RELEASE:compile<newline46mondego>|  |  \- org.springframework:spring-expression:jar:3.1.0.RELEASE:compile<newline46mondego>|  \- org.springframework:spring-context-support:jar:3.1.0.RELEASE:compile<newline46mondego>+- org.springframework:spring-orm:jar:3.1.0.RELEASE:compile<newline46mondego>|  +- org.springframework:spring-jdbc:jar:3.1.0.RELEASE:compile<newline46mondego>|  \- org.springframework:spring-tx:jar:3.1.0.RELEASE:compile<newline46mondego>|     \- aopalliance:aopalliance:jar:1.0:compile<newline46mondego>+- org.springframework:spring-test:jar:3.1.0.RELEASE:test (scope not updated to compile)<newline46mondego>\- org.springframework.data:spring-data-jpa:jar:1.0.3.RELEASE:compile<newline46mondego>   +- org.springframework.data:spring-data-commons-core:jar:1.1.0.RELEASE:compile<newline46mondego>   +- org.slf4j:slf4j-api:jar:1.6.1:compile<newline46mondego>   +- org.slf4j:jcl-over-slf4j:jar:1.6.1:runtime<newline46mondego>   \- org.aspectj:aspectjrt:jar:1.6.8:compile<newline46mondego>"
"8751splitHere46","9618694splitHere46","//element[@attribute='value']"
"8752splitHere46","9618700splitHere46","Arrays.fill(array, index, array.length, '\0');<newline46mondego>"
"8753splitHere46","9618700splitHere46","char[]"
"8754splitHere46","9618700splitHere46","char"
"8755splitHere46","9618772splitHere46","xmlns=<doubleQuotes46><doubleQuotes46>"
"8756splitHere46","9618772splitHere46","<h:graphicImage"
"8757splitHere46","9618839splitHere46","mypackage.MyServiceImpl"
"8758splitHere46","9618839splitHere46","javax.jws.WebService"
"8759splitHere46","9618839splitHere46","serviceName"
"8760splitHere46","9618839splitHere46","portName"
"8761splitHere46","9618839splitHere46","targetNamespace"
"8762splitHere46","9618839splitHere46","endpointInterface"
"8763splitHere46","9618839splitHere46","<wsdl:import>"
"8764splitHere46","9618839splitHere46","targetNamespace"
"8765splitHere46","9618839splitHere46","<xsd:import schemaLocation=<doubleQuotes46>http://server:80/app/schema/myschema.xsd<doubleQuotes46>>"
"8766splitHere46","9619126splitHere46","@Named(<doubleQuotes46>scheduler<doubleQuotes46>)<newline46mondego>@Component<newline46mondego>public class SchedulerComponent {<newline46mondego><newline46mondego>private List<IScheduledComponent> components;<newline46mondego><newline46mondego>public SchedulerComponent() {<newline46mondego>    this.components = new ArrayList<IScheduledComponent>();<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>public void register(IScheduledComponent component){<newline46mondego>    this.components.add(component);<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>@Scheduled(fixedRate = 5000)<newline46mondego>public void doAllWork() {<newline46mondego>    try {<newline46mondego>        for(IScheduledComponent component : this.components){<newline46mondego>            component.doWork();<newline46mondego>        }<newline46mondego><newline46mondego>        System.out.println(<doubleQuotes46>SchedulerComponent.doAllWork()<doubleQuotes46>);<newline46mondego>    } catch (Exception e) {<newline46mondego>        e.printStackTrace();<newline46mondego>    }<newline46mondego>}<newline46mondego>}<newline46mondego>"
"8767splitHere46","9619126splitHere46","public interface IScheduledComponent {<newline46mondego>    public void doWork();<newline46mondego>}<newline46mondego>"
"8768splitHere46","9619126splitHere46","@Named(<doubleQuotes46>agentData<doubleQuotes46>)<newline46mondego>@Scope(<doubleQuotes46>application<doubleQuotes46>)<newline46mondego>public class AgentDataBean implements Serializable,IScheduledComponent {<newline46mondego>...<newline46mondego>public void doWork() {<newline46mondego>  // do database poll<newline46mondego>}<newline46mondego> ... <newline46mondego>}<newline46mondego>"
"8769splitHere46","9619140splitHere46","XmlAccessType.PUBLIC"
"8770splitHere46","9619140splitHere46","package forum9610190;<newline46mondego><newline46mondego>import javax.xml.bind.annotation.XmlTransient;<newline46mondego>import org.joda.time.DateTime;<newline46mondego><newline46mondego>public class Root {<newline46mondego><newline46mondego>    @XmlTransient<newline46mondego>    private DateTime startTime;<newline46mondego><newline46mondego>    public DateTime getStartTime() {<newline46mondego>        return startTime;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setStartTime(DateTime startTime) {<newline46mondego>        this.startTime = startTime;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"8771splitHere46","9619140splitHere46","@XmlTransient"
"8772splitHere46","9619140splitHere46","package forum9610190;<newline46mondego><newline46mondego>import javax.xml.bind.annotation.XmlTransient;<newline46mondego>import org.joda.time.DateTime;<newline46mondego><newline46mondego>public class Root {<newline46mondego><newline46mondego>    private DateTime startTime;<newline46mondego><newline46mondego>    @XmlTransient<newline46mondego>    public DateTime getStartTime() {<newline46mondego>        return startTime;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setStartTime(DateTime startTime) {<newline46mondego>        this.startTime = startTime;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"8773splitHere46","9619140splitHere46","@XmlAccessorType(XmlAccessType.FIELD)"
"8774splitHere46","9619140splitHere46","package forum9610190;<newline46mondego><newline46mondego>import javax.xml.bind.annotation.XmlAccessorType;<newline46mondego>import javax.xml.bind.annotation.XmlAccessType;<newline46mondego>import javax.xml.bind.annotation.XmlTransient;<newline46mondego>import org.joda.time.DateTime;<newline46mondego><newline46mondego>@XmlAccessorType(XmlAccessType.FIELD)<newline46mondego>public class Root {<newline46mondego><newline46mondego>    @XmlTransient<newline46mondego>    private DateTime startTime;<newline46mondego><newline46mondego>    public DateTime getStartTime() {<newline46mondego>        return startTime;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setStartTime(DateTime startTime) {<newline46mondego>        this.startTime = startTime;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"8775splitHere46","9619147splitHere46","button.setVisibility(View.VISIBLE)<newline46mondego>button.setVisibility(View.INVISIBLE)<newline46mondego>"
"8776splitHere46","9619170splitHere46","a form"
"8777splitHere46","9619170splitHere46","gwtUpload"
"8778splitHere46","9619172splitHere46","printList()"
"8779splitHere46","9619172splitHere46","System.out.println (line) ;<newline46mondego>"
"8780splitHere46","9619172splitHere46","while ((line = br.readLine()) != null)<newline46mondego>{<newline46mondego>   // insert code to break input to pieces<newline46mondego>   StringTokenizer tokenizer = new StringTokenizer(line) ;<newline46mondego>   while (tokenizer.hasMoreElements())<newline46mondego>   {<newline46mondego>     String bookName = tokenizer.nextToken();<newline46mondego>     String author = tokenizer.nextToken();<newline46mondego>     String isbn = tokenizer.nextToken();<newline46mondego>     String year = tokenizer.nextToken();<newline46mondego><newline46mondego>     list.insert(bookName, author, isbn, year) ;<newline46mondego>   }<newline46mondego>   System.out.println (line) ;<newline46mondego>}<newline46mondego>"
"8781splitHere46","9619172splitHere46","Link currentLink = new Link() ;<newline46mondego>currentLink = first;<newline46mondego>"
"8782splitHere46","9619172splitHere46","Link currentLink = first;<newline46mondego>"
"8783splitHere46","9619284splitHere46","void"
"8784splitHere46","9619284splitHere46","Bishop"
"8785splitHere46","9619284splitHere46","img"
"8786splitHere46","9619284splitHere46","public void bishop() {<newline46mondego>        img = new ImageIcon(<doubleQuotes46>bishop.png<doubleQuotes46>);<newline46mondego>    }<newline46mondego>"
"8787splitHere46","9619284splitHere46","public bishop() {<newline46mondego>            img = new ImageIcon(<doubleQuotes46>bishop.png<doubleQuotes46>);<newline46mondego>        }<newline46mondego>"
"8788splitHere46","9619298splitHere46","Sprite Next=new Sprite(x-48/factor, y+30/factor, 96/factor, 60/factor,LoadAssets.WinMenuNextTextureRegion){<newline46mondego>@Override<newline46mondego>public boolean onAreaTouched(final TouchEvent pSceneTouchEvent, final float pTouchAreaLocalX, final float pTouchAreaLocalY) {<newline46mondego>if(pSceneTouchEvent.isActionUp()){<newline46mondego>pEngine.setScene(GamePlayScene.CreateTheGamePlayScene(context,pEngine,camera_width, camera_height,GamePlayScene.LevelNumber+1));<newline46mondego>}<newline46mondego>return true;<newline46mondego>}};<newline46mondego>"
"8789splitHere46","9619302splitHere46","HttpServletResponseWrapper"
"8790splitHere46","9619478splitHere46","%JAVA_HOME%\lib\security\cacerts"
"8791splitHere46","9619478splitHere46","keytool -list -keystore <doubleQuotes46>%JAVA_HOME%/jre/lib/security/cacerts<doubleQuotes46>"
"8792splitHere46","9619478splitHere46","keytool -import -noprompt -trustcacerts -alias <AliasName> -file   <certificate> -keystore <KeystoreFile> -storepass <Password>"
"8793splitHere46","9619643splitHere46","SELECT SessionTTL, MAXACTIVEUSERS, ACTIVEUSERS FROM GLOBALSETTINGS WHERE (condition)...<newline46mondego>"
"8794splitHere46","9619643splitHere46","SELECT * FROM GLOBALSETTINGS WHERE (condition)...<newline46mondego>"
"8795splitHere46","9619682splitHere46","List"
"8796splitHere46","9619682splitHere46","ArrayList"
"8797splitHere46","9619682splitHere46","request.setAttribute(<doubleQuotes46>reminders<doubleQuotes46>,queryResults);<newline46mondego>"
"8798splitHere46","9619682splitHere46","Reminder"
"8799splitHere46","9619682splitHere46","List"
"8800splitHere46","9619682splitHere46","<logic:iterate>"
"8801splitHere46","9619682splitHere46","<logic:iterate name=<doubleQuotes46>reminders<doubleQuotes46> id=<doubleQuotes46>reminder<doubleQuotes46> scope=<doubleQuotes46>request<doubleQuotes46>><newline46mondego>    ID: <bean:write name=<doubleQuotes46>reminder<doubleQuotes46> property=<doubleQuotes46>id<doubleQuotes46> /><newline46mondego>    Start Date: <bean:write name=<doubleQuotes46>reminder<doubleQuotes46> property=<doubleQuotes46>startDate<doubleQuotes46> /><newline46mondego>    End Date: <bean:write name=<doubleQuotes46>reminder<doubleQuotes46> property=<doubleQuotes46>endDate<doubleQuotes46> /><newline46mondego></logic:iterate><newline46mondego>"
"8802splitHere46","9619821splitHere46","try {<newline46mondego>    double d = Double.parseDouble(input);<newline46mondego>    double d2 = Double.parseDouble(input2);<newline46mondego>    double d3 = Double.parseDouble(input3);<newline46mondego>    double d4 = Double.parseDouble(input4);<newline46mondego>    // all number are good.<newline46mondego><newline46mondego>} catch (NumberFormatException e) {<newline46mondego>    e.pritStackTrace();<newline46mondego>}<newline46mondego>"
"8803splitHere46","9619821splitHere46","double d, d2, d3, d4;<newline46mondego>if (tryParseDouble(input)) {<newline46mondego>    d = parseDouble(input);<newline46mondego><newline46mondego>    if (tryParseDouble(input2)) {<newline46mondego>        d2 = parseDouble(input2);<newline46mondego><newline46mondego>        if (tryParseDouble(input3)) {<newline46mondego>            d3 = parseDouble(input3);<newline46mondego><newline46mondego>        } else {<newline46mondego>            if (tryParseDouble(input4)) {<newline46mondego>                d4 = parseDouble(input4);<newline46mondego><newline46mondego>            } else {<newline46mondego>                System.out.println(<doubleQuotes46>Cannot parse <doubleQuotes46> + input4);<newline46mondego>            }<newline46mondego><newline46mondego>            System.out.println(<doubleQuotes46>Cannot parse <doubleQuotes46> + input3);<newline46mondego>        }<newline46mondego><newline46mondego>    } else {<newline46mondego>        System.out.println(<doubleQuotes46>Cannot parse <doubleQuotes46> + input2);<newline46mondego>    }<newline46mondego><newline46mondego>} else {<newline46mondego>    System.out.println(<doubleQuotes46>Cannot parse <doubleQuotes46> + input);<newline46mondego>}<newline46mondego>"
"8804splitHere46","9619841splitHere46","new byte[]"
"8805splitHere46","9619841splitHere46","FileConnection fileConn;<newline46mondego>InputStream is;<newline46mondego><newline46mondego>try {<newline46mondego>    fileConn = (FileConnection) Connector.open(<doubleQuotes46>file:///<doubleQuotes46> + pictureURI.getString(), Connector.READ);<newline46mondego>    is = fileConn.openInputStream();<newline46mondego><newline46mondego>    long overallSize = fileConn.fileSize();<newline46mondego>    if (overallSize > Integer.MAX_VALUE) throw new IllegalArgumentException(<doubleQuotes46>File is too large);<newline46mondego>    byte[] imageData = new byte[(int) overallSize];<newline46mondego>    int chunkSize = 2048;<newline46mondego>    int bytesReadTotal = 0;<newline46mondego>    while (bytesRead < overallSize) {<newline46mondego>        int bytesRead = is.read(imageData, bytesReadTotal, Math.min(imageData.length - bytesReadTotal, chunkSize));<newline46mondego>        if (bytesRead == -1) break;<newline46mondego>        bytesReadTotal += bytesRead;<newline46mondego>    }<newline46mondego>} finally {<newline46mondego>    if (is != null) is.close();<newline46mondego>    if (fileConn != null) fileConn.close();<newline46mondego>}<newline46mondego>"
"8806splitHere46","9619918splitHere46","BobsledWSHostLocator locator = new BobsledWSHostLocator();<newline46mondego>BobsledWSHostService service = locator.getBobsledWSHostHttpPort(new URL(<doubleQuotes46>http://localhost:8731/Bobsled/Core/?wsdl<doubleQuotes46>));<newline46mondego>"
"8807splitHere46","9619959splitHere46","Location"
"8808splitHere46","9619959splitHere46","GeoPoint"
"8809splitHere46","9619959splitHere46","implicit def geoPointFromLocation(l: Location):GeoPoint = new GeoPoint...<newline46mondego><newline46mondego>override def onLocationChanged(l: Location) {        <newline46mondego>    val gp: GeoPoint = l  // let Scala compiler do the conversion for you<newline46mondego>    val item = new OverlayItem(gp, ...)<newline46mondego>    ....<newline46mondego>    // or just pass the location to OverlayItem constructor directly<newline46mondego>    val item2 = new OverlayItem(l, ...)<newline46mondego>}<newline46mondego>"
"8810splitHere46","9620161splitHere46","rawQuery"
"8811splitHere46","9620161splitHere46","SQLiteDatabase#execSQL"
"8812splitHere46","9620161splitHere46","SQLiteOpenHelper dummy = new SQLiteOpenHelper(this, <doubleQuotes46>mobileAppBeginner.db<doubleQuotes46>, null, 1) {<newline46mondego>        @Override public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {}<newline46mondego>        @Override public void onCreate(SQLiteDatabase db) {}<newline46mondego>    };<newline46mondego><newline46mondego>    SQLiteDatabase db = dummy.getWritableDatabase();<newline46mondego>    db.execSQL(<doubleQuotes46>CREATE TEMP TABLE messages (read_status INTEGER, direction INTEGER, target TEXT)<doubleQuotes46>);<newline46mondego>    db.execSQL(<doubleQuotes46>CREATE TEMP TABLE IF NOT EXISTS tt1 (unread_message int, target varchar)<doubleQuotes46>);<newline46mondego>    db.execSQL(<doubleQuotes46>INSERT INTO tt1 SELECT count(*), target  FROM messages where read_status=0 and direction=1 GROUP BY target<doubleQuotes46>);<newline46mondego>"
"8813splitHere46","9620316splitHere46","android.R.id.list"
"8814splitHere46","9620316splitHere46","android.R.id.list"
"8815splitHere46","9620316splitHere46","layout/item_view.xml"
"8816splitHere46","9620357splitHere46","finalize"
"8817splitHere46","9620451splitHere46","addMarker"
"8818splitHere46","9620451splitHere46","m_gp"
"8819splitHere46","9620451splitHere46","oi.getPoint()"
"8820splitHere46","9620451splitHere46","m_data.addMarker(oi.getPoint(), data.getIntExtra(<doubleQuotes46>MARK_ID<doubleQuotes46>, R.drawable.tile5));<newline46mondego>"
"8821splitHere46","9620461splitHere46","CommunicationImpl comm = (CommunicationImpl) Naming.lookup(url);<newline46mondego>"
"8822splitHere46","9620461splitHere46","ICommunication comm = (ICommunication) Naming.lookup(url);<newline46mondego>"
"8823splitHere46","9620461splitHere46","CommunicationImpl"
"8824splitHere46","9620461splitHere46","ICommunication"
"8825splitHere46","9620485splitHere46","int currentPlayerIndex = players.indexOf(currentPlayer);<newline46mondego>int nextPlayerIndex = currentPlayerIndex + (direction0fPlay ? 1 : -1);<newline46mondego><newline46mondego>// Ensure index is in array<newline46mondego>nextPlayerIndex = (nextPlayerIndex + players.size()) % players.size();<newline46mondego><newline46mondego>return players.get(nextPlayerIndex);<newline46mondego>"
"8826splitHere46","9620644splitHere46","url='http:\\localhost:8080\'+appName+'\ajax.do'<newline46mondego>"
"8827splitHere46","9620718splitHere46","FileNotFoundException"
"8828splitHere46","9620718splitHere46","FileOutputStream"
"8829splitHere46","9620718splitHere46","createNewFile()"
"8830splitHere46","9620718splitHere46","File yourFile = new File(<doubleQuotes46>score.txt<doubleQuotes46>);<newline46mondego>if(!yourFile.exists()) {<newline46mondego>    yourFile.createNewFile();<newline46mondego>} <newline46mondego>FileOutputStream oFile = new FileOutputStream(yourFile, false); <newline46mondego>"
"8831splitHere46","9620900splitHere46","public List<T> listOf(String json, Class<T> elementType) {<newline46mondego>   ObjectMapper mapper = new ObjectMapper(); // should (re)use static instance for perf!<newline46mondego>   JavaType listType = mapper.getTypeFactory().constructCollectionType(ArrayList.class, elementType);<newline46mondego>   return mapper.readValue(json, listType);<newline46mondego>}<newline46mondego>"
"8832splitHere46","9620900splitHere46","TypeFactory"
"8833splitHere46","9620900splitHere46","JavaType"
"8834splitHere46","9620900splitHere46","Class"
"8835splitHere46","9620900splitHere46","TypeFactory"
"8836splitHere46","9620900splitHere46","TypeReference"
"8837splitHere46","9620900splitHere46","JavaType"
"8838splitHere46","9620900splitHere46","public T parseSingle(Class<T> cls, InputStream src) throws IOException {<newline46mondego>  return mapper.readValue(src, cls);<newline46mondego>}<newline46mondego>"
"8839splitHere46","9620900splitHere46","InputStream"
"8840splitHere46","9620900splitHere46","byte[]"
"8841splitHere46","9620941splitHere46","// create QR code<newline46mondego>    BitMatrix bitMatrix = new QRCodeWriter().encode(<doubleQuotes46>Text in QRCode<doubleQuotes46>, BarcodeFormat.QR_CODE, 15, 15);<newline46mondego>    // save as image<newline46mondego>    String path = <doubleQuotes46>path/on/disc<doubleQuotes46><newline46mondego>    File img = new File(path);<newline46mondego>    FileOutputStream fos = new FileOutputStream(img);<newline46mondego>    MatrixToImageWriter.writeToStream(bitMatrix, <doubleQuotes46>gif<doubleQuotes46>, fos);<newline46mondego>    fos.close();<newline46mondego>"
"8842splitHere46","9621013splitHere46","setIconImage(Toolkit.getDefaultToolkit().getImage(this.getClass().getResource(<doubleQuotes46>/jlab/mainframe/images/jLab.gif<doubleQuotes46>)));<newline46mondego>"
"8843splitHere46","9621090splitHere46","getListe()"
"8844splitHere46","9621090splitHere46","for(Entry e: getListe()) {<newline46mondego>   // do something with e.<newline46mondego>}<newline46mondego>"
"8845splitHere46","9621660splitHere46","debug"
"8846splitHere46","9621660splitHere46","Log in to admin-console > Configurations > server-config > JVM-Settings > check DEBUG checkbox > restart server<newline46mondego>"
"8847splitHere46","9621660splitHere46","debug.bat/.sh"
"8848splitHere46","9621660splitHere46","%TOMCAT_HOME%/bin"
"8849splitHere46","9621660splitHere46","set JPDA_ADDRESS=8000<newline46mondego>    set JPDA_TRANSPORT=dt_socket<newline46mondego>    catalina.bat jpda start<newline46mondego>"
"8850splitHere46","9621660splitHere46","%catalina_home%/bin/tomcat6w.exe"
"8851splitHere46","9621668splitHere46","\u00a0"
"8852splitHere46","9621668splitHere46","input = input.replace(' ', '\u00a0');<newline46mondego>"
"8853splitHere46","9621668splitHere46","DecimalFormat decimalFormatter = (DecimalFormat) formatter;<newline46mondego>DecimalFormatSymbols symbols = decimalFormatter.getDecimalFormatSymbols();<newline46mondego>symbols.setGroupingSeparator(' ');<newline46mondego>decimalFormatter.setDecimalFormatSymbols(symbols);<newline46mondego>"
"8854splitHere46","9622236splitHere46","synchronized(new Object())"
"8855splitHere46","9622236splitHere46","oneObject"
"8856splitHere46","9622236splitHere46","anotherObject"
"8857splitHere46","9622236splitHere46","new Object()"
"8858splitHere46","9622236splitHere46","synchronzied"
"8859splitHere46","9622248splitHere46","<h:form><newline46mondego>    <h:inputHidden id=<doubleQuotes46>oldValue<doubleQuotes46> value=<doubleQuotes46>#{mrBean.oldValue}<doubleQuotes46> /><newline46mondego><newline46mondego>    <h:selectOneListBox id=<doubleQuotes46>newValue<doubleQuotes46> value=<doubleQuotes46>#{mrBean.newValue}<doubleQuotes46>><newline46mondego>        ...<newline46mondego>    <h:selectOneListBox><newline46mondego><newline46mondego>    <h:commandButton actionListener=<doubleQuotes46>#{mrBean.doSomething}<doubleQuotes46> value=<doubleQuotes46>Submit<doubleQuotes46> /><newline46mondego></h:form><newline46mondego>"
"8860splitHere46","9622248splitHere46","@RequestScoped<newline46mondego>@ManagedBean<newline46mondego>public class MrBean {<newline46mondego>    private String oldValue;<newline46mondego>    private String newValue;<newline46mondego><newline46mondego>    public void doSeomthing() {<newline46mondego>       if (oldValue != null) {<newline46mondego>           // Do whatever you need when oldValue is not null here<newline46mondego>       } else {<newline46mondego>           // 1st request will have oldValue == null<newline46mondego>       }<newline46mondego><newline46mondego>       oldValue = newValue; // Update the oldValue with newValue<newline46mondego>    }<newline46mondego><newline46mondego>    // Getters and Setters<newline46mondego>}<newline46mondego>"
"8861splitHere46","9622312splitHere46","Something.java"
"8862splitHere46","9622312splitHere46","public class Something {<newline46mondego>  //Something can access SomethingElse's doSomething method.<newline46mondego><newline46mondego>  private class SomethingElse {<newline46mondego>    public void doSomething() {<newline46mondego>    }<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>class SomethingToo {<newline46mondego><newline46mondego>}<newline46mondego>"
"8863splitHere46","9622312splitHere46","OtherSomething.java"
"8864splitHere46","9622312splitHere46","public class OtherSomething {<newline46mondego>  //OtherSomething cannot access SomethingElse's doSomething method.<newline46mondego>  //But can access SomethingToo, if they are in the same package<newline46mondego>}<newline46mondego>"
"8865splitHere46","9622347splitHere46","synchronized(lock1) {<newline46mondego>     lock1 = new Object();<newline46mondego>     sharedVariable++;<newline46mondego> }<newline46mondego>"
"8866splitHere46","9622347splitHere46","lock1"
"8867splitHere46","9622347splitHere46","final"
"8868splitHere46","9622380splitHere46","isInstance"
"8869splitHere46","9622380splitHere46","Class"
"8870splitHere46","9622380splitHere46","instanceof"
"8871splitHere46","9622380splitHere46","if (objClass.isInstance(obj)) ...<newline46mondego>"
"8872splitHere46","9622380splitHere46",".cast"
"8873splitHere46","9622380splitHere46","objClass"
"8874splitHere46","9622380splitHere46","public <T> void method(Object obj, Class<T> objClass) {<newline46mondego>  if(objClass.isInstance(obj)) {<newline46mondego>    T t = objClass.cast(obj);<newline46mondego>    //do something with t instead of obj<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"8875splitHere46","9622437splitHere46","executeUpdate"
"8876splitHere46","9622437splitHere46","int"
"8877splitHere46","9622437splitHere46","con.stmt"
"8878splitHere46","9622437splitHere46","int"
"8879splitHere46","9622437splitHere46","item"
"8880splitHere46","9622437splitHere46","PreparedStatement st = db.con.prepareStatement(<doubleQuotes46>DELETE FROM item WHERE Name=?<doubleQuotes46>);<newline46mondego>st.setString(1, textField_name.getText());<newline46mondego>int rowsDeleted = st.executeUpdate();<newline46mondego>"
"8881splitHere46","9622574splitHere46","Set<Integer> randomValues = new HashSet<Integer>();<newline46mondego>"
"8882splitHere46","9622574splitHere46","if(randomValues.contains(ans)){<newline46mondego>//do stuff<newline46mondego>} else {<newline46mondego>//do other stuff<newline46mondego>}<newline46mondego>"
"8883splitHere46","9622655splitHere46","public class TestAppActivity extends Activity {<newline46mondego><newline46mondego>    private ImageView imageView;<newline46mondego>    private int imageNumber = 1;<newline46mondego>    private String plakatiUrl = <doubleQuotes46>http://plakati.bg/<doubleQuotes46>;<newline46mondego>    private Drawable image = null;<newline46mondego><newline46mondego>    public void onCreate(Bundle savedInstanceState) {<newline46mondego>        super.onCreate(savedInstanceState);<newline46mondego>        setContentView(R.layout.slides);<newline46mondego><newline46mondego>        image = LoadImageFromWeb(generateUrlString(plakatiUrl, imageNumber));<newline46mondego>        imageView = new ImageView(getBaseContext());<newline46mondego>        imageView = (ImageView) findViewById(R.id.imageView1);<newline46mondego>        imageView.setImageDrawable(image);<newline46mondego><newline46mondego>        Button nextButton = (Button) findViewById(R.id.nextBtn);<newline46mondego>        nextButton.setOnClickListener(new View.OnClickListener() {<newline46mondego><newline46mondego>            public void onClick(View view) {<newline46mondego>                imageNumber++;<newline46mondego><newline46mondego>                image = LoadImageFromWeb(generateUrlString(plakatiUrl, imageNumber));<newline46mondego><newline46mondego>                imageView.setImageDrawable(image);<newline46mondego>            }<newline46mondego>        });<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    private Drawable LoadImageFromWeb(String url) {<newline46mondego>        Drawable d = null;<newline46mondego><newline46mondego>        InputStream is;<newline46mondego>        try {<newline46mondego>            is = (InputStream) new URL(url).getContent();<newline46mondego>            d = Drawable.createFromStream(is, <doubleQuotes46>src name<doubleQuotes46>);<newline46mondego>        } catch (MalformedURLException e) {<newline46mondego>            e.printStackTrace();<newline46mondego>        } catch (IOException e) {<newline46mondego>            e.printStackTrace();<newline46mondego>        }<newline46mondego><newline46mondego>        return d;<newline46mondego>    }<newline46mondego><newline46mondego>    private String generateUrlString(String str, int n) {<newline46mondego><newline46mondego>        return str + Integer.toString(n) + <doubleQuotes46>.jpg<doubleQuotes46>;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8884splitHere46","9622655splitHere46","Bitmap"
"8885splitHere46","9622655splitHere46","Drawable"
"8886splitHere46","9622655splitHere46","LoadImageFromWeb()"
"8887splitHere46","9622655splitHere46","onCreate()"
"8888splitHere46","9622911splitHere46","prest.setString(1, <doubleQuotes46>MockID<doubleQuotes46>);<newline46mondego>"
"8889splitHere46","9622911splitHere46","String mockID = <doubleQuotes46>2<doubleQuotes46>; //Set this however you want to set it.<newline46mondego>prest.setString(1, mockID);<newline46mondego>int val = prest.executeUpdate();<newline46mondego>//Check val for what happened.<newline46mondego>"
"8890splitHere46","9622942splitHere46","Persistence"
"8891splitHere46","9622942splitHere46","Activity"
"8892splitHere46","9622942splitHere46","onCreate"
"8893splitHere46","9622942splitHere46","public class Persistence { <newline46mondego><newline46mondego>    private static final String PREFERENCES = <doubleQuotes46>tourist_guide_preferences<doubleQuotes46>;<newline46mondego>    private SharedPreferences settings;<newline46mondego>    private SharedPreferences.Editor editor;<newline46mondego>    private Context context;<newline46mondego><newline46mondego><newline46mondego>    public Persistence(Context context)<newline46mondego>    {<newline46mondego>        this.context = context;<newline46mondego>        settings = context.getSharedPreferences(PREFERENCES, 0);<newline46mondego>        editor = settings.edit();<newline46mondego>    }<newline46mondego><newline46mondego>    public int getRadius()<newline46mondego>    {<newline46mondego>        return settings.getInt(<doubleQuotes46>radius<doubleQuotes46>, 2000);<newline46mondego>    }<newline46mondego><newline46mondego>    public int getClusterSize()<newline46mondego>    {<newline46mondego>        return settings.getInt(<doubleQuotes46>cluster<doubleQuotes46>, 50);<newline46mondego>    }<newline46mondego><newline46mondego>    public void setRadius(int radius)<newline46mondego>    {<newline46mondego>        editor.putInt(<doubleQuotes46>radius<doubleQuotes46>, radius);<newline46mondego>        editor.commit();<newline46mondego>    }<newline46mondego><newline46mondego>    public void setClusterSize(int size)<newline46mondego>    {<newline46mondego>        editor.putInt(<doubleQuotes46>cluster<doubleQuotes46>, size);<newline46mondego>        editor.commit();        <newline46mondego>    }   <newline46mondego>}<newline46mondego>"
"8894splitHere46","9622942splitHere46","Persistence"
"8895splitHere46","9622942splitHere46","storage = new Persistence(this);<newline46mondego>"
"8896splitHere46","9622966splitHere46","ctx.save()"
"8897splitHere46","9622966splitHere46","ctx.restore()"
"8898splitHere46","9622966splitHere46","canvas.width = canvas.width"
"8899splitHere46","9622987splitHere46","sendKeys()"
"8900splitHere46","9622987splitHere46","CharSequence..."
"8901splitHere46","9622987splitHere46","CharSequence"
"8902splitHere46","9622987splitHere46","searchField.sendKeys(new String[] { <doubleQuotes46>sample<doubleQuotes46> });<newline46mondego>"
"8903splitHere46","9623010splitHere46","public static void sendNotification() {<newline46mondego>        Push push = new Push();<newline46mondego>        push.setAliases(Arrays.asList(<doubleQuotes46>39901<doubleQuotes46>));<newline46mondego><newline46mondego>        // For Android<newline46mondego>        Android android = new Android();<newline46mondego>        android.setAlert(<doubleQuotes46>hi there<doubleQuotes46>);<newline46mondego>        push.setAndroid(android);<newline46mondego><newline46mondego>        // For iOS<newline46mondego>        // APS aps = new APS();<newline46mondego>        // aps.setBadge(1);<newline46mondego>        // aps.setAlert(<doubleQuotes46>hi there<doubleQuotes46>);<newline46mondego>        // aps.setSound(<doubleQuotes46>default<doubleQuotes46>);<newline46mondego>        // aps.setData(<doubleQuotes46>additinoal data<doubleQuotes46>);<newline46mondego>        // push.setAps(aps);<newline46mondego><newline46mondego>        UrbanAirshipClient uac = new UrbanAirshipClient(<doubleQuotes46>app key<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>master app key<doubleQuotes46>);<newline46mondego>        uac.sendPushNotifications(push);<newline46mondego>    }<newline46mondego>"
"8904splitHere46","9623021splitHere46","^([A-Z0-9]|(?! )(?!.* $)(?!.*  )(?!.*-.*-)(?!.*\..*\.)(?![.-]$)[A-Z0-9 .-]+)$<newline46mondego>"
"8905splitHere46","9623021splitHere46","[A-Z0-9]"
"8906splitHere46","9623021splitHere46","(?! )(?!.* $)(?!.*  )(?!.*-.*-)(?!.*\..*\.)(?![.-]$)"
"8907splitHere46","9623021splitHere46","-"
"8908splitHere46","9623021splitHere46","."
"8909splitHere46","9623021splitHere46","."
"8910splitHere46","9623021splitHere46","-"
"8911splitHere46","9623021splitHere46","[A-Z0-9 .-]+"
"8912splitHere46","9623021splitHere46","\"
"8913splitHere46","9623021splitHere46","\"
"8914splitHere46","9623021splitHere46","\\"
"8915splitHere46","9623027splitHere46","String msg = <doubleQuotes46>You have selected:<doubleQuotes46>;<newline46mondego>if (DCB1.isChecked()) {<newline46mondego>    msg += <doubleQuotes46>\n    DCB1<doubleQuotes46>; //or get the disease name<newline46mondego>}<newline46mondego>if (DCB2.isChecked()) {<newline46mondego>    msg += <doubleQuotes46>\n    DCB2<doubleQuotes46>; //or get the disease name<newline46mondego>}<newline46mondego>if (DCB3.isChecked()) {<newline46mondego>    msg += <doubleQuotes46>\n    DCB3<doubleQuotes46>; //or get the disease name<newline46mondego>}<newline46mondego>if (DCB4.isChecked()) {<newline46mondego>    msg += <doubleQuotes46>\n    DCB4<doubleQuotes46>; //or get the disease name<newline46mondego>}<newline46mondego>showMessage(msg);<newline46mondego>"
"8916splitHere46","9623100splitHere46","public class ExecutorTest<newline46mondego>{<newline46mondego>    private static final int CORE_POOL_SIZE = 2;<newline46mondego>    private static final int MAXIMUM_POOL_SIZE = 4;<newline46mondego>    private static final int KEEP_ALIVE_TIME_MS = 5000;<newline46mondego><newline46mondego>    public static void main(String[] args)<newline46mondego>    {<newline46mondego>        final SaturateExecutorBlockingQueue workQueue = <newline46mondego>            new SaturateExecutorBlockingQueue();<newline46mondego><newline46mondego>        final ThreadPoolExecutor executor = <newline46mondego>            new ThreadPoolExecutor(CORE_POOL_SIZE, <newline46mondego>                    MAXIMUM_POOL_SIZE, <newline46mondego>                    KEEP_ALIVE_TIME_MS, <newline46mondego>                    TimeUnit.MILLISECONDS, <newline46mondego>                    workQueue);<newline46mondego><newline46mondego>        workQueue.setExecutor(executor);<newline46mondego><newline46mondego>        for (int i = 0; i < 6; i++)<newline46mondego>        {<newline46mondego>            final int index = i;<newline46mondego>            executor.submit(new Runnable()<newline46mondego>            {<newline46mondego>                public void run()<newline46mondego>                {<newline46mondego>                    try<newline46mondego>                    {<newline46mondego>                        Thread.sleep(1000);<newline46mondego>                    }<newline46mondego>                    catch (InterruptedException e)<newline46mondego>                    {<newline46mondego>                        e.printStackTrace();<newline46mondego>                    }<newline46mondego><newline46mondego>                    System.out.println(<doubleQuotes46>Runnable <doubleQuotes46> + index <newline46mondego>                            + <doubleQuotes46> on thread: <doubleQuotes46> + Thread.currentThread());<newline46mondego>                }<newline46mondego>            });<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public static class SaturateExecutorBlockingQueue <newline46mondego>        extends LinkedBlockingQueue<Runnable><newline46mondego>    {<newline46mondego>        private ThreadPoolExecutor executor;<newline46mondego><newline46mondego>        public void setExecutor(ThreadPoolExecutor executor)<newline46mondego>        {<newline46mondego>            this.executor = executor;<newline46mondego>        }<newline46mondego><newline46mondego>        public boolean offer(Runnable e)<newline46mondego>        {<newline46mondego>            if (executor.getPoolSize() < executor.getMaximumPoolSize())<newline46mondego>            {<newline46mondego>                return false;<newline46mondego>            }<newline46mondego>            return super.offer(e);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8917splitHere46","9623100splitHere46","setCorePoolSize"
"8918splitHere46","9623100splitHere46","ThreadPoolExecutor"
"8919splitHere46","9623100splitHere46","ThreadPoolExecutor"
"8920splitHere46","9623100splitHere46","public class ExecutorTest2<newline46mondego>{<newline46mondego>    private static final int KEEP_ALIVE_TIME_MS = 5000;<newline46mondego>    private static final int CORE_POOL_SIZE = 2;<newline46mondego>    private static final int MAXIMUM_POOL_SIZE = 4;<newline46mondego><newline46mondego>    public static void main(String[] args) throws InterruptedException<newline46mondego>    {<newline46mondego>        final SaturateExecutorBlockingQueue workQueue = <newline46mondego>            new SaturateExecutorBlockingQueue(CORE_POOL_SIZE, <newline46mondego>                    MAXIMUM_POOL_SIZE);<newline46mondego><newline46mondego>        final ThreadPoolExecutor executor = <newline46mondego>            new ThreadPoolExecutor(CORE_POOL_SIZE, <newline46mondego>                    MAXIMUM_POOL_SIZE, <newline46mondego>                    KEEP_ALIVE_TIME_MS, <newline46mondego>                    TimeUnit.MILLISECONDS, <newline46mondego>                    workQueue);<newline46mondego><newline46mondego>        workQueue.setExecutor(executor);<newline46mondego><newline46mondego>        for (int i = 0; i < 60; i++)<newline46mondego>        {<newline46mondego>            final int index = i;<newline46mondego>            executor.submit(new Runnable()<newline46mondego>            {<newline46mondego>                public void run()<newline46mondego>                {<newline46mondego>                    try<newline46mondego>                    {<newline46mondego>                        Thread.sleep(1000);<newline46mondego>                    }<newline46mondego>                    catch (InterruptedException e)<newline46mondego>                    {<newline46mondego>                        e.printStackTrace();<newline46mondego>                    }<newline46mondego><newline46mondego>                    System.out.println(<doubleQuotes46>Runnable <doubleQuotes46> + index <newline46mondego>                            + <doubleQuotes46> on thread: <doubleQuotes46> + Thread.currentThread()<newline46mondego>                            + <doubleQuotes46> poolSize: <doubleQuotes46> + executor.getPoolSize());<newline46mondego>                }<newline46mondego>            });<newline46mondego>        }<newline46mondego><newline46mondego>        executor.shutdown();<newline46mondego><newline46mondego>        executor.awaitTermination(Long.MAX_VALUE, TimeUnit.MILLISECONDS);<newline46mondego>    }<newline46mondego><newline46mondego>    public static class SaturateExecutorBlockingQueue <newline46mondego>        extends LinkedBlockingQueue<Runnable><newline46mondego>    {<newline46mondego>        private final int corePoolSize;<newline46mondego>        private final int maximumPoolSize;<newline46mondego>        private ThreadPoolExecutor executor;<newline46mondego><newline46mondego>        public SaturateExecutorBlockingQueue(int corePoolSize, <newline46mondego>                int maximumPoolSize)<newline46mondego>        {<newline46mondego>            this.corePoolSize = corePoolSize;<newline46mondego>            this.maximumPoolSize = maximumPoolSize;<newline46mondego>        }<newline46mondego><newline46mondego>        public void setExecutor(ThreadPoolExecutor executor)<newline46mondego>        {<newline46mondego>            this.executor = executor;<newline46mondego>        }<newline46mondego><newline46mondego>        public boolean offer(Runnable e)<newline46mondego>        {<newline46mondego>            if (super.offer(e) == false)<newline46mondego>            {<newline46mondego>                return false;<newline46mondego>            }<newline46mondego>            // Uncomment one or both of the below lines to increase<newline46mondego>            // the likelyhood of the threadpool reusing an existing thread <newline46mondego>            // vs. spawning a new one.<newline46mondego>            //Thread.yield();<newline46mondego>            //Thread.sleep(0);<newline46mondego>            int currentPoolSize = executor.getPoolSize();<newline46mondego>            if (currentPoolSize < maximumPoolSize <newline46mondego>                    && currentPoolSize >= corePoolSize)<newline46mondego>            {<newline46mondego>                executor.setCorePoolSize(currentPoolSize + 1);<newline46mondego>                executor.setCorePoolSize(corePoolSize);<newline46mondego>            }<newline46mondego>            return true;<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8921splitHere46","9623162splitHere46","wsse:Security"
"8922splitHere46","9623162splitHere46","includeTimestamp"
"8923splitHere46","9623167splitHere46","char"
"8924splitHere46","9623167splitHere46","Character"
"8925splitHere46","9623289splitHere46","clone"
"8926splitHere46","9623289splitHere46","volatile"
"8927splitHere46","9623303splitHere46","declare soft"
"8928splitHere46","9623303splitHere46","SoftException"
"8929splitHere46","9623303splitHere46","AfterThrowing"
"8930splitHere46","9623303splitHere46","declare soft"
"8931splitHere46","9623303splitHere46","aspect ErrorHandler {<newline46mondego>  declare soft : Exception : within(*);<newline46mondego>  after() throwing(Exception e) : handler(e) {<newline46mondego><newline46mondego>    // do something...<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"8932splitHere46","9623341splitHere46","182 bytes"
"8933splitHere46","9623341splitHere46","-110 bytes"
"8934splitHere46","9623349splitHere46","scene.getView().getLocationOnScreen()<newline46mondego>"
"8935splitHere46","9623381splitHere46","HttpURLConnection httpcon = (HttpURLConnection) ((new URL(<doubleQuotes46>a url<doubleQuotes46>).openConnection()));<newline46mondego>httpcon.setDoOutput(true);<newline46mondego>httpcon.setRequestProperty(<doubleQuotes46>Content-Type<doubleQuotes46>, <doubleQuotes46>application/json<doubleQuotes46>);<newline46mondego>httpcon.setRequestProperty(<doubleQuotes46>Accept<doubleQuotes46>, <doubleQuotes46>application/json<doubleQuotes46>);<newline46mondego>httpcon.setRequestMethod(<doubleQuotes46>POST<doubleQuotes46>);<newline46mondego>httpcon.connect();<newline46mondego><newline46mondego>byte[] outputBytes = <doubleQuotes46>{'value': 7.5}<doubleQuotes46>.getBytes(<doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>OutputStream os = httpcon.getOutputStream();<newline46mondego>os.write(outputBytes);<newline46mondego><newline46mondego>os.close();<newline46mondego>"
"8936splitHere46","9623421splitHere46","Timer"
"8937splitHere46","9623421splitHere46","java.util.concurrent"
"8938splitHere46","9623421splitHere46","ExecutorService executor = Executors.newSingleThreadExecutor(); // An application wide thread pool executor is better.<newline46mondego><newline46mondego>Callable<InputStream> task = new Callable<InputStream>() {<newline46mondego>    @Override<newline46mondego>    public InputStream call() throws Exception {<newline46mondego>        // Do here your webservice call job.<newline46mondego>        return new URL(<doubleQuotes46>http://stackoverflow.com<doubleQuotes46>).openStream();<newline46mondego>    }<newline46mondego>};<newline46mondego><newline46mondego>try {<newline46mondego>    InputStream input = executor.invokeAny(Arrays.asList(task), 60, TimeUnit.SECONDS);<newline46mondego>    // Successful! Forward to success page here.<newline46mondego>} catch (TimeoutException e) {<newline46mondego>    // Timeout occurred. Forward to timeout page here.<newline46mondego>}<newline46mondego>"
"8939splitHere46","9623465splitHere46","addmult"
"8940splitHere46","9623465splitHere46","JavaFunction addmult = new JavaFunction(L) {                <newline46mondego>    @Override<newline46mondego>    public int execute() throws LuaException {<newline46mondego>        double x = L.toNumber(2);<newline46mondego>        double y = L.toNumber(3);<newline46mondego>        L.pushNumber(x+y);<newline46mondego>        L.pushNumber(x*y);<newline46mondego>        return 2;<newline46mondego>    }<newline46mondego>};<newline46mondego>addmult.register(<doubleQuotes46>addmult<doubleQuotes46>);<newline46mondego>"
"8941splitHere46","9623465splitHere46","print(addmult(3, 5)) --> 8    13<newline46mondego>"
"8942splitHere46","9623494splitHere46","select c from Contact c <newline46mondego>where c.cellPhone = :phoneNumber <newline46mondego>   or c.workPhone = :phoneNumber <newline46mondego>   or c.homePhone = :phoneNumber<newline46mondego>"
"8943splitHere46","9623494splitHere46","phoneNumber"
"8944splitHere46","9623494splitHere46","type"
"8945splitHere46","9623494splitHere46","select c from Phone p<newline46mondego>inner join p.contact c<newline46mondego>where p.phoneNumber = :phoneNumber<newline46mondego>"
"8946splitHere46","9623511splitHere46","public Home() {<newline46mondego>    initGUI();<newline46mondego>    this.addWindowListener(new WindowAdapter() {<newline46mondego>        @Override<newline46mondego>        public void windowOpened(WindowEvent e) {<newline46mondego>            PlaySound.sound = new File(<doubleQuotes46>../Ajax/src/sound/Sound.wav<doubleQuotes46>);<newline46mondego>            soundThread = new Thread(PlaySound.play).start();<newline46mondego>        }<newline46mondego>        //If you want the sound to stop you can just add another override, but you need to keep track of the sound thread<newline46mondego>        @Override<newline46mondego>        public void windowClosing(WindowEvent e) {<newline46mondego>            soundThread.interrupt();<newline46mondego>        }<newline46mondego>    });<newline46mondego>}<newline46mondego>"
"8947splitHere46","9623527splitHere46","if (availableBytes >5) {<newline46mondego>    obj = in.readObject();<newline46mondego>    message = (ClientMessage) (obj);<newline46mondego>    processMessage();<newline46mondego>}<newline46mondego>"
"8948splitHere46","9623596splitHere46","enterButton.addActionListener(new ActionListener() { <newline46mondego>    public void actionPerformed(ActionEvent e) { <newline46mondego>        // Do something to your JPanel reference<newline46mondego>    } <newline46mondego>});<newline46mondego>"
"8949splitHere46","9623710splitHere46","@Entity<newline46mondego>@Table(name = <doubleQuotes46>table<doubleQuotes46>)<newline46mondego>@Inheritance(strategy = InheritanceType.SINGLE_TABLE)<newline46mondego>@DiscriminatorColumn(name = <doubleQuotes46>type<doubleQuotes46>, discriminatorType = DiscriminatorType.INTEGER)<newline46mondego>public abstract class ParentImpl implements Parent{}<newline46mondego><newline46mondego>@Entity<newline46mondego>@DiscriminatorValue(<doubleQuotes46>1<doubleQuotes46>)<newline46mondego>public class Entity1Impl extends ParentImpl {}<newline46mondego><newline46mondego>public interface AbstractDao<T extends Parent> {}<newline46mondego><newline46mondego>public interface ConcreteParentDao<Parent> {}<newline46mondego>"
"8950splitHere46","9623779splitHere46","Runnable"
"8951splitHere46","9623779splitHere46","run"
"8952splitHere46","9623795splitHere46","renderJSON(bookmarks, new play.modules.morphia.utils.ObjectIdGsonAdapter());"
"8953splitHere46","9623795splitHere46","blobFieldsTracker"
"8954splitHere46","9623796splitHere46","Object... args"
"8955splitHere46","9623796splitHere46","public static void addEvent3( String luaFile, String function, <newline46mondego>                             int milliseconds, Object arg1, Object arg2, Object arg3 )<newline46mondego>{<newline46mondego>    events.add(new TimerEvent(luaFile, function, milliseconds, new Object[] {arg1, arg2, arg3}));<newline46mondego>}<newline46mondego>"
"8956splitHere46","9623948splitHere46","JPanel"
"8957splitHere46","9623948splitHere46","drawingCanvasPanel"
"8958splitHere46","9623948splitHere46","painComponent"
"8959splitHere46","9623948splitHere46","Graphics"
"8960splitHere46","9624093splitHere46","Command.run()"
"8961splitHere46","9624093splitHere46","Executors"
"8962splitHere46","9624093splitHere46","Executors.newSingleThreadExecutor()"
"8963splitHere46","9624093splitHere46","ExecutorService"
"8964splitHere46","9624093splitHere46","SynchronousQueue"
"8965splitHere46","9624093splitHere46","final ExecutorService executorServer =<newline46mondego>    new ThreadPoolExecutor(0, 1, 60L, TimeUnit.SECONDS,<newline46mondego>         new SynchronousQueue<Runnable>());<newline46mondego>"
"8966splitHere46","9624093splitHere46","synchronized"
"8967splitHere46","9624093splitHere46","ExecutorService"
"8968splitHere46","9624176splitHere46","SINGLE_TABLE"
"8969splitHere46","9624176splitHere46","@Inheritance"
"8970splitHere46","9624176splitHere46","SINGLE_TABLE"
"8971splitHere46","9624295splitHere46","List<Map<String, String>> list = new ArrayList<Map<String, String>>();<newline46mondego>// 0<newline46mondego>Map<String, String> tmp = new HashMap<String, String>();<newline46mondego>tmp.put(<doubleQuotes46>name<doubleQuotes46>, <doubleQuotes46>sagar<doubleQuotes46>);<newline46mondego>tmp.put(<doubleQuotes46>company<doubleQuotes46>, <doubleQuotes46>Visa<doubleQuotes46>);<newline46mondego>list.add(tmp);<newline46mondego>// 1<newline46mondego>tmp = new HashMap<String, String>();<newline46mondego>tmp.put(<doubleQuotes46>name<doubleQuotes46>, <doubleQuotes46>shloka<doubleQuotes46>);<newline46mondego>tmp.put(<doubleQuotes46>company<doubleQuotes46>, <doubleQuotes46>Doctor<doubleQuotes46>);<newline46mondego>list.add(tmp);<newline46mondego>// so on, so forth...<newline46mondego>"
"8972splitHere46","9624397splitHere46","Use the DefaultHttpClient httpclient = new DefaultHttpClient();<newline46mondego><newline46mondego>HttpGet httppost = new HttpGet(<doubleQuotes46>http://www.urlOfThePageYouWantToRead.nl/text.txt<doubleQuotes46>);<newline46mondego>HttpResponse response = httpclient.execute(httppost);<newline46mondego>        HttpEntity ht = response.getEntity();<newline46mondego><newline46mondego>        BufferedHttpEntity buf = new BufferedHttpEntity(ht);<newline46mondego><newline46mondego>        InputStream is = buf.getContent();<newline46mondego><newline46mondego><newline46mondego>        BufferedReader r = new BufferedReader(new InputStreamReader(is));<newline46mondego><newline46mondego>        StringBuilder total = new StringBuilder();<newline46mondego>        String line;<newline46mondego>        while ((line = r.readLine()) != null) {<newline46mondego>            total.append(line + <doubleQuotes46>\n<doubleQuotes46>);<newline46mondego>        }<newline46mondego><newline46mondego>        TextView.setText(total);<newline46mondego>"
"8973splitHere46","9624408splitHere46","JTable"
"8974splitHere46","9624408splitHere46","prepareRenderer()"
"8975splitHere46","9624408splitHere46","GridLayout"
"8976splitHere46","9624408splitHere46","JLabel"
"8977splitHere46","9624408splitHere46","javax.swing.Timer"
"8978splitHere46","9624464splitHere46","Given players registered in the Data Warehouse and some combination of Loyalty1 and/or Loyalty2 :<newline46mondego>|first name|last name|city     |province|loyalty1 |loyalty2|<newline46mondego>|Pete      |Walter   |Winnipeg |<null>  |false    |true    |<newline46mondego>|Jon       |Dewit    |Winnipeg |MB      |true     |true    |<newline46mondego>|John      |Dewit    |<null>   |<null>  |true     |true    |<newline46mondego>|Peter     |Dewalt   |<null>   |<null>  |true     |false   |<newline46mondego><newline46mondego>When the first name is Jon and the last name is Dewit the results should be:<newline46mondego>|first name|last name|<newline46mondego>|Jon       |Dewit    |<newline46mondego><newline46mondego>And the first name is <null> and the last name is dewit the results should be:<newline46mondego>|first name|last name|<newline46mondego>|Jon       |Dewit    |<newline46mondego>|John      |Dewit    |<newline46mondego><newline46mondego>And the first name is <null> and the last name is de the results should be:<newline46mondego>|first name|last name|<newline46mondego>|Jon       |Dewit    |<newline46mondego>|John      |Dewit    |<newline46mondego>|Peter     |Dewalt   |<newline46mondego><newline46mondego>Then the system displays the correct results, using a case-insensitive <doubleQuotes46>begins with<doubleQuotes46> search<newline46mondego>"
"8979splitHere46","9624464splitHere46","@When"
"8980splitHere46","9624464splitHere46","<doubleQuotes46>the first name is $firstnamecriteria and the last name is $lastnamecriteria the results should be: $resultsTable<doubleQuotes46>"
"8981splitHere46","9624464splitHere46","@Then"
"8982splitHere46","9624471splitHere46","<ref local=<doubleQuotes46>bar<doubleQuotes46>/>"
"8983splitHere46","9624471splitHere46","bar"
"8984splitHere46","9624471splitHere46","<bean id=<doubleQuotes46>foo <doubleQuotes46>class=<doubleQuotes46>com.foo<doubleQuotes46>><newline46mondego>     <property name=<doubleQuotes46>bar<doubleQuotes46> ref=<doubleQuotes46>bar<doubleQuotes46>/><newline46mondego></bean><newline46mondego>"
"8985splitHere46","9624471splitHere46","<import resource=<doubleQuotes46>...<doubleQuotes46>>"
"8986splitHere46","9624471splitHere46","bar"
"8987splitHere46","9624503splitHere46","getTimeInMillis()"
"8988splitHere46","9624503splitHere46","Period"
"8989splitHere46","9624503splitHere46","import org.joda.time.*;<newline46mondego>import org.joda.time.format.*;<newline46mondego>import java.util.*;<newline46mondego><newline46mondego>public class Test {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        String text = <doubleQuotes46>05:00<doubleQuotes46>;<newline46mondego><newline46mondego>        PeriodFormatter formatter = new PeriodFormatterBuilder()<newline46mondego>            .minimumPrintedDigits(2)<newline46mondego>            .appendMinutes()<newline46mondego>            .appendSeparator(<doubleQuotes46>:<doubleQuotes46>)<newline46mondego>            .appendSeconds()<newline46mondego>            .toFormatter();<newline46mondego><newline46mondego>        Period milePeriod = formatter.parsePeriod(text);<newline46mondego><newline46mondego>        long mileMillis = milePeriod.toStandardDuration().getMillis();<newline46mondego>        long kmMillis = Math.round(mileMillis * 0.623712);<newline46mondego><newline46mondego>        PeriodType minutesSeconds = PeriodType.time()<newline46mondego>            .withMillisRemoved()<newline46mondego>            .withHoursRemoved();<newline46mondego><newline46mondego>        Period kmPeriod = new Period(kmMillis, minutesSeconds);<newline46mondego><newline46mondego>        System.out.println(formatter.print(kmPeriod)); // Prints 03:07<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8990splitHere46","9624610splitHere46","cmmd[0] = <doubleQuotes46>C:/cygwin/bin/bash.exe<doubleQuotes46>;<newline46mondego>cmmd[1] = <doubleQuotes46>-c<doubleQuotes46>;<newline46mondego>cmmd[2] = <doubleQuotes46>cd /cygdrive/c/Users/pro-services/Desktop/projects/github/cygwin && bash TEST.sh<doubleQuotes46>;<newline46mondego>"
"8991splitHere46","9624713splitHere46","<configuration><newline46mondego><newline46mondego>  <appender name=<doubleQuotes46>FILE<doubleQuotes46> class=<doubleQuotes46>ch.qos.logback.core.FileAppender<doubleQuotes46>><newline46mondego>    <file>testFile.log</file><newline46mondego>    <append>true</append><newline46mondego>    <!-- encoders are assigned the type<newline46mondego>         ch.qos.logback.classic.encoder.PatternLayoutEncoder by default --><newline46mondego>    <encoder><newline46mondego>      <pattern>%date{HH:mm:ss} - %msg%n</pattern><newline46mondego>    </encoder><newline46mondego>  </appender><newline46mondego><newline46mondego>  <root level=<doubleQuotes46>DEBUG<doubleQuotes46>><newline46mondego>    <appender-ref ref=<doubleQuotes46>FILE<doubleQuotes46> /><newline46mondego>  </root><newline46mondego></configuration><newline46mondego>"
"8992splitHere46","9624743splitHere46","String string = <doubleQuotes46>\u0041\u0042\u0043<doubleQuotes46>;<newline46mondego>"
"8993splitHere46","9624743splitHere46","String string = new String(new byte[] {(byte) 0x41, (byte) 0x42, (byte) 0x43});<newline46mondego>"
"8994splitHere46","9624905splitHere46","while(!exit){<newline46mondego>    switch(input){<newline46mondego>         case <doubleQuotes46>a<doubleQuotes46>: do something;break;<newline46mondego>         case <doubleQuotes46>d<doubleQuotes46>:...<newline46mondego>         ...<newline46mondego>         case <doubleQuotes46>e<doubleQuotes46>: exit = true;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8995splitHere46","9625000splitHere46","close()"
"8996splitHere46","9625000splitHere46","PreparedStatement"
"8997splitHere46","9625000splitHere46","close()"
"8998splitHere46","9625000splitHere46","Connection connection = dataSource.getConnection();<newline46mondego>try {<newline46mondego>    PreparedStatement statement = connection.prepareStatement();<newline46mondego>    try {<newline46mondego>        // Work with the statement<newline46mondego>    catch (SQLException e ) {<newline46mondego>        // Handle exceptions<newline46mondego>} catch (SQLException e {<newline46mondego>    // Handle exceptions<newline46mondego>    } finally {<newline46mondego>        statement.close();<newline46mondego>    }<newline46mondego>} finally {<newline46mondego>    connection.close();<newline46mondego>}<newline46mondego>"
"8999splitHere46","9625000splitHere46","@PostConstruct"
"9000splitHere46","9625034splitHere46","ServerSocket ss = ... //initialization of socket listening on port 1965<newline46mondego>ss.setReuseSocket(true);<newline46mondego>"
"9001splitHere46","9625074splitHere46","public class MyBoundedQueue implements Queue<ItemType><newline46mondego>"
"9002splitHere46","9625074splitHere46","offer(Object)"
"9003splitHere46","9625074splitHere46","public class MyBoundedQueue<T> implements Queue<T> {<newline46mondego>...<newline46mondego>"
"9004splitHere46","9625074splitHere46","ItemType"
"9005splitHere46","9625074splitHere46","T"
"9006splitHere46","9625100splitHere46","PrintGCApplicationConcurrentTime"
"9007splitHere46","9625100splitHere46","PrintSafepointStatistics"
"9008splitHere46","9625135splitHere46","start()"
"9009splitHere46","9625135splitHere46","new Thread()<newline46mondego>{<newline46mondego>    public void run() {<newline46mondego>        System.out.println(<doubleQuotes46>blah<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}.start();<newline46mondego>"
"9010splitHere46","9625135splitHere46","Thread t = new Thread() {<newline46mondego>    public void run() {<newline46mondego>        System.out.println(<doubleQuotes46>blah<doubleQuotes46>);<newline46mondego>    }<newline46mondego>};<newline46mondego>t.start();<newline46mondego>"
"9011splitHere46","9625152splitHere46","class WTF {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        final float a = 0.42890447f * 0.37233013f;<newline46mondego>        final float b = 0.2648958f * 0.05867535f;<newline46mondego>        final float c = 0.8928169f * 0.7546882f;<newline46mondego>        final float d = 0.0039135218f * 0.59395087f;<newline46mondego>        final float e = 0.9114683f * 0.33522367f;<newline46mondego><newline46mondego>        System.out.println(a + b + c + d + e);<newline46mondego>        System.out.println(a + b + c + e + d);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9012splitHere46","9625226splitHere46","manager"
"9013splitHere46","9625226splitHere46","worker"
"9014splitHere46","9625226splitHere46","synchronize"
"9015splitHere46","9625226splitHere46","manager"
"9016splitHere46","9625226splitHere46","Callable"
"9017splitHere46","9625226splitHere46","Executor"
"9018splitHere46","9625226splitHere46","Executor"
"9019splitHere46","9625226splitHere46","Executor"
"9020splitHere46","9625261splitHere46","public static void connect(String url) {<newline46mondego><newline46mondego>HttpClient httpclient = new DefaultHttpClient();<newline46mondego><newline46mondego>AsyncTask<String, Void, Void> connection = new AsyncTask<String, Void, Void>() {<newline46mondego><newline46mondego>@Override<newline46mondego>protected Void doInBackground(String... params) {<newline46mondego>// Prepare a request object<newline46mondego>HttpGet httpget = new HttpGet(params[0]);<newline46mondego><newline46mondego>// Execute the request<newline46mondego>HttpResponse response;<newline46mondego>try {<newline46mondego>    list.clear();<newline46mondego><newline46mondego>    response = httpclient.execute(httpget);<newline46mondego>    // Examine the response status<newline46mondego>    Log.i(<doubleQuotes46>Praeda<doubleQuotes46>, response.getStatusLine().toString());<newline46mondego><newline46mondego>    // Get hold of the response entity<newline46mondego>    HttpEntity entity = response.getEntity();<newline46mondego>    // If the response does not enclose an entity, there is no need<newline46mondego>    // to worry about connection release<newline46mondego><newline46mondego>    if (entity != null) {<newline46mondego><newline46mondego>        // A Simple JSON Response Read<newline46mondego>        InputStream instream = entity.getContent();<newline46mondego>        String result= convertStreamToString(instream);<newline46mondego><newline46mondego>    // A Simple JSONObject Creation<newline46mondego>    //JSONObject json= new JSONObject(result);<newline46mondego>    JSONArray jsonArray = new JSONArray(result);<newline46mondego><newline46mondego><newline46mondego>    // A Simple JSONObject Parsing<newline46mondego>    for (int i = 0; i < (jsonArray.length()); i++) {<newline46mondego>        JSONObject json_obj = jsonArray.getJSONObject(i);<newline46mondego>        ResponseHolder rh = new ResponseHolder(json_obj);<newline46mondego>        list.add(rh);<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>     instream.close();<newline46mondego>    }<newline46mondego>    }<newline46mondego>    } catch (ClientProtocolException e) {<newline46mondego>    // TODO Auto-generated catch block<newline46mondego>    e.printStackTrace();<newline46mondego>    } catch (IOException e) {<newline46mondego>    // TODO Auto-generated catch block<newline46mondego>    e.printStackTrace();<newline46mondego>} catch (JSONException e) {<newline46mondego>    // TODO Auto-generated catch block<newline46mondego>    e.printStackTrace();<newline46mondego>}<newline46mondego><newline46mondego>connection.execute(url);<newline46mondego>}<newline46mondego>"
"9021splitHere46","9625403splitHere46","new HashMap<Integer, Integer>() {{ put(1, 1); put(2, 2); }};<newline46mondego>"
"9022splitHere46","9625437splitHere46","Period"
"9023splitHere46","9625437splitHere46","Period"
"9024splitHere46","9625437splitHere46","Period.toDurationFrom"
"9025splitHere46","9625437splitHere46","Period.toDurationTo"
"9026splitHere46","9625437splitHere46","Duration"
"9027splitHere46","9625437splitHere46","toDurationFrom"
"9028splitHere46","9625469splitHere46","hbm2ddl"
"9029splitHere46","9625469splitHere46","update"
"9030splitHere46","9625469splitHere46","none"
"9031splitHere46","9625469splitHere46","create-drop"
"9032splitHere46","9625605splitHere46","final int start = 36*36*10 + (36*10) + 10;<newline46mondego>for (int i = start; i < 36*36*36; ++i) {<newline46mondego>    final String base36 = Integer.toString(i, 36);<newline46mondego>    final String padded = String.format(<doubleQuotes46>%3s<doubleQuotes46>, base36).replace(' ', '0');<newline46mondego>    System.out.println(padded);<newline46mondego>}<newline46mondego>"
"9033splitHere46","9625685splitHere46","<property name=<doubleQuotes46>ignoreResourceNotFound<doubleQuotes46> value=<doubleQuotes46>true<doubleQuotes46>/><newline46mondego>"
"9034splitHere46","9625745splitHere46","^[\p{Lu}\p{Nd}.]{0,50}$<newline46mondego>"
"9035splitHere46","9625745splitHere46","^"
"9036splitHere46","9625745splitHere46","$"
"9037splitHere46","9625751splitHere46","PATH"
"9038splitHere46","9625751splitHere46","my_parameter1"
"9039splitHere46","9625751splitHere46","set my_parameter1=<value>"
"9040splitHere46","9625751splitHere46","export my_parameter1=<value>"
"9041splitHere46","9625751splitHere46","String param = System.getProperty(<doubleQuotes46>my_parameter1<doubleQuotes46>);<newline46mondego>"
"9042splitHere46","9625751splitHere46","<configuration><newline46mondego>    <systemPropertyVariables><newline46mondego>        <my_property1>${my_property1}</my_property1><newline46mondego>    </systemPropertyVariables><newline46mondego></configuration><newline46mondego>"
"9043splitHere46","9625755splitHere46","public static synchronized String getPreferenceString(Context context, String key)<newline46mondego>    {<newline46mondego>        Cursor c = DatabaseHelper.getDatabase(context).query(TABLE_NAME, new String[] { <doubleQuotes46>Value<doubleQuotes46> }, <doubleQuotes46>Key=?<doubleQuotes46>,<newline46mondego>                new String[] { key }, null, null, null, null);<newline46mondego><newline46mondego>        if (c == null)<newline46mondego>             return <doubleQuotes46><doubleQuotes46>;<newline46mondego><newline46mondego>        try {    <newline46mondego>            return c.moveToFirst() ? c.getString(0) : <doubleQuotes46><doubleQuotes46>;<newline46mondego>        } finally {<newline46mondego>            c.close();<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"9044splitHere46","9625773splitHere46","String sql = <doubleQuotes46>INSERT into vacation VALUES<doubleQuotes46> + <doubleQuotes46>(?,?,?,?,?,?,?,?,?)<doubleQuotes46>;    <newline46mondego>"
"9045splitHere46","9625780splitHere46","install.packages(<doubleQuotes46>zipcode<doubleQuotes46>)"
"9046splitHere46","9625780splitHere46","data(zipcode)"
"9047splitHere46","9625780splitHere46","map"
"9048splitHere46","9625780splitHere46","sp"
"9049splitHere46","9625780splitHere46","## Preliminary<newline46mondego>library(maps)<newline46mondego>library(zipcode)<newline46mondego>library(sp)<newline46mondego>data(zipcode)<newline46mondego><newline46mondego>## Plot state map of USA<newline46mondego>map(<doubleQuotes46>state<doubleQuotes46>)<newline46mondego><newline46mondego>## Select locations for 100 random zip codes<newline46mondego>plotZip <- zipcode[sample(nrow(zipcode))[1:100], c(<doubleQuotes46>longitude<doubleQuotes46>, <doubleQuotes46>latitude<doubleQuotes46>)]<newline46mondego><newline46mondego>## Plot them<newline46mondego>plot(SpatialPoints(plotZip), pch=20, cex=0.75, add=TRUE, col=<doubleQuotes46>red<doubleQuotes46>)]<newline46mondego>"
"9050splitHere46","9625780splitHere46","zipcode"
"9051splitHere46","9625780splitHere46","plotZip"
"9052splitHere46","9625780splitHere46","plotZip <- subset(zipcode, <newline46mondego>   subset=(zip %in% c(90210, 90211)), <newline46mondego>   select=c(<doubleQuotes46>longitude<doubleQuotes46>, <doubleQuotes46>latitude<doubleQuotes46>))<newline46mondego>"
"9053splitHere46","9625832splitHere46","class SaveFile implements ActionListener {<newline46mondego>        private string completeName;<newline46mondego><newline46mondego>        public void uploadToDatabase(String compName){<newline46mondego>             //code...<newline46mondego>             this.completeName = compName;<newline46mondego>        }<newline46mondego><newline46mondego>        public void actionPerformed(ActionEvent e) {    <newline46mondego>            System.out.println(completeName);<newline46mondego>        }<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"9054splitHere46","9625918splitHere46","request.getRemoteAddr()"
"9055splitHere46","9625937splitHere46","numberWords = Integer.parseInt(inputFile.nextLine());<newline46mondego>"
"9056splitHere46","9625937splitHere46","numberWords = inputFile.nextInt();<newline46mondego>"
"9057splitHere46","9625943splitHere46","public abstract class SOSQuery<T> {"
"9058splitHere46","9625943splitHere46","private T queryParams;"
"9059splitHere46","9625943splitHere46","public T getQueryParams() {<newline46mondego>    return this.queryParams;<newline46mondego>}<newline46mondego>"
"9060splitHere46","9625943splitHere46","public class GetStatusQuery extends SOSquery<GetStatusParticularType> {<newline46mondego>"
"9061splitHere46","9625944splitHere46","textField txt[3];<newline46mondego>for(int i=0;i<3;i++)<newline46mondego>{<newline46mondego>    txt[i]=new textField();<newline46mondego>}<newline46mondego>"
"9062splitHere46","9625944splitHere46","double ans=0;<newline46mondego>for(int i=0;i<3;i++)<newline46mondego>{<newline46mondego>    ans+=double.parseDouble(txt[i].paramString());<newline46mondego>}<newline46mondego>"
"9063splitHere46","9625999splitHere46",".show()"
"9064splitHere46","9625999splitHere46","Toast.makeText(getApplicationContext(), R.string.wifion, Toast.LENGTH_LONG).show();<newline46mondego>"
"9065splitHere46","9626057splitHere46","setCookie"
"9066splitHere46","9626057splitHere46","AbstractRememberMeServices"
"9067splitHere46","9626057splitHere46","Cookie.setDomain"
"9068splitHere46","9626057splitHere46","setDomain(<doubleQuotes46>.foo.com<doubleQuotes46>)"
"9069splitHere46","9626057splitHere46","a.foo.com"
"9070splitHere46","9626057splitHere46","b.foo.com"
"9071splitHere46","9626101splitHere46","com.oreilly.servlet"
"9072splitHere46","9626160splitHere46","Line2D a = new Line2D.Double();<newline46mondego>Line2D b = new Line2D.Double();<newline46mondego>Line2D c = new Line2D.Double();<newline46mondego><newline46mondego>a.setLine(x1, y1, x2, y2);<newline46mondego>b.setLine(x2, y2, x3, y3);<newline46mondego>c.setLine(x3, y3, x1, y1);<newline46mondego><newline46mondego>double pntX = s.nextDouble();<newline46mondego>double pntY = s.nextDouble();<newline46mondego><newline46mondego>if (a.ptLineDist(pntX, pntY) == 0 || b.ptLineDist(pntX, pntY) == 0 || c.ptLineDist(pntX, pntY) == 0)<newline46mondego>    c++;<newline46mondego>"
"9073splitHere46","9626190splitHere46","Files.copy"
"9074splitHere46","9626190splitHere46","FileUtils"
"9075splitHere46","9626190splitHere46","C:\"
"9076splitHere46","9626353splitHere46","JPanel"
"9077splitHere46","9626353splitHere46","JButton"
"9078splitHere46","9626353splitHere46","JPanel"
"9079splitHere46","9626353splitHere46","JFrame"
"9080splitHere46","9626416splitHere46","String sqlStmt = <doubleQuotes46>insert into transaction values(?,to_date(?,'mm/dd/yyyy hh24:mi:ss'))<doubleQuotes46><newline46mondego>PreparedStatement pStmt = Conn.prepareStatement(sqlStmt);<newline46mondego>pStmt.setString(1, <doubleQuotes46>1<doubleQuotes46>);<newline46mondego>pStmt.setString(2, tdate+<doubleQuotes46> <doubleQuotes46>+current_time);<newline46mondego>pStmt.executeUpdate();<newline46mondego>"
"9081splitHere46","9626416splitHere46","setInt"
"9082splitHere46","9626416splitHere46","setDate"
"9083splitHere46","9626615splitHere46","SimpleLogger"
"9084splitHere46","9626615splitHere46","SimpleLogger"
"9085splitHere46","9626615splitHere46","slf4j-jdk14-x.x.x.jar"
"9086splitHere46","9626873splitHere46","JFrame"
"9087splitHere46","9626873splitHere46","JApplet"
"9088splitHere46","9626931splitHere46","<form action=<doubleQuotes46>/web/guest/home<doubleQuotes46> method=<doubleQuotes46>post<doubleQuotes46> name=<doubleQuotes46>loginadmin<doubleQuotes46>><newline46mondego>    <input name=<doubleQuotes46>p_p_id<doubleQuotes46> type=<doubleQuotes46>hidden<doubleQuotes46> value=<doubleQuotes46>58<doubleQuotes46>><newline46mondego>    <input name=<doubleQuotes46>p_p_lifecycle<doubleQuotes46> type=<doubleQuotes46>hidden<doubleQuotes46> value=<doubleQuotes46>1<doubleQuotes46>><newline46mondego>    <input name=<doubleQuotes46>p_p_mode<doubleQuotes46> type=<doubleQuotes46>hidden<doubleQuotes46> value=<doubleQuotes46>view<doubleQuotes46>><newline46mondego>    <input name=<doubleQuotes46>p_p_state<doubleQuotes46> type=<doubleQuotes46>hidden<doubleQuotes46> value=<doubleQuotes46>maximized<doubleQuotes46>><newline46mondego>    <input name=<doubleQuotes46>_58_struts_action<doubleQuotes46> type=<doubleQuotes46>hidden<doubleQuotes46> value=<doubleQuotes46>/login/login<doubleQuotes46>><newline46mondego>    <input name=<doubleQuotes46>_58_login<doubleQuotes46> type=<doubleQuotes46>hidden<doubleQuotes46> value=<doubleQuotes46>bruno@7cogs.com<doubleQuotes46>><newline46mondego>    <input name=<doubleQuotes46>_58_password<doubleQuotes46> type=<doubleQuotes46>hidden<doubleQuotes46> value=<doubleQuotes46>bruno<doubleQuotes46>><newline46mondego>    ...<newline46mondego>    <a class=<doubleQuotes46>express_login<doubleQuotes46> href=<doubleQuotes46>#<doubleQuotes46> onclick=<doubleQuotes46>document.loginadmin.submit();return false;<doubleQuotes46>>Login as Bruno.</a><newline46mondego>    ...<newline46mondego></form><newline46mondego>"
"9089splitHere46","9626931splitHere46","<form action=<doubleQuotes46>/en_GB/web/guest/home<doubleQuotes46> method=<doubleQuotes46>post<doubleQuotes46> name=<doubleQuotes46>loginadmin<doubleQuotes46>><newline46mondego>"
"9090splitHere46","9627020splitHere46","mongostat"
"9091splitHere46","9627020splitHere46","_id"
"9092splitHere46","9627020splitHere46","mongostat"
"9093splitHere46","9627020splitHere46","WriteConcern.Safe"
"9094splitHere46","9627020splitHere46","db.stats()"
"9095splitHere46","9627020splitHere46","<doubleQuotes46>storageSize<doubleQuotes46> : 610770944 // = 610,770,944<newline46mondego>"
"9096splitHere46","9627020splitHere46","<doubleQuotes46>something1<doubleQuotes46> : <doubleQuotes46>my class is cool !<doubleQuotes46>  => ~28 bytes<newline46mondego><doubleQuotes46>s1<doubleQuotes46>: <doubleQuotes46>my class is cool !<doubleQuotes46>           => ~20 bytes<newline46mondego>"
"9097splitHere46","9627072splitHere46","for each String name in names"
"9098splitHere46","9627165splitHere46","String, int"
"9099splitHere46","9627165splitHere46","int, String"
"9100splitHere46","9627294splitHere46","public static boolean isInPrivateRange(InetAddress address, String range)<newline46mondego>{<newline46mondego>    String ipAddress = address.getHostAddress();<newline46mondego>    return ipAddress.startsWith( range );<newline46mondego>}<newline46mondego>"
"9101splitHere46","9627294splitHere46","isInPrivateRange( address, <doubleQuotes46>192.168.<doubleQuotes46> );<newline46mondego>isInPrivateRange( address, <doubleQuotes46>172.16.<doubleQuotes46> );<newline46mondego>isInPrivateRange( address, <doubleQuotes46>127.0.<doubleQuotes46> );<newline46mondego>"
"9102splitHere46","9627294splitHere46","try<newline46mondego>{<newline46mondego>    InetAddress ipAddress = InetAddress.getByName( <doubleQuotes46>google.com<doubleQuotes46> );<newline46mondego>    String range = <doubleQuotes46>192.168<doubleQuotes46>;           <newline46mondego>    System.out.println(isInPrivateRange( ipAddress, range ));<newline46mondego>}<newline46mondego>catch ( UnknownHostException e )<newline46mondego>{<newline46mondego>    e.printStackTrace();<newline46mondego>}<newline46mondego>"
"9103splitHere46","9627304splitHere46","float"
"9104splitHere46","9627304splitHere46","double"
"9105splitHere46","9627304splitHere46","x"
"9106splitHere46","9627304splitHere46","String.format(<doubleQuotes46>%.2f<doubleQuotes46>, x)<newline46mondego>"
"9107splitHere46","9627304splitHere46","String"
"9108splitHere46","9627304splitHere46","String.format(<doubleQuotes46>%.2f<doubleQuotes46>, 12.34567)<newline46mondego>"
"9109splitHere46","9627304splitHere46","<doubleQuotes46>12.35<doubleQuotes46>"
"9110splitHere46","9627371splitHere46","c.addStudypath(dbStudypath);<newline46mondego>"
"9111splitHere46","9627375splitHere46","name"
"9112splitHere46","9627375splitHere46","Person"
"9113splitHere46","9627375splitHere46","GiveJob"
"9114splitHere46","9627375splitHere46","people[i] = new Person(/*args*/)"
"9115splitHere46","9627375splitHere46","null"
"9116splitHere46","9627375splitHere46","null"
"9117splitHere46","9627375splitHere46","jobs"
"9118splitHere46","9627548splitHere46","public interface IControlFactory <newline46mondego>{<newline46mondego>     IGreenBoxView CreateGreenBoxView();<newline46mondego>     IRedImageView CreateRedImageView();<newline46mondego>}<newline46mondego>"
"9119splitHere46","9627548splitHere46","Bind<IControlFactory>().ToFactory();<newline46mondego>"
"9120splitHere46","9627715splitHere46","Filter"
"9121splitHere46","9627715splitHere46","interface Filter {<newline46mondego>  boolean passesFilter(File file);<newline46mondego>}<newline46mondego><newline46mondego>class SuffixFilter implements Filter {<newline46mondego>  SuffixFilter(String suffix) { ... }<newline46mondego>  public boolean passesFilter(File file) {<newline46mondego>    // return true if file has the appropriate suffix<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>class ExecutableFilter implements Filter {<newline46mondego>  ...  // filter that returns true if the file is executable<newline46mondego>}<newline46mondego><newline46mondego>// now for the interesting part ...<newline46mondego>class NegationFilter implements Filter {<newline46mondego>  private final Filter subfilter;<newline46mondego>  NegationFilter(Filter subfilter) {<newline46mondego>    this.subfilter = subfilter;<newline46mondego>  }<newline46mondego><newline46mondego>  public boolean passesFilter(File file) {<newline46mondego>    return !subfilter.passesFilter(file);<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>class AndFilter implements Filter {<newline46mondego>  private final Collection<Filter> subfilters;<newline46mondego>  AndFilter(Collection<Filter> subfilters) {<newline46mondego>    this.subfilters = subfilters;<newline46mondego>  }<newline46mondego><newline46mondego>  public boolean passesFilter(File file) {<newline46mondego>    for (Filter subfilter : subfilters) {<newline46mondego>      if (!subfilter.passesFilter(file)) {<newline46mondego>        return false;<newline46mondego>      }<newline46mondego>    }<newline46mondego>    return true;<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>class OrFilter implements Filter {<newline46mondego>  private final Collection<Filter> subfilters;<newline46mondego>  OrFilter(Collection<Filter> subfilters) {<newline46mondego>    this.subfilters = subfilters;<newline46mondego>  }<newline46mondego><newline46mondego>  public boolean passesFilter(File file) {<newline46mondego>    for (Filter subfilter : subfilters) {<newline46mondego>      if (subfilter.passesFilter(file)) {<newline46mondego>        return true;<newline46mondego>      }<newline46mondego>    }<newline46mondego>    return false;<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"9122splitHere46","9627715splitHere46","OrFilter"
"9123splitHere46","9627715splitHere46","AndFilter"
"9124splitHere46","9627715splitHere46","Filter readAndFilter(Iterable<String> fileLines) {<newline46mondego>  List<Filter> subfilters = new ArrayList<Filter>();<newline46mondego>  for (String line : fileLines) {<newline46mondego>    subfilters.add(readOrFilter(line));<newline46mondego>  }<newline46mondego>  return new AndFilter(subfilters);<newline46mondego>}<newline46mondego><newline46mondego>Filter readOrFilter(String fileLine) {<newline46mondego>  List<Filter> subfilters = new ArrayList<Filter>();<newline46mondego>  for (String oneFilter : fileLine.split(<doubleQuotes46> <doubleQuotes46>)) {<newline46mondego>    Filter filter = buildOneFilter(oneFilter);<newline46mondego>    subfilters.add(filter);<newline46mondego>  }<newline46mondego>  return new OrFilter(subfilters);<newline46mondego>}<newline46mondego><newline46mondego>Filter buildOneFilter(String oneFilterClause) {<newline46mondego>  // parse as you were doing before<newline46mondego>}<newline46mondego>"
"9125splitHere46","9627715splitHere46","readAndFilter"
"9126splitHere46","9627715splitHere46","Filter"
"9127splitHere46","9627715splitHere46","readAndFilter"
"9128splitHere46","9627715splitHere46","readOrFilter"
"9129splitHere46","9627715splitHere46","And"
"9130splitHere46","9627715splitHere46","Or"
"9131splitHere46","9627848splitHere46","Map"
"9132splitHere46","9627848splitHere46","ServerContext"
"9133splitHere46","9627989splitHere46","initialCapacity"
"9134splitHere46","9627989splitHere46","public void add(int i,Double d)<newline46mondego>{<newline46mondego>  adj.put(new Node(i),d);<newline46mondego>} <newline46mondego>"
"9135splitHere46","9627989splitHere46","compareTo"
"9136splitHere46","9628400splitHere46","Employee [] employeeArray = new Employee[3];"
"9137splitHere46","9628400splitHere46","employeeArray[0].getEmployeeDetails()"
"9138splitHere46","9628400splitHere46","ArrayList"
"9139splitHere46","9628400splitHere46","ArrayList<Employee> employees = new ArrayList<Employee>();<newline46mondego>employees.add(new SalariedEmployee(...));<newline46mondego>employees.add(new CommissionnedEmployee(...));<newline46mondego>...<newline46mondego>"
"9140splitHere46","9628400splitHere46","toString()"
"9141splitHere46","9628400splitHere46","toString()"
"9142splitHere46","9628400splitHere46","toString()"
"9143splitHere46","9628400splitHere46","Object"
"9144splitHere46","9628400splitHere46","public String toString() {<newline46mondego>    return this.name + <doubleQuotes46> <doubleQuotes46> + this.firstName ...;<newline46mondego>}<newline46mondego>"
"9145splitHere46","9628410splitHere46","Window > Preferences > Java > Editor > Syntax Coloring<newline46mondego>"
"9146splitHere46","9628458splitHere46","countFiles"
"9147splitHere46","9628458splitHere46","private int getTotalFiles(String path) {<newline46mondego>    //...<newline46mondego>    if (f.isFile()) {<newline46mondego>        countFiles++;<newline46mondego>    }<newline46mondego>    if (f.isDirectory()) {<newline46mondego>        countFiles += getTotalFiles(path);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9148splitHere46","9628536splitHere46","PropertyDB()"
"9149splitHere46","9628536splitHere46","PropertyDB()"
"9150splitHere46","9628536splitHere46","public FarmedLand(int newHectares, int newListPrice, String newCorn)"
"9151splitHere46","9628536splitHere46","super()"
"9152splitHere46","9628536splitHere46","public class A { }<newline46mondego>"
"9153splitHere46","9628536splitHere46","A a = new A()"
"9154splitHere46","9628536splitHere46","public A() { }"
"9155splitHere46","9628536splitHere46","public class A {<newline46mondego>    public A(int z) { /* do nothing*/ }<newline46mondego>}<newline46mondego>"
"9156splitHere46","9628536splitHere46","A a = new A()"
"9157splitHere46","9628536splitHere46","public A(int z)"
"9158splitHere46","9628536splitHere46","public FarmedLand(int newHectares, int newListPrice, String newCorn)"
"9159splitHere46","9628536splitHere46","super();"
"9160splitHere46","9628536splitHere46","public PropertyDB(int, String, ...)"
"9161splitHere46","9628596splitHere46","type"
"9162splitHere46","9628596splitHere46","categories"
"9163splitHere46","9628596splitHere46","Map<String, List<Post>> map = new HashMap<String, List<Post>>();<newline46mondego>// the categories variable here is the unique types from the Post table<newline46mondego>for (String category : categories) {<newline46mondego>    List<Post> posts = Post.find(<doubleQuotes46>type = ?<doubleQuotes46>, category).fetch();<newline46mondego>    map.put(category, posts);<newline46mondego>}<newline46mondego>render(map);<newline46mondego>"
"9164splitHere46","9628596splitHere46","@Entity<newline46mondego>public class Category extends Model {<newline46mondego><newline46mondego>    @OneToMany(mappedBy = <doubleQuotes46>category<doubleQuotes46>, targetEntity = Post.class)<newline46mondego>    public List<Post> posts;<newline46mondego><newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"9165splitHere46","9628596splitHere46","@Entity<newline46mondego>public class Post extends Model {<newline46mondego><newline46mondego>    @ManyToOne<newline46mondego>    @JoinColumn(name = <doubleQuotes46>category_id<doubleQuotes46>)<newline46mondego>    public Category category;<newline46mondego><newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"9166splitHere46","9628596splitHere46","public class Post extends Model {<newline46mondego><newline46mondego>    @Enumerated(EnumType.STRING)<newline46mondego>    public Category category;<newline46mondego><newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"9167splitHere46","9628596splitHere46","public enum Category {<newline46mondego>    HEALTH,<newline46mondego>    ENTERTAINMENT,<newline46mondego>    POLITICS<newline46mondego>}<newline46mondego>"
"9168splitHere46","9628614splitHere46","OnClickListener"
"9169splitHere46","9628820splitHere46","<!-- FOR COMPATIBILITY WITH EXTERNAL APPLICATIONS<newline46mondego>This constant allows actions with the suffixes of <doubleQuotes46><doubleQuotes46>, <doubleQuotes46>.action<doubleQuotes46>, or <doubleQuotes46>.do<doubleQuotes46>.  This allows the creation of actions ending in .do, to allow external applications<newline46mondego>that may be looking for .do actions to still use this app without any changes. --><newline46mondego><constant name=<doubleQuotes46>struts.action.extension<doubleQuotes46> value=<doubleQuotes46>,action,do<doubleQuotes46> /><newline46mondego>"
"9170splitHere46","9628831splitHere46","DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();<newline46mondego>dbf.setNamespaceAware(true);    <newline46mondego>DocumentBuilder bob = dbf.newDocumentBuilder(); <newline46mondego>"
"9171splitHere46","9629352splitHere46","ArrayIndexOutOfBoundsException"
"9172splitHere46","9629352splitHere46","while(line != null)<newline46mondego>{<newline46mondego>    String[] columns = line.split(FIELD_SEP);<newline46mondego>    String name = columns[0];<newline46mondego>    String emailAddress = columns[1];<newline46mondego>    String phoneNumber = columns[2];<newline46mondego><newline46mondego>    entriesString += padWithSpaces(name, COL_WIDTH) +<newline46mondego>                       padWithSpaces(emailAddress, COL_WIDTH) +<newline46mondego>                       padWithSpaces(phoneNumber, COL_WIDTH) +<newline46mondego>                       <doubleQuotes46>\n<doubleQuotes46>;<newline46mondego><newline46mondego>    line = in.readLine();<newline46mondego>}<newline46mondego>"
"9173splitHere46","9629352splitHere46","while(line != null)<newline46mondego>{<newline46mondego>    String[] columns = line.split(FIELD_SEP);<newline46mondego>    if (columns.length > 2)<newline46mondego>    {<newline46mondego>        String name = columns[0];<newline46mondego>        String emailAddress = columns[1];<newline46mondego>        String phoneNumber = columns[2];<newline46mondego><newline46mondego>        entriesString += padWithSpaces(name, COL_WIDTH) +<newline46mondego>                           padWithSpaces(emailAddress, COL_WIDTH) +<newline46mondego>                           padWithSpaces(phoneNumber, COL_WIDTH) +<newline46mondego>                           <doubleQuotes46>\n<doubleQuotes46>;<newline46mondego>    }<newline46mondego>    line = in.readLine();<newline46mondego>}<newline46mondego>"
"9174splitHere46","9629452splitHere46","<%<newline46mondego>for(int i = 0; i < array.length; i++)<newline46mondego>{<newline46mondego>%><newline46mondego><input type=<doubleQuotes46>checkbox<doubleQuotes46> name=<doubleQuotes46><%= array[i]%><doubleQuotes46>><newline46mondego><br/><newline46mondego><%<newline46mondego>}<newline46mondego>%><newline46mondego>"
"9175splitHere46","9629461splitHere46","rset = ((OracleCallableStatement)cs).getCursor(5);<newline46mondego>"
"9176splitHere46","9629461splitHere46","rset = (ResultSet) cs.getObject(5);<newline46mondego>"
"9177splitHere46","9629480splitHere46","String formula = <doubleQuotes46>Ab((3.0)*(2.5))<doubleQuotes46>;<newline46mondego>StringBuilder builder = new StringBuilder();<newline46mondego>for (int i = 0; i < formula.length(); i++){<newline46mondego>    char c = formula.charAt(i);<newline46mondego>    if(Character.isLetter(c)) {<newline46mondego>        builder.append(<doubleQuotes46> <doubleQuotes46>+c+<doubleQuotes46> <doubleQuotes46>);<newline46mondego>    } else {<newline46mondego>        builder.append(c);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9178splitHere46","9629640splitHere46","Runtime.getRuntime().exec(String)"
"9179splitHere46","9629640splitHere46",".jar"
"9180splitHere46","9629640splitHere46","Runtime.getRuntime().exec(<doubleQuotes46>java -jar <doubleQuotes46> + absolutePath)"
"9181splitHere46","9629640splitHere46","java"
"9182splitHere46","9629640splitHere46","exec(String)"
"9183splitHere46","9629678splitHere46","@Override<newline46mondego>    protected void onPreExecute() {<newline46mondego>        super.onPreExecute();<newline46mondego>        mProgD = ProgressDialog.show(mContext, <doubleQuotes46><doubleQuotes46>, <doubleQuotes46>Wait<doubleQuotes46>, true);<newline46mondego>        ih = new InsertHelper(mDatabase, <doubleQuotes46>dictionary<doubleQuotes46>);<newline46mondego>        wordColumn = ih.getColumnIndex(<doubleQuotes46>word<doubleQuotes46>);<newline46mondego>    }<newline46mondego>"
"9184splitHere46","9629785splitHere46","zipdecoder"
"9185splitHere46","9629785splitHere46","int[][] zipdecoder = new int[][]{<newline46mondego>"
"9186splitHere46","9629785splitHere46","zipdecoder = new int[][]{<newline46mondego>"
"9187splitHere46","9629822splitHere46","Calendar c = new GregorianCalendar();<newline46mondego>    c.set(Calendar.HOUR_OF_DAY, 0); //anything 0 - 23<newline46mondego>    c.set(Calendar.MINUTE, 0);<newline46mondego>    c.set(Calendar.SECOND, 0);<newline46mondego>    Date d1 = c.getTime(); //the midnight, that's the first second of the day.<newline46mondego>"
"9188splitHere46","9629892splitHere46","BufferedImage"
"9189splitHere46","9629892splitHere46","CellTest"
"9190splitHere46","9629892splitHere46","import java.awt.BorderLayout;<newline46mondego>import java.awt.Color;<newline46mondego>import java.awt.Dimension;<newline46mondego>import java.awt.Graphics;<newline46mondego>import java.awt.Graphics2D;<newline46mondego>import java.awt.RenderingHints;<newline46mondego>import java.awt.event.MouseAdapter;<newline46mondego>import java.awt.event.MouseEvent;<newline46mondego>import java.util.Random;<newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JLayeredPane;<newline46mondego>import javax.swing.JPanel;<newline46mondego>import javax.swing.SwingUtilities;<newline46mondego><newline46mondego>/** @see http://stackoverflow.com/q/9625495/230513 */<newline46mondego>public class LayerDemo extends JFrame {<newline46mondego><newline46mondego>    private static final Dimension d = new Dimension(320, 240);<newline46mondego><newline46mondego>    public LayerDemo() {<newline46mondego>        JLayeredPane layers = new JLayeredPane();<newline46mondego>        layers.setPreferredSize(d);<newline46mondego><newline46mondego>        layers.add(new LayerPanel(1 * d.height / 8), 100);<newline46mondego>        layers.add(new LayerPanel(2 * d.height / 8), 101);<newline46mondego>        layers.add(new LayerPanel(3 * d.height / 8), 102);<newline46mondego><newline46mondego>        this.add(layers, BorderLayout.CENTER);<newline46mondego>        this.setDefaultCloseOperation(EXIT_ON_CLOSE);<newline46mondego>        this.pack();<newline46mondego>        this.setLocationByPlatform(true);<newline46mondego>    }<newline46mondego><newline46mondego>    private static class LayerPanel extends JPanel {<newline46mondego><newline46mondego>        private static final Random r = new Random();<newline46mondego>        private int n;<newline46mondego>        private Color color = new Color(r.nextInt());<newline46mondego><newline46mondego>        public LayerPanel(int n) {<newline46mondego>            this.n = n;<newline46mondego>            this.setOpaque(false);<newline46mondego>            this.setBounds(n, n, d.width / 2, d.height / 2);<newline46mondego>            this.addMouseListener(new MouseHandler(this));<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void paintComponent(Graphics g) {<newline46mondego>            super.paintComponent(g);<newline46mondego>            Graphics2D g2d = (Graphics2D) g;<newline46mondego>            g2d.setRenderingHint(<newline46mondego>                RenderingHints.KEY_ANTIALIASING,<newline46mondego>                RenderingHints.VALUE_ANTIALIAS_ON);<newline46mondego>            g2d.setColor(color);<newline46mondego>            g2d.fillRoundRect(0, 0, getWidth(), getHeight(), 16, 16);<newline46mondego>            g2d.setColor(Color.black);<newline46mondego>            g2d.drawString(String.valueOf(n), 5, getHeight() - 5);<newline46mondego>        }<newline46mondego><newline46mondego>        private void update() {<newline46mondego>            color = new Color(r.nextInt());<newline46mondego>            repaint();<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    private static class MouseHandler extends MouseAdapter {<newline46mondego><newline46mondego>        LayerPanel panel;<newline46mondego><newline46mondego>        MouseHandler(LayerPanel panel) {<newline46mondego>            this.panel = panel;<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void mouseClicked(MouseEvent e) {<newline46mondego>            panel.update();<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        SwingUtilities.invokeLater(new Runnable() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                (new LayerDemo()).setVisible(true);<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9191splitHere46","9630042splitHere46","Worker"
"9192splitHere46","9630042splitHere46","Boss"
"9193splitHere46","9630042splitHere46","public class Worker extends Boss implements YourInterface<newline46mondego> {<newline46mondego>  ...<newline46mondego> }<newline46mondego><newline46mondego> interface YourInterface<newline46mondego> {<newline46mondego>       public void type();<newline46mondego> }<newline46mondego>"
"9194splitHere46","9630078splitHere46","hostname=localhost:3306/mydb<newline46mondego>username=root<newline46mondego>password=pass<newline46mondego>"
"9195splitHere46","9630078splitHere46","Properties"
"9196splitHere46","9630078splitHere46","Properties prop = new Properties();<newline46mondego>prop.load(new FileInputStream(<doubleQuotes46>config.properties<doubleQuotes46>));<newline46mondego>String connectionString = prop.getProperty(<doubleQuotes46>hostname<doubleQuotes46>)<newline46mondego>String username = prop.getProperty(<doubleQuotes46>username<doubleQuotes46>)<newline46mondego>String password = prop.getProperty(<doubleQuotes46>password<doubleQuotes46>)<newline46mondego>"
"9197splitHere46","9630079splitHere46","powerOfTen    = Math.pow(10,decimalPlaces);<newline46mondego>numberToRound = (double)Math.round(numberToRound * powerOfTen) / powerOfTen;<newline46mondego>"
"9198splitHere46","9630079splitHere46","System.out.printf"
"9199splitHere46","9630147splitHere46","String line;<newline46mondego>while(((line = reader.readLine()) != null) && !(<doubleQuotes46><doubleQuotes46>.equals(line)))  {<newline46mondego>  System.out.println(<doubleQuotes46>line: <doubleQuotes46>+line);<newline46mondego>}<newline46mondego>"
"9200splitHere46","9630204splitHere46","aClass.cast(Integer.parseInt((String) anObj));<newline46mondego>anotherClass.cast(Double.parseDouble((String) anotherObject));<newline46mondego>"
"9201splitHere46","9630217splitHere46","LinkedList<T>"
"9202splitHere46","9630217splitHere46","List<Card>"
"9203splitHere46","9630217splitHere46","List<Player> players = new ArrayList<Player>();<newline46mondego>LinkedList<Card> deck = createDeck(); // This should shuffle too<newline46mondego>for (int i = 0; i < playerCount; i++) {<newline46mondego>    Player player = new Player();<newline46mondego>    players.add(player);<newline46mondego>    for (int j = 0; j < 7; j++) {<newline46mondego>        player.addCard(deck.removeLast());<newline46mondego>    }<newline46mondego>}<newline46mondego>LinkedList<Card> discards = new LinkedList<Card>();<newline46mondego>"
"9204splitHere46","9630331splitHere46","<jsp:useBean id=<doubleQuotes46>emp<doubleQuotes46> class=<doubleQuotes46>javaBeanJSPSample.test<doubleQuotes46>/>  <newline46mondego>    <table>  <newline46mondego>     <tr>  <newline46mondego>        <%  <newline46mondego>            while (rs.next()) {  <newline46mondego>        %>  <newline46mondego>            <TD><%=rs.getString(1)%></TD>  <newline46mondego>            <TD><%=rs.getString(2)%></TD>  <newline46mondego>        <%   }    %>   <newline46mondego>     </tr>  <newline46mondego>    </table>  <newline46mondego><% emp.closeDBConnection(); %> <newline46mondego>"
"9205splitHere46","9630331splitHere46","<%@ page language=<doubleQuotes46>java<doubleQuotes46> contentType=<doubleQuotes46>text/html<doubleQuotes46> import=<doubleQuotes46>java.sql.*<doubleQuotes46>%><newline46mondego><newline46mondego><%<newline46mondego>Connection conn;<newline46mondego>ResultSet resultSet;<newline46mondego>try {<newline46mondego>    // Load the Oracle JDBC driver<newline46mondego>    Class.forName(<doubleQuotes46>oracle.jdbc.driver.OracleDriver<doubleQuotes46>);<newline46mondego>}<newline46mondego>catch(ClassNotFoundException e) {<newline46mondego>    System.out.println(<doubleQuotes46>Driver not found.<doubleQuotes46>);<newline46mondego>    System.out.println(e.toString());<newline46mondego>    throw new UnavailableException(this, <doubleQuotes46>Class not found.<doubleQuotes46>);<newline46mondego>}<newline46mondego>try {<newline46mondego>    // Connect to the Database<newline46mondego>    conn = DriverManager.getConnection(<doubleQuotes46>jdbc:oracle:thin:@dbhost:1521:ORA1<doubleQuotes46>, <doubleQuotes46>scott<doubleQuotes46>, <doubleQuotes46>tiger<doubleQuotes46>);<newline46mondego><newline46mondego>    Statement statement = conn.createStatement();<newline46mondego>    resultSet = statement.executeQuery(<doubleQuotes46>SELECT * FROM emp order by ename<doubleQuotes46>);<newline46mondego>}<newline46mondego>catch(SQLException e) {<newline46mondego>    System.out.println(<doubleQuotes46>An error occurs.<doubleQuotes46>);<newline46mondego>    System.out.println(e.toString());<newline46mondego>    throw new UnavailableException(this, <doubleQuotes46>Cannot connect with the specified database.<doubleQuotes46>);<newline46mondego>}<newline46mondego>%><newline46mondego>"
"9206splitHere46","9630431splitHere46","Set"
"9207splitHere46","9630431splitHere46","HashSet"
"9208splitHere46","9630431splitHere46","HashSet"
"9209splitHere46","9630431splitHere46","HashSet"
"9210splitHere46","9630431splitHere46","HashSet"
"9211splitHere46","9630431splitHere46","Set"
"9212splitHere46","9630431splitHere46","neighboringCoordinates()"
"9213splitHere46","9630431splitHere46","Set"
"9214splitHere46","9630431splitHere46","return Collections.synchronizedSet(neighbors);<newline46mondego>"
"9215splitHere46","9630431splitHere46","Set"
"9216splitHere46","9630431splitHere46","synchronizedSet()"
"9217splitHere46","9630431splitHere46","HashSet"
"9218splitHere46","9630431splitHere46","Set"
"9219splitHere46","9630431splitHere46","liveCellCoordinates"
"9220splitHere46","9630431splitHere46","Set"
"9221splitHere46","9630431splitHere46","Set<Coordinates> neighbors = new HashSet<Coordinates>();<newline46mondego>"
"9222splitHere46","9630466splitHere46","//oracle.sql.ARRAY we will use as out parameter from the package<newline46mondego>//and will store pl/sql table<newline46mondego>ARRAY message_display = null; <newline46mondego><newline46mondego>//ArrayList to store object of type struct <newline46mondego>ArrayList arow= new ArrayList();<newline46mondego><newline46mondego>//StructDescriptor >> use to describe pl/sql object<newline46mondego>//type in java.<newline46mondego>StructDescriptor voRowStruct = null; <newline46mondego><newline46mondego>//ArrayDescriptor >> Use to describe pl/sql table<newline46mondego>//as Array of objects in java<newline46mondego>ArrayDescriptor arrydesc = null;<newline46mondego><newline46mondego>//Input array to pl/sql procedure<newline46mondego>ARRAY p_message_list = null;<newline46mondego><newline46mondego>//Oracle callable statement used to execute procedure<newline46mondego>OracleCallableStatement cStmt=null;<newline46mondego><newline46mondego>try<newline46mondego>{<newline46mondego>//initializing object types in java.<newline46mondego>voRowStruct = StructDescriptor.createDescriptor(<doubleQuotes46>RECTYPE<doubleQuotes46>,conn); <newline46mondego>arrydesc = ArrayDescriptor.createDescriptor(<doubleQuotes46>RECTAB<doubleQuotes46>,conn);<newline46mondego>}<newline46mondego><newline46mondego>catch (Exception e)<newline46mondego>{<newline46mondego>throw OAException.wrapperException(e);<newline46mondego>}<newline46mondego><newline46mondego>for(XXVORowImpl row = (XXVORowImpl)XXVO.first(); <newline46mondego>row!=null;<newline46mondego>row = (XXVORowImpl)XXVO.next())<newline46mondego>{<newline46mondego>//We have made this method to create struct arraylist<newline46mondego>// from which we will make ARRAY<newline46mondego>//the reason being in java ARRAY length cannot be dynamic<newline46mondego>//see the method defination below.<newline46mondego>populateObjectArraylist(row,voRowStruct,arow); <newline46mondego>}<newline46mondego><newline46mondego>//make array from arraylist<newline46mondego>STRUCT [] obRows= new STRUCT[arow.size()];<newline46mondego>for(int i=0;i < arow.size();i++)<newline46mondego>{<newline46mondego>obRows[i]=(STRUCT)arow.get(i);<newline46mondego>}<newline46mondego><newline46mondego>try <newline46mondego>{<newline46mondego>p_message_list = new ARRAY(arrydesc,conn,obRows); <newline46mondego>}<newline46mondego>catch (Exception e)<newline46mondego>{<newline46mondego>throw OAException.wrapperException(e);<newline46mondego>}<newline46mondego><newline46mondego>//jdbc code to execute pl/sql procedure <newline46mondego>try<newline46mondego>{<newline46mondego>cStmt<newline46mondego>=(OracleCallableStatement)conn.prepareCall(<doubleQuotes46>{CALL ioStructArray.testproc(:1,:2)}<doubleQuotes46>); <newline46mondego>cStmt.setArray(1,p_message_list);<newline46mondego>cStmt.registerOutParameter(2,OracleTypes.ARRAY,<doubleQuotes46>RECTAB<doubleQuotes46>); <newline46mondego>cStmt.execute();<newline46mondego><newline46mondego>//getting Array back<newline46mondego>message_display = cStmt.getARRAY(2);<newline46mondego>//Getting sql data types in oracle.sql.datum array<newline46mondego>//which will typecast the object types<newline46mondego>Datum[] arrMessage = message_display.getOracleArray();<newline46mondego><newline46mondego>//getting data and printing it<newline46mondego>for (int i = 0; i < arrMessage.length; i++)<newline46mondego>{ <newline46mondego>oracle.sql.STRUCT os = (oracle.sql.STRUCT)arrMessage[i];<newline46mondego>Object[] a = os.getAttributes(); <newline46mondego>System.out.println(<doubleQuotes46>a [0 ] >>attribute1=<doubleQuotes46> + a[0]); <newline46mondego>System.out.println(<doubleQuotes46>a [1 ] >>attribute2=<doubleQuotes46> + a[1]);<newline46mondego>System.out.println(<doubleQuotes46>a [2 ] >>attribute3=<doubleQuotes46> + a[2]);<newline46mondego>"
"9223splitHere46","9630581splitHere46","StringBuilder"
"9224splitHere46","9630581splitHere46","EqualsBuilder"
"9225splitHere46","9630581splitHere46","HashCodeBuilder"
"9226splitHere46","9630581splitHere46","public class SearchBuilder {<newline46mondego>  private URI baseUri;<newline46mondego>  private List<NameValuePair> parameters;<newline46mondego><newline46mondego>  public SearchBuilder (URI baseUri) {<newline46mondego>    this.baseUri= baseUri;<newline46mondego>    this.parameters = new ArrayList<NameValuePair>();<newline46mondego>  }<newline46mondego><newline46mondego>  public void addSearchParam1(String val) { <newline46mondego>    if(!StringUtils.isBlank(val)) {<newline46mondego>      parameters.add(new BasicNameValuePair(<doubleQuotes46>SearchParam1<doubleQuotes46>, val));<newline46mondego>    }<newline46mondego>  }<newline46mondego><newline46mondego>  //Form the query url<newline46mondego>  public URI toURI(){<newline46mondego>    URI uri = URIUtils.createURI(baseUri.getScheme(), baseUri.getHost(), baseUri.getPort(), baseUri.getPath(), URLEncodedUtils.format(parameters, <doubleQuotes46>UTF-8<doubleQuotes46>), null);<newline46mondego>    return uri;<newline46mondego>  }<newline46mondego>"
"9227splitHere46","9630652splitHere46","int"
"9228splitHere46","9630652splitHere46","int"
"9229splitHere46","9630652splitHere46","int[]"
"9230splitHere46","9630652splitHere46","public static int[] quickSort( int A[], int p, int r)<newline46mondego>"
"9231splitHere46","9630652splitHere46","quicksort"
"9232splitHere46","9630652splitHere46","StackOverflowException"
"9233splitHere46","9630719splitHere46","<h:selectOneMenu value=<doubleQuotes46>#{customer.recordsDisplayed}<doubleQuotes46>><newline46mondego>  <f:selectItems value=<doubleQuotes46>#{customer.rppValues}<doubleQuotes46> /><newline46mondego>  <f:ajax action=<doubleQuotes46>#{customer.onRecordsPerPageChange}<doubleQuotes46> <newline46mondego>          execute=<doubleQuotes46>idsToBeProcessed<doubleQuotes46><newline46mondego>          render=<doubleQuotes46>idsToBeRendered<doubleQuotes46>/><newline46mondego></h:selectOneMenu><newline46mondego>"
"9234splitHere46","9630719splitHere46","public void onRecordsPerPageChange(AjaxBehaviorEvent event) {<newline46mondego> ...<newline46mondego>}<newline46mondego>"
"9235splitHere46","9630719splitHere46","execute"
"9236splitHere46","9630719splitHere46","render"
"9237splitHere46","9630719splitHere46","@form"
"9238splitHere46","9630723splitHere46","MyLogger.getLogger(TestClass.class)<newline46mondego>"
"9239splitHere46","9630723splitHere46","static"
"9240splitHere46","9630723splitHere46","Logger"
"9241splitHere46","9630723splitHere46","MyLogger"
"9242splitHere46","9630723splitHere46","Logger"
"9243splitHere46","9630723splitHere46","public class MyLogger extends Logger {<newline46mondego>    final Logger target;<newline46mondego>    protected MyLogger(Logger target) {<newline46mondego>        this.target = target;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void error(Object message) {<newline46mondego>        target.error(message);<newline46mondego>    }<newline46mondego><newline46mondego>    //...<newline46mondego><newline46mondego>}<newline46mondego>"
"9244splitHere46","9630723splitHere46","MyLogger"
"9245splitHere46","9630723splitHere46","private static final Logger logger = <newline46mondego>  new MyLogger(Logger.getLogger(TestClass.class));<newline46mondego>"
"9246splitHere46","9630748splitHere46","DialogInterface.OnClickListener"
"9247splitHere46","9630796splitHere46","GUI"
"9248splitHere46","9630796splitHere46","ServerLoginGUI"
"9249splitHere46","9630796splitHere46","GUi"
"9250splitHere46","9630796splitHere46","ServerLoginGUI"
"9251splitHere46","9630796splitHere46","public ServerLoginGUI(GUI gui)<newline46mondego>{<newline46mondego>  this.GUi = gui;<newline46mondego>}<newline46mondego>"
"9252splitHere46","9630877splitHere46","SwingUtilities#updateComponentTreeUI(JFrame / JDialog / JWindow)<newline46mondego>"
"9253splitHere46","9630897splitHere46","private void generateTone() {<newline46mondego>    int len = (int)Math.ceil((2 * SAMPLE_RATE * msecs / 1000.0d));<newline46mondego>    if (len % 2 == 1)<newline46mondego>        len = len + 1;<newline46mondego>    buf = new byte[len];<newline46mondego>    int fadeCount = 1600;<newline46mondego>    for (int i = 0; i < buf.length /2; i++) {<newline46mondego>        double fadeRate = 1.0;<newline46mondego>        double angle = (i * hz / SAMPLE_RATE) * 2.0 * Math.PI;<newline46mondego>        if (i<fadeCount) {<newline46mondego>            fadeRate = (double)i/(double)fadeCount;<newline46mondego>        } else if (i>(buf.length/2)-fadeCount) {<newline46mondego>            int bufLength = buf.length;<newline46mondego>            int buf = bufLength/2;<newline46mondego>            int countDown = buf-i;<newline46mondego>            fadeRate = (double)countDown/(double)(fadeCount);<newline46mondego>        }<newline46mondego>        buf[2*i + 1] = buf[2*i] = (byte) Math.round(<newline46mondego>            Math.cos(angle) * 127.0 * vol * fadeRate);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9254splitHere46","9630924splitHere46","row = index / 4 + 1;<newline46mondego>column = (index % 4) + 1;<newline46mondego>"
"9255splitHere46","9630924splitHere46","column < 5"
"9256splitHere46","9631082splitHere46","spin1"
"9257splitHere46","9631082splitHere46","spin2"
"9258splitHere46","9631082splitHere46",".getSelected()"
"9259splitHere46","9631116splitHere46","javax.swing.Timer"
"9260splitHere46","9631116splitHere46","Thread.sleep(...)"
"9261splitHere46","9631116splitHere46","path"
"9262splitHere46","9631116splitHere46","import java.awt.*;<newline46mondego>import java.awt.event.*;<newline46mondego>import javax.swing.*;<newline46mondego><newline46mondego>public class SlideShow extends JPanel<newline46mondego>{<newline46mondego>    private int i = 0;<newline46mondego>    private Timer timer;<newline46mondego>    private JLabel images = new JLabel();<newline46mondego>    private Icon bg = UIManager.getIcon(<doubleQuotes46>OptionPane.warningIcon<doubleQuotes46>);<newline46mondego>    private Icon red = UIManager.getIcon(<doubleQuotes46>OptionPane.errorIcon<doubleQuotes46>);<newline46mondego>    private Icon blue =  UIManager.getIcon(<doubleQuotes46>OptionPane.informationIcon<doubleQuotes46>);<newline46mondego>    private ImageIcon pictures1, pictures2, pictures3, pictures4;<newline46mondego>    private ActionListener action = new ActionListener()<newline46mondego>    {<newline46mondego>        public void actionPerformed(ActionEvent ae)<newline46mondego>        {           <newline46mondego><newline46mondego>            boolean go = true;<newline46mondego><newline46mondego>            i++;<newline46mondego>            System.out.println(i);<newline46mondego><newline46mondego>            if(i == 1)<newline46mondego>            {<newline46mondego>                images.setIcon(bg);                                                                                                      <newline46mondego>                System.out.println(<doubleQuotes46>picture 1 should be displayed here<doubleQuotes46>);<newline46mondego>            }<newline46mondego>            if(i == 2)<newline46mondego>            {<newline46mondego>                images.setIcon(red);   <newline46mondego>                System.out.println(<doubleQuotes46>picture 2 should be displayed here<doubleQuotes46>);<newline46mondego>            }<newline46mondego>            if(i == 3)<newline46mondego>            {<newline46mondego>                images.setIcon(blue);   <newline46mondego>                System.out.println(<doubleQuotes46>picture 3 should be displayed here<doubleQuotes46>);  <newline46mondego>            }<newline46mondego>            if(i == 4)<newline46mondego>            {<newline46mondego>                images.setIcon(bg);   <newline46mondego>                System.out.println(<doubleQuotes46>picture 4 should be displayed here<doubleQuotes46>);  <newline46mondego>            }<newline46mondego>            if(i == 5)<newline46mondego>            {<newline46mondego>                go = false;<newline46mondego>                timer.stop();<newline46mondego>                System.exit(0);<newline46mondego>            }<newline46mondego>            revalidate();<newline46mondego>            repaint();<newline46mondego>        }<newline46mondego>    };<newline46mondego><newline46mondego>    public SlideShow()<newline46mondego>    {<newline46mondego>        JFrame frame = new JFrame(<doubleQuotes46>SLIDE SHOW<doubleQuotes46>);<newline46mondego>        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        frame.setLocationByPlatform(true);<newline46mondego><newline46mondego>        frame.getContentPane().add(this);<newline46mondego><newline46mondego>        add(images);<newline46mondego><newline46mondego>        frame.setSize(300, 300);<newline46mondego>        frame.setVisible(true); <newline46mondego>        timer = new Timer(2000, action);    <newline46mondego>        timer.start();  <newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String... args)<newline46mondego>    {<newline46mondego>        SwingUtilities.invokeLater(new Runnable()<newline46mondego>        {<newline46mondego>            public void run()<newline46mondego>            {<newline46mondego>                new SlideShow();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9263splitHere46","9631140splitHere46","//Exercise2.5 Create a class called Dog containing two String: name and says. In main(), create two dogs objects<newline46mondego>and assign it to spot's object.<newline46mondego>"
"9264splitHere46","9631140splitHere46","//Exercise2.5 Create a class called Dog containing two String: name and says. In main(), create two dogs objects<newline46mondego>//and assign it to spot's object.<newline46mondego>"
"9265splitHere46","9631140splitHere46","//"
"9266splitHere46","9631140splitHere46","/*"
"9267splitHere46","9631140splitHere46","*/"
"9268splitHere46","9631512splitHere46","abstract"
"9269splitHere46","9631512splitHere46","Interface"
"9270splitHere46","9631673splitHere46","<%<newline46mondego>Enumeration en = request.getAttributeNames();<newline46mondego>while(en.hasMoreElements()) {<newline46mondego>    String attr = (String)en.nextElement();<newline46mondego>    if(attr.startsWith(<doubleQuotes46>org.springframework.validation.BindingResult<doubleQuotes46>)) {<newline46mondego>        %><newline46mondego>        <spring:hasBindErrors name='<%= attr.substring(attr.lastIndexOf(<doubleQuotes46>.<doubleQuotes46>)+1) %>' ><newline46mondego>            <div class=<doubleQuotes46>error_box<doubleQuotes46>><newline46mondego>                <c:forEach var=<doubleQuotes46>error<doubleQuotes46> items=<doubleQuotes46>${errors.allErrors}<doubleQuotes46>><newline46mondego>                    <spring:message message=<doubleQuotes46>${error}<doubleQuotes46>></spring:message><newline46mondego>                    <br /><newline46mondego>                </c:forEach><newline46mondego>            </div><newline46mondego>        </spring:hasBindErrors><newline46mondego>        <% <newline46mondego>    }<newline46mondego>}<newline46mondego>%><newline46mondego>"
"9271splitHere46","9631681splitHere46","/opt/IBM/SDP/runtimes/basev7<newline46mondego>"
"9272splitHere46","9631681splitHere46","/profiles/profileName/temp/nodeName/serverName<newline46mondego>"
"9273splitHere46","9631718splitHere46","Calculator"
"9274splitHere46","9631718splitHere46","<%@page import=<doubleQuotes46>Calculator<doubleQuotes46>%> <%-- with the complete package of Calculator class--%><newline46mondego>"
"9275splitHere46","9631742splitHere46","moveValidator"
"9276splitHere46","9631742splitHere46","You'll have<newline46mondego>For1 --> goDown=0<newline46mondego>For2 --> goRight=2 --> moveValidator is false so break;<newline46mondego>For1 --> goDown=1<newline46mondego>For2 --> goRight=2 --> moveValidator is false so break;<newline46mondego>...<newline46mondego>And when goDown = 8<newline46mondego>For2 --> goRight=2 --> moveValidator is true<newline46mondego>For2 --> goRight=3 --> moveValidator is true<newline46mondego>...<newline46mondego>"
"9277splitHere46","9631742splitHere46","moveValidator"
"9278splitHere46","9631743splitHere46","Window > Preferences"
"9279splitHere46","9631743splitHere46","Java > Code Style > Clean Up"
"9280splitHere46","9631743splitHere46","Code Style"
"9281splitHere46","9631743splitHere46","Control statements > Convert for loops to enhanced"
"9282splitHere46","9631743splitHere46","Source > Clean Up..."
"9283splitHere46","9631991splitHere46","digest.toString()"
"9284splitHere46","9631991splitHere46","[B"
"9285splitHere46","9631991splitHere46","@"
"9286splitHere46","9632003splitHere46","response.getOutputStream().write(data);"
"9287splitHere46","9632164splitHere46","Aware"
"9288splitHere46","9632164splitHere46","RealmAware"
"9289splitHere46","9632270splitHere46","public abstract class ToBeOverriden<E,V> {<newline46mondego>    public E method (V parameter);<newline46mondego>}<newline46mondego><newline46mondego>public class Implementation extends ToBeOverriden<DateTime,Person> {<newline46mondego>    @Override<newline46mondego>    public DateTime method (Person parameter){<newline46mondego>        return new DateTime();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9290splitHere46","9632270splitHere46","E"
"9291splitHere46","9632270splitHere46","ToBeOverriden"
"9292splitHere46","9632270splitHere46","E"
"9293splitHere46","9632270splitHere46","Object"
"9294splitHere46","9632270splitHere46","public abstract class ToBeOverriden<A,B,C> {<newline46mondego>    public Object method1 (A parameter);<newline46mondego>    public String method2 (B parameter);<newline46mondego>    public void method3 (C parameter);<newline46mondego>}<newline46mondego>"
"9295splitHere46","9632396splitHere46","./d2j-dex2jar.sh classes.dex<newline46mondego>"
"9296splitHere46","9632427splitHere46","NVARCHAR2"
"9297splitHere46","9632650splitHere46","<id name=<doubleQuotes46>whateverYourIdNameIs<doubleQuotes46> type=<doubleQuotes46>java.lang.Integer<doubleQuotes46>><newline46mondego>        <column name=<doubleQuotes46>whateverYourColumnNameIs<doubleQuotes46> />           <newline46mondego>        <generator class=<doubleQuotes46>hilo<doubleQuotes46>><newline46mondego>            <param name=<doubleQuotes46>table<doubleQuotes46>>myHiloTable</param> //tablename is same for all entities<newline46mondego>            <param name=<doubleQuotes46>column<doubleQuotes46>>entity2</param>  //column name changes for entity<newline46mondego>        </generator><newline46mondego></id><newline46mondego>"
"9298splitHere46","9632711splitHere46","class PointCount {<newline46mondego>    double x, y;<newline46mondego>    int count;<newline46mondego>}<newline46mondego><newline46mondego>PointCount[] pc = new lots of small objects.<newline46mondego>"
"9299splitHere46","9632711splitHere46","class PointCounts {<newline46mondego>    double[] xs, ys;<newline46mondego>    int[] counts;<newline46mondego>}<newline46mondego>"
"9300splitHere46","9632711splitHere46","class PointCounts {<newline46mondego>    TDoubleArrayList xs, ys;<newline46mondego>    TIntArrayList counts;<newline46mondego>}<newline46mondego>"
"9301splitHere46","9632711splitHere46","public int totalCount() {<newline46mondego>   int sum = 0;<newline46mondego>   // counts are continuous without anything between the values.<newline46mondego>   for(int i: counts) sum += i;<newline46mondego>   return i;<newline46mondego>}<newline46mondego>"
"9302splitHere46","9632711splitHere46","import java.nio.ByteBuffer;<newline46mondego>import java.nio.ByteOrder;<newline46mondego><newline46mondego>public class MyCounters {<newline46mondego>    public static void main(String... args) {<newline46mondego>        Runtime rt = Runtime.getRuntime();<newline46mondego>        long used1 = rt.totalMemory() - rt.freeMemory();<newline46mondego>        long start = System.nanoTime();<newline46mondego>        int length = 100 * 1000 * 1000;<newline46mondego>        PointCount pc = new PointCountImpl(length);<newline46mondego>        for (int i = 0; i < length; i++) {<newline46mondego>            pc.index(i);<newline46mondego>            pc.setX(i);<newline46mondego>            pc.setY(-i);<newline46mondego>            pc.setCount(1);<newline46mondego>        }<newline46mondego>        for (int i = 0; i < length; i++) {<newline46mondego>            pc.index(i);<newline46mondego>            if (pc.getX() != i) throw new AssertionError();<newline46mondego>            if (pc.getY() != -i) throw new AssertionError();<newline46mondego>            if (pc.getCount() != 1) throw new AssertionError();<newline46mondego>        }<newline46mondego>        long time = System.nanoTime() - start;<newline46mondego>        long used2 = rt.totalMemory() - rt.freeMemory();<newline46mondego>        System.out.printf(<doubleQuotes46>Creating an array of %,d used %,d bytes of heap and tool %.1f seconds to set and get%n<doubleQuotes46>,<newline46mondego>                length, (used2 - used1), time / 1e9);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>interface PointCount {<newline46mondego>    // set the index of the element referred to.<newline46mondego>    public void index(int index);<newline46mondego><newline46mondego>    public double getX();<newline46mondego><newline46mondego>    public void setX(double x);<newline46mondego><newline46mondego>    public double getY();<newline46mondego><newline46mondego>    public void setY(double y);<newline46mondego><newline46mondego>    public int getCount();<newline46mondego><newline46mondego>    public void setCount(int count);<newline46mondego><newline46mondego>    public void incrementCount();<newline46mondego>}<newline46mondego><newline46mondego>class PointCountImpl implements PointCount {<newline46mondego>    static final int X_OFFSET = 0;<newline46mondego>    static final int Y_OFFSET = X_OFFSET + 8;<newline46mondego>    static final int COUNT_OFFSET = Y_OFFSET + 8;<newline46mondego>    static final int LENGTH = COUNT_OFFSET + 4;<newline46mondego><newline46mondego>    final ByteBuffer buffer;<newline46mondego>    int start = 0;<newline46mondego><newline46mondego>    PointCountImpl(int count) {<newline46mondego>        this(ByteBuffer.allocateDirect(count * LENGTH).order(ByteOrder.nativeOrder()));<newline46mondego>    }<newline46mondego><newline46mondego>    PointCountImpl(ByteBuffer buffer) {<newline46mondego>        this.buffer = buffer;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void index(int index) {<newline46mondego>        start = index * LENGTH;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public double getX() {<newline46mondego>        return buffer.getDouble(start + X_OFFSET);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void setX(double x) {<newline46mondego>        buffer.putDouble(start + X_OFFSET, x);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public double getY() {<newline46mondego>        return buffer.getDouble(start + Y_OFFSET);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void setY(double y) {<newline46mondego>        buffer.putDouble(start + Y_OFFSET, y);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public int getCount() {<newline46mondego>        return buffer.getInt(start + COUNT_OFFSET);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void setCount(int count) {<newline46mondego>        buffer.putInt(start + COUNT_OFFSET, count);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void incrementCount() {<newline46mondego>        setCount(getCount() + 1);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9303splitHere46","9632711splitHere46","-XX:-UseTLAB"
"9304splitHere46","9632739splitHere46","<source path='client' /><newline46mondego>"
"9305splitHere46","9632739splitHere46","showcase/<newline46mondego>   android/<newline46mondego>      ...<newline46mondego>   core/<newline46mondego>      ...<newline46mondego>   flash/<newline46mondego>      ...<newline46mondego>   html/<newline46mondego>      src/<newline46mondego>         main/<newline46mondego>            java/<newline46mondego>               playn/<newline46mondego>                  showcase/<newline46mondego>                     html/<newline46mondego>                        ShowcaseHtml.java<newline46mondego>                     Showcase.gwt.xml<newline46mondego>            webapp/<newline46mondego>               WEB-INF/<newline46mondego>                  web.xml<newline46mondego>               Showcase.html<newline46mondego>      pom.xml<newline46mondego>   ios/<newline46mondego>     ...<newline46mondego>   java/<newline46mondego>     ...<newline46mondego>   build.xml<newline46mondego>   pom.xml<newline46mondego>"
"9306splitHere46","9632739splitHere46","<module rename-to='showcase'><newline46mondego>  <inherits name='playn.PlayN'/><newline46mondego>  <!-- for the peas sample --><newline46mondego>  <inherits name=<doubleQuotes46>org.jbox2d.GwtBox2D<doubleQuotes46> /><newline46mondego>  <!-- for the menu UI --><newline46mondego>  <inherits name='tripleplay.TriplePlay'/><newline46mondego>  <!-- for enhanced logging --><newline46mondego>  <inherits name=<doubleQuotes46>playn.logging.Enhanced<doubleQuotes46> /><newline46mondego><newline46mondego>  <source path='core'/><newline46mondego>  <source path='html'/><newline46mondego><newline46mondego>  <public path=<doubleQuotes46>resources<doubleQuotes46> /><newline46mondego><newline46mondego>  <entry-point class='playn.showcase.html.ShowcaseHtml'/><newline46mondego></module><newline46mondego>"
"9307splitHere46","9632810splitHere46","public static void printPermutations(int[] n, int[] Nr, int idx) {<newline46mondego>    if (idx == n.length) {  //stop condition for the recursion [base clause]<newline46mondego>        System.out.println(Arrays.toString(n));<newline46mondego>        return;<newline46mondego>    }<newline46mondego>    for (int i = 0; i <= Nr[idx]; i++) { <newline46mondego>        n[idx] = i;<newline46mondego>        printPermutations(n, Nr, idx+1); //recursive invokation, for next elements<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9308splitHere46","9632810splitHere46","public static void main(String[] args) {<newline46mondego>    /* let n.length == 3 and Nr[0] = 2, Nr[1] = 3, Nr[2] = 3 */<newline46mondego>    int[] n = new int[3];<newline46mondego>    int Nr[] = {2,3,3 };<newline46mondego>    printPermutations(n, Nr, 0);<newline46mondego>}<newline46mondego>"
"9309splitHere46","9632810splitHere46","[0, 0, 0]<newline46mondego>[0, 0, 1]<newline46mondego>[0, 0, 2]<newline46mondego>[0, 0, 3]<newline46mondego>[0, 1, 0]<newline46mondego>[0, 1, 1]<newline46mondego>[0, 1, 2]<newline46mondego>[0, 1, 3]<newline46mondego>[0, 2, 0]<newline46mondego>[0, 2, 1]<newline46mondego>[0, 2, 2]<newline46mondego>[0, 2, 3]<newline46mondego>[0, 3, 0]<newline46mondego>[0, 3, 1]<newline46mondego>[0, 3, 2]<newline46mondego>[0, 3, 3]<newline46mondego>[1, 0, 0]<newline46mondego>[1, 0, 1]<newline46mondego>[1, 0, 2]<newline46mondego>[1, 0, 3]<newline46mondego>[1, 1, 0]<newline46mondego>[1, 1, 1]<newline46mondego>[1, 1, 2]<newline46mondego>[1, 1, 3]<newline46mondego>[1, 2, 0]<newline46mondego>[1, 2, 1]<newline46mondego>[1, 2, 2]<newline46mondego>[1, 2, 3]<newline46mondego>[1, 3, 0]<newline46mondego>[1, 3, 1]<newline46mondego>[1, 3, 2]<newline46mondego>[1, 3, 3]<newline46mondego>[2, 0, 0]<newline46mondego>[2, 0, 1]<newline46mondego>[2, 0, 2]<newline46mondego>[2, 0, 3]<newline46mondego>[2, 1, 0]<newline46mondego>[2, 1, 1]<newline46mondego>[2, 1, 2]<newline46mondego>[2, 1, 3]<newline46mondego>[2, 2, 0]<newline46mondego>[2, 2, 1]<newline46mondego>[2, 2, 2]<newline46mondego>[2, 2, 3]<newline46mondego>[2, 3, 0]<newline46mondego>[2, 3, 1]<newline46mondego>[2, 3, 2]<newline46mondego>[2, 3, 3]<newline46mondego>"
"9310splitHere46","9632897splitHere46","System.out.println (<doubleQuotes46>Loop <doubleQuotes46> + (++i) + <doubleQuotes46> out of 5<doubleQuotes46>);<newline46mondego>"
"9311splitHere46","9632897splitHere46","i"
"9312splitHere46","9632897splitHere46","for"
"9313splitHere46","9632897splitHere46","equals"
"9314splitHere46","9632897splitHere46","char"
"9315splitHere46","9632897splitHere46","=="
"9316splitHere46","9632897splitHere46","equals"
"9317splitHere46","9632897splitHere46","characterObject.equals(anotherCharacterObject)"
"9318splitHere46","9632897splitHere46","java.lang.Character"
"9319splitHere46","9632897splitHere46","ans == 'y'"
"9320splitHere46","9632897splitHere46","do {<newline46mondego>    ans = input.next().charAt(0);<newline46mondego>    if (ans != 'y' && ans != 'n') {<newline46mondego>        System.out.println (<doubleQuotes46>Input must be either 'y' or 'n'<doubleQuotes46>);<newline46mondego>    }<newline46mondego>} while (ans != 'y' && ans != 'n');<newline46mondego>"
"9321splitHere46","9633089splitHere46","ReflectionAssert.assertReflectionEquals"
"9322splitHere46","9633097splitHere46","boolean"
"9323splitHere46","9633097splitHere46","void"
"9324splitHere46","9633097splitHere46","@XmlID"
"9325splitHere46","9633097splitHere46","String"
"9326splitHere46","9633097splitHere46","XmlAdapter"
"9327splitHere46","9633097splitHere46","XmlAdapter"
"9328splitHere46","9633097splitHere46","Long"
"9329splitHere46","9633097splitHere46","String"
"9330splitHere46","9633097splitHere46","@XmlID"
"9331splitHere46","9633097splitHere46","package forum9629948;<newline46mondego><newline46mondego>import javax.xml.bind.DatatypeConverter;<newline46mondego>import javax.xml.bind.annotation.adapters.XmlAdapter;<newline46mondego><newline46mondego>public class IDAdapter extends XmlAdapter<String, Long> {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Long unmarshal(String string) throws Exception {<newline46mondego>        return DatatypeConverter.parseLong(string);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public String marshal(Long value) throws Exception {<newline46mondego>        return DatatypeConverter.printLong(value);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"9332splitHere46","9633097splitHere46","@XmlJavaTypeAdapter"
"9333splitHere46","9633097splitHere46","XmlAdapter"
"9334splitHere46","9633097splitHere46","package forum9629948;<newline46mondego><newline46mondego>import javax.xml.bind.annotation.*;<newline46mondego>import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;<newline46mondego><newline46mondego>@XmlAccessorType(XmlAccessType.FIELD)<newline46mondego>public class B {<newline46mondego><newline46mondego>    @XmlAttribute<newline46mondego>    @XmlID<newline46mondego>    @XmlJavaTypeAdapter(IDAdapter.class)<newline46mondego>    private Long id;<newline46mondego><newline46mondego>}<newline46mondego>"
"9335splitHere46","9633097splitHere46","package forum9629948;<newline46mondego><newline46mondego>import javax.xml.bind.annotation.*;<newline46mondego><newline46mondego>@XmlRootElement<newline46mondego>@XmlAccessorType(XmlAccessType.FIELD)<newline46mondego>public class A {<newline46mondego><newline46mondego>    private B b;<newline46mondego>    private C c;<newline46mondego><newline46mondego>}<newline46mondego>"
"9336splitHere46","9633097splitHere46","package forum9629948;<newline46mondego><newline46mondego>import javax.xml.bind.annotation.*;<newline46mondego><newline46mondego>@XmlAccessorType(XmlAccessType.FIELD)public class C {<newline46mondego><newline46mondego>    @XmlAttribute<newline46mondego>    @XmlIDREF<newline46mondego>    private B b;<newline46mondego><newline46mondego>}<newline46mondego>"
"9337splitHere46","9633097splitHere46","package forum9629948;<newline46mondego><newline46mondego>import java.io.File;<newline46mondego>import javax.xml.bind.*;<newline46mondego><newline46mondego>public class Demo {<newline46mondego><newline46mondego>    public static void main(String[] args) throws Exception {<newline46mondego>        JAXBContext jc = JAXBContext.newInstance(A.class);<newline46mondego><newline46mondego>        File xml = new File(<doubleQuotes46>src/forum9629948/input.xml<doubleQuotes46>);<newline46mondego>        Unmarshaller unmarshaller = jc.createUnmarshaller();<newline46mondego>        A a = (A) unmarshaller.unmarshal(xml);<newline46mondego><newline46mondego>        Marshaller marshaller = jc.createMarshaller();<newline46mondego>        marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);<newline46mondego>        marshaller.marshal(a, System.out);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"9338splitHere46","9633097splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46> standalone=<doubleQuotes46>yes<doubleQuotes46>?><newline46mondego><a><newline46mondego>    <b id=<doubleQuotes46>123<doubleQuotes46>/><newline46mondego>    <c b=<doubleQuotes46>123<doubleQuotes46>/><newline46mondego></a><newline46mondego>"
"9339splitHere46","9633200splitHere46","List list = new ArrayList();<newline46mondego>    list.add(Arrays.asList(<doubleQuotes46>element1<doubleQuotes46>, <doubleQuotes46>element2<doubleQuotes46>, <doubleQuotes46>element3<doubleQuotes46>,<newline46mondego>            Arrays.asList(<doubleQuotes46>element4.1<doubleQuotes46>, <doubleQuotes46>element4.2<doubleQuotes46>)));<newline46mondego>    list.add(Arrays.asList(<doubleQuotes46>element5<doubleQuotes46>, <doubleQuotes46>element6<doubleQuotes46>, <doubleQuotes46>element7<doubleQuotes46>,<newline46mondego>            Arrays.asList(<doubleQuotes46>element8.1<doubleQuotes46>, <doubleQuotes46>element8.2<doubleQuotes46>, <doubleQuotes46>element8.3<doubleQuotes46>)));<newline46mondego><newline46mondego>    // print values<newline46mondego>    System.out.println(list.get(0));<newline46mondego>    System.out.println(list.get(1));<newline46mondego>"
"9340splitHere46","9633229splitHere46","166"
"9341splitHere46","9633229splitHere46","byte"
"9342splitHere46","9633229splitHere46","127"
"9343splitHere46","9633229splitHere46","package forum9632269;<newline46mondego><newline46mondego>public class Demo {<newline46mondego><newline46mondego>    public static void main(String[] args) throws Exception {<newline46mondego>        System.out.println(Byte.MAX_VALUE);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"9344splitHere46","9633229splitHere46","127<newline46mondego>"
"9345splitHere46","9633309splitHere46","java"
"9346splitHere46","9633309splitHere46","javaw"
"9347splitHere46","9633309splitHere46","java"
"9348splitHere46","9633309splitHere46","javaw"
"9349splitHere46","9633309splitHere46","javaw -jar TheJarFile.jar <doubleQuotes46>%1%<doubleQuotes46>"
"9350splitHere46","9633309splitHere46","javaw"
"9351splitHere46","9633309splitHere46","TheJarFile.jar"
"9352splitHere46","9633326splitHere46","Float.floatToIntBits(f)"
"9353splitHere46","9633326splitHere46","(int) f"
"9354splitHere46","9633326splitHere46","(int) (f ^ (f>>>32))"
"9355splitHere46","9633326splitHere46","(f?1:0)"
"9356splitHere46","9633326splitHere46","longHash= Double.doubleToLongBits(f)"
"9357splitHere46","9633326splitHere46","(int) (longHash^(longHash>>>32))"
"9358splitHere46","9633360splitHere46","<dependency><newline46mondego>    <groupId>org.jboss.resteasy</groupId><newline46mondego>    <artifactId>resteasy-jaxrs</artifactId><newline46mondego>    <version>${resteasy.version}</version><newline46mondego></dependency><newline46mondego>"
"9359splitHere46","9633360splitHere46","<dependency><newline46mondego>    <groupId>org.jboss.resteasy</groupId><newline46mondego>    <artifactId>resteasy-hibernatevalidator-provider</artifactId><newline46mondego>    <version>${resteasy.version}</version><newline46mondego></dependency><newline46mondego><dependency><newline46mondego>    <groupId>org.jboss.resteasy</groupId><newline46mondego>    <artifactId>resteasy-jackson-provider</artifactId><newline46mondego>    <version>${resteasy.version}</version><newline46mondego></dependency><newline46mondego>"
"9360splitHere46","9633447splitHere46","getLabel()"
"9361splitHere46","9633447splitHere46","board.java"
"9362splitHere46","9633452splitHere46","=="
"9363splitHere46","9633452splitHere46","+"
"9364splitHere46","9633452splitHere46","(<doubleQuotes46> , <doubleQuotes46> + <doubleQuotes46>string<doubleQuotes46>)"
"9365splitHere46","9633452splitHere46","<doubleQuotes46>string<doubleQuotes46>"
"9366splitHere46","9633452splitHere46","<doubleQuotes46>string<doubleQuotes46>"
"9367splitHere46","9633452splitHere46","<doubleQuotes46>string<doubleQuotes46>"
"9368splitHere46","9633452splitHere46","System.out.print(<doubleQuotes46> , <doubleQuotes46> + (<doubleQuotes46>string<doubleQuotes46> == <doubleQuotes46>string<doubleQuotes46>));<newline46mondego>"
"9369splitHere46","9633452splitHere46","=="
"9370splitHere46","9633554splitHere46","System.out.println(session.getAttribute(<doubleQuotes46>email<doubleQuotes46>));<newline46mondego>"
"9371splitHere46","9633619splitHere46","class Service {<newline46mondego>  private DatabaseBarRepo barRepo;<newline46mondego>  private DatabaseFooRepo fooRepo;<newline46mondego><newline46mondego>  @Transactional<newline46mondego>  public void serviceRoutine() {<newline46mondego>     barRepo.doStuff();<newline46mondego>     fooRepo.doStuff();<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"9372splitHere46","9633641splitHere46","<input type=<doubleQuotes46>hidden<doubleQuotes46> id=<doubleQuotes46>sl<doubleQuotes46> name=<doubleQuotes46>sl<doubleQuotes46> value=<doubleQuotes46>#{param.sl}<doubleQuotes46>/><newline46mondego>"
"9373splitHere46","9633641splitHere46","${param.sl}<newline46mondego>"
"9374splitHere46","9633801splitHere46","new SimpleDateFormat(<doubleQuotes46>MM/DD/yyyy<doubleQuotes46>);"
"9375splitHere46","9633801splitHere46","new SimpleDateFormat(<doubleQuotes46>MM/dd/yyyy<doubleQuotes46>);"
"9376splitHere46","9633801splitHere46","dd"
"9377splitHere46","9633801splitHere46","DD"
"9378splitHere46","9633801splitHere46","DD"
"9379splitHere46","9633801splitHere46","dd"
"9380splitHere46","9633810splitHere46","<property name=<doubleQuotes46>hibernate.transaction.manager_lookup_class<doubleQuotes46> value=<doubleQuotes46>org.hibernate.transaction.SunONETransactionManagerLookup<doubleQuotes46> /><newline46mondego>"
"9381splitHere46","9633968splitHere46","clone"
"9382splitHere46","9633968splitHere46","y"
"9383splitHere46","9634026splitHere46","while"
"9384splitHere46","9634026splitHere46","if ( ! iter.hasNext()) {<newline46mondego>    // last iteration<newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"9385splitHere46","9634037splitHere46","jasperReport = JasperCompileManager.compileReport(sourceFileName);<newline46mondego>jasperPrint = JasperFillManager.fillReport(jasperReport,jasperParameter,new  JREmptyDataSource()); <newline46mondego>JasperExportManager.exportReportToPdfFile(jasperPrint, <doubleQuotes46>D://Test.pdf<doubleQuotes46>);<newline46mondego>"
"9386splitHere46","9634037splitHere46","JREmptyDataSource"
"9387splitHere46","9634181splitHere46","public Session session;<newline46mondego>"
"9388splitHere46","9634181splitHere46","private Session session = ServiceImpl.session;<newline46mondego>"
"9389splitHere46","9634227splitHere46","static"
"9390splitHere46","9634227splitHere46","writeNumbers"
"9391splitHere46","9634227splitHere46","static"
"9392splitHere46","9634227splitHere46","DisplayClass"
"9393splitHere46","9634227splitHere46","DisplayClass displayClass = new DisplayClass();<newline46mondego>"
"9394splitHere46","9634227splitHere46","displayClass.nonStaticMethod();<newline46mondego>"
"9395splitHere46","9634237splitHere46","c:forEach"
"9396splitHere46","9634237splitHere46","varStatus"
"9397splitHere46","9634237splitHere46","<c:forEach items=<doubleQuotes46>${myPOJO.myLIST}<doubleQuotes46> var=<doubleQuotes46>myItem<doubleQuotes46> varStatus=<doubleQuotes46>loopStatus<doubleQuotes46>><newline46mondego>"
"9398splitHere46","9634237splitHere46","<form:checkbox path=<doubleQuotes46>myLIST[${loopStatus.index}].aBool<doubleQuotes46>/><newline46mondego>"
"9399splitHere46","9634237splitHere46","i"
"9400splitHere46","9634237splitHere46","value=<doubleQuotes46>true<doubleQuotes46>"
"9401splitHere46","9634371splitHere46","public List<Dashboard> getDashboardList(DataSource ds)<newline46mondego>{   <newline46mondego>    List<Dashboard> list = new ArrayList<Dashboard>();<newline46mondego>    Connection con = null;<newline46mondego>    PreparedStatement ps = null;<newline46mondego>    try<newline46mondego>    {<newline46mondego>        con = ds.getConnection();<newline46mondego>        ps = con.prepareStatement(<doubleQuotes46>SELECT * from GLOBALSETTINGS<doubleQuotes46>);<newline46mondego>        //get customer data from database<newline46mondego>        ResultSet result = ps.executeQuery();<newline46mondego>        while (result.next())<newline46mondego>        {<newline46mondego>            Dashboard cust = new Dashboard();<newline46mondego>            cust.setUser(result.getString(<doubleQuotes46>SessionTTL<doubleQuotes46>));<newline46mondego>            cust.setPassword(result.getString(<doubleQuotes46>MAXACTIVEUSERS<doubleQuotes46>));<newline46mondego>            list.add(cust);<newline46mondego>        }<newline46mondego>    }<newline46mondego>    catch(Exception e1)<newline46mondego>    {<newline46mondego>        // Log the exception.<newline46mondego>    }<newline46mondego>    finally<newline46mondego>    {<newline46mondego>        try<newline46mondego>        {<newline46mondego>             if(ps != null)<newline46mondego>                  ps.close();<newline46mondego>             if(con != null)<newline46mondego>                  con.close();<newline46mondego>        }<newline46mondego>        catch(Exception e2)<newline46mondego>        {<newline46mondego>            // Log the exception.<newline46mondego>        }<newline46mondego>    }<newline46mondego>    return list; <newline46mondego>}<newline46mondego>"
"9402splitHere46","9634398splitHere46","LdapName ldapName = new LdapName(dn);<newline46mondego> List<Rdn>  distinguishedNames = ldapName.getRdns();<newline46mondego><newline46mondego> for (Rdn rdn : distinguishedNames) {<newline46mondego>     if (<doubleQuotes46>c<doubleQuotes46>.equals(name.getType().toLowerCase())) {<newline46mondego>         country = (String) name.getValue();<newline46mondego>     }<newline46mondego>     ...<newline46mondego> }<newline46mondego>"
"9403splitHere46","9634450splitHere46","setName()"
"9404splitHere46","9634450splitHere46","item.getFieldName()"
"9405splitHere46","9634516splitHere46","public class Box {<newline46mondego>    public Object o;<newline46mondego><newline46mondego>    public void mutate() {<newline46mondego>        o = new Object();<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String... args) throws IOException {<newline46mondego>        ClassReader cr = new ClassReader(Box.class.getName());<newline46mondego>        ASMifierClassVisitor acv = new ASMifierClassVisitor(new PrintWriter(System.out));<newline46mondego>        cr.accept(acv, 0);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9406splitHere46","9634516splitHere46","... lots of code ...<newline46mondego>{<newline46mondego>mv = cw.visitMethod(ACC_PUBLIC, <doubleQuotes46>mutate<doubleQuotes46>, <doubleQuotes46>()V<doubleQuotes46>, null, null);<newline46mondego>mv.visitCode();<newline46mondego>Label l0 = new Label();<newline46mondego>mv.visitLabel(l0);<newline46mondego>mv.visitLineNumber(11, l0);<newline46mondego>mv.visitVarInsn(ALOAD, 0);<newline46mondego>mv.visitTypeInsn(NEW, <doubleQuotes46>java/lang/Object<doubleQuotes46>);<newline46mondego>mv.visitInsn(DUP);<newline46mondego>mv.visitMethodInsn(INVOKESPECIAL, <doubleQuotes46>java/lang/Object<doubleQuotes46>, <doubleQuotes46><init><doubleQuotes46>, <doubleQuotes46>()V<doubleQuotes46>);<newline46mondego>mv.visitFieldInsn(PUTFIELD, <doubleQuotes46>Box<doubleQuotes46>, <doubleQuotes46>o<doubleQuotes46>, <doubleQuotes46>Ljava/lang/Object;<doubleQuotes46>);<newline46mondego>Label l1 = new Label();<newline46mondego>mv.visitLabel(l1);<newline46mondego>mv.visitLineNumber(12, l1);<newline46mondego>mv.visitInsn(RETURN);<newline46mondego>Label l2 = new Label();<newline46mondego>mv.visitLabel(l2);<newline46mondego>mv.visitLocalVariable(<doubleQuotes46>this<doubleQuotes46>, <doubleQuotes46>LBox;<doubleQuotes46>, null, l0, l2, 0);<newline46mondego>mv.visitMaxs(3, 1);<newline46mondego>mv.visitEnd();<newline46mondego>}<newline46mondego>... more code ...<newline46mondego>"
"9407splitHere46","9634516splitHere46","mv.visitFieldInsn(PUTFIELD, <doubleQuotes46>Box<doubleQuotes46>, <doubleQuotes46>o<doubleQuotes46>, <doubleQuotes46>Ljava/lang/Object;<doubleQuotes46>);<newline46mondego>"
"9408splitHere46","9634516splitHere46","private Object o;<newline46mondego><newline46mondego>public Box(Object o) {<newline46mondego>    this.o = o;<newline46mondego>}<newline46mondego>"
"9409splitHere46","9634589splitHere46","@Override<newline46mondego>public void resize(int width, int height) {<newline46mondego>    float aspectRatio = (float) width / (float) height;<newline46mondego>    camera = new PerspectiveCamera(64, cameraViewHeight * aspectRatio, cameraViewHeight);<newline46mondego>    viewMatrix = new Matrix4();<newline46mondego>    viewMatrix.setToOrtho2D(0, 0,width, height);<newline46mondego>    spriteBatch.setProjectionMatrix(viewMatrix);<newline46mondego>}<newline46mondego>"
"9410splitHere46","9634589splitHere46","public void render() {<newline46mondego>    GLCommon gl = Gdx.gl;<newline46mondego><newline46mondego>    camera.update();<newline46mondego>    camera.apply(Gdx.gl10);<newline46mondego>    //this is no longer needed:<newline46mondego>    //spriteBatch.setProjectionMatrix(camera.combined);<newline46mondego>    //...<newline46mondego>"
"9411splitHere46","9634589splitHere46","squareMesh = new Mesh(true, 4, 4, <newline46mondego>            new VertexAttribute(Usage.Position, 3, <doubleQuotes46>a_position<doubleQuotes46>)<newline46mondego>            ,new VertexAttribute(Usage.TextureCoordinates, 2, <doubleQuotes46>a_texCoords<doubleQuotes46>)<newline46mondego><newline46mondego>    );<newline46mondego><newline46mondego>    squareMesh.setVertices(new float[] {<newline46mondego>            squareXInitial, squareYInitial, squareZInitial,             0,1,    //lower left<newline46mondego>            squareXInitial+squareSize, squareYInitial, squareZInitial,  1,1,    //lower right<newline46mondego>            squareXInitial, squareYInitial+squareSize, squareZInitial,  0,0,    //upper left<newline46mondego>            squareXInitial+squareSize, squareYInitial+squareSize, squareZInitial,1,0});  //upper right <newline46mondego><newline46mondego>    squareMesh.setIndices(new short[] { 0, 1, 2, 3});<newline46mondego>"
"9412splitHere46","9634589splitHere46","font.setColor(Color.RED);<newline46mondego>spriteBatch.draw(textureSpriteBatch, 0, 0);<newline46mondego>font.draw(spriteBatch, (int)fps+<doubleQuotes46> fps<doubleQuotes46>, 0, 100);<newline46mondego>"
"9413splitHere46","9634589splitHere46","squareMesh = new Mesh(true, 4, 4, <newline46mondego>        new VertexAttribute(Usage.Position, 3, <doubleQuotes46>a_position<doubleQuotes46>)<newline46mondego>        ,new VertexAttribute(Usage.ColorPacked, 4, <doubleQuotes46>a_color<doubleQuotes46>)<newline46mondego>        ,new VertexAttribute(Usage.TextureCoordinates, 2, <doubleQuotes46>a_texCoords<doubleQuotes46>)<newline46mondego><newline46mondego>);<newline46mondego><newline46mondego>squareMesh.setVertices(new float[] {<newline46mondego>        squareXInitial, squareYInitial, squareZInitial,                         Color.toFloatBits(255, 255, 255, 255),  0,1,    //lower left<newline46mondego>        squareXInitial+squareSize, squareYInitial, squareZInitial,              Color.toFloatBits(255, 255, 255, 255),  1,1,    //lower right<newline46mondego>        squareXInitial, squareYInitial+squareSize, squareZInitial,              Color.toFloatBits(255, 255, 255, 255),  0,0,    //upper left<newline46mondego>        squareXInitial+squareSize, squareYInitial+squareSize, squareZInitial,   Color.toFloatBits(255, 255, 255, 255),  1,0});  //upper right <newline46mondego><newline46mondego>squareMesh.setIndices(new short[] { 0, 1, 2, 3});<newline46mondego>"
"9414splitHere46","9634702splitHere46","request.getParameter(name)"
"9415splitHere46","9634773splitHere46","new"
"9416splitHere46","9634773splitHere46","new"
"9417splitHere46","9635017splitHere46","import java.awt.BorderLayout;<newline46mondego>import java.awt.EventQueue;<newline46mondego>import java.awt.event.ActionEvent;<newline46mondego>import java.awt.event.KeyAdapter;<newline46mondego>import java.awt.event.KeyEvent;<newline46mondego><newline46mondego>import javax.swing.AbstractAction;<newline46mondego>import javax.swing.JButton;<newline46mondego>import javax.swing.JComponent;<newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JMenu;<newline46mondego>import javax.swing.JMenuBar;<newline46mondego>import javax.swing.JScrollPane;<newline46mondego>import javax.swing.JTextArea;<newline46mondego>import javax.swing.KeyStroke;<newline46mondego><newline46mondego>public class TestKeySpeed {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        EventQueue.invokeLater(new Runnable() {<newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                final JTextArea area = new JTextArea(20, 40);<newline46mondego>                area.setEditable(false);<newline46mondego><newline46mondego>                JButton button = new JButton(<doubleQuotes46>Just something that has focus<doubleQuotes46>);<newline46mondego>                button.addKeyListener(new KeyAdapter() {<newline46mondego>                    @Override<newline46mondego>                    public void keyPressed(KeyEvent e) {<newline46mondego>                        if (e.getKeyCode() == KeyEvent.VK_1) {<newline46mondego>                            area.append(<doubleQuotes46>1<doubleQuotes46>);<newline46mondego>                        }<newline46mondego>                    }<newline46mondego>                });<newline46mondego><newline46mondego>                AbstractAction action = new AbstractAction(<doubleQuotes46>Add<doubleQuotes46>) {<newline46mondego>                    {<newline46mondego>                        putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke('2'));<newline46mondego>                    }<newline46mondego><newline46mondego>                    @Override<newline46mondego>                    public void actionPerformed(ActionEvent e) {<newline46mondego>                        area.append(<doubleQuotes46>2<doubleQuotes46>);<newline46mondego>                    }<newline46mondego>                };<newline46mondego>                button.getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT).put(<newline46mondego>                        KeyStroke.getKeyStroke('3'), <doubleQuotes46>add3<doubleQuotes46>);<newline46mondego>                button.getActionMap().put(<doubleQuotes46>add3<doubleQuotes46>, action);<newline46mondego><newline46mondego>                JMenu menu = new JMenu(<doubleQuotes46>File<doubleQuotes46>);<newline46mondego>                menu.add(action);<newline46mondego>                JMenuBar bar = new JMenuBar();<newline46mondego>                bar.add(menu);<newline46mondego>                JFrame frame = new JFrame(<doubleQuotes46>Test<doubleQuotes46>);<newline46mondego>                frame.getRootPane().getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT).put(<newline46mondego>                        KeyStroke.getKeyStroke('4'), <doubleQuotes46>add4<doubleQuotes46>);<newline46mondego>                frame.getRootPane().getActionMap().put(<doubleQuotes46>add4<doubleQuotes46>, action);<newline46mondego><newline46mondego>                frame.setJMenuBar(bar);<newline46mondego>                frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);<newline46mondego>                frame.getContentPane().add(new JScrollPane(area));<newline46mondego>                frame.getContentPane().add(button, BorderLayout.PAGE_END);<newline46mondego>                frame.pack();<newline46mondego>                frame.setLocationRelativeTo(null);<newline46mondego>                frame.setVisible(true);<newline46mondego><newline46mondego>                button.requestFocusInWindow();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9418splitHere46","9635046splitHere46","import java.rmi.Remote;<newline46mondego>import java.rmi.RemoteException;<newline46mondego>import java.rmi.server.UnicastRemoteObject;<newline46mondego><newline46mondego>interface ClientRemote extends Remote {<newline46mondego>    public void doSomething() throws RemoteException;<newline46mondego>}<newline46mondego><newline46mondego>interface ServerRemote extends Remote {<newline46mondego>    public void registerClient(ClientRemote client) throws RemoteException;<newline46mondego>}<newline46mondego><newline46mondego>class Client implements ClientRemote {<newline46mondego>    public Client() throws RemoteException {<newline46mondego>        UnicastRemoteObject.exportObject(this, 0);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void doSomething() throws RemoteException {<newline46mondego>        System.out.println(<doubleQuotes46>Server invoked doSomething()<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class Server implements ServerRemote {<newline46mondego>    private volatile ClientRemote client;<newline46mondego><newline46mondego>    public Server() throws RemoteException {<newline46mondego>        UnicastRemoteObject.exportObject(this, 0);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void registerClient(ClientRemote client) throws RemoteException {<newline46mondego>        this.client = client;<newline46mondego>    }<newline46mondego><newline46mondego>    public void doSomethingOnClient() throws RemoteException {<newline46mondego>        client.doSomething();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9419splitHere46","9635086splitHere46","Canvas"
"9420splitHere46","9635086splitHere46","public class MyDrawableView extends View {<newline46mondego>private Drawable mD1;<newline46mondego>private Drawable mD2;<newline46mondego><newline46mondego>public MyDrawableView(Context context) {<newline46mondego>    super(context);<newline46mondego><newline46mondego>    Resources res = context.getResources();<newline46mondego>    mD1 = res.getDrawable(R.drawable.image1);<newline46mondego>    //Set image1 bounds using : mD1.setBounds(x, y, x + width, y + height);<newline46mondego><newline46mondego>    mD2 = res.getDrawable(R.drawable.image2);<newline46mondego>    //Set image2 bounds using : mD2.setBounds(a, b, a + width, b + height);<newline46mondego>}<newline46mondego><newline46mondego>protected void onDraw(Canvas canvas) {<newline46mondego>    mD1.draw(canvas);<newline46mondego>    mD2.draw(canvas);<newline46mondego>}<newline46mondego>}<newline46mondego>"
"9421splitHere46","9635150splitHere46","null"
"9422splitHere46","9635150splitHere46","Reader"
"9423splitHere46","9635150splitHere46","readLineFromStdIn()"
"9424splitHere46","9635150splitHere46","BufferedReader"
"9425splitHere46","9635150splitHere46","BufferedReader"
"9426splitHere46","9635150splitHere46","System.in"
"9427splitHere46","9635150splitHere46","BufferedReader"
"9428splitHere46","9635150splitHere46","readLineFromStdIn()"
"9429splitHere46","9635150splitHere46","BufferedReader"
"9430splitHere46","9635150splitHere46","readLineFromStdIn()"
"9431splitHere46","9635263splitHere46","import scala.util.parsing.combinator.RegexParsers<newline46mondego><newline46mondego>object Parser extends RegexParsers {<newline46mondego>  def intPair = INT ~ <doubleQuotes46>,<doubleQuotes46> ~ INT ^^ { x => (x._1._1.toInt,x._2.toInt) }<newline46mondego>  val INT = <doubleQuotes46>[0-9]+<doubleQuotes46>.r<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>Parser.parseAll(Parser.intPair, <doubleQuotes46>10,22<doubleQuotes46>) // => (10,22)<newline46mondego>"
"9432splitHere46","9635280splitHere46","class Brand{<newline46mondego>    private p_class brand;<newline46mondego><newline46mondego>    public p_class getBrand(){<newline46mondego>        return brand;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9433splitHere46","9635280splitHere46","List<Brand> brands = (List<Brand>) gson.fromJson(content, new TypeToken<List<Brand>>(){}.getType());<newline46mondego>"
"9434splitHere46","9635280splitHere46","JSONArray ar = new JSONArray(content);<newline46mondego>    for(int i=0; i<ar.length(); i++){<newline46mondego>        JSONObject obj = ar.getJSONObject(i);<newline46mondego><newline46mondego>        //here is your desired object<newline46mondego>        p_class p = gson.fromJson(obj.getJSONObject(<doubleQuotes46>brand<doubleQuotes46>).toString(), p_class.class);<newline46mondego>    }<newline46mondego>"
"9435splitHere46","9635359splitHere46","constructor.getParameterAnnotations()"
"9436splitHere46","9635359splitHere46","Annotation[] annotations = constructor.getParameterAnnotations()[1]<newline46mondego>"
"9437splitHere46","9635362splitHere46","fo.addFileChangeListener(new CustomFileChangeListener());<newline46mondego><newline46mondego>public class CustomFileChangeListener implements FileChangeListener {<newline46mondego>    @Override<newline46mondego>    public void fileChanged(FileEvent fe) {<newline46mondego>       ... file has been saved in the editor, sync with database ...<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9438splitHere46","9635394splitHere46","if (testString.equals(<doubleQuotes46>ok<doubleQuotes46>)) {<newline46mondego>        CompoBox.removeAllItems();<newline46mondego>        for (int i = 0; i < array.length; i++) {<newline46mondego>            String sample = array[i];<newline46mondego>            CompoBox.addItem(sample + <doubleQuotes46>aa<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"9439splitHere46","9635394splitHere46","CompoBox = new JComboBox<String>(array);<newline46mondego>"
"9440splitHere46","9635409splitHere46","b"
"9441splitHere46","9635409splitHere46","resizedBitmap"
"9442splitHere46","9635409splitHere46","Bitmap resizedBitmap = Bitmap.createBitmap(b, 0, 0, 3264, 2448);<newline46mondego>"
"9443splitHere46","9635409splitHere46","DrawingCache"
"9444splitHere46","9635409splitHere46","img.buildDrawingCache(true);<newline46mondego>img.setDrawingCacheEnabled(true);<newline46mondego>"
"9445splitHere46","9635409splitHere46","img.setDrawingCacheEnabled(true);<newline46mondego>img.buildDrawingCache(true);<newline46mondego>"
"9446splitHere46","9635409splitHere46","Bitmap bmp = BitmapFactory.decodeFile(filePath);<newline46mondego>    Bitmap alteredBitmap = Bitmap.createBitmap(bmp.getWidth(), bmp.getHeight(), bmp.getConfig());<newline46mondego>    Canvas canvas = new Canvas(alteredBitmap);<newline46mondego>    Paint paint = new Paint();<newline46mondego>    ColorMatrix cm = new ColorMatrix();<newline46mondego>    cm.setSaturation(progress2);<newline46mondego>    paint.setColorFilter(new ColorMatrixColorFilter(cm));<newline46mondego>    Matrix matrix = new Matrix();<newline46mondego>    canvas.drawBitmap(bmp, matrix, paint);<newline46mondego><newline46mondego>Bitmap resizedBitmap = Bitmap.createBitmap(alteredBitmap, 0, 0, 3264, 2448);<newline46mondego>File file = new File(sdcard+<doubleQuotes46>/DCIM/Camera/image3.jpg<doubleQuotes46>);<newline46mondego>try {<newline46mondego>    file.createNewFile();<newline46mondego>    FileOutputStream ostream = new FileOutputStream(file);<newline46mondego>    resizedBitmap.compress(CompressFormat.JPEG, 100, ostream);<newline46mondego>    ostream.close();<newline46mondego>    } catch (Exception e) <newline46mondego>        {<newline46mondego>        System.out.println(<doubleQuotes46>WRITING HAS FAILED<doubleQuotes46>);<newline46mondego>        e.printStackTrace();<newline46mondego>        }<newline46mondego>"
"9447splitHere46","9635461splitHere46","// void return type as it shifts in-place<newline46mondego>private static void shiftArray(int[] array, int stepSize) {<newline46mondego>    // TODO: Cope with negative step sizes etc<newline46mondego>    int[] tmp = new int[stepSize];<newline46mondego>    System.arraycopy(array, array.length - stepSize, tmp, 0, stepSize);<newline46mondego>    System.arraycopy(array, 0, array, stepSize, array.Length - stepSize);<newline46mondego>    System.arraycopy(tmp, 0, array, 0, stepSize);<newline46mondego>}<newline46mondego>"
"9448splitHere46","9635496splitHere46","Yes"
"9449splitHere46","9635496splitHere46","JTextField"
"9450splitHere46","9635496splitHere46","Frame3 f3 = new Frame3();<newline46mondego>Frame2 f2 = new Frame2(f3);<newline46mondego>"
"9451splitHere46","9635496splitHere46","Frame refToFrame3;<newline46mondego>...<newline46mondego>public Frame2(Frame f){<newline46mondego>   ...<newline46mondego>   refToFrame3 = f;<newline46mondego>   ...<newline46mondego>...<newline46mondego><newline46mondego>public void actionPerformed(ActionEvent e) {<newline46mondego>    if(e.getSource()==b1){<newline46mondego>        refToFrame3.clearText()<newline46mondego>        ...<newline46mondego>"
"9452splitHere46","9635496splitHere46","clearText"
"9453splitHere46","9635782splitHere46","@RunWith(Suite.class)<newline46mondego>@SuiteClasses({ Test1.class, Test2.class })<newline46mondego>public class AllTestsSuite {<newline46mondego>}<newline46mondego>"
"9454splitHere46","9635782splitHere46","junit.framework.*"
"9455splitHere46","9635782splitHere46","org.junit.*"
"9456splitHere46","9635846splitHere46","paintComponent"
"9457splitHere46","9635863splitHere46","@Autowired<newline46mondego>private ListableBeanFactory listableBeanFactory;<newline46mondego>"
"9458splitHere46","9635863splitHere46","Map<String, Object> controllers;<newline46mondego>controllers = listableBeanFactory.getBeansWithAnnotation(Controller.class);<newline46mondego>"
"9459splitHere46","9635967splitHere46","type org.apache.http.client.ClientProtocolException"
"9460splitHere46","9635967splitHere46","Try {<newline46mondego>    String message = null;<newline46mondego>    HttpClient httpclient = new DefaultHttpClient(); <newline46mondego>    JSONParser parser = new JSONParser();<newline46mondego><newline46mondego>    String url = <doubleQuotes46>working - url<doubleQuotes46>;<newline46mondego>    HttpResponse response = null;<newline46mondego>    response = httpclient.execute(new HttpGet(url));<newline46mondego><newline46mondego>    JSONObject json_data = null;<newline46mondego>    json_data = (JSONObject)parser.parse(EntityUtils.toString(response.getEntity()));<newline46mondego>    JSONArray results = (JSONArray)json_data.get(<doubleQuotes46>result<doubleQuotes46>);<newline46mondego>    for (Object queid : results) {<newline46mondego>        message = message.concat((String) ((JSONObject)queid).get(<doubleQuotes46>id<doubleQuotes46>));<newline46mondego>        message = message.concat(<doubleQuotes46>\t<doubleQuotes46>);<newline46mondego>        message = message.concat((String) ((JSONObject)queid).get(<doubleQuotes46>owner<doubleQuotes46>));<newline46mondego>        message = message.concat(<doubleQuotes46>\n<doubleQuotes46>);<newline46mondego>    }<newline46mondego>} catch (Exception e) {<newline46mondego>    e.printStack();<newline46mondego>}<newline46mondego>"
"9461splitHere46","9635967splitHere46","try catch blocks"
"9462splitHere46","9635967splitHere46","serializable"
"9463splitHere46","9636271splitHere46","A"
"9464splitHere46","9636271splitHere46","B"
"9465splitHere46","9636271splitHere46","Numerable"
"9466splitHere46","9636271splitHere46","IdnList"
"9467splitHere46","9636271splitHere46","IdnList<A>"
"9468splitHere46","9636271splitHere46","IdnList<B>"
"9469splitHere46","9636271splitHere46","IdnList<Numerable>"
"9470splitHere46","9636271splitHere46","Numerable"
"9471splitHere46","9636271splitHere46","IdnList<A>"
"9472splitHere46","9636271splitHere46","(IdnList<?>)this).add((Numerable)childToAdd);<newline46mondego>"
"9473splitHere46","9636271splitHere46","childToAdd"
"9474splitHere46","9636271splitHere46","Numerable"
"9475splitHere46","9636271splitHere46","this"
"9476splitHere46","9636271splitHere46","IdnList"
"9477splitHere46","9636296splitHere46","ProcessBuilder"
"9478splitHere46","9636432splitHere46","public void manip() {<newline46mondego><newline46mondego>    System.out.println(<doubleQuotes46>ArratList (Before) :<doubleQuotes46> + Array);<newline46mondego>    int sz = Array.size();<newline46mondego>    for (int i = 0; i < sz - 1; i++) {<newline46mondego>        Object o = Array.get(i);<newline46mondego>        if (o instanceof Double) {<newline46mondego>            if (Array.get(i).equals(x) & Array.get(i + 1).equals(y)) {<newline46mondego>                if (i == 1) {<newline46mondego><newline46mondego>                    Array.add(0, item);<newline46mondego>                } else {<newline46mondego><newline46mondego>                    Array.add(i - 1, item);<newline46mondego>                }<newline46mondego>                i = i + 3;<newline46mondego>            } else {<newline46mondego>                Array.remove(i - 1);<newline46mondego>                Array.remove(i - 1);<newline46mondego>                Array.remove(i - 1);<newline46mondego>                i = i - 1;<newline46mondego>            }<newline46mondego>            sz = Array.size();<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    System.out.println(<doubleQuotes46>ArratList (After) :<doubleQuotes46> + Array);<newline46mondego> }<newline46mondego>"
"9479splitHere46","9636440splitHere46","StringBuffer"
"9480splitHere46","9636440splitHere46","b"
"9481splitHere46","9636440splitHere46","b"
"9482splitHere46","9636440splitHere46","toString"
"9483splitHere46","9636440splitHere46","b"
"9484splitHere46","9636440splitHere46","new"
"9485splitHere46","9636451splitHere46","final Object obj = iter.next();"
"9486splitHere46","9636451splitHere46","for"
"9487splitHere46","9636459splitHere46",".jar"
"9488splitHere46","9636459splitHere46","JFileChooser chooser = new JFileChooser();<newline46mondego>FileNameExtensionFilter filter = new FileNameExtensionFilter(<newline46mondego>    <doubleQuotes46>JPG & GIF Images<doubleQuotes46>, <doubleQuotes46>jpg<doubleQuotes46>, <doubleQuotes46>gif<doubleQuotes46>);<newline46mondego>chooser.setFileFilter(filter);<newline46mondego>int returnVal = chooser.showOpenDialog(parent);<newline46mondego>if(returnVal == JFileChooser.APPROVE_OPTION) {<newline46mondego>   System.out.println(<doubleQuotes46>You chose to open this file: <doubleQuotes46> +<newline46mondego>        chooser.getSelectedFile().getName());<newline46mondego>}<newline46mondego>"
"9489splitHere46","9636589splitHere46","function showFileDialog() {<newline46mondego>    applet.showFileDialog( function( filepath ) {<newline46mondego>       if( filepath ) {<newline46mondego>          alert( <doubleQuotes46>Hey they picked <doubleQuotes46> + filepath );<newline46mondego>       } // must have hit cancel if filepath is null<newline46mondego>    } );<newline46mondego>}<newline46mondego>"
"9490splitHere46","9636589splitHere46","public void showFileDialog( JavascriptFunction someJavascriptFunction ) {<newline46mondego>    SwingUtilities.invokeLater( new Runnable() {<newline46mondego>        public void run() {<newline46mondego>            JFileChooserDialog chooser = new JFileChooser();<newline46mondego>            ...<newline46mondego>            int option = chooser.showOpenDialog( parent );<newline46mondego><newline46mondego>            someJavascriptFunction.invoke( option == JFileChooser.APPROVE_OPTION ? <newline46mondego>                                           chooser.getSelectedFile().getAbsolutePath() : <newline46mondego>                                           null );<newline46mondego>        }<newline46mondego>    });<newline46mondego>}<newline46mondego>"
"9491splitHere46","9636645splitHere46","ajax='false'"
"9492splitHere46","9636645splitHere46","p:commandButton"
"9493splitHere46","9636721splitHere46","TestDao"
"9494splitHere46","9636721splitHere46","public class HomeController implements Controller {<newline46mondego><newline46mondego>   private TestDao testDao;<newline46mondego><newline46mondego>   public void setTestDao(TestDao testDao) {<newline46mondego>      this.testDao = testDao;<newline46mondego>   }<newline46mondego>"
"9495splitHere46","9636721splitHere46","<bean name=<doubleQuotes46>/home.vis<doubleQuotes46> class=<doubleQuotes46>it.almaviva.springhello.web.HomeController<doubleQuotes46>><newline46mondego>   <property name=<doubleQuotes46>testDao<doubleQuotes46> ref=<doubleQuotes46>testDao<doubleQuotes46>/><newline46mondego></bean><newline46mondego>"
"9496splitHere46","9636721splitHere46","@Controller"
"9497splitHere46","9636769splitHere46",":contains"
"9498splitHere46","9636769splitHere46","Element link = doc.select(<doubleQuotes46>a:contains(Download)<doubleQuotes46>).first();"
"9499splitHere46","9636769splitHere46",":matches"
"9500splitHere46","9636769splitHere46","attr"
"9501splitHere46","9636769splitHere46","String linkaddress = link.attr(<doubleQuotes46>href<doubleQuotes46>);"
"9502splitHere46","9636776splitHere46","temp.getNext()"
"9503splitHere46","9636776splitHere46","null"
"9504splitHere46","9636776splitHere46","setPrev()"
"9505splitHere46","9636776splitHere46","length()-1"
"9506splitHere46","9636785splitHere46","Future"
"9507splitHere46","9636785splitHere46","Callable"
"9508splitHere46","9636858splitHere46","store.SessionTTL"
"9509splitHere46","9636858splitHere46","store.sessionTTL"
"9510splitHere46","9637000splitHere46","@Retention(RetentionPolicy.RUNTIME)<newline46mondego>public @interface Anno {}    <newline46mondego>"
"9511splitHere46","9637000splitHere46","CLASS"
"9512splitHere46","9637064splitHere46","q"
"9513splitHere46","9637064splitHere46","Collections.EMPTY_MAP"
"9514splitHere46","9637064splitHere46","Collections.unmodifiableMap"
"9515splitHere46","9637064splitHere46","q"
"9516splitHere46","9637064splitHere46","q"
"9517splitHere46","9637163splitHere46","int[][] ints = { { 1 }, {1,2,3}, {5,6} };<newline46mondego>"
"9518splitHere46","9637219splitHere46","List<Integer>"
"9519splitHere46","9637219splitHere46","List<Number>"
"9520splitHere46","9637219splitHere46","List<Object>"
"9521splitHere46","9637219splitHere46","?"
"9522splitHere46","9637510splitHere46","import java.awt.BorderLayout;<newline46mondego>import java.awt.Component;<newline46mondego>import java.awt.Container;<newline46mondego>import java.awt.Dimension;<newline46mondego>import java.awt.FlowLayout;<newline46mondego>import java.awt.Insets;<newline46mondego>import java.awt.event.ActionEvent;<newline46mondego>import java.awt.event.ActionListener;<newline46mondego>import java.util.ArrayList;<newline46mondego>import java.util.List;<newline46mondego><newline46mondego>import javax.swing.JButton;<newline46mondego>import javax.swing.JComponent;<newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JLabel;<newline46mondego>import javax.swing.JPanel;<newline46mondego>import javax.swing.JScrollPane;<newline46mondego>import javax.swing.SwingUtilities;<newline46mondego><newline46mondego>public class Test {<newline46mondego><newline46mondego>    /**<newline46mondego>     * FlowLayout subclass that fully supports wrapping of components.<newline46mondego>     */<newline46mondego>    public static class WrapLayout extends FlowLayout {<newline46mondego>        private Dimension preferredLayoutSize;<newline46mondego><newline46mondego>        /**<newline46mondego>         * Constructs a new <code>WrapLayout</code> with a left alignment and a<newline46mondego>         * default 5-unit horizontal and vertical gap.<newline46mondego>         */<newline46mondego>        public WrapLayout() {<newline46mondego>            super();<newline46mondego>        }<newline46mondego><newline46mondego>        /**<newline46mondego>         * Constructs a new <code>FlowLayout</code> with the specified alignment<newline46mondego>         * and a default 5-unit horizontal and vertical gap. The value of the<newline46mondego>         * alignment argument must be one of <code>WrapLayout</code>,<newline46mondego>         * <code>WrapLayout</code>, or <code>WrapLayout</code>.<newline46mondego>         * <newline46mondego>         * @param align<newline46mondego>         *            the alignment value<newline46mondego>         */<newline46mondego>        public WrapLayout(int align) {<newline46mondego>            super(align);<newline46mondego>        }<newline46mondego><newline46mondego>        /**<newline46mondego>         * Creates a new flow layout manager with the indicated alignment and<newline46mondego>         * the indicated horizontal and vertical gaps.<newline46mondego>         * <p><newline46mondego>         * The value of the alignment argument must be one of<newline46mondego>         * <code>WrapLayout</code>, <code>WrapLayout</code>, or<newline46mondego>         * <code>WrapLayout</code>.<newline46mondego>         * <newline46mondego>         * @param align<newline46mondego>         *            the alignment value<newline46mondego>         * @param hgap<newline46mondego>         *            the horizontal gap between components<newline46mondego>         * @param vgap<newline46mondego>         *            the vertical gap between components<newline46mondego>         */<newline46mondego>        public WrapLayout(int align, int hgap, int vgap) {<newline46mondego>            super(align, hgap, vgap);<newline46mondego>        }<newline46mondego><newline46mondego>        /**<newline46mondego>         * Returns the preferred dimensions for this layout given the<newline46mondego>         * <i>visible</i> components in the specified target container.<newline46mondego>         * <newline46mondego>         * @param target<newline46mondego>         *            the component which needs to be laid out<newline46mondego>         * @return the preferred dimensions to lay out the subcomponents of the<newline46mondego>         *         specified container<newline46mondego>         */<newline46mondego>        @Override<newline46mondego>        public Dimension preferredLayoutSize(Container target) {<newline46mondego>            return layoutSize(target, true);<newline46mondego>        }<newline46mondego><newline46mondego>        /**<newline46mondego>         * Returns the minimum dimensions needed to layout the <i>visible</i><newline46mondego>         * components contained in the specified target container.<newline46mondego>         * <newline46mondego>         * @param target<newline46mondego>         *            the component which needs to be laid out<newline46mondego>         * @return the minimum dimensions to lay out the subcomponents of the<newline46mondego>         *         specified container<newline46mondego>         */<newline46mondego>        @Override<newline46mondego>        public Dimension minimumLayoutSize(Container target) {<newline46mondego>            Dimension minimum = layoutSize(target, false);<newline46mondego>            minimum.width -= getHgap() + 1;<newline46mondego>            return minimum;<newline46mondego>        }<newline46mondego><newline46mondego>        /**<newline46mondego>         * Returns the minimum or preferred dimension needed to layout the<newline46mondego>         * target container.<newline46mondego>         * <newline46mondego>         * @param target<newline46mondego>         *            target to get layout size for<newline46mondego>         * @param preferred<newline46mondego>         *            should preferred size be calculated<newline46mondego>         * @return the dimension to layout the target container<newline46mondego>         */<newline46mondego>        private Dimension layoutSize(Container target, boolean preferred) {<newline46mondego>            synchronized (target.getTreeLock()) {<newline46mondego>                // Each row must fit with the width allocated to the containter.<newline46mondego>                // When the container width = 0, the preferred width of the<newline46mondego>                // container<newline46mondego>                // has not yet been calculated so lets ask for the maximum.<newline46mondego><newline46mondego>                int targetWidth = target.getSize().width;<newline46mondego><newline46mondego>                if (targetWidth == 0) {<newline46mondego>                    targetWidth = Integer.MAX_VALUE;<newline46mondego>                }<newline46mondego><newline46mondego>                int hgap = getHgap();<newline46mondego>                int vgap = getVgap();<newline46mondego>                Insets insets = target.getInsets();<newline46mondego>                int horizontalInsetsAndGap = insets.left + insets.right + hgap * 2;<newline46mondego>                int maxWidth = targetWidth - horizontalInsetsAndGap;<newline46mondego><newline46mondego>                // Fit components into the allowed width<newline46mondego><newline46mondego>                Dimension dim = new Dimension(0, 0);<newline46mondego>                int rowWidth = 0;<newline46mondego>                int rowHeight = 0;<newline46mondego><newline46mondego>                int nmembers = target.getComponentCount();<newline46mondego><newline46mondego>                for (int i = 0; i < nmembers; i++) {<newline46mondego>                    Component m = target.getComponent(i);<newline46mondego><newline46mondego>                    if (m.isVisible()) {<newline46mondego>                        Dimension d = preferred ? m.getPreferredSize() : m.getMinimumSize();<newline46mondego><newline46mondego>                        // Can't add the component to current row. Start a new<newline46mondego>                        // row.<newline46mondego><newline46mondego>                        if (rowWidth + d.width > maxWidth) {<newline46mondego>                            addRow(dim, rowWidth, rowHeight);<newline46mondego>                            rowWidth = 0;<newline46mondego>                            rowHeight = 0;<newline46mondego>                        }<newline46mondego><newline46mondego>                        // Add a horizontal gap for all components after the<newline46mondego>                        // first<newline46mondego><newline46mondego>                        if (rowWidth != 0) {<newline46mondego>                            rowWidth += hgap;<newline46mondego>                        }<newline46mondego><newline46mondego>                        rowWidth += d.width;<newline46mondego>                        rowHeight = Math.max(rowHeight, d.height);<newline46mondego>                    }<newline46mondego>                }<newline46mondego><newline46mondego>                addRow(dim, rowWidth, rowHeight);<newline46mondego><newline46mondego>                dim.width += horizontalInsetsAndGap;<newline46mondego>                dim.height += insets.top + insets.bottom + vgap * 2;<newline46mondego><newline46mondego>                // When using a scroll pane or the DecoratedLookAndFeel we need<newline46mondego>                // to<newline46mondego>                // make sure the preferred size is less than the size of the<newline46mondego>                // target containter so shrinking the container size works<newline46mondego>                // correctly. Removing the horizontal gap is an easy way to do<newline46mondego>                // this.<newline46mondego><newline46mondego>                Container scrollPane = SwingUtilities.getAncestorOfClass(JScrollPane.class, target);<newline46mondego><newline46mondego>                if (scrollPane != null) {<newline46mondego>                    dim.width -= hgap + 1;<newline46mondego>                }<newline46mondego><newline46mondego>                return dim;<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        /*<newline46mondego>         *  A new row has been completed. Use the dimensions of this row<newline46mondego>         *  to update the preferred size for the container.<newline46mondego>         *<newline46mondego>         *  @param dim update the width and height when appropriate<newline46mondego>         *  @param rowWidth the width of the row to add<newline46mondego>         *  @param rowHeight the height of the row to add<newline46mondego>         */<newline46mondego>        private void addRow(Dimension dim, int rowWidth, int rowHeight) {<newline46mondego>            dim.width = Math.max(dim.width, rowWidth);<newline46mondego><newline46mondego>            if (dim.height > 0) {<newline46mondego>                dim.height += getVgap();<newline46mondego>            }<newline46mondego><newline46mondego>            dim.height += rowHeight;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public static class MyTabbedPane extends JPanel {<newline46mondego>        private JPanel buttonPanel;<newline46mondego>        private JPanel currentview;<newline46mondego><newline46mondego>        private Tab currentTab;<newline46mondego><newline46mondego>        private class Tab {<newline46mondego>            String name;<newline46mondego>            JComponent component;<newline46mondego>        }<newline46mondego><newline46mondego>        private List<Tab> tabs = new ArrayList<Tab>();<newline46mondego><newline46mondego>        public MyTabbedPane() {<newline46mondego>            super(new BorderLayout());<newline46mondego>            buttonPanel = new JPanel(new WrapLayout());<newline46mondego>            currentview = new JPanel();<newline46mondego>            add(buttonPanel, BorderLayout.NORTH);<newline46mondego>            add(currentview);<newline46mondego>        }<newline46mondego><newline46mondego>        public void addTab(String name, JComponent tabView, int index) {<newline46mondego>            if (index < 0 || index > tabs.size()) {<newline46mondego>                throw new IllegalArgumentException(<doubleQuotes46>Index out of bounds<doubleQuotes46>);<newline46mondego>            }<newline46mondego>            final Tab tab = new Tab();<newline46mondego>            tab.component = tabView;<newline46mondego>            tab.name = name;<newline46mondego>            tabs.add(index, tab);<newline46mondego>            JButton b = new JButton(name);<newline46mondego>            b.addActionListener(new ActionListener() {<newline46mondego><newline46mondego>                @Override<newline46mondego>                public void actionPerformed(ActionEvent e) {<newline46mondego>                    setCurrentTab(tab);<newline46mondego>                }<newline46mondego><newline46mondego>            });<newline46mondego>            buttonPanel.add(b, index);<newline46mondego>            buttonPanel.validate();<newline46mondego>        }<newline46mondego><newline46mondego>        public void removeTab(int i) {<newline46mondego>            Tab tab = tabs.remove(i);<newline46mondego><newline46mondego>            if (tab == currentTab) {<newline46mondego>                if (tabs.size() > 0) {<newline46mondego>                    if (i < tabs.size()) {<newline46mondego>                        setCurrentTab(tabs.get(i));<newline46mondego>                    } else {<newline46mondego>                        setCurrentTab(tabs.get(i - 1));<newline46mondego>                    }<newline46mondego>                } else {<newline46mondego>                    setCurrentTab(null);<newline46mondego>                }<newline46mondego>            }<newline46mondego>            buttonPanel.remove(index);<newline46mondego>        }<newline46mondego><newline46mondego>        void setCurrentTab(final Tab tab) {<newline46mondego>            if (currentTab == tab) {<newline46mondego>                return;<newline46mondego>            }<newline46mondego>            if (currentTab != null) {<newline46mondego>                currentview.remove(currentTab.component);<newline46mondego>            }<newline46mondego>            if (tab != null) {<newline46mondego>                currentview.add(tab.component);<newline46mondego>            }<newline46mondego>            currentTab = tab;<newline46mondego>            currentview.validate();<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        JFrame frame = new JFrame();<newline46mondego>        MyTabbedPane tabbedPane = new MyTabbedPane();<newline46mondego>        for (int i = 0; i < 100; i++) {<newline46mondego>            tabbedPane.addTab(<doubleQuotes46>Button <doubleQuotes46> + (i + 1), new JLabel(<doubleQuotes46>Dummy Label <doubleQuotes46> + (i + 1)), i);<newline46mondego>        }<newline46mondego>        frame.add(tabbedPane);<newline46mondego>        frame.pack();<newline46mondego>        frame.setSize(new Dimension(1000, 800));<newline46mondego>        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        frame.setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"9523splitHere46","9637776splitHere46","Caused by: java.security.AccessControlException: access denied (java.lang.reflect.ReflectPermission suppressAccessChecks)"
"9524splitHere46","9637776splitHere46","grant codeBase <doubleQuotes46>file:${com.sun.aas.installRoot}/domains/domain1/applications/your_app_name/-<doubleQuotes46> {<newline46mondego>    permission java.lang.reflect.ReflectPermission <doubleQuotes46>suppressAccessChecks<doubleQuotes46>;<newline46mondego>};<newline46mondego>"
"9525splitHere46","9637826splitHere46","private static List<Items> data;<newline46mondego><newline46mondego>public static List<Items> getData() {<newline46mondego>   if(data==null) {<newline46mondego>        //get from db<newline46mondego>   }<newline46mondego>   return data;<newline46mondego>}<newline46mondego>"
"9526splitHere46","9637826splitHere46","Application"
"9527splitHere46","9637826splitHere46","<init-param><newline46mondego>       <param-name>javax.ws.rs.Application</param-name><newline46mondego>       <param-value>com.foo.MyApplication</param-value><newline46mondego>   </init-param> <newline46mondego>"
"9528splitHere46","9638113splitHere46","public class TestService extends Service {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void onCreate()<newline46mondego>    {<newline46mondego>        ActivityManager am = (ActivityManager)this.getSystemService(ACTIVITY_SERVICE);<newline46mondego>        List rs = am.getRunningServices(50);<newline46mondego><newline46mondego>        for (int i=0; i<rs.size(); i++) {<newline46mondego>        ActivityManager.RunningServiceInfo rsi = (RunningServiceInfo) rs.get(i);<newline46mondego>        Log.i(<doubleQuotes46>Service<doubleQuotes46>, <doubleQuotes46>Process <doubleQuotes46> + rsi.process + <doubleQuotes46> with component <doubleQuotes46> + rsi.service.getClassName());<newline46mondego>        }<newline46mondego>        super.onDestroy();<newline46mondego>        Toast.makeText(getApplicationContext(),<doubleQuotes46>1. onCreate()<doubleQuotes46>, Toast.LENGTH_SHORT).show();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9529splitHere46","9638156splitHere46","@SneakyThrows<newline46mondego>public static JAXBContext getContext()<newline46mondego>{<newline46mondego>    JAXBContext context;<newline46mondego>    context = org.eclipse.persistence.jaxb.JAXBContext.newInstance(Parent.class, Child.class);<newline46mondego>    return context;<newline46mondego>}<newline46mondego>"
"9530splitHere46","9638187splitHere46","Employee"
"9531splitHere46","9638287splitHere46","myClassField2"
"9532splitHere46","9638287splitHere46","myClassField1"
"9533splitHere46","9638319splitHere46","^(.*?)\W*(\d{1,2}):(\d{1,2})\W*([AaPp][Mm])?.*$<newline46mondego>"
"9534splitHere46","9638319splitHere46","^                 <-- Beginning of the line<newline46mondego>    (.*?)         <-- Match anything (but ungreedy)<newline46mondego>    \W*           <-- Match everything that's not a word/number (we'll ignore that)<newline46mondego>    (\d{1,2})     <-- Match one or two digits (hours)<newline46mondego>    :             <-- :<newline46mondego>    (\d{1,2})     <-- Match one or two digits (minutes) [You should consider only matching two digits]<newline46mondego>    \W*           <-- Match everything that's not a word/number (we'll ignore that)<newline46mondego>    ([AaPp][Mm])? <-- Match AM or PM (and variants) if it exists<newline46mondego>    .*            <-- Match everything else (we'll ignore that)<newline46mondego>$                 <-- End of the line<newline46mondego>"
"9535splitHere46","9638319splitHere46","\W*"
"9536splitHere46","9638396splitHere46","long yourmilliseconds = 1274883865399L;<newline46mondego>long droppedMillis = 1000 * (yourmilliseconds/ 1000);    <newline46mondego>System.out.println(droppedMillis);<newline46mondego>"
"9537splitHere46","9638396splitHere46","Calendar c = Calendar.getInstance();<newline46mondego>c.setTime(new Date(yourmilliseconds));<newline46mondego>c.set(Calendar.MILLISECOND, 0);<newline46mondego>SimpleDateFormat sdf = new SimpleDateFormat(<doubleQuotes46>yyyy-MM-dd'T'HH:mm.ss.SSS'Z'<doubleQuotes46>);<newline46mondego>sdf.setTimeZone(TimeZone.getTimeZone(<doubleQuotes46>GMT<doubleQuotes46>));<newline46mondego>System.out.println(sdf.format(c.getTime()));<newline46mondego>"
"9538splitHere46","9638652splitHere46","Background background = new Background(new Color3f(1f,0,0));<newline46mondego>BoundingSphere sphere = new BoundingSphere(new Point3d(0,0,0), 100000);<newline46mondego>background.setApplicationBounds(sphere);<newline46mondego>viewingPlatform.addChild(background);<newline46mondego>"
"9539splitHere46","9638854splitHere46","org.gjt.mm.mysql.Driver"
"9540splitHere46","9638854splitHere46","com.mysql.jdbc.Driver"
"9541splitHere46","9638854splitHere46","Class.forName(<doubleQuotes46>com.mysql.jdbc.Driver<doubleQuotes46>);<newline46mondego>"
"9542splitHere46","9638854splitHere46","/lib"
"9543splitHere46","9638854splitHere46","/WEB-INF/lib"
"9544splitHere46","9638854splitHere46","/lib"
"9545splitHere46","9638870splitHere46","from Item items"
"9546splitHere46","9638870splitHere46","Object[]"
"9547splitHere46","9638870splitHere46","Item"
"9548splitHere46","9638870splitHere46","for(Iterator it = query.iterate(); it.hasNext();) {<newline46mondego>    Item item = (Item) it.next();<newline46mondego>    jcbItemCode.addItem(item);<newline46mondego>}<newline46mondego>"
