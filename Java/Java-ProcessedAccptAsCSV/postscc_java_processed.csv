"1splitHere46","12709445splitHere46","Path file = ...<newline46mondego>BasicFileAttributes attrs = Files.readAttributes(file, BasicFileAttributes.class);<newline46mondego>FileTime time = attrs.lastModifiedTime();<newline46mondego>"
"2splitHere46","12709650splitHere46","Handler mHandler = new Handler();<newline46mondego>"
"3splitHere46","12709650splitHere46","mHandler.post(new Runnable() {<newline46mondego><newline46mondego>   gameActivity.spawnNewMoleAt(location);<newline46mondego><newline46mondego><newline46mondego> });<newline46mondego>"
"4splitHere46","12709746splitHere46","^[_A-Za-z0-9-]+(\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$"
"5splitHere46","12709766splitHere46","+-------- HashMap<String, String> map = new HashMap<String, String>();<newline46mondego>   |<newline46mondego>   |            for (int i = 0; i < dealList.size(); i++) {<newline46mondego>   +--------------->  <newline46mondego>                    map.put(DealItem.DEAL_ID, dealList.get(i).deal_id);<newline46mondego>                    map.put(DealItem.DEAL_NAME, dealList.get(i).deal_name);<newline46mondego>                    System.out.println(<doubleQuotes46>DEAL NAME = <doubleQuotes46>+dealList.get(i).deal_name);<newline46mondego>                    placesListItems.add(map);<newline46mondego><newline46mondego>                }<newline46mondego>"
"6splitHere46","12709906splitHere46","foo()"
"7splitHere46","12709906splitHere46","super.foo()"
"8splitHere46","12709928splitHere46","SocketTimeoutException"
"9splitHere46","12710098splitHere46","HTTPRequest<List<String>><newline46mondego>"
"10splitHere46","12710098splitHere46","T <=> List<String> <newline46mondego>"
"11splitHere46","12710098splitHere46","//Class HTTPRequest<newline46mondego>    public class HTTPRequest<List<String>> {<newline46mondego><newline46mondego>    private LinkedHashMap<List<List<String>>, Double> tableOfInitProbList = new LinkedHashMap<List<List<String>>, Double>();<newline46mondego><newline46mondego>    public HTTPRequest(){<newline46mondego>        }<newline46mondego><newline46mondego>    public HTTPRequest(List<List<String>> entry, Double value){<newline46mondego>            tableOfInitProbList.put(entry, value);<newline46mondego>        }<newline46mondego><newline46mondego>    public void putListHTTPCharTable(List<List<String>> uri, Double value){<newline46mondego>            tableOfInitProbList.put(uri, value);<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego>"
"12splitHere46","12710109splitHere46","Create = PUT with a new URI<newline46mondego>         POST to a base URI returning a newly created URI  <newline46mondego>Read   = GET  <newline46mondego>Update = PUT with an existing URI  <newline46mondego>Delete = DELETE<newline46mondego>"
"13splitHere46","12710109splitHere46","http://serverName/PersonServices/Person/123456"
"14splitHere46","12710109splitHere46","http://serverName/PersonServices/RevokePerson/123456"
"15splitHere46","12710142splitHere46","public MyBaseClass extends BaseClass { <newline46mondego>    @Override<newline46mondego>    protected void protectedMethod(OtherObject object) {<newline46mondego>        super.protectedMethod(object);<newline46mondego>    }<newline46mondego> }<newline46mondego><newline46mondego> public Child1 extends MyBaseClass { ... }<newline46mondego> public Child2 extends MyBaseClass { ... }<newline46mondego>"
"16splitHere46","12710142splitHere46","NyBaseClass[] objects = {<newline46mondego>    new Child1(),<newline46mondego>    new Child2()<newline46mondego> }<newline46mondego><newline46mondego> for (MyBaseClass object : objects) {<newline46mondego>    object.protectedMethod(other); <newline46mondego> }   <newline46mondego>"
"17splitHere46","12710310splitHere46","RequestContext"
"18splitHere46","12710310splitHere46","RequestContext"
"19splitHere46","12710310splitHere46","edit()"
"20splitHere46","12710310splitHere46","fire()"
"21splitHere46","12710310splitHere46","edit()"
"22splitHere46","12710530splitHere46","/register?name=myname&phone=mynumber"
"23splitHere46","12710530splitHere46","@ModelAttribute"
"24splitHere46","12710530splitHere46","@ModelAttribute"
"25splitHere46","12710746splitHere46","MultiMap"
"26splitHere46","12710746splitHere46","Map<Integer, String> map = new HashMap<Integer, String>();<newline46mondego>map.put(1, <doubleQuotes46>x<doubleQuotes46>);<newline46mondego>map.put(2, <doubleQuotes46>y<doubleQuotes46>);<newline46mondego>map.put(2, <doubleQuotes46>z<doubleQuotes46>);<newline46mondego>map.put(3, <doubleQuotes46>x<doubleQuotes46>);<newline46mondego>map.put(4, <doubleQuotes46>y<doubleQuotes46>);<newline46mondego>map.put(5, <doubleQuotes46>z<doubleQuotes46>);<newline46mondego>map.put(6, <doubleQuotes46>x<doubleQuotes46>);<newline46mondego>map.put(7, <doubleQuotes46>y<doubleQuotes46>);<newline46mondego><newline46mondego>System.out.println(<doubleQuotes46>Original map: <doubleQuotes46> + map);<newline46mondego><newline46mondego>Multimap<String, Integer> multiMap = HashMultimap.create();<newline46mondego>for (Entry<Integer, String> entry : map.entrySet()) {<newline46mondego>  multiMap.put(entry.getValue(), entry.getKey());<newline46mondego>}<newline46mondego>System.out.println();<newline46mondego><newline46mondego>for (Entry<String, Collection<Integer>> entry : multiMap.asMap().entrySet()) {<newline46mondego>  System.out.println(<doubleQuotes46>Original value: <doubleQuotes46> + entry.getKey() + <doubleQuotes46> was mapped to keys: <doubleQuotes46><newline46mondego>      + entry.getValue());<newline46mondego>}<newline46mondego>"
"27splitHere46","12710746splitHere46","Original map: {1=x, 2=z, 3=x, 4=y, 5=z, 6=x, 7=y}<newline46mondego><newline46mondego>Original value: z was mapped to keys: [2, 5]<newline46mondego>Original value: y was mapped to keys: [4, 7]<newline46mondego>Original value: x was mapped to keys: [1, 3, 6]<newline46mondego>"
"28splitHere46","12710746splitHere46","forMap"
"29splitHere46","12710746splitHere46","invertFrom"
"30splitHere46","12710746splitHere46","HashMultimap<String, Integer> multiMap =<newline46mondego>    Multimaps.invertFrom(Multimaps.forMap(map), <newline46mondego>        HashMultimap.<String, Integer> create());<newline46mondego>"
"31splitHere46","12710746splitHere46","Multimap<String, Integer> multiMap = HashMultimap.create();<newline46mondego>for (Entry<Integer, String> entry : map.entrySet()) {<newline46mondego>  multiMap.put(entry.getValue(), entry.getKey());<newline46mondego>}<newline46mondego>"
"32splitHere46","12711007splitHere46","-Xmx1600m"
"33splitHere46","12711186splitHere46","initializeJNIVars()"
"34splitHere46","12711186splitHere46","GetMethodID(...)"
"35splitHere46","12711186splitHere46","OuterClassName.this"
"36splitHere46","12711217splitHere46","client = new HttpClient(new SimpleHttpConnectionManager()); <newline46mondego>"
"37splitHere46","12711403splitHere46","public class MainActivity extends Activity {<newline46mondego><newline46mondego>Ponto2D patual = new Ponto2D(); <---- here<newline46mondego>//...<newline46mondego>}<newline46mondego>"
"38splitHere46","12711403splitHere46","public Ponto2D()<newline46mondego>{<newline46mondego>   x = -1;<newline46mondego>   y = -1;<newline46mondego>}<newline46mondego><newline46mondego>public Ponto2D(int x, int y)<newline46mondego>{<newline46mondego>   this();<newline46mondego>   this.x = x;<newline46mondego>   this.y = y;<newline46mondego>}<newline46mondego>"
"39splitHere46","12711403splitHere46","public float X=0;<newline46mondego>   public float Y=0;<newline46mondego>"
"40splitHere46","12711403splitHere46","Ponto2D patual = new Ponto2D(event.getX(), event.getY());<newline46mondego>"
"41splitHere46","12711403splitHere46","Ponto2D patual = new Ponto2D((int)event.getX(), (int)event.getY());<newline46mondego>"
"42splitHere46","12711403splitHere46","public class Ponto2D <newline46mondego>{<newline46mondego><newline46mondego>float x;<newline46mondego>float y;<newline46mondego><newline46mondego>public Ponto2D ()<newline46mondego>{<newline46mondego>    x=-1.0;<newline46mondego>    y=-1.0;<newline46mondego>}<newline46mondego><newline46mondego>public Ponto2D(float x, float y)<newline46mondego>{<newline46mondego>    this();<newline46mondego>    this.x = x;<newline46mondego>    this.y = y;<newline46mondego>}<newline46mondego>} //end of class<newline46mondego>"
"43splitHere46","12711403splitHere46","Reta r1 = new Reta (new Ponto2D(), new Ponto2D());<newline46mondego>"
"44splitHere46","12711403splitHere46","Reta r1 = new Reta (new Ponto2D(<your values>), new Ponto2D(<values again>));<newline46mondego>"
"45splitHere46","12711403splitHere46","DrawView.ar[contador] =rl[];<newline46mondego><newline46mondego>        inicio.X = \.X;<newline46mondego>        inicio.Y = fim.Y;<newline46mondego>"
"46splitHere46","12711403splitHere46","RelativeLayout rl = (RelativeLayout) findViewById(R.id.rl);<newline46mondego>"
"47splitHere46","12711403splitHere46","final RelativeLayout rl = (RelativeLayout) findViewById(R.id.rl);<newline46mondego>"
"48splitHere46","12711403splitHere46","public class DrawView extends View {<newline46mondego>public Paint paint = new Paint();<newline46mondego><newline46mondego>Reta ar[] = new Reta [10];  //offending line<newline46mondego>public int a;<newline46mondego>//...<newline46mondego>"
"49splitHere46","12711403splitHere46","public class DrawView extends View<newline46mondego>{<newline46mondego>    public Paint paint = new Paint();<newline46mondego><newline46mondego>    public Reta ar[] = new Reta [10];<newline46mondego>    //... <newline46mondego>}<newline46mondego>"
"50splitHere46","12711403splitHere46","public class Ponto2D <newline46mondego>{<newline46mondego>    private int x; //2d plane shouldn't use floating coordinates.<newline46mondego>    private int y;<newline46mondego><newline46mondego>    Ponto2D() { }; //ctor does nothing.<newline46mondego><newline46mondego>    public Ponto2D(int x, int y)<newline46mondego>    {<newline46mondego>       this();<newline46mondego>       this.x = x;<newline46mondego>       this.y = y;<newline46mondego>    }<newline46mondego><newline46mondego>    public int getX() { return x; }<newline46mondego>    public int getY() { return y; }<newline46mondego>}<newline46mondego><newline46mondego>public class Reta <newline46mondego>{<newline46mondego>    private Ponto2D inicio;<newline46mondego>    private Ponto2D fim;<newline46mondego>    private int cor;<newline46mondego><newline46mondego>    Reta()<newline46mondego>    {<newline46mondego>       fin = new Ponta2D(); //might cause an error because it's not public<newline46mondego>       inicio = new Ponta2D(-1, -1); //this should be ok <newline46mondego>    }<newline46mondego><newline46mondego>    public Reta(Ponto2D p1, Ponto2D p2)<newline46mondego>    {<newline46mondego>"
"51splitHere46","12711403splitHere46","public class DrawView extends View {<newline46mondego>public Paint paint = new Paint();<newline46mondego><newline46mondego>Reta ar[] = new Reta [10];<newline46mondego>public int a;<newline46mondego>"
"52splitHere46","12711403splitHere46","DrawView dv = new DrawView();<newline46mondego>System.out.println(Arrays.toString(dv.ar)); // dv.ar, not DrawView.ar<newline46mondego>"
"53splitHere46","12711403splitHere46","static Reta ar[] = new Reta [10];<newline46mondego>public int a;<newline46mondego>"
"54splitHere46","12711403splitHere46","public boolean onTouch(View v, MotionEvent event) {<newline46mondego><newline46mondego>            Ponto2D patual = new Ponto2D((int)event.getX(), (int)event.getY());<newline46mondego>            Reta r1 = new Reta (inicio, fim);<newline46mondego><newline46mondego>            //DrawView.ar[contador] =rl[]; //offending line<newline46mondego>            //it should be<newline46mondego>            //drawView.ar = something; but thats also wrong because you cannot refer to a non-final variable drawView in a inner-class blahblah so here's what you do<newline46mondego>            ((DrawView)v).ar[contador] = rl; //or whatever you want it to be<newline46mondego>"
"55splitHere46","12711430splitHere46","HelpDeskTestServiceAsync asyncService = GWT.create(HelpDeskTestService.class);<newline46mondego><newline46mondego>asyncService.postToRemoteServer(<newline46mondego>                <doubleQuotes46>http://xx.xx.xx.xx/sdpapi/request/<doubleQuotes46>, <newline46mondego>                new AsyncCallback<String>() {<newline46mondego>                    @Override<newline46mondego>                    public void onFailure(Throwable caught)  {<newline46mondego>                        Window.alert(<doubleQuotes46>Failure getting XML through proxy<doubleQuotes46>);<newline46mondego>                    }<newline46mondego><newline46mondego>                    @Override<newline46mondego>                    public void onSuccess(String result) {<newline46mondego>                        processXML(result);<newline46mondego>                    }<newline46mondego>                });<newline46mondego>"
"56splitHere46","12711682splitHere46","m"
"57splitHere46","12711682splitHere46","String time = <doubleQuotes46>05h23m45s<doubleQuotes46>;<newline46mondego>String seconds = time.substring(time.lastIndexOf(<doubleQuotes46>m<doubleQuotes46>) + 1, time.lastIndexOf(<doubleQuotes46>s<doubleQuotes46>));<newline46mondego>"
"58splitHere46","12711682splitHere46","String"
"59splitHere46","12711682splitHere46","m"
"60splitHere46","12711682splitHere46","s"
"61splitHere46","12711694splitHere46","DecimalFormat"
"62splitHere46","12711694splitHere46","NumberFormat f = NumberFormat.getInstance(Locale.GERMANY);<newline46mondego>if (f instanceof DecimalFormat) {<newline46mondego>    ((DecimalFormat) f).applyPattern(<doubleQuotes46>##0,000.0<doubleQuotes46>);<newline46mondego>}<newline46mondego>f.format(123456 / 10.0);<newline46mondego>"
"63splitHere46","12711852splitHere46","#import"
"64splitHere46","12711852splitHere46","<#global a = 0>"
"65splitHere46","12711852splitHere46","#assign"
"66splitHere46","12711852splitHere46","<#assign a = 0 in my>"
"67splitHere46","12711915splitHere46","pack()"
"68splitHere46","12711937splitHere46","GWT_CONTAINER"
"69splitHere46","12711937splitHere46","gwt-maven-plugin"
"70splitHere46","12711937splitHere46","gwt-maven-plugin"
"71splitHere46","12711937splitHere46",".project"
"72splitHere46","12711937splitHere46",".classpath"
"73splitHere46","12711937splitHere46",".settings/"
"74splitHere46","12711937splitHere46","gwt-user"
"75splitHere46","12711937splitHere46","gwt-maven-plugin"
"76splitHere46","12711937splitHere46","gwt-user"
"77splitHere46","12711937splitHere46","gwt-maven-plugin"
"78splitHere46","12712028splitHere46","Because of the presence of older implementations, the protocol allows<newline46mondego>   ambiguous situations in which a client may send <doubleQuotes46>Expect: 100-<newline46mondego>   continue<doubleQuotes46> without receiving either a 417 (Expectation Failed) status<newline46mondego>   or a 100 (Continue) status. Therefore, when a client sends this<newline46mondego>   header field to an origin server (possibly via a proxy) from which it<newline46mondego>   has never seen a 100 (Continue) status, the client SHOULD NOT wait<newline46mondego>   for an indefinite period before sending the request body.<newline46mondego>"
"79splitHere46","12712261splitHere46","Doctor.getId()"
"80splitHere46","12712261splitHere46","Doctor"
"81splitHere46","12712261splitHere46","getId"
"82splitHere46","12712261splitHere46","s"
"83splitHere46","12712279splitHere46","String.length"
"84splitHere46","12712279splitHere46","codePointCount"
"85splitHere46","12712279splitHere46","length"
"86splitHere46","12712365splitHere46","2:2 -> wall<newline46mondego>3:2 -> null<newline46mondego>4:2 -> null<newline46mondego>5:2 -> wall<newline46mondego>"
"87splitHere46","12712365splitHere46","null"
"88splitHere46","12712365splitHere46","space"
"89splitHere46","12712365splitHere46","if(y > 0 && !panels[x][y-1].getName().matches(<doubleQuotes46>wall<doubleQuotes46>))<newline46mondego>{<newline46mondego>    y--;<newline46mondego>}<newline46mondego>"
"90splitHere46","12712365splitHere46","0 <= x < 10"
"91splitHere46","12712365splitHere46","0 <= y < 8"
"92splitHere46","12712498splitHere46","/WEB-INF/lib"
"93splitHere46","12712549splitHere46","Map<String, Object> parameters = new HashMap<String, Object>();<newline46mondego>parameters.put(<doubleQuotes46>port<doubleQuotes46>, org.hornetq.core.remoting.impl.netty.TransportConstants<newline46mondego>                      .DEFAULT_PORT);<newline46mondego>parameters.put(TransportConstants.HOST_PROP_NAME, <doubleQuotes46>127.0.0.1<doubleQuotes46>);<newline46mondego><newline46mondego>TransportConfiguration configuration = new TransportConfiguration(<newline46mondego>        NettyConnectorFactory.class.getName(), parameters);<newline46mondego>"
"94splitHere46","12712549splitHere46","NettyAcceptor"
"95splitHere46","12712589splitHere46","Element el = (Element)(doc.getElementsByTagName(<doubleQuotes46>node<doubleQuotes46>).item(0));<newline46mondego>NodeList children = el.getChildNodes();<newline46mondego><newline46mondego>for (int i=0; i<children.getLength(); i++) {<newline46mondego>  System.out.println(children.item(0).getNodeValue());<newline46mondego>}<newline46mondego>"
"96splitHere46","12712634splitHere46","BulletArray"
"97splitHere46","12712634splitHere46","run()"
"98splitHere46","12712634splitHere46","for()"
"99splitHere46","12712634splitHere46","int i = 0"
"100splitHere46","12712634splitHere46","int Bullet = 0"
"101splitHere46","12712634splitHere46","Key.FireKey"
"102splitHere46","12712634splitHere46","private int maxBullets = 10;<newline46mondego>Bullet[] bulletArray = new Bullet[maxBullets];<newline46mondego>"
"103splitHere46","12712634splitHere46","for()"
"104splitHere46","12712634splitHere46","Key.FireKey"
"105splitHere46","12712634splitHere46","IndexOutOfBoundsException"
"106splitHere46","12712634splitHere46","if(Key.FireKey) {<newline46mondego>    if(bullets < maxBullets) {<newline46mondego>        bulletArray[++bullets] = new Bullet();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"107splitHere46","12713179splitHere46","INADDR_ANY"
"108splitHere46","12713400splitHere46","List"
"109splitHere46","12713400splitHere46","List<String>"
"110splitHere46","12713508splitHere46","in()"
"111splitHere46","12713508splitHere46","out()"
"112splitHere46","12713509splitHere46","IOException: Stream closed"
"113splitHere46","12713509splitHere46","while((s=br.readLine())!=null)<newline46mondego>{<newline46mondego>    strtok=new StringTokenizer(s,<doubleQuotes46> <doubleQuotes46>);<newline46mondego>    while(strtok.hasMoreTokens())<newline46mondego>    {<newline46mondego>        bw.write(<doubleQuotes46>\n<doubleQuotes46>+strtok.nextToken());<newline46mondego>    }<newline46mondego>    //br.close(); <----- move this to outside the while loop<newline46mondego>}<newline46mondego>br.close();<newline46mondego>"
"114splitHere46","12713622splitHere46","JFrame"
"115splitHere46","12713622splitHere46","JFrame"
"116splitHere46","12713622splitHere46","setVisible(true)"
"117splitHere46","12713622splitHere46","setSize()"
"118splitHere46","12713622splitHere46","pack()"
"119splitHere46","12713622splitHere46","JFrame"
"120splitHere46","12713622splitHere46","LayoutManager"
"121splitHere46","12713622splitHere46","JFrame#setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE)"
"122splitHere46","12713622splitHere46","JFrame"
"123splitHere46","12713622splitHere46","public static void main(String[] args) {<newline46mondego>        //Create GUI on EDT Thread<newline46mondego>        SwingUtilities.invokeLater(new Runnable() {<newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego><newline46mondego>                  JFrame frame = new JFrame(<doubleQuotes46>JScroll Pane Test<doubleQuotes46>);<newline46mondego>                  frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);  <newline46mondego><newline46mondego>                  JTextArea txtNotes = new JTextArea();<newline46mondego>                  txtNotes.setText(<doubleQuotes46>Hello World<doubleQuotes46>);<newline46mondego>                  JScrollPane scrollPane = new JScrollPane(txtNotes);<newline46mondego>                  frame.add(scrollPane);//add components<newline46mondego><newline46mondego>                  frame.pack();<newline46mondego>                  frame.setVisible(true);//show (after adding components)<newline46mondego>            }<newline46mondego>        });<newline46mondego>}<newline46mondego>"
"124splitHere46","12713685splitHere46","cleanTitle.replaceAll(<doubleQuotes46>\\|<doubleQuotes46>, <doubleQuotes46>*<doubleQuotes46>)<newline46mondego>"
"125splitHere46","12713731splitHere46","hasNext(<doubleQuotes46>[YN]<doubleQuotes46>)"
"126splitHere46","12713731splitHere46","scanner.next([YN])"
"127splitHere46","12713731splitHere46","next()"
"128splitHere46","12713731splitHere46","for (int i=0; i<diceNum; i++){<newline46mondego>           int count = 0;<newline46mondego>           System.out.printf(<doubleQuotes46>Reroll this die? (%d)\n<doubleQuotes46>,i);<newline46mondego><newline46mondego>           // Give three chances to user for correct input.. <newline46mondego>           // Else fill this array element with false value..<newline46mondego><newline46mondego>           while (count < 3 && !scansworth.hasNext(<doubleQuotes46>[YN]<doubleQuotes46>)) {<newline46mondego>               count += 1;  // IF you don't want to get into an infinite loop<newline46mondego>               scansworth.next();<newline46mondego>           }    <newline46mondego><newline46mondego>           if (count != 3) {<newline46mondego>                /** User has entered valid input.. check it for Y, or N **/<newline46mondego>                responses[i] = (scansworth.next()).equals(<doubleQuotes46>Y<doubleQuotes46>) ? true : false;<newline46mondego>           } <newline46mondego>           // If User hasn't entered valid input.. then it will not go in the if  <newline46mondego>           // then this element will have default value `false` for boolean..<newline46mondego> }<newline46mondego>"
"129splitHere46","12713766splitHere46","/* this is not importing anything<newline46mondego>import java.util.*;<newline46mondego>*/<newline46mondego>"
"130splitHere46","12713766splitHere46","Emacs"
"131splitHere46","12713766splitHere46","font-lock-mode"
"132splitHere46","12713766splitHere46","Emacs"
"133splitHere46","12713766splitHere46","elisp"
"134splitHere46","12713766splitHere46","Emacs"
"135splitHere46","12713830splitHere46","tan(pi/2)"
"136splitHere46","12713833splitHere46","false"
"137splitHere46","12713833splitHere46","true"
"138splitHere46","12713833splitHere46","false"
"139splitHere46","12713833splitHere46","1"
"140splitHere46","12713833splitHere46","0"
"141splitHere46","12713931splitHere46","Image i = new Image(<doubleQuotes46>address.png<doubleQuotes46>);<newline46mondego>"
"142splitHere46","12713931splitHere46","Image i = new Image(getClass().getResource(<doubleQuotes46>/res/address.png<doubleQuotes46>).toURI()); // In case your Image object accepts URI as parameters<newline46mondego>"
"143splitHere46","12713931splitHere46","Image i = new Image(getClass().getResource(<doubleQuotes46>/res/address.png<doubleQuotes46>).toExternalForm()); // Since your object only accept Strings<newline46mondego>"
"144splitHere46","12713936splitHere46","@ExceptionHandler"
"145splitHere46","12713936splitHere46","Exception"
"146splitHere46","12713936splitHere46","@RequestMapping"
"147splitHere46","12713936splitHere46","Exception"
"148splitHere46","12713936splitHere46","public class BaseController {<newline46mondego>    @ExceptionHandler(Throwable.class)<newline46mondego>    public String handleException(Throwable t) {<newline46mondego>        return <doubleQuotes46>redirect:/errorPages/500.jsp<doubleQuotes46>;<newline46mondego>    }<newline46mondego><newline46mondego>    @ExceptionHandler(Exception.class)<newline46mondego>    public String handleException(Throwable t) {<newline46mondego>        return <doubleQuotes46>redirect:/errorPages/error.jsp<doubleQuotes46>;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>@Controller<newline46mondego>@RequestMapping(value = <doubleQuotes46>/admin/store<doubleQuotes46>)<newline46mondego>public class AdminController extends BaseController<newline46mondego>{<newline46mondego>    @RequestMapping(...)<newline46mondego>    //Some method<newline46mondego><newline46mondego>    @RequestMapping(...)<newline46mondego>    //Another method<newline46mondego>}<newline46mondego>"
"149splitHere46","12714088splitHere46","synchronized"
"150splitHere46","12714138splitHere46","Component State"
"151splitHere46","12714138splitHere46","UIComponent"
"152splitHere46","12714138splitHere46","@Override<newline46mondego>public Object saveState(FacesContext context) {<newline46mondego>    Object values[] = new Object[2];<newline46mondego>    values[0] = super.saveState(context);<newline46mondego>    values[1] = label;<newline46mondego>    return ((Object) (values));<newline46mondego>}<newline46mondego><newline46mondego>@Override<newline46mondego>public void restoreState(FacesContext context, Object state) {<newline46mondego>    Object values[] = (Object[])state;<newline46mondego>    super.restoreState(context, values[0]);<newline46mondego>    label = (String)values[1];<newline46mondego>}<newline46mondego>"
"153splitHere46","12714336splitHere46","Errors"
"154splitHere46","12714336splitHere46","BindingResult"
"155splitHere46","12714336splitHere46","Errors"
"156splitHere46","12714336splitHere46","org.springframework.validation.BindException"
"157splitHere46","12714336splitHere46","Errors"
"158splitHere46","12714400splitHere46","<c:forEach>"
"159splitHere46","12714400splitHere46","<ui:include>"
"160splitHere46","12714400splitHere46","<f:validateXXX>"
"161splitHere46","12714400splitHere46","binding"
"162splitHere46","12714400splitHere46","id"
"163splitHere46","12714400splitHere46","<h:someComponent>"
"164splitHere46","12714400splitHere46","@ViewScoped"
"165splitHere46","12714453splitHere46","java.util.Date"
"166splitHere46","12714453splitHere46","java.sql"
"167splitHere46","12714453splitHere46","@Temporal (TemporalType.TIMESTAMP)"
"168splitHere46","12714453splitHere46","@Temporal (TemporalType.DATE)<newline46mondego>@Column(name = <doubleQuotes46>END_DATE<doubleQuotes46>, nullable = true) <newline46mondego>private Date endDate; <newline46mondego>"
"169splitHere46","12714453splitHere46","select t.endDate from Table as t<newline46mondego>"
"170splitHere46","12714610splitHere46","String message = <doubleQuotes46>This is a test<doubleQuotes46>;<newline46mondego>Settings.System.putString(context.getContentResolver(),<newline46mondego>            Settings.System.NEXT_ALARM_FORMATTED, message);<newline46mondego>"
"171splitHere46","12714612splitHere46","1. Open config.inc.php file in the phpmyadmin directory<newline46mondego><newline46mondego>2. Find line 21: $cfg['Servers'][$i]['password'] = ''<newline46mondego><newline46mondego>3. Change it to: $cfg['Servers'][$i]['password'] = 'your_password';<newline46mondego><newline46mondego>4. Restart XAMPP <newline46mondego><newline46mondego><newline46mondego>The setting you are looking for is <doubleQuotes46>$cfg['Servers'][$i]['auth_type']<doubleQuotes46> - set this to 'HTTP', and you will be able to input a username and password.<newline46mondego>"
"172splitHere46","12714730splitHere46","button.getScene().getAccelerators().put(<newline46mondego>  new KeyCodeCombination(KeyCode.S, KeyCombination.SHORTCUT_DOWN), <newline46mondego>  new Runnable() {<newline46mondego>    @Override public void run() {<newline46mondego>      button.fire();<newline46mondego>    }<newline46mondego>  }<newline46mondego>);<newline46mondego>"
"173splitHere46","12714730splitHere46","new KeyCodeCombination(KeyCode.S, KeyCombination.CONTROL_DOWN)<newline46mondego>"
"174splitHere46","12714730splitHere46","import javafx.animation.*;<newline46mondego>import javafx.application.Application;<newline46mondego>import javafx.event.*;<newline46mondego>import javafx.geometry.Pos;<newline46mondego>import javafx.scene.Scene;<newline46mondego>import javafx.scene.control.*;<newline46mondego>import javafx.scene.image.*;<newline46mondego>import javafx.scene.input.*;<newline46mondego>import javafx.scene.layout.VBox;<newline46mondego>import javafx.stage.Stage;<newline46mondego>import javafx.util.Duration;<newline46mondego><newline46mondego>public class SaveMe extends Application {<newline46mondego>  @Override public void start(final Stage stage) throws Exception {<newline46mondego>    final Label response = new Label();<newline46mondego>    final ImageView imageView = new ImageView(<newline46mondego>      new Image(<doubleQuotes46>http://icons.iconarchive.com/icons/eponas-deeway/colobrush/128/software-emule-icon.png<doubleQuotes46>)<newline46mondego>    );<newline46mondego>    final Button button = new Button(<doubleQuotes46>Save Me<doubleQuotes46>, imageView);<newline46mondego>    button.setStyle(<doubleQuotes46>-fx-base: burlywood;<doubleQuotes46>);<newline46mondego>    button.setContentDisplay(ContentDisplay.TOP);<newline46mondego>    displayFlashMessageOnAction(button, response, <doubleQuotes46>You have been saved!<doubleQuotes46>);<newline46mondego><newline46mondego>    layoutScene(button, response, stage);<newline46mondego>    stage.show();<newline46mondego><newline46mondego>    setSaveAccelerator(button);<newline46mondego>  }<newline46mondego><newline46mondego>  // sets the save accelerator for a button to the Ctrl+S key combination.<newline46mondego>  private void setSaveAccelerator(final Button button) {<newline46mondego>    Scene scene = button.getScene();<newline46mondego>    if (scene == null) {<newline46mondego>      throw new IllegalArgumentException(<doubleQuotes46>setSaveAccelerator must be called when a button is attached to a scene<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    scene.getAccelerators().put(<newline46mondego>      new KeyCodeCombination(KeyCode.S, KeyCombination.SHORTCUT_DOWN), <newline46mondego>      new Runnable() {<newline46mondego>        @Override public void run() {<newline46mondego>          fireButton(button);<newline46mondego>        }<newline46mondego>      }<newline46mondego>    );<newline46mondego>  }<newline46mondego><newline46mondego>  // fires a button from code, providing visual feedback that the button is firing.<newline46mondego>  private void fireButton(final Button button) {<newline46mondego>    button.arm();<newline46mondego>    PauseTransition pt = new PauseTransition(Duration.millis(300));<newline46mondego>    pt.setOnFinished(new EventHandler<ActionEvent>() {<newline46mondego>      @Override public void handle(ActionEvent event) {<newline46mondego>        button.fire();<newline46mondego>        button.disarm();<newline46mondego>      }<newline46mondego>    });<newline46mondego>    pt.play();<newline46mondego>  }<newline46mondego><newline46mondego>  // displays a temporary message in a label when a button is pressed, <newline46mondego>  // and gradually fades the label away after the message has been displayed.<newline46mondego>  private void displayFlashMessageOnAction(final Button button, final Label label, final String message) {<newline46mondego>    final FadeTransition ft = new FadeTransition(Duration.seconds(3), label);<newline46mondego>    ft.setInterpolator(Interpolator.EASE_BOTH);<newline46mondego>    ft.setFromValue(1);<newline46mondego>    ft.setToValue(0);<newline46mondego>    button.setOnAction(new EventHandler<ActionEvent>() {<newline46mondego>      @Override public void handle(ActionEvent event) {<newline46mondego>        label.setText(message);<newline46mondego>        label.setStyle(<doubleQuotes46>-fx-text-fill: forestgreen;<doubleQuotes46>);<newline46mondego>        ft.playFromStart();<newline46mondego>      }<newline46mondego>    });<newline46mondego>  }<newline46mondego><newline46mondego>  private void layoutScene(final Button button, final Label response, final Stage stage) {<newline46mondego>    final VBox layout = new VBox(10);<newline46mondego>    layout.setPrefWidth(300);<newline46mondego>    layout.setAlignment(Pos.CENTER);<newline46mondego>    layout.getChildren().addAll(button, response);<newline46mondego>    layout.setStyle(<doubleQuotes46>-fx-background-color: cornsilk; -fx-padding: 20; -fx-font-size: 20;<doubleQuotes46>);<newline46mondego>    stage.setScene(new Scene(layout));<newline46mondego>  }<newline46mondego><newline46mondego>  public static void main(String[] args) { launch(args); }<newline46mondego>}<newline46mondego>// icon license: (creative commons with attribution) http://creativecommons.org/licenses/by-nc-nd/3.0/<newline46mondego>// icon artist attribution page: (eponas-deeway) http://eponas-deeway.deviantart.com/gallery/#/d1s7uih<newline46mondego>"
"175splitHere46","12714742splitHere46","Iterable"
"176splitHere46","12714742splitHere46","public interface SizedIterable<T> extends Iterable<T> {<newline46mondego>    int size();<newline46mondego>}<newline46mondego>"
"177splitHere46","12714744splitHere46","public static double table_round(double n, int digits) {<newline46mondego>    return BigDecimal.valueOf(n).setScale(digits,BigDecimal.ROUND_HALF_UP).doubleValue();<newline46mondego>}<newline46mondego>"
"178splitHere46","12714830splitHere46","context.getContentResolver().query"
"179splitHere46","12714830splitHere46","LoaderManager"
"180splitHere46","12714830splitHere46","public String getRealPathFromURI(Uri contentUri) {<newline46mondego>    String res = null;<newline46mondego>    String[] proj = { MediaStore.Images.Media.DATA };<newline46mondego>    Cursor cursor = getContentResolver().query(contentUri, proj, null, null, null);<newline46mondego>    if(cursor.moveToFirst()){;<newline46mondego>       int column_index = cursor.getColumnIndexOrThrow(MediaStore.Images.Media.DATA);<newline46mondego>       res = cursor.getString(column_index);<newline46mondego>    }<newline46mondego>    cursor.close();<newline46mondego>    return res;<newline46mondego>}<newline46mondego>"
"181splitHere46","12714853splitHere46","DrawingPanel"
"182splitHere46","12714853splitHere46","DrawingPanel"
"183splitHere46","12714853splitHere46","JPanel"
"184splitHere46","12714853splitHere46","DrawingPanel"
"185splitHere46","12714853splitHere46","import Panels.DrawingPanel"
"186splitHere46","12714853splitHere46","import Panels.CoolDrawingPanels.DrawingPanel"
"187splitHere46","12715138splitHere46","public void surfaceCreated(SurfaceHolder holder) {<newline46mondego>    thread.start();<newline46mondego>}<newline46mondego>"
"188splitHere46","12715138splitHere46","public void run() {<newline46mondego><newline46mondego>    try {<newline46mondego>        while (true) {<newline46mondego>            // code here<newline46mondego>        }<newline46mondego>    }<newline46mondego>    catch (InterruptedException e) {<newline46mondego>         //disable stuff here<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"189splitHere46","12715138splitHere46","public void surfaceDestroyed(SurfaceHolder holder) {<newline46mondego>    thread.interrupt();<newline46mondego>}<newline46mondego>"
"190splitHere46","12715247splitHere46","JAXBElement"
"191splitHere46","12715247splitHere46","<xsd:element <newline46mondego>    name=<doubleQuotes46>includeAllSubaccounts<doubleQuotes46> type=<doubleQuotes46>xsd:boolean<doubleQuotes46> nillable=<doubleQuotes46>true<doubleQuotes46> minOccurs=<doubleQuotes46>0<doubleQuotes46>/><newline46mondego>"
"192splitHere46","12715247splitHere46","boolean"
"193splitHere46","12715247splitHere46","boolean"
"194splitHere46","12715247splitHere46","null"
"195splitHere46","12715247splitHere46","Boolean"
"196splitHere46","12715247splitHere46","xsi:nil"
"197splitHere46","12715247splitHere46","package forum12713373;<newline46mondego><newline46mondego>import javax.xml.bind.JAXBElement;<newline46mondego>import javax.xml.bind.annotation.*;<newline46mondego><newline46mondego>@XmlRootElement<newline46mondego>@XmlAccessorType(XmlAccessType.FIELD)<newline46mondego>public class Foo {<newline46mondego><newline46mondego>    @XmlElementRef(name=<doubleQuotes46>absent<doubleQuotes46>)<newline46mondego>    JAXBElement<Boolean> absent;<newline46mondego><newline46mondego>    @XmlElementRef(name=<doubleQuotes46>setToNull<doubleQuotes46>)<newline46mondego>    JAXBElement<Boolean> setToNull;<newline46mondego><newline46mondego>    @XmlElementRef(name=<doubleQuotes46>setToValue<doubleQuotes46>)<newline46mondego>    JAXBElement<Boolean> setToValue;<newline46mondego><newline46mondego>}<newline46mondego>"
"198splitHere46","12715247splitHere46","package forum12713373;<newline46mondego><newline46mondego>import javax.xml.bind.JAXBElement;<newline46mondego>import javax.xml.bind.annotation.*;<newline46mondego>import javax.xml.namespace.QName;<newline46mondego><newline46mondego>@XmlRegistry<newline46mondego>public class ObjectFactory {<newline46mondego><newline46mondego>    @XmlElementDecl(name=<doubleQuotes46>absent<doubleQuotes46>)<newline46mondego>    public JAXBElement<Boolean> createAbsent(Boolean value) {<newline46mondego>        return new JAXBElement(new QName(<doubleQuotes46>absent<doubleQuotes46>), Boolean.class, value);<newline46mondego>    }<newline46mondego><newline46mondego>    @XmlElementDecl(name=<doubleQuotes46>setToNull<doubleQuotes46>)<newline46mondego>    public JAXBElement<Boolean> createSetToNull(Boolean value) {<newline46mondego>        return new JAXBElement(new QName(<doubleQuotes46>setToNull<doubleQuotes46>), Boolean.class, value);<newline46mondego>    }<newline46mondego><newline46mondego>    @XmlElementDecl(name=<doubleQuotes46>setToValue<doubleQuotes46>)<newline46mondego>    public JAXBElement<Boolean> createSetToValue(Boolean value) {<newline46mondego>        return new JAXBElement(new QName(<doubleQuotes46>setToValue<doubleQuotes46>), Boolean.class, value);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"199splitHere46","12715247splitHere46","package forum12713373;<newline46mondego><newline46mondego>import javax.xml.bind.*;<newline46mondego><newline46mondego>public class Demo {<newline46mondego><newline46mondego>    public static void main(String[] args) throws Exception {<newline46mondego>        JAXBContext jc = JAXBContext.newInstance(Foo.class);<newline46mondego><newline46mondego>        ObjectFactory objectFactory = new ObjectFactory();<newline46mondego><newline46mondego>        Foo foo = new Foo();<newline46mondego>        foo.absent = null;<newline46mondego>        foo.setToNull = objectFactory.createSetToNull(null);<newline46mondego>        foo.setToValue = objectFactory.createSetToValue(false);<newline46mondego><newline46mondego>        Marshaller marshaller = jc.createMarshaller();<newline46mondego>        marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);<newline46mondego>        marshaller.marshal(foo, System.out);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"200splitHere46","12715247splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46> standalone=<doubleQuotes46>yes<doubleQuotes46>?><newline46mondego><foo><newline46mondego>    <setToNull xmlns:xsi=<doubleQuotes46>http://www.w3.org/2001/XMLSchema-instance<doubleQuotes46> xsi:nil=<doubleQuotes46>true<doubleQuotes46>/><newline46mondego>    <setToValue>false</setToValue><newline46mondego></foo><newline46mondego>"
"201splitHere46","12715401splitHere46","@Entity<newline46mondego>@Table(name = <doubleQuotes46>role_to_user<doubleQuotes46>)<newline46mondego>public class RoleAssignment {<newline46mondego><newline46mondego>    @ManyToOne<newline46mondego>    private User user;<newline46mondego><newline46mondego>    @ManyToOne<newline46mondego>    private Role role;<newline46mondego><newline46mondego>    private Date startDate;<newline46mondego><newline46mondego>    private Date endDate;<newline46mondego><newline46mondego>}<newline46mondego>"
"202splitHere46","12715401splitHere46","User"
"203splitHere46","12715401splitHere46","@ManyToMany()<newline46mondego>private Set<RoleAssignment> roles = new HashSet<>();<newline46mondego>"
"204splitHere46","12715401splitHere46","User"
"205splitHere46","12715401splitHere46","Role"
"206splitHere46","12715510splitHere46","Collection<? extends T> c"
"207splitHere46","12715510splitHere46","unmodifiableCollection"
"208splitHere46","12715510splitHere46","synchronizedCollection"
"209splitHere46","12715510splitHere46","Collection<T> c"
"210splitHere46","12715569splitHere46","Matrix4* Matrix4::FindInverse(Matrix4 &a){<newline46mondego><newline46mondego>int n = R;<newline46mondego>int i = 0;<newline46mondego>int j = 0;<newline46mondego>float pivot = 0;<newline46mondego>Matrix4* invA = NULL;<newline46mondego>//TODO: Check whether the matrix is invertible.Else Return<newline46mondego>invA = new Matrix4();<newline46mondego>invA->SetMatrix4(1,0,0,0, 0,1,0,0, 0,0,1,0, 0,0,0,1);<newline46mondego><newline46mondego><newline46mondego>for(i = 0; i < n; i++){<newline46mondego>    pivot = a.v[i][i];<newline46mondego><newline46mondego>    if(pivot != 1.0 and pivot != 0){<newline46mondego>        for(int t = i; t < n; t++){<newline46mondego>            a.v[i][t] = a.v[i][t]/pivot;<newline46mondego>            invA->v[i][t] = invA->v[i][t]/pivot;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    //Update to the new pivot which must be 1.0<newline46mondego>    pivot = a.v[i][i];<newline46mondego><newline46mondego>    for(j = 0; j < n; j++){<newline46mondego>        if( j==i ){<newline46mondego>            continue;<newline46mondego><newline46mondego>        }<newline46mondego>        else{<newline46mondego>            float l = a.v[j][i]/pivot;<newline46mondego>            for(int m = 0; m < n; m++){<newline46mondego>                a.v[j][m] = a.v[j][m] - l * a.v[i][m];<newline46mondego>                invA->v[j][m] = invA->v[j][m] - (l * invA->v[i][m]);<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>return invA;<newline46mondego>"
"211splitHere46","12715619splitHere46","android.R.layout.simple_list_item_2"
"212splitHere46","12715619splitHere46","TwoLineListItem"
"213splitHere46","12715619splitHere46","TextViews"
"214splitHere46","12715619splitHere46","TextView"
"215splitHere46","12715619splitHere46","logcat"
"216splitHere46","12715619splitHere46","TextView"
"217splitHere46","12715619splitHere46","findViewById"
"218splitHere46","12715619splitHere46","String itemSelected = ((TextView) view.findViewById(android.R.id.text2)).getText().toString();<newline46mondego>"
"219splitHere46","12715682splitHere46","Seq"
"220splitHere46","12715682splitHere46","import java.util.LinkedHashMap<newline46mondego>import scala.collection.JavaConversions.mapAsScalaMap<newline46mondego><newline46mondego>object App{<newline46mondego>  implicit def wrapLhm[K,V,G](i:LinkedHashMap[K,LinkedHashMap[G,V]]):LHMWrapper[K,V,G] = new LHMWrapper[K,V,G](i)<newline46mondego><newline46mondego>  def main(args: Array[String]){<newline46mondego>    println(<doubleQuotes46>Hello World!<doubleQuotes46>)<newline46mondego>    val lhm = new LinkedHashMap[String, LinkedHashMap[String,String]]()<newline46mondego>    val inner = new LinkedHashMap[String,String]()<newline46mondego>    inner.put(<doubleQuotes46>one<doubleQuotes46>, <doubleQuotes46>one<doubleQuotes46>)<newline46mondego>    lhm.put(<doubleQuotes46>outer<doubleQuotes46>,inner);<newline46mondego>    val s = lhm.getSeq()<newline46mondego>    println(s.toString())<newline46mondego>  }<newline46mondego>  class LHMWrapper[K,V,G](value: LinkedHashMap[K,LinkedHashMap[G,V]]){<newline46mondego>    def getSeq():Seq[ (K, Seq[(G,V)])] = mapAsScalaMap(value).mapValues(mapAsScalaMap(_).toSeq).toSeq<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"221splitHere46","12715735splitHere46","DualList"
"222splitHere46","12715735splitHere46","Table"
"223splitHere46","12715735splitHere46","List"
"224splitHere46","12715735splitHere46","Composite(GridLayout, 3 columns)<newline46mondego>|<newline46mondego>|- First List/Table<newline46mondego>|<newline46mondego>|- Composite(GridLayout, 1 column)<newline46mondego>|  |- Button add<newline46mondego>|  |- Button delete<newline46mondego>|<newline46mondego>|- Second List/Table<newline46mondego>"
"225splitHere46","12715760splitHere46","OutputStream"
"226splitHere46","12715760splitHere46","OutputStream"
"227splitHere46","12715760splitHere46","InputStream"
"228splitHere46","12715760splitHere46","InputStream"
"229splitHere46","12715760splitHere46","OutputStream"
"230splitHere46","12715760splitHere46","InputStream"
"231splitHere46","12715760splitHere46","Client                                                     Server<newline46mondego><newline46mondego>1. OutputStream -->\                                   /--> 2. InputStream --><newline46mondego>                    Socket<--->network<--->ServerSocket                       |<newline46mondego>4. InputStream <--/                                    \<--3. OutputStream <--<newline46mondego>"
"232splitHere46","12715776splitHere46","public static void main(String[] args) throws IOException, TransformationException {<newline46mondego>    Map<String, Map<String, Integer>> actions = new HashMap<String, Map<String, Integer>>();<newline46mondego>    Genson genson = new Genson();<newline46mondego><newline46mondego>    ObjectReader reader = genson.createReader(new FileReader(<doubleQuotes46>path/to/the/file<doubleQuotes46>));<newline46mondego>    while(reader.hasNext()) {<newline46mondego>        reader.next();<newline46mondego>        reader.beginObject();<newline46mondego>        String action = readUntil(<doubleQuotes46>action<doubleQuotes46>, reader);<newline46mondego>        // assuming the next name/value pair is responsecode<newline46mondego>        reader.next();<newline46mondego>        String responseCode = reader.valueAsString();<newline46mondego>        Map<String, Integer> countMap = actions.get(action);<newline46mondego>        if (countMap == null) {<newline46mondego>            countMap = new HashMap<String, Integer>();<newline46mondego>            actions.put(action, countMap);<newline46mondego>        }<newline46mondego><newline46mondego>        Integer count = countMap.get(responseCode);<newline46mondego>        if (count == null) {<newline46mondego>            count = 0;<newline46mondego>        }<newline46mondego>        count++;<newline46mondego>        countMap.put(responseCode, count);<newline46mondego><newline46mondego>        reader.endObject();<newline46mondego>    }<newline46mondego><newline46mondego>    // for example if you had 2 different response codes for same action it will print<newline46mondego>    // {<doubleQuotes46>Some_Action<doubleQuotes46>:{<doubleQuotes46>1001<doubleQuotes46>:1,<doubleQuotes46>1000<doubleQuotes46>:1}}<newline46mondego>    String json = genson.serialize(actions);<newline46mondego>}<newline46mondego><newline46mondego>static String readUntil(String name, ObjectReader reader) throws IOException {<newline46mondego>    while(reader.hasNext()) {<newline46mondego>        reader.next();<newline46mondego>        if (name.equals(reader.name())) {<newline46mondego>            return reader.valueAsString();<newline46mondego>        }<newline46mondego>    }<newline46mondego>    throw new IllegalStateException();<newline46mondego>}<newline46mondego>"
"233splitHere46","12715878splitHere46","1       is 1<newline46mondego>11      is 2<newline46mondego>111     is 3<newline46mondego>1111    is 4<newline46mondego>11111   is 5<newline46mondego>111111  is 6<newline46mondego>1111111 is 7<newline46mondego>"
"234splitHere46","12715878splitHere46","."
"235splitHere46","12715878splitHere46",".?<newline46mondego>"
"236splitHere46","12715878splitHere46","?"
"237splitHere46","12715878splitHere46","char[9000]"
"238splitHere46","12715978splitHere46","private volatile boolean stop = false;<newline46mondego>"
"239splitHere46","12715978splitHere46","public voic kill() {<newline46mondego>    stop = true;<newline46mondego>    serverSocket.close();<newline46mondego>}<newline46mondego>"
"240splitHere46","12715978splitHere46","try {<newline46mondego>   //accept server socket<newline46mondego>} catch(IOException e) {<newline46mondego>    if(stop)<newline46mondego>        return;<newline46mondego>    e.printStackTrace();<newline46mondego>}<newline46mondego>"
"241splitHere46","12715978splitHere46","while(!stop) { ...<newline46mondego>"
"242splitHere46","12715978splitHere46","threadHandler = new ThreadPoolExecutor( maxThreads, maxThreads, 1, TimeUnit.MINUTES,<newline46mondego>            new ArrayBlockingQueue<Runnable>( maxThreads, true ) );<newline46mondego>    while (!serverTerminated) {<newline46mondego>        try {<newline46mondego>            final Socket connectionSocket = serversocket.accept();<newline46mondego>            SocketHandler handler = new SocketHandler( this, connectionSocket );<newline46mondego>            threadHandler.submit( handler );<newline46mondego>        } catch (IOException e) {<newline46mondego>            if (!serverTerminated)<newline46mondego>                e.printStackTrace();<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"243splitHere46","12716123splitHere46","File.separator"
"244splitHere46","12716123splitHere46","/"
"245splitHere46","12716286splitHere46","public double deductMonthlyCharge()<newline46mondego>{<newline46mondego>    int transCount = Math.max(transactionCount, freeTransactions);<newline46mondego>    double fee = 1.00 * (transCount - freeTransactions);<newline46mondego>    return fee;<newline46mondego>}<newline46mondego>"
"246splitHere46","12716286splitHere46","(transCount - freeTransactions)"
"247splitHere46","12716286splitHere46","public double deductMonthlyCharge()<newline46mondego>{<newline46mondego>    if (transactionCount > freeTransactions) {<newline46mondego>        return 1.00 * (transactionCount - freeTransactions);<newline46mondego>    }<newline46mondego>    return 0.0;<newline46mondego>}<newline46mondego>"
"248splitHere46","12716299splitHere46","validInput"
"249splitHere46","12716299splitHere46","true"
"250splitHere46","12716299splitHere46","number"
"251splitHere46","12716299splitHere46","randomNumber"
"252splitHere46","12716299splitHere46","continueGame"
"253splitHere46","12716299splitHere46","validInput"
"254splitHere46","12716299splitHere46","validInput"
"255splitHere46","12716299splitHere46","number"
"256splitHere46","12716299splitHere46","while (validInput == false)"
"257splitHere46","12716299splitHere46","while (!validInput)"
"258splitHere46","12716311splitHere46","import org.codehaus.jackson.map.DeserializationConfig.Feature;<newline46mondego>  ....<newline46mondego>  ObjectMapper mapper = new ObjectMapper();<newline46mondego>  // tell it to not fail on properties that you don't have mapped, that way you<newline46mondego>  // only have to map the fields you are interested in and can ignore the rest<newline46mondego>  mapper.getDeserializationConfig().set(Feature.FAIL_ON_UNKNOWN_PROPERTIES, false);<newline46mondego>  ItemContainer itemContainer = mapper.readValue(facebookDataJsonString, ItemContainer.class);<newline46mondego><newline46mondego>  // where elsewhere you have defined something like:<newline46mondego><newline46mondego>  class ItemContainer {<newline46mondego>    List<FacebookItem> data;<newline46mondego>    // getters and setters for data.<newline46mondego>  }<newline46mondego>"
"259splitHere46","12716311splitHere46","[{...},{...}]"
"260splitHere46","12716311splitHere46","ObjectMapper mapper = new ObjectMapper();<newline46mondego>  // tell it to not fail on properties that you don't have mapped, that way you<newline46mondego>  // only have to map the fields you are interested in and can ignore the rest<newline46mondego>  mapper.getDeserializationConfig().set(Feature.FAIL_ON_UNKNOWN_PROPERTIES, false);<newline46mondego>  List<FacebookItem> items = mapper.readValue(jsonString, new TypeReference<List<Stuff>>(){});<newline46mondego>"
"261splitHere46","12716311splitHere46","ObjectMapper mapper = new ObjectMapper();<newline46mondego>  Map<String, Object> container = mapper.readValue(facebookDataJsonString, Map.class);<newline46mondego>  List<Map<String,Object>> = container.get(<doubleQuotes46>data<doubleQuotes46>);<newline46mondego>  for (Map<String,Object> map : container ) {<newline46mondego>    System.out.println( <doubleQuotes46>type is <doubleQuotes46> + map.get(<doubleQuotes46>type<doubleQuotes46>));<newline46mondego>    System.out.println( <doubleQuotes46>from is <doubleQuotes46> + ((Map<String,Object>)map.get(<doubleQuotes46>from<doubleQuotes46>)).get(<doubleQuotes46>name<doubleQuotes46>));<newline46mondego>    System.out.println( <doubleQuotes46>message is <doubleQuotes46> + map.get(<doubleQuotes46>message<doubleQuotes46>));<newline46mondego>  }<newline46mondego>"
"262splitHere46","12716336splitHere46","setLayoutData()"
"263splitHere46","12716336splitHere46","GridData"
"264splitHere46","12716336splitHere46","setData()"
"265splitHere46","12716336splitHere46","Text inputField = new Text(shell, SWT.BORDER);<newline46mondego>GridData data =  new GridData();<newline46mondego>data.horizontalAlignment = SWT.FILL;<newline46mondego>data.grabExcessHorizontalSpace = true;<newline46mondego>inputField.setLayoutData(data);<newline46mondego>"
"266splitHere46","12716336splitHere46","GridData.FILL"
"267splitHere46","12716336splitHere46","SWT.FILL"
"268splitHere46","12716376splitHere46","public BufferedImage loadImage(String filePath){<newline46mondego>    RenderedOp img = JAI.create(<doubleQuotes46>fileload<doubleQuotes46>, filePath);<newline46mondego>    return img.getAsBufferedImage();<newline46mondego>}<newline46mondego>"
"269splitHere46","12716376splitHere46","<doubleQuotes46>fileload<doubleQuotes46>"
"270splitHere46","12716376splitHere46","JAI.create()"
"271splitHere46","12716376splitHere46","fileName"
"272splitHere46","12716376splitHere46","<doubleQuotes46>fileload<doubleQuotes46>"
"273splitHere46","12716456splitHere46","private static void saveExcelFile(HtmlUnitDriver driver)  {<newline46mondego>    Method m = driver.getClass().getDeclaredMethod(<doubleQuotes46>lastPage<doubleQuotes46>, null);<newline46mondego>    m.setAccessible(true);<newline46mondego>    Object obj = m.invoke(driver, null);<newline46mondego><newline46mondego>    Page page = (Page) obj;<newline46mondego><newline46mondego>    InputStream stream = page.getWebResponse().getContentAsStream();<newline46mondego><newline46mondego>    FileOutputStream fos = new FileOutputStream(<doubleQuotes46>d:/load.xls<doubleQuotes46>);<newline46mondego><newline46mondego>    int c;<newline46mondego><newline46mondego>    while ((c = stream.read()) != -1) {<newline46mondego>        fos.write(c);<newline46mondego>    }<newline46mondego><newline46mondego>    fos.close();<newline46mondego>}<newline46mondego>"
"274splitHere46","12716617splitHere46","public class ProducerComsumer {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        new ProducerComsumer();<newline46mondego>    }<newline46mondego><newline46mondego>    public ProducerComsumer() {<newline46mondego>        EventQueue.invokeLater(new Runnable() {<newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego><newline46mondego>                JPanel panel = new JPanel(new GridBagLayout());<newline46mondego>                panel.setBorder(new EmptyBorder(12, 12, 12, 12));<newline46mondego><newline46mondego>                JProgressBar progressBar = new JProgressBar();<newline46mondego>                panel.add(progressBar);<newline46mondego><newline46mondego>                JFrame frame = new JFrame();<newline46mondego>                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>                frame.setLayout(new BorderLayout());<newline46mondego>                frame.add(panel);<newline46mondego>                frame.pack();<newline46mondego>                frame.setLocationRelativeTo(null);<newline46mondego>                frame.setVisible(true);<newline46mondego><newline46mondego>                Producer producer = new Producer();<newline46mondego>                producer.start();<newline46mondego><newline46mondego>                Consumer consumer = new Consumer(producer, progressBar);<newline46mondego>                consumer.start();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>    public class Producer extends Thread {<newline46mondego><newline46mondego>        private volatile float progress;<newline46mondego>        private volatile boolean done;<newline46mondego><newline46mondego>        public Producer() {<newline46mondego>            setPriority(NORM_PRIORITY - 1);<newline46mondego>            setDaemon(true);<newline46mondego>        }<newline46mondego><newline46mondego>        public float getProgress() {<newline46mondego>            return progress;<newline46mondego>        }<newline46mondego><newline46mondego>        public boolean isDone() {<newline46mondego>            return done;<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void run() {<newline46mondego>            done = false;<newline46mondego>            for (int index = 0; index < Integer.MAX_VALUE; index++) {<newline46mondego>                progress = (float) index / (float) Integer.MAX_VALUE;<newline46mondego>            }<newline46mondego>            done = true;<newline46mondego>            System.out.println(<doubleQuotes46>All done...<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public class Consumer extends Thread {<newline46mondego><newline46mondego>        private Producer producer;<newline46mondego>        private JProgressBar progressBar;<newline46mondego><newline46mondego>        public Consumer(Producer producer, JProgressBar progressBar) {<newline46mondego>            setDaemon(true);<newline46mondego>            setPriority(NORM_PRIORITY - 1);<newline46mondego>            this.producer = producer;<newline46mondego>            this.progressBar = progressBar;<newline46mondego>        }<newline46mondego><newline46mondego>        public JProgressBar getProgressBar() {<newline46mondego>            return progressBar;<newline46mondego>        }<newline46mondego><newline46mondego>        public Producer getProducer() {<newline46mondego>            return producer;<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void run() {<newline46mondego>            while (!producer.isDone()) {<newline46mondego>                updateProgress();<newline46mondego>                try {<newline46mondego>                    sleep(1000);<newline46mondego>                } catch (InterruptedException ex) {<newline46mondego>                    Logger.getLogger(ProducerComsumer.class.getName()).log(Level.SEVERE, null, ex);<newline46mondego>                }<newline46mondego>            }<newline46mondego>            updateProgress();<newline46mondego>        }<newline46mondego><newline46mondego>        protected void updateProgress() {<newline46mondego>            SwingUtilities.invokeLater(new Runnable() {<newline46mondego>                @Override<newline46mondego>                public void run() {<newline46mondego>                    int progress = Math.round(getProducer().getProgress() * 100f);<newline46mondego>                    System.out.println(<doubleQuotes46>Update progress to <doubleQuotes46> + progress);<newline46mondego>                    getProgressBar().setValue(progress);<newline46mondego>                }<newline46mondego>            });<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"275splitHere46","12716617splitHere46","Thread.setPriority"
"276splitHere46","12716655splitHere46","//extend prameterized version of ConnectionProcessor<T> with Album as actual type argument<newline46mondego>public class AlbumProcessor extends ConnectionProcessor<Album> {<newline46mondego>"
"277splitHere46","12716655splitHere46","public class AlbumProcessor<Album> extends ConnectionProcessor {<newline46mondego>"
"278splitHere46","12716655splitHere46","ConnectionProcessor<T>"
"279splitHere46","12716655splitHere46","Album"
"280splitHere46","12716655splitHere46","T"
"281splitHere46","12716656splitHere46","@JsonCreator<newline46mondego>public Pair(@JsonProperty(<doubleQuotes46>key<doubleQuotes46>) K k,<newline46mondego>   @JsonProperty(<doubleQuotes46>value<doubleQuotes46>) V v) {<newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"282splitHere46","12716656splitHere46","@JsonCreator<newline46mondego>public Pair(Map<String,String> json)<newline46mondego>{<newline46mondego>   Map.Entry<String,String> en = json.entrySet().iterator().next();<newline46mondego>   key = en.getKey();<newline46mondego>   value = en.getValue();<newline46mondego>}<newline46mondego><newline46mondego>@JsonValue<newline46mondego>public Map<String,String> asMap() {<newline46mondego>  Map<String,String> m = new HashMap<String,String>();<newline46mondego>  m.put(key, value);<newline46mondego>  return m;<newline46mondego>}<newline46mondego>"
"283splitHere46","12716763splitHere46","Map"
"284splitHere46","12716763splitHere46","MIN"
"285splitHere46","12716763splitHere46","MAX"
"286splitHere46","12716763splitHere46","AVERAGE"
"287splitHere46","12716763splitHere46","public class APIData {<newline46mondego><newline46mondego>    private double min;<newline46mondego>    private double max;<newline46mondego>    private double average;<newline46mondego>    private int amount;<newline46mondego><newline46mondego>    public void addValues(double[] values) {<newline46mondego>        min += values[0];<newline46mondego>        max += values[1];<newline46mondego>        average += values[2];<newline46mondego>        amount++;<newline46mondego>    }<newline46mondego><newline46mondego>    public double getAPIMin() {<newline46mondego>        return min / amount;<newline46mondego>    }<newline46mondego><newline46mondego>    public double getAPIMax() {<newline46mondego>        return max / amount;<newline46mondego>    }<newline46mondego><newline46mondego>    public double getAPIAverage() {<newline46mondego>        return average / amount;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"288splitHere46","12716763splitHere46","Map<String,APIData> averagePerAPI = new LinkedHashMap<String,int[]>();<newline46mondego>"
"289splitHere46","12716763splitHere46","double"
"290splitHere46","12716763splitHere46","{MIN, MAX, AVERAGE}"
"291splitHere46","12716763splitHere46","registerAPI"
"292splitHere46","12716763splitHere46","public void registerAPI(String apiName, double[] apiValues) {<newline46mondego>    if(!averagePerAPI.containsKey(apiName)) {<newline46mondego>        APIData data = new APIData();<newline46mondego>        data.addValues(apiValues)<newline46mondego>        averagePerAPI.put(apiName, data);<newline46mondego>    } else {<newline46mondego>        averagePerAPI.get(apiName).addValues(apiValues);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"293splitHere46","12716763splitHere46","getAPIMin()"
"294splitHere46","12716763splitHere46","getAPIMax()"
"295splitHere46","12716763splitHere46","getAPIAverage()"
"296splitHere46","12716895splitHere46","List1"
"297splitHere46","12716895splitHere46","public class List1<T> implements List<T> {<newline46mondego>...<newline46mondego>"
"298splitHere46","12716895splitHere46","List"
"299splitHere46","12716895splitHere46","List"
"300splitHere46","12716895splitHere46","List"
"301splitHere46","12717186splitHere46","DOM.sinkEvents"
"302splitHere46","12717186splitHere46","Label label = new Label();<newline46mondego>label.addDomHandler(new MouseOverHandler() {<newline46mondego>  @Override<newline46mondego>  public void onMouseOver(MouseOverEvent event) {<newline46mondego>    // do something<newline46mondego>  }<newline46mondego>}, MouseOverEvent.getType());<newline46mondego>RootPanel.get().add(label);<newline46mondego>"
"303splitHere46","12717186splitHere46","HasClickHandlers"
"304splitHere46","12717186splitHere46","Button button = new Button();<newline46mondego>button.addClickHandler(new ClickHandler() {<newline46mondego>  @Override<newline46mondego>  public void onClick(ClickEvent event) {<newline46mondego>    // do something<newline46mondego>  }<newline46mondego>});<newline46mondego>panel.add(button);<newline46mondego>"
"305splitHere46","12717207splitHere46","AtomicReference<Collection<SomeObject>>"
"306splitHere46","12717207splitHere46","reference.put(collection)"
"307splitHere46","12717207splitHere46","reference.get()"
"308splitHere46","12717207splitHere46","AtomicReference"
"309splitHere46","12717207splitHere46","AtomicReference"
"310splitHere46","12717207splitHere46","List"
"311splitHere46","12717207splitHere46","AtomicReference"
"312splitHere46","12717207splitHere46","ConcurrentHashMap"
"313splitHere46","12717287splitHere46","ExecutorService"
"314splitHere46","12717338splitHere46","TimeLimiter"
"315splitHere46","12717338splitHere46","Future"
"316splitHere46","12717338splitHere46","SimpleTimeLimiter"
"317splitHere46","12717338splitHere46","Future"
"318splitHere46","12717481splitHere46","String"
"319splitHere46","12717481splitHere46","<doubleQuotes46><doubleQuotes46>"
"320splitHere46","12717481splitHere46","String s = <doubleQuotes46>Hello<doubleQuotes46>; // just syntactic sugar<newline46mondego>String s = new String(<doubleQuotes46>Hello<doubleQuotes46>);<newline46mondego>"
"321splitHere46","12717481splitHere46","<doubleQuotes46><doubleQuotes46>"
"322splitHere46","12717481splitHere46","new String(<doubleQuotes46><doubleQuotes46>)"
"323splitHere46","12717488splitHere46","=="
"324splitHere46","12717488splitHere46",".equals()"
"325splitHere46","12717488splitHere46",".equals()"
"326splitHere46","12717488splitHere46","=="
"327splitHere46","12717488splitHere46","new String(<doubleQuotes46>test<doubleQuotes46>) == <doubleQuotes46>test<doubleQuotes46><newline46mondego>"
"328splitHere46","12717488splitHere46","false"
"329splitHere46","12717488splitHere46",".equals()"
"330splitHere46","12717488splitHere46","hashcode()"
"331splitHere46","12717568splitHere46",".app"
"332splitHere46","12717568splitHere46","Console.app"
"333splitHere46","12717568splitHere46","syslog -C"
"334splitHere46","12717859splitHere46","InputStream.read"
"335splitHere46","12717859splitHere46","byteArray.length"
"336splitHere46","12717859splitHere46","int bytesRead = 0;<newline46mondego>while (true) {<newline46mondego>    int n = is.read(byteArray, bytesRead, byteArray.length);<newline46mondego>    if (n == -1) break;<newline46mondego>    bytesRead += n;<newline46mondego>}<newline46mondego>"
"337splitHere46","12717863splitHere46","private void updateMessages(final String sMessage, final String sType)<newline46mondego><newline46mondego>{<newline46mondego>    SwingUtilities.invokeLater( new Runnable() {<newline46mondego>        public void run() {<newline46mondego>            String sMessageHTML=<doubleQuotes46><doubleQuotes46>;<newline46mondego>            String sTypeText=<doubleQuotes46><doubleQuotes46>;<newline46mondego>            if (!sMessage.equals(<doubleQuotes46>\r\n<doubleQuotes46>)){<newline46mondego>                sTypeText = sType+<doubleQuotes46>: <doubleQuotes46>;<newline46mondego>            }<newline46mondego>            sMessageHTML = sMessage.replaceAll(<doubleQuotes46>(\r\n|\n)<doubleQuotes46>, <doubleQuotes46><br/><doubleQuotes46>);<newline46mondego>            if (!sMessageHTML.equals(<doubleQuotes46><br/><doubleQuotes46>))<newline46mondego>            {<newline46mondego>                sMessageHTML =   <doubleQuotes46><SPAN CLASS=<doubleQuotes46>+sType+<doubleQuotes46>><doubleQuotes46>+ sTypeText+sMessageHTML + <doubleQuotes46></SPAN><doubleQuotes46>;<newline46mondego>            }<newline46mondego><newline46mondego>            msgBuffer=msgBuffer.concat( sMessageHTML);<newline46mondego>            editorPane.setText(msgBuffer);<newline46mondego>            if ((editorPane.getDocument()).getLength()>1){<newline46mondego>                editorPane.setCaretPosition((editorPane.getDocument()).getLength()-1);<newline46mondego>            }<newline46mondego>        }<newline46mondego>    });<newline46mondego>}<newline46mondego>"
"338splitHere46","12717937splitHere46","glass.setStyle(<doubleQuotes46>-fx-background-color: rgba(0, 100, 100, 0.5); -fx-background-radius: 10;<doubleQuotes46>);<newline46mondego>"
"339splitHere46","12717937splitHere46","import javafx.application.Application;<newline46mondego>import javafx.geometry.Pos;<newline46mondego>import javafx.scene.Scene;<newline46mondego>import javafx.scene.control.*;<newline46mondego>import javafx.scene.image.*;<newline46mondego>import javafx.scene.layout.*;<newline46mondego>import javafx.stage.Stage;<newline46mondego><newline46mondego>public class TranslucentPane extends Application {<newline46mondego>  @Override public void start(final Stage stage) throws Exception {<newline46mondego>    final ImageView imageView = new ImageView(<newline46mondego>      new Image(<doubleQuotes46>http://upload.wikimedia.org/wikipedia/commons/b/b7/Idylls_of_the_King_3.jpg<doubleQuotes46>)<newline46mondego>    );<newline46mondego>    imageView.setFitHeight(300);<newline46mondego>    imageView.setFitWidth(228);<newline46mondego><newline46mondego>    final Label label = new Label(<doubleQuotes46>Camelot<doubleQuotes46>);<newline46mondego>    label.setStyle(<doubleQuotes46>-fx-text-fill: goldenrod; -fx-font-style: italic; -fx-font-weight: bold; -fx-padding: 0 0 20 0;<doubleQuotes46>);<newline46mondego><newline46mondego>    StackPane glass = new StackPane();<newline46mondego>    StackPane.setAlignment(label, Pos.BOTTOM_CENTER);<newline46mondego>    glass.getChildren().addAll(label);<newline46mondego>    glass.setStyle(<doubleQuotes46>-fx-background-color: rgba(0, 100, 100, 0.5); -fx-background-radius: 10;<doubleQuotes46>);<newline46mondego>    glass.setMaxWidth(imageView.getFitWidth() - 40);<newline46mondego>    glass.setMaxHeight(imageView.getFitHeight() - 40);<newline46mondego><newline46mondego>    final StackPane layout = new StackPane();<newline46mondego>    layout.getChildren().addAll(imageView, glass);<newline46mondego>    layout.setStyle(<doubleQuotes46>-fx-background-color: silver; -fx-font-size: 20; -fx-padding: 10;<doubleQuotes46>);<newline46mondego>    stage.setScene(new Scene(layout));<newline46mondego>    stage.show();<newline46mondego>  }<newline46mondego><newline46mondego>  public static void main(String[] args) { launch(args); }<newline46mondego>}<newline46mondego>"
"340splitHere46","12718045splitHere46","EntityNotFoundException"
"341splitHere46","12718045splitHere46","null"
"342splitHere46","12718045splitHere46","NullPointerException"
"343splitHere46","12718045splitHere46","user"
"344splitHere46","12718045splitHere46","user.getProperty(<doubleQuotes46>password<doubleQuotes46>).toString();<newline46mondego>"
"345splitHere46","12718045splitHere46","if (user != null) {<newline46mondego>   pass = user.getProperty(<doubleQuotes46>password<doubleQuotes46>).toString();<newline46mondego>}<newline46mondego>"
"346splitHere46","12718066splitHere46","UiBinder"
"347splitHere46","12718066splitHere46","UiBinder"
"348splitHere46","12718195splitHere46","URL.getInputStream"
"349splitHere46","12718229splitHere46","JsonObject jo = new JsonObject();<newline46mondego>jo.addProperty(<doubleQuotes46>page<doubleQuotes46>, page);<newline46mondego>jo.addProperty(<doubleQuotes46>total<doubleQuotes46>, totalPageString);<newline46mondego>jo.addProperty(<doubleQuotes46>records<doubleQuotes46>, count);<newline46mondego><newline46mondego>JsonArray jArray = new JsonArray();<newline46mondego>try {<newline46mondego>    while (rs2.next()) {<newline46mondego>        JsonObject row = new JsonObject();<newline46mondego><newline46mondego>        row.addProperty(<doubleQuotes46>id<doubleQuotes46>, rs2.getString(1));<newline46mondego>        row.addProperty(<doubleQuotes46>name<doubleQuotes46>, rs2.getString(2));<newline46mondego>        row.addProperty(<doubleQuotes46>author<doubleQuotes46>, rs2.getString(3));<newline46mondego>        jArray.add(row);<newline46mondego>    }<newline46mondego>    jo.add(<doubleQuotes46>rows<doubleQuotes46>, jArray);<newline46mondego>} catch (SQLException e) {<newline46mondego>    e.printStackTrace();<newline46mondego>}<newline46mondego><newline46mondego>response.setContentType(<doubleQuotes46>application/json<doubleQuotes46>);<newline46mondego>response.getWriter().print(jo);<newline46mondego>"
"350splitHere46","12718229splitHere46","rs2"
"351splitHere46","12718229splitHere46","rows"
"352splitHere46","12718229splitHere46","jArray"
"353splitHere46","12718250splitHere46","mvn test -Dcucumber.options=<doubleQuotes46>--format json-pretty --glue classpath:cucumber/examples/java/helloworld src/test/resources<doubleQuotes46><newline46mondego>"
"354splitHere46","12718474splitHere46","public void enqueue(Dog aDog)<newline46mondego>     {<newline46mondego>         Node dogNode = new Node(aDog);<newline46mondego><newline46mondego>         counter++;<newline46mondego>         if (front == null)<newline46mondego>             front = back = dogNode;<newline46mondego>         else<newline46mondego>         {<newline46mondego>             back.nextNode = dogNode;<newline46mondego>             back = dogNode;<newline46mondego><newline46mondego>         }<newline46mondego>     }<newline46mondego>  public Node dequeue()      <newline46mondego>  {<newline46mondego>      if(front == null) return null;<newline46mondego>      Dog firstDog = front ;<newline46mondego>      front = front.nextNode;<newline46mondego>      counter--;<newline46mondego>      return firstDog;<newline46mondego>  }<newline46mondego>"
"355splitHere46","12718688splitHere46","import java.io.IOException;<newline46mondego>import java.io.PrintWriter;<newline46mondego>import java.net.InetAddress;<newline46mondego>import java.net.Socket;<newline46mondego>import java.util.Scanner;<newline46mondego><newline46mondego><newline46mondego>public class Client {<newline46mondego><newline46mondego>    public final static int portNumber = 6040;<newline46mondego>    public static Socket socket;<newline46mondego>    private static PrintWriter pw;<newline46mondego>    private static Scanner input;<newline46mondego>    /**<newline46mondego>     * @param args<newline46mondego>     * @throws IOException <newline46mondego>     */<newline46mondego>    public static void connect() throws IOException{<newline46mondego><newline46mondego><newline46mondego>        // du kan vælge at bruge inetadressen til at connecte i socketet.<newline46mondego>        InetAddress adr = InetAddress.getByName(<doubleQuotes46>localhost<doubleQuotes46>);<newline46mondego>        socket = new Socket(<doubleQuotes46>localhost<doubleQuotes46>, portNumber);<newline46mondego>        input=new Scanner(socket.getInputStream());<newline46mondego>        pw = new PrintWriter(socket.getOutputStream());<newline46mondego>        pw.println(<doubleQuotes46>Connected waiting for input<doubleQuotes46>);<newline46mondego>        pw.flush();<newline46mondego><newline46mondego>    }<newline46mondego>    /**<newline46mondego>     * This method sends the message (that the client(chat person) writes to the user)<newline46mondego>     * @param x<newline46mondego>     * @throws NullPointerException<newline46mondego>     * @throws IOException <newline46mondego>     */<newline46mondego>    public void SendChat(String x) throws NullPointerException{<newline46mondego>            pw.print(x);<newline46mondego>            pw.flush(); <newline46mondego><newline46mondego><newline46mondego>    }<newline46mondego>    public int sendCommando(int id) throws IOException{<newline46mondego>        pw.print(id);<newline46mondego>        pw.flush();<newline46mondego>        /*<newline46mondego>         * this part of the program sends a command to the server if the command is 1 then 1 is = Connect.<newline46mondego>         * the program then ask the server is the server is full or is it ok to connect? <newline46mondego>         * if the response is not 10 then the program will allow a connection to happen the return type will be the Id of which <newline46mondego>         * the chat person becomes!<newline46mondego>         */<newline46mondego><newline46mondego>        // should the method return 0 the Application will do NOTHING!<newline46mondego>        switch (id) {<newline46mondego>        case 1:<newline46mondego>    int k = reciveCommando();<newline46mondego>            if (k== 10) {<newline46mondego>                return 10;<newline46mondego>            }else if (k < 3) {<newline46mondego>                System.out.println(<doubleQuotes46>returned k<doubleQuotes46> + k);<newline46mondego>                return k;<newline46mondego>            }else {<newline46mondego><newline46mondego>            return 10;<newline46mondego>            }<newline46mondego>            /*<newline46mondego>             * Closes the connection with the server!<newline46mondego>             */<newline46mondego>        case 3:<newline46mondego><newline46mondego>            socket.close();<newline46mondego>            return 0;<newline46mondego><newline46mondego>        default:<newline46mondego>            return 0;<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego>    /*<newline46mondego>     * this method recives a command from the server! the comands can be found in the ChatCommands.txt<newline46mondego>     * returns the command as an integer!<newline46mondego>     */<newline46mondego>    public int reciveCommando() throws IOException{<newline46mondego>        Integer i = input.nextInt();<newline46mondego>        return i;<newline46mondego>    }<newline46mondego>    /**<newline46mondego>     * Gets a String response from the server. This method i used to create other users and give them the correct username.<newline46mondego>     * <newline46mondego>     * @param i<newline46mondego>     * @return<newline46mondego>     * @throws IOException<newline46mondego>     */<newline46mondego>    public String getStringResponse(int i) throws IOException {<newline46mondego>        pw.print(i);<newline46mondego>        pw.flush();<newline46mondego>        String x = input.nextLine();<newline46mondego>        return x;<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>}<newline46mondego>"
"356splitHere46","12718762splitHere46","prompt> javac -classpath .;$JUNIT_HOME\junit4.x.x.jar test.java"
"357splitHere46","12718762splitHere46","1. Unzip the junit.zip distribution file to a directory referred to as %JUNIT_HOME%.<newline46mondego><newline46mondego>2. Add JUnit to the classpath (type the following into a command line shell): `set CLASSPATH=%CLASSPATH%;%JUNIT_HOME%\junit.jar`<newline46mondego>"
"358splitHere46","12718762splitHere46","1. Unzip the junit.zip distribution file to a directory referred to as $JUNIT_HOME.<newline46mondego><newline46mondego>2. Add JUnit to the classpath (type the following into terminal):<newline46mondego><newline46mondego>`export CLASSPATH=$CLASSPATH:$JUNIT_HOME/junit.jar`<newline46mondego>"
"359splitHere46","12718792splitHere46","import java.util.Vector;<newline46mondego><newline46mondego>interface Vehicle {<newline46mondego>    public int getNumberOfWheels();<newline46mondego>}<newline46mondego><newline46mondego>class Car implements Vehicle {<newline46mondego><newline46mondego>    final int numberOfWheels = 4;<newline46mondego><newline46mondego>    public int getNumberOfWheels() {<newline46mondego>        return numberOfWheels;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class Bicycle implements Vehicle {<newline46mondego><newline46mondego>    final int numberOfWheels = 2;<newline46mondego><newline46mondego>    public int getNumberOfWheels() {<newline46mondego>        return numberOfWheels;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public class Program {<newline46mondego><newline46mondego>    public static void main(String args[]) {<newline46mondego>        Vector<Vehicle> vi = new Vector<Vehicle>();<newline46mondego>        vi.add(0, new Car());<newline46mondego>        vi.add(1, new Bicycle());<newline46mondego>        for(Vehicle v: vi) {<newline46mondego>            System.out.println(v.getClass().getName() <newline46mondego>                + <doubleQuotes46> has <doubleQuotes46> + v.getNumberOfWheels() + <doubleQuotes46> wheels<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"360splitHere46","12718811splitHere46","frame.send.addActionListener(...)"
"361splitHere46","12718811splitHere46","public interface Sender {<newline46mondego>    public void sendMessage(String message); // Or what ever parameter you want...<newline46mondego>}<newline46mondego>"
"362splitHere46","12718811splitHere46","Sender sender = new ImplementationOfSender();<newline46mondego>frame.setSender(sender); // It could also be passed to the constructor<newline46mondego>"
"363splitHere46","12718811splitHere46","send.addActionListener(new ActionListener() {<newline46mondego>    public void actionPerformed(ActionEvent evt) {<newline46mondego>        Sender sender = getSender();<newline46mondego>        if (sender != null) {<newline46mondego>            sender.sendMessage(...);<newline46mondego>        }<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"364splitHere46","12718811splitHere46","while(true){<newline46mondego>    klijent=new Client();<newline46mondego>    udp=new Udp();<newline46mondego><newline46mondego>    klijent=udp.packageIN();<newline46mondego>    if(klijent!=null){<newline46mondego>        frame.statLabel.setText(<doubleQuotes46><doubleQuotes46>);<newline46mondego>        String str=new String(klijent.getBajt(),0,klijent.bajt.length);<newline46mondego>        str=str.trim();<newline46mondego>        frame.statLabel.setText(str+<doubleQuotes46>@...@<doubleQuotes46>+klijent.clientAddress.toString()+<doubleQuotes46>:<doubleQuotes46>+klijent.clientPort+<doubleQuotes46>-->Duljina:<doubleQuotes46>+klijent.bajt.length);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"365splitHere46","12718815splitHere46",".equals"
"366splitHere46","12718815splitHere46","=="
"367splitHere46","12718815splitHere46","if (ans.toLowerCase().equals(<doubleQuotes46>n<doubleQuotes46>)){<newline46mondego>    System.exit(0);<newline46mondego>} else if (ans.toLowerCase().equals(<doubleQuotes46>y<doubleQuotes46>)) {<newline46mondego>"
"368splitHere46","12718891splitHere46","MenuItem"
"369splitHere46","12718891splitHere46","ContextMenu"
"370splitHere46","12718891splitHere46","ContextMenu"
"371splitHere46","12718913splitHere46","for (int i = 0; i > 30; i++) {<newline46mondego>"
"372splitHere46","12718913splitHere46","ImageIO"
"373splitHere46","12718913splitHere46","Toolkit.getImage"
"374splitHere46","12718913splitHere46","Toolkit.getImage"
"375splitHere46","12718913splitHere46","ImageIO"
"376splitHere46","12718913splitHere46","try {<newline46mondego>    wallpaper = ImageIO.read(getClass().getResource(<doubleQuotes46>images/wallpaper.jpg<doubleQuotes46>));<newline46mondego><newline46mondego>    for (int i = 0; i < 30; i++) {<newline46mondego><newline46mondego>        teamsImg[i] = ImageIO.read(getClass().getResource(<doubleQuotes46>images/img.png<doubleQuotes46>));<newline46mondego><newline46mondego>    }<newline46mondego>} catch (IOException iOException) {<newline46mondego>    System.err.println(<doubleQuotes46>Bad things happened<doubleQuotes46>);<newline46mondego>    iOException.printStackTrace();<newline46mondego>}<newline46mondego>"
"377splitHere46","12718913splitHere46","Image"
"378splitHere46","12718913splitHere46","ImageIcon"
"379splitHere46","12718999splitHere46","//Set the arc color<newline46mondego>g.setColor(Color.RED);<newline46mondego><newline46mondego>// Draw the large semicircle:<newline46mondego>g.fillArc(xCenter,yCenter,largeRadius,height,0,180);<newline46mondego>"
"380splitHere46","12718999splitHere46","public abstract void fillArc(int x,<newline46mondego>           int y,<newline46mondego>           int width,<newline46mondego>           int height,<newline46mondego>           int startAngle,<newline46mondego>           int arcAngle)<newline46mondego>"
"381splitHere46","12718999splitHere46","g.fillArc(xCenter - largeRadius,yCenter - largeRadius,largeRadius,largeRadius,0,180);<newline46mondego>g.fillArc(xCenter-(largeRadius+mediumRadius)/2,yCenter-(largeRadius+mediumRadius)/2,mediumRadius,mediumRadius,0,180);<newline46mondego>g.fillArc(xCenter-(largeRadius+smallRadius)/2,yCenter-(largeRadius+smallRadius)/2,smallRadius,smallRadius,0,180);<newline46mondego>"
"382splitHere46","12718999splitHere46","g.fillArc(xCenter - largeRadius/2,yCenter - largeRadius,largeRadius,largeRadius,0,180);<newline46mondego>    g.fillArc(xCenter-(mediumRadius)/2,yCenter-(largeRadius+mediumRadius)/2,mediumRadius,mediumRadius,0,180);<newline46mondego>    g.fillArc(xCenter-(smallRadius)/2,yCenter-(largeRadius+smallRadius)/2,smallRadius,smallRadius,0,180);<newline46mondego>"
"383splitHere46","12718999splitHere46","xCenter - (largeRadius/2)<newline46mondego>"
"384splitHere46","12718999splitHere46","xCenter-(mediumRadius)/2<newline46mondego>xCenter-(smallRadius)/2<newline46mondego>"
"385splitHere46","12718999splitHere46","g.fillArc(xCenter - largeRadius/2,yCenter - largeRadius/2 + largeRadius/4 -height/4,largeRadius,largeRadius,0,180);<newline46mondego>g.fillArc(xCenter-(mediumRadius)/2,yCenter-(mediumRadius)/2 + largeRadius/4 -height/4,mediumRadius,mediumRadius,0,180);<newline46mondego>g.fillArc(xCenter-(smallRadius)/2,yCenter-(smallRadius)/2 + largeRadius/4 -height/4,smallRadius,smallRadius,0,180);<newline46mondego>"
"386splitHere46","12719042splitHere46","file"
"387splitHere46","12719042splitHere46","File file  = new File(System.getProperty(<doubleQuotes46>user.dir<doubleQuotes46>) + File.separator + <doubleQuotes46>plugins<doubleQuotes46> + File.separator + className);<newline46mondego>"
"388splitHere46","12719042splitHere46",".class"
"389splitHere46","12719042splitHere46","className"
"390splitHere46","12719156splitHere46","JSpinners"
"391splitHere46","12719156splitHere46","JTextfield"
"392splitHere46","12719156splitHere46","JButtons"
"393splitHere46","12719156splitHere46","SpinnerNumberModel strNumberModel = SpinnerNumberModel(1, 1, 20, 1); // value, min, max, step<newline46mondego>"
"394splitHere46","12719156splitHere46","JSpinner strSpinner = new JSpinner(strNumberModel);<newline46mondego>"
"395splitHere46","12719156splitHere46","strSpinner.addChangeListener(new ChangeListener() {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void stateChanged(ChangeEvent e) {<newline46mondego>        str = strNumberModel.getNumber().intValue();<newline46mondego>        remainingPoints = remainingPoints - (str + dex + intel + con + cha);<newline46mondego>        if (remainingPoints <= 0) {<newline46mondego>            // do something<newline46mondego>        }<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"396splitHere46","12719304splitHere46","DateTimeFormat.forPattern(<doubleQuotes46>YYYY-MM-dd HH:mm:ss<doubleQuotes46>);"
"397splitHere46","12719367splitHere46","bind()"
"398splitHere46","12719367splitHere46","connect()"
"399splitHere46","12719367splitHere46","write()"
"400splitHere46","12719367splitHere46","connect()"
"401splitHere46","12719389splitHere46","public class TestZooming {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        new TestZooming();<newline46mondego>    }<newline46mondego><newline46mondego>    public TestZooming() {<newline46mondego><newline46mondego>        EventQueue.invokeLater(new Runnable() {<newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego><newline46mondego>                try {<newline46mondego>                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());<newline46mondego>                } catch (ClassNotFoundException classNotFoundException) {<newline46mondego>                } catch (InstantiationException instantiationException) {<newline46mondego>                } catch (IllegalAccessException illegalAccessException) {<newline46mondego>                } catch (UnsupportedLookAndFeelException unsupportedLookAndFeelException) {<newline46mondego>                }<newline46mondego><newline46mondego>                JFrame frame = new JFrame();<newline46mondego>                frame = new JFrame();<newline46mondego>                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>                frame.setSize(400, 400);<newline46mondego>                frame.setLocationRelativeTo(null);<newline46mondego>                frame.setLayout(new BorderLayout());<newline46mondego>                final ZoomPane pane = new ZoomPane();<newline46mondego>                frame.add(new JScrollPane(pane));<newline46mondego>                frame.setVisible(true);<newline46mondego><newline46mondego>                SwingUtilities.invokeLater(new Runnable() {<newline46mondego><newline46mondego>                    @Override<newline46mondego>                    public void run() {<newline46mondego>                        pane.centerInViewport();<newline46mondego>                    }<newline46mondego><newline46mondego>                });<newline46mondego><newline46mondego>            }<newline46mondego>        });<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    protected class ZoomPane extends JPanel {<newline46mondego><newline46mondego>        private Image background;<newline46mondego>        private Image scaled;<newline46mondego>        private float zoom = 1f;<newline46mondego><newline46mondego>        private Dimension scaledSize;<newline46mondego>        private JViewport con;<newline46mondego><newline46mondego>        public ZoomPane() {<newline46mondego><newline46mondego>            try {<newline46mondego>                background = ImageIO.read(new File(<doubleQuotes46>...<doubleQuotes46>));<newline46mondego>                scaled = background;<newline46mondego>                scaledSize = new Dimension(background.getWidth(this), background.getHeight(this));<newline46mondego>            } catch (IOException ex) {<newline46mondego>                ex.printStackTrace();<newline46mondego>            }<newline46mondego><newline46mondego>            InputMap im = getInputMap(WHEN_IN_FOCUSED_WINDOW);<newline46mondego>            ActionMap am = getActionMap();<newline46mondego><newline46mondego>            im.put(KeyStroke.getKeyStroke(KeyEvent.VK_PLUS, 0), <doubleQuotes46>plus<doubleQuotes46>);<newline46mondego>            im.put(KeyStroke.getKeyStroke(KeyEvent.VK_EQUALS, InputEvent.SHIFT_DOWN_MASK), <doubleQuotes46>plus<doubleQuotes46>);<newline46mondego>            im.put(KeyStroke.getKeyStroke(KeyEvent.VK_MINUS, 0), <doubleQuotes46>minus<doubleQuotes46>);<newline46mondego><newline46mondego>            am.put(<doubleQuotes46>plus<doubleQuotes46>, new AbstractAction() {<newline46mondego>                @Override<newline46mondego>                public void actionPerformed(ActionEvent e) {<newline46mondego>                    setZoom(getZoom() + 0.1f);<newline46mondego>                }<newline46mondego>            });<newline46mondego>            am.put(<doubleQuotes46>minus<doubleQuotes46>, new AbstractAction() {<newline46mondego>                @Override<newline46mondego>                public void actionPerformed(ActionEvent e) {<newline46mondego>                    setZoom(getZoom() - 0.1f);<newline46mondego>                }<newline46mondego>            });<newline46mondego><newline46mondego>            setFocusable(true);<newline46mondego>            requestFocusInWindow();<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void addNotify() {<newline46mondego><newline46mondego>            super.addNotify();<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>        public float getZoom() {<newline46mondego>            return zoom;<newline46mondego>        }<newline46mondego><newline46mondego>        public void setZoom(float value) {<newline46mondego>            if (zoom != value) {<newline46mondego>                zoom = value;<newline46mondego><newline46mondego>                if (zoom < 0) {<newline46mondego>                    zoom = 0f;<newline46mondego>                }<newline46mondego><newline46mondego>                int width = (int) Math.floor(background.getWidth(this) * zoom);<newline46mondego>                int height = (int) Math.floor(background.getHeight(this) * zoom);<newline46mondego>                scaled = background.getScaledInstance(width, height, Image.SCALE_SMOOTH);<newline46mondego>                scaledSize = new Dimension(width, height);<newline46mondego><newline46mondego>                if (getParent() instanceof JViewport) {<newline46mondego><newline46mondego>                    int centerX = width / 2;<newline46mondego>                    int centerY = height / 2;<newline46mondego><newline46mondego>                    JViewport parent = (JViewport) getParent();<newline46mondego>                    Rectangle viewRect = parent.getViewRect();<newline46mondego>                    viewRect.x = centerX - (viewRect.width / 2);<newline46mondego>                    viewRect.y = centerY - (viewRect.height / 2);<newline46mondego>                    scrollRectToVisible(viewRect);<newline46mondego>                }<newline46mondego><newline46mondego>                invalidate();<newline46mondego>                repaint();<newline46mondego><newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public Dimension getPreferredSize() {<newline46mondego><newline46mondego>            return scaledSize;<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        protected void paintComponent(Graphics g) {<newline46mondego><newline46mondego>            super.paintComponent(g);<newline46mondego><newline46mondego>            if (scaled != null) {<newline46mondego><newline46mondego>                g.drawImage(scaled, 0, 0, this);<newline46mondego><newline46mondego>            }<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>        protected void centerInViewport() {<newline46mondego><newline46mondego>            Container container = getParent();<newline46mondego>            if (container instanceof JViewport) {<newline46mondego><newline46mondego>                JViewport port = (JViewport) container;<newline46mondego>                Rectangle viewRect = port.getViewRect();<newline46mondego><newline46mondego>                int width = getWidth();<newline46mondego>                int height = getHeight();<newline46mondego><newline46mondego>                viewRect.x = (width - viewRect.width) / 2;<newline46mondego>                viewRect.y = (height - viewRect.height) / 2;<newline46mondego><newline46mondego>                scrollRectToVisible(viewRect);<newline46mondego><newline46mondego>            }<newline46mondego><newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"402splitHere46","12719742splitHere46","Intent intent = new Intent(this, AddNewActivity.class);<newline46mondego>startActivityForResult(intent, REQUEST_ADD_NEW);<newline46mondego><newline46mondego><newline46mondego>@Override<newline46mondego>protected void onActivityResult(int requestCode, int resultCode, Intent data)<newline46mondego>{<newline46mondego>    if (resultCode == RESULT_OK)<newline46mondego>    {<newline46mondego>        if (requestCode == REQUEST_ADD_NEW_CLOTHING_ITEM)<newline46mondego>        {<newline46mondego>            gridView.smoothScrollToPosition(0);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"403splitHere46","12719761splitHere46","SQLiteStatement"
"404splitHere46","12719761splitHere46","PreparedStatement"
"405splitHere46","12719761splitHere46","SQLiteStatement"
"406splitHere46","12719784splitHere46","allocationSize"
"407splitHere46","12719784splitHere46","@SequenceGenerator"
"408splitHere46","12719784splitHere46","@SequenceGenerator(name=<doubleQuotes46>scanIdGen<doubleQuotes46>, sequenceName=<doubleQuotes46>scan_seq<doubleQuotes46>, allocationSize=1)<newline46mondego>"
"409splitHere46","12719784splitHere46","IDENTITY"
"410splitHere46","12719908splitHere46","ConvertUtilsBean"
"411splitHere46","12719908splitHere46","ConvertUtilsBean convertUtilsBean = BeanUtilsBean.getInstance().getConvertUtils();<newline46mondego>    convertUtilsBean.register(false, true, -1);<newline46mondego>"
"412splitHere46","12719908splitHere46","false"
"413splitHere46","12719908splitHere46","true"
"414splitHere46","12719908splitHere46","-1"
"415splitHere46","12720016splitHere46","HashSet"
"416splitHere46","12720016splitHere46","HashSet noDupSet = new HashSet();<newline46mondego>noDupSet.add(yourString);<newline46mondego>noDupSet.size();<newline46mondego>"
"417splitHere46","12720016splitHere46","size()"
"418splitHere46","12720016splitHere46","ArrayList"
"419splitHere46","12720016splitHere46","1) Create a temp ArrayList<newline46mondego>2) Iterate original list and retrieve element<newline46mondego>3) If tempArrayList doesn't contain element, add element to tempArrayList<newline46mondego>"
"420splitHere46","12720056splitHere46","Session session = HibernateUtil.getSessionFactory().getCurrentSession();<newline46mondego>session.beginTransaction();<newline46mondego>Query query = session.createQuery(<doubleQuotes46>from DBUser where id=1<doubleQuotes46>);<newline46mondego>    for(Iterator it=query.iterate();it.hasNext();){<newline46mondego>    DBUser row = (DBUser) it.next();<newline46mondego>    System.out.println(<doubleQuotes46>ID: <doubleQuotes46> + row.getId());<newline46mondego>    System.out.println(<doubleQuotes46>Name: <doubleQuotes46> + row.getName());<newline46mondego>    System.out.println(<doubleQuotes46>Amount: <doubleQuotes46> + row.getAmount());<newline46mondego>}<newline46mondego>"
"421splitHere46","12720164splitHere46","std::copy"
"422splitHere46","12720164splitHere46","std::vector<int> vec;<newline46mondego>std::copy (<newline46mondego>    std::istream_iterator<int>(std::cin), <newline46mondego>    std::istream_iterator<int>(), <newline46mondego>    std::back_inserter(vec)<newline46mondego>);<newline46mondego>"
"423splitHere46","12720325splitHere46","compare"
"424splitHere46","12720325splitHere46","PriorityQueue"
"425splitHere46","12720325splitHere46","compare"
"426splitHere46","12720325splitHere46","compare"
"427splitHere46","12720325splitHere46","compare"
"428splitHere46","12720325splitHere46","compare"
"429splitHere46","12720325splitHere46","int compare(Object x, Object y){<newline46mondego>    return x.getSomeProperty() - y.getSomeProperty();<newline46mondego>}<newline46mondego>"
"430splitHere46","12720344splitHere46","while(exists) { \\Prompt the user to enter another name & change <doubleQuotes46>exists<doubleQuotes46> status correspondingly}"
"431splitHere46","12720344splitHere46","while(exists) <newline46mondego>        {<newline46mondego>         String temp=dis.readLine();<newline46mondego>         exists = (FilePath + <doubleQuotes46>\\<doubleQuotes46>+ temp).exists();<newline46mondego>         if(!exists) {exportFile = new File(FilePath + <doubleQuotes46>\\<doubleQuotes46>+ temp); break;}<newline46mondego><newline46mondego>          }  <newline46mondego>"
"432splitHere46","12720680splitHere46","Map<String,String> addressMap = new HashMap<String,String>();<newline46mondego>"
"433splitHere46","12720680splitHere46","String macStr = <doubleQuotes46><doubleQuotes46>;<newline46mondego>        for (int i = 0; i < mac.length; i++) {<newline46mondego>            System.out.format(<doubleQuotes46>%02X%s<doubleQuotes46>,mac[i], (i < mac.length - 1) ? <doubleQuotes46>-<doubleQuotes46> : <doubleQuotes46><doubleQuotes46> +<doubleQuotes46>\n<doubleQuotes46>);<newline46mondego>            macStr += String.format(<doubleQuotes46>%02X%s<doubleQuotes46>,mac[i], (i < mac.length - 1) ? <doubleQuotes46>-<doubleQuotes46> : <doubleQuotes46><doubleQuotes46> +<doubleQuotes46>\n<doubleQuotes46>);<newline46mondego>        }<newline46mondego>        System.out.println(<doubleQuotes46>macStr<doubleQuotes46> + macStr);<newline46mondego>        addressMap.put(address.getHostAddress(), macStr);<newline46mondego>"
"434splitHere46","12720680splitHere46","for (Map.Entry<String, String> entry : addressMap.entrySet())<newline46mondego>        {<newline46mondego>            System.out.println(entry.getKey() + <doubleQuotes46>/<doubleQuotes46> + entry.getValue());<newline46mondego>        }<newline46mondego>"
"435splitHere46","12720680splitHere46","import java.net.*;<newline46mondego>import java.util.*;<newline46mondego>import java.net.InetAddress;<newline46mondego>import java.net.NetworkInterface;<newline46mondego>import java.net.SocketException;<newline46mondego>import java.net.UnknownHostException;<newline46mondego><newline46mondego>public class NIC {<newline46mondego><newline46mondego>    public static void main(String args[]) throws Exception {<newline46mondego><newline46mondego>        List<InetAddress> addrList = new ArrayList<InetAddress>();<newline46mondego>        Map<String,String> addressMap = new HashMap<String,String>();<newline46mondego><newline46mondego>        Enumeration<NetworkInterface> interfaces = null;<newline46mondego>        try {<newline46mondego>            interfaces = NetworkInterface.getNetworkInterfaces();<newline46mondego>        } catch (SocketException e) {<newline46mondego>            e.printStackTrace();<newline46mondego>        }<newline46mondego><newline46mondego>        InetAddress localhost = null;<newline46mondego><newline46mondego>        try {<newline46mondego>            localhost = InetAddress.getByName(<doubleQuotes46>127.0.0.1<doubleQuotes46>);<newline46mondego>        } catch (UnknownHostException e) {<newline46mondego>            e.printStackTrace();<newline46mondego>        }<newline46mondego><newline46mondego>        while (interfaces.hasMoreElements()) {<newline46mondego>            NetworkInterface ifc = interfaces.nextElement();<newline46mondego>            Enumeration<InetAddress> addressesOfAnInterface = ifc.getInetAddresses();<newline46mondego><newline46mondego>            while (addressesOfAnInterface.hasMoreElements()) {<newline46mondego>                InetAddress address = addressesOfAnInterface.nextElement();<newline46mondego><newline46mondego>                if (!address.equals(localhost) && !address.toString().contains(<doubleQuotes46>:<doubleQuotes46>)) {<newline46mondego>                    addrList.add(address);<newline46mondego>                    //System.out.println(<doubleQuotes46>\n<doubleQuotes46>);<newline46mondego>                    System.out.println(address.getHostAddress() + <doubleQuotes46>\r<doubleQuotes46>);<newline46mondego>                    //System.out.println(<doubleQuotes46>\n<doubleQuotes46>);<newline46mondego><newline46mondego>                    try {<newline46mondego>                        //InetAddress address = InetAddress.getLocalHost();<newline46mondego>                        InetAddress address1 = InetAddress.getByName(address.getHostAddress());<newline46mondego><newline46mondego>                        /*<newline46mondego>                         * Get NetworkInterface for the current host and then read<newline46mondego>                         * the hardware address.<newline46mondego>                         */<newline46mondego>                        NetworkInterface ni = <newline46mondego>                                NetworkInterface.getByInetAddress(address1);<newline46mondego>                        if (ni != null) {<newline46mondego>                            byte[] mac = ni.getHardwareAddress();<newline46mondego>                            if (mac != null) {<newline46mondego>                                /*<newline46mondego>                                 * Extract each array of mac address and convert it <newline46mondego>                                 * to hexa with the following format <newline46mondego>                                 * 08-00-27-DC-4A-9E.<newline46mondego>                                 */<newline46mondego><newline46mondego>                                String macStr = <doubleQuotes46><doubleQuotes46>;<newline46mondego>                                for (int i = 0; i < mac.length; i++) {<newline46mondego>                                    macStr += String.format(<doubleQuotes46>%02X%s<doubleQuotes46>,mac[i], (i < mac.length - 1) ? <doubleQuotes46>-<doubleQuotes46> : <doubleQuotes46><doubleQuotes46> +<doubleQuotes46>\n<doubleQuotes46>);<newline46mondego>                                }<newline46mondego>                                addressMap.put(address.getHostAddress(), macStr);<newline46mondego>                            } else {<newline46mondego>                                System.out.println(<doubleQuotes46>Address doesn't exist or is not <doubleQuotes46> +<newline46mondego>                                        <doubleQuotes46>accessible.<doubleQuotes46>);<newline46mondego>                            }<newline46mondego>                        } else {<newline46mondego>                            System.out.println(<doubleQuotes46>Network Interface for the specified <doubleQuotes46> +<newline46mondego>                                    <doubleQuotes46>address is not found.<doubleQuotes46>);<newline46mondego>                        }<newline46mondego>                    } catch (UnknownHostException e) {<newline46mondego>                        e.printStackTrace();<newline46mondego>                    } catch (SocketException e) {<newline46mondego>                        e.printStackTrace();<newline46mondego>                    }<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        for (Map.Entry<String, String> entry : addressMap.entrySet())<newline46mondego>        {<newline46mondego>            System.out.println(entry.getKey() + <doubleQuotes46>/<doubleQuotes46> + entry.getValue());<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"436splitHere46","12720713splitHere46","this.psUpdate"
"437splitHere46","12720713splitHere46","Utils.NullCheckClose(this.psUpdate, this.getProcName());,<---this.psUpdate try to remove its as a member variable.<newline46mondego>"
"438splitHere46","12720713splitHere46","PreparedStatement"
"439splitHere46","12720713splitHere46","CallableStatement"
"440splitHere46","12720744splitHere46","doPost(req,resp)"
"441splitHere46","12720744splitHere46","web.xml"
"442splitHere46","12720744splitHere46","<servlet><newline46mondego>        <servlet-name>HelloPost</servlet-name><newline46mondego>        <servlet-class>packageName.HelloPost</servlet-class><newline46mondego></servlet><newline46mondego><newline46mondego><servlet-mapping><newline46mondego>        <servlet-name>HelloPost</servlet-name><newline46mondego>        <url-pattern>/post-url</url-pattern><newline46mondego></servlet-mapping><newline46mondego>"
"443splitHere46","12720744splitHere46","/post-url"
"444splitHere46","12720744splitHere46","/"
"445splitHere46","12720744splitHere46","/post-url"
"446splitHere46","12720744splitHere46","<welcome-file-list><newline46mondego>        <welcome-file>/post-url</welcome-file><newline46mondego></welcome-file-list> <newline46mondego>"
"447splitHere46","12720807splitHere46","String sql =<newline46mondego>    <doubleQuotes46>INSERT INTO Statistics3 (column1, column2, column4) VALUES ('<doubleQuotes46> + ipv6Address<newline46mondego>                            + <doubleQuotes46>','<doubleQuotes46> + dateTime.trim() + <doubleQuotes46>',<doubleQuotes46> + battpercent + <doubleQuotes46>)<doubleQuotes46>;<newline46mondego>"
"448splitHere46","12720807splitHere46","column1"
"449splitHere46","12720807splitHere46","column2"
"450splitHere46","12720807splitHere46","column4"
"451splitHere46","12720807splitHere46","ipv6Address"
"452splitHere46","12720807splitHere46","datetime"
"453splitHere46","12720807splitHere46","battpercent"
"454splitHere46","12720807splitHere46","column3"
"455splitHere46","12720887splitHere46","Elements tables = doc.select(<doubleQuotes46>table<doubleQuotes46>);<newline46mondego>"
"456splitHere46","12720887splitHere46","tables.size();<newline46mondego>"
"457splitHere46","12721175splitHere46","int result = JOptionPane.showConfirmDialog(null, <doubleQuotes46>Can I ask you a question<doubleQuotes46>, <doubleQuotes46>Quesion<doubleQuotes46>, JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);<newline46mondego>switch (result) {<newline46mondego>    case JOptionPane.YES_OPTION:<newline46mondego>        //...<newline46mondego>        break;<newline46mondego>    case JOptionPane.NO_OPTION:<newline46mondego>        //...<newline46mondego>        break;<newline46mondego>}<newline46mondego>"
"458splitHere46","12721175splitHere46","JOptionPane"
"459splitHere46","12721175splitHere46","JPanel panel = new JPanel(new GridLayout(0, 2));<newline46mondego>panel.add(new JLabel(<doubleQuotes46>Name<doubleQuotes46>));<newline46mondego>panel.add(new JLabel(<doubleQuotes46>Last<doubleQuotes46>));<newline46mondego>panel.add(new JTextField(<doubleQuotes46>Jason<doubleQuotes46>));<newline46mondego>panel.add(new JTextField(<doubleQuotes46>Cardanas<doubleQuotes46>));<newline46mondego>panel.add(new JLabel(<doubleQuotes46>Phone<doubleQuotes46>));<newline46mondego>panel.add(new JLabel(<doubleQuotes46>Email<doubleQuotes46>));<newline46mondego>panel.add(new JTextField(<doubleQuotes46>333<doubleQuotes46>));<newline46mondego>panel.add(new JTextField(<doubleQuotes46>X<doubleQuotes46>));<newline46mondego>panel.add(new JLabel(<doubleQuotes46>PID<doubleQuotes46>));<newline46mondego>panel.add(new JLabel(<doubleQuotes46>Donation<doubleQuotes46>));<newline46mondego>panel.add(new JTextField(<doubleQuotes46>X<doubleQuotes46>));<newline46mondego>panel.add(new JTextField(<doubleQuotes46>0<doubleQuotes46>));<newline46mondego>panel.add(new JLabel(<doubleQuotes46>Membership<doubleQuotes46>));<newline46mondego>panel.add(new JLabel(<doubleQuotes46>Points<doubleQuotes46>));<newline46mondego>panel.add(new JTextField(<doubleQuotes46>false<doubleQuotes46>));<newline46mondego>panel.add(new JTextField(<doubleQuotes46>0<doubleQuotes46>));<newline46mondego><newline46mondego>int result = JOptionPane.showConfirmDialog(null, panel, <doubleQuotes46>Quesion<doubleQuotes46>, JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE);<newline46mondego>switch (result) {<newline46mondego>    case JOptionPane.OK_OPTION:<newline46mondego>        //...<newline46mondego>        break;<newline46mondego>    case JOptionPane.CANCEL_OPTION:<newline46mondego>        //...<newline46mondego>        break;<newline46mondego>}<newline46mondego>"
"460splitHere46","12721268splitHere46","String asString = new String(content, <doubleQuotes46>UTF8<doubleQuotes46>);<newline46mondego>byte[] newBytes = asString.getBytes(<doubleQuotes46>UTF8<doubleQuotes46>);<newline46mondego>"
"461splitHere46","12721268splitHere46","available()"
"462splitHere46","12721268splitHere46","Files.toByteArray"
"463splitHere46","12721420splitHere46","String[] crap = {<doubleQuotes46>(<doubleQuotes46>, <doubleQuotes46>)<doubleQuotes46>, <doubleQuotes46>,<doubleQuotes46>, <doubleQuotes46>;<doubleQuotes46>};<newline46mondego>String text = <doubleQuotes46>(123, 234; 345, 456) (567, 788; 899, 900)<doubleQuotes46>;<newline46mondego>for (String replace : crap) {<newline46mondego>    text = text.replace(replace, <doubleQuotes46> <doubleQuotes46>).trim();<newline46mondego>}<newline46mondego>// This replaces any multiple spaces with a single space<newline46mondego>while (text.contains(<doubleQuotes46>  <doubleQuotes46>)) {<newline46mondego>    text = text.replace(<doubleQuotes46>  <doubleQuotes46>, <doubleQuotes46> <doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"464splitHere46","12721420splitHere46","String[] values = text.split(<doubleQuotes46> <doubleQuotes46>);<newline46mondego>"
"465splitHere46","12721420splitHere46","String"
"466splitHere46","12721420splitHere46","int"
"467splitHere46","12721420splitHere46","int[] iValues = new int[values.length];<newline46mondego>for (int index = 0; index < values.length; index++) {<newline46mondego><newline46mondego>    String sValue = values[index];<newline46mondego>    iValues[index] = Integer.parseInt(values[index].trim());<newline46mondego><newline46mondego>}<newline46mondego>"
"468splitHere46","12721420splitHere46","for (int value : iValues) {<newline46mondego>    System.out.println(value);<newline46mondego>}<newline46mondego>"
"469splitHere46","12721503splitHere46","if(grid.getButton(i, j).getBackground() == Color.WHITE) {<newline46mondego>    if(liveNeighbor == 3) <newline46mondego>        newGrid.getButton(i, j).setBackground(Color.BLUE);<newline46mondego>    } else {<newline46mondego>        if(liveNeighbor > 3 || liveNeighbor < 2) <newline46mondego>            newGrid.getButton(i, j).setBackground(Color.WHITE);<newline46mondego>}<newline46mondego>"
"470splitHere46","12721503splitHere46","boolean currentlyAlive = grid.getButton(i, j).getBackground() == Color.BLUE;<newline46mondego>boolean aliveNextStep = (liveNeighbour == 3) ||<newline46mondego>                        (currentlyAlive && liveNeighbor == 2);<newline46mondego>newGrid.getButton(i, j).setBackground(aliveNextStep ? Color.BLUE : Color.WHITE);<newline46mondego>"
"471splitHere46","12721540splitHere46","InputStream is = new FileInputStream(inputfile); // Good<newline46mondego>OutputStream os = new FileOutputStream(inputfile); // Bad<newline46mondego>"
"472splitHere46","12721540splitHere46","public static void main(String[] args) {<newline46mondego><newline46mondego>    File inputfile = new File(<doubleQuotes46>file/to/be/encoded<doubleQuotes46>);<newline46mondego>    File outFile = new File(<doubleQuotes46>out.uue<doubleQuotes46>);<newline46mondego><newline46mondego>    UUEncoder uuec = new UUEncoder();<newline46mondego>    InputStream is = null;<newline46mondego>    OutputStream os = null;<newline46mondego>    try {<newline46mondego><newline46mondego>        is = new FileInputStream(inputfile);<newline46mondego>        os = new FileOutputStream(outFile);<newline46mondego>        uuec.encodeBuffer(is, os);<newline46mondego><newline46mondego>    } catch (Exception error) {<newline46mondego>        error.printStackTrace();<newline46mondego>    } finally {<newline46mondego>        try {<newline46mondego>            is.close();<newline46mondego>        } catch (Exception e) {<newline46mondego>        }<newline46mondego>        try {<newline46mondego>            os.close();<newline46mondego>        } catch (Exception e) {<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    File newFile = new File(<doubleQuotes46>decoded.jpg<doubleQuotes46>);<newline46mondego>    UUDecoder decoder = new UUDecoder();<newline46mondego>    try {<newline46mondego><newline46mondego>        is = new FileInputStream(outFile);<newline46mondego>        os = new FileOutputStream(newFile);<newline46mondego>        decoder.decodeBuffer(is, os);<newline46mondego><newline46mondego>    } catch (Exception e) {<newline46mondego>        e.printStackTrace();<newline46mondego>    } finally {<newline46mondego>        try {<newline46mondego>            is.close();<newline46mondego>        } catch (Exception e) {<newline46mondego>        }<newline46mondego>        try {<newline46mondego>            os.close();<newline46mondego>        } catch (Exception e) {<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"473splitHere46","12721540splitHere46","public void SettingUpload(File inputfile) throws IOException {<newline46mondego>    UUEncoder uuec = new UUEncoder();<newline46mondego>    File outFile = File.createTempFile(<doubleQuotes46>encoded<doubleQuotes46>, <doubleQuotes46>uue<doubleQuotes46>);<newline46mondego>    InputStream is = null;<newline46mondego>    OutputStream os = null;<newline46mondego>    try{<newline46mondego>        is = new FileInputStream(inputfile);<newline46mondego>        os = new FileOutputStream(outFile );<newline46mondego>        uuec.encodeBuffer(is, os);<newline46mondego>    } finally {<newline46mondego>        try {<newline46mondego>            is.close();<newline46mondego>        } catch (Exception e) {<newline46mondego>        }<newline46mondego>            try {<newline46mondego>        os.close();<newline46mondego>        } catch (Exception e) {<newline46mondego>        }<newline46mondego>    }<newline46mondego>    return outFile;<newline46mondego>}<newline46mondego>"
"474splitHere46","12721788splitHere46","Maps.difference(map1,map2)<newline46mondego>"
"475splitHere46","12721994splitHere46","private boolean isExternalStorageAvailable() {<newline46mondego><newline46mondego>        String state = Environment.getExternalStorageState();<newline46mondego>        boolean mExternalStorageAvailable = false;<newline46mondego>        boolean mExternalStorageWriteable = false;<newline46mondego><newline46mondego>        if (Environment.MEDIA_MOUNTED.equals(state)) {<newline46mondego>            // We can read and write the media<newline46mondego>            mExternalStorageAvailable = mExternalStorageWriteable = true;<newline46mondego>        } else if (Environment.MEDIA_MOUNTED_READ_ONLY.equals(state)) {<newline46mondego>            // We can only read the media<newline46mondego>            mExternalStorageAvailable = true;<newline46mondego>            mExternalStorageWriteable = false;<newline46mondego>        } else {<newline46mondego>            // Something else is wrong. It may be one of many other states, but<newline46mondego>            // all we need<newline46mondego>            // to know is we can neither read nor write<newline46mondego>            mExternalStorageAvailable = mExternalStorageWriteable = false;<newline46mondego>        }<newline46mondego><newline46mondego>        if (mExternalStorageAvailable == true<newline46mondego>                && mExternalStorageWriteable == true) {<newline46mondego>            return true;<newline46mondego>        } else {<newline46mondego>            return false;<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"476splitHere46","12722184splitHere46","<servlet><newline46mondego>       <servlet-name>////servlet name: FrontController</servlet-name><newline46mondego>       <servlet-class>////Fully qualified servlet name e.g: org.chat.controller.FrontController</servlet-class><newline46mondego>       </servlet><newline46mondego>      <servlet-mapping><newline46mondego>      <servlet-name>FrontController<servlet-name><newline46mondego>      <url-pattern>/*</url-pattern><newline46mondego><servlet-mapping><newline46mondego>"
"477splitHere46","12722291splitHere46","CollectionUtils.isEmpty"
"478splitHere46","12722291splitHere46","MapUtils.isEmpty"
"479splitHere46","12722302splitHere46","test-app"
"480splitHere46","12722302splitHere46","Tomcat v7.0 Server"
"481splitHere46","12722302splitHere46",".project"
"482splitHere46","12722307splitHere46","setCapture"
"483splitHere46","12722307splitHere46","releaseCapture"
"484splitHere46","12722307splitHere46","com.google.gwt.user.client.ui.DialogBox"
"485splitHere46","12722338splitHere46","toString()"
"486splitHere46","12722338splitHere46","String.getBytes()"
"487splitHere46","12722338splitHere46","String(byte[], int, int)"
"488splitHere46","12722338splitHere46","InputStreamReader"
"489splitHere46","12722338splitHere46","GZIPInputStream"
"490splitHere46","12722408splitHere46","using"
"491splitHere46","12722408splitHere46","using"
"492splitHere46","12722408splitHere46","try<newline46mondego>{<newline46mondego>connection = new Connection();<newline46mondego>connection.Open(); // open the connection<newline46mondego>//work with the connection, DB CRUD operations<newline46mondego>}<newline46mondego>finally<newline46mondego>{<newline46mondego>if(connection != null)<newline46mondego>     connection.Close(); // close the connection in finally block<newline46mondego>                         // so that even if the exception occurs, connection gets closed. <newline46mondego>}<newline46mondego>"
"493splitHere46","12722446splitHere46","ExecutorService threadPool = Executors.newCachedThreadPool();<newline46mondego>ExecutorService threadPool = Executors.newFixedThreadPool(500); <newline46mondego>"
"494splitHere46","12722446splitHere46","futures = cachedThreadPool.invokeAll(tasks,<newline46mondego>                                     timeout,<newline46mondego>                                     TimeUnit.MILLISECONDS);<newline46mondego>"
"495splitHere46","12722446splitHere46","for (Future f: futures) {<newline46mondego>   someList.add(f.get())<newline46mondego>}<newline46mondego>"
"496splitHere46","12722503splitHere46","sign(compare(a,b)) = - sign(compare(b,a))<newline46mondego>"
"497splitHere46","12722503splitHere46","compare(a,a) == 0<newline46mondego>"
"498splitHere46","12722503splitHere46","IDontGiveAShitComparator"
"499splitHere46","12722711splitHere46","StringBuilder sw = new StringBuilder();<newline46mondego>BufferedReader reader = new BufferedReader( new FileReader(file));<newline46mondego>String readline = <doubleQuotes46><doubleQuotes46>;<newline46mondego>while ((readline = reader.readLine()) != null) { <newline46mondego>    sw.append(readline);<newline46mondego>}<newline46mondego>String string = sw.toString();<newline46mondego>"
"500splitHere46","12722746splitHere46","results"
"501splitHere46","12722746splitHere46","null"
"502splitHere46","12722746splitHere46","List"
"503splitHere46","12722746splitHere46","ArrayList"
"504splitHere46","12722746splitHere46","List<ScoreDoc> results = new ArrayList<ScoreDoc>();<newline46mondego>"
"505splitHere46","12722760splitHere46","Future<?>"
"506splitHere46","12722760splitHere46","get(-)"
"507splitHere46","12723174splitHere46","<pre><newline46mondego>    <bean:write name=<doubleQuotes46>data<doubleQuotes46> property=<doubleQuotes46>description<doubleQuotes46>/><newline46mondego></pre><newline46mondego>"
"508splitHere46","12723267splitHere46","package com.example;<newline46mondego>public class FaxNumber {<newline46mondego>  private String value;<newline46mondego>  // getter/setter<newline46mondego><newline46mondego>  public static FaxNumber parse(String s) {<newline46mondego>    FaxNumber n = new FaxNumber();<newline46mondego>    n.value = s;<newline46mondego>    return n;<newline46mondego>  }<newline46mondego><newline46mondego>  public static String print(FaxNumber n) {<newline46mondego>    return n.value;<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"509splitHere46","12723267splitHere46","<jaxb:bindings xmlns:jaxb=<doubleQuotes46>http://java.sun.com/xml/ns/jaxb<doubleQuotes46><newline46mondego>           xmlns:xsd=<doubleQuotes46>http://www.w3.org/2001/XMLSchema<doubleQuotes46> <newline46mondego>           jaxb:version=<doubleQuotes46>2.0<doubleQuotes46>><newline46mondego>  <jaxb:bindings schemaLocation=<doubleQuotes46>example.xsd<doubleQuotes46>><newline46mondego>    <jaxb:bindings node=<doubleQuotes46>//xsd:simpleType[@name='FaxNumber']<doubleQuotes46>><newline46mondego>      <jaxb:javaType name=<doubleQuotes46>com.example.FaxNumber<doubleQuotes46><newline46mondego>          parseMethod=<doubleQuotes46>com.example.FaxNumber.parse<doubleQuotes46><newline46mondego>          printMethod=<doubleQuotes46>com.example.FaxNumber.print<doubleQuotes46>/><newline46mondego>    </jaxb:bindings><newline46mondego>  </jaxb:bindings><newline46mondego><jaxb:bindings><newline46mondego>"
"510splitHere46","12723419splitHere46","rendered"
"511splitHere46","12723419splitHere46","<p:submenu label=<doubleQuotes46>#{msg['header.management']}<doubleQuotes46> rendered=<doubleQuotes46>#{request.isUserInRole('INTERNO')}<doubleQuotes46>><newline46mondego>        <p:submenu label=<doubleQuotes46>#{msg['header.roles']}<doubleQuotes46> icon=<doubleQuotes46>ui-icon-contact<doubleQuotes46>><newline46mondego>                <p:menuitem value=<doubleQuotes46>#{msg['header.newRole']}<doubleQuotes46> url=<doubleQuotes46>/pages/addRole.jsf<doubleQuotes46> /><newline46mondego>            <p:menuitem value=<doubleQuotes46>#{msg['header.mngRoles']}<doubleQuotes46> url=<doubleQuotes46>/pages/viewRole.jsf<doubleQuotes46> /><newline46mondego></p:submenu><newline46mondego>"
"512splitHere46","12723419splitHere46","spring-security.xml"
"513splitHere46","12723419splitHere46","<intercept-url pattern=<doubleQuotes46>/pages/*Role*<doubleQuotes46> access=<doubleQuotes46>hasRole('INTERNO')<doubleQuotes46> /><newline46mondego>"
"514splitHere46","12724145splitHere46","equals"
"515splitHere46","12724145splitHere46","compareTo"
"516splitHere46","12724149splitHere46","frame.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));"
"517splitHere46","12724149splitHere46","Cursor"
"518splitHere46","12724149splitHere46","focus"
"519splitHere46","12724149splitHere46","ModalityType"
"520splitHere46","12724149splitHere46","JDialog"
"521splitHere46","12724149splitHere46","JFrame"
"522splitHere46","12724149splitHere46","Cursor"
"523splitHere46","12724149splitHere46","WAIT_CURSOR"
"524splitHere46","12724149splitHere46","Cursor"
"525splitHere46","12724149splitHere46","setModal()"
"526splitHere46","12724149splitHere46","ModalityType"
"527splitHere46","12724149splitHere46","ModalityType.MODELESS"
"528splitHere46","12724195splitHere46","Analyzer analyzer = ...; // your analyzer<newline46mondego>TokenStream tokenStream = analyzer.tokenStream(null, new StringReader(searchText));<newline46mondego>"
"529splitHere46","12724604splitHere46","NodeList definitionElements = inputDOM.getElementsByTagName(<doubleQuotes46>definition<doubleQuotes46>);<newline46mondego>for (int i = 0; i < definitionElements.getLength(); i++) {<newline46mondego>    Element current = (Element) definitionElements.item(i);<newline46mondego>    Node term = current.getElementsByTagName(<doubleQuotes46>term<doubleQuotes46>).item(0);<newline46mondego>    if(term != null && term.getNodeType() == Node.ELEMENT_NODE)<newline46mondego>        current.setAttribute(<doubleQuotes46>XPath<doubleQuotes46>, ((Element) term).getTextContent());<newline46mondego>}<newline46mondego>"
"530splitHere46","12724604splitHere46","<definition>"
"531splitHere46","12724604splitHere46","<definition>"
"532splitHere46","12724604splitHere46","<term>"
"533splitHere46","12724639splitHere46","java.lang.IllegalStateException"
"534splitHere46","12724639splitHere46","synchronization"
"535splitHere46","12724639splitHere46","contextDestroyed()"
"536splitHere46","12724670splitHere46","CreateUserRequest user = new CreateUserRequest(<doubleQuotes46>userName<doubleQuotes46>);<newline46mondego><newline46mondego>CreateAccessKeyRequest key = new CreateAccessKeyRequest();<newline46mondego><newline46mondego>BasicAWSCredentials cred = new BasicAWSCredentials(<doubleQuotes46>access<doubleQuotes46>, <doubleQuotes46>secret<doubleQuotes46>);<newline46mondego><newline46mondego>key.withUserName(user.getUserName());<newline46mondego>key.setRequestCredentials(cred);<newline46mondego><newline46mondego>user.setRequestCredentials(key.getRequestCredentials());<newline46mondego>user.setPath(<doubleQuotes46>/<doubleQuotes46>);<newline46mondego>AmazonIdentityManagementClient client =  new AmazonIdentityManagementClient(cred);<newline46mondego>CreateUserResult result = client.createUser(user);<newline46mondego>"
"537splitHere46","12724672splitHere46","text()"
"538splitHere46","12724672splitHere46","document.outputSettings().charset(<doubleQuotes46>windows-1252<doubleQuotes46>);<newline46mondego>"
"539splitHere46","12724784splitHere46","<RelativeLayout xmlns:android=<doubleQuotes46>http://schemas.android.com/apk/res/android<doubleQuotes46><newline46mondego>    xmlns:tools=<doubleQuotes46>http://schemas.android.com/tools<doubleQuotes46><newline46mondego>    android:layout_width=<doubleQuotes46>match_parent<doubleQuotes46><newline46mondego>    android:layout_height=<doubleQuotes46>match_parent<doubleQuotes46> ><newline46mondego><newline46mondego>    <Button<newline46mondego>        android:id=<doubleQuotes46>@+id/btnAdd<doubleQuotes46><newline46mondego>        android:layout_width=<doubleQuotes46>match_parent<doubleQuotes46><newline46mondego>        android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>        android:layout_alignParentLeft=<doubleQuotes46>true<doubleQuotes46><newline46mondego>        android:layout_alignParentTop=<doubleQuotes46>true<doubleQuotes46><newline46mondego>        android:text=<doubleQuotes46>Add Item<doubleQuotes46> /><newline46mondego><newline46mondego>    <TableLayout<newline46mondego>        android:id=<doubleQuotes46>@+id/lvLocation<doubleQuotes46><newline46mondego>        android:layout_width=<doubleQuotes46>match_parent<doubleQuotes46><newline46mondego>        android:layout_height=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>        android:layout_above=<doubleQuotes46>@+id/btnBack<doubleQuotes46><newline46mondego>        android:layout_alignParentLeft=<doubleQuotes46>true<doubleQuotes46><newline46mondego>        android:layout_below=<doubleQuotes46>@+id/btnAdd<doubleQuotes46> ><newline46mondego><newline46mondego>    </TableLayout><newline46mondego><newline46mondego>    <Button<newline46mondego>        android:id=<doubleQuotes46>@+id/btnBack<doubleQuotes46><newline46mondego>        android:layout_width=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>        android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>        android:layout_alignParentBottom=<doubleQuotes46>true<doubleQuotes46><newline46mondego>        android:layout_alignParentLeft=<doubleQuotes46>true<doubleQuotes46><newline46mondego>        android:text=<doubleQuotes46>Back<doubleQuotes46> /><newline46mondego><newline46mondego></RelativeLayout><newline46mondego>"
"540splitHere46","12724792splitHere46","while (!quit) {<newline46mondego>    String userchoice = console.readLine(<doubleQuotes46>Enter your choice :<doubleQuotes46>); <newline46mondego>    ...<newline46mondego>    switch (...) {<newline46mondego>        ...<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"541splitHere46","12725035splitHere46","static public String[][] readFile() throws IOException {<newline46mondego>   ...<newline46mondego>"
"542splitHere46","12725272splitHere46","@RemoteServiceRelativePath(<doubleQuotes46>userService<doubleQuotes46>)<newline46mondego>public interface UserService extends RemoteService {<newline46mondego>    String loginUser(String username,String password);<newline46mondego>}<newline46mondego>"
"543splitHere46","12725272splitHere46","public interface UserServiceAsync {<newline46mondego>    void loginUser(String username, String password, AsyncCallback<String> callback);<newline46mondego>}<newline46mondego>"
"544splitHere46","12725272splitHere46","public class UserServiceImpl extends RemoteServiceServlet  implements UserService {<newline46mondego><newline46mondego>        public String loginUser(String username, String password){<newline46mondego>            //database interaction<newline46mondego>            return <doubleQuotes46>result<doubleQuotes46>; //return success or failure depending upon logic<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"545splitHere46","12725272splitHere46","public class HelloWorld implements EntryPoint{<newline46mondego>    //(1) Create the client proxy.<newline46mondego>    private UserServiceAsync userService = (UserServiceAsync) GWT.create(UserService.class);<newline46mondego>    public void onModuleLoad() {<newline46mondego>        Button click=new Button(<doubleQuotes46>Click Here<doubleQuotes46>);<newline46mondego>        Label name=new Label(<doubleQuotes46>Enter Name<doubleQuotes46>);<newline46mondego>        Label passwrd=new Label(<doubleQuotes46>Enter Password<doubleQuotes46>);<newline46mondego>        final TextBox t_name=new TextBox();<newline46mondego>        final TextBox t_passwrd=new TextBox();<newline46mondego>        click.addClickHandler(new ClickHandler() {<newline46mondego>        public void onClick(ClickEvent ev) {<newline46mondego>                 String temp_user=t_name.getText();<newline46mondego>                 String temp_pass=t_passwrd.getText();   <newline46mondego>                 /// (2) Create an asynchronous callback and Make the call<newline46mondego>                 userService.loginUser(temp_user, temp_pass, new AsyncCallback<String>() {<newline46mondego>                     public void onFailure(Throwable caught) {<newline46mondego>                             Window.alert(<doubleQuotes46>Please enter valid details<doubleQuotes46>);<newline46mondego>                      }<newline46mondego><newline46mondego>                     public void onSuccess(String result) {<newline46mondego>                         Window.alert(<doubleQuotes46>Welcome<doubleQuotes46>);<newline46mondego>                     }<newline46mondego>                 });//end of service call<newline46mondego>       });//end of clickhandler<newline46mondego>        RootPanel.get().add(name);<newline46mondego>        RootPanel.get().add(t_name);<newline46mondego>        RootPanel.get().add(passwrd);<newline46mondego>        RootPanel.get().add(t_passwrd);<newline46mondego>        RootPanel.get().add(click);<newline46mondego>    }<newline46mondego> }<newline46mondego>"
"546splitHere46","12725366splitHere46","SSLOptions +ExportCertData<newline46mondego>"
"547splitHere46","12725366splitHere46","X509Certificate x509[] = (X509Certificate[]) <newline46mondego>    request.getAttribute(<doubleQuotes46>javax.servlet.request.X509Certificate<doubleQuotes46>);<newline46mondego>"
"548splitHere46","12725426splitHere46","Overlay"
"549splitHere46","12725426splitHere46","public class Mappin extends Overlay {<newline46mondego><newline46mondego>    protected Drawable drwMarker;<newline46mondego>    protected GeoPoint gptCoordinates;<newline46mondego><newline46mondego>    public Mappin(Drawable drwMarker, GeoPoint gptCoordinates) {<newline46mondego><newline46mondego>        this.drwMarker = drwMarker;<newline46mondego>        this.gptCoordinates = gptCoordinates;<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void draw(Canvas canCanvas, MapView mapView, boolean booShadow) {<newline46mondego><newline46mondego>        super.draw(canCanvas, mapView, booShadow);<newline46mondego><newline46mondego>        Projection prjProjection = mapView.getProjection();<newline46mondego><newline46mondego>        Integer x;<newline46mondego>        Integer y;<newline46mondego><newline46mondego>        if (!booShadow) {<newline46mondego><newline46mondego>            x = prjProjection.toPixels(gptCoordinates, null).x - (drwMarker.getIntrinsicWidth() / 2);<newline46mondego>            y = prjProjection.toPixels(gptCoordinates, null).y - (drwMarker.getIntrinsicHeight());<newline46mondego><newline46mondego>        } else {<newline46mondego><newline46mondego>            Integer intSign = (SHADOW_X_SKEW > 0 ? 1 : -1);<newline46mondego>            Float fltScaler = 1.1F - Math.abs(SHADOW_X_SKEW);<newline46mondego>            x = (int) (prjProjection.toPixels(gptCoordinates, null).x - (intSign * (drwMarker.getIntrinsicWidth() * fltScaler)));<newline46mondego>            y = (int) (prjProjection.toPixels(gptCoordinates, null).y - (drwMarker.getIntrinsicHeight() * SHADOW_Y_SCALE));<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>        drawAt(canCanvas, drwMarker, x, y, booShadow);<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"550splitHere46","12725437splitHere46","java"
"551splitHere46","12725437splitHere46","c#.Net"
"552splitHere46","12725437splitHere46","public static void Main(string[] args)<newline46mondego>{<newline46mondego>     var ia = new byte[args.Length];<newline46mondego><newline46mondego>     for (int i = 0; i < args.Length; i++)<newline46mondego>     try<newline46mondego>     {<newline46mondego>        ia[i] = Convert.ToByte(args[i]);<newline46mondego>     }<newline46mondego>     catch (FormatException e)<newline46mondego>     {<newline46mondego>     }<newline46mondego>   System.Console.WriteLine(String.Format(<doubleQuotes46>{0:X}<doubleQuotes46>,Calc(ia, ia.Length))); /// I assume Calc is function return something<newline46mondego>}<newline46mondego>"
"553splitHere46","12725551splitHere46","@WebParam"
"554splitHere46","12725737splitHere46","String text = <doubleQuotes46>DESTINATION: 71222222 PRIORITY: urgent AUTRE: rien<doubleQuotes46>;<newline46mondego><newline46mondego>String[]lines = text.replace(<doubleQuotes46>: <doubleQuotes46>, <doubleQuotes46>:<doubleQuotes46>).split(<doubleQuotes46> <doubleQuotes46>);     <newline46mondego>String[]values = new String[lines.length];<newline46mondego>int i=0;<newline46mondego>for(String line : lines){<newline46mondego>   values[i++] = line.split(<doubleQuotes46>:<doubleQuotes46>)[1];<newline46mondego>}<newline46mondego>System.out.println(Arrays.toString(values));<newline46mondego>"
"555splitHere46","12725737splitHere46","[ 71222222,  urgent,  rien]<newline46mondego>"
"556splitHere46","12725737splitHere46","String text = <doubleQuotes46>DESTINATION: 71222222 PRIORITY: urgent AUTRE: rien<doubleQuotes46>;<newline46mondego><newline46mondego>StringTokenizer tokinizer = new StringTokenizer(text,<doubleQuotes46>: <doubleQuotes46>);<newline46mondego><newline46mondego>while(tokinizer.hasMoreTokens()) {<newline46mondego>    tokinizer.nextToken();  //skip first<newline46mondego>    System.out.println(tokinizer.nextToken());<newline46mondego>}<newline46mondego>"
"557splitHere46","12725784splitHere46","new Thread() {<newline46mondego>    public void run() {<newline46mondego>        // your try-catch-finally block goes here<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"558splitHere46","12725841splitHere46","value"
"559splitHere46","12726215splitHere46","<doubleQuotes46>//bb[name/text()='<doubleQuotes46> + c_name +<doubleQuotes46>']/value<doubleQuotes46><newline46mondego>"
"560splitHere46","12726215splitHere46","c_name"
"561splitHere46","12726215splitHere46","String.format()"
"562splitHere46","12726215splitHere46","<doubleQuotes46>//bb[name/text()='%s']/value<doubleQuotes46>.format(c_name)<newline46mondego>"
"563splitHere46","12726283splitHere46","ClassLoader cl = Thread.currentThread().getContextClassLoader();<newline46mondego>URL url = cl.getResource(<doubleQuotes46>relative/path/from/classpath<doubleQuotes46>);<newline46mondego>"
"564splitHere46","12726283splitHere46","String path = getClass().getClassLoader().getResource(<doubleQuotes46>.<doubleQuotes46>).getPath();<newline46mondego>"
"565splitHere46","12726283splitHere46","Properties properties = new Properties();<newline46mondego>properties.load(new FileInputStream(<doubleQuotes46>filename.properties<doubleQuotes46>));<newline46mondego>properties.getProperty(<doubleQuotes46>PATH<doubleQuotes46>)<newline46mondego>"
"566splitHere46","12726283splitHere46","PATH = the/absolute/path<newline46mondego>"
"567splitHere46","12726283splitHere46","System.getenv(<doubleQuotes46>THE_PATH_ENV<doubleQuotes46>)<newline46mondego>"
"568splitHere46","12726283splitHere46","public static void main(String[] args){<newline46mondego>    String path = args[0]; //Or at whatever position it is in your parameter list<newline46mondego>    ..<newline46mondego>"
"569splitHere46","12726318splitHere46","createClob()"
"570splitHere46","12726318splitHere46","PreparedStatement.setCharacterStream()"
"571splitHere46","12726318splitHere46","PreparedStatement pstmt = conn.prepareStatement(<doubleQuotes46>insert into clob_table (id, clob_colum) values (?,?)<doubleQuotes46>;<newline46mondego>String clobData = <doubleQuotes46>....<doubleQuotes46>;<newline46mondego>Reader reader = new StringReader(clobData);<newline46mondego>pstmt.setInt(1, 42);<newline46mondego>pstmt.setCharacterStream(2, reader, clobData.length());<newline46mondego>pstmt.executeUpdate();<newline46mondego>"
"572splitHere46","12726364splitHere46","for( int col = 0; col < myArray[0].length; ++col ){<newline46mondego>            for( int row = 0; row < myArray.length; ++row ){<newline46mondego>                System.out.print(myArray[row][col]);<newline46mondego>                System.out.print(<doubleQuotes46>\t<doubleQuotes46>);<newline46mondego>            }<newline46mondego>            System.out.println();<newline46mondego>        }<newline46mondego>"
"573splitHere46","12726409splitHere46","long DocumentId<newline46mondego>names {<doubleQuotes46>A<doubleQuotes46>, <doubleQuotes46>B<doubleQuotes46>, <doubleQuotes46>C<doubleQuotes46>}<newline46mondego>location {<doubleQuotes46>1<doubleQuotes46>, <doubleQuotes46>2<doubleQuotes46>, <doubleQuotes46>3<doubleQuotes46>}<newline46mondego>and so on...<newline46mondego>"
"574splitHere46","12726409splitHere46","{<newline46mondego>...<newline46mondego>    StringBuilder sb = new StringBuilder(<doubleQuotes46>insert into mytable (<doubleQuotes46>);<newline46mondego>    List<Object> params = new ArrayList<Object>();<newline46mondego><newline46mondego>    addColumnAndValue(sb, <doubleQuotes46>DocumentID<doubleQuotes46>, docIdYouHaveSomewhere, params);<newline46mondego>    int i = 0;<newline46mondego>    for (String name: names)<newline46mondego>       addColumnAndValue(sb, <doubleQuotes46>,name<doubleQuotes46> + i, name, params);<newline46mondego>    i = 0;<newline46mondego>    for (String location: locations)<newline46mondego>       addColumnAndValue(sb, <doubleQuotes46>,location<doubleQuotes46> + i, location, params);<newline46mondego>    // now close the thing<newline46mondego>    sb.append(<doubleQuotes46>) values (?<doubleQuotes46>);<newline46mondego>    for (i = 1; i<params.size(); i++)<newline46mondego>       sb.append(<doubleQuotes46>,?<doubleQuotes46>);<newline46mondego>    sb.append(<doubleQuotes46>=<doubleQuotes46>);<newline46mondego><newline46mondego>    // and now sb.toString() will contain valid SQL and the param values for a PreparedStatement will be in params array-list:<newline46mondego><newline46mondego>    PreparedStatement ps = conn.prepareStatement(sb.toString());<newline46mondego>    for (i=0; i<params.size(); i++)<newline46mondego>       ps.setObject(i+1, params.get(i));<newline46mondego><newline46mondego>    ps.executeUpdate(); // voi là!<newline46mondego>    ...<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>private void add addColumnAndValue(StringBuilder sb, String columnName, Object value, List<Object> params) {<newline46mondego>   sb.append(columnName);<newline46mondego>   params.add(value);<newline46mondego>}<newline46mondego>"
"575splitHere46","12726514splitHere46","A"
"576splitHere46","12726514splitHere46","B extends A"
"577splitHere46","12726514splitHere46","class Generic<T>"
"578splitHere46","12726514splitHere46","Generic<B>"
"579splitHere46","12726514splitHere46","Generic<A>"
"580splitHere46","12726514splitHere46","files"
"581splitHere46","12726514splitHere46","private List<? extends MultipartFiles> files;<newline46mondego>"
"582splitHere46","12726514splitHere46","null"
"583splitHere46","12726515splitHere46","Element e = (Element) nl.item(i);<newline46mondego>     NamedNodeMap attributes = e.getAttributes();<newline46mondego>            for (int a = 0; a < attributes.getLength(); a++) <newline46mondego>       {<newline46mondego>            Node theAttribute = attributes.item(a);<newline46mondego>          System.out.println(theAttribute.getNodeName() + <doubleQuotes46>=<doubleQuotes46> + theAttribute.getNodeValue());<newline46mondego>        }<newline46mondego>"
"584splitHere46","12726691splitHere46","Preference isReg = (Preference) findPreference(<doubleQuotes46>isReg<doubleQuotes46>);<newline46mondego>"
"585splitHere46","12726691splitHere46","CheckBoxPreference"
"586splitHere46","12726691splitHere46","CheckBoxPreference isReg = (CheckBoxPreference) findPreference(<doubleQuotes46>isReg<doubleQuotes46>);<newline46mondego>"
"587splitHere46","12726691splitHere46","commit"
"588splitHere46","12726691splitHere46","public class PrefsActivity extends PreferenceActivity implements<newline46mondego>                                   OnSharedPreferenceChangeListener{<newline46mondego>CheckBoxPreference isReg;<newline46mondego>@Override<newline46mondego>public void onCreate(Bundle savedInstanceState){<newline46mondego>    super.onCreate(savedInstanceState);<newline46mondego>    addPreferencesFromResource(R.xml.activity_preferences);<newline46mondego>    PreferenceManager.setDefaultValues(this,R.xml.activity_preferences, false);<newline46mondego>    isReg = (CheckBoxPreference)findPreference(<doubleQuotes46>isReg<doubleQuotes46>);<newline46mondego>    if (isReg != null){<newline46mondego>            isReg.setOnPreferenceChangeListener(new OnPreferenceChangeListener(){<newline46mondego>                @Override<newline46mondego>                public boolean onPreferenceChange(Preference preference,<newline46mondego>                        Object newValue) {<newline46mondego>                    boolean blnIsReg = Boolean.getBoolean(newValue.toString());<newline46mondego>                    Editor e = _prefs.edit();<newline46mondego>                    e.putBoolean(<doubleQuotes46>isReg<doubleQuotes46>, blnIsReg);<newline46mondego>                    e.commit();<newline46mondego>                    return true;<newline46mondego>                }<newline46mondego>            });<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>@Override<newline46mondego>public void onStart(){<newline46mondego>    super.onStart();<newline46mondego>    _prefs = PreferenceManager.getDefaultSharedPreferences(this);<newline46mondego>}<newline46mondego>"
"589splitHere46","12726691splitHere46","@Override<newline46mondego>public void onSharedPreferenceChanged(SharedPreferences sharedPreferences, String key) {<newline46mondego>     Log.d(TAG, <doubleQuotes46>onSharedPreferenceChanged; key = <doubleQuotes46> + key);<newline46mondego>}<newline46mondego>"
"590splitHere46","12726737splitHere46","if(gps_loc!=null){<newline46mondego>    locationResult.gotLocation(gps_loc);<newline46mondego>    return;<newline46mondego>}<newline46mondego><newline46mondego>if(net_loc!=null){<newline46mondego>    locationResult.gotLocation(net_loc);<newline46mondego>    return;<newline46mondego>}<newline46mondego><newline46mondego>locationResult.gotLocation(null);<newline46mondego>"
"591splitHere46","12726737splitHere46","null"
"592splitHere46","12726769splitHere46","TreeSet"
"593splitHere46","12726800splitHere46","ComboBoxModel"
"594splitHere46","12726800splitHere46","JComboBox"
"595splitHere46","12726800splitHere46","ComboxBoxModel"
"596splitHere46","12726800splitHere46","ComboBoxModel"
"597splitHere46","12726800splitHere46","JComboBox"
"598splitHere46","12726800splitHere46","ComboBoxModel"
"599splitHere46","12726800splitHere46","JComboBox"
"600splitHere46","12726800splitHere46","JComboBox"
"601splitHere46","12726857splitHere46","Scanner readfile = new Scanner(filedata);<newline46mondego>   String line1 = readfile.nextLine();<newline46mondego>   readfile = readfile.useDelimiter(<doubleQuotes46>,<doubleQuotes46>);<newline46mondego>"
"602splitHere46","12726857splitHere46","String line = file.nextLine();<newline46mondego><newline46mondego>for (String each: line.split(<doubleQuotes46>,<doubleQuotes46>)) {<newline46mondego>   scores[row][col] = each;<newline46mondego>}<newline46mondego>"
"603splitHere46","12726910splitHere46","PrintStream out = new PrintStream(new FileOutputStream(<doubleQuotes46>output.txt<doubleQuotes46>));<newline46mondego>System.setOut(out);<newline46mondego>"
"604splitHere46","12726976splitHere46","if(v == <doubleQuotes46>y<doubleQuotes46>)<newline46mondego>"
"605splitHere46","12726976splitHere46","String.equals()"
"606splitHere46","12726976splitHere46","if (<doubleQuotes46>y<doubleQuotes46>.equals(v)) //checking <doubleQuotes46>y<doubleQuotes46>.equals() prevents null access if v is null<newline46mondego>"
"607splitHere46","12726976splitHere46","operator=="
"608splitHere46","12726976splitHere46","equals()"
"609splitHere46","12727197splitHere46","myArray[0][col], myArray[1][col]"
"610splitHere46","12727197splitHere46","for( int row = 0; row < myArray.length; ++row ){  <newline46mondego>       System.out.printf( <doubleQuotes46>%16s\t%9s<doubleQuotes46>, myArray[0][col], myArray[1][col]  );<newline46mondego>    } <newline46mondego>"
"611splitHere46","12727197splitHere46","for( int col = 0; col < myArray[0].length; ++col ){<newline46mondego><newline46mondego>    System.out.printf( <doubleQuotes46>%16s\t%9s<doubleQuotes46>, myArray[0][col], myArray[1][col]  );<newline46mondego><newline46mondego>    System.out.println();         <newline46mondego>}<newline46mondego>"
"612splitHere46","12727253splitHere46","setToolTipText()"
"613splitHere46","12727253splitHere46","trayIcon"
"614splitHere46","12727253splitHere46","TrayIcon"
"615splitHere46","12727253splitHere46","SystemTray"
"616splitHere46","12727253splitHere46","ToolTip"
"617splitHere46","12727253splitHere46","TrayIcon"
"618splitHere46","12727253splitHere46","import java.awt.*;<newline46mondego>import java.awt.event.ActionEvent;<newline46mondego>import java.awt.event.ActionListener;<newline46mondego>import java.net.MalformedURLException;<newline46mondego>import java.net.URL;<newline46mondego>import javax.swing.SwingUtilities;<newline46mondego>import javax.swing.Timer;<newline46mondego><newline46mondego>public class SystemTrayExample {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        SwingUtilities.invokeLater(new Runnable() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                new SystemTrayExample().createAndAddTrayIcon();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>    private void createAndAddTrayIcon() {<newline46mondego>        try {<newline46mondego>            initComponents();<newline46mondego>        } catch (MalformedURLException ex) {<newline46mondego>            ex.printStackTrace();<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    private void initComponents() throws MalformedURLException {<newline46mondego><newline46mondego>        //Check the SystemTray is supported<newline46mondego>        if (!SystemTray.isSupported()) {<newline46mondego>            System.out.println(<doubleQuotes46>SystemTray is not supported<doubleQuotes46>);<newline46mondego>            return;<newline46mondego>        }<newline46mondego>        final PopupMenu popup = new PopupMenu();<newline46mondego>        final TrayIcon trayIcon = new TrayIcon(Toolkit.getDefaultToolkit().createImage(new URL(<doubleQuotes46>http://docs.oracle.com/javase/tutorial/uiswing/examples/misc/TrayIconDemoProject/src/misc/images/bulb.gif<doubleQuotes46>)));<newline46mondego>        trayIcon.setToolTip(<doubleQuotes46>I am the initial message<doubleQuotes46>);<newline46mondego><newline46mondego>        final SystemTray tray = SystemTray.getSystemTray();<newline46mondego><newline46mondego>        // Create a pop-up menu components<newline46mondego>        MenuItem exitItem = new MenuItem(<doubleQuotes46>Exit<doubleQuotes46>);<newline46mondego>        exitItem.addActionListener(new ActionListener() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void actionPerformed(ActionEvent e) {<newline46mondego>                System.exit(0);<newline46mondego>            }<newline46mondego>        });<newline46mondego><newline46mondego>        //Add components to pop-up menu<newline46mondego>        popup.add(exitItem);<newline46mondego><newline46mondego>        //set popmenu<newline46mondego>        trayIcon.setPopupMenu(popup);<newline46mondego><newline46mondego>        try {<newline46mondego>            tray.add(trayIcon);<newline46mondego>        } catch (AWTException e) {<newline46mondego>            System.out.println(<doubleQuotes46>TrayIcon could not be added.<doubleQuotes46>);<newline46mondego>        }<newline46mondego><newline46mondego>        int delay = 5000; //milliseconds<newline46mondego>        final Timer timer = new Timer(delay, new ActionListener() {<newline46mondego><newline46mondego>            int count = 1;<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void actionPerformed(ActionEvent evt) {<newline46mondego><newline46mondego>                System.out.println(<doubleQuotes46>Updating on EDT <doubleQuotes46> + (SwingUtilities.isEventDispatchThread() ? <doubleQuotes46>Yes<doubleQuotes46> : <doubleQuotes46>No<doubleQuotes46>));<newline46mondego><newline46mondego>                if (count == 3) {<newline46mondego>                    trayIcon.setToolTip(<doubleQuotes46>I am the last message<doubleQuotes46>);<newline46mondego>                    ((Timer) evt.getSource()).stop();//stop timer<newline46mondego>                }<newline46mondego>                if (count == 2) {//check if we should change tooltip<newline46mondego>                    trayIcon.setToolTip(<doubleQuotes46>I am the second message<doubleQuotes46>);<newline46mondego>                }<newline46mondego>                if (count == 1) {<newline46mondego>                    trayIcon.setToolTip(<doubleQuotes46>I am the  first message<doubleQuotes46>);<newline46mondego>                }<newline46mondego><newline46mondego>                count++;<newline46mondego><newline46mondego>            }<newline46mondego>        });<newline46mondego><newline46mondego>        timer.start();//start timer to change tooltip<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"619splitHere46","12727349splitHere46","final Map<Integer, Float> map = new HashMap<Integer, Float>();<newline46mondego>List<Integer> list = new ArrayList<Integer>(); // this assignment is unncessary [1]<newline46mondego><newline46mondego>map.put(0, 0.0f);<newline46mondego>map.put(1, 5.0f);<newline46mondego>map.put(2, 2.0f);<newline46mondego><newline46mondego>list = new ArrayList<Integer>(map.keySet()); // 1. assignment is replaced here<newline46mondego><newline46mondego>Collections.sort(list, new Comparator<Integer>() {<newline46mondego>    public int compare(Integer left, Integer right) {<newline46mondego>        Float leftCost = map.get(left);<newline46mondego>        Float rightCost = map.get(right);<newline46mondego>        return leftCost.compareTo(rightCost);<newline46mondego>    }<newline46mondego>})<newline46mondego>"
"620splitHere46","12727427splitHere46","myInnerClassTest"
"621splitHere46","12727427splitHere46","static"
"622splitHere46","12727509splitHere46","/"
"623splitHere46","12727608splitHere46","matches.size()"
"624splitHere46","12727608splitHere46","capacity"
"625splitHere46","12727644splitHere46","(153 << 8)"
"626splitHere46","12727644splitHere46","153 * pow(2, 8)"
"627splitHere46","12727644splitHere46","(153 >> 8)"
"628splitHere46","12727644splitHere46","153 / pow(2, 8)"
"629splitHere46","12727644splitHere46","3 => 0011<newline46mondego><newline46mondego>3 << 2 is equal to 1100 -> (Which is code for 12)<newline46mondego><newline46mondego>3 >> 2 is equal to 0000 -> (Which is code for 0) -> you can see - **(3 / 4 = 0)**<newline46mondego>"
"630splitHere46","12727644splitHere46","right shifting rounds off towards negative infinity"
"631splitHere46","12727644splitHere46","-3 >> 1 --> -2 (-1.5 is rounded to -2)<newline46mondego>"
"632splitHere46","12727644splitHere46","-3 ==> 11111111111111111111111111111101<newline46mondego><newline46mondego>-3 >> 1 ==> 11111111111111111111111111111110 (-3 / 2 = -1.5 -> rounded to -2)<newline46mondego>"
"633splitHere46","12727644splitHere46","-3"
"634splitHere46","12727644splitHere46","Right shifting a negative number gives a number greater than the original number.."
"635splitHere46","12727644splitHere46","0"
"636splitHere46","12727644splitHere46","value obtained will be less than the original.."
"637splitHere46","12727644splitHere46","3 ==>  00000000000000000000000000000011<newline46mondego><newline46mondego>3 >> 1 ==> 00000000000000000000000000000001 (3 / 2 = 1.5 -> rounded to 1)<newline46mondego>"
"638splitHere46","12727644splitHere46","left-shifting"
"639splitHere46","12727779splitHere46","JSONObject"
"640splitHere46","12727779splitHere46","import net.sf.json.JSONObject;<newline46mondego>"
"641splitHere46","12727779splitHere46","import org.json.simple.JSONObject;<newline46mondego>"
"642splitHere46","12727842splitHere46","public void init(int data_length) {<newline46mondego>    init(new byte[data_length]);<newline46mondego>}<newline46mondego>"
"643splitHere46","12727842splitHere46","init"
"644splitHere46","12727842splitHere46","byte[]"
"645splitHere46","12727842splitHere46","Message"
"646splitHere46","12727842splitHere46","init"
"647splitHere46","12728036splitHere46","try {<newline46mondego>    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());<newline46mondego>} catch (ClassNotFoundException e) {<newline46mondego>    e.printStackTrace();<newline46mondego>} catch (InstantiationException e) {<newline46mondego>    e.printStackTrace();<newline46mondego>} catch (IllegalAccessException e) {<newline46mondego>    e.printStackTrace();<newline46mondego>} catch (UnsupportedLookAndFeelException e) {<newline46mondego>    e.printStackTrace();<newline46mondego>}<newline46mondego>"
"648splitHere46","12728089splitHere46","machineArray[count][0].equals(name)<newline46mondego>"
"649splitHere46","12728106splitHere46","sed -i 's#<a href=<doubleQuotes46>http://affiliates.eautorepair.net/z/15/CD65/&dp=84<doubleQuotes46>><img src=<doubleQuotes46>http://affiliates.eautorepair.net/42/65/15/&dp=84<doubleQuotes46> alt=<doubleQuotes46>Do it Yourself Automobile Repair Information<doubleQuotes46> border=<doubleQuotes46>0<doubleQuotes46>></a>##g' *<newline46mondego>"
"650splitHere46","12728106splitHere46","<p><newline46mondego>            <input type=<doubleQuotes46>text<doubleQuotes46> id=<doubleQuotes46>query<doubleQuotes46> name=<doubleQuotes46>query<doubleQuotes46> value=<doubleQuotes46>XXXXX<doubleQuotes46>/><newline46mondego>            <input type=<doubleQuotes46>submit<doubleQuotes46> id=<doubleQuotes46>submit<doubleQuotes46> value=<doubleQuotes46><doubleQuotes46>/><newline46mondego>          </p><newline46mondego>"
"651splitHere46","12728119splitHere46","reader.readLine();"
"652splitHere46","12728119splitHere46","String time = reader.readLine();"
"653splitHere46","12728119splitHere46","public static void main(String[] args) {<newline46mondego>    String machine = <doubleQuotes46>utcnist2.colorado.edu<doubleQuotes46>;<newline46mondego>    // standart port on Computer to take time of day on normal computer<newline46mondego>    final int daytimeport = 13;<newline46mondego><newline46mondego>    Socket socket = null;<newline46mondego>    try {<newline46mondego>        socket = new Socket(machine, daytimeport);<newline46mondego>        BufferedReader reader = new BufferedReader(new InputStreamReader(socket.getInputStream()));<newline46mondego>        reader.readLine();<newline46mondego>        String time = reader.readLine();<newline46mondego>        System.out.printf(<doubleQuotes46>%s says it is %s %n<doubleQuotes46>, machine, time);<newline46mondego>    } catch (UnknownHostException e) {<newline46mondego>        e.printStackTrace();<newline46mondego>    } catch (IOException e) {<newline46mondego>        e.printStackTrace();<newline46mondego>    } finally {<newline46mondego>        try {<newline46mondego>            socket.close();<newline46mondego>        } catch (IOException e) {<newline46mondego>            e.printStackTrace();<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"654splitHere46","12728134splitHere46","javax.xml.xpath"
"655splitHere46","12728134splitHere46","import java.io.StringReader;<newline46mondego>import javax.xml.xpath.*;<newline46mondego>import org.xml.sax.InputSource;<newline46mondego><newline46mondego>public class Demo {<newline46mondego><newline46mondego>    public static void main(String[] args) throws Exception {<newline46mondego>        String xml = <doubleQuotes46><?xml version='1.0' encoding='UTF-8'?><Ticket><bookedSeats>3</bookedSeats><bpAddress>Anand Rao Circle</bpAddress><bpLandMark>ganesha temple</bpLandMark><bpLocation> Ghousia College</bpLocation><bpPhoneNo>98798679769</bpPhoneNo><bpTime>1200</bpTime><busServiceName>efdf</busServiceName><busType>Volvo A/C Semi Sleeper (2+2)</busType><commission>66.19</commission><dateOfJourney>2012-10-05</dateOfJourney><destination>Chennai</destination><fare>600.0</fare><issueTime>2012-10-04T15:46:45.073+05:30</issueTime><noOfSeats>1</noOfSeats><passengerMobile>1234567890</passengerMobile><passengerName>Test</passengerName><pnr>RATPKES44974756</pnr><seatDetails><seatDetail><commission>66.19</commission><fare>600.0</fare><gender>MALE</gender><passengerAge>0</passengerAge><passengerMobile>1234567890</passengerMobile><passengerName>Test</passengerName><prime>false</prime><seatName>3</seatName></seatDetail></seatDetails><source>Bangalore</source><status>BOOKED</status><travelsName>Rajratan Travels</travelsName></Ticket><doubleQuotes46>;<newline46mondego><newline46mondego>        XPathFactory xpf = XPathFactory.newInstance();<newline46mondego>        XPath xpath = xpf.newXPath();<newline46mondego><newline46mondego>        InputSource inputSource = new InputSource(new StringReader(xml));<newline46mondego>        String pnr = (String) xpath.evaluate(<doubleQuotes46>/Ticket/pnr<doubleQuotes46>, inputSource, XPathConstants.STRING);<newline46mondego>        System.out.println(pnr);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"656splitHere46","12728134splitHere46","RATPKES44974756<newline46mondego>"
"657splitHere46","12728164splitHere46","purchase_date"
"658splitHere46","12728164splitHere46","select * <newline46mondego>from <newline46mondego>   purchases <newline46mondego>where <newline46mondego>   purchase_date >= trunc(sysdate,'mm')<newline46mondego>"
"659splitHere46","12728164splitHere46","purchase_date"
"660splitHere46","12728164splitHere46","select * <newline46mondego>from <newline46mondego>   purchases <newline46mondego>where <newline46mondego>   to_date(purchase_date,'mm/dd/yyyy') >= trunc(sysdate,'mm')<newline46mondego>"
"661splitHere46","12728164splitHere46","10/04/2012 08:58"
"662splitHere46","12728164splitHere46","10/01/2012 00:00"
"663splitHere46","12728452splitHere46","if(bar == <doubleQuotes46>Bar1<doubleQuotes46>) {<newline46mondego>    return new Bar1();<newline46mondego>}<newline46mondego>"
"664splitHere46","12728452splitHere46","if(<doubleQuotes46>Bar1<doubleQuotes46>.equals(bar)) {<newline46mondego>    return new Bar1();<newline46mondego>}<newline46mondego>"
"665splitHere46","12728452splitHere46","public class FooFactory {<newline46mondego><newline46mondego>    public static Foo create(Class<Foo> clazz) {<newline46mondego>        return clazz.newInstance();<newline46mondego>    }<newline46mondego><newline46mondego>    public static Foo create(String className) {<newline46mondego>        return create(Class.forName(className));<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"666splitHere46","12728551splitHere46","properties.setProperty(<doubleQuotes46>mail.smtp.starttls.enable<doubleQuotes46>, <doubleQuotes46>true<doubleQuotes46>);"
"667splitHere46","12728551splitHere46","mail.smtp.starttls.required"
"668splitHere46","12728638splitHere46","<h:outputText>"
"669splitHere46","12728638splitHere46","FacesServlet"
"670splitHere46","12728638splitHere46","#{}"
"671splitHere46","12728638splitHere46","<p>#{foo}</p>"
"672splitHere46","12728638splitHere46","<h:outputText>"
"673splitHere46","12728638splitHere46","FacesServlet"
"674splitHere46","12728638splitHere46","<url-pattern>"
"675splitHere46","12728638splitHere46","FacesServlet"
"676splitHere46","12728638splitHere46","/WEB-INF/web.xml"
"677splitHere46","12728638splitHere46","FacesServlet"
"678splitHere46","12728638splitHere46","*.xhtml"
"679splitHere46","12728638splitHere46","b.xhtml"
"680splitHere46","12728638splitHere46","b.jsp"
"681splitHere46","12728638splitHere46","<h:head>"
"682splitHere46","12728638splitHere46","<f:ajax>"
"683splitHere46","12728822splitHere46","ffmpeg -i input1.avi -qscale:v 1 intermediate1.mpg<newline46mondego>ffmpeg -i input2.avi -qscale:v 1 intermediate2.mpg<newline46mondego>cat intermediate1.mpg intermediate2.mpg > intermediate_all.mpg<newline46mondego>ffmpeg -i intermediate_all.mpg -qscale:v 2 output.avi<newline46mondego>"
"684splitHere46","12728836splitHere46","Command command = ((ICommandService)getSite().getService(ICommandService.class)).getCommand(commandId);<newline46mondego>...<newline46mondego>final Event trigger = new Event();<newline46mondego>ExecutionEvent executionEvent = ((IHandlerService)getSite().getService(IHandlerService.class)).createExecutionEvent(command, trigger);<newline46mondego>command.executeWithChecks(executionEvent);<newline46mondego>"
"685splitHere46","12729033splitHere46","<p:password>"
"686splitHere46","12729033splitHere46","<h:inputSecret>"
"687splitHere46","12729033splitHere46","redisplay=<doubleQuotes46>true<doubleQuotes46>"
"688splitHere46","12729033splitHere46","<h:inputSecret>"
"689splitHere46","12729033splitHere46","<p:password ... redisplay=<doubleQuotes46>true<doubleQuotes46> /><newline46mondego>"
"690splitHere46","12729063splitHere46","public class File < T > {<newline46mondego><newline46mondego>    private T file;<newline46mondego>    private String location;<newline46mondego><newline46mondego>    public T getFile() {<newline46mondego>        return file;<newline46mondego>    }<newline46mondego>    public void setFile( T file ) {<newline46mondego>        this.file = file;<newline46mondego>    }<newline46mondego><newline46mondego>    public String getLocation() {<newline46mondego>        return location;<newline46mondego>    }<newline46mondego>    public void setLocation( String location ) {<newline46mondego>        this.location = location;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"691splitHere46","12729063splitHere46","File< FormFile > uploadFile = new File< FormFile >();<newline46mondego>uploadFile.setFile( new FormFile() );<newline46mondego><newline46mondego>File< java.io.File > downloadFile = new File< java.io.File >();<newline46mondego>downloadFile.setFile( new java.io.File( <doubleQuotes46>something.txt<doubleQuotes46> ) );<newline46mondego>"
"692splitHere46","12729158splitHere46","ListView<String> textAreasListView = new ListView<String>(<doubleQuotes46>someid<doubleQuotes46>, bean.map.keySet()) {<newline46mondego>    @Override<newline46mondego>    protected void populateItem(final ListItem<String> itemLang) {<newline46mondego>        itemLang.add(new Label(<doubleQuotes46>label<doubleQuotes46>, itemLang.getModelObject()));<newline46mondego>        Model<String> textModel = new Model<String>() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public String getObject() {<newline46mondego>                return bean.map.get(itemLang.getModelObject()).toString;<newline46mondego>            }<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void setObject(String object) {<newline46mondego>                bean.map.put(itemLang.getModelObject(), new Address(object));<newline46mondego>            }<newline46mondego>        };<newline46mondego>        itemLang.add(new TextField<String>(<doubleQuotes46>email<doubleQuotes46>, textModel));<newline46mondego>    }<newline46mondego>};<newline46mondego>"
"693splitHere46","12729301splitHere46","<servlet-mapping><newline46mondego>    <servlet-name>spring</servlet-name><newline46mondego>    <url-pattern>/</url-pattern><newline46mondego></servlet-mapping><newline46mondego>"
"694splitHere46","12729322splitHere46","assertTrue()"
"695splitHere46","12729322splitHere46","assertTrue(d.getFormType().equals(<doubleQuotes46>string1<doubleQuotes46>) ||<newline46mondego>           d.getFormType().equals(<doubleQuotes46>string2<doubleQuotes46>));<newline46mondego>"
"696splitHere46","12729322splitHere46","assertTrue(<doubleQuotes46>Unexpected value for d.getFormType(): <doubleQuotes46> + d.getFormType(),<newline46mondego>           d.getFormType().equals(<doubleQuotes46>string1<doubleQuotes46>) ||<newline46mondego>           d.getFormType().equals(<doubleQuotes46>string2<doubleQuotes46>));<newline46mondego>"
"697splitHere46","12729334splitHere46","META-INF/services"
"698splitHere46","12729334splitHere46","interface"
"699splitHere46","12729334splitHere46","package com.example;<newline46mondego><newline46mondego>public interface SomeService {<newline46mondego><newline46mondego>    String getServiceId();<newline46mondego><newline46mondego>    String getDisplayName();<newline46mondego>}<newline46mondego>"
"700splitHere46","12729334splitHere46","ServiceLoader"
"701splitHere46","12729334splitHere46","Iterable"
"702splitHere46","12729334splitHere46","ServiceLoader<SomeService> loader = ServiceLoader.load(SomeService.class);<newline46mondego>for (SomeService serv : loader) {<newline46mondego>    System.out.println(serv.getDisplayName());<newline46mondego>}<newline46mondego>"
"703splitHere46","12729334splitHere46","META-INF/services"
"704splitHere46","12729334splitHere46","package com.acme;<newline46mondego><newline46mondego>public class SomeImplementation implements SomeService {<newline46mondego><newline46mondego>    // ...<newline46mondego><newline46mondego>    public SomeImplementation() { ... }<newline46mondego><newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"705splitHere46","12729334splitHere46","META-INF/services"
"706splitHere46","12729334splitHere46","com.example.SomeService"
"707splitHere46","12729334splitHere46","com.acme.SomeImplementation"
"708splitHere46","12729334splitHere46","META-INF/services"
"709splitHere46","12729356splitHere46","int"
"710splitHere46","12729356splitHere46","double"
"711splitHere46","12729356splitHere46","double"
"712splitHere46","12729356splitHere46","int[] ints = {1, 2, 3, 4};<newline46mondego>double[] doubles = new double[ints.length];<newline46mondego>for(int i=0; i<ints.length; i++) {<newline46mondego>    doubles[i] = ints[i];<newline46mondego>}<newline46mondego>"
"713splitHere46","12729356splitHere46","public static double[] copyFromIntArray(int[] source) {<newline46mondego>    double[] dest = new double[source.length];<newline46mondego>    for(int i=0; i<source.length; i++) {<newline46mondego>        dest[i] = source[i];<newline46mondego>    }<newline46mondego>    return dest;<newline46mondego>}<newline46mondego>"
"714splitHere46","12729409splitHere46","<JBOSS_HOME>/bin/run.(sh|bat) -b <ip_address>"
"715splitHere46","12729409splitHere46","<JBOSS_HOME>/bin/standalone.(sh|bat) -b <ip_address>"
"716splitHere46","12729464splitHere46","JNIEnv *Env;<newline46mondego>(*Env)->CallVoidMethod(Env,object,callBackToDeliverKeyStroke);<newline46mondego>"
"717splitHere46","12729464splitHere46","Env"
"718splitHere46","12729478splitHere46","<ui:include src>"
"719splitHere46","12729478splitHere46","init()"
"720splitHere46","12729478splitHere46","<f:phaseListener>"
"721splitHere46","12729478splitHere46","@ManagedProperty"
"722splitHere46","12729478splitHere46","@PostConstruct"
"723splitHere46","12729478splitHere46","@RequestScoped"
"724splitHere46","12729478splitHere46","@ManagedProperty(<doubleQuotes46>#{param.racecode}<doubleQuotes46>)<newline46mondego>private String racecode;<newline46mondego><newline46mondego>@PostConstruct<newline46mondego>public void init() {<newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"725splitHere46","12729530splitHere46","public Friend()<newline46mondego>{<newline46mondego><newline46mondego>}<newline46mondego>"
"726splitHere46","12729530splitHere46","public Friend(int arg)<newline46mondego>{<newline46mondego><newline46mondego>}<newline46mondego>"
"727splitHere46","12729530splitHere46","public Friend(String s)<newline46mondego>{<newline46mondego><newline46mondego>}<newline46mondego>"
"728splitHere46","12729530splitHere46","public Friend(Friend f)<newline46mondego>{<newline46mondego><newline46mondego>}<newline46mondego>"
"729splitHere46","12729553splitHere46","private static Font italic;<newline46mondego><newline46mondego>public static void main(String[] args) {<newline46mondego>    final Display display = new Display();<newline46mondego>    Shell shell = new Shell(display);<newline46mondego>    shell.setLayout(new GridLayout(1,false));<newline46mondego><newline46mondego>    italic = new Font(Display.getCurrent(), <doubleQuotes46>Verdana<doubleQuotes46>, 6, SWT.ITALIC);<newline46mondego><newline46mondego>    final Text text = new Text(shell, SWT.BORDER);<newline46mondego><newline46mondego>    text.addListener(SWT.Paint, new Listener() {<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void handleEvent(Event event) {<newline46mondego><newline46mondego>            if(text.getText().length() < 1 && !text.isFocusControl())<newline46mondego>            {<newline46mondego>                GC gc = event.gc;<newline46mondego>                gc.setFont(italic);<newline46mondego>                gc.setForeground(display.getSystemColor(SWT.COLOR_GRAY));<newline46mondego><newline46mondego>                Point size = text.computeSize(SWT.DEFAULT, SWT.DEFAULT);<newline46mondego><newline46mondego>                /* Strangely the y positioning doesn't work correctly */<newline46mondego>                //gc.drawText(<doubleQuotes46>Please enter text<doubleQuotes46>, 1, (size.y / 2) - (italic.getFontData()[0].getHeight() / 2));<newline46mondego>                gc.drawText(<doubleQuotes46>Please enter text<doubleQuotes46>, 1, 4);<newline46mondego>            }<newline46mondego>        }<newline46mondego>    });<newline46mondego><newline46mondego>    text.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true, true));<newline46mondego><newline46mondego>    Button button = new Button(shell, SWT.PUSH);<newline46mondego>    button.setText(<doubleQuotes46>Dummy<doubleQuotes46>);<newline46mondego><newline46mondego>    button.forceFocus();<newline46mondego><newline46mondego>    shell.setSize(200, 100);<newline46mondego>    shell.open();<newline46mondego><newline46mondego>    while (!shell.isDisposed()) {<newline46mondego>        if (!display.readAndDispatch())<newline46mondego>            display.sleep();<newline46mondego>    }<newline46mondego>    italic.dispose();<newline46mondego>    display.dispose();<newline46mondego>}<newline46mondego>"
"730splitHere46","12729699splitHere46","C.data[i][j] = this.data[i][j];<-- Culprit<newline46mondego>"
"731splitHere46","12729699splitHere46","i"
"732splitHere46","12729699splitHere46","rowStart-1"
"733splitHere46","12729699splitHere46","rowEnd-1"
"734splitHere46","12729699splitHere46","i"
"735splitHere46","12729699splitHere46","j"
"736splitHere46","12729699splitHere46","C.data"
"737splitHere46","12729699splitHere46","for (int i=rowStart-1,p=0; i<rowEnd; i++,p++) {<newline46mondego>        for (int j=colStart-1,q=0; j<colEnd; j++,q++) {<newline46mondego>            C.data[p][q] = this.data[i][j];<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"738splitHere46","12729714splitHere46","Serializable"
"739splitHere46","12729714splitHere46","Serialized"
"740splitHere46","12729714splitHere46","Fields"
"741splitHere46","12729714splitHere46","Object"
"742splitHere46","12729714splitHere46","entire object graph"
"743splitHere46","12729714splitHere46","Client"
"744splitHere46","12729714splitHere46","Object Reference Variable"
"745splitHere46","12729714splitHere46","Order"
"746splitHere46","12729714splitHere46","Field"
"747splitHere46","12729714splitHere46","Field"
"748splitHere46","12729714splitHere46","transient"
"749splitHere46","12729880splitHere46","23+33-34*2^2"
"750splitHere46","12729880splitHere46","try {<newline46mondego>        final ScriptEngine engine = new ScriptEngineManager().getEngineByName(<doubleQuotes46>js<doubleQuotes46>);<newline46mondego>        final Object result = engine.eval(<doubleQuotes46>23+33-34*2^2<doubleQuotes46>);<newline46mondego>        System.out.println(result);<newline46mondego>    } catch (final ScriptException e) {<newline46mondego><newline46mondego>        e.printStackTrace();<newline46mondego>    }<newline46mondego>"
"751splitHere46","12729880splitHere46","-10<newline46mondego>"
"752splitHere46","12729910splitHere46","manager.discoverPeers(channel, new WifiP2pManager.ActionListener() {<newline46mondego>    @Override<newline46mondego>    public void onSuccess() {<newline46mondego>        ...<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void onFailure(int reasonCode) {<newline46mondego>        ...<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"753splitHere46","12730049splitHere46","'\0'"
"754splitHere46","12730049splitHere46","trim()"
"755splitHere46","12730049splitHere46","'\0'"
"756splitHere46","12730049splitHere46","String"
"757splitHere46","12730049splitHere46","String abc2 = new String(bytes, 0, indexOfFirstNull, Charset.forName(<doubleQuotes46>US-ASCII<doubleQuotes46>));<newline46mondego>"
"758splitHere46","12730131splitHere46","from"
"759splitHere46","12730131splitHere46","jar"
"760splitHere46","12730183splitHere46","ajax=true"
"761splitHere46","12730183splitHere46","<h:commandLink..."
"762splitHere46","12730183splitHere46","<p:commandLink..."
"763splitHere46","12730243splitHere46","JmDNS version 3.4.1"
"764splitHere46","12730243splitHere46","this.service_type = <doubleQuotes46>_ros-master._tcp.local.<doubleQuotes46>;<newline46mondego>this.service_name = <doubleQuotes46>RosMaster<doubleQuotes46>;<newline46mondego>this.service_port = 8888;<newline46mondego>String service_key = <doubleQuotes46>description<doubleQuotes46>; // Max 9 chars<newline46mondego>String service_text = <doubleQuotes46>Hypothetical ros master<doubleQuotes46>;<newline46mondego>HashMap<String, byte[]> properties = new HashMap<String, byte[]>();<newline46mondego>properties.put(service_key, text.getBytes());<newline46mondego>// service_info = ServiceInfo.create(service_type, service_name, service_port); // case 1, no text<newline46mondego>// service_info = ServiceInfo.create(service_type, service_name, service_port, 0, 0, true, service_text); // case 2, textual description<newline46mondego>service_info = ServiceInfo.create(service_type, service_name, service_port, 0, 0, true, properties); // case 3, properties assigned textual description<newline46mondego>jmdns.registerService(service_info);<newline46mondego><newline46mondego>Case 1 and case 2 create services detectable by avahi, but they fail to resolve.<newline46mondego>Case 3 works fine.<newline46mondego>"
"765splitHere46","12730358splitHere46","0x8000"
"766splitHere46","12730358splitHere46","0x0001"
"767splitHere46","12730358splitHere46","&"
"768splitHere46","12730358splitHere46","StringBuilder"
"769splitHere46","12730358splitHere46","StringBuilder"
"770splitHere46","12730358splitHere46","0x8000"
"771splitHere46","12730358splitHere46","final int a = Integer.parseInt(<doubleQuotes46>FFF7<doubleQuotes46>, 16); // 0b1111111111110111<newline46mondego>final int b = Integer.parseInt(<doubleQuotes46>0001<doubleQuotes46>, 16); // 0b0000000000000001<newline46mondego><newline46mondego>final int result = a & b;<newline46mondego><newline46mondego>final String output = String.format(<doubleQuotes46>%16s<doubleQuotes46>, <newline46mondego>    Integer.toBinaryString(result)).replace(' ', '0');<newline46mondego><newline46mondego>System.out.println(output); <newline46mondego>"
"772splitHere46","12730358splitHere46","0000000000000001<newline46mondego>"
"773splitHere46","12730429splitHere46","public class RandomStringUUID {<newline46mondego><newline46mondego>    private static final String MYUUID = UUID.randomUUID().toString().replaceAll(<doubleQuotes46>-<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego><newline46mondego>    public static String getRandomStringUUID() { return MYUUID; }<newline46mondego>}<newline46mondego>"
"774splitHere46","12730429splitHere46","// Anywhere in your code: vv Note that we are using the classname! The method is static.<newline46mondego>String theCommonID = RandomStringUUID.getRandomStringUUID();<newline46mondego>"
"775splitHere46","12730568splitHere46","java.lang.Integer"
"776splitHere46","12730568splitHere46","int"
"777splitHere46","12730568splitHere46","getConstructor"
"778splitHere46","12730568splitHere46","Constructor c = cls.getConstructor(Integer.TYPE);<newline46mondego>"
"779splitHere46","12730568splitHere46","cls.getConstructor()"
"780splitHere46","12730568splitHere46","public static void main"
"781splitHere46","12730568splitHere46","Constructor c = cls.getConstructor(); // we get the implicit constructor without parameters<newline46mondego>Plugin plugin = (Plugin) c.newInstance(); // we instantiate it, no parameters<newline46mondego><newline46mondego>Method m = cls.getDeclaredMethod(<doubleQuotes46>main<doubleQuotes46>, Integer.TYPE);<newline46mondego>m.invoke(plugin, 0); // we invoke the method <doubleQuotes46>main<doubleQuotes46> on our dynamically loaded class, with the 0 parameter.<newline46mondego>"
"782splitHere46","12730687splitHere46","set<Tag>"
"783splitHere46","12730774splitHere46","getDeclaredMethod"
"784splitHere46","12730774splitHere46","final Method method = B.class.getDeclaredMethod(<doubleQuotes46>method<doubleQuotes46>, EMPTY_CLASS_ARRAY);<newline46mondego>method.invoke(b, EMPTY_OBJECT_ARRAY);<newline46mondego>"
"785splitHere46","12730789splitHere46","jclass cls = env->GetObjectClass(obj);<newline46mondego><newline46mondego>// First get the class object<newline46mondego>jmethodID mid = env->GetMethodID(cls, <doubleQuotes46>getClass<doubleQuotes46>, <doubleQuotes46>()Ljava/lang/Class;<doubleQuotes46>);<newline46mondego>jobject clsObj = env->CallObjectMethod(obj, mid);<newline46mondego><newline46mondego>// Now get the class object's class descriptor<newline46mondego>cls = env->GetObjectClass(clsObj);<newline46mondego><newline46mondego>// Find the getName() method on the class object<newline46mondego>mid = env->GetMethodID(cls, <doubleQuotes46>getName<doubleQuotes46>, <doubleQuotes46>()Ljava/lang/String;<doubleQuotes46>);<newline46mondego><newline46mondego>// Call the getName() to get a jstring object back<newline46mondego>jstring strObj = (jstring)env->CallObjectMethod(clsObj, mid);<newline46mondego><newline46mondego>// Now get the c string from the java jstring object<newline46mondego>const char* str = env->GetStringUTFChars(strObj, NULL);<newline46mondego><newline46mondego>// Print the class name<newline46mondego>printf(<doubleQuotes46>\nCalling class is: %s\n<doubleQuotes46>, str);<newline46mondego><newline46mondego>// Release the memory pinned char array<newline46mondego>env->ReleaseStringUTFChars(strObj, str);<newline46mondego>"
"786splitHere46","12730789splitHere46","GetStringUTFChars/ReleaseStringUTFChars"
"787splitHere46","12730789splitHere46","// Make sure that the buffer is large enough<newline46mondego>char str[128];<newline46mondego>jint strlen = env->GetStringUTFLength(strObj);<newline46mondego>env->GetStringUTFRegion(strObj, 0, strlen, str);<newline46mondego>printf(<doubleQuotes46>\nCalling class is: %s\n<doubleQuotes46>, str);<newline46mondego>"
"788splitHere46","12730831splitHere46","URL url = new URL(yourUrl, <doubleQuotes46>/api/v1/status.xml<doubleQuotes46>);<newline46mondego>"
"789splitHere46","12730831splitHere46","URL domain = new URL(<doubleQuotes46>http://example.com<doubleQuotes46>);<newline46mondego>URL url = new URL(domain + <doubleQuotes46>/files/resource.xml<doubleQuotes46>);<newline46mondego>"
"790splitHere46","12730933splitHere46","(incomingUser.get(<doubleQuotes46>location<doubleQuotes46>).toString() == null) ? etc..<newline46mondego>"
"791splitHere46","12730933splitHere46","(incomingUser.get(<doubleQuotes46>location<doubleQuotes46>) == null) ? etc...<newline46mondego>"
"792splitHere46","12731407splitHere46","File direct = new File(Environment.getExternalStorageDirectory() + <doubleQuotes46>/urfoldername/<doubleQuotes46>);<newline46mondego>if(!direct.exists())<newline46mondego>               {<newline46mondego>                   direct.mkdir(); //directory is created;<newline46mondego><newline46mondego>               }<newline46mondego> file = new File(<doubleQuotes46>/sdcard/urfoldername/<doubleQuotes46>+fileName);<newline46mondego> InputStream input = new BufferedInputStream(url.openStream());<newline46mondego> OutputStream output = new FileOutputStream(file);<newline46mondego> byte data[] = new byte[1024];<newline46mondego>         while ((count = input.read(data)) != -1) <newline46mondego>                       {<newline46mondego>               total += count;<newline46mondego>               output.write(data, 0, count); <newline46mondego>               }<newline46mondego>                 output.flush();<newline46mondego>                 output.close();<newline46mondego>                 input.close();                 <newline46mondego>"
"793splitHere46","12731413splitHere46","base"
"794splitHere46","12731413splitHere46","product"
"795splitHere46","12731413splitHere46","base"
"796splitHere46","12731413splitHere46","difference"
"797splitHere46","12731413splitHere46","if(dateTime.getMinuteOfHour() == 59) {<newline46mondego>  dateTime.addMinutes(1);<newline46mondego>  dateTime.setSecondOfMinute(0);<newline46mondego>  dateTime.setMillisOfSecond(0);<newline46mondego>}<newline46mondego>"
"798splitHere46","12731451splitHere46","List<Value>[]"
"799splitHere46","12731451splitHere46","{new ArrayList<Value>()}"
"800splitHere46","12731467splitHere46","AtomicInteger"
"801splitHere46","12731467splitHere46","++"
"802splitHere46","12731467splitHere46","AtomicInteger"
"803splitHere46","12731467splitHere46","AtomicInteger"
"804splitHere46","12731467splitHere46","AtomicInteger"
"805splitHere46","12731467splitHere46","volatile int"
"806splitHere46","12731467splitHere46","volatile"
"807splitHere46","12731467splitHere46","get()"
"808splitHere46","12731467splitHere46","get()"
"809splitHere46","12731469splitHere46","short"
"810splitHere46","12731469splitHere46","BigDecimal testVal = ((rollBytes[0] & 0x7F) <<8) | rollBytes[1]) - 900;<newline46mondego>testVal = val.divide(BigDecimal.valueOf(10));<newline46mondego>"
"811splitHere46","12731469splitHere46","shortVal"
"812splitHere46","12731469splitHere46","rollBytes[1] = (byte) (rollBytes[1] + 900);"
"813splitHere46","12731544splitHere46","JSONArray arr = (JSONArray)new JSONTokener(sourceString).nextValue();<newline46mondego>"
"814splitHere46","12731580splitHere46","createButtonsForButtonBar(Composite parent)"
"815splitHere46","12731580splitHere46","okPressed"
"816splitHere46","12731580splitHere46","super.okPressed()"
"817splitHere46","12731580splitHere46","this.close()"
"818splitHere46","12731580splitHere46","public class OptionsDialog extends Dialog {<newline46mondego><newline46mondego>    public OptionsDialog(Shell parentShell)<newline46mondego>    {<newline46mondego>        super(parentShell);<newline46mondego>        setShellStyle(SWT.CLOSE | SWT.TITLE | SWT.BORDER | SWT.APPLICATION_MODAL);<newline46mondego>        setBlockOnOpen(true);<newline46mondego>    }<newline46mondego><newline46mondego>    protected Control createDialogArea(Composite parent) {<newline46mondego>        Composite composite = (Composite) super.createDialogArea(parent);<newline46mondego><newline46mondego>        GridLayout layout = new GridLayout(1, false);<newline46mondego>        layout.marginHeight = 5;<newline46mondego>        layout.marginWidth = 10;<newline46mondego><newline46mondego>        composite.setLayout(layout);<newline46mondego><newline46mondego>        GridData gridData = new GridData();<newline46mondego>        gridData.widthHint = 500;<newline46mondego><newline46mondego>        composite.setLayoutData(gridData);<newline46mondego><newline46mondego>        createContent();<newline46mondego><newline46mondego>        return composite;<newline46mondego>    }<newline46mondego><newline46mondego>    private void createContent()<newline46mondego>    {<newline46mondego>        /* ADD WIDGETS */<newline46mondego>    }<newline46mondego><newline46mondego>    protected void configureShell(Shell newShell)<newline46mondego>    {<newline46mondego>        super.configureShell(newShell);<newline46mondego>        newShell.setText(<doubleQuotes46>Options<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    public void okPressed()<newline46mondego>    {<newline46mondego>        /* SAVE VALUES */<newline46mondego>        this.close();<newline46mondego>    }<newline46mondego><newline46mondego>    /* GETTERS AND SETTERS/ */<newline46mondego><newline46mondego>}<newline46mondego>"
"819splitHere46","12731613splitHere46","<embed type=<doubleQuotes46>application/x-java-applet;version=1.6<doubleQuotes46><newline46mondego>       width=<doubleQuotes46>512<doubleQuotes46> height=<doubleQuotes46>512<doubleQuotes46><newline46mondego>       code=<doubleQuotes46>MyApplet.class<doubleQuotes46> <newline46mondego>       codebase=<doubleQuotes46>subfolder/<doubleQuotes46>/><newline46mondego>"
"820splitHere46","12731626splitHere46","owner"
"821splitHere46","12731626splitHere46","UserPrincinpal"
"822splitHere46","12731626splitHere46","UserPrincipalLookupService lookupservice=FileSystems.getDefault().getUserPrincipalLookupService();<newline46mondego>        Files.setOwner(path,lookupservice.lookupPrincipalByName(<doubleQuotes46>joe<doubleQuotes46>));<newline46mondego>"
"823splitHere46","12731626splitHere46","UserPrincipalLookupService lookupservice=FileSystems.getDefault().getUserPrincipalLookupService();<newline46mondego>        UserPrincipal userPrincipal = lookupservice.lookupPrincipalByName(<doubleQuotes46>joe<doubleQuotes46>);<newline46mondego>        Files.setOwner(path,userPrincipal);<newline46mondego>"
"824splitHere46","12731752splitHere46","AWT-EventQueue-0"
"825splitHere46","12731752splitHere46","RXTX"
"826splitHere46","12731752splitHere46","hsqldb"
"827splitHere46","12731752splitHere46","SwingWorker"
"828splitHere46","12731752splitHere46","Thread-6"
"829splitHere46","12731752splitHere46","Thread-7"
"830splitHere46","12731752splitHere46","Threads.ThreadHorloge"
"831splitHere46","12731752splitHere46","posO2"
"832splitHere46","12731752splitHere46","SwingWorker"
"833splitHere46","12731752splitHere46","Executors"
"834splitHere46","12731752splitHere46","RUNNABLE"
"835splitHere46","12731752splitHere46","BLOCKED"
"836splitHere46","12731752splitHere46","Thread.STATE"
"837splitHere46","12731752splitHere46","-QUIT"
"838splitHere46","12731935splitHere46","- type<newline46mondego>- argument_name<newline46mondego>- method_name<newline46mondego>- parenthesis (2 terminal symbols)<newline46mondego>- comma (terminal)<newline46mondego>- semicolon (terminal)<newline46mondego>"
"839splitHere46","12731935splitHere46","argument_list : argument<newline46mondego>              | argument, comma, argument_list<newline46mondego>"
"840splitHere46","12731935splitHere46","method_signature : ... <newline46mondego>"
"841splitHere46","12731935splitHere46","method_signature"
"842splitHere46","12731946splitHere46","FileOutputStream output=new FileOutputStream(<doubleQuotes46>C:\\Users\\Aitor\\Desktop\\program.exe<doubleQuotes46>);<newline46mondego>int b = 0;<newline46mondego>byte[] buff = new byte[1024];<newline46mondego>while ((b=program.read(buff))>=0)<newline46mondego>{<newline46mondego>    output.write(buff, 0, b);<newline46mondego>}<newline46mondego>output.close();<newline46mondego>"
"843splitHere46","12732207splitHere46","public class PurgeErrorEntityResponseFilter implements ContainerResponseFilter {<newline46mondego>    @Override<newline46mondego>    public ContainerResponse filter(ContainerRequest request, ContainerResponse response) {<newline46mondego>        if(response.getStatus() == 400) {<newline46mondego>            response.setEntity(null);<newline46mondego>        }<newline46mondego>        return response;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"844splitHere46","12732207splitHere46","<init-param><newline46mondego>       <param-name>com.sun.jersey.spi.container.ContainerResponseFilters</param-name><newline46mondego>       <param-value>x.y.z.PurgeErrorEntityResponseFilter</param-value><newline46mondego>   </init-param><newline46mondego>"
"845splitHere46","12732207splitHere46","response.setEntity(StringEscapeUtils.escapeHtml(response.getEntity().toString()));<newline46mondego>"
"846splitHere46","12732325splitHere46","InputStream in = MainClass.class.getResourceAsStream(<doubleQuotes46>/Resources/file.extension<doubleQuotes46>);<newline46mondego>"
"847splitHere46","12732325splitHere46","File"
"848splitHere46","12732325splitHere46","Class.getResourceAsStream()"
"849splitHere46","12732349splitHere46","30000.1"
"850splitHere46","12732349splitHere46","lDurationMillis = (long)Double.parseDouble(<doubleQuotes46>30000.1<doubleQuotes46>);<newline46mondego>"
"851splitHere46","12732468splitHere46","aspect AspectExample {<newline46mondego>    before() : execution(* Point.*(..))<newline46mondego>    {<newline46mondego>         logger.entering(thisJoinPointStaticPart.getSignature().getName(), thisJoinPointStaticPart.getSignature().getDeclaringType()   );<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    after() : execution(* Point.*(..))<newline46mondego>    {<newline46mondego>         logger.exiting(thisJoinPointStaticPart.getSignature().getName() , thisJoinPointStaticPart.getSignature().getDeclaringType()  );<newline46mondego><newline46mondego>    }<newline46mondego>}<newline46mondego>"
"852splitHere46","12732736splitHere46","(?<!Product)[ ]Type[ ]:[ ](.*?)<<newline46mondego>"
"853splitHere46","12732736splitHere46","[]"
"854splitHere46","12732736splitHere46","Product Type : xyz<"
"855splitHere46","12732736splitHere46","xyz"
"856splitHere46","12732736splitHere46","Other Type : xyz<"
"857splitHere46","12732797splitHere46","<manifest xmlns:android=<doubleQuotes46>http://schemas.android.com/apk/res/android<doubleQuotes46><newline46mondego>    package=<doubleQuotes46>com.my.app<doubleQuotes46><newline46mondego>    android:versionCode=<doubleQuotes46>1<doubleQuotes46><newline46mondego>    android:versionName=<doubleQuotes46>1.0.0<doubleQuotes46> ><newline46mondego><newline46mondego>    <uses-sdk<newline46mondego>        android:minSdkVersion=<doubleQuotes46>8<doubleQuotes46><newline46mondego>        android:targetSdkVersion=<doubleQuotes46>16<doubleQuotes46> /><newline46mondego>"
"858splitHere46","12732797splitHere46","if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.ICE_CREAM_SANDWICH) {<newline46mondego>    /* Perform ICS method */<newline46mondego>} <newline46mondego>else {<newline46mondego>    /* Perform backwards-compatible method */<newline46mondego>}<newline46mondego>"
"859splitHere46","12732822splitHere46","instruments.put(<doubleQuotes46>EURUSD<doubleQuotes46>, new String[]{<doubleQuotes46>4001<doubleQuotes46>,<doubleQuotes46>EURUSD<doubleQuotes46>,<doubleQuotes46>10000<doubleQuotes46>,<doubleQuotes46>0.00001<doubleQuotes46>,<doubleQuotes46>0.1<doubleQuotes46>,<doubleQuotes46>USD<doubleQuotes46>});<newline46mondego>"
"860splitHere46","12732964splitHere46","public class MuleBootstrap<newline46mondego>{<newline46mondego>    public static void main(final String[] args) throws Exception<newline46mondego>    {<newline46mondego>        final MuleServer ms = new MuleServer(<doubleQuotes46>mule-config.xml<doubleQuotes46>);<newline46mondego>        ms.start(true, true);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"861splitHere46","12733054splitHere46","identity"
"862splitHere46","12733054splitHere46","identity"
"863splitHere46","12733054splitHere46","ids"
"864splitHere46","12733054splitHere46","ids integer generated always as identity constraint pkId primary key<newline46mondego>"
"865splitHere46","12733054splitHere46","generated by default"
"866splitHere46","12733054splitHere46","always"
"867splitHere46","12733054splitHere46","generated always"
"868splitHere46","12733058splitHere46","InputStream"
"869splitHere46","12733058splitHere46","OutputStream"
"870splitHere46","12733058splitHere46","PipedInputStream"
"871splitHere46","12733058splitHere46","PipedOutputStream"
"872splitHere46","12733058splitHere46","import java.awt.event.*;<newline46mondego>import java.io.*;<newline46mondego>import javax.swing.*;<newline46mondego><newline46mondego>public class InputRedirection extends Box{<newline46mondego><newline46mondego>    public InputRedirection() {<newline46mondego>        super(BoxLayout.X_AXIS);<newline46mondego><newline46mondego>        //Remap input<newline46mondego>        //Create the input stream to be used as standard in<newline46mondego>        final PipedInputStream pisIN = new PipedInputStream();<newline46mondego>        //Create an end so we can put info into standard in<newline46mondego>        PipedOutputStream posIN = new PipedOutputStream();<newline46mondego>        //Wrap with a writer (for ease of use)<newline46mondego>        final BufferedWriter standardIn = new BufferedWriter(new OutputStreamWriter(posIN));<newline46mondego>        //Set standard in to use this stream<newline46mondego>        System.setIn(pisIN);<newline46mondego><newline46mondego>        //Connect the pipes<newline46mondego>        try {<newline46mondego>            pisIN.connect(posIN);<newline46mondego>        } catch (IOException e2) {<newline46mondego>            e2.printStackTrace();<newline46mondego>        }        <newline46mondego><newline46mondego>        //UI element where we're entering standard in<newline46mondego>        final JTextField field = new JTextField(20);<newline46mondego>        ActionListener sendText = new ActionListener(){<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void actionPerformed(ActionEvent arg0) {<newline46mondego>                try {<newline46mondego>                    //Transfering the text to the Standard Input stream<newline46mondego>                    standardIn.append(field.getText());<newline46mondego>                    standardIn.flush();<newline46mondego>                    field.setText(<doubleQuotes46><doubleQuotes46>);<newline46mondego>                    field.requestFocus();<newline46mondego>                } catch (IOException e) {<newline46mondego>                    e.printStackTrace();<newline46mondego>                }<newline46mondego>            }};<newline46mondego><newline46mondego>        field.addActionListener(sendText);<newline46mondego>        add(field);<newline46mondego><newline46mondego>        //Why not - now it looks like a real messaging system<newline46mondego>        JButton button = new JButton(<doubleQuotes46>Send<doubleQuotes46>);<newline46mondego>        button.addActionListener(sendText);<newline46mondego>        add(button);<newline46mondego><newline46mondego>        //Something using standard in<newline46mondego>        //Prints everything from standard in to standard out.<newline46mondego>        Thread standardInReader = new Thread(new Runnable(){<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                boolean update = false;<newline46mondego>                final StringBuffer s = new StringBuffer();<newline46mondego>                while(true){<newline46mondego>                    try {<newline46mondego><newline46mondego>                        BufferedInputStream stream = new BufferedInputStream(System.in);<newline46mondego>                        while(stream.available() > 0){<newline46mondego>                            int charCode = stream.read();<newline46mondego>                            s.append(Character.toChars(charCode));<newline46mondego>                            update = true;<newline46mondego>                        }<newline46mondego>                        if(update){<newline46mondego>                            //Print whatever was retrieved from standard in to standard out.<newline46mondego>                            System.out.println(s.toString());<newline46mondego>                            s.delete(0, s.length());<newline46mondego>                            update = false;<newline46mondego>                        }<newline46mondego><newline46mondego>                    } catch (IOException e) {<newline46mondego>                        e.printStackTrace();<newline46mondego>                    } <newline46mondego>                }<newline46mondego>            }});<newline46mondego>        standardInReader.start();<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args){<newline46mondego>        JFrame frame = new JFrame();<newline46mondego>        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        frame.add(new InputRedirection());<newline46mondego>        frame.pack();<newline46mondego>        frame.setLocationRelativeTo(null);<newline46mondego>        frame.setVisible(true);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"873splitHere46","12733117splitHere46","validation-api.jar"
"874splitHere46","12733117splitHere46","/WEB-INF/lib"
"875splitHere46","12733117splitHere46","validation-api.jar"
"876splitHere46","12733117splitHere46","/lib/required"
"877splitHere46","12733173splitHere46","panel.add(new JButton(<doubleQuotes46>1<doubleQuotes46>), <doubleQuotes46>dock east, width 120<doubleQuotes46>);<newline46mondego>panel.add(new JButton(<doubleQuotes46>2<doubleQuotes46>), <doubleQuotes46>west<doubleQuotes46>);<newline46mondego>panel.add(new JButton(<doubleQuotes46>3<doubleQuotes46>), <doubleQuotes46>center<doubleQuotes46>);<newline46mondego>panel.add(new JButton(<doubleQuotes46>4<doubleQuotes46>), <doubleQuotes46>north<doubleQuotes46>);<newline46mondego>panel.add(new JButton(<doubleQuotes46>5<doubleQuotes46>), <doubleQuotes46>south<doubleQuotes46>);<newline46mondego>"
"878splitHere46","12733173splitHere46","panel.setLayout(new MigLayout(<doubleQuotes46>fill<doubleQuotes46>));<newline46mondego>panel.add(new JButton(<doubleQuotes46>1<doubleQuotes46>), <doubleQuotes46>dock east, width 120<doubleQuotes46>);<newline46mondego>panel.add(new JButton(<doubleQuotes46>2<doubleQuotes46>), <doubleQuotes46>west<doubleQuotes46>);<newline46mondego>panel.add(new JButton(<doubleQuotes46>3<doubleQuotes46>), <doubleQuotes46>center, grow<doubleQuotes46>);<newline46mondego>panel.add(new JButton(<doubleQuotes46>4<doubleQuotes46>), <doubleQuotes46>north<doubleQuotes46>);<newline46mondego>panel.add(new JButton(<doubleQuotes46>5<doubleQuotes46>), <doubleQuotes46>south<doubleQuotes46>);<newline46mondego>"
"879splitHere46","12733314splitHere46","img = ImageIO.read(Emotes.class.getResourceAsStream(icon));<newline46mondego>"
"880splitHere46","12733364splitHere46","java -cp PATH_ROOT_DIR/;PATH_TO_ROOT_DIR/*;PATH_TO_ROOT_DIR/ext/* StartProgram<newline46mondego>"
"881splitHere46","12733364splitHere46","set CLASSPATH=./;./ext/*;./*<newline46mondego>"
"882splitHere46","12733387splitHere46","setInputType(TYPE_CLASS_NUMBER | TYPE_NUMBER_FLAG_SIGNED);<newline46mondego>"
"883splitHere46","12733450splitHere46","new Thread(new Runnable()<newline46mondego>{<newline46mondego>    @Override<newline46mondego>    public void run()<newline46mondego>    {<newline46mondego>        // TODO Place your <doubleQuotes46>f(1)<doubleQuotes46> code here...<newline46mondego><newline46mondego>    }<newline46mondego>}).start();<newline46mondego><newline46mondego>new Thread(new Runnable()<newline46mondego>{<newline46mondego>    @Override<newline46mondego>    public void run()<newline46mondego>    {<newline46mondego>        // TODO Place your <doubleQuotes46>f(2)<doubleQuotes46> code here...<newline46mondego><newline46mondego>    }<newline46mondego>}).start();<newline46mondego>"
"884splitHere46","12733534splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego><!--<newline46mondego>     Copyright (C) 2008 ZXing authors Licensed under the Apache License, <newline46mondego>    Version 2.0 (the <doubleQuotes46>License<doubleQuotes46>); you may not use this file except in compliance <newline46mondego>    with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 <newline46mondego>    Unless required by applicable law or agreed to in writing, software distributed <newline46mondego>    under the License is distributed on an <doubleQuotes46>AS IS<doubleQuotes46> BASIS, WITHOUT WARRANTIES <newline46mondego>    OR CONDITIONS OF ANY KIND, either express or implied. See the License for <newline46mondego>    the specific language governing permissions and limitations under the License.<newline46mondego><newline46mondego><newline46mondego>--><newline46mondego><FrameLayout xmlns:android=<doubleQuotes46>http://schemas.android.com/apk/res/android<doubleQuotes46><newline46mondego>    android:layout_width=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>    android:layout_height=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>    android:background=<doubleQuotes46>#FF8090A0<doubleQuotes46> ><newline46mondego><newline46mondego>    <SurfaceView<newline46mondego>        android:id=<doubleQuotes46>@+id/preview_view<doubleQuotes46><newline46mondego>        android:layout_width=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>        android:layout_height=<doubleQuotes46>fill_parent<doubleQuotes46> /><newline46mondego><newline46mondego>    <com.x09soft.scanner.zxing.ViewfinderView<newline46mondego>        android:id=<doubleQuotes46>@+id/viewfinder_view<doubleQuotes46><newline46mondego>        android:layout_width=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>        android:layout_height=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>        android:background=<doubleQuotes46>@color/transparent<doubleQuotes46> /><newline46mondego><newline46mondego>    <ImageButton<newline46mondego>        android:id=<doubleQuotes46>@+id/btn_flash<doubleQuotes46><newline46mondego>        android:background=<doubleQuotes46>@drawable/flash_off<doubleQuotes46><newline46mondego>        android:layout_width=<doubleQuotes46>60dp<doubleQuotes46><newline46mondego>        android:layout_height=<doubleQuotes46>60dp<doubleQuotes46><newline46mondego>        android:layout_gravity=<doubleQuotes46>right|center_vertical<doubleQuotes46>/><newline46mondego><newline46mondego></FrameLayout><newline46mondego>"
"885splitHere46","12733534splitHere46","private void initCamera(SurfaceHolder surfaceHolder) {<newline46mondego>        try {<newline46mondego>            cameraManager.openDriver(surfaceHolder);<newline46mondego>            // Creating the handler starts the preview, which can also throw a<newline46mondego>            // RuntimeException.<newline46mondego>            if (handler == null) {<newline46mondego>                handler = new CaptureActivityHandler(this, decodeFormats,<newline46mondego>                        characterSet, cameraManager);<newline46mondego>            }<newline46mondego>        } catch (IOException ioe) {<newline46mondego>            Log.w(TAG, ioe);<newline46mondego>            displayFrameworkBugMessageAndExit();<newline46mondego>        } catch (RuntimeException e) {<newline46mondego>            // Barcode Scanner has seen crashes in the wild of this variety:<newline46mondego>            // java.?lang.?RuntimeException: Fail to connect to camera service<newline46mondego>            Log.w(TAG, <doubleQuotes46>Unexpected error initializing camera<doubleQuotes46>, e);<newline46mondego>            displayFrameworkBugMessageAndExit();<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"886splitHere46","12733534splitHere46","SurfaceView surfaceView = (SurfaceView) findViewById(R.id.preview_view);<newline46mondego>        SurfaceHolder surfaceHolder = surfaceView.getHolder();<newline46mondego>"
"887splitHere46","12733692splitHere46","SSLContext context = SSLContext.getInstance(<doubleQuotes46>TLS<doubleQuotes46>);<newline46mondego>context.init(new KeyManager[] { new ClientKeyManager() }, <newline46mondego>    new TrustManager[] { new ClientTrustManager() }, <newline46mondego>    new SecureRandom());<newline46mondego>HttpsURLConnection.setDefaultSSLSocketFactory(new ManagedSSLSocketFactory(context.getSocketFactory()));<newline46mondego>"
"888splitHere46","12733692splitHere46","private class ManagedSSLSocketFactory extends SSLSocketFactory<newline46mondego>{<newline46mondego>    private SSLSocketFactory m_socketFactory;<newline46mondego><newline46mondego>    public ManagedSSLSocketFactory(SSLSocketFactory socketFactory)<newline46mondego>    {<newline46mondego>        m_socketFactory = socketFactory;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Socket createSocket(Socket s, String host, int port, boolean autoClose) throws IOException<newline46mondego>    {<newline46mondego>        Socket socket = m_socketFactory.createSocket(s, host, port, autoClose);<newline46mondego><newline46mondego>        //Note that m_arcThread, m_arcSocket, etc are defined in the containing class<newline46mondego>        if(Thread.currentThread() == m_arcThread)<newline46mondego>        {<newline46mondego>            if(m_arcSocketInvalid || (socket == m_ssrcSocket))<newline46mondego>            {<newline46mondego>                closeSocketQuietly(socket);<newline46mondego>                return createSocket(s, host, port, autoClose);<newline46mondego>            }<newline46mondego>            m_arcSocketInvalid = false;<newline46mondego>        }<newline46mondego><newline46mondego>        ... omitted some convoluted code that deals with edge cases<newline46mondego><newline46mondego>        return socket;<newline46mondego>    }<newline46mondego><newline46mondego>    ... rest of implementation<newline46mondego><newline46mondego>}<newline46mondego>"
"889splitHere46","12733728splitHere46","Exception in thread <doubleQuotes46>Thread-3<doubleQuotes46> java.lang.NullPointerException<newline46mondego>"
"890splitHere46","12733728splitHere46","NullPointerException"
"891splitHere46","12733728splitHere46","<doubleQuotes46>Thread-3<doubleQuotes46>"
"892splitHere46","12733728splitHere46","SpaceTravel.java"
"893splitHere46","12733728splitHere46","Thread-3"
"894splitHere46","12733728splitHere46","null"
"895splitHere46","12733728splitHere46","NullPointerException"
"896splitHere46","12733802splitHere46","<? extends Bar>"
"897splitHere46","12733802splitHere46","Bar"
"898splitHere46","12733802splitHere46","setT()"
"899splitHere46","12733802splitHere46","null"
"900splitHere46","12733802splitHere46","private void foo(Baz<Bar> baz, Bar bar) {<newline46mondego>    baz.setT(bar);<newline46mondego>}<newline46mondego>"
"901splitHere46","12733802splitHere46","?"
"902splitHere46","12733802splitHere46","Bar"
"903splitHere46","12733802splitHere46","public T getT()"
"904splitHere46","12733802splitHere46","Baz<? extends Bar>"
"905splitHere46","12733802splitHere46","Baz<Bar>"
"906splitHere46","12733802splitHere46","Baz<SubBar>"
"907splitHere46","12733802splitHere46","getT()"
"908splitHere46","12733802splitHere46","Bar"
"909splitHere46","12733806splitHere46","public class A {<newline46mondego>    public static boolean DEBUG = false;<newline46mondego>}<newline46mondego>"
"910splitHere46","12733806splitHere46","import static A.DEBUG;<newline46mondego><newline46mondego>public class B {<newline46mondego>  public void myMethod() {<newline46mondego>    if (DEBUG) {<newline46mondego>      // do something<newline46mondego>    }<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"911splitHere46","12733827splitHere46","Document.getItems()"
"912splitHere46","12733827splitHere46","Item.getType()"
"913splitHere46","12733827splitHere46","Item.READERS"
"914splitHere46","12733827splitHere46","Item.AUTHORS"
"915splitHere46","12733827splitHere46","Item.getValues()"
"916splitHere46","12733827splitHere46","Database.getACL()"
"917splitHere46","12733827splitHere46","ACLEntries"
"918splitHere46","12733827splitHere46","Directory"
"919splitHere46","12734089splitHere46","fileContent"
"920splitHere46","12734089splitHere46","while"
"921splitHere46","12734089splitHere46","bis.read(fileContent);<newline46mondego>...<newline46mondego>while ((dataLength > 0)<newline46mondego>    && (n = bis.read(temp, 0, (int) Math.min(temp.length, dataLength))) != -1) {<newline46mondego>"
"922splitHere46","12734089splitHere46","bis"
"923splitHere46","12734089splitHere46","n == 0"
"924splitHere46","12734089splitHere46","bis.read(fileContent);"
"925splitHere46","12734089splitHere46","while"
"926splitHere46","12734089splitHere46","int dataLength = (int) file.length();<newline46mondego>byte fileContent[] = new byte[dataLength];<newline46mondego>bis.read(fileContent);<newline46mondego>dos.writeInt(dataLength);<newline46mondego>dos.write(fileContent);<newline46mondego>dos.flush();<newline46mondego>dataLength -= n;<newline46mondego>"
"927splitHere46","12734436splitHere46","i"
"928splitHere46","12734436splitHere46","for (int i = 0; i < maxSize && data.hasNext(); ++i) {<newline46mondego>    // set attributes of t[i]<newline46mondego>    addElement(t[i]);<newline46mondego>}<newline46mondego>"
"929splitHere46","12734521splitHere46","getView()"
"930splitHere46","12734521splitHere46","Adapter"
"931splitHere46","12734521splitHere46","font"
"932splitHere46","12734521splitHere46","tv.setTextSize(20.0f);"
"933splitHere46","12734522splitHere46","instance"
"934splitHere46","12734522splitHere46","ProductViewPagerAdapter"
"935splitHere46","12734522splitHere46","public ProductViewPagerAdapter(FragmentManager fm, ProductViewPagerAdapter activity) {<newline46mondego>    super(fm);<newline46mondego>    mActivity = activity;<newline46mondego>    }<newline46mondego>"
"936splitHere46","12734522splitHere46","public void setActivity( ProductViewPagerAdapter activity) {<newline46mondego>        mActivity = activity;<newline46mondego>        }<newline46mondego>"
"937splitHere46","12734522splitHere46","int temp = productViewActivity.getProductData().size();<newline46mondego>"
"938splitHere46","12734522splitHere46","int temp = mActivity.getProductData().size();<newline46mondego>"
"939splitHere46","12734565splitHere46","for"
"940splitHere46","12734565splitHere46","Iterable"
"941splitHere46","12734565splitHere46","Collection"
"942splitHere46","12734565splitHere46","for (MovingElement mElement : moveElems)"
"943splitHere46","12734565splitHere46","MovingElement"
"944splitHere46","12734565splitHere46","moveElems_"
"945splitHere46","12734618splitHere46","aux = (unsigned char *) &len;<newline46mondego>buff[1] = aux[0];<newline46mondego>buff[0] = aux[1];<newline46mondego>"
"946splitHere46","12734618splitHere46","len"
"947splitHere46","12734618splitHere46","int len = ...;<newline46mondego>byte[] buff = ...;<newline46mondego>byte[0] = (byte) (len & 0xff);<newline46mondego>byte[1] = (byte) ((len >> 8) & 0xff);<newline46mondego>"
"948splitHere46","12734618splitHere46","ByteBuffer"
"949splitHere46","12734644splitHere46","@WhereJoinTable"
"950splitHere46","12734644splitHere46","Service"
"951splitHere46","12734675splitHere46","if (code==KeyEvent.VK_LEFT) {<newline46mondego>            trans.setToIdentity();<newline46mondego>            player.moveLeft();<newline46mondego>            trans.translate(player.x-shipImg.getWidth()/2,player.y-shipImg.getHeight()/2);<newline46mondego>            trans.rotate(player.angle-1.57, shipImg.getWidth()/2, shipImg.getHeight()/2);<newline46mondego>        }<newline46mondego>"
"952splitHere46","12734762splitHere46","contains()"
"953splitHere46","12734762splitHere46","public class Test{<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego><newline46mondego>        String sentence = <doubleQuotes46>Define, Measure, Analyze, Design and Verify<doubleQuotes46>;<newline46mondego><newline46mondego>        String str = sentence.replace(<doubleQuotes46>and<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>        System.out.println(str);<newline46mondego><newline46mondego>    }<newline46mondego>}<newline46mondego>"
"954splitHere46","12734910splitHere46","<%=Pages\\.getString\\(\\\\\<doubleQuotes46>([^\\\\]*)<newline46mondego>"
"955splitHere46","12734910splitHere46","matcher.group(1)"
"956splitHere46","12734910splitHere46","\<doubleQuotes46>"
"957splitHere46","12734910splitHere46","\"
"958splitHere46","12734910splitHere46","\<doubleQuotes46>)%>"
"959splitHere46","12734910splitHere46","\"
"960splitHere46","12734910splitHere46","<%=Pages.getString(\<doubleQuotes46>Fun!\Yay!\<doubleQuotes46>)%>"
"961splitHere46","12734910splitHere46","Fun!"
"962splitHere46","12734910splitHere46","String currentLine = <doubleQuotes46><%=Pages.getString(\<doubleQuotes46>MY_HEADER\<doubleQuotes46>)%><doubleQuotes46>; <newline46mondego>"
"963splitHere46","12734910splitHere46","<%=Pages.getString(<doubleQuotes46>MY_HEADER<doubleQuotes46>)%> <newline46mondego>"
"964splitHere46","12734910splitHere46","\"
"965splitHere46","12734910splitHere46","String sCurrentLine = <doubleQuotes46><%=Pages.getString(\\\<doubleQuotes46>MY_HEADER\\\<doubleQuotes46>)%><doubleQuotes46>; <newline46mondego>"
"966splitHere46","12734910splitHere46","String currentLine = <doubleQuotes46><%=Pages.getString(\\\<doubleQuotes46>MY_HEADER\\\<doubleQuotes46>)%><doubleQuotes46>; <newline46mondego>Pattern pattern = Pattern.compile(<doubleQuotes46><%=Pages\\.getString\\(\\\\\<doubleQuotes46>([^\\\\]*)<doubleQuotes46>); <newline46mondego>Matcher matcher = pattern.matcher(currentLine); <newline46mondego>while(matcher.find()) {<newline46mondego>    System.out.println(matcher.group(1).toString()); <newline46mondego>}<newline46mondego>"
"967splitHere46","12735002splitHere46","System.out.printf(<doubleQuotes46>%d %f<doubleQuotes46>, n, num)"
"968splitHere46","12735002splitHere46","l"
"969splitHere46","12735002splitHere46","round100th(num);"
"970splitHere46","12735002splitHere46","System.out.printf(<doubleQuotes46>%d %.2f<doubleQuotes46>, n, num)<newline46mondego>"
"971splitHere46","12735153splitHere46","event.stopPropagation()"
"972splitHere46","12735161splitHere46","public void theFunc() {<newline46mondego>     this.show = true;<newline46mondego>  }<newline46mondego>"
"973splitHere46","12735161splitHere46","public String doFunc() {<newline46mondego>     this.show = true;<newline46mondego>     return null;<newline46mondego>  }<newline46mondego>"
"974splitHere46","12735161splitHere46","<h:commandLink action=<doubleQuotes46>#{myBean.doFunc}<doubleQuotes46>><newline46mondego>"
"975splitHere46","12735161splitHere46","<h:panelGroup id=<doubleQuotes46>parentPanelGroupId<doubleQuotes46>><newline46mondego><newline46mondego>    <h:panelGroup id=<doubleQuotes46>Panel_1<doubleQuotes46> rendered=<doubleQuotes46>#{myBean.show}<doubleQuotes46>><newline46mondego>        ...<newline46mondego>        Some rubbish here<newline46mondego>        ...<newline46mondego>    </h:panelGroup><newline46mondego><newline46mondego></h:panelGroup><newline46mondego><newline46mondego><h:panelGroup id=<doubleQuotes46>Panel_2<doubleQuotes46>><newline46mondego>   <h:commandLink action=<doubleQuotes46>#{myBean.doFunc}<doubleQuotes46>><newline46mondego>      <f:ajax render=<doubleQuotes46>parentPanelGroupId<doubleQuotes46>/><newline46mondego>      <h:outputText value=<doubleQuotes46>SHOW/HIDE PANEL 1<doubleQuotes46> /><newline46mondego>   </h:commandLink><newline46mondego></h:panelGroup><newline46mondego>"
"976splitHere46","12735333splitHere46","/usr/local/bin"
"977splitHere46","12735333splitHere46","C:\Program Files\..."
"978splitHere46","12735333splitHere46","System.getProperties()"
"979splitHere46","12735333splitHere46","java.util.prefs"
"980splitHere46","12735384splitHere46","currentclass.put(<doubleQuotes46>John<doubleQuotes46>, customclass.get(<doubleQuotes46>John<doubleQuotes46> + 1));<newline46mondego>"
"981splitHere46","12735384splitHere46","putAll"
"982splitHere46","12735384splitHere46","Map"
"983splitHere46","12735384splitHere46","currentclass.putAll(customclass);<newline46mondego>"
"984splitHere46","12735412splitHere46","AddCommandTest.java"
"985splitHere46","12735412splitHere46","*"
"986splitHere46","12735412splitHere46","."
"987splitHere46","12735412splitHere46","testAddWholeRepo()"
"988splitHere46","12735412splitHere46","git.add().addFilepattern(<doubleQuotes46>.<doubleQuotes46>).call();<newline46mondego>"
"989splitHere46","12735412splitHere46","Exception in thread <doubleQuotes46>main<doubleQuotes46> org.eclipse.jgit.errors.NoWorkTreeException: <newline46mondego>Bare Repository has neither a working tree, nor an index<newline46mondego>"
"990splitHere46","12735412splitHere46","testCloneRepository()"
"991splitHere46","12735490splitHere46","String[] split = input.split(<doubleQuotes46>u|n<doubleQuotes46>);<newline46mondego>"
"992splitHere46","12735490splitHere46","u|n"
"993splitHere46","12735490splitHere46","u"
"994splitHere46","12735490splitHere46","n"
"995splitHere46","12735490splitHere46","String input = <doubleQuotes46>118u121u23n24<doubleQuotes46>;<newline46mondego>    String[] s2;<newline46mondego>    ArrayList<String> main = new ArrayList<String>();<newline46mondego><newline46mondego>    String[] split = input.split(<doubleQuotes46>u<doubleQuotes46>);<newline46mondego>    for(int x=0; split.length>x; x++){<newline46mondego>        s2 = split[x].split(<doubleQuotes46>n<doubleQuotes46>);<newline46mondego><newline46mondego>        for(int k=0; k<s2.length; k++){<newline46mondego>            main.add(s2[k]);<newline46mondego>            if(s2.length>k+1)<newline46mondego>                main.add(<doubleQuotes46>n<doubleQuotes46>);<newline46mondego>        }<newline46mondego><newline46mondego>        if(split.length>x+1)<newline46mondego>            main.add(<doubleQuotes46>+<doubleQuotes46>);<newline46mondego>    }<newline46mondego>    // print main array to test<newline46mondego>    for(int i=0;i<main.size();i++)<newline46mondego>        System.out.println(main.get(i)); <newline46mondego>"
"996splitHere46","12735504splitHere46","LocalBroadcastManager.getInstance(this)<newline46mondego>                     .sendBroadcast(new IntentFilter(<doubleQuotes46>some string to use as action<doubleQuotes46>));<newline46mondego>"
"997splitHere46","12735546splitHere46","public class HelpDeskTest implements EntryPoint {<newline46mondego>private final HelpDeskTestServiceAsync helpDeskTest= GWT.create (HelpDeskTest.class);<newline46mondego>"
"998splitHere46","12735546splitHere46","public class HelpDeskTest implements EntryPoint {<newline46mondego>private final HelpDeskTestServiceAsync helpDeskTest= GWT.create (HelpDeskTestService.class);<newline46mondego>"
"999splitHere46","12735609splitHere46","HttpResponse response = httpclient.execute(httpget);<newline46mondego>StringBuilder sb = new StringBuilder();<newline46mondego>DataInputStream in = new DataInputStream(response.getEntity().getContent()); <newline46mondego>String line;     <newline46mondego>while ((line = in.readLine()) != null) { <newline46mondego>    sb.append(line);<newline46mondego>} <newline46mondego>in.close(); <newline46mondego>String json = sb.toString(); <newline46mondego>"
"1000splitHere46","12735670splitHere46","JOptionPane.showInputDialog"
"1001splitHere46","12735670splitHere46","JDialog"
"1002splitHere46","12735670splitHere46","JDialog"
"1003splitHere46","12735688splitHere46","com.sun.tools.javac.Main.main()"
"1004splitHere46","12735688splitHere46","tools.jar"
"1005splitHere46","12735688splitHere46","$JAVA_HOME/lib"
"1006splitHere46","12735819splitHere46","null"
"1007splitHere46","12735819splitHere46","null"
"1008splitHere46","12735819splitHere46","null"
"1009splitHere46","12735819splitHere46","ArrayList"
"1010splitHere46","12735819splitHere46","toArray"
"1011splitHere46","12735819splitHere46","ArrayList"
"1012splitHere46","12735819splitHere46","Student"
"1013splitHere46","12735819splitHere46","j"
"1014splitHere46","12735819splitHere46","Arrays.copyOf"
"1015splitHere46","12735819splitHere46","System.arraycopy"
"1016splitHere46","12735872splitHere46","getMonthOfYear()"
"1017splitHere46","12736055splitHere46","for(Customer"
"1018splitHere46","12736055splitHere46","preferredCustomers"
"1019splitHere46","12736055splitHere46","null"
"1020splitHere46","12736055splitHere46","customer.getAccountList()"
"1021splitHere46","12736055splitHere46","preferredCustomers"
"1022splitHere46","12736055splitHere46","null"
"1023splitHere46","12736055splitHere46","for(Account account"
"1024splitHere46","12736055splitHere46","preferredCustomers"
"1025splitHere46","12736055splitHere46","null"
"1026splitHere46","12736055splitHere46","totalAssets+=account.getBalance();"
"1027splitHere46","12736055splitHere46","null"
"1028splitHere46","12736055splitHere46","null"
"1029splitHere46","12736055splitHere46","Long"
"1030splitHere46","12736106splitHere46","public VendorBean getVendor() {<newline46mondego>    return vendor;<newline46mondego>}<newline46mondego>"
"1031splitHere46","12736170splitHere46","Socket"
"1032splitHere46","12736170splitHere46","PrintWriter"
"1033splitHere46","12736170splitHere46","synchronized"
"1034splitHere46","12736170splitHere46","PrintWriter"
"1035splitHere46","12736170splitHere46","public void println(int x) {<newline46mondego>    synchronized (lock) {<newline46mondego>        print(x);<newline46mondego>        println();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1036splitHere46","12736227splitHere46","output.write(...)"
"1037splitHere46","12736227splitHere46","myList"
"1038splitHere46","12736227splitHere46","myList.addWord(curr);"
"1039splitHere46","12736227splitHere46","myList"
"1040splitHere46","12736227splitHere46","myList"
"1041splitHere46","12736227splitHere46","synchronized (myList) {<newline46mondego>      output.write(mylist);<newline46mondego>  }<newline46mondego>  ...<newline46mondego><newline46mondego>  synchronized (myList) {<newline46mondego>      myList.addWord(curr);<newline46mondego> }<newline46mondego>"
"1042splitHere46","12736227splitHere46","myList"
"1043splitHere46","12736227splitHere46","Collections"
"1044splitHere46","12736227splitHere46","List<String> myList = Collections.synchronizedList(new ArrayList<String>());<newline46mondego>"
"1045splitHere46","12736227splitHere46","ConcurrentLinkedQueue"
"1046splitHere46","12736312splitHere46","UserGroups ug = em1.find(UserGroups.class, ...); // entity manager 1<newline46mondego>User u = em2.find(User.class, ...); // entity manager 2<newline46mondego><newline46mondego>// exception will be thrown on commit <newline46mondego>// - from the point of view of em1, <doubleQuotes46>u<doubleQuotes46> is detached<newline46mondego>ug.getUsers().add(u); <newline46mondego>"
"1047splitHere46","12736312splitHere46","em1.merge(u)"
"1048splitHere46","12736312splitHere46","User"
"1049splitHere46","12736389splitHere46","Executors"
"1050splitHere46","12736389splitHere46","serverList"
"1051splitHere46","12736389splitHere46","shutdown()"
"1052splitHere46","12736389splitHere46","awaitTermination()"
"1053splitHere46","12736389splitHere46","CompletionService"
"1054splitHere46","12736457splitHere46","getSnapshot()"
"1055splitHere46","12736457splitHere46","System.out.println(<doubleQuotes46>Test start<doubleQuotes46>);<newline46mondego>Thread.currentThread().join();<newline46mondego>System.out.println(<doubleQuotes46>Test stop<doubleQuotes46>);<newline46mondego>"
"1056splitHere46","12736662splitHere46","VerifyListener"
"1057splitHere46","12736662splitHere46","e.text"
"1058splitHere46","12736662splitHere46","e.start"
"1059splitHere46","12736662splitHere46","e.end"
"1060splitHere46","12736662splitHere46","getText()"
"1061splitHere46","12736662splitHere46","ModifyListener"
"1062splitHere46","12736662splitHere46","txtPort.addVerifyListener(new VerifyListener() {  <newline46mondego>    @Override  <newline46mondego>    public void verifyText(VerifyEvent e) {<newline46mondego>        /* Notice how we combine the old and new below */<newline46mondego>        String currentText = ((Text)e.widget).getText();<newline46mondego>        String port =  currentText.substring(0, e.start) + e.text + currentText.substring(e.end);<newline46mondego>        try{  <newline46mondego>            int portNum = Integer.valueOf(port);  <newline46mondego>            if(portNum <0 || portNum > 65535){  <newline46mondego>                e.doit = false;  <newline46mondego>            }  <newline46mondego>        }  <newline46mondego>        catch(NumberFormatException ex){  <newline46mondego>            if(!port.equals(<doubleQuotes46><doubleQuotes46>))<newline46mondego>                e.doit = false;  <newline46mondego>        }  <newline46mondego>    }  <newline46mondego>});<newline46mondego>"
"1063splitHere46","12736786splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>utf-8<doubleQuotes46>?><newline46mondego>    <selector xmlns:android=<doubleQuotes46>http://schemas.android.com/apk/res/android<doubleQuotes46>><newline46mondego>        <item android:state_pressed=<doubleQuotes46>true<doubleQuotes46><newline46mondego>              android:color=<doubleQuotes46>#ff0000<doubleQuotes46>/> <!-- pressed --><newline46mondego>        <item android:color=<doubleQuotes46>#ffffff<doubleQuotes46>/> <!-- default --><newline46mondego>    </selector><newline46mondego>"
"1064splitHere46","12736930splitHere46","setCustomTitle(View v)"
"1065splitHere46","12736930splitHere46","TextView"
"1066splitHere46","12736930splitHere46","DialogInterface"
"1067splitHere46","12736930splitHere46","AlertDialog"
"1068splitHere46","12736930splitHere46","onClick()"
"1069splitHere46","12736930splitHere46","((AlertDialog)dialog)<newline46mondego>"
"1070splitHere46","12736930splitHere46","((AlertDialog)dialog).findViewById(R.id.YOUR_TITLE_TEXTVIEW_ID).getText()<newline46mondego>"
"1071splitHere46","12736993splitHere46","JSpinner#getValue"
"1072splitHere46","12736993splitHere46","SpinnerDataModel"
"1073splitHere46","12736993splitHere46","Runnable"
"1074splitHere46","12736993splitHere46","Thread"
"1075splitHere46","12736993splitHere46","JSpinner"
"1076splitHere46","12736993splitHere46","SpinnerDateModel"
"1077splitHere46","12736993splitHere46","SpinnerDateModel dateModel = ...;<newline46mondego>...<newline46mondego>setSeasonalColor(dateModel.getDate());<newline46mondego>"
"1078splitHere46","12736993splitHere46","Date"
"1079splitHere46","12736993splitHere46","SwingWorker"
"1080splitHere46","12736993splitHere46","Thread"
"1081splitHere46","12737001splitHere46","public static Map<String, Set<String>> reverse (Map <String, Set<String>> graph) {<newline46mondego>    Map<String, Set<String>> result = new HashMap<String, Set<String>>();<newline46mondego>    for (Map.Entry<String, Set<String>> graphEntry: graph.entrySet()) {<newline46mondego>        for (String graphValue: graphEntry.getValue()) {<newline46mondego>            Set<String> set = result.get(graphValue);<newline46mondego>            if (set == null) {<newline46mondego>                set = new HashSet<String>();<newline46mondego>                result.put(graphValue, set);<newline46mondego>            }<newline46mondego>            set.add(graphEntry.getKey());<newline46mondego>        }<newline46mondego>    }<newline46mondego>    return result;<newline46mondego>}<newline46mondego>"
"1082splitHere46","12737102splitHere46","selectedFile"
"1083splitHere46","12737102splitHere46","JFileChooser fc = new JFileChooser();<newline46mondego>fc.showOpenDialog(null);<newline46mondego>File selected = fc.getSelectedFile();<newline46mondego>System.out.println(<doubleQuotes46>You selected <doubleQuotes46> + selected);<newline46mondego><newline46mondego>File currentDirectory = fc.getCurrentDirectory();<newline46mondego>// Hack alert<newline46mondego>fc.setSelectedFile(new File(<doubleQuotes46><doubleQuotes46>));<newline46mondego>fc.setCurrentDirectory(currentDirectory);<newline46mondego><newline46mondego>fc.showOpenDialog(null);<newline46mondego>selected = fc.getSelectedFile();<newline46mondego><newline46mondego>System.out.println(<doubleQuotes46>You selected <doubleQuotes46> + selected);<newline46mondego>"
"1084splitHere46","12737102splitHere46","SELECTED_FILE_CHANGED_PROPERTY"
"1085splitHere46","12737102splitHere46","null"
"1086splitHere46","12737155splitHere46","class TestB extends TestA {<newline46mondego>    Object myCopyOfFoo;<newline46mondego><newline46mondego>    // I assume you actually wanted this to take a parameter called foo?<newline46mondego>    // I've left it as per the question...<newline46mondego>    TestB() {<newline46mondego>        this(new Object());<newline46mondego>    }<newline46mondego><newline46mondego>    private TestB(Object copy) {<newline46mondego>        super(copy);<newline46mondego>        myCopyOfFoo = copy;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1087splitHere46","12737155splitHere46","class ClassB extends ClassA {<newline46mondego>    private final Foo copyOfInput;<newline46mondego><newline46mondego>    ClassB(Foo input) {<newline46mondego>        super(input = input.clone());<newline46mondego>        copyOfInput = input;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1088splitHere46","12737418splitHere46","JTextArea"
"1089splitHere46","12737418splitHere46","public class PaintingExample {<newline46mondego><newline46mondego>    public PaintingExample() {<newline46mondego><newline46mondego>        JFrame frame = new JFrame(<doubleQuotes46>Painting on Image<doubleQuotes46>);<newline46mondego>        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        frame.setLayout(new BorderLayout());<newline46mondego>        frame.add(new PaintSurface());<newline46mondego><newline46mondego>        frame.pack();<newline46mondego>        frame.setLocationByPlatform(true);<newline46mondego>        frame.setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String... args) {<newline46mondego>        SwingUtilities.invokeLater(new Runnable() {<newline46mondego>            public void run() {<newline46mondego>                new PaintingExample();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>    protected class PaintSurface extends JPanel {<newline46mondego><newline46mondego>        private JTextArea renderer;<newline46mondego>        private BufferedImage background;<newline46mondego><newline46mondego>        public PaintSurface() {<newline46mondego><newline46mondego>            try {<newline46mondego>                background = ImageIO.read(new File(<doubleQuotes46>path/to/your/background/image<doubleQuotes46>));<newline46mondego>            } catch (IOException ex) {<newline46mondego>                ex.printStackTrace();<newline46mondego>            }<newline46mondego><newline46mondego>            setLayout(null);<newline46mondego>            setFocusable(true);<newline46mondego><newline46mondego>            addMouseListener(new MouseAdapter() {<newline46mondego>                @Override<newline46mondego>                public void mouseClicked(MouseEvent e) {<newline46mondego><newline46mondego>                    if (renderer.getParent() == null) {<newline46mondego><newline46mondego>                        renderer.setText(<doubleQuotes46>Text<doubleQuotes46>);<newline46mondego>                        renderer.setLocation(e.getPoint());<newline46mondego>                        add(renderer);<newline46mondego><newline46mondego>                        renderer.requestFocusInWindow();<newline46mondego>                        renderer.selectAll();<newline46mondego><newline46mondego>                        repaint();<newline46mondego><newline46mondego>                    } else {<newline46mondego>                        requestFocusInWindow();<newline46mondego>                    }<newline46mondego><newline46mondego>                }<newline46mondego>            });<newline46mondego><newline46mondego>            renderer = new JTextArea();<newline46mondego>            renderer.setBorder(new LineBorder(Color.RED));<newline46mondego>            renderer.setOpaque(false);<newline46mondego>            renderer.getDocument().addDocumentListener(new DocumentListener() {<newline46mondego>                protected void updateSize() {<newline46mondego>                    renderer.setSize(renderer.getPreferredSize());<newline46mondego>                }<newline46mondego><newline46mondego>                @Override<newline46mondego>                public void insertUpdate(DocumentEvent e) {<newline46mondego>                    updateSize();<newline46mondego>                }<newline46mondego><newline46mondego>                @Override<newline46mondego>                public void removeUpdate(DocumentEvent e) {<newline46mondego>                    updateSize();<newline46mondego>                }<newline46mondego><newline46mondego>                @Override<newline46mondego>                public void changedUpdate(DocumentEvent e) {<newline46mondego>                    updateSize();<newline46mondego>                }<newline46mondego>            });<newline46mondego>            renderer.addFocusListener(new FocusAdapter() {<newline46mondego><newline46mondego>                @Override<newline46mondego>                public void focusLost(FocusEvent e) {<newline46mondego>                    remove(renderer);<newline46mondego>                    repaint();<newline46mondego>                    // You would need to capture the text here and store it some how...<newline46mondego>                }<newline46mondego><newline46mondego>            });<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public Dimension getPreferredSize() {<newline46mondego><newline46mondego>            Dimension size = super.getPreferredSize();<newline46mondego>            if (background != null) {<newline46mondego>                size = new Dimension(background.getWidth(), background.getHeight());<newline46mondego>            }<newline46mondego><newline46mondego>            return size;<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        protected void paintComponent(Graphics g) {<newline46mondego><newline46mondego>            super.paintComponent(g);<newline46mondego><newline46mondego>            if (background != null) {<newline46mondego>                g.drawImage(background, 0, 0, this);<newline46mondego>            }<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1090splitHere46","12737418splitHere46","JTextArea"
"1091splitHere46","12737438splitHere46","public interface Player<T extends Player<T>> {<newline46mondego>    void setPartner(T partner);<newline46mondego>}<newline46mondego><newline46mondego>public class Human implements Player<Human> {<newline46mondego>    private Human partner;<newline46mondego><newline46mondego>    public void setPartner(Human partner) {<newline46mondego>        this.partner = partner;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1092splitHere46","12737806splitHere46","i < SIZE"
"1093splitHere46","12737806splitHere46","i < SIZE-1"
"1094splitHere46","12738009splitHere46","public class MyCustomClass<T> extends JComboBox<T><newline46mondego>"
"1095splitHere46","12738227splitHere46","GenerationType.AUTO"
"1096splitHere46","12738227splitHere46","GenerationType.SEQUENCE"
"1097splitHere46","12738227splitHere46","org.hibernate.id.enhanced.SequenceStyleGenerator"
"1098splitHere46","12738227splitHere46","hibernate.id.new_generator_mappings"
"1099splitHere46","12738227splitHere46","prefer_sequence_per_entity"
"1100splitHere46","12738229splitHere46","TreeSet<Integer> sortedSet"
"1101splitHere46","12738229splitHere46","import java.util.*;<newline46mondego><newline46mondego>public class Test {<newline46mondego><newline46mondego>    public static Map<String, Integer> sortByValue(Map<String, Integer> map) {<newline46mondego>        List list = new LinkedList(map.entrySet());<newline46mondego>        Collections.sort(list, new Comparator() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public int compare(Object o1, Object o2) {<newline46mondego>                return ((Comparable) ((Map.Entry) (o2)).getValue()).compareTo(((Map.Entry) (o1)).getValue());<newline46mondego>            }<newline46mondego>        });<newline46mondego><newline46mondego>        Map result = new LinkedHashMap();<newline46mondego>        for (Iterator it = list.iterator(); it.hasNext();) {<newline46mondego>            Map.Entry entry = (Map.Entry) it.next();<newline46mondego>            result.put(entry.getKey(), entry.getValue());<newline46mondego>        }<newline46mondego>        return result;<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego><newline46mondego>        HashMap<String, Integer> map = new HashMap<String, Integer>();<newline46mondego><newline46mondego>        map.put(<doubleQuotes46>item1<doubleQuotes46>, 1);<newline46mondego>        map.put(<doubleQuotes46>item2<doubleQuotes46>, 2);<newline46mondego>        map.put(<doubleQuotes46>item3<doubleQuotes46>, 1);<newline46mondego>        map.put(<doubleQuotes46>item4<doubleQuotes46>, 7);<newline46mondego>        map.put(<doubleQuotes46>item5<doubleQuotes46>, 3);<newline46mondego>        map.put(<doubleQuotes46>item6<doubleQuotes46>, 4);<newline46mondego><newline46mondego>        for (Map.Entry<String, Integer> entry : map.entrySet()) {<newline46mondego>            System.out.println(<doubleQuotes46>Item is:<doubleQuotes46> + entry.getKey() + <doubleQuotes46> with value:<doubleQuotes46><newline46mondego>                    + entry.getValue());<newline46mondego>        }<newline46mondego><newline46mondego>        System.out.println(<doubleQuotes46>*******<doubleQuotes46>);<newline46mondego><newline46mondego>        Map<String,Integer> sortedMap = Test.sortByValue(map);<newline46mondego><newline46mondego>        for (Map.Entry<String, Integer> entry : sortedMap.entrySet()) {<newline46mondego>            System.out.println(<doubleQuotes46>Item is:<doubleQuotes46> + entry.getKey() + <doubleQuotes46> with value:<doubleQuotes46><newline46mondego>                    + entry.getValue());<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"1102splitHere46","12738229splitHere46","Item is:item4 with value:7<newline46mondego>Item is:item2 with value:2<newline46mondego>Item is:item3 with value:1<newline46mondego>Item is:item1 with value:1<newline46mondego>Item is:item6 with value:4<newline46mondego>Item is:item5 with value:3<newline46mondego>*******<newline46mondego>Item is:item4 with value:7<newline46mondego>Item is:item6 with value:4<newline46mondego>Item is:item5 with value:3<newline46mondego>Item is:item2 with value:2<newline46mondego>Item is:item3 with value:1<newline46mondego>Item is:item1 with value:1<newline46mondego>"
"1103splitHere46","12738229splitHere46","//HERE YOU ARE GETTING ALL THE VALUES<newline46mondego>List<Integer> mapValues = new ArrayList<Integer>(tempMap.values());<newline46mondego>HashMap<String, Integer> sortedMap = new LinkedHashMap<String, Integer>();<newline46mondego><newline46mondego>//YOU ARE INSERTING THE VALUES TO A TreeSet WHICH WILL REMOVE DUPLICATES<newline46mondego>TreeSet<Integer> sortedSet = new TreeSet<Integer>(mapValues);<newline46mondego>"
"1104splitHere46","12738348splitHere46","BorderFactory.createDashedBorder(Paint)"
"1105splitHere46","12738377splitHere46","PreferenceManager.getDefaultSharedPreferences(activity).edit().putInt(<doubleQuotes46>COLOR<doubleQuotes46>,color);<newline46mondego>"
"1106splitHere46","12738377splitHere46","PreferenceManager.getDefaultSharedPreferences(activity).getInt(<doubleQuotes46>COLOR<doubleQuotes46>,Color.BLACK);<newline46mondego>"
"1107splitHere46","12738471splitHere46","setBounds(x, y, w, h)"
"1108splitHere46","12738471splitHere46","Rectangle"
"1109splitHere46","12738471splitHere46","board[row][col].paint(g);<newline46mondego>g.setColor(Color.yellow);<newline46mondego>g.fillRect(0, 0, 195, 215);<newline46mondego>"
"1110splitHere46","12738471splitHere46","super.paint()"
"1111splitHere46","12738471splitHere46","super"
"1112splitHere46","12738471splitHere46","paint"
"1113splitHere46","12738471splitHere46","paintComponent"
"1114splitHere46","12738471splitHere46","public class TestBoard {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        new TestBoard();<newline46mondego>    }<newline46mondego><newline46mondego>    public TestBoard() {<newline46mondego><newline46mondego>        EventQueue.invokeLater(new Runnable() {<newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego><newline46mondego>                new GameBoard();<newline46mondego><newline46mondego>            }<newline46mondego>        });<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    public class GameBoard extends JFrame {<newline46mondego><newline46mondego>        public GameBoard() {<newline46mondego><newline46mondego>            JFrame frame = new JFrame();<newline46mondego>            frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>            frame.setLayout(new GridBagLayout());<newline46mondego>            GridBagConstraints gbc = new GridBagConstraints();<newline46mondego>            gbc.gridx = 0;<newline46mondego>            gbc.gridy = 0;<newline46mondego><newline46mondego>            Rectangle1 board[][] = new Rectangle1[3][3];<newline46mondego>            for (int row = 0; row < board.length; row++) {<newline46mondego><newline46mondego>                gbc.gridx = 0;<newline46mondego><newline46mondego>                for (int col = 0; col < board[row].length; col++) {<newline46mondego>                    board[row][col] = new Rectangle1(195, 215);<newline46mondego>                    if ((row + col) % 2 == 0) {<newline46mondego>                        board[row][col].setBackground(Color.YELLOW);<newline46mondego>                    } else {<newline46mondego>                        board[row][col].setBackground(Color.RED);<newline46mondego>                    }<newline46mondego>                    frame.add(board[row][col], gbc);<newline46mondego>                    gbc.gridx++;<newline46mondego>                }<newline46mondego><newline46mondego>                gbc.gridy++;<newline46mondego><newline46mondego>            }<newline46mondego><newline46mondego>            frame.pack();<newline46mondego>            frame.setVisible(true);<newline46mondego><newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public class Rectangle1 extends JPanel {<newline46mondego><newline46mondego>        public Rectangle1(int w, int h) {<newline46mondego>            setPreferredSize(new Dimension(w, h));<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1115splitHere46","12738471splitHere46","GridBagLayout"
"1116splitHere46","12738471splitHere46","JComponents"
"1117splitHere46","12738471splitHere46","JPanel"
"1118splitHere46","12738479splitHere46","ScriptException"
"1119splitHere46","12738479splitHere46","WebClient"
"1120splitHere46","12738506splitHere46","class CustomerActionListener implements ActionListener<newline46mondego>{<newline46mondego>  private JComboBox<String> comboBox;<newline46mondego>  public CustomerActionListener(JComboBox<String> comboBox){<newline46mondego>    this.comboBox = comboBox;<newline46mondego>  }<newline46mondego>  @Override<newline46mondego>  public void actionPerformed(ActionEvent event)<newline46mondego>  {<newline46mondego>    // Just use the comboBox<newline46mondego>    ComboBoxModel<String> model = comboBox.getModel();<newline46mondego>    int index = comboBox.getSelectedIndex();<newline46mondego>    String choosen = model.getElementAt(index);<newline46mondego>    System.out.println(<doubleQuotes46>Hey you choose <doubleQuotes46>+choosen);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"1121splitHere46","12738533splitHere46","sin()"
"1122splitHere46","12738533splitHere46","cos()"
"1123splitHere46","12738533splitHere46","double velocity_x = 22 * Math.sin(10 * Math.PI / 180);<newline46mondego>"
"1124splitHere46","12738559splitHere46","MessageBodyWorkers workers = client().getMessageBodyWorkers();<newline46mondego>"
"1125splitHere46","12738783splitHere46","_log.info(String.format(<doubleQuotes46>obj id: %s<doubleQuotes46>, (obj == null ? obj : obj.objId())));"
"1126splitHere46","12738851splitHere46","import org.zkoss.zk.ui.event.Event;<newline46mondego>import org.zkoss.zk.ui.util.EventInterceptor;<newline46mondego><newline46mondego>public class LogEventInterceptor implements EventInterceptor {<newline46mondego><newline46mondego>public Event beforeProcessEvent(Event event) {<newline46mondego>    System.out.println(event.getName() + <doubleQuotes46> event received for + <doubleQuotes46><newline46mondego>            + event.getTarget().getId() + <doubleQuotes46>!!!<doubleQuotes46>);<newline46mondego>    return event;<newline46mondego>}<newline46mondego>// rest of the impl<newline46mondego>"
"1127splitHere46","12738851splitHere46","<listener><newline46mondego>    <listener-class>foo.LogEventInterceptor</listener-class><newline46mondego></listener><newline46mondego>"
"1128splitHere46","12738851splitHere46","<window border=<doubleQuotes46>normal<doubleQuotes46> title=<doubleQuotes46>Intercepting UI Events demo<doubleQuotes46>><newline46mondego>    <button id=<doubleQuotes46>helloBtn<doubleQuotes46> label=<doubleQuotes46>Click me to Say hello<doubleQuotes46><newline46mondego>        onClick='alert(<doubleQuotes46>Hello !!!<doubleQuotes46>)'><newline46mondego>    </button><newline46mondego></window><newline46mondego>"
"1129splitHere46","12738851splitHere46","onClick event received for + helloBtn !!!<newline46mondego>"
"1130splitHere46","12738876splitHere46","Class"
"1131splitHere46","12738876splitHere46","Class.forName(String)"
"1132splitHere46","12738876splitHere46","StackTraceElement[] stack = Thread.currentThread().getStackTrace();<newline46mondego>for (StackTraceElement frame : stack) {<newline46mondego>    String fqcn = frame.getClassName();<newline46mondego>    Class<?> clazz = Class.forName(fqcn);<newline46mondego>}<newline46mondego>"
"1133splitHere46","12738876splitHere46","StackTraceElement#getMethodName()"
"1134splitHere46","12739009splitHere46","filename"
"1135splitHere46","12739139splitHere46","public User {<newline46mondego>    @OneToMany(targetEntity = Item_x.class, mappedBy = <doubleQuotes46>user<doubleQuotes46>, fetch = FetchType.EAGER, cascade = CascadeType.ALL)<newline46mondego>    @ElementDependent<newline46mondego>    private List<Item_x> item_x_list = new ArrayList<Item_x>();<newline46mondego>}<newline46mondego><newline46mondego>public Item_x {<newline46mondego>    @ManyToOne(fetch = FetchType.LAZY)<newline46mondego>    @JoinColumn(name = <doubleQuotes46>user_id<doubleQuotes46>, insertable = true, updatable = true)<newline46mondego>    @Element(name = <doubleQuotes46>user_id<doubleQuotes46>, required = false)<newline46mondego>    private Users user;<newline46mondego>}<newline46mondego>"
"1136splitHere46","12739301splitHere46","SortedMap"
"1137splitHere46","12739301splitHere46","Comparator"
"1138splitHere46","12739301splitHere46","final Map<String, Integer> map = new HashMap<String, Integer>();<newline46mondego>map.put(<doubleQuotes46>A<doubleQuotes46>, 5);<newline46mondego>map.put(<doubleQuotes46>B<doubleQuotes46>, 3);<newline46mondego>map.put(<doubleQuotes46>C<doubleQuotes46>, 10);<newline46mondego>map.put(<doubleQuotes46>D<doubleQuotes46>, 4);<newline46mondego>map.put(<doubleQuotes46>E<doubleQuotes46>, 1);<newline46mondego>map.put(<doubleQuotes46>F<doubleQuotes46>, 11);<newline46mondego>map.put(<doubleQuotes46>G<doubleQuotes46>, 11);<newline46mondego>map.put(<doubleQuotes46>H<doubleQuotes46>, 10);<newline46mondego><newline46mondego>TreeMap<String, Integer> sorted = new TreeMap<String, Integer>(new Comparator<String>() {<newline46mondego>  // Note: this comparator imposes orderings that are inconsistent with equals.<newline46mondego>  @Override<newline46mondego>  public int compare(String a, String b) {<newline46mondego>    if (map.get(a) >= map.get(b)) {<newline46mondego>      return -1;<newline46mondego>    } else {<newline46mondego>      return 1;<newline46mondego>    } // returning 0 would merge keys<newline46mondego>  }<newline46mondego>});<newline46mondego>sorted.putAll(map);<newline46mondego><newline46mondego><newline46mondego>Entry<String, Integer> first = sorted.firstEntry();<newline46mondego>System.out.println(<doubleQuotes46>Highest value: <doubleQuotes46> + first.getValue() + is for key: <doubleQuotes46> + first.getKey());<newline46mondego><newline46mondego>// If duplicate keys are never a concern, you can stop here.  Otherwise, one may <newline46mondego>// continue below to find all keys that may be mapped to an equal highest value:<newline46mondego>List<String> others = new LinkedList<String>();<newline46mondego>for (Entry<String, Integer> entries : sorted.entrySet()) {<newline46mondego>  if (entries.getValue().equals(first.getValue())) {<newline46mondego>    others.add(entries.getKey());<newline46mondego>  } else {<newline46mondego>    break;<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>System.out.println(<doubleQuotes46>All keys mapped to this highest value: <doubleQuotes46> + others);<newline46mondego>"
"1139splitHere46","12739301splitHere46","Highest value: 11 is for key: G<newline46mondego>All keys mapped to this highest value: [G, F]<newline46mondego>"
"1140splitHere46","12739408splitHere46","if (x > 9)<newline46mondego>  if (y > 8) System.out.println(<doubleQuotes46>x > 9 and y > 8<doubleQuotes46>);<newline46mondego>  else if (z >= 7) System.out.println(<doubleQuotes46>SHOULD OUTPUT THIS x <= 9 and z >= 7<doubleQuotes46>);<newline46mondego>  else<newline46mondego>    System.out.println(<doubleQuotes46>x <= 9 and z < 7<doubleQuotes46>);<newline46mondego>"
"1141splitHere46","12739517splitHere46","tx.finish"
"1142splitHere46","12739517splitHere46","tx.success()<newline46mondego>"
"1143splitHere46","12739611splitHere46","def slurper = new XmlSlurper()<newline46mondego>def htmlParser = slurper.parse(<doubleQuotes46>http://stackoverflow.com<doubleQuotes46>)<newline46mondego><newline46mondego>htmlParser.'**'.findAll{ it.@class == 'question-hyperlink'}.each {<newline46mondego>   println it<newline46mondego>}<newline46mondego>"
"1144splitHere46","12739784splitHere46","JDK-6"
"1145splitHere46","12739784splitHere46","JDK-7"
"1146splitHere46","12739784splitHere46","PATH"
"1147splitHere46","12739784splitHere46","JAVA_HOME"
"1148splitHere46","12739784splitHere46","Computer-->Properties-->Advanced System settings-->advanced tab-->system variables-->add PATH in user variables and JAVA_HOME in System variables."
"1149splitHere46","12739922splitHere46","private OutputCollector<Text, Text> output; <newline46mondego>"
"1150splitHere46","12739922splitHere46","reduce()"
"1151splitHere46","12739922splitHere46","OutputCollector<Text, Text> output"
"1152splitHere46","12739922splitHere46","this.output=output;<newline46mondego>// if the object is null, initialize it if you wanna use it<newline46mondego>"
"1153splitHere46","12740008splitHere46","static boolean isMark(char ch)<newline46mondego>{<newline46mondego>    int type = Character.getType(ch);<newline46mondego>    return type == Character.NON_SPACING_MARK ||<newline46mondego>           type == Character.ENCLOSING_MARK ||<newline46mondego>           type == Character.COMBINING_SPACING_MARK;<newline46mondego>}<newline46mondego>"
"1154splitHere46","12740008splitHere46","String olle = <doubleQuotes46>อภิชาติ<doubleQuotes46>;<newline46mondego>int count = 0;<newline46mondego><newline46mondego>for(int i=0; i<olle.length(); i++)<newline46mondego>{<newline46mondego>    if(!isMark(olle.charAt(i)))<newline46mondego>        count++;<newline46mondego>}<newline46mondego><newline46mondego>System.out.println(count);<newline46mondego>"
"1155splitHere46","12740140splitHere46","String[][] students = { { <doubleQuotes46>John<doubleQuotes46>, <doubleQuotes46>Mark<doubleQuotes46>, <doubleQuotes46>James<doubleQuotes46> }, { <doubleQuotes46>3<doubleQuotes46>, <doubleQuotes46>2<doubleQuotes46>, <doubleQuotes46>1<doubleQuotes46> } };<newline46mondego>    for (int i = 0; i < students[0].length; i++) {<newline46mondego>        StringBuilder asterix = new StringBuilder();<newline46mondego>        for (int acnt = 0; acnt < Integer.parseInt(students[1][i]); acnt++)<newline46mondego>            asterix.append(<doubleQuotes46>*<doubleQuotes46>);<newline46mondego>        System.out.printf(<doubleQuotes46>%s\t%s\t%s<doubleQuotes46>, students[0][i], students[1][i],asterix.toString());<newline46mondego>        System.out.println();<newline46mondego>    }<newline46mondego>"
"1156splitHere46","12740140splitHere46","John    3   ***<newline46mondego>Mark    2   **<newline46mondego>James   1   *<newline46mondego>"
"1157splitHere46","12740141splitHere46","Combobox"
"1158splitHere46","12740141splitHere46","Image"
"1159splitHere46","12740141splitHere46","Events.ON_SELECT"
"1160splitHere46","12740141splitHere46","Image"
"1161splitHere46","12740141splitHere46","SelectorComposer"
"1162splitHere46","12740141splitHere46","@Listen(<doubleQuotes46>onSelect = combobox#mycmb<doubleQuotes46>)<newline46mondego>public void onComboboxSelected(SelectEvent event) {<newline46mondego>  Set<MyObject> selectedObjects = event.getSelectedObjects();<newline46mondego>  MyObject obj = selectedObjects.get(0);<newline46mondego><newline46mondego>  image.setSrc(getImagePath(obj));  // image are Image component you wired.<newline46mondego>}<newline46mondego>"
"1163splitHere46","12740209splitHere46","currentDateTime.getTime())<newline46mondego>"
"1164splitHere46","12740212splitHere46","<welcome-file-list><newline46mondego><welcome-file><newline46mondego>    <!-- Your Start File --><newline46mondego></welcome-file><newline46mondego></welcome-file-list><newline46mondego>"
"1165splitHere46","12740340splitHere46","import java.util.ArrayList;<newline46mondego>import java.util.Collections;<newline46mondego>import java.util.Comparator;<newline46mondego>import java.util.HashMap;<newline46mondego>import java.util.List;<newline46mondego>import java.util.Map;<newline46mondego>import java.util.Map.Entry;<newline46mondego><newline46mondego>public class Main {<newline46mondego><newline46mondego>    /**<newline46mondego>     * @param args<newline46mondego>     */<newline46mondego>    public static void main(String[] args) {<newline46mondego>    HashMap<String, Integer> counter = new HashMap<String, Integer>();<newline46mondego><newline46mondego>    // [... Code to populate hashtable goes here ...]<newline46mondego>    // <newline46mondego><newline46mondego>    // Extract the map as a list<newline46mondego>    List<Map.Entry<String, Integer>> entries = new ArrayList<Map.Entry<String, Integer>>(counter.entrySet());<newline46mondego><newline46mondego>    // Sort the list of entries.<newline46mondego>    Collections.sort(entries, new Comparator<Map.Entry<String, Integer>>() {<newline46mondego>        @Override<newline46mondego>        public int compare(Entry<String, Integer> first, Entry<String, Integer> second) {<newline46mondego>        // This will give a *positive* value if first freq < second freq, zero if they're equal, negative if first > second.<newline46mondego>        // The result is a highest frequency first sort.<newline46mondego>        return second.getValue() - first.getValue();<newline46mondego>        }<newline46mondego>    });<newline46mondego><newline46mondego>    // And display the results<newline46mondego>    for (Map.Entry<String, Integer> entry : entries.subList(0, 10))<newline46mondego>        System.out.println(String.format(<doubleQuotes46>%s: %d<doubleQuotes46>, entry.getKey(), entry.getValue()));<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"1166splitHere46","12740612splitHere46","socket = new Socket();<newline46mondego>"
"1167splitHere46","12740612splitHere46","socket.connect(remoteAddress, timeout);<newline46mondego>"
"1168splitHere46","12740619splitHere46","Foo"
"1169splitHere46","12740619splitHere46","Bar"
"1170splitHere46","12740619splitHere46","Bar"
"1171splitHere46","12740689splitHere46","String[][] students = { { <doubleQuotes46>Carol McKane<doubleQuotes46>, <doubleQuotes46>James Eriol<doubleQuotes46>, <doubleQuotes46>Elainee Black<doubleQuotes46> }, { <doubleQuotes46>920<doubleQuotes46>, <doubleQuotes46>154<doubleQuotes46>, <doubleQuotes46>462<doubleQuotes46> } };<newline46mondego><newline46mondego><newline46mondego>    for (int i = 0 ; i < students[0].length; i++) {<newline46mondego>        System.out.println(students[0][i] + <doubleQuotes46>\t<doubleQuotes46> + students[1][i] + <doubleQuotes46>\t<doubleQuotes46> + students[0][i].replace( <doubleQuotes46> <doubleQuotes46>, <doubleQuotes46><doubleQuotes46> ).length() );<newline46mondego>    }<newline46mondego>"
"1172splitHere46","12740758splitHere46","String url = <doubleQuotes46>age/data/images/four_seasons1.jpg<doubleQuotes46>;<newline46mondego><newline46mondego>    String imageName = url.substring(url.lastIndexOf( <doubleQuotes46>/<doubleQuotes46> )+1, url.length()) ;<newline46mondego>"
"1173splitHere46","12740776splitHere46","a"
"1174splitHere46","12740776splitHere46","memory_1"
"1175splitHere46","12740776splitHere46","b"
"1176splitHere46","12740776splitHere46","a"
"1177splitHere46","12740776splitHere46","b"
"1178splitHere46","12740776splitHere46","memory_1"
"1179splitHere46","12740776splitHere46","a"
"1180splitHere46","12740776splitHere46","a"
"1181splitHere46","12740776splitHere46","memory_2"
"1182splitHere46","12740776splitHere46","b"
"1183splitHere46","12740776splitHere46","memory_1"
"1184splitHere46","12740790splitHere46","finally <newline46mondego>    {<newline46mondego>          if( stmt != null ) {<newline46mondego>            try {<newline46mondego>              stmt.close();<newline46mondego>            }<newline46mondego>            catch(SQLException ex ) {<newline46mondego>              ex.printStackTrace();<newline46mondego>            }<newline46mondego>          }<newline46mondego>    }<newline46mondego>"
"1185splitHere46","12740824splitHere46","int c=0;<newline46mondego> while(ans1 >= ans2){<newline46mondego>     ans1 -= ans2;<newline46mondego>     c++;<newline46mondego> }<newline46mondego>"
"1186splitHere46","12740824splitHere46","c"
"1187splitHere46","12740824splitHere46","ans1"
"1188splitHere46","12740824splitHere46","abs1"
"1189splitHere46","12740824splitHere46","abs2"
"1190splitHere46","12740824splitHere46","boolean n1 = (ans1 & (1<<31))!=0;<newline46mondego> boolean n2 = (ans2 & (1<<31))!=0;<newline46mondego> ans1 = Math.abs(ans1);<newline46mondego> ans2 = Math.abs(ans2);<newline46mondego><newline46mondego> int c=0;<newline46mondego> while(ans1 >= ans2){<newline46mondego>     ans1 -= ans2;<newline46mondego>     c++;<newline46mondego> }<newline46mondego> if(!n1 && n2) c = -c;<newline46mondego> else if(n1 && !n2){<newline46mondego>     c = -c;<newline46mondego>     if(ans1 > 0){<newline46mondego>         ans1 = ans2 - ans1;<newline46mondego>         c--;<newline46mondego>     }<newline46mondego> }else if(n1 && n2){<newline46mondego>     if(ans1 > 0){<newline46mondego>         ans1 = ans2 - ans1;<newline46mondego>         c++;<newline46mondego>     }<newline46mondego> }<newline46mondego>"
"1191splitHere46","12740906splitHere46","public String getPhysicalBinaryPath(Binary b){<newline46mondego>    try {<newline46mondego>        Field idField=b.getClass().getDeclaredField(<doubleQuotes46>identifier<doubleQuotes46>);<newline46mondego>        idField.setAccessible(true);<newline46mondego>        String identifier = (String)idField.get(b).toString();<newline46mondego>        Field storeField=b.getClass().getDeclaredField(<doubleQuotes46>store<doubleQuotes46>);<newline46mondego>        storeField.setAccessible(true);<newline46mondego>        Object store = storeField.get(b);<newline46mondego>        Field pathField = store.getClass().getDeclaredField(<doubleQuotes46>path<doubleQuotes46>);<newline46mondego>        pathField.setAccessible(true);<newline46mondego>        String dataStorePath = (String)pathField.get(store);<newline46mondego><newline46mondego>        String binaryPath = identifier.substring(0,2)+File.separator+<newline46mondego>                            identifier.substring(2,4)+File.separator+<newline46mondego>                            identifier.substring(4,6)+File.separator+<newline46mondego>                            identifier;<newline46mondego><newline46mondego>        return dataStorePath+File.separator+binaryPath;<newline46mondego><newline46mondego>    } catch (IllegalArgumentException ex) {<newline46mondego>        Logger.getLogger(Repoutput.class.getName()).log(Level.SEVERE, null, ex);<newline46mondego>    } catch (IllegalAccessException ex) {<newline46mondego>        Logger.getLogger(Repoutput.class.getName()).log(Level.SEVERE, null, ex);<newline46mondego>    } catch (NoSuchFieldException ex) {<newline46mondego>        Logger.getLogger(Repoutput.class.getName()).log(Level.SEVERE, null, ex);<newline46mondego>    } catch (SecurityException ex) {<newline46mondego>        Logger.getLogger(Repoutput.class.getName()).log(Level.SEVERE, null, ex);<newline46mondego>    }<newline46mondego><newline46mondego>        return <doubleQuotes46><doubleQuotes46>;<newline46mondego><newline46mondego><newline46mondego>}<newline46mondego>"
"1192splitHere46","12740906splitHere46","Binary b = session.getValueFactory().createBinary(in);<newline46mondego>Value value = session.getValueFactory().createValue(b);<newline46mondego>  if (value instanceof JackrabbitValue) {<newline46mondego>   JackrabbitValue jv = (JackrabbitValue) value;<newline46mondego>   String id = jv.getContentIdentity();<newline46mondego>  }<newline46mondego>"
"1193splitHere46","12740925splitHere46","InetAddress ip;<newline46mondego>    ip = InetAddress.getLocalHost();<newline46mondego>    System.out.println(<doubleQuotes46>Current IP address : <doubleQuotes46> + ip.getHostAddress());<newline46mondego><newline46mondego>    NetworkInterface network = NetworkInterface.getByInetAddress(ip);<newline46mondego><newline46mondego>    byte[] mac = network.getHardwareAddress();<newline46mondego><newline46mondego>    System.out.print(<doubleQuotes46>Current MAC address : <doubleQuotes46>);<newline46mondego><newline46mondego>    StringBuilder sb = new StringBuilder();<newline46mondego>    for (int i = 0; i < mac.length; i++) {<newline46mondego>        sb.append(String.format(<doubleQuotes46>%02X%s<doubleQuotes46>, mac[i], (i < mac.length - 1) ? <doubleQuotes46>-<doubleQuotes46> : <doubleQuotes46><doubleQuotes46>));        <newline46mondego>    }<newline46mondego>    System.out.println(sb.toString());<newline46mondego>"
"1194splitHere46","12740925splitHere46","java.util.Enumeration<NetworkInterface> en = NetworkInterface.getNetworkInterfaces();<newline46mondego>        en.hasMoreElements(); ) {<newline46mondego>        NetworkInterface iface = en.nextElement();<newline46mondego>        List<InterfaceAddress> addrs = iface.getInterfaceAddresses();<newline46mondego>        //For each network interfaces iterate through each ip address<newline46mondego>        for(InterfaceAddress addr : addrs) {<newline46mondego>                         ip = addr.getAddress();<newline46mondego>                          //Process the IP ...<newline46mondego>"
"1195splitHere46","12741093splitHere46","String query = <doubleQuotes46>SELECT Description,(Select Name,Id from Contacts) , Account.Name, (Select Id from Contacts) from Account<doubleQuotes46>;<newline46mondego><newline46mondego>// Remove all subqueries (things in parenthesis)<newline46mondego>// Remove doubled commas (even with space in between)<newline46mondego>// Remove a comma before the from<newline46mondego>String answer = query<newline46mondego>    .replaceAll(<doubleQuotes46>\\(.*?\\)<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>)<newline46mondego>    .replaceAll(<doubleQuotes46>,\\s*,<doubleQuotes46>, <doubleQuotes46>,<doubleQuotes46>)<newline46mondego>    .replaceAll(<doubleQuotes46>,\\s*from<doubleQuotes46>, <doubleQuotes46> from<doubleQuotes46>);<newline46mondego>"
"1196splitHere46","12741148splitHere46","PdfWriter"
"1197splitHere46","12741148splitHere46","PdfImportedPage"
"1198splitHere46","12741148splitHere46","PdfWriter"
"1199splitHere46","12741148splitHere46","PdfImportedPage"
"1200splitHere46","12741148splitHere46","PageStamp"
"1201splitHere46","12741148splitHere46","PdfCopy"
"1202splitHere46","12741148splitHere46","PdfStamper"
"1203splitHere46","12741339splitHere46","if (num1 == 0 || num2 == 0) {<newline46mondego>        return 0;<newline46mondego>}<newline46mondego><newline46mondego>else if( num2 < 0 ) {<newline46mondego>    return - num1 + multiply2(num1, num2 + 1);<newline46mondego>}<newline46mondego><newline46mondego>else {<newline46mondego>    return num1 + multiply2(num1, num2 - 1);<newline46mondego>}<newline46mondego>"
"1204splitHere46","12741362splitHere46","FieldAccess -> Exp NAME<newline46mondego>Exp         -> FieldAccess<newline46mondego>"
"1205splitHere46","12741362splitHere46","Exp -> Exp '*' Exp<newline46mondego>     | Exp '/' Exp<newline46mondego>     | Exp '+' Exp<newline46mondego>     ...<newline46mondego>     | Name<newline46mondego>     ...<newline46mondego>"
"1206splitHere46","12741362splitHere46","FieldAccess -> Exp NAME<newline46mondego>Exp         -> FieldAccess<newline46mondego>"
"1207splitHere46","12741362splitHere46","a[i].b[a[p].x].id.xyz.a[c].o = i;"
"1208splitHere46","12741362splitHere46","grammar T;<newline46mondego><newline46mondego>options {<newline46mondego>  output=AST;<newline46mondego>}<newline46mondego><newline46mondego>tokens {<newline46mondego>  ASSIGN;<newline46mondego>  IND;<newline46mondego>  FA;<newline46mondego>}<newline46mondego><newline46mondego>parse<newline46mondego> : assign EOF -> assign<newline46mondego> ;<newline46mondego><newline46mondego>assign<newline46mondego> : lookup '=' expr ';' -> ^(ASSIGN lookup expr)<newline46mondego> ;<newline46mondego><newline46mondego>expr<newline46mondego> : lookup<newline46mondego> ;<newline46mondego><newline46mondego>lookup<newline46mondego> : (NAME -> NAME) ( array_index  -> ^(IND $lookup array_index)<newline46mondego>                  | field_access -> ^(FA $lookup field_access)<newline46mondego>                  )*<newline46mondego> ;<newline46mondego><newline46mondego>array_index<newline46mondego> : '[' expr ']' -> expr<newline46mondego> ;<newline46mondego><newline46mondego>field_access<newline46mondego> : '.' NAME -> NAME<newline46mondego> ;<newline46mondego><newline46mondego>NAME  : 'a'..'z'+;<newline46mondego>SPACE : ' ' {skip();};<newline46mondego>"
"1209splitHere46","12741362splitHere46","a[i].b[a[p].x].id.xyz.a[c].o = i;"
"1210splitHere46","12741362splitHere46","lookup<newline46mondego> : (NAME -> NAME) ( array_index  -> ^(IND $lookup array_index)<newline46mondego>                  | field_access -> ^(FA $lookup field_access)<newline46mondego>                  )*<newline46mondego> ;<newline46mondego>"
"1211splitHere46","12741362splitHere46","lookup<newline46mondego> : NAME ( array_index^<newline46mondego>        | field_access^<newline46mondego>        )*<newline46mondego> ;<newline46mondego>"
"1212splitHere46","12741362splitHere46","<doubleQuotes46>a[i].b<doubleQuotes46>"
"1213splitHere46","12741362splitHere46","FA<newline46mondego>       /  \<newline46mondego>     IND   B<newline46mondego>     / \<newline46mondego>    A   I<newline46mondego>"
"1214splitHere46","12741362splitHere46","FA<newline46mondego>       /  \<newline46mondego>      B   IND<newline46mondego>          / \<newline46mondego>         I   A<newline46mondego>"
"1215splitHere46","12741362splitHere46","FA"
"1216splitHere46","12741362splitHere46","IND"
"1217splitHere46","12741362splitHere46","array_index"
"1218splitHere46","12741362splitHere46","field_access"
"1219splitHere46","12741502splitHere46","http://myrepo.com:8080/artifactory/simple/myrepo/<newline46mondego>    fizz/<newline46mondego>        buzz/<newline46mondego>            1.7/<newline46mondego>                buzz-1.7.jar<newline46mondego>                resources-1.7.zip<newline46mondego>                ivy-1.7.xml<newline46mondego>"
"1220splitHere46","12741502splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego><ivy-module version=<doubleQuotes46>2.0<doubleQuotes46>><newline46mondego>    <info organisation=<doubleQuotes46>fizz<doubleQuotes46><newline46mondego>        module=<doubleQuotes46>buzz<doubleQuotes46><newline46mondego>        revision=<doubleQuotes46>1.7<doubleQuotes46><newline46mondego>        status=<doubleQuotes46>release<doubleQuotes46><newline46mondego>        publication=<doubleQuotes46>20110531150115<doubleQuotes46><newline46mondego>        default=<doubleQuotes46>true<doubleQuotes46><newline46mondego>    /><newline46mondego>    <configurations><newline46mondego>        <conf name=<doubleQuotes46>default<doubleQuotes46> visibility=<doubleQuotes46>public<doubleQuotes46>/><newline46mondego>    </configurations><newline46mondego>    <publications><newline46mondego>      <artifact name=<doubleQuotes46>buzz<doubleQuotes46>      type=<doubleQuotes46>jar<doubleQuotes46> /><newline46mondego>      <artifact name=<doubleQuotes46>resources<doubleQuotes46> type=<doubleQuotes46>zip<doubleQuotes46> /><newline46mondego>    </publications><newline46mondego></ivy-module><newline46mondego>"
"1221splitHere46","12741502splitHere46","<configurations><newline46mondego>            <conf name=<doubleQuotes46>default<doubleQuotes46> extends=<doubleQuotes46>jar, resources<doubleQuotes46> visibility=<doubleQuotes46>public<doubleQuotes46>/><newline46mondego>            <conf name=<doubleQuotes46>jar<doubleQuotes46> visibility=<doubleQuotes46>public<doubleQuotes46>/><newline46mondego>            <conf name=<doubleQuotes46>resources<doubleQuotes46> visibility=<doubleQuotes46>public<doubleQuotes46>/><newline46mondego>    </configurations><newline46mondego>    <publications><newline46mondego>      <artifact name=<doubleQuotes46>buzz<doubleQuotes46>      type=<doubleQuotes46>jar<doubleQuotes46> conf=<doubleQuotes46>jar<doubleQuotes46>/><newline46mondego>      <artifact name=<doubleQuotes46>resources<doubleQuotes46> type=<doubleQuotes46>zip<doubleQuotes46> conf=<doubleQuotes46>resources<doubleQuotes46>/><newline46mondego>    </publications><newline46mondego>"
"1222splitHere46","12741591splitHere46","for each pixel row{<newline46mondego>    for each pixel column{<newline46mondego>        if(pixel.getColor() == (new Color()).black)<newline46mondego>           save coordinates<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1223splitHere46","12741988splitHere46","JdbcRowSetImpl"
"1224splitHere46","12741988splitHere46","RowSet"
"1225splitHere46","12741988splitHere46","ResultSet"
"1226splitHere46","12742191splitHere46","<class name=<doubleQuotes46>TicketBooking<doubleQuotes46> table=<doubleQuotes46>TicketBooking<doubleQuotes46><newline46mondego>        entity-name=<doubleQuotes46>TicketBooking<doubleQuotes46>><newline46mondego><newline46mondego></class><newline46mondego><newline46mondego><class name=<doubleQuotes46>TicketBooking<doubleQuotes46> table=<doubleQuotes46>TicketBookingHistory<doubleQuotes46><newline46mondego>        entity-name=<doubleQuotes46>TicketBookingHistory<doubleQuotes46>><newline46mondego>    ...<newline46mondego></class><newline46mondego>"
"1227splitHere46","12742750splitHere46","Matcher.match"
"1228splitHere46","12742750splitHere46","Matcher.find()"
"1229splitHere46","12742750splitHere46","Pattern pattern = Pattern.compile(<doubleQuotes46>\<doubleQuotes46>([^\<doubleQuotes46>]+)\<doubleQuotes46>|'([^']+)'|\\S+<doubleQuotes46>);<newline46mondego>List<String> testStrings = Arrays.asList(<doubleQuotes46>foo bar<doubleQuotes46>, <doubleQuotes46>\<doubleQuotes46>foo bar\<doubleQuotes46><doubleQuotes46>,<doubleQuotes46>'foo bar'<doubleQuotes46>, <doubleQuotes46>'foo bar<doubleQuotes46>, <doubleQuotes46>\<doubleQuotes46>'foo bar\<doubleQuotes46><doubleQuotes46>, <doubleQuotes46>foo bar'<doubleQuotes46>, <doubleQuotes46>foo bar\<doubleQuotes46><doubleQuotes46>, <doubleQuotes46>\<doubleQuotes46>foo bar\<doubleQuotes46> \<doubleQuotes46>stack overflow\<doubleQuotes46><doubleQuotes46>, <doubleQuotes46>\<doubleQuotes46>foo' bar\<doubleQuotes46> \<doubleQuotes46>stack overflow\<doubleQuotes46> how do you do<doubleQuotes46>);<newline46mondego>for (String testString : testStrings) {<newline46mondego>    int count = 1;<newline46mondego>    Matcher matcher = pattern.matcher(testString);<newline46mondego>    System.out.format(<doubleQuotes46>* %s%n<doubleQuotes46>, testString);<newline46mondego>    while (matcher.find()) {<newline46mondego>        System.out.format(<doubleQuotes46>\t* group%d: %s%n<doubleQuotes46>, count++, matcher.group(1) == null ? matcher.group(2) == null ? matcher.group() : matcher.group(2) : matcher.group(1));<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1230splitHere46","12742750splitHere46","* foo bar<newline46mondego>    * group1: foo<newline46mondego>    * group2: bar<newline46mondego>* <doubleQuotes46>foo bar<doubleQuotes46><newline46mondego>    * group1: foo bar<newline46mondego>* 'foo bar'<newline46mondego>    * group1: foo bar<newline46mondego>* 'foo bar<newline46mondego>    * group1: 'foo<newline46mondego>    * group2: bar<newline46mondego>* <doubleQuotes46>'foo bar<doubleQuotes46><newline46mondego>    * group1: 'foo bar<newline46mondego>* foo bar'<newline46mondego>    * group1: foo<newline46mondego>    * group2: bar'<newline46mondego>* foo bar<doubleQuotes46><newline46mondego>    * group1: foo<newline46mondego>    * group2: bar<doubleQuotes46><newline46mondego>* <doubleQuotes46>foo bar<doubleQuotes46> <doubleQuotes46>stack overflow<doubleQuotes46><newline46mondego>    * group1: foo bar<newline46mondego>    * group2: stack overflow<newline46mondego>* <doubleQuotes46>foo' bar<doubleQuotes46> <doubleQuotes46>stack overflow<doubleQuotes46> how do you do<newline46mondego>    * group1: foo' bar<newline46mondego>    * group2: stack overflow<newline46mondego>    * group3: how<newline46mondego>    * group4: do<newline46mondego>    * group5: you<newline46mondego>    * group6: do<newline46mondego>"
"1231splitHere46","12742807splitHere46","<doubleQuotes46>(?<=<img src=\<doubleQuotes46>)[^\<doubleQuotes46>]*<doubleQuotes46>"
"1232splitHere46","12742807splitHere46","@Test<newline46mondego>    public void testX() {<newline46mondego>        final String s = <doubleQuotes46><img src=\<doubleQuotes46>mysrc\<doubleQuotes46> width=\<doubleQuotes46>128\<doubleQuotes46> height=\<doubleQuotes46>92\<doubleQuotes46>...<doubleQuotes46>;<newline46mondego>        final String regex = <doubleQuotes46>(?<=<img src=\<doubleQuotes46>)[^\<doubleQuotes46>]*<doubleQuotes46>;<newline46mondego>        final Pattern p = Pattern.compile(regex);<newline46mondego>        final Matcher m = p.matcher(s);<newline46mondego>        while (m.find()) {<newline46mondego>            System.out.println(m.group());<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego>"
"1233splitHere46","12742807splitHere46","mysrc<newline46mondego>"
"1234splitHere46","12742808splitHere46","p2"
"1235splitHere46","12742808splitHere46","Pattern p1 = Pattern.compile(<doubleQuotes46>\\([^)]*\\)<doubleQuotes46>);<newline46mondego>"
"1236splitHere46","12742836splitHere46","xsi:schemaLocation=<doubleQuotes46>http://java.sun.com/xml/ns/javaee/webjsptaglibrary_2_0.xsd<doubleQuotes46><newline46mondego>"
"1237splitHere46","12742836splitHere46","xsi:schemaLocation=<doubleQuotes46>http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/webjsptaglibrary_2_0.xsd<doubleQuotes46><newline46mondego>"
"1238splitHere46","12742836splitHere46","xsd"
"1239splitHere46","12742926splitHere46","public SupplierInfoDto(String s, Double d) {<newline46mondego>   this(s, new BigDecimal(String.valueOf(d)));<newline46mondego>}<newline46mondego><newline46mondego>public SupplierInfoDto(String s, BigDecimal bd) {<newline46mondego>   //set fields<newline46mondego>}<newline46mondego>"
"1240splitHere46","12742926splitHere46","new BigDecimal(<doubleQuotes46>0.1<doubleQuotes46>)<newline46mondego>"
"1241splitHere46","12742926splitHere46","new BigDecimal(0.1d)<newline46mondego>"
"1242splitHere46","12742942splitHere46","public static String selectRandom(String[] names)    <newline46mondego>{    <newline46mondego>      Random r = new Random();<newline46mondego>      int ranNum= r.nextInt(names.length);<newline46mondego>      return names[ranNum];<newline46mondego><newline46mondego>}<newline46mondego>"
"1243splitHere46","12743043splitHere46","import org.eclipse.jface.dialogs.Dialog;<newline46mondego>import org.eclipse.jface.dialogs.IDialogConstants;<newline46mondego>import org.eclipse.swt.SWT;<newline46mondego>import org.eclipse.swt.layout.GridData;<newline46mondego>import org.eclipse.swt.layout.GridLayout;<newline46mondego>import org.eclipse.swt.widgets.Button;<newline46mondego>import org.eclipse.swt.widgets.Combo;<newline46mondego>import org.eclipse.swt.widgets.Composite;<newline46mondego>import org.eclipse.swt.widgets.Control;<newline46mondego>import org.eclipse.swt.widgets.Group;<newline46mondego>import org.eclipse.swt.widgets.Label;<newline46mondego>import org.eclipse.swt.widgets.List;<newline46mondego>import org.eclipse.swt.widgets.Shell;<newline46mondego>import org.eclipse.swt.widgets.Text;<newline46mondego><newline46mondego>public class DummyDialog extends Dialog {<newline46mondego><newline46mondego>    private Composite composite;<newline46mondego><newline46mondego>    public DummyDialog(Shell parentShell)<newline46mondego>    {<newline46mondego>        super(parentShell);<newline46mondego>        setShellStyle(parentShell.getStyle() | SWT.CLOSE | SWT.TITLE | SWT.BORDER | SWT.APPLICATION_MODAL);<newline46mondego>        setBlockOnOpen(true);<newline46mondego>    }<newline46mondego><newline46mondego>    protected Control createDialogArea(Composite parent) {<newline46mondego>        this.composite = (Composite) super.createDialogArea(parent);<newline46mondego><newline46mondego>        GridLayout layout = new GridLayout(1, false);<newline46mondego>        layout.marginHeight = 5;<newline46mondego>        layout.marginWidth = 10;<newline46mondego><newline46mondego>        composite.setLayout(layout);<newline46mondego><newline46mondego>        createContent();<newline46mondego><newline46mondego>        return composite;<newline46mondego>    }<newline46mondego><newline46mondego>    private void createContent()<newline46mondego>    {<newline46mondego>        createTopContent();<newline46mondego><newline46mondego>        createMiddleContent();<newline46mondego><newline46mondego>        createBottomContent();<newline46mondego>    }<newline46mondego><newline46mondego>    private void createTopContent()<newline46mondego>    {<newline46mondego>        Composite top = new Composite(composite, SWT.NONE);<newline46mondego><newline46mondego>        top.setLayout(new GridLayout(2, false));<newline46mondego>        top.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true, false));<newline46mondego><newline46mondego>        Label firstLabel = new Label(top, SWT.NONE);<newline46mondego>        firstLabel.setText(<doubleQuotes46>X-Ref Library<doubleQuotes46>);<newline46mondego>        Text firstText = new Text(top, SWT.BORDER);<newline46mondego>        firstText.setText(<doubleQuotes46>MANISH2XA<doubleQuotes46>);<newline46mondego>        firstText.setEditable(false);<newline46mondego>        firstText.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true, true));<newline46mondego><newline46mondego>        Label secondLabel = new Label(top, SWT.NONE);<newline46mondego>        secondLabel.setText(<doubleQuotes46>Text<doubleQuotes46>);<newline46mondego>        Text secondText = new Text(top, SWT.BORDER);<newline46mondego>        secondText.setText(<doubleQuotes46>Test Lib for Manish<doubleQuotes46>);<newline46mondego>        secondText.setEditable(false);<newline46mondego>        secondText.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true, true));<newline46mondego>    }<newline46mondego><newline46mondego>    private void createMiddleContent()<newline46mondego>    {<newline46mondego>        Composite middle = new Composite(composite, SWT.NONE);<newline46mondego>        middle.setLayout(new GridLayout(3, false));<newline46mondego>        middle.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true));<newline46mondego><newline46mondego>        Group leftGroup = new Group(middle, SWT.NONE);<newline46mondego>        leftGroup.setText(<doubleQuotes46>Object Library(s)<doubleQuotes46>);<newline46mondego>        leftGroup.setLayout(new GridLayout(1, false));<newline46mondego>        leftGroup.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true));<newline46mondego><newline46mondego>        List leftList = new List(leftGroup, SWT.BORDER);<newline46mondego>        leftList.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true));<newline46mondego>        leftList.add(<doubleQuotes46>DUMMY<doubleQuotes46>);<newline46mondego><newline46mondego>        Composite buttons = new Composite(middle, SWT.NONE);<newline46mondego>        buttons.setLayout(new GridLayout(1, false));<newline46mondego><newline46mondego>        Button moveUp = new Button(buttons, SWT.PUSH);<newline46mondego>        moveUp.setText(<doubleQuotes46>Move up<doubleQuotes46>);<newline46mondego>        moveUp.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true, true));<newline46mondego>        Button moveDown = new Button(buttons, SWT.PUSH);<newline46mondego>        moveDown.setText(<doubleQuotes46>Move down<doubleQuotes46>);<newline46mondego>        moveDown.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true, true));<newline46mondego>        Button modify = new Button(buttons, SWT.PUSH);<newline46mondego>        modify.setText(<doubleQuotes46>Modify<doubleQuotes46>);<newline46mondego>        modify.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true, true));<newline46mondego>        Button remove = new Button(buttons, SWT.PUSH);<newline46mondego>        remove.setText(<doubleQuotes46>Remove<doubleQuotes46>);<newline46mondego>        remove.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true, true));<newline46mondego><newline46mondego>        Group rightGroup = new Group(middle, SWT.NONE);<newline46mondego>        rightGroup.setText(<doubleQuotes46>Source Library(s)<doubleQuotes46>);<newline46mondego>        rightGroup.setLayout(new GridLayout(1, false));<newline46mondego>        rightGroup.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true));<newline46mondego><newline46mondego>        List rightList = new List(rightGroup, SWT.BORDER);<newline46mondego>        rightList.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true));<newline46mondego>        rightList.add(<doubleQuotes46>DUMMY<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    private void createBottomContent()<newline46mondego>    {<newline46mondego>        Composite bottom = new Composite(composite, SWT.NONE);<newline46mondego>        bottom.setLayout(new GridLayout(3, false));<newline46mondego>        bottom.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true, false));<newline46mondego><newline46mondego>        Label leftLabel = new Label(bottom, SWT.NONE);<newline46mondego>        leftLabel.setText(<doubleQuotes46>Library<doubleQuotes46>);<newline46mondego><newline46mondego>        Label rightLabel = new Label(bottom, SWT.NONE);<newline46mondego>        rightLabel.setText(<doubleQuotes46>Type<doubleQuotes46>);<newline46mondego><newline46mondego>        new Label(bottom, SWT.NONE);<newline46mondego><newline46mondego>        Text leftText = new Text(bottom, SWT.BORDER);<newline46mondego>        leftText.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true, true));<newline46mondego><newline46mondego>        Combo combo = new Combo(bottom, SWT.NONE);<newline46mondego>        combo.add(<doubleQuotes46>Object Library<doubleQuotes46>);<newline46mondego>        combo.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true, true));<newline46mondego><newline46mondego>        Button add = new Button(bottom, SWT.PUSH);<newline46mondego>        add.setText(<doubleQuotes46>Add<doubleQuotes46>);<newline46mondego>        add.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true, true));<newline46mondego>    }<newline46mondego><newline46mondego>    protected void configureShell(Shell newShell)<newline46mondego>    {<newline46mondego>        super.configureShell(newShell);<newline46mondego>        newShell.setText(<doubleQuotes46>Application Library List<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void createButtonsForButtonBar(Composite parent) {<newline46mondego>        super.createButtonsForButtonBar(parent);<newline46mondego><newline46mondego>        Button ok = getButton(IDialogConstants.OK_ID);<newline46mondego>        ok.setText(<doubleQuotes46>Apply Changes<doubleQuotes46>);<newline46mondego>        setButtonLayoutData(ok);<newline46mondego><newline46mondego>        Button cancel = getButton(IDialogConstants.CANCEL_ID);<newline46mondego>        cancel.setText(<doubleQuotes46>Cancel<doubleQuotes46>);<newline46mondego>        setButtonLayoutData(cancel);<newline46mondego>    }<newline46mondego><newline46mondego>    public void okPressed()<newline46mondego>    {<newline46mondego>        this.close();<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args)<newline46mondego>    {<newline46mondego>        new DummyDialog(new Shell()).open();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1244splitHere46","12743093splitHere46","TextView"
"1245splitHere46","12743093splitHere46","ListView"
"1246splitHere46","12743093splitHere46","dispatchDraw"
"1247splitHere46","12743093splitHere46","class CustomListView extends ListView {<newline46mondego><newline46mondego>    private Paint mPaint = new Paint();<newline46mondego>    private Paint mPaintBackground = new Paint();<newline46mondego><newline46mondego>    public CustomListView(Context context, AttributeSet attrs) {<newline46mondego>        super(context, attrs);<newline46mondego>        mPaint.setColor(Color.RED);<newline46mondego>        mPaintBackground.setColor(Color.CYAN);<newline46mondego>    }       <newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void dispatchDraw(Canvas canvas) {<newline46mondego>        super.dispatchDraw(canvas);<newline46mondego>        // ListView's height<newline46mondego>        final int currentHeight = getMeasuredHeight();<newline46mondego>        // this will let you know the status for the ListView, fitting/not<newline46mondego>        // fitting content<newline46mondego>        final int scrolledHeight = computeVerticalScrollRange();<newline46mondego>        if (scrolledHeight >= currentHeight || scrolledHeight == 0) {<newline46mondego>            // there is no need to draw something(for simplicity I assumed that<newline46mondego>            // if the adapter has no items i wouldn't draw something on the<newline46mondego>            // screen. If you still do want the lines then pick a decent value<newline46mondego>            // to simulate a row's height and draw them until you hit the<newline46mondego>            // ListView's getMeasuredHeight)<newline46mondego>            return;<newline46mondego>        } else {<newline46mondego>            // get the last drawn child<newline46mondego>            final View lastChild = getChildAt(getChildCount() - 1);<newline46mondego>            // values used to know where to start drawing lines<newline46mondego>            final int lastChildBottom = lastChild.getBottom();<newline46mondego>            // last child's height(use this to determine an appropriate value<newline46mondego>            // for the row height)<newline46mondego>            final int lastChildHeight = lastChild.getMeasuredHeight();<newline46mondego>            // determine the number of lines required to fill the ListView<newline46mondego>            final int nrOfLines = (currentHeight - lastChildBottom)<newline46mondego>                    / lastChildHeight;<newline46mondego>            // I used this to simulate a special color for the ListView's row background<newline46mondego>            Rect r = new Rect(0, lastChildBottom, getMeasuredWidth(),<newline46mondego>                    getMeasuredHeight());           <newline46mondego>            canvas.drawRect(r, mPaintBackground);<newline46mondego>            for (int i = 0; i < nrOfLines; i++) {<newline46mondego>                canvas.drawLine(0, lastChildBottom + (i + 1) * lastChildHeight,<newline46mondego>                        getMeasuredWidth(), lastChildBottom + (i + 1)<newline46mondego>                                * lastChildHeight, mPaint);<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"1248splitHere46","12743260splitHere46","public class DataEntryActivity extends Activity{<newline46mondego><newline46mondego>    private static String username;<newline46mondego>    private static String mail;<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void onCreate(Bundle b){<newline46mondego>         super.onCreate(b);<newline46mondego>         setContentView(R.layout.layout_data_entry);<newline46mondego>         EditText et1 = (EditText) findViewById(R.id.editTextUsername);<newline46mondego>         EditText et2 = (EditText) findViewById(R.id.editTextMail);<newline46mondego>         if (username != null)<newline46mondego>              et1.setText(username);<newline46mondego>         if (mail != null)<newline46mondego>              et2.setText(mail);<newline46mondego>         Button save = (Button) findViewById(R.id.saveButton);<newline46mondego>         save.setOnClickListener(new OnClickListener(){<newline46mondego><newline46mondego>              public void onClick(View v){<newline46mondego><newline46mondego>                   if (et1.getText().toString().length() > 0)<newline46mondego>                        username = et1.getText().toString();<newline46mondego>                   if (et2.getText().toString().length() > 0)<newline46mondego>                        mail = et2.getText().toString();<newline46mondego>                   Intent intent = new Intent(DataEntryActivity.this, YourOtherActivity.class);<newline46mondego>                   startActivity(intent);<newline46mondego>              }<newline46mondego><newline46mondego>         });<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>    public static String getUsername(){<newline46mondego>         return username;<newline46mondego>    }<newline46mondego><newline46mondego>    public static String getMail(){<newline46mondego>         return mail;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"1249splitHere46","12743283splitHere46","public abstract class Event { <newline46mondego><newline46mondego>   @DatabaseField(columnName=<doubleQuotes46>id<doubleQuotes46>, generatedId = true) <newline46mondego>   protected int _id; <newline46mondego><newline46mondego>   @DatabaseField(columnName=<doubleQuotes46>name<doubleQuotes46>) <newline46mondego>   protected String name; <newline46mondego><newline46mondego>   @DatabaseField(columnName=<doubleQuotes46>date<doubleQuotes46>) <newline46mondego>   protected Date date; <newline46mondego><newline46mondego>   @DatabaseField(columnName=<doubleQuotes46>type<doubleQuotes46>) <newline46mondego>   protected String type; <newline46mondego><newline46mondego>   public abstract void setName(String name); <newline46mondego>   public abstract void setDate(Date date); <newline46mondego>   public abstract void setType(String type); <newline46mondego>} <newline46mondego>"
"1250splitHere46","12743283splitHere46","@DatabaseTable(tableName=<doubleQuotes46>atividade<doubleQuotes46>) <newline46mondego>public class Atividade extends Event { <newline46mondego><newline46mondego>      @DatabaseField(columnName=<doubleQuotes46>ala<doubleQuotes46>) <newline46mondego>      protected String ala; <newline46mondego><newline46mondego>      public String getAla() { <newline46mondego>              return ala; <newline46mondego>      } <newline46mondego><newline46mondego>      public void setAla(String ala) { <newline46mondego>              this.ala = ala; <newline46mondego>      } <newline46mondego><newline46mondego>      public Atividade(String name, Date date, String type, String ala) { <newline46mondego>              this.setName(name); <newline46mondego>              this.setDate(date); <newline46mondego>              this.setTipo(type); <newline46mondego>              this.setAla(ala); <newline46mondego>      } <newline46mondego><newline46mondego>      Atividade(){ <newline46mondego>      } <newline46mondego><newline46mondego>      @Override <newline46mondego>      public void setName(String name) { <newline46mondego>              this.name = name; <newline46mondego>      } <newline46mondego><newline46mondego>      @Override <newline46mondego>      public void setDate(Date date) { <newline46mondego>              this.date = date; <newline46mondego>      } <newline46mondego><newline46mondego>      @Override <newline46mondego>      public void setType(String type) { <newline46mondego>              this.type = type; <newline46mondego>      } <newline46mondego>}<newline46mondego>"
"1251splitHere46","12743414splitHere46","while (searchNodes.peek() != null) {<newline46mondego>    String next = searchNodes.remove();<newline46mondego>    boolean isNewNode = reachableNodes.add(next);<newline46mondego>    if (isNewNode && graph.containsKey(next)) {<newline46mondego>        for (String node : graph.get(next)) {<newline46mondego>            searchNodes.add(node);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1252splitHere46","12743434splitHere46","HashMap"
"1253splitHere46","12743434splitHere46","HashMap"
"1254splitHere46","12743434splitHere46","productItems"
"1255splitHere46","12743434splitHere46","HashMap"
"1256splitHere46","12743434splitHere46","HashMap"
"1257splitHere46","12743434splitHere46","public ArrayList<HashMap<String,String>> getData(AsyncTask<Void, Void, Void> asynctask, String query) throws URISyntaxException<newline46mondego>{<newline46mondego>    api_url += query;<newline46mondego>    //  Log.v(<doubleQuotes46>API url<doubleQuotes46>,api_url);<newline46mondego>    XMLParser parser = new XMLParser();<newline46mondego>    String xml = parser.getXmlFromUrl(api_url); // getting XML<newline46mondego>    Document doc = parser.getDomElement(xml); // getting DOM element<newline46mondego>    NodeList nl = doc.getElementsByTagName(KEY_PRODUCT);<newline46mondego>    ArrayList<HashMap<String, String>> productItems = new ArrayList<HashMap<String, String>>();<newline46mondego>    for (int i = 0; i < 10; i++) {<newline46mondego>        Element e = (Element) nl.item(i);           <newline46mondego>        // adding each child node to HashMap key => value<newline46mondego>        HashMap<String, String> map = new HashMap<String, String>();<newline46mondego>        map.put(KEY_PROD_NAME, e.getAttribute(KEY_PROD_NAME));<newline46mondego>        map.put(KEY_ID, e.getAttribute(KEY_MER_ID));<newline46mondego>        map.put(KEY_PRICE, e.getAttribute(KEY_MER_PRICE));      <newline46mondego>        Log.v(<doubleQuotes46>fsd:<doubleQuotes46>,e.getAttribute(KEY_PROD_NAME));<newline46mondego>        // adding HashList to ArrayList<newline46mondego>        productItems.add(map);      <newline46mondego>    }       <newline46mondego>    return productItems;    <newline46mondego>}<newline46mondego>"
"1258splitHere46","12743453splitHere46","public class TestLayout02 {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        new TestLayout02();<newline46mondego>    }<newline46mondego><newline46mondego>    public TestLayout02() {<newline46mondego>        javax.swing.SwingUtilities.invokeLater(new Runnable() {<newline46mondego>            public void run() {<newline46mondego>                /* Use an appropriate Look and Feel */<newline46mondego>                try {<newline46mondego>                    //UIManager.setLookAndFeel(<doubleQuotes46>com.sun.java.swing.plaf.windows.WindowsLookAndFeel<doubleQuotes46>);<newline46mondego>                    UIManager.setLookAndFeel(<doubleQuotes46>javax.swing.plaf.metal.MetalLookAndFeel<doubleQuotes46>);<newline46mondego>                } catch (UnsupportedLookAndFeelException ex) {<newline46mondego>                    ex.printStackTrace();<newline46mondego>                } catch (IllegalAccessException ex) {<newline46mondego>                    ex.printStackTrace();<newline46mondego>                } catch (InstantiationException ex) {<newline46mondego>                    ex.printStackTrace();<newline46mondego>                } catch (ClassNotFoundException ex) {<newline46mondego>                    ex.printStackTrace();<newline46mondego>                }<newline46mondego>                /* Turn off metal's use of bold fonts */<newline46mondego>                UIManager.put(<doubleQuotes46>swing.boldMetal<doubleQuotes46>, Boolean.FALSE);<newline46mondego><newline46mondego>                //Schedule a job for the event dispatch thread:<newline46mondego>                //creating and showing this application's GUI.<newline46mondego>                createAndShowGUI();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>    public class CardLayoutDemo implements ItemListener {<newline46mondego><newline46mondego>        JPanel cards; //a panel that uses CardLayout<newline46mondego>        final static String BUTTONPANEL = <doubleQuotes46>Card with JButtons<doubleQuotes46>;<newline46mondego>        final static String TEXTPANEL = <doubleQuotes46>Card with JTextField<doubleQuotes46>;<newline46mondego><newline46mondego>        public void addComponentToPane(Container pane) {<newline46mondego>            //Put the JComboBox in a JPanel to get a nicer look.<newline46mondego>            JPanel comboBoxPane = new JPanel(); //use FlowLayout<newline46mondego>            String comboBoxItems[] = {BUTTONPANEL, TEXTPANEL};<newline46mondego>            JComboBox cb = new JComboBox(comboBoxItems);<newline46mondego>            cb.setEditable(false);<newline46mondego>            cb.addItemListener(this);<newline46mondego>            comboBoxPane.add(cb);<newline46mondego><newline46mondego>            //Create the <doubleQuotes46>cards<doubleQuotes46>.<newline46mondego>            NewUser newUser = new NewUser();<newline46mondego><newline46mondego>            JPanel card1 = new JPanel();<newline46mondego>            card1.add(new JButton(<doubleQuotes46>Button 1<doubleQuotes46>));<newline46mondego>            card1.add(new JButton(<doubleQuotes46>Button 2<doubleQuotes46>));<newline46mondego>            card1.add(new JButton(<doubleQuotes46>Button 3<doubleQuotes46>));<newline46mondego><newline46mondego>            JPanel card2 = new NewUser();<newline46mondego><newline46mondego><newline46mondego>            //Create the panel that contains the <doubleQuotes46>cards<doubleQuotes46>.<newline46mondego>            cards = new JPanel(new CardLayout());<newline46mondego>            cards.add(card1, BUTTONPANEL);<newline46mondego>            cards.add(card2, TEXTPANEL);<newline46mondego><newline46mondego>            pane.add(comboBoxPane, BorderLayout.PAGE_START);<newline46mondego>            pane.add(cards, BorderLayout.CENTER);<newline46mondego>        }<newline46mondego><newline46mondego>        public void itemStateChanged(ItemEvent evt) {<newline46mondego>            CardLayout cl = (CardLayout) (cards.getLayout());<newline46mondego>            cl.show(cards, (String) evt.getItem());<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * Create the GUI and show it. For thread safety, this method should be<newline46mondego>     * invoked from the event dispatch thread.<newline46mondego>     */<newline46mondego>    protected void createAndShowGUI() {<newline46mondego>        //Create and set up the window.<newline46mondego>        JFrame frame = new JFrame(<doubleQuotes46>CardLayoutDemo<doubleQuotes46>);<newline46mondego>        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego><newline46mondego>        //Create and set up the content pane.<newline46mondego>        CardLayoutDemo demo = new CardLayoutDemo();<newline46mondego>        demo.addComponentToPane(frame.getContentPane());<newline46mondego><newline46mondego>        //Display the window.<newline46mondego>        frame.pack();<newline46mondego>        frame.setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>    public class NewUser extends JPanel {<newline46mondego><newline46mondego>        private static final long serialVersionUID = 1L;<newline46mondego>        private JLabel lblUsername, lblPassword, lblConfirmMsg;<newline46mondego>        private JPasswordField txtPassword, txtCPassword;<newline46mondego>        private JTextField txtUsername, txtName;<newline46mondego>        private JButton btnSave, btnCancel;<newline46mondego>        JPanel panelNewUser;<newline46mondego>        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();<newline46mondego><newline46mondego>        public NewUser() {<newline46mondego><newline46mondego>//            this.setSize(350, 270);<newline46mondego>//            this.setLocation((screen.width - 500) / 2, ((screen.height - 350) / 2));<newline46mondego>//            this.setLayout(null);<newline46mondego><newline46mondego>            setLayout(new GridBagLayout());<newline46mondego><newline46mondego>            panelNewUser = this;<newline46mondego>            lblUsername = new JLabel(<doubleQuotes46>Username<doubleQuotes46>);<newline46mondego>            lblPassword = new JLabel(<doubleQuotes46>Password<doubleQuotes46>);<newline46mondego>            lblConfirmMsg = new JLabel(<doubleQuotes46>Re-enter Password<doubleQuotes46>);<newline46mondego>            txtName = new JTextField();<newline46mondego><newline46mondego>            txtUsername = new JTextField(12);<newline46mondego>            txtPassword = new JPasswordField(12);<newline46mondego>            txtCPassword = new JPasswordField(12);<newline46mondego>            btnSave = new JButton(<doubleQuotes46>Save<doubleQuotes46>);<newline46mondego>            btnCancel = new JButton(<doubleQuotes46>Cancel<doubleQuotes46>);<newline46mondego><newline46mondego>            GridBagConstraints gbc = new GridBagConstraints();<newline46mondego>            gbc.gridx = 0;<newline46mondego>            gbc.gridy = 0;<newline46mondego>            gbc.insets = new Insets(2, 2, 2, 2);<newline46mondego>            gbc.anchor = GridBagConstraints.WEST;<newline46mondego><newline46mondego>//            lblUsername.setBounds(30, 30, 100, 25);<newline46mondego>            this.add(lblUsername, gbc);<newline46mondego>//            txtUsername.setBounds(150, 30, 150, 25);<newline46mondego>            gbc.gridx++;<newline46mondego>            this.add(txtUsername, gbc);<newline46mondego>//            lblPassword.setBounds(30, 70, 100, 25);<newline46mondego>            gbc.gridx = 0;<newline46mondego>            gbc.gridy++;<newline46mondego>            this.add(lblPassword, gbc);<newline46mondego>//            txtPassword.setBounds(150, 70, 150, 25);<newline46mondego>            gbc.gridx++;<newline46mondego>            this.add(txtPassword, gbc);<newline46mondego>//            lblConfirmMsg.setBounds(30, 110, 110, 25);<newline46mondego>            gbc.gridx = 0;<newline46mondego>            gbc.gridy++;<newline46mondego>            this.add(lblConfirmMsg, gbc);<newline46mondego>//            txtCPassword.setBounds(150, 110, 150, 25);<newline46mondego>            gbc.gridx++;<newline46mondego>            this.add(txtCPassword, gbc);<newline46mondego>//            btnSave.setBounds(60, 155, 100, 25);<newline46mondego>            gbc.gridx = 0;<newline46mondego>            gbc.gridy++;<newline46mondego>            gbc.anchor = GridBagConstraints.CENTER;<newline46mondego>            this.add(btnSave, gbc);<newline46mondego>//            btnCancel.setBounds(180, 155, 100, 25);<newline46mondego>            gbc.gridx++;<newline46mondego>            this.add(btnCancel, gbc);<newline46mondego><newline46mondego>            // This is a bad idea, use a DocumentFilter<newline46mondego>            txtName.addKeyListener(new KeyAdapter() {<newline46mondego>                public void keyTyped(KeyEvent e) {<newline46mondego>                    char c = e.getKeyChar();<newline46mondego>                    if (!(Character.isLetter(c) || (c == KeyEvent.VK_BACK_SPACE)<newline46mondego>                                    || (c == KeyEvent.VK_SPACE) || (c == KeyEvent.VK_DELETE))) {<newline46mondego>                        getToolkit().beep();<newline46mondego>                        JOptionPane.showMessageDialog(null, <doubleQuotes46>Invalid Character<doubleQuotes46>,<newline46mondego>                                        <doubleQuotes46>ERROR<doubleQuotes46>, JOptionPane.ERROR_MESSAGE);<newline46mondego>                        e.consume();<newline46mondego>                    }<newline46mondego>                }<newline46mondego>            });<newline46mondego>            // This is a bad idea, use a DocumentFilter<newline46mondego>            txtUsername.addKeyListener(new KeyAdapter() {<newline46mondego>                public void keyTyped(KeyEvent e) {<newline46mondego>                    char c = e.getKeyChar();<newline46mondego>                    if (!(Character.isLetter(c) || (c == KeyEvent.VK_BACK_SPACE)<newline46mondego>                                    || (Character.isDigit(c)) || (c == KeyEvent.VK_DELETE))) {<newline46mondego>                        getToolkit().beep();<newline46mondego>                        JOptionPane.showMessageDialog(null, <doubleQuotes46>Invalid Character<doubleQuotes46>,<newline46mondego>                                        <doubleQuotes46>ERROR<doubleQuotes46>, JOptionPane.ERROR_MESSAGE);<newline46mondego>                        e.consume();<newline46mondego>                    }<newline46mondego>                }<newline46mondego>            });<newline46mondego>            btnCancel.addActionListener(new java.awt.event.ActionListener() {<newline46mondego>                public void actionPerformed(ActionEvent e) {<newline46mondego>                    resetField();<newline46mondego>                    panelNewUser.setVisible(false);<newline46mondego>                    System.out.println(<doubleQuotes46>hello<doubleQuotes46>);<newline46mondego>                }<newline46mondego>            });<newline46mondego>            btnSave.addActionListener(new java.awt.event.ActionListener() {<newline46mondego>                public void actionPerformed(ActionEvent e) {<newline46mondego><newline46mondego>                    //DatabaseHelper databaseHelper = new DatabaseHelper();<newline46mondego>                    if (txtUsername.getText() == null<newline46mondego>                                    || txtUsername.getText().equals(<doubleQuotes46><doubleQuotes46>)) {<newline46mondego>                        JOptionPane.showMessageDialog(null, <doubleQuotes46>Enter Username<doubleQuotes46>,<newline46mondego>                                        <doubleQuotes46>Missing fields<doubleQuotes46>, JOptionPane.DEFAULT_OPTION);<newline46mondego>                        txtUsername.requestFocus();<newline46mondego>                        return;<newline46mondego>                    }<newline46mondego>                    if (txtPassword.getPassword() == null<newline46mondego>                                    || txtPassword.getPassword().equals(<doubleQuotes46><doubleQuotes46>)) {<newline46mondego>                        JOptionPane.showMessageDialog(null, <doubleQuotes46>Enter Password<doubleQuotes46>,<newline46mondego>                                        <doubleQuotes46>Missing fields<doubleQuotes46>, JOptionPane.DEFAULT_OPTION);<newline46mondego>                        txtPassword.requestFocus();<newline46mondego>                        return;<newline46mondego>                    }<newline46mondego>                    if (txtCPassword.getPassword() == null<newline46mondego>                                    || txtCPassword.getPassword().equals(<doubleQuotes46><doubleQuotes46>)) {<newline46mondego>                        JOptionPane.showMessageDialog(null,<newline46mondego>                                        <doubleQuotes46>Confirm your password<doubleQuotes46>, <doubleQuotes46>Missing fields<doubleQuotes46>,<newline46mondego>                                        JOptionPane.DEFAULT_OPTION);<newline46mondego>                        txtCPassword.requestFocus();<newline46mondego>                        return;<newline46mondego>                    }<newline46mondego>                    if (!txtPassword.getText()<newline46mondego>                                    .equals(txtPassword.getText())) {<newline46mondego>                        JOptionPane.showMessageDialog(null,<newline46mondego>                                        <doubleQuotes46>Passwords do not match.<doubleQuotes46>, <doubleQuotes46>ERROR<doubleQuotes46>,<newline46mondego>                                        JOptionPane.DEFAULT_OPTION);<newline46mondego>                        txtCPassword.requestFocus();<newline46mondego>                        return;<newline46mondego>                    }<newline46mondego><newline46mondego><newline46mondego>                    if (true) {<newline46mondego>                        JOptionPane.showMessageDialog(null,<newline46mondego>                                        <doubleQuotes46>A new user is created<doubleQuotes46>, <doubleQuotes46>SUCCESS<doubleQuotes46>,<newline46mondego>                                        JOptionPane.DEFAULT_OPTION);<newline46mondego>                        resetField();<newline46mondego>                    }<newline46mondego><newline46mondego><newline46mondego>                }<newline46mondego>            });<newline46mondego><newline46mondego>        }// constructor closed<newline46mondego><newline46mondego>//action listener<newline46mondego>        public void resetField() {<newline46mondego><newline46mondego>            txtUsername.setText(<doubleQuotes46><doubleQuotes46>);<newline46mondego>            txtCPassword.setText(<doubleQuotes46><doubleQuotes46>);<newline46mondego>            txtPassword.setText(<doubleQuotes46><doubleQuotes46>);<newline46mondego>        }<newline46mondego>    }// class closed<newline46mondego>}<newline46mondego>"
"1259splitHere46","12743453splitHere46","ComponentListener"
"1260splitHere46","12743453splitHere46","componentResized"
"1261splitHere46","12743528splitHere46","set_time_limit( 0 );<newline46mondego>// Set the ip and port we will listen on<newline46mondego>$address = '127.0.0.1';<newline46mondego>$port = 6789;<newline46mondego><newline46mondego>// Create a TCP Stream socket<newline46mondego>$sock = socket_create( AF_INET, SOCK_STREAM, 0 ); // 0 for  SQL_TCP<newline46mondego>// Bind the socket to an address/port<newline46mondego>socket_bind( $sock, 0, $port ) or die( 'Could not bind to address' );  //0 for localhost<newline46mondego>// Start listening for connections<newline46mondego>socket_listen( $sock );<newline46mondego><newline46mondego>//loop and listen<newline46mondego>while (true) {<newline46mondego>  /* Accept incoming  requests and handle them as child processes */<newline46mondego>  $client = socket_accept( $sock );<newline46mondego>  // Read the input  from the client – 1024000 bytes<newline46mondego>  $input = socket_read( $client, 1024000 );<newline46mondego><newline46mondego>  // from here you need to do your database stuff<newline46mondego>  // and handle the response <newline46mondego><newline46mondego>   // Display output  back to client<newline46mondego>  socket_write( $client, $response );<newline46mondego>  socket_close( $client );<newline46mondego>}<newline46mondego>// Close the master sockets<newline46mondego>socket_close( $sock );<newline46mondego>"
"1262splitHere46","12743645splitHere46","stateChanged()"
"1263splitHere46","12743645splitHere46","updateLabel()"
"1264splitHere46","12743645splitHere46","stateChanged()"
"1265splitHere46","12743645splitHere46","JSlider.fireStateChanged()"
"1266splitHere46","12743645splitHere46","updateLabel()"
"1267splitHere46","12743795splitHere46","<doubleQuotes46>post_content<doubleQuotes46>: []<newline46mondego>"
"1268splitHere46","12743795splitHere46","<doubleQuotes46>post_content<doubleQuotes46>: {<newline46mondego>    <doubleQuotes46>text<doubleQuotes46>: <doubleQuotes46><doubleQuotes46>,<newline46mondego>    <doubleQuotes46>images<doubleQuotes46>: [<newline46mondego>        <doubleQuotes46>https://fbcdn-sphotos-a-a.akamaihd.net/hphotos-ak-ash4/227408_475848819113499_663318592_n.jpg<doubleQuotes46><newline46mondego>    ]<newline46mondego>}<newline46mondego>"
"1269splitHere46","12743983splitHere46","RandomAccessFile file = new RandomAccessFile(<doubleQuotes46>D:\\test.txt<doubleQuotes46>, <doubleQuotes46>rw<doubleQuotes46>);<newline46mondego>int totalLines = (int)file.length();<newline46mondego>file.seek(100);<newline46mondego>long pointer = file.getFilePointer();<newline46mondego><newline46mondego><newline46mondego>for(int pt = 100; ct < totalLines; ct++){<newline46mondego>  byte b = file.readByte(); //read byte from the file<newline46mondego>  System.out.print((char)b); //convert byte into char<newline46mondego>}<newline46mondego><newline46mondego>file.close();<newline46mondego>"
"1270splitHere46","12744010splitHere46","/"
"1271splitHere46","12744010splitHere46","String[] determineUrlsForHandler(String beanName)"
"1272splitHere46","12744010splitHere46","DefaultAnnotationHandlerMapping"
"1273splitHere46","12744010splitHere46","String[] methodLevelPatterns = determineUrlsForHandlerMethods(handlerType, true);<newline46mondego>for (String typeLevelPattern : typeLevelPatterns) {<newline46mondego>    if (!typeLevelPattern.startsWith(<doubleQuotes46>/<doubleQuotes46>)) {<newline46mondego>            typeLevelPattern = <doubleQuotes46>/<doubleQuotes46> + typeLevelPattern;<newline46mondego>    }<newline46mondego>"
"1274splitHere46","12744010splitHere46","String[] determineUrlsForHandler(Class<?> handlerType, final boolean hasTypeLevelMapping))"
"1275splitHere46","12744010splitHere46","DefaultAnnotationHandlerMapping"
"1276splitHere46","12744010splitHere46","String[] mappedPatterns = mapping.value();<newline46mondego>if (mappedPatterns.length > 0) {<newline46mondego>for (String mappedPattern : mappedPatterns) {<newline46mondego>    if (!hasTypeLevelMapping && !mappedPattern.startsWith(<doubleQuotes46>/<doubleQuotes46>)) {<newline46mondego>        mappedPattern = <doubleQuotes46>/<doubleQuotes46> + mappedPattern;<newline46mondego>    }   <newline46mondego>"
"1277splitHere46","12744038splitHere46","BundleException"
"1278splitHere46","12744038splitHere46","BundleException: The bundle <doubleQuotes46>cross-main_1.2.12.SNAPSHOT [30]<doubleQuotes46> could not be resolved. Reason: Missing Constraint: Import-Package: com.db4o; version=<doubleQuotes46>[8.0.0,9.0.0)<newline46mondego>"
"1279splitHere46","12744038splitHere46","<plugin><newline46mondego>    <groupId>org.apache.felix</groupId><newline46mondego>    <artifactId>maven-bundle-plugin</artifactId><newline46mondego>    <version>2.3.7</version><newline46mondego>    <extensions>true</extensions><newline46mondego>    <configuration><newline46mondego>        <archive><newline46mondego>            <manifestEntries><newline46mondego>                <Build-Change-Set>${changeSet}</Build-Change-Set><newline46mondego>                <Build-Change-Set-Date>${changeSetDate}</Build-Change-Set-Date><newline46mondego>                <Build-Location>${basedir}</Build-Location><newline46mondego>                <Build-Machine>${env.COMPUTERNAME}</Build-Machine><newline46mondego>                <Build-Date>${maven.build.timestamp}</Build-Date><newline46mondego>            </manifestEntries><newline46mondego>        </archive><newline46mondego>        <instructions><newline46mondego>            <Export-Package>my.bundle.main.package.*,<newline46mondego>            </Export-Package><newline46mondego>            <Import-Package><newline46mondego>                org.springframework.context.weaving,<newline46mondego>                org.springframework.aop,<newline46mondego>                org.springframework.aop.framework,<newline46mondego>                org.aopalliance.aop,<newline46mondego>                org.apache.cxf.bus.spring,<newline46mondego>                com.mycompany.mypackage.that.i.am.using.classess.from,<newline46mondego>                *<newline46mondego>            </Import-Package><newline46mondego>        </instructions><newline46mondego>    </configuration><newline46mondego></plugin><newline46mondego>"
"1280splitHere46","12744038splitHere46","<instructions><newline46mondego>    <Export-Package>your.bundle.main.package.*,<newline46mondego>    </Export-Package><newline46mondego>    <Import-Package>com.db4o,<newline46mondego>        *<newline46mondego>    </Import-Package><newline46mondego></instructions><newline46mondego>"
"1281splitHere46","12744038splitHere46","Import-Package"
"1282splitHere46","12744085splitHere46","private final KStemmer stemmer = new KStemmer();<newline46mondego>// char[] term = ...<newline46mondego>stemmer.stem(term, len);<newline46mondego>"
"1283splitHere46","12744214splitHere46","public class AppData extends Application {<newline46mondego><newline46mondego>    public static AppData appData;<newline46mondego><newline46mondego>    public int currentUserId; // etc.<newline46mondego><newline46mondego>    //Const.<newline46mondego>    public AppData() {<newline46mondego>        appData = this;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void onCreate() {<newline46mondego>        super.onCreate();<newline46mondego>        loginPreferences = getSharedPreferences(<newline46mondego>            SPF_NAME, 0);<newline46mondego><newline46mondego>        pathToSDCard = Environment.getExternalStorageDirectory().getAbsolutePath();<newline46mondego>        System.out.println(<doubleQuotes46>Path : <doubleQuotes46> + pathToSDCard);<newline46mondego>       //etc.<newline46mondego>    }<newline46mondego><newline46mondego> //    MOST IMP  FOR GETTIN SINGELTON INSTANCE     <<<---<<<---<<<---<newline46mondego>    public static AppData getAppData() {<newline46mondego>        return appData;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1284splitHere46","12744214splitHere46","class ABC extends Activity {<newline46mondego>    AppData appData;<newline46mondego>    @Override<newline46mondego>    public void onCreate(Bundle savedInstanceState) {<newline46mondego>        super.onCreate(savedInstanceState);<newline46mondego>        setContentView(R.layout.xyz);<newline46mondego><newline46mondego>        appData = AppData.getAppData();<newline46mondego>        ...........<newline46mondego>        ...........<newline46mondego><newline46mondego>        appData.VARIABLE_NAME...<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1285splitHere46","12744214splitHere46","...<newline46mondego>    ...<newline46mondego><application             //   In Application Tag<newline46mondego>        android:name=<doubleQuotes46>PACKAGE_NAME.AppData<doubleQuotes46>  //  <<  Add here class name in which you have extended Application<newline46mondego>        android:icon=<doubleQuotes46>@drawable/ic_launcher<doubleQuotes46><newline46mondego>    ...<newline46mondego>    ...<newline46mondego>"
"1286splitHere46","12744274splitHere46","public void initialize(URL url, ResourceBundle rb)"
"1287splitHere46","12744274splitHere46","Parent root = FXMLLoader.load(getClass().getResource(<doubleQuotes46>/ContextMenus/Visibility.fxml<doubleQuotes46>));<newline46mondego>"
"1288splitHere46","12744274splitHere46","FXMLLoader fxmlLoader = new FXMLLoader(getClass().getResource(<doubleQuotes46>/ContextMenus/Visibility.fxml<doubleQuotes46>));<newline46mondego>Parent root = fxmlLoader.load();<newline46mondego>controller = (MyController) fxmlLoader.getController();<newline46mondego>final AttributedWrapper aw = new AttributedWrapper();<newline46mondego>aw.getChildren().add(root);<newline46mondego>controller.doMyInit();<newline46mondego>"
"1289splitHere46","12744274splitHere46","anchorPane.parentProperty()"
"1290splitHere46","12744274splitHere46","null"
"1291splitHere46","12744274splitHere46","root.parentProperty().addListener(new ChangeListener<Parent>() {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void changed(ObservableValue<? extends Parent> ov, Parent oldP, Parent newP) {<newline46mondego>        if (newP != null && oldP == null) {<newline46mondego>            System.out.println(<doubleQuotes46>my parent is <doubleQuotes46> + newP);<newline46mondego>        }<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"1292splitHere46","12744333splitHere46","sum = sum + one; // or sum += one;<newline46mondego>"
"1293splitHere46","12744333splitHere46","(sum + one)"
"1294splitHere46","12744358splitHere46","MyController"
"1295splitHere46","12744358splitHere46","Runnable"
"1296splitHere46","12744358splitHere46","@In"
"1297splitHere46","12744358splitHere46","@Scope(ScopeType.CONVERSATION)<newline46mondego>@Name(<doubleQuotes46>myController<doubleQuotes46>)<newline46mondego>public class MyController {<newline46mondego><newline46mondego>    @In(create = true)<newline46mondego>    private transient Dependency1 d1;<newline46mondego><newline46mondego>    public void importantMethod() {<newline46mondego>        new Thread(new Runnable() {<newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                LifeCycle.beginCall(); // Start the Seam lifecycle<newline46mondego>                Dependency1 d1 = (Dependency1) Component.getInstance(<doubleQuotes46>dependency1<doubleQuotes46>);<newline46mondego>                d1.doExpensiveStuff();<newline46mondego>                LifeCycle.endCall();   // Dispose the lifecycle<newline46mondego>            }<newline46mondego>        }).start();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1298splitHere46","12744358splitHere46","@Asynchronous"
"1299splitHere46","12744358splitHere46","@Name(<doubleQuotes46>myBackgroundWork<doubleQuotes46>)<newline46mondego>public class MyBackgroundWork {<newline46mondego>    @In private transient Dependency1 d1;<newline46mondego><newline46mondego>    @Asynchronous<newline46mondego>    public void runInBackground() {<newline46mondego>         d1.doExpensiveStuff();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1300splitHere46","12744358splitHere46","MyController"
"1301splitHere46","12744358splitHere46","@Scope(ScopeType.CONVERSATION)<newline46mondego>@Name(<doubleQuotes46>myController<doubleQuotes46>)<newline46mondego>public class MyController {<newline46mondego>    @In(create = true)<newline46mondego>    private MyBackgroundWork myBackgroundWork;<newline46mondego><newline46mondego>    public void importantMethod() {<newline46mondego>        // Execution will return immediately and thread will start<newline46mondego>        myBackgroundWork.runInBackground();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1302splitHere46","12744406splitHere46","runOnUiThread(runnable_instance)"
"1303splitHere46","12744471splitHere46","HashMap"
"1304splitHere46","12744471splitHere46","class Edge {<newline46mondego>// represents edge with destination node and it's weight<newline46mondego>        private final Node node;<newline46mondego>        private final int weight;<newline46mondego><newline46mondego>        Edge(Node node, int weight) {<newline46mondego>            this.node = node;<newline46mondego>            this.weight = weight;<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>// represents map which holds all outgoing edges keyed by source nodes.<newline46mondego>    Map<Node, Set<Edges>> edgesByOutgoingNodes = new HashMap<Node, Set<Edges>>();<newline46mondego>"
"1305splitHere46","12744657splitHere46","for (i = 0; i < array.length; i++) {<newline46mondego>            for (j = 0; j < array[i].length; j++) {<newline46mondego>                for (x = Math.max(0, i - 1); x <= Math.min(i + 1, array.length); x++) {<newline46mondego>                    for (y = Math.max(0, j - 1); y <= Math.min(j + 1,<newline46mondego>                            array[i].length); y++) {<newline46mondego>                        if (x >= 0 && y >= 0 && x < array.length<newline46mondego>                                && y < array[i].length) {<newline46mondego>                            if(x!=i || y!=j){<newline46mondego>                            System.out.print(array[x][y] + <doubleQuotes46> <doubleQuotes46>);<newline46mondego>                            }<newline46mondego>                        }<newline46mondego>                    }<newline46mondego>                }<newline46mondego>                System.out.println(<doubleQuotes46>\n<doubleQuotes46>);<newline46mondego>            }<newline46mondego>        }<newline46mondego>"
"1306splitHere46","12744696splitHere46","EventDispatchThread"
"1307splitHere46","12744696splitHere46","publish()"
"1308splitHere46","12744696splitHere46","process()"
"1309splitHere46","12744775splitHere46","initialize()"
"1310splitHere46","12744775splitHere46","@Override<newline46mondego>public void initialize(URL url, ResourceBundle rb) {<newline46mondego>    Platform.runLater(new Runnable() {<newline46mondego>        @Override<newline46mondego>        public void run() {<newline46mondego>            tf.requestFocus();<newline46mondego>        }<newline46mondego>    });<newline46mondego>}<newline46mondego>"
"1311splitHere46","12744837splitHere46","<LinearLayout xmlns:android=<doubleQuotes46>http://schemas.android.com/apk/res/android<doubleQuotes46><newline46mondego>android:layout_width=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>android:layout_margin=<doubleQuotes46>10dp<doubleQuotes46><newline46mondego>android:background=<doubleQuotes46>@drawable/round_shape<doubleQuotes46><newline46mondego>android:orientation=<doubleQuotes46>horizontal<doubleQuotes46><newline46mondego>android:padding=<doubleQuotes46>10dp<doubleQuotes46> ><newline46mondego><newline46mondego><TextView<newline46mondego>android:id=<doubleQuotes46>@+id/id<doubleQuotes46><newline46mondego>android:layout_width=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego><newline46mondego> /><newline46mondego><newline46mondego><newline46mondego><TextView<newline46mondego>android:id=<doubleQuotes46>@+id/Name<doubleQuotes46><newline46mondego>android:layout_width=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>android:paddingTop=<doubleQuotes46>6dip<doubleQuotes46><newline46mondego>android:paddingLeft=<doubleQuotes46>6dip<doubleQuotes46><newline46mondego>android:textSize=<doubleQuotes46>17dip<doubleQuotes46><newline46mondego>android:textStyle=<doubleQuotes46>bold<doubleQuotes46> /> <newline46mondego><newline46mondego></LinearLayout><newline46mondego>"
"1312splitHere46","12744837splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego><shape xmlns:android=<doubleQuotes46>http://schemas.android.com/apk/res/android<doubleQuotes46><newline46mondego>android:shape=<doubleQuotes46>rectangle<doubleQuotes46> ><newline46mondego><newline46mondego><gradient<newline46mondego>    android:angle=<doubleQuotes46>270<doubleQuotes46><newline46mondego>    android:endColor=<doubleQuotes46>yourstartcolor<doubleQuotes46><newline46mondego>    android:startColor=<doubleQuotes46>yourendcolor<doubleQuotes46>/><newline46mondego><newline46mondego><corners<newline46mondego>    android:bottomLeftRadius=<doubleQuotes46>27dp<doubleQuotes46><newline46mondego>    android:bottomRightRadius=<doubleQuotes46>27dp<doubleQuotes46><newline46mondego>    android:topLeftRadius=<doubleQuotes46>27dp<doubleQuotes46><newline46mondego>    android:topRightRadius=<doubleQuotes46>27dp<doubleQuotes46> /><newline46mondego><newline46mondego></shape><newline46mondego>"
"1313splitHere46","12744847splitHere46","PropertyChangeListener"
"1314splitHere46","12744847splitHere46","SwingWorker"
"1315splitHere46","12744847splitHere46","SwingWorker"
"1316splitHere46","12744847splitHere46","get()"
"1317splitHere46","12744847splitHere46","SwingWorker"
"1318splitHere46","12744847splitHere46","done()"
"1319splitHere46","12744847splitHere46","SwingWorker#cancel()"
"1320splitHere46","12744896splitHere46","jaybird-2.2.1.jar"
"1321splitHere46","12744896splitHere46","connector-api-1.5.jar"
"1322splitHere46","12744896splitHere46","jaybird-full-2.2.1.jar"
"1323splitHere46","12744976splitHere46","CLOSE_WAIT"
"1324splitHere46","12745238splitHere46","setString()"
"1325splitHere46","12745238splitHere46","userID"
"1326splitHere46","12745238splitHere46","SQL injection"
"1327splitHere46","12745238splitHere46","statement =con.prepareStatement(<doubleQuotes46>SELECT * from employee WHERE  userID = ?<doubleQuotes46>);<newline46mondego>statement.setString(1, userID);<newline46mondego>"
"1328splitHere46","12745238splitHere46","PreparedStatement"
"1329splitHere46","12745320splitHere46","String.format(<doubleQuotes46>%03d<doubleQuotes46>, yournumber);<newline46mondego>"
"1330splitHere46","12745335splitHere46","String url = <doubleQuotes46>http://domain.com/page?parameter1=value1&parameter2=value2<doubleQuotes46>;<newline46mondego>List<NameValuePair> parameters = URLEncodedUtils.parse(new URI(url));<newline46mondego>for (NameValuePair p : parameters) {<newline46mondego>    System.out.println(p.getName());<newline46mondego>    System.out.println(p.getValue());<newline46mondego>}<newline46mondego>"
"1331splitHere46","12745353splitHere46","public static void main(String[] args) {<newline46mondego><newline46mondego>    String WILD_CARD = <doubleQuotes46><doubleQuotes46>;<newline46mondego>     List<File> fileList = new LinkedList<File>();<newline46mondego>       File folder = new File(<doubleQuotes46>d:\\<doubleQuotes46>);<newline46mondego>       File[] listOfFiles = folder.listFiles();<newline46mondego>        if(WILD_CARD!=null) {  <newline46mondego>            Pattern wildCardPattern = Pattern.compile(<doubleQuotes46>.*<doubleQuotes46>+WILD_CARD+<doubleQuotes46>(.*)?.mpp<doubleQuotes46>,Pattern.CASE_INSENSITIVE);<newline46mondego>            for(File file: listOfFiles) {<newline46mondego>                Matcher match = wildCardPattern.matcher(file.getName());<newline46mondego>                while(match.find()){<newline46mondego>                    String fileMatch = match.group();<newline46mondego>                    if(file.getName().equals(fileMatch))  {<newline46mondego>                        fileList.add(file); // doesn't work<newline46mondego>                    }<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego>        else<newline46mondego>            fileList = new LinkedList<File>( Arrays.asList(folder.listFiles()));<newline46mondego><newline46mondego>        for (File f: fileList) System.out.println(f.getName());<newline46mondego>}<newline46mondego>"
"1332splitHere46","12745353splitHere46","D:"
"1333splitHere46","12745353splitHere46","for (File file : listOfFiles) {<newline46mondego>            Matcher match = wildCardPattern.matcher(file.getName());<newline46mondego>            if (match.matches()) {<newline46mondego>                fileList.add(file);<newline46mondego>            }<newline46mondego>        }<newline46mondego>"
"1334splitHere46","12745408splitHere46","Map<Object, Set<String>> validationResults<newline46mondego>"
"1335splitHere46","12745408splitHere46","List<Field> errorFieldList;<newline46mondego>Set<String> formValidationResult = new HashSet<String>();<newline46mondego>validationResults.put(errorFieldList, formValidationResult);<newline46mondego>"
"1336splitHere46","12745408splitHere46","Object"
"1337splitHere46","12745408splitHere46","List<Field>"
"1338splitHere46","12745408splitHere46","objField.get(i);<newline46mondego>"
"1339splitHere46","12745408splitHere46","i"
"1340splitHere46","12745408splitHere46","List<Field>"
"1341splitHere46","12745408splitHere46","List<Map<String, Object>>"
"1342splitHere46","12745408splitHere46","for"
"1343splitHere46","12745408splitHere46","Map"
"1344splitHere46","12745408splitHere46","Set"
"1345splitHere46","12745424splitHere46","final JButton button = new JButton();<newline46mondego>final JComboBox comboBox = new JComboBox();<newline46mondego><newline46mondego>comboBox.addActionListener( new ActionListener() {<newline46mondego>    @Override<newline46mondego>    public void actionPerformed( final ActionEvent event ) {<newline46mondego>        // Your logic to determine when to enable/disable:<newline46mondego>        final boolean enabled = comboBox.getSelectedIndex() == 0;<newline46mondego>        button.setEnabled( enabled );<newline46mondego>    }<newline46mondego>} );<newline46mondego>"
"1346splitHere46","12745443splitHere46","<doubleQuotes46>success<doubleQuotes46>"
"1347splitHere46","12745443splitHere46","Exception"
"1348splitHere46","12745443splitHere46","onFailure"
"1349splitHere46","12745548splitHere46","How many values to read? 1<newline46mondego>Enter Value: 1<newline46mondego>Enter Value: 1<newline46mondego>Average: 1None Divisible<newline46mondego>"
"1350splitHere46","12745613splitHere46","java.util.logging.SimpleFormatter.format=<doubleQuotes46>%4$s: %5$s [%1$tc]%n<doubleQuotes46><newline46mondego>"
"1351splitHere46","12745613splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego><!DOCTYPE log4j:configuration SYSTEM <doubleQuotes46>log4j.dtd<doubleQuotes46> ><newline46mondego><log4j:configuration><newline46mondego>    <appender name=<doubleQuotes46>stdout<doubleQuotes46> class=<doubleQuotes46>org.apache.log4j.ConsoleAppender<doubleQuotes46>><newline46mondego>        <layout class=<doubleQuotes46>org.apache.log4j.PatternLayout<doubleQuotes46>><newline46mondego>            <param name=<doubleQuotes46>ConversionPattern<doubleQuotes46> value=<doubleQuotes46>%d %5p %c{1}:%L - %m%n<doubleQuotes46>/><newline46mondego>        </layout><newline46mondego>    </appender><newline46mondego>    <root><newline46mondego>        <priority value=<doubleQuotes46>debug<doubleQuotes46>></priority><newline46mondego>        <appender-ref ref=<doubleQuotes46>stdout<doubleQuotes46>/><newline46mondego>    </root><newline46mondego></log4j:configuration><newline46mondego>"
"1352splitHere46","12745613splitHere46","static org.apache.log4j.Logger LOG = org.apache.log4j.Logger.getLogger(Testing.class);<newline46mondego>"
"1353splitHere46","12745613splitHere46","LOG.error(<doubleQuotes46>Test Error<doubleQuotes46>);<newline46mondego>"
"1354splitHere46","12745714splitHere46","<classpath><newline46mondego>      <pathelement path=<doubleQuotes46>${classpath}<doubleQuotes46>/><newline46mondego>      <pathelement location=<doubleQuotes46>lib/helper.jar<doubleQuotes46>/><newline46mondego>    </classpath><newline46mondego>"
"1355splitHere46","12745714splitHere46","<!-- JUnit classpath. --><newline46mondego><path id=<doubleQuotes46>junit.class.path<doubleQuotes46>><newline46mondego>    <fileset dir=<doubleQuotes46>lib/main<doubleQuotes46> includes=<doubleQuotes46>*.jar<doubleQuotes46>/><newline46mondego>    <fileset dir=<doubleQuotes46>lib/test<doubleQuotes46> includes=<doubleQuotes46>*.jar<doubleQuotes46>/><newline46mondego>    <pathelement location=<doubleQuotes46>bin/main<doubleQuotes46>/><newline46mondego>    <pathelement location=<doubleQuotes46>bin/test<doubleQuotes46>/><newline46mondego></path><newline46mondego>"
"1356splitHere46","12745849splitHere46","poi-src-3.8-20120326.zip"
"1357splitHere46","12745890splitHere46","git checkout master<newline46mondego><newline46mondego>git branch test<newline46mondego><newline46mondego>git checkout test<newline46mondego><newline46mondego>git push origin test<newline46mondego><newline46mondego>git add (files to add)<newline46mondego><newline46mondego>git commit -m <doubleQuotes46>Message<doubleQuotes46><newline46mondego><newline46mondego>git push origin +test<newline46mondego>"
"1358splitHere46","12745890splitHere46","git checkout master<newline46mondego><newline46mondego>git merge test<newline46mondego>"
"1359splitHere46","12746070splitHere46","driver.switch.frame(0);"
"1360splitHere46","12746070splitHere46","driver.switch.frame(driver.findElementByXpath(<doubleQuotes46>//iframe[contains(@src,'forsee')]<doubleQuotes46>))<newline46mondego>"
"1361splitHere46","12746191splitHere46","String"
"1362splitHere46","12746191splitHere46","char"
"1363splitHere46","12746191splitHere46","String s = new String(data, 0, 3);<newline46mondego>"
"1364splitHere46","12746191splitHere46","data"
"1365splitHere46","12746191splitHere46","char"
"1366splitHere46","12746191splitHere46","data"
"1367splitHere46","12746191splitHere46","int length = 0;<newline46mondego>while (length < data.length && 0 != data[length]) length++;<newline46mondego>String s = new String(data, 0, length);<newline46mondego>"
"1368splitHere46","12746315splitHere46","public class MyRow {<newline46mondego>    private String col1;<newline46mondego>    private int col2;<newline46mondego>    ...<newline46mondego>    // the constructor<newline46mondego>    public MyRow(String s, int i, ...) {<newline46mondego>        this.col1 = s;<newline46mondego>        this.col2 = i;<newline46mondego>        ...<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1369splitHere46","12746315splitHere46","Map<Integer, MyRow> map = new HashMap<Integer, MyRow>(0);<newline46mondego>ResultSet rs;<newline46mondego>// get your result set from some db query or whatever<newline46mondego>while(rs.next()) {<newline46mondego>    MyRow mr = new MyRow(rs.getString(yourCol1Index), rs.getInt(yourCol2Index), ...);<newline46mondego>    map.put(rs.getInt(yourKeyColumnIndex), mr);<newline46mondego>}<newline46mondego>// finaly release the resources<newline46mondego>rs.close();<newline46mondego>"
"1370splitHere46","12746330splitHere46","class Node {<newline46mondego>     String value;<newline46mondego>     Node next;<newline46mondego>}<newline46mondego>"
"1371splitHere46","12746330splitHere46","Node"
"1372splitHere46","12746462splitHere46","jinternalframe1 frm= new jinternalframe(this); <newline46mondego>"
"1373splitHere46","12746462splitHere46","MainMenu myParent;<newline46mondego>"
"1374splitHere46","12746462splitHere46","jinternalframe1(MainMenu parent){<newline46mondego><newline46mondego>   myParent = parent;<newline46mondego><newline46mondego>   //rest of your code<newline46mondego>}<newline46mondego>"
"1375splitHere46","12746462splitHere46","if(ae.getActionCommand().equals(<doubleQuotes46>1<doubleQuotes46>)){<newline46mondego>myParent.add(new JButton(<doubleQuotes46>back<doubleQuotes46>));<newline46mondego>}<newline46mondego>"
"1376splitHere46","12746489splitHere46","123456"
"1377splitHere46","12746489splitHere46","123456"
"1378splitHere46","12746489splitHere46","123456"
"1379splitHere46","12746502splitHere46","(\d+\s+of\s+\d+)<newline46mondego>"
"1380splitHere46","12746502splitHere46","\s+"
"1381splitHere46","12746502splitHere46","\s"
"1382splitHere46","12746502splitHere46","(\d+)\s+of\s+(\d+)<newline46mondego>"
"1383splitHere46","12746736splitHere46","struts.xml"
"1384splitHere46","12746736splitHere46","struts.xml"
"1385splitHere46","12746736splitHere46","data"
"1386splitHere46","12746736splitHere46","lists,maps,number1,numberarray1,string1"
"1387splitHere46","12746736splitHere46","var sentData ={};<newline46mondego> sentData [<doubleQuotes46>sentData <doubleQuotes46>] = data;<newline46mondego>// And in your ajax call , <newline46mondego>data: JSON.stringify(sentData),<newline46mondego>"
"1388splitHere46","12746736splitHere46","Map<K.V> sentData = new HashMap<K,V>();<newline46mondego>"
"1389splitHere46","12747104splitHere46","thisLine.trim()"
"1390splitHere46","12747104splitHere46","thisLine"
"1391splitHere46","12747104splitHere46","thisLine.split(<doubleQuotes46> <doubleQuotes46>)"
"1392splitHere46","12747104splitHere46","=="
"1393splitHere46","12747104splitHere46","equals"
"1394splitHere46","12747104splitHere46","while"
"1395splitHere46","12747104splitHere46","reader.readLine()"
"1396splitHere46","12747104splitHere46","try/catch/finally"
"1397splitHere46","12747104splitHere46","static void readFromCsvFile(String sFileName, User user) throws FileNotFoundException { <newline46mondego>   String thisLine;<newline46mondego>   BufferedReader reader = new BufferedReader(new FileReader(sFileName));<newline46mondego>    try<newline46mondego>    {<newline46mondego><newline46mondego>       thisLine = reader.readLine();<newline46mondego>       System.out.print(thisLine);<newline46mondego><newline46mondego>       while((thisLine = reader.readLine()) != null)               <newline46mondego>           {<newline46mondego>               thisLine = thisLine.trim();<newline46mondego>               String username = thisLine.split(<doubleQuotes46> <doubleQuotes46>)[0];<newline46mondego>                if (user.displayUserName().equals(username))<newline46mondego>                {<newline46mondego>                System.out.print(<doubleQuotes46>\nUser <-<doubleQuotes46> + user.displayUserName() + <doubleQuotes46> -> exists!<doubleQuotes46>);<newline46mondego>                break;   // break the loop<newline46mondego>                }                    <newline46mondego>           }<newline46mondego><newline46mondego>    }<newline46mondego>    catch(IOException e)<newline46mondego>    {<newline46mondego>        System.out.print(<doubleQuotes46>\nUser does not exist\n<doubleQuotes46>); <newline46mondego>        e.printStackTrace();<newline46mondego>    } <newline46mondego>    finally {<newline46mondego>        try {<newline46mondego>            reader.close();<newline46mondego>        } catch (IOException e) { /* ignore */ }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1398splitHere46","12747107splitHere46","package test;<newline46mondego>import java.awt.BasicStroke;<newline46mondego>import java.awt.Color;<newline46mondego>import java.awt.Dimension;<newline46mondego>import java.awt.Graphics;<newline46mondego>import java.awt.Graphics2D;<newline46mondego>import java.awt.Image;<newline46mondego>import java.awt.event.MouseEvent;<newline46mondego>import java.awt.event.MouseListener;<newline46mondego>import java.awt.event.MouseMotionListener;<newline46mondego>import java.awt.image.BufferedImage;<newline46mondego>import java.io.File;<newline46mondego>import java.util.ArrayList;<newline46mondego><newline46mondego>import javax.imageio.ImageIO;<newline46mondego>import javax.swing.JPanel;<newline46mondego><newline46mondego>public class ImagePanel extends JPanel implements MouseListener,<newline46mondego>    MouseMotionListener {<newline46mondego><newline46mondego>Rectangle currentRectangle = null;<newline46mondego>boolean drawingRectangle = false;<newline46mondego><newline46mondego>/**<newline46mondego> * some java stuff to get rid of warnings<newline46mondego> */<newline46mondego>private static final long serialVersionUID = 1L;<newline46mondego><newline46mondego>/**<newline46mondego> * image to be tagged<newline46mondego> */<newline46mondego>BufferedImage image = null;<newline46mondego><newline46mondego>/**<newline46mondego> * list of current polygon's vertices<newline46mondego> */<newline46mondego>ArrayList<Point> currentPolygon = null;<newline46mondego><newline46mondego>/**<newline46mondego> * list of polygons<newline46mondego> */<newline46mondego>ArrayList<ArrayList<Point>> polygonsList = null;<newline46mondego><newline46mondego>ArrayList<Rectangle> rectangleList = null;<newline46mondego><newline46mondego>/**<newline46mondego> * extended constructor - loads image to be labelled<newline46mondego> * <newline46mondego> * @param imageName<newline46mondego> *            - path to image<newline46mondego> * @throws Exception<newline46mondego> *             if error loading the image<newline46mondego> */<newline46mondego>public ImagePanel(String imageName) throws Exception {<newline46mondego><newline46mondego>    currentPolygon = new ArrayList<Point>();<newline46mondego>    polygonsList = new ArrayList<ArrayList<Point>>();<newline46mondego>    rectangleList = new ArrayList<Rectangle>();<newline46mondego><newline46mondego>    image = ImageIO.read(new File(imageName));<newline46mondego>    Dimension panelSize = new Dimension(image.getWidth(), image.getHeight());<newline46mondego>    this.setSize(panelSize);<newline46mondego>    this.setMinimumSize(panelSize);<newline46mondego>    this.setPreferredSize(panelSize);<newline46mondego>    this.setMaximumSize(panelSize);<newline46mondego><newline46mondego>    setBounds(0, 0, image.getWidth(), image.getHeight());<newline46mondego>    addMouseListener(this);<newline46mondego>    addMouseMotionListener(this);<newline46mondego>    this.setVisible(true);<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>@Override<newline46mondego>public void paintComponent(Graphics g) {<newline46mondego>    super.paintComponent(g);<newline46mondego>    System.out.println(<doubleQuotes46>Paint Component<doubleQuotes46>);<newline46mondego>    Graphics2D g2d = (Graphics2D) g;<newline46mondego><newline46mondego>    // Paint image on screen<newline46mondego>    g2d.drawImage(image, 0, 0, image.getWidth(), image.getHeight(), null);<newline46mondego><newline46mondego>    // display all the completed polygons<newline46mondego>    for (ArrayList<Point> polygon : polygonsList) {<newline46mondego>        drawPolygon(polygon,g);<newline46mondego>        finishPolygon(polygon);<newline46mondego>        System.out.println(<doubleQuotes46>Polly<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    // Display all completed squares<newline46mondego>    for (Rectangle r : rectangleList) {<newline46mondego>        drawRectangle(r,g);<newline46mondego>        System.out.println(<doubleQuotes46>Square<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    // display current polygon<newline46mondego>    if (currentPolygon != null) {<newline46mondego>        drawPolygon(currentPolygon, g);<newline46mondego>    }<newline46mondego><newline46mondego>    // display current square<newline46mondego>    if (currentRectangle != null) {<newline46mondego>        drawRectangle(currentRectangle, g);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>/**<newline46mondego> * displays a polygon without last stroke<newline46mondego> * <newline46mondego> * @param polygon<newline46mondego> *            to be displayed<newline46mondego> */<newline46mondego>public void drawPolygon(ArrayList<Point> polygon,  Graphics gr) {<newline46mondego>    Graphics2D g = null;<newline46mondego>    if (gr instanceof Graphics2D) {<newline46mondego>        g = (Graphics2D) gr;<newline46mondego>    }<newline46mondego>    else{ return; }<newline46mondego>    // set to red so I can see when it's being redrawn<newline46mondego>    g.setColor(Color.RED);<newline46mondego>    g.setStroke(new BasicStroke(3));<newline46mondego>    for (int i = 0; i < polygon.size(); i++) {<newline46mondego>        Point currentVertex = polygon.get(i);<newline46mondego>        if (i != 0) {<newline46mondego>            Point prevVertex = polygon.get(i - 1);<newline46mondego>            g.drawLine(prevVertex.getX(), prevVertex.getY(),<newline46mondego>                    currentVertex.getX(), currentVertex.getY());<newline46mondego>        }<newline46mondego>        g.fillOval(currentVertex.getX() - 5, currentVertex.getY() - 5, 10,<newline46mondego>                10);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public void drawRectangle(Rectangle r, Graphics gr) {<newline46mondego>    Graphics2D g = null;<newline46mondego>    if (gr instanceof Graphics2D) {<newline46mondego>        g = (Graphics2D) gr;<newline46mondego>    }<newline46mondego>    else{ return; }<newline46mondego>    g.setStroke(new BasicStroke(3));<newline46mondego>    g.setColor(Color.BLUE);<newline46mondego>    g.drawLine(r.getX1(), r.getY1(), r.getX2(), r.getY1());<newline46mondego>    g.drawLine(r.getX1(), r.getY1(), r.getX1(), r.getY2());<newline46mondego>    g.drawLine(r.getX2(), r.getY2(), r.getX2(), r.getY1());<newline46mondego>    g.drawLine(r.getX2(), r.getY2(), r.getX1(), r.getY2());<newline46mondego><newline46mondego>    System.out.println(r.getX1() + <doubleQuotes46> <doubleQuotes46> + r.getY1() + <doubleQuotes46> <doubleQuotes46> + r.getX2());<newline46mondego>    System.out.println(<doubleQuotes46>Drawn rectangle<doubleQuotes46>);<newline46mondego>}<newline46mondego><newline46mondego>/**<newline46mondego> * displays last stroke of the polygon (arch between the last and first<newline46mondego> * vertices)<newline46mondego> * <newline46mondego> * @param polygon<newline46mondego> *            to be finished<newline46mondego> */<newline46mondego>public void finishPolygon(ArrayList<Point> polygon) {<newline46mondego>    // if there are less than 3 vertices than nothing to be completed<newline46mondego>    if (polygon.size() >= 3) {<newline46mondego>        Point firstVertex = polygon.get(0);<newline46mondego>        Point lastVertex = polygon.get(polygon.size() - 1);<newline46mondego><newline46mondego>        Graphics2D g = (Graphics2D) this.getGraphics();<newline46mondego>        g.setColor(Color.GREEN);<newline46mondego>        g.setStroke(new BasicStroke(3));<newline46mondego>        g.drawLine(firstVertex.getX(), firstVertex.getY(),<newline46mondego>                lastVertex.getX(), lastVertex.getY());<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>/**<newline46mondego> * moves current polygon to the list of polygons and makes pace for a new<newline46mondego> * one<newline46mondego> */<newline46mondego>public void addNewPolygon() {<newline46mondego>    // finish the current polygon if any<newline46mondego>    if (currentPolygon != null) {<newline46mondego>        finishPolygon(currentPolygon);<newline46mondego>        polygonsList.add(currentPolygon);<newline46mondego>    }<newline46mondego><newline46mondego>    currentPolygon = new ArrayList<Point>();<newline46mondego>}<newline46mondego><newline46mondego>public void mouseClicked(MouseEvent e) {<newline46mondego><newline46mondego>    if (!drawingRectangle) {<newline46mondego>        int x = e.getX();<newline46mondego>        int y = e.getY();<newline46mondego><newline46mondego>        // check if the cursor is within image area<newline46mondego>        if (x > image.getWidth() || y > image.getHeight()) {<newline46mondego>            // if not do nothing<newline46mondego>            return;<newline46mondego>        }<newline46mondego><newline46mondego>        Graphics2D g = (Graphics2D) this.getGraphics();<newline46mondego><newline46mondego>        // if the left button than we will add a vertex to poly<newline46mondego>        if (e.getButton() == MouseEvent.BUTTON1) {<newline46mondego>            g.setColor(Color.GREEN);<newline46mondego>            if (currentPolygon.size() != 0) {<newline46mondego>                Point lastVertex = currentPolygon<newline46mondego>                        .get(currentPolygon.size() - 1);<newline46mondego><newline46mondego>                g.setStroke(new BasicStroke(3));<newline46mondego>                g.drawLine(lastVertex.getX(), lastVertex.getY(), x, y);<newline46mondego>            }<newline46mondego>            g.fillOval(x - 5, y - 5, 10, 10);<newline46mondego><newline46mondego>            currentPolygon.add(new Point(x, y));<newline46mondego>            System.out.println(x + <doubleQuotes46> <doubleQuotes46> + y + <doubleQuotes46> polygon point<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public void mouseEntered(MouseEvent arg0) {<newline46mondego>}<newline46mondego><newline46mondego>public void mouseExited(MouseEvent arg0) {<newline46mondego>}<newline46mondego><newline46mondego>public void mousePressed(MouseEvent arg0) {<newline46mondego>    if (drawingRectangle) {<newline46mondego>        currentRectangle = new Rectangle(arg0.getX(), arg0.getY(),<newline46mondego>                arg0.getX(), arg0.getY(), Color.BLACK);<newline46mondego><newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public void mouseReleased(MouseEvent arg0) {<newline46mondego>    if (drawingRectangle) {<newline46mondego>        rectangleList.add(new Rectangle(currentRectangle.getX1(),<newline46mondego>                currentRectangle.getY1(), arg0.getX(), arg0.getY(),<newline46mondego>                currentRectangle.getColor()));<newline46mondego><newline46mondego>        System.out.println(currentRectangle.getX1() + <doubleQuotes46> <doubleQuotes46><newline46mondego>                + currentRectangle.getY1() + <doubleQuotes46> <doubleQuotes46> + arg0.getX() + <doubleQuotes46> <doubleQuotes46><newline46mondego>                + arg0.getY() + <doubleQuotes46> rectangle point<doubleQuotes46>);<newline46mondego><newline46mondego>        // unnecessary when mouseDragged calls paintComponent directly?<newline46mondego>        /*drawRectangle(new Rectangle(currentRectangle.getX1(),<newline46mondego>                currentRectangle.getY1(), arg0.getX(), arg0.getY(),<newline46mondego>                currentRectangle.getColor()));*/<newline46mondego><newline46mondego>        currentRectangle = null;<newline46mondego>        drawingRectangle = false;<newline46mondego><newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public void mouseDragged(MouseEvent arg0) {<newline46mondego><newline46mondego>    if (drawingRectangle) {<newline46mondego>        currentRectangle = new Rectangle(currentRectangle.getX1(),<newline46mondego>                currentRectangle.getY1(), arg0.getX(), arg0.getY(),<newline46mondego>                currentRectangle.getColor());<newline46mondego><newline46mondego>        System.out.println(currentRectangle.getX1() + <doubleQuotes46> <doubleQuotes46><newline46mondego>                + currentRectangle.getY1() + <doubleQuotes46> <doubleQuotes46> + arg0.getX() + <doubleQuotes46> <doubleQuotes46><newline46mondego>                + arg0.getX() + <doubleQuotes46> <doubleQuotes46> + <doubleQuotes46>Dragging<doubleQuotes46>);<newline46mondego>        repaint();<newline46mondego><newline46mondego>    // It works better using this instead on repaint()<newline46mondego><newline46mondego>//           Graphics g = this.getGraphics();<newline46mondego>//           paintComponent(g);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>public void mouseMoved(MouseEvent arg0) {<newline46mondego>    // TODO Auto-generated method stub<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>}<newline46mondego>"
"1399splitHere46","12747130splitHere46","java.lang.RuntimeException: DOM Level 3 Not implemented<newline46mondego>        at org.apache.xmlbeans.impl.store.DomImpl._node_getTextContent(DomImpl.java:2516)<newline46mondego>        at org.a<newline46mondego><newline46mondego>pache.xmlbeans.impl.store.Xobj$NodeXobj.getTextContent(Xobj.java:2607)<newline46mondego>"
"1400splitHere46","12747130splitHere46","getTextContent"
"1401splitHere46","12747130splitHere46","package forum12746038;<newline46mondego><newline46mondego>import java.io.StringReader;<newline46mondego>import javax.xml.parsers.*;<newline46mondego>import org.w3c.dom.*;<newline46mondego>import org.xml.sax.InputSource;<newline46mondego><newline46mondego>public class Demo {<newline46mondego><newline46mondego>    public static void main(String[] args) throws Exception {<newline46mondego>        DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();<newline46mondego>        DocumentBuilder db = dbf.newDocumentBuilder();<newline46mondego>        String xml = <doubleQuotes46><root>Hello <!-- comment -->World</root><doubleQuotes46>;<newline46mondego>        Document doc = db.parse(new InputSource(new StringReader(xml)));<newline46mondego><newline46mondego>        Element element = doc.getDocumentElement();<newline46mondego>        NodeList childNodes = element.getChildNodes();<newline46mondego>        StringBuilder strBldr = new StringBuilder();<newline46mondego>        for(int x=0; x<childNodes.getLength(); x++) {<newline46mondego>            Node childNode = childNodes.item(x);<newline46mondego>            if(childNode.getNodeType() == Node.TEXT_NODE) {<newline46mondego>                strBldr.append(childNode.getNodeValue());<newline46mondego>            }<newline46mondego>        }<newline46mondego>        System.out.println(strBldr.toString());<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"1402splitHere46","12747293splitHere46","/* Selected row */<newline46mondego>.table-view:focused .table-row-cell:filled:focused:selected {<newline46mondego>    -fx-background-color: brown;<newline46mondego>    -fx-background-insets: 0, 1, 2;<newline46mondego>    -fx-background: -fx-accent;<newline46mondego>    -fx-text-fill: -fx-selection-bar-text;<newline46mondego>}<newline46mondego><newline46mondego>/* Selected row when table not focused */<newline46mondego>.table-row-cell:filled:focused:selected {<newline46mondego>    -fx-background-color: red;<newline46mondego>    -fx-background-insets: 0, 1, 2;<newline46mondego>    -fx-background: -fx-accent;<newline46mondego>    -fx-text-fill: -fx-selection-bar-text;<newline46mondego>}<newline46mondego><newline46mondego>/* Row hovered */<newline46mondego>.table-view:row-selection .table-row-cell:filled:hover {<newline46mondego>    -fx-background-color: green;<newline46mondego>    -fx-background-insets: 0, 0 0 1 0;<newline46mondego>    -fx-text-fill: -fx-text-inner-color;<newline46mondego>}<newline46mondego><newline46mondego>/* Selected row hovered */<newline46mondego>.table-view:focused .table-row-cell:filled:focused:selected:hover {<newline46mondego>    -fx-background: -fx-accent;<newline46mondego>    -fx-background-color: yellow;<newline46mondego>    -fx-background-insets: 0, 1, 2;<newline46mondego>    -fx-text-fill: -fx-selection-bar-text;<newline46mondego>}<newline46mondego><newline46mondego>/* Selected row hovered when table not focused */<newline46mondego>.table-view:row-selection .table-row-cell:filled:focused:hover {<newline46mondego>    -fx-background-color: blue;<newline46mondego>    -fx-background-insets: 0, 0 0 1 0, 1 1 2 1, 2 2 3 2, 3 3 4 3;<newline46mondego>    -fx-text-fill: -fx-text-inner-color;<newline46mondego>}<newline46mondego>"
"1403splitHere46","12747395splitHere46","if(s.contains(<doubleQuotes46>junk<doubleQuotes46>)) <newline46mondego>  s.replaceAll(<doubleQuotes46>junk<doubleQuotes46>, <doubleQuotes46>What<doubleQuotes46>); <newline46mondego>else <newline46mondego>  //you know it hasn't executed!<newline46mondego>"
"1404splitHere46","12747442splitHere46","allocationSize"
"1405splitHere46","12747443splitHere46","// define width limits<newline46mondego>textField.setMinWidth(50);<newline46mondego>textField.setPrefWidth(50);<newline46mondego>textField.setMaxWidth(400);<newline46mondego>// add listner<newline46mondego>textField.textProperty().addListener(new ChangeListener<String>() {<newline46mondego>    @Override<newline46mondego>    public void changed(ObservableValue<? extends String> observable, String oldValue, String newValue) {<newline46mondego>        textField.setPrefWidth(textField.getText().length() * 7); // why 7? Totally trial number.<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"1406splitHere46","12747560splitHere46","String newLine;<newline46mondego>while ( true )<newline46mondego>newLine = inFromClient.readLine();              <newline46mondego>          if (newLine.equalsIgnoreCase(<doubleQuotes46>END<doubleQuotes46>))<newline46mondego>{<newline46mondego>    break;<newline46mondego>}<newline46mondego><newline46mondego>          newLine = newLine.toUpperCase();                 <newline46mondego><newline46mondego>// Send message             <newline46mondego>          network.writeUTF(newLine);<newline46mondego>}<newline46mondego>// Close sockets.  This will cause the client to exit<newline46mondego><newline46mondego>sock.close();               <newline46mondego>server.close();<newline46mondego>"
"1407splitHere46","12747627splitHere46","Provider"
"1408splitHere46","12747627splitHere46","ProviderFactory"
"1409splitHere46","12747627splitHere46","lifecycle"
"1410splitHere46","12747627splitHere46","PropertySetter"
"1411splitHere46","12747627splitHere46","Provider"
"1412splitHere46","12747627splitHere46","public class ProviderFactory {<newline46mondego><newline46mondego>  public static create(Lifecycle lc) {<newline46mondego>    return new Provider(lc, new PropertySetter(lc));<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"1413splitHere46","12747627splitHere46","<bean id=<doubleQuotes46>defaultProvider<doubleQuotes46> scope=<doubleQuotes46>prototype<doubleQuotes46> <newline46mondego>      class=<doubleQuotes46>a.b.c.ProviderFactory<doubleQuotes46> factory-method=<doubleQuotes46>create<doubleQuotes46>><newline46mondego>    <constructor-arg ref=<doubleQuotes46>lifecycle<doubleQuotes46> /><newline46mondego></bean><newline46mondego>"
"1414splitHere46","12747863splitHere46","new File( servletContext.getRealPath( <doubleQuotes46>/text.XML<doubleQuotes46> ) );<newline46mondego>"
"1415splitHere46","12747863splitHere46","ServletContext.getRealPath()"
"1416splitHere46","12747984splitHere46","HashMap"
"1417splitHere46","12747984splitHere46","Serializable"
"1418splitHere46","12748057splitHere46","org.eclipse.ui.IWorkbenchPart3"
"1419splitHere46","12748057splitHere46","propertyChangedListeners"
"1420splitHere46","12748057splitHere46","org.eclipse.search.searchResultViewPages"
"1421splitHere46","12748057splitHere46","ISearchResultPage"
"1422splitHere46","12748057splitHere46","com.porsche.dps.main.SearchResultPage1.setInput(ISearchResult, Object)"
"1423splitHere46","12748057splitHere46","ISearchResult"
"1424splitHere46","12748160splitHere46","List<Xcatentattr> xcatentAttrList = (List<Xcatentattr>) proce1.get(0);<newline46mondego><newline46mondego>solrItemVO.setMapPrice(-1); // setting default value<newline46mondego><newline46mondego>for(Xcatentattr  xcatentattr : xcatentAttrList){<newline46mondego><newline46mondego>    if(xcatentattr.get(0) == 33)<newline46mondego><newline46mondego>            solrItemVO.setMapPrice(xcatentattr.get(1));<newline46mondego><newline46mondego>            solrItemVO.setMapPriceVal(xcatentattr.get(2));<newline46mondego><newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1425splitHere46","12748369splitHere46","arcs = new List[500];<newline46mondego>"
"1426splitHere46","12748385splitHere46","StringBuilder stringBuilder = new StringBuilder(gpxString);<newline46mondego>        for (CCTrackLocation location: trackLocations) {<newline46mondego>            if (isCancelled())<newline46mondego>                return null;<newline46mondego>            //Log.e(<doubleQuotes46>CCGPXUtils<doubleQuotes46>, <doubleQuotes46>Time wasting<doubleQuotes46>);<newline46mondego>            stringBuilder.append(<doubleQuotes46><trkpt lat=\<doubleQuotes46><doubleQuotes46>+location.getLatitude()+<doubleQuotes46>\<doubleQuotes46> lon=\<doubleQuotes46><doubleQuotes46>+location.getLongitude()+<doubleQuotes46>\<doubleQuotes46>>\n<doubleQuotes46> +<newline46mondego>                                                <doubleQuotes46><ele><doubleQuotes46>+location.getAltitude()+<doubleQuotes46></ele>\n<doubleQuotes46> +<newline46mondego>                                                <doubleQuotes46><time><doubleQuotes46>+CCDateUtility.convertTimestampIntoGPXFormat(location.getTimestamp())+<doubleQuotes46></time></trkpt>\n<doubleQuotes46>);<newline46mondego>}<newline46mondego>return stringBuilder.toString();<newline46mondego>"
"1427splitHere46","12748403splitHere46","message.getBody()"
"1428splitHere46","12748403splitHere46","byte[]"
"1429splitHere46","12748403splitHere46","byte[] body = message.getBody();<newline46mondego>System.out.println(new String(body));<newline46mondego>"
"1430splitHere46","12748405splitHere46","ServiceTicket t = TICKET_DICT.get((UUID) tableModel.getValueAt(row, 3));<newline46mondego>"
"1431splitHere46","12748405splitHere46","TableModel"
"1432splitHere46","12748405splitHere46","row"
"1433splitHere46","12748405splitHere46","row"
"1434splitHere46","12748405splitHere46","JTable#convertRowIndexToModel"
"1435splitHere46","12748405splitHere46","fireTableCellUpdated"
"1436splitHere46","12748405splitHere46","TableModel"
"1437splitHere46","12748461splitHere46","multiply"
"1438splitHere46","12748461splitHere46","3"
"1439splitHere46","12748461splitHere46","add"
"1440splitHere46","12748461splitHere46","multiply"
"1441splitHere46","12748461splitHere46","add"
"1442splitHere46","12748461splitHere46","multiply"
"1443splitHere46","12748461splitHere46","multiply"
"1444splitHere46","12748461splitHere46","add"
"1445splitHere46","12748461splitHere46","multiply"
"1446splitHere46","12748471splitHere46","/**<newline46mondego> * The table, resized as necessary. Length MUST Always be a power of two.<newline46mondego> */<newline46mondego>transient Entry<K,V>[] table;<newline46mondego>"
"1447splitHere46","12748471splitHere46","table.length-1"
"1448splitHere46","12748588splitHere46","Location.distanceTo(Location)"
"1449splitHere46","12748588splitHere46","Location.distanceBetween(float, float, float, float, float[])"
"1450splitHere46","12748727splitHere46","SimpleJdbcTemplate"
"1451splitHere46","12748832splitHere46","TreeSet"
"1452splitHere46","12748832splitHere46","Comparator"
"1453splitHere46","12748832splitHere46","public class AllLocales {<newline46mondego>  // Which Locales get priority.<newline46mondego>  private static final Locale[] priorityLocales = {<newline46mondego>    Locale.US,<newline46mondego>    Locale.UK<newline46mondego>  };<newline46mondego><newline46mondego>  private static class MyLocale implements Comparable<MyLocale> {<newline46mondego>    // My Locale.<newline46mondego>    private final Locale me;<newline46mondego><newline46mondego>    public MyLocale(Locale me) {<newline46mondego>      this.me = me;<newline46mondego>    }<newline46mondego><newline46mondego>    // Convenience<newline46mondego>    public String getCountry() {<newline46mondego>      return me.getCountry();<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public int compareTo(MyLocale it) {<newline46mondego>      // No duplicates in the country field.<newline46mondego>      if (getCountry().equals(it.getCountry())) {<newline46mondego>        return 0;<newline46mondego>      }<newline46mondego>      // Check for priority ones.<newline46mondego>      for (int i = 0; i < priorityLocales.length; i++) {<newline46mondego>        Locale priority = priorityLocales[i];<newline46mondego>        // I am a priority one.<newline46mondego>        if (getCountry().equals(priority.getCountry())) {<newline46mondego>          // I come first.<newline46mondego>          return -1;<newline46mondego>        }<newline46mondego>        // It is a priority one.<newline46mondego>        if (it.getCountry().equals(priority.getCountry())) {<newline46mondego>          // It comes first.<newline46mondego>          return 1;<newline46mondego>        }<newline46mondego>      }<newline46mondego>      // Default to straight comparison.<newline46mondego>      return getCountry().compareTo(it.getCountry());<newline46mondego>    }<newline46mondego>  }<newline46mondego><newline46mondego>  public static List<String> listAll() {<newline46mondego>    Set<MyLocale> byLocale = new TreeSet();<newline46mondego>    // Gather them all up.<newline46mondego>    for (Locale locale : Locale.getAvailableLocales()) {<newline46mondego>      final String isoCountry = locale.getDisplayCountry();<newline46mondego>      if (isoCountry.length() > 0) {<newline46mondego>        //System.out.println(locale.getCountry() + <doubleQuotes46>:<doubleQuotes46> + isoCountry + <doubleQuotes46>:<doubleQuotes46> + locale.getDisplayName());<newline46mondego>        byLocale.add(new MyLocale(locale));<newline46mondego>      }<newline46mondego>    }<newline46mondego>    // Roll them out of the set.<newline46mondego>    ArrayList<String> list = new ArrayList<>();<newline46mondego>    for (MyLocale l : byLocale) {<newline46mondego>      list.add(l.getCountry());<newline46mondego>    }<newline46mondego>    return list;<newline46mondego>  }<newline46mondego><newline46mondego>  public static void main(String[] args) throws InterruptedException {<newline46mondego>    // Some demo usages.<newline46mondego>    List<String> locales = listAll();<newline46mondego>    System.out.println(locales);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"1454splitHere46","12748886splitHere46","key"
"1455splitHere46","12748886splitHere46","List<Key>"
"1456splitHere46","12748886splitHere46","List<ChildEntity>"
"1457splitHere46","12748886splitHere46","void importPreviousChildren( @AlsoLoad( <doubleQuotes46>children<doubleQuotes46> ) List<Key> children )<newline46mondego>    {<newline46mondego>        for( Key key: children )<newline46mondego>        {<newline46mondego>            ChildEntity c = ofy().load().entity(DatastoreService.get(key))<newline46mondego><newline46mondego>            if( !childrenNames.contains( c.getName() ) )<newline46mondego>                childrenNames.add( c.getName() );<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"1458splitHere46","12749077splitHere46",">AssetMgmtDbTest me$ java -cp ojdbc6.jar:. Test<newline46mondego>"
"1459splitHere46","12749077splitHere46",":."
"1460splitHere46","12749205splitHere46","@Override<newline46mondego>public void init() throws ServletException {<newline46mondego>   super.init();<newline46mondego>   SpringBeanAutowiringSupport.processInjectionBasedOnCurrentContext(this);<newline46mondego>}<newline46mondego>"
"1461splitHere46","12749243splitHere46","java -cp /lcoation/of/dependency1.jar:/location/of/dependency2.jar:/location/of/dependency3.jar -jar project-SNAPSHOT.jar<newline46mondego>"
"1462splitHere46","12749243splitHere46","AppAssembler"
"1463splitHere46","12749243splitHere46","jar-with-dependency"
"1464splitHere46","12749243splitHere46","dependency:build-classpath"
"1465splitHere46","12749656splitHere46","*.java"
"1466splitHere46","12749813splitHere46","/**<newline46mondego>     * Unzips the file (recursively creates sub-folder if exists.)<newline46mondego>     * <newline46mondego>     * @param tempFileName<newline46mondego>     *            The zip file.<newline46mondego>     * @param destinationPath<newline46mondego>     *            The destination path where unzipped file will be saved.<newline46mondego>     */<newline46mondego>    public void unzipFile(String tempFileName, String destinationPath) {<newline46mondego>        try {<newline46mondego><newline46mondego>            int index = destinationPath.lastIndexOf(<doubleQuotes46>\\<doubleQuotes46>);<newline46mondego>            String fileString = destinationPath.substring(index);<newline46mondego><newline46mondego>            File extFile = new File(<doubleQuotes46>/mnt/sdcard/courses1<doubleQuotes46>, fileString);<newline46mondego>            if(!extFile.exists()) {<newline46mondego>                createDir(extFile);<newline46mondego>            }<newline46mondego><newline46mondego>            byte[] buffer = new byte[1024];<newline46mondego><newline46mondego>            FileInputStream fin = new FileInputStream(tempFileName);<newline46mondego>            ZipInputStream zin = new ZipInputStream(fin);<newline46mondego>            ZipEntry zipentry = null;<newline46mondego>            if (!(zin.available() == 0)) {<newline46mondego>                byte[] startBuffer = new byte[8];<newline46mondego><newline46mondego>                while ((zipentry = zin.getNextEntry()) != null) {<newline46mondego>                    String zipName = zipentry.getName();<newline46mondego>                    if (zipName.startsWith(<doubleQuotes46>/<doubleQuotes46>)) {<newline46mondego>                        zipName = zipentry.getName();<newline46mondego>                    } else if (zipName.startsWith(<doubleQuotes46>\\<doubleQuotes46>)) {<newline46mondego>                        zipName = zipentry.getName();<newline46mondego>                    } else {<newline46mondego>                        zipName = <doubleQuotes46>/<doubleQuotes46> + zipentry.getName();<newline46mondego>                    }<newline46mondego><newline46mondego>                    String fileName = destinationPath + zipName;<newline46mondego>                    fileName = fileName.replace(<doubleQuotes46>\\<doubleQuotes46>, <doubleQuotes46>/<doubleQuotes46>);<newline46mondego>                    fileName = fileName.replace(<doubleQuotes46>//<doubleQuotes46>, <doubleQuotes46>/<doubleQuotes46>);<newline46mondego><newline46mondego>                    if (zipentry.isDirectory()) {<newline46mondego>                        createDir(new File(fileName));<newline46mondego>                        continue;<newline46mondego>                    }<newline46mondego><newline46mondego>                    String name = zipentry.getName();<newline46mondego>                    int start, end = 0;<newline46mondego>                    while (true) {<newline46mondego><newline46mondego>                        start = name.indexOf('\\', end);<newline46mondego>                        end = name.indexOf('\\', start + 1);<newline46mondego>                        if (start > 0)<newline46mondego>                            <doubleQuotes46>check<doubleQuotes46>.toString();<newline46mondego>                        if (end > start && end > -1 && start > -1) {<newline46mondego>                            String dir = name.substring(1, end);<newline46mondego><newline46mondego>                            createDir(new File(destinationPath + '/' + dir));<newline46mondego>                            // name = name.substring(end);<newline46mondego>                        } else<newline46mondego>                            break;<newline46mondego>                    }<newline46mondego><newline46mondego>                    File file = new File(fileName);<newline46mondego><newline46mondego>                    FileOutputStream tempDexOut = new FileOutputStream(file);<newline46mondego>                    int BytesRead = 0;<newline46mondego><newline46mondego>                    if (zipentry != null) {<newline46mondego>                        if (zin != null) {<newline46mondego>                            while ((BytesRead = zin.read(buffer)) != -1) {<newline46mondego>                                tempDexOut.write(buffer, 0, BytesRead);<newline46mondego>                            }<newline46mondego>                            tempDexOut.close();<newline46mondego>                        }<newline46mondego>                    }<newline46mondego>                }<newline46mondego>            }<newline46mondego><newline46mondego>        } catch (Exception e) {<newline46mondego>            Log.e(<doubleQuotes46>Exception<doubleQuotes46>, e.getMessage());<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"1467splitHere46","12749878splitHere46","drawImage"
"1468splitHere46","12749878splitHere46","ImageObserver"
"1469splitHere46","12749878splitHere46","import java.awt.*;<newline46mondego>import java.awt.image.*;<newline46mondego>import java.io.*;<newline46mondego>import java.net.*;<newline46mondego>import javax.imageio.ImageIO;<newline46mondego>import javax.swing.*;<newline46mondego><newline46mondego>public class ImageObserverDemo extends Box{<newline46mondego><newline46mondego>    Image bi;<newline46mondego>    Image bi2;<newline46mondego>    Dimension d = new Dimension(300,200);<newline46mondego><newline46mondego>    public ImageObserverDemo() {<newline46mondego>        super(BoxLayout.Y_AXIS);        <newline46mondego>        try {<newline46mondego>            bi = ImageIO.read(new URL(<doubleQuotes46>http://apod.nasa.gov/apod/image/0304/bluemarble2k_big.jpg<doubleQuotes46>));<newline46mondego>            bi = bi.getScaledInstance(100, 100, BufferedImage.SCALE_SMOOTH);<newline46mondego>            bi2 = new BufferedImage(bi.getWidth(this), bi.getHeight(this), BufferedImage.TYPE_INT_ARGB);<newline46mondego>            bi2.getGraphics().drawImage(bi, 0, 0, this);<newline46mondego>        } catch (IOException e) {<newline46mondego>            e.printStackTrace();<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean imageUpdate(final Image img, int infoflags, int x, int y,<newline46mondego>            int width, int height) {<newline46mondego><newline46mondego>        boolean result = true;<newline46mondego>        if((infoflags | ImageObserver.FRAMEBITS) == ImageObserver.FRAMEBITS){<newline46mondego>            result = false;<newline46mondego>        } else if((infoflags | ImageObserver.ALLBITS) == ImageObserver.ALLBITS){<newline46mondego>            result = false;<newline46mondego>        }<newline46mondego><newline46mondego>        if(result){<newline46mondego>            System.out.println(<doubleQuotes46>Image incomplete<doubleQuotes46>);<newline46mondego>        } else{<newline46mondego>            System.out.println(<doubleQuotes46>Complete<doubleQuotes46>);<newline46mondego>        }<newline46mondego><newline46mondego>        return result;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Dimension getPreferredSize(){<newline46mondego>        return d;<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args){<newline46mondego>        final JFrame frame = new JFrame();<newline46mondego>        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        frame.add(new ImageObserverDemo());<newline46mondego>        frame.pack();<newline46mondego>        frame.setLocationRelativeTo(null);<newline46mondego>        frame.setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"1470splitHere46","12749897splitHere46","v1.setText(a3.toString());<newline46mondego>"
"1471splitHere46","12749933splitHere46","INSERT"
"1472splitHere46","12749933splitHere46","INSERT INTO tableName(col1, col2) VALUES (?,?)<newline46mondego>"
"1473splitHere46","12749933splitHere46","PhoneData"
"1474splitHere46","12749933splitHere46","ID"
"1475splitHere46","12749933splitHere46","INSERT INTO PhoneData( Names, mobileNumber1,..., country) VALUES (?,?,...,?)<newline46mondego>"
"1476splitHere46","12750039splitHere46","return var1 + var2 + var3 + var4 - min(var1, min(var2, min(var3, var4)));<newline46mondego>"
"1477splitHere46","12750070splitHere46","public class DerivativeQuiz{<newline46mondego>   public static void derivativeQuiz(String args[]){ ... }<newline46mondego>}<newline46mondego>"
"1478splitHere46","12750115splitHere46","public int hashCode() {<newline46mondego>     // you pick a hard-coded, randomly chosen, non-zero, odd number<newline46mondego>     // ideally different for each class<newline46mondego>     return new HashCodeBuilder(17, 37).<newline46mondego>       append(name).<newline46mondego>       append(age).<newline46mondego>       toHashCode();<newline46mondego>   }<newline46mondego><newline46mondego><newline46mondego>public boolean equals(Object obj) {<newline46mondego>   // do you basic object check first<newline46mondego>   // then delegate to equalsbuilder<newline46mondego>   MyClass rhs = (MyClass) obj;<newline46mondego>   return new EqualsBuilder()<newline46mondego>                 .append(name, rhs.name)<newline46mondego>                 .append(age, rhs.age)<newline46mondego>                 .isEquals();<newline46mondego>  }<newline46mondego>"
"1479splitHere46","12750150splitHere46","org.hibernate.tool.instrument.javassist.InstrumentTask"
"1480splitHere46","12750150splitHere46","<target name=<doubleQuotes46>instrument<doubleQuotes46> depends=<doubleQuotes46>compile<doubleQuotes46>><newline46mondego>    <taskdef name=<doubleQuotes46>instrument<doubleQuotes46> classname=<doubleQuotes46>org.hibernate.tool.instrument.javassist.InstrumentTask<doubleQuotes46>><newline46mondego>        <classpath refid=<doubleQuotes46><some-ant-path-including-hibernate-core-jar><doubleQuotes46>/><newline46mondego>        <classpath path=<doubleQuotes46><your-classes-path><doubleQuotes46>/><newline46mondego>    </taskdef><newline46mondego><newline46mondego>    <instrument verbose=<doubleQuotes46>true<doubleQuotes46>><newline46mondego>        <fileset dir=<doubleQuotes46><your-classes><doubleQuotes46>><newline46mondego>            <include name=<doubleQuotes46>*.class<doubleQuotes46>/><newline46mondego>        </fileset><newline46mondego>    </instrument><newline46mondego></target><newline46mondego>"
"1481splitHere46","12750186splitHere46","Integer"
"1482splitHere46","12750186splitHere46","String"
"1483splitHere46","12750186splitHere46","public class MutableInteger {<newline46mondego>    private int value;<newline46mondego>    public MutableInteger(int value) {<newline46mondego>        this.value = value;<newline46mondego>    }<newline46mondego>    public int getValue() {<newline46mondego>        return value;<newline46mondego>    }<newline46mondego>    public void setValue(int value) {<newline46mondego>        this.value = value;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1484splitHere46","12750242splitHere46","HashMap<String, String>"
"1485splitHere46","12750242splitHere46","Map<String, String>"
"1486splitHere46","12750242splitHere46","HashMap<A,B>"
"1487splitHere46","12750242splitHere46","Map<X,Y>"
"1488splitHere46","12750242splitHere46","DeclaredType wildcardMap = typeUtils.getDeclaredType(<newline46mondego>    elementUtils.getTypeElement(<doubleQuotes46>java.util.Map<doubleQuotes46>),<newline46mondego>    typeUtils.getWildcardType(null, null),<newline46mondego>    typeUtils.getWildcardType(null, null));<newline46mondego>"
"1489splitHere46","12750242splitHere46","Map<?,?>"
"1490splitHere46","12750242splitHere46","HashMap"
"1491splitHere46","12750428splitHere46","private void initialize() {<newline46mondego>    frame = new JFrame();<newline46mondego>    frame.setBounds(100, 100, 450, 300);<newline46mondego>    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego><newline46mondego>    JButton btnClose = new JButton(<doubleQuotes46>CLOSE<doubleQuotes46>);<newline46mondego>    btnClose.addActionListener(new ActionListener() {<newline46mondego>        public void actionPerformed(ActionEvent e) {<newline46mondego>            frame.setVisible(false);<newline46mondego>        }<newline46mondego>    });<newline46mondego>    frame.getContentPane().add(btnClose, BorderLayout.NORTH);<newline46mondego>}<newline46mondego>"
"1492splitHere46","12750463splitHere46","import org.jscience.mathematics.number.*;<newline46mondego>"
"1493splitHere46","12750463splitHere46","import org.jscience.*; <newline46mondego>"
"1494splitHere46","12750463splitHere46","jscience"
"1495splitHere46","12750654splitHere46","String a =<doubleQuotes46>1\2sas<doubleQuotes46>;<newline46mondego>String b =<doubleQuotes46>1\\2sas<doubleQuotes46>;<newline46mondego><newline46mondego>System.out.println(a.replaceAll(<doubleQuotes46>[a-zA-Z\\\\]<doubleQuotes46>,<doubleQuotes46><doubleQuotes46>));<newline46mondego>System.out.println(b.replaceAll(<doubleQuotes46>[a-zA-Z\\\\]<doubleQuotes46>,<doubleQuotes46><doubleQuotes46>));<newline46mondego>"
"1496splitHere46","12750654splitHere46","1X<newline46mondego>12<newline46mondego>"
"1497splitHere46","12750654splitHere46","System.out.println(<doubleQuotes46>12\\34a56ss7890<doubleQuotes46>);<newline46mondego>"
"1498splitHere46","12750654splitHere46","str.replaceAll(<doubleQuotes46>\u0000<doubleQuotes46>,<doubleQuotes46>0<doubleQuotes46>).replaceAll(<doubleQuotes46>\u0001<doubleQuotes46>,<doubleQuotes46>1<doubleQuotes46>) ... .replaceAll(<doubleQuotes46>\u0009<doubleQuotes46>,<doubleQuotes46>9<doubleQuotes46>).replaceAll(<doubleQuotes46>[^\\d]<doubleQuotes46>)<newline46mondego>"
"1499splitHere46","12750683splitHere46","protected Document getDocument(File f) throws Exception {<newline46mondego>  Document doc = new Document();<newline46mondego>  Field contents = new Field(<doubleQuotes46>contents<doubleQuotes46>, new Scanner(f).useDelimiter(<doubleQuotes46>\\A<doubleQuotes46>).next(), Store.YES, Index.NO);  // you should actually close the scanner<newline46mondego>  Field filename = new Field(<doubleQuotes46>filename<doubleQuotes46>, f.getName(), Store.YES, Index.ANALYZED);<newline46mondego>  doc.add(contents);<newline46mondego>  doc.add(filename);<newline46mondego>  return doc;<newline46mondego>}<newline46mondego>"
"1500splitHere46","12750738splitHere46","windowName.setLocation(location_parameters);<newline46mondego>"
"1501splitHere46","12750849splitHere46","+"
"1502splitHere46","12750849splitHere46","*"
"1503splitHere46","12750849splitHere46","text = text.replaceAll(<doubleQuotes46>\n+<doubleQuotes46>, <doubleQuotes46><br /><doubleQuotes46>);<newline46mondego><newline46mondego>text = text.replaceAll(<doubleQuotes46>[\n\r]+<doubleQuotes46>, <doubleQuotes46><br /><doubleQuotes46>);<newline46mondego>"
"1504splitHere46","12750944splitHere46","myPath = path.substring(path.indexOf(<doubleQuotes46>/mnt<doubleQuotes46>));<newline46mondego>"
"1505splitHere46","12750944splitHere46","if (path.contains(<doubleQuotes46>file:<doubleQuotes46>))<newline46mondego>{<newline46mondego>    myPath = path.substring(path.indexOf(<doubleQuotes46>:/<doubleQuotes46>) + 1);<newline46mondego>    while (myPath.startsWith(<doubleQuotes46>//<doubleQuotes46>))<newline46mondego>        myPath = myPath.substring(1);<newline46mondego>}<newline46mondego>"
"1506splitHere46","12751040splitHere46","oldValue.equals(oldValue)"
"1507splitHere46","12751040splitHere46","false"
"1508splitHere46","12751040splitHere46","equals"
"1509splitHere46","12751155splitHere46","getBrightness"
"1510splitHere46","12751155splitHere46","LinkedList"
"1511splitHere46","12751155splitHere46","Save"
"1512splitHere46","12751155splitHere46","Save s = new Save(...);<newline46mondego>s.set...(...);  // maybe<newline46mondego>...<newline46mondego>equal.add(s);<newline46mondego>"
"1513splitHere46","12751155splitHere46","Save"
"1514splitHere46","12751155splitHere46","return equal;<newline46mondego>"
"1515splitHere46","12751155splitHere46","getBrightness"
"1516splitHere46","12751422splitHere46","import com.opensymphony.xwork2.ActionContext;<newline46mondego><newline46mondego>if( loginSuccess(userInfo) ) {<newline46mondego>   ActionContext context = ActionContext.getContext(); <newline46mondego>   initializeDatas(context); // calling thread after userInfo bean validated<newline46mondego>   // redirecting to home page<newline46mondego>   return HOME_PAGE;<newline46mondego>}<newline46mondego>"
"1517splitHere46","12751470splitHere46","Math.PI"
"1518splitHere46","12751507splitHere46","# Set the default logging level for all loggers to WARNING<newline46mondego>.level = DEBUG<newline46mondego>"
"1519splitHere46","12751631splitHere46","JTextField tf = new JTextField();<newline46mondego>tf.setColor(Color.RED);<newline46mondego>"
"1520splitHere46","12751801splitHere46","System.out.println(<doubleQuotes46>before deleting: <doubleQuotes46> +tempAns + <doubleQuotes46>\n<doubleQuotes46>);<newline46mondego>        double num2 = Double.parseDouble(tempAns.remove(tempAns.size()-1));<newline46mondego>        double num1 = Double.parseDouble(tempAns.remove(tempAns.size()-1));<newline46mondego>        double ans = num1 + num2;<newline46mondego>        String stringAns = Double.toString(ans);<newline46mondego><newline46mondego>        System.out.println(<doubleQuotes46>before adding: <doubleQuotes46> +tempAns);<newline46mondego>        tempAns.add(stringAns);<newline46mondego>        System.out.println(num1 + <doubleQuotes46> + <doubleQuotes46> +num2+ <doubleQuotes46> = <doubleQuotes46> +ans);<newline46mondego>        System.out.println(<doubleQuotes46>after deleting: <doubleQuotes46> +tempAns + <doubleQuotes46>\n<doubleQuotes46>);<newline46mondego>"
"1521splitHere46","12751838splitHere46","ActionListener"
"1522splitHere46","12751838splitHere46","FocusListener"
"1523splitHere46","12751838splitHere46","import java.awt.event.*;<newline46mondego>import javax.swing.*;<newline46mondego><newline46mondego>public class Example extends Box{<newline46mondego><newline46mondego>    JLabel txtName = new JLabel(<doubleQuotes46>Nothing Entered<doubleQuotes46>);<newline46mondego><newline46mondego>    public temp(){<newline46mondego>        super(BoxLayout.Y_AXIS);<newline46mondego>        // Add FocusListener to first field<newline46mondego>        final JTextField txtNo = new JTextField(20);<newline46mondego>        txtNo.addFocusListener(new CustomFocusListener(txtNo));<newline46mondego>        add(txtNo);<newline46mondego><newline46mondego>        // Add TextListener to first field<newline46mondego>        final JTextField txtNo2 = new JTextField(20);<newline46mondego>        txtNo2.addFocusListener(new CustomFocusListener(txtNo2));<newline46mondego>        add(txtNo2);<newline46mondego><newline46mondego>        // Add TextListener to first field<newline46mondego>        final JTextField txtNo3 = new JTextField(20);<newline46mondego>        txtNo3.addFocusListener(new CustomFocusListener(txtNo3));<newline46mondego>        add(txtNo3);<newline46mondego><newline46mondego>        add(new JButton(<doubleQuotes46>Do Something<doubleQuotes46>));<newline46mondego><newline46mondego>        add(txtName);<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>    public static void main(String[] args){<newline46mondego>        final JFrame frame = new JFrame();<newline46mondego>        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        frame.add(new Example());<newline46mondego>        frame.pack();<newline46mondego>        frame.setLocationRelativeTo(null);<newline46mondego>        frame.setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * Your custom focust listener that does all your SQL Work<newline46mondego>     */<newline46mondego>    public class CustomFocusListener extends FocusAdapter{<newline46mondego>        JTextField field;<newline46mondego><newline46mondego>        public CustomFocusListener(JTextField field){<newline46mondego>            this.field = field;<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void focusLost(FocusEvent e) {<newline46mondego>            //Assuming your database connection works, this gives you an example to follow<newline46mondego>            txtName.setText(field.getText());<newline46mondego>            /*Connection conn = null;<newline46mondego>            try{<newline46mondego>                Class.forName(<doubleQuotes46>oracle.jdbc.driver.OracleDriver<doubleQuotes46>);<newline46mondego><newline46mondego>                conn = DriverManager.getConnection(<doubleQuotes46>jdbc:oracle:thin:@localhost:1521:XE<doubleQuotes46>, <doubleQuotes46>Username<doubleQuotes46>, <doubleQuotes46>Password<doubleQuotes46>);<newline46mondego>                Statement st = conn.createStatement();<newline46mondego>                String load = <doubleQuotes46>Select * from Store_info_table where PART_NUMBER = '<doubleQuotes46> + field.getText() + <doubleQuotes46>'<doubleQuotes46>;<newline46mondego>                ResultSet rs = st.executeQuery(load);<newline46mondego>                while(rs.next()){<newline46mondego>                   txtName.setText(rs.getString(<doubleQuotes46>SPARE_DESC<doubleQuotes46>));<newline46mondego>                }<newline46mondego>            }catch(Exception ae){<newline46mondego><newline46mondego>            }*/<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1524splitHere46","12751866splitHere46","ClassA"
"1525splitHere46","12751866splitHere46","bList"
"1526splitHere46","12751866splitHere46","getStatus"
"1527splitHere46","12751866splitHere46","public void statusIsPassedWhenEveryTestPassed()<newline46mondego>public void statusIsFailedWhenEveryTestFailed()<newline46mondego>public void statusIsFailedWhenSomeTestsPassedSomeFailed()<newline46mondego>public void statusIsPassedWhenNoTests()<newline46mondego>public void statusIsPassedWhenTestsNotSet() // this one currently fails<newline46mondego>"
"1528splitHere46","12751866splitHere46","ClassA"
"1529splitHere46","12751866splitHere46","bList"
"1530splitHere46","12751866splitHere46","getStatus"
"1531splitHere46","12751866splitHere46","ClassA"
"1532splitHere46","12752057splitHere46","t"
"1533splitHere46","12752057splitHere46","r"
"1534splitHere46","12752057splitHere46","f"
"1535splitHere46","12752057splitHere46","n"
"1536splitHere46","12752057splitHere46","results.download.location = c:\ters\nick<newline46mondego>"
"1537splitHere46","12752057splitHere46","\n"
"1538splitHere46","12752057splitHere46","\t"
"1539splitHere46","12752057splitHere46","\r"
"1540splitHere46","12752057splitHere46","\f"
"1541splitHere46","12752057splitHere46","\"
"1542splitHere46","12752057splitHere46","/"
"1543splitHere46","12752057splitHere46","\"
"1544splitHere46","12752057splitHere46","CustomProperties"
"1545splitHere46","12752057splitHere46","load"
"1546splitHere46","12752057splitHere46","Public class CustomProperties extends Properties {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public synchronized void load(InputStream inStream) throws IOException {<newline46mondego>        //custom implementation<newline46mondego>    }<newline46mondego> }<newline46mondego>"
"1547splitHere46","12752057splitHere46","CustomProperties"
"1548splitHere46","12752092splitHere46","float"
"1549splitHere46","12752092splitHere46","0.0065"
"1550splitHere46","12752092splitHere46","double"
"1551splitHere46","12752092splitHere46","0.001"
"1552splitHere46","12752092splitHere46","double"
"1553splitHere46","12752092splitHere46","float"
"1554splitHere46","12752092splitHere46","float"
"1555splitHere46","12752092splitHere46","double"
"1556splitHere46","12752092splitHere46","double"
"1557splitHere46","12752092splitHere46","float f = Float.parseFloat(<doubleQuotes46>0.0065<doubleQuotes46>) - 0.001f;<newline46mondego>"
"1558splitHere46","12752092splitHere46","0.001f"
"1559splitHere46","12752092splitHere46","0.001"
"1560splitHere46","12752108splitHere46","BiMap"
"1561splitHere46","12752108splitHere46","BiMap"
"1562splitHere46","12752108splitHere46","BiMap<Integer, String> idToName = HashBiMap.create();<newline46mondego>idToName.put(1, <doubleQuotes46>foo<doubleQuotes46>);<newline46mondego>idToName.inverse(); // returns a BiMap mapping <doubleQuotes46>foo<doubleQuotes46> to 1<newline46mondego>idToName.inverse().put(<doubleQuotes46>bar<doubleQuotes46>, 2); // idToName now has an extra mapping 2 -> <doubleQuotes46>bar<doubleQuotes46><newline46mondego>"
"1563splitHere46","12752155splitHere46","8453"
"1564splitHere46","12752155splitHere46","-Xdebug -Xrunjdwp:transport=dt_socket,address=8453,server=y,suspend=n<newline46mondego>"
"1565splitHere46","12752295splitHere46","indexOf"
"1566splitHere46","12752295splitHere46","O(m*n)"
"1567splitHere46","12752295splitHere46","n"
"1568splitHere46","12752295splitHere46","m"
"1569splitHere46","12752387splitHere46","static"
"1570splitHere46","12752387splitHere46","final"
"1571splitHere46","12752387splitHere46","private"
"1572splitHere46","12752387splitHere46","virtual"
"1573splitHere46","12752387splitHere46","virtual"
"1574splitHere46","12752396splitHere46","From January 1, 2011 through December 31, 2013, the use of SHA-1 is deprecated <newline46mondego>for digital signature generation. The user must accept risk when SHA-1 is used, <newline46mondego>particularly when approaching the December 31, 2013 upper limit.<newline46mondego>"
"1575splitHere46","12752396splitHere46","For all other hash function applications, the use of SHA-1 is acceptable. The <newline46mondego>other applications include HMAC, Key Derivation Functions (KDFs), Random Number <newline46mondego>Generation (RNGs and RBGs), and hash-only applications (e.g., hashing passwords <newline46mondego>and using SHA-1 to compute a checksum, such as the approved integrity technique <newline46mondego>specified in Section 4.6.1 of [FIPS 140-2]). <newline46mondego>"
"1576splitHere46","12752503splitHere46","JFrame"
"1577splitHere46","12752503splitHere46","Window"
"1578splitHere46","12752503splitHere46","Frame"
"1579splitHere46","12752503splitHere46","public class TestMacFullScreen {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        EventQueue.invokeLater(new Runnable() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego><newline46mondego>                JFrame frame = new JFrame(<doubleQuotes46>Test<doubleQuotes46>);<newline46mondego>                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>                frame.setSize(200, 200);<newline46mondego>                frame.setLocationRelativeTo(null);<newline46mondego>                frame.setLayout(new BorderLayout());<newline46mondego><newline46mondego>                JLabel label = new JLabel(<doubleQuotes46>Look ma, no hands<doubleQuotes46>);<newline46mondego><newline46mondego>                frame.add(label);<newline46mondego><newline46mondego>                enableOSXFullscreen(frame);<newline46mondego><newline46mondego>                frame.setVisible(true);<newline46mondego><newline46mondego><newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>    public static void enableOSXFullscreen(Window window) {<newline46mondego>        try {<newline46mondego>            Class util = Class.forName(<doubleQuotes46>com.apple.eawt.FullScreenUtilities<doubleQuotes46>);<newline46mondego>            Class params[] = new Class[]{Window.class, Boolean.TYPE};<newline46mondego>            Method method = util.getMethod(<doubleQuotes46>setWindowCanFullScreen<doubleQuotes46>, params);<newline46mondego>            method.invoke(util, window, true);<newline46mondego>        } catch (ClassNotFoundException exp) {<newline46mondego>            exp.printStackTrace();<newline46mondego>        } catch (Exception exp) {<newline46mondego>            exp.printStackTrace();<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1580splitHere46","12752522splitHere46","for (int i =0; i<100; i++) {<newline46mondego>    String ip = <doubleQuotes46>192.168.1.<doubleQuotes46> + i<newline46mondego>    InetAddress address = InetAddress.getByAddress(ip); <newline46mondego>}<newline46mondego>"
"1581splitHere46","12752536splitHere46","add*()"
"1582splitHere46","12752536splitHere46","insert*()"
"1583splitHere46","12752536splitHere46","<g:DockLayoutPanel ui:field=<doubleQuotes46>myDockPanel<doubleQuotes46>><newline46mondego>    <g:north size=<doubleQuotes46>100<doubleQuotes46>><newline46mondego>        <g:Label ui:field=<doubleQuotes46>northernLabel<doubleQuotes46>>I am far north</g:Label><newline46mondego>    </g:north><newline46mondego>    <g:center><newline46mondego>        <g:Label ui:field=<doubleQuotes46>centerLabel<doubleQuotes46>>Center Stage</g:Label><newline46mondego>    </g:center><newline46mondego></g:DockLayoutPanel><newline46mondego>"
"1584splitHere46","12752536splitHere46","myDockPanel.insertNorth(new Label(<doubleQuotes46>I am even farther north!<doubleQuotes46>), 100.0, northernLabel);<newline46mondego>"
"1585splitHere46","12752554splitHere46","Listener"
"1586splitHere46","12752554splitHere46","Display"
"1587splitHere46","12752554splitHere46","Listener listener = new Listener() {<newline46mondego>    public void handleEvent(Event event) {<newline46mondego>        System.out.println(event.character);<newline46mondego>    }<newline46mondego>}<newline46mondego>getShell().getDisplay().addFilter(SWT.KeyDown, listener);<newline46mondego>"
"1588splitHere46","12752554splitHere46","close()"
"1589splitHere46","12752554splitHere46","Dialog"
"1590splitHere46","12752554splitHere46","@Override<newline46mondego>public boolean close()<newline46mondego>{<newline46mondego>    getShell().getDisplay().removeFilter(SWT.KeyDown, listener);<newline46mondego>    super.close();<newline46mondego>}<newline46mondego>"
"1591splitHere46","12752626splitHere46","private static boolean isRecommended(Fruit fruit) {<newline46mondego>    if(fruit.weight > 2)<newline46mondego>        return false;<newline46mondego>    if(!<doubleQuotes46>red<doubleQuotes46>.equals(fruit.color))<newline46mondego>        return false;<newline46mondego>    if(!<doubleQuotes46>sweet<doubleQuotes46>.equals(fruit.taste))<newline46mondego>        return false;<newline46mondego>    if(!fruit.isPerishable)<newline46mondego>        return false;<newline46mondego>    return true;<newline46mondego>}<newline46mondego>"
"1592splitHere46","12752730splitHere46","find_java.bat"
"1593splitHere46","12752730splitHere46","find_java.bat"
"1594splitHere46","12752730splitHere46","for /f %%a in ('%~dps0\find_java.exe -s') do set java_exe=%%a<newline46mondego>"
"1595splitHere46","12752730splitHere46","for /F [<doubleQuotes46>ParsingKeywords<doubleQuotes46>] {%% | %}variable in (filenameset) do command [CommandLineOptions]<newline46mondego>"
"1596splitHere46","12752730splitHere46","<doubleQuotes46>ParsingKeywords<doubleQuotes46>"
"1597splitHere46","12752730splitHere46","%%"
"1598splitHere46","12752730splitHere46","%"
"1599splitHere46","12752730splitHere46","'%~dps0\find_java.exe -s'"
"1600splitHere46","12752730splitHere46","find_java.exe -s"
"1601splitHere46","12752730splitHere46","find_java.exe"
"1602splitHere46","12752730splitHere46","find_java.bat"
"1603splitHere46","12752730splitHere46","rem"
"1604splitHere46","12752730splitHere46","@echo off"
"1605splitHere46","12752730splitHere46","java_exe"
"1606splitHere46","12752730splitHere46","find_java.bat"
"1607splitHere46","12752730splitHere46","cmd"
"1608splitHere46","12752730splitHere46","C:\Program Files\Android\android-sdk\tools\lib>for /F %a in ('C:\PROGRA~1\ANDROID\ANDROI~1\tools\lib\FIND_J~1\find_java.exe -s') do set java_exe=%a<newline46mondego>The system cannot find the path specified.<newline46mondego><newline46mondego>C:\Program Files\Android\android-sdk\tools\lib>echo ************ java_exe=<newline46mondego>************ java_exe=<newline46mondego>"
"1609splitHere46","12752730splitHere46","java_exe"
"1610splitHere46","12752730splitHere46","C:\PROGRA~1\ANDROID\ANDROI~1\tools\lib\FIND_J~1\find_java.exe"
"1611splitHere46","12752730splitHere46","C:\PROGRA~1\ANDROID\ANDROI~1\tools\lib\find_java.exe"
"1612splitHere46","12752730splitHere46","modifiers"
"1613splitHere46","12752730splitHere46","find_java.exe"
"1614splitHere46","12752730splitHere46","find_java.bat"
"1615splitHere46","12752730splitHere46","%0"
"1616splitHere46","12752730splitHere46","find_java.exe"
"1617splitHere46","12752730splitHere46","java_exe"
"1618splitHere46","12752730splitHere46","command"
"1619splitHere46","12752730splitHere46","java_exe"
"1620splitHere46","12752730splitHere46","s"
"1621splitHere46","12752730splitHere46","'%~dps0\find_java.exe -s'"
"1622splitHere46","12752730splitHere46","for /f %%a in ('<doubleQuotes46>%~dp0\find_java.exe<doubleQuotes46> -s') do set java_exe=%%a<newline46mondego>"
"1623splitHere46","12752730splitHere46","s"
"1624splitHere46","12752759splitHere46","HttpPost post = new HttpPost(uri);<newline46mondego>MultipartEntity entity = new MultipartEntity();<newline46mondego><newline46mondego>for (NameValuePair param : params) {<newline46mondego>    entity.addPart(param.getName(), new StringBody(param.getValue()));<newline46mondego>}<newline46mondego><newline46mondego>post.setEntity(entity);<newline46mondego><newline46mondego>try {<newline46mondego>    HttpResponse response = client.execute(post);<newline46mondego>    // do something with the response<newline46mondego>} catch (ClientProtocolException ex | IOException ex) {<newline46mondego>    // deal with exception<newline46mondego>}<newline46mondego>"
"1625splitHere46","12752850splitHere46","for(String line : myArrayList)<newline46mondego>{<newline46mondego>    StringTokenizer st = new StringTokenizer(line, <doubleQuotes46>;<doubleQuotes46>);<newline46mondego>    String author = st.nextToken();<newline46mondego>    //etc.<newline46mondego>}<newline46mondego>"
"1626splitHere46","12752943splitHere46","dispatch"
"1627splitHere46","12752943splitHere46","def dispatch expandComparator(GreaterThan gt) '''<newline46mondego>    printf(<doubleQuotes46>%c<doubleQuotes46>, i < «gt.value» ? '.' : 'F');<newline46mondego>'''<newline46mondego><newline46mondego>def dispatch expandComparator(EqualTo eq) '''<newline46mondego>    printf(<doubleQuotes46>%c<doubleQuotes46>, i == «eq.value» ? '.' : 'F');<newline46mondego>'''<newline46mondego><newline46mondego>def dispatch expandComparator(LessThan lt) '''<newline46mondego>    printf(<doubleQuotes46>%c<doubleQuotes46>, i < «lt.value» ? '.' : 'F');<newline46mondego>'''<newline46mondego>"
"1628splitHere46","12752943splitHere46","«FOR c:v.comparisons»<newline46mondego>    «c.expandComparator»<newline46mondego>«ENDFOR»<newline46mondego>"
"1629splitHere46","12752943splitHere46","compile"
"1630splitHere46","12753293splitHere46","/lib"
"1631splitHere46","12753447splitHere46","CLASS"
"1632splitHere46","12753447splitHere46","FIELD"
"1633splitHere46","12753447splitHere46","FIELD fields*"
"1634splitHere46","12753447splitHere46","METHOD"
"1635splitHere46","12753447splitHere46","METHOD methods*"
"1636splitHere46","12753447splitHere46","field"
"1637splitHere46","12753447splitHere46","method"
"1638splitHere46","12753447splitHere46","-> ^(CLASS ID ^(FIELD fields*) ^(METHOD methods)<newline46mondego>"
"1639splitHere46","12753447splitHere46","body"
"1640splitHere46","12753447splitHere46","grammar temp;<newline46mondego>options {output=AST;}<newline46mondego>tokens { KLASS; FIELD; METHOD; }<newline46mondego><newline46mondego>klass   :   'class' ID body -> ^(KLASS ID body)<newline46mondego>        ;<newline46mondego><newline46mondego>body    :   '{'!<newline46mondego>                (field | method) *<newline46mondego>            '}'! <newline46mondego>        ;<newline46mondego><newline46mondego>field   : 'field' INT -> ^(FIELD INT)<newline46mondego>        ;<newline46mondego><newline46mondego>method  : 'method' INT -> ^(METHOD INT)<newline46mondego>        ;<newline46mondego><newline46mondego>ID      : ('a'..'z')+;<newline46mondego>INT     : ('0'..'9')+;<newline46mondego>WS      : (' '|'\r'|'\n')+ {$channel = HIDDEN;} ;<newline46mondego>"
"1641splitHere46","12753447splitHere46","-KLASS<newline46mondego>   -abc<newline46mondego>   -FIELD<newline46mondego>      -1<newline46mondego>   -FIELD<newline46mondego>      -2<newline46mondego>   -METHOD<newline46mondego>      -1<newline46mondego>   -METHOD<newline46mondego>      -2<newline46mondego>   -FIELD<newline46mondego>      -3<newline46mondego>   -METHOD<newline46mondego>      -3<newline46mondego>   -FIELD<newline46mondego>      -4<newline46mondego>"
"1642splitHere46","12753447splitHere46","klass"
"1643splitHere46","12753475splitHere46","PreparedStatement"
"1644splitHere46","12753475splitHere46","PreparedStatement.setTimestamp"
"1645splitHere46","12753678splitHere46","words"
"1646splitHere46","12753678splitHere46","pop()"
"1647splitHere46","12753678splitHere46","final String CORRECT_WORD = words.pop();<newline46mondego>"
"1648splitHere46","12753678splitHere46","Vector"
"1649splitHere46","12753678splitHere46","elementAt(0)"
"1650splitHere46","12753678splitHere46","final String CORRECT_WORD = words.elementAt(0);<newline46mondego>"
"1651splitHere46","12753699splitHere46","class WaitThread extends Thread {<newline46mondego>    CallBackObj callback;<newline46mondego><newline46mondego>    public WaitThread(CallBackObj callback) {<newline46mondego>      this.text = callback;<newline46mondego>      // assume CORBA stuff initiated here<newline46mondego>    }<newline46mondego><newline46mondego>    public void run() {<newline46mondego>      Object expectedObj = null;<newline46mondego>      do<newline46mondego>      {<newline46mondego>         try { expectedObj = ncRef.resolve_str(<doubleQuotes46>expectedToBeInNameService<doubleQuotes46>); } <newline46mondego>         catch (NotFound e) {}<newline46mondego>         Thread.sleep(2000);<newline46mondego>      } while(expectedObj == null;<newline46mondego>      callback.notifyMethodExample();<newline46mondego>    }<newline46mondego>  }<newline46mondego>"
"1652splitHere46","12753699splitHere46","WaitThread wt = new WaitThread(this);<newline46mondego>wt.start();<newline46mondego><newline46mondego><newline46mondego>interface CallBackObj {<newline46mondego> void notifyMethodExample();<newline46mondego><newline46mondego>}<newline46mondego>"
"1653splitHere46","12753808splitHere46","TrackInstruments trackInstruments = new TrackInstruments(instrumentsInfo.getInstrumentID(shortInstruName), instrumentsInfo.getInstrumentTickSize(shortInstruName), instrumentsInfo.getInstrumentName(shortInstruName));<newline46mondego>"
"1654splitHere46","12753808splitHere46","TrackInstruments trackInstruments = new TrackInstruments(instrumentsInfo);<newline46mondego>"
"1655splitHere46","12753808splitHere46","InstrumentsInfo"
"1656splitHere46","12753808splitHere46","TrackInstruments"
"1657splitHere46","12753836splitHere46","// First time you start TonosSet activity (without extra)<newline46mondego> // If you want to start TonosSet activity only once, comment two following line<newline46mondego> Intent tonosset = new Intent(Tonos.this, TonosSet.class);<newline46mondego> startActivity(tonosset);<newline46mondego><newline46mondego> // Second time you start TonosSet activity (with extra this time)<newline46mondego> Intent i = new Intent(getApplicationContext(), TonosSet.class);<newline46mondego> i.putExtra(<doubleQuotes46>id<doubleQuotes46>, position);<newline46mondego> startActivity(i);<newline46mondego>"
"1658splitHere46","12753836splitHere46","Intent i = getIntent();<newline46mondego>int position = -1; // init with default value<newline46mondego>if(i.getExtras() != null)<newline46mondego>    position = i.getExtras().getInt(<doubleQuotes46>id<doubleQuotes46>);<newline46mondego>"
"1659splitHere46","12754095splitHere46","Object o1 = //whatever;<newline46mondego>Object o2 = //whatever;<newline46mondego><newline46mondego>return o1 * o2;<newline46mondego>"
"1660splitHere46","12754095splitHere46","Double GetArea() { return base.doubleValue() * hauteur.doubleValue() / 2; }<newline46mondego>"
"1661splitHere46","12754293splitHere46","Object"
"1662splitHere46","12754293splitHere46","Integer"
"1663splitHere46","12754293splitHere46","interface TreeFolder {<newline46mondego>    Object onEmpty();<newline46mondego>    Object onLeaf (int n);<newline46mondego>    Object onNode (Tree l, Tree r);<newline46mondego>}<newline46mondego><newline46mondego>interface Tree {<newline46mondego>    Object fold (TreeFolder f);<newline46mondego>}<newline46mondego><newline46mondego>class Empty implements Tree {<newline46mondego>    Object fold (TreeFolder f) {<newline46mondego>        return f.onEmpty();<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class Leaf implements Tree {<newline46mondego>    private int n;<newline46mondego>    Object fold (TreeFolder f) {<newline46mondego>        return f.onLeaf (n);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class Node implements Tree {<newline46mondego>    private Tree l, r;<newline46mondego>    Object fold (TreeFolder f) {<newline46mondego>        return f.onNode (l, r);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>// meanwhile, in a class in another package far far away...<newline46mondego>Object depth (Tree tree) {<newline46mondego>    return tree.fold (new TreeFolder() {<newline46mondego>        Object onEmpty() { return new Integer(0); }<newline46mondego>        Object onLeaf (int n) { return new Integer(n); }<newline46mondego>        Object onNode (Tree l, Tree r) {<newline46mondego>            Integer ll = (Integer) l.fold (this);<newline46mondego>            Integer rr = (Integer) r.fold (this);<newline46mondego>            return new Integer (ll.intValue() + rr.intValue());<newline46mondego>        }<newline46mondego>    });<newline46mondego>}<newline46mondego>"
"1664splitHere46","12754293splitHere46","depth()"
"1665splitHere46","12754293splitHere46","fold()"
"1666splitHere46","12754293splitHere46","Tree"
"1667splitHere46","12754293splitHere46","Node.fold()"
"1668splitHere46","12754293splitHere46","TreeFolder"
"1669splitHere46","12754341splitHere46","StateListDrawable states = new StateListDrawable();<newline46mondego>int yourBackgroundColor = Color.parseColor(<doubleQuotes46>#FFFFFF<doubleQuotes46>);<newline46mondego>// Add specific color when your view has state 'pressed'<newline46mondego>states.addState(new int[] {android.R.attr.state_pressed}, new ColorDrawable(yourBackgroundColor));<newline46mondego>// Add other states wanted and associated drawable<newline46mondego>// ...<newline46mondego>// As StateListDrawable extend Drawable, you can use it as background for exemple       <newline46mondego>yourView.setBackground(states);<newline46mondego>"
"1670splitHere46","12754341splitHere46","states.addState(new int[] { -android.R.attr.state_focused,<newline46mondego>                            android.R.attr.state_selected,<newline46mondego>                            -android.R.attr.state_pressed}, ColorDrawable(yourBackgroundColor));<newline46mondego>"
"1671splitHere46","12754508splitHere46","import javafx.application.Application;<newline46mondego>import javafx.geometry.Pos;<newline46mondego>import javafx.scene.Scene;<newline46mondego>import javafx.scene.control.Label;<newline46mondego>import javafx.scene.layout.*;<newline46mondego>import javafx.scene.media.*;<newline46mondego>import javafx.scene.paint.Color;<newline46mondego>import javafx.stage.Stage;<newline46mondego><newline46mondego>/** plays an mp4 video in JavaFX 2.1+ */<newline46mondego>public class OnlineVideoPlayer extends Application {<newline46mondego>  public static void main(String[] args) { launch(args); }<newline46mondego>  @Override public void start(Stage stage) {<newline46mondego>    final Label status = new Label(<doubleQuotes46>Init<doubleQuotes46>);<newline46mondego>    MediaPlayer mediaPlayer = createMediaPlayer(<newline46mondego>      <doubleQuotes46>http://static.clipcanvas.com/sample/clipcanvas_14348_H264_320x180.mp4<doubleQuotes46>, <newline46mondego>      status<newline46mondego>    );<newline46mondego>    VBox layout = new VBox(10);<newline46mondego>    layout.setAlignment(Pos.CENTER);<newline46mondego>    layout.getChildren().addAll(new MediaView(mediaPlayer), status);<newline46mondego>    stage.setScene(new Scene(layout, 500, 300, Color.CORNSILK));<newline46mondego>    stage.show();<newline46mondego>    if (mediaPlayer != null) {<newline46mondego>      mediaPlayer.play();<newline46mondego>    }  <newline46mondego>  }<newline46mondego><newline46mondego>  /** <newline46mondego>   * creates a media player using a url to the media<newline46mondego>   * and tracks the status of playing the media via the status label <newline46mondego>   */<newline46mondego>  private MediaPlayer createMediaPlayer(final String url, final Label status) {<newline46mondego>    Media hit = new Media(url);<newline46mondego>    MediaPlayer mediaPlayer = new MediaPlayer(hit);<newline46mondego>    mediaPlayer.setOnError(new Runnable() {<newline46mondego>      @Override public void run() {<newline46mondego>        status.setText(<doubleQuotes46>Error<doubleQuotes46>);<newline46mondego>      }<newline46mondego>    });<newline46mondego>    mediaPlayer.setOnPlaying(new Runnable() {<newline46mondego>      @Override public void run() {<newline46mondego>        status.setText(<doubleQuotes46>Playing: <doubleQuotes46> + url);<newline46mondego>      }<newline46mondego>    });<newline46mondego>    mediaPlayer.setOnEndOfMedia(new Runnable() {<newline46mondego>      @Override public void run() {<newline46mondego>        status.setText(<doubleQuotes46>Done<doubleQuotes46>);<newline46mondego>      }<newline46mondego>    });<newline46mondego>    return mediaPlayer;<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"1672splitHere46","12754512splitHere46","_"
"1673splitHere46","12754512splitHere46","public static void main(String[] args) {<newline46mondego>    String s = <doubleQuotes46>123 sdkjh s;sdlkjh d<doubleQuotes46>;<newline46mondego>    StringBuilder sb = new StringBuilder();<newline46mondego>    if(!Character.isJavaIdentifierStart(s.charAt(0))) {<newline46mondego>        sb.append(<doubleQuotes46>_<doubleQuotes46>);<newline46mondego>    }<newline46mondego>    for (char c : s.toCharArray()) {<newline46mondego>        if(!Character.isJavaIdentifierPart(c)) {<newline46mondego>            sb.append(<doubleQuotes46>_<doubleQuotes46>);<newline46mondego>        } else {<newline46mondego>            sb.append(c);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    System.out.println(sb);<newline46mondego>}<newline46mondego>"
"1674splitHere46","12754548splitHere46","9 << 1 == 18<newline46mondego>"
"1675splitHere46","12754548splitHere46","<doubleQuotes46>9<doubleQuotes46>"
"1676splitHere46","12754548splitHere46","<doubleQuotes46>18<doubleQuotes46>"
"1677splitHere46","12754600splitHere46","temp.replaceFirst(<doubleQuotes46>^\\s*<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>)<newline46mondego>"
"1678splitHere46","12754729splitHere46","private List<String> runNexusCommandViaSSH(String sshuser, String sshpass, String sshhost, String command) throws JSchException, IOException {<newline46mondego>    List<String> results = new ArrayList<String>();<newline46mondego><newline46mondego>    java.util.Properties config = new java.util.Properties();<newline46mondego>    config.put(<doubleQuotes46>StrictHostKeyChecking<doubleQuotes46>, <doubleQuotes46>no<doubleQuotes46>);<newline46mondego><newline46mondego>    JSch jsch = new JSch();<newline46mondego><newline46mondego>    Session session = jsch.getSession(sshuser, sshhost, 22);<newline46mondego><newline46mondego>    session.setPassword(sshpass);<newline46mondego>    session.setConfig(config);<newline46mondego>    session.setTimeout(10000);<newline46mondego>    session.connect();<newline46mondego><newline46mondego>    Channel channel = session.openChannel(<doubleQuotes46>shell<doubleQuotes46>);<newline46mondego><newline46mondego>    channel.setInputStream(null);<newline46mondego>    channel.setOutputStream(null);<newline46mondego><newline46mondego>    InputStream in = channel.getInputStream();<newline46mondego>    OutputStream out = channel.getOutputStream();<newline46mondego><newline46mondego>    ((ChannelShell)channel).setPtyType(<doubleQuotes46>vt102<doubleQuotes46>);<newline46mondego>    channel.connect();<newline46mondego><newline46mondego>    byte[] tmp=new byte[1024];<newline46mondego><newline46mondego>    out.write((command + <doubleQuotes46>;exit<doubleQuotes46>).getBytes());<newline46mondego>    out.write((<doubleQuotes46>\n<doubleQuotes46>).getBytes());<newline46mondego>    out.flush();<newline46mondego><newline46mondego>    while (true) {  <newline46mondego><newline46mondego>        while (in.available() > 0) {<newline46mondego>            int i = in.read(tmp, 0, 1024);<newline46mondego>            if (i < 0) {<newline46mondego>                //System.out.println(<doubleQuotes46>[debug] breaking at i < 0<doubleQuotes46>);<newline46mondego>                break;<newline46mondego>            }<newline46mondego>            String buffer = new String(tmp, 0, i);<newline46mondego>            results.add(buffer);<newline46mondego>            //System.out.println(<doubleQuotes46>[debug]<doubleQuotes46> + buffer);<newline46mondego>            if(buffer.contains(<doubleQuotes46>REMOTE JSH COMMAND FINISHED<doubleQuotes46>)){<newline46mondego>                System.out.println(<doubleQuotes46>[debug] breaking at finished<doubleQuotes46>);<newline46mondego>                break;<newline46mondego>            }<newline46mondego>        }<newline46mondego>        if (channel.isClosed()) {<newline46mondego>            //System.out.println(<doubleQuotes46>[debug] breaking at isClosed<doubleQuotes46>);<newline46mondego>            in.close();<newline46mondego>            break;<newline46mondego>        }<newline46mondego>    }<newline46mondego>    channel.disconnect();<newline46mondego>    session.disconnect();<newline46mondego><newline46mondego>    return results;<newline46mondego>}<newline46mondego>"
"1679splitHere46","12754803splitHere46","-Xlint:deprecation -Werror"
"1680splitHere46","12754818splitHere46","for(int i = 1; i <= totalRows; i++) {<newline46mondego>    Row row = sheet.getRow(i);<newline46mondego>    Cell cell = row.getCell(2);<newline46mondego>    if (cell == null) {<newline46mondego>        cell = row.createCell(2);<newline46mondego>    }<newline46mondego>    cell.setCellType(Cell.CELL_TYPE_STRING);<newline46mondego>    cell.setCellValue(<doubleQuotes46>some value<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"1681splitHere46","12754818splitHere46","FileOutputStream fos = new FileOutputStream(fileName);<newline46mondego>workbook.write(fos);<newline46mondego>fos.close();<newline46mondego>"
"1682splitHere46","12754846splitHere46","query = new Query(Criteria.where(<doubleQuotes46>path<doubleQuotes46>).regex(<doubleQuotes46>^([A-Z]|[a-z])+,$<doubleQuotes46>));<newline46mondego>"
"1683splitHere46","12754894splitHere46","=="
"1684splitHere46","12754894splitHere46","!="
"1685splitHere46","12754894splitHere46",">"
"1686splitHere46","12754894splitHere46","<"
"1687splitHere46","12754894splitHere46","=="
"1688splitHere46","12754894splitHere46","!="
"1689splitHere46","12754894splitHere46","=="
"1690splitHere46","12754894splitHere46",".equals"
"1691splitHere46","12754894splitHere46","String.compareTo"
"1692splitHere46","12754894splitHere46","Object.equals"
"1693splitHere46","12754894splitHere46","=="
"1694splitHere46","12754894splitHere46","equals"
"1695splitHere46","12754894splitHere46","String"
"1696splitHere46","12754894splitHere46","equals"
"1697splitHere46","12754894splitHere46",".equals"
"1698splitHere46","12754894splitHere46",".equals"
"1699splitHere46","12754933splitHere46","Intent i = new Intent(getApplicationContext(), MainActivity.class);<newline46mondego>i.putExtra(<doubleQuotes46>layout<doubleQuotes46>, R.layout.a_layout.xml);<newline46mondego>"
"1700splitHere46","12754933splitHere46","int layout = getIntent().getIntExtra(<doubleQuotes46>layout<doubleQuotes46>, R.layout.default_layout);<newline46mondego>setContentView(layout);<newline46mondego>"
"1701splitHere46","12755039splitHere46","org.apache.http.conn.ssl.StrictHostnameVerifier"
"1702splitHere46","12755039splitHere46","HttpClientFactory"
"1703splitHere46","12755039splitHere46","===================================================================<newline46mondego>--- src/main/java/com/amazonaws/http/HttpClientFactory.java     (thirdparty/aws)      (revision 20105)<newline46mondego>+++ src/main/java/com/amazonaws/http/HttpClientFactory.java     (thirdparty/aws)    (working copy)<newline46mondego>@@ -93,7 +93,7 @@<newline46mondego><newline46mondego>                        SSLSocketFactory sf = new SSLSocketFactory(<newline46mondego>                                SSLContext.getDefault(),<newline46mondego>-                               SSLSocketFactory.STRICT_HOSTNAME_VERIFIER);<newline46mondego>+                               SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER);<newline46mondego>"
"1704splitHere46","12755039splitHere46","STRICT"
"1705splitHere46","12755039splitHere46","SSLSocketFactory.getSystemSocketFactory().setHostnameVerifier(<newline46mondego>    SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER);<newline46mondego>"
"1706splitHere46","12755132splitHere46","void componentResized(ComponentEvent e)"
"1707splitHere46","12755197splitHere46","null"
"1708splitHere46","12755291splitHere46","System.out.print(<doubleQuotes46>Enter Price for your item<doubleQuotes46> + <doubleQuotes46>30<doubleQuotes46> );"
"1709splitHere46","12755291splitHere46","keyboard.nextInt"
"1710splitHere46","12755291splitHere46","System.out.print(<doubleQuotes46>Enter Price for your item<doubleQuotes46> + <doubleQuotes46>30<doubleQuotes46> );<newline46mondego>int cost = keyboard.nextInt ();<newline46mondego>"
"1711splitHere46","12755352splitHere46","//select[@name='suffix']/option[@value='Ms.']<newline46mondego>"
"1712splitHere46","12755389splitHere46","database.getFile"
"1713splitHere46","12755389splitHere46","sendViaHTTP"
"1714splitHere46","12755389splitHere46","try/finally"
"1715splitHere46","12755389splitHere46","Lock.unlock"
"1716splitHere46","12755487splitHere46","id"
"1717splitHere46","12755487splitHere46","<a href=<doubleQuotes46>/myapp/mypage.jsp?id=<doubleQuotes46><%out.println(list1[i]);%><doubleQuotes46>>Link <%out.println(list1[i]);%></a><newline46mondego>"
"1718splitHere46","12755487splitHere46","<c:forEach items=<doubleQuotes46>${res}<doubleQuotes46> var=<doubleQuotes46>id<doubleQuotes46>><newline46mondego>   <tr><td><a href=<doubleQuotes46>/myapp/mypage.jsp?id=${id}<doubleQuotes46>>Link ${id}</a></td></tr><newline46mondego></c:forEach><newline46mondego>"
"1719splitHere46","12755535splitHere46","Form<?> form2 = new Form<Void>(<doubleQuotes46>form2<doubleQuotes46>) {<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void onSubmit() {<newline46mondego>        StartPage.this.replace( load.tick() );<newline46mondego>        // or you can use <newline46mondego>        // StartPage.this.addOrReplace( load.tick() ) <newline46mondego>        // instead<newline46mondego>    }<newline46mondego>};<newline46mondego>"
"1720splitHere46","12755535splitHere46","final Load load = new Load();<newline46mondego><newline46mondego>Form<?> form2 = new Form<Void>(<doubleQuotes46>form2<doubleQuotes46>) {<newline46mondego>    @Override<newline46mondego>    protected void onSubmit() {<newline46mondego>        StartPage.this.replace( createDataView( load.tick() ) );<newline46mondego>    }<newline46mondego>};<newline46mondego>add(form2);<newline46mondego><newline46mondego>add( createDataView( new ArrayList() ) );<newline46mondego>"
"1721splitHere46","12755535splitHere46","private DataView createDataView(List list) {<newline46mondego>    return new DataView(<doubleQuotes46>listview<doubleQuotes46>, new ListDataProvider(list)) {<newline46mondego>        public void populateItem(final Item item) {<newline46mondego>            final DBUser user = (DBUser) item.getModelObject();<newline46mondego>            item.add(new Label(<doubleQuotes46>id<doubleQuotes46>, String.valueOf(user.getid())));<newline46mondego>        }<newline46mondego>    };<newline46mondego>}<newline46mondego>"
"1722splitHere46","12755535splitHere46","public class Load {<newline46mondego><newline46mondego>    public List tick() {<newline46mondego>        List result = new ArrayList();<newline46mondego>        // ...<newline46mondego>        // populate list from database<newline46mondego>        // ...<newline46mondego>        return result;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1723splitHere46","12755550splitHere46","return"
"1724splitHere46","12755550splitHere46","a+=1"
"1725splitHere46","12755550splitHere46","a+=1"
"1726splitHere46","12755550splitHere46","if"
"1727splitHere46","12755550splitHere46","false"
"1728splitHere46","12755690splitHere46","import java.util.regex.*;<newline46mondego>public class TEST {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        Pattern re = Pattern.compile(<newline46mondego>            <doubleQuotes46>  # Match URI having command=shutdown query variable value. \n<doubleQuotes46> +<newline46mondego>            <doubleQuotes46>  ^                          # Anchor to start of string.   \n<doubleQuotes46> +<newline46mondego>            <doubleQuotes46>  (?:[^:/?\\#\\s]+:)?        # URI scheme (Optional).       \n<doubleQuotes46> +<newline46mondego>            <doubleQuotes46>  (?://[^/?\\#\\s]*)?        # URI authority (Optional).    \n<doubleQuotes46> +<newline46mondego>            <doubleQuotes46>  [^?\\#\\s]*                # URI path.                    \n<doubleQuotes46> +<newline46mondego>            <doubleQuotes46>  \\?                        # Literal start of URI query.  \n<doubleQuotes46> +<newline46mondego>            <doubleQuotes46>    # Match var=value pairs preceding 'command=xxx'.        \n<doubleQuotes46> +<newline46mondego>            <doubleQuotes46>  (?:                        # Zero or more 'var=values'    \n<doubleQuotes46> +<newline46mondego>            <doubleQuotes46>    (?!command=)             # only if not-'command=xxx'.   \n<doubleQuotes46> +<newline46mondego>            <doubleQuotes46>    [^&\\#\\s]*              # Next var=value.              \n<doubleQuotes46> +<newline46mondego>            <doubleQuotes46>    &                        # var=value separator.         \n<doubleQuotes46> +<newline46mondego>            <doubleQuotes46>  )*                         # Zero or more 'var=values'    \n<doubleQuotes46> +<newline46mondego>            <doubleQuotes46>  command=shutdown           # variable and value to match. \n<doubleQuotes46> +<newline46mondego>            <doubleQuotes46>    # Match var=value pairs following 'command=shutdown'.   \n<doubleQuotes46> +<newline46mondego>            <doubleQuotes46>  (?:                        # Zero or more 'var=values'    \n<doubleQuotes46> +<newline46mondego>            <doubleQuotes46>    &                        # var=value separator.         \n<doubleQuotes46> +<newline46mondego>            <doubleQuotes46>    (?!command=)             # only if not-'command=xxx'.   \n<doubleQuotes46> +<newline46mondego>            <doubleQuotes46>    [^&\\#\\s]*              # Next var=value.              \n<doubleQuotes46> +<newline46mondego>            <doubleQuotes46>  )*                         # Zero or more 'var=values'    \n<doubleQuotes46> +<newline46mondego>            <doubleQuotes46>  (?:\\#\\S*)?               # URI fragment (Optional).     \n<doubleQuotes46> +<newline46mondego>            <doubleQuotes46>  $                          # Anchor to end of string.<doubleQuotes46>, <newline46mondego>            Pattern.CASE_INSENSITIVE | Pattern.UNICODE_CASE | Pattern.COMMENTS);<newline46mondego>        String s = <doubleQuotes46>/exec?version=0.4&command=shutdown&out=JSON&zcommand=1<doubleQuotes46>;<newline46mondego>            // Should match<newline46mondego>//      String s = <doubleQuotes46>/exec?version=0.4&command=startup&out=JSON&zcommand=1&commando=shutdown<doubleQuotes46>;<newline46mondego>            // Should fail to match <newline46mondego>//      String s = <doubleQuotes46>/exec?command=shutdown&out=JSON<doubleQuotes46>;<newline46mondego>            // Should match<newline46mondego>//      String s = <doubleQuotes46>/exec?version=0.4&command=admin&out=JSON&zcommand=1&command=shutdown<doubleQuotes46>;<newline46mondego>        // Should fail to match<doubleQuotes46>;<newline46mondego>        Matcher m = re.matcher(s);<newline46mondego>        if (m.find()) {<newline46mondego>            // Successful match<newline46mondego>            System.out.print(<doubleQuotes46>Match found.\n<doubleQuotes46>);<newline46mondego>        } else {<newline46mondego>            // Match attempt failed<newline46mondego>            System.out.print(<doubleQuotes46>No match found.\n<doubleQuotes46>);<newline46mondego>        } <newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1729splitHere46","12755690splitHere46","<doubleQuotes46>command<doubleQuotes46>"
"1730splitHere46","12755690splitHere46","<doubleQuotes46>shutdown<doubleQuotes46>"
"1731splitHere46","12755694splitHere46","Canvas.keyPressed"
"1732splitHere46","12755694splitHere46","keyCode"
"1733splitHere46","12755750splitHere46","ClassLoader"
"1734splitHere46","12755750splitHere46","defineClass"
"1735splitHere46","12755769splitHere46","gluLookAt"
"1736splitHere46","12755769splitHere46","camera->x, camera->y, camera->z"
"1737splitHere46","12755790splitHere46","while (!scanner.hasNextDouble()) {<newline46mondego>    scanner.next();<newline46mondego>}<newline46mondego>double d = scanner.nextDouble();<newline46mondego>"
"1738splitHere46","12755790splitHere46","private static double skipAndGetDouble(Scanner scanner) {<newline46mondego>    while (scanner.hasNext() && !scanner.hasNextDouble()) {<newline46mondego>        scanner.next();<newline46mondego>    }<newline46mondego>    return scanner.hasNextDouble() ? scanner.nextDouble() : Double.NaN;<newline46mondego>}<newline46mondego>"
"1739splitHere46","12755826splitHere46","public void print() {<newline46mondego>    PrinterJob printJob = PrinterJob.getPrinterJob();<newline46mondego>    printJob.setPrintable(this);<newline46mondego>    if (printJob.printDialog())<newline46mondego>      try {<newline46mondego>          System.out.println(<doubleQuotes46>code here<doubleQuotes46>);<newline46mondego>        printJob.print();<newline46mondego>      } catch(PrinterException pe) {<newline46mondego>        System.out.println(<doubleQuotes46>Error printing: <doubleQuotes46> + pe);<newline46mondego>      }<newline46mondego>  }<newline46mondego>"
"1740splitHere46","12756016splitHere46","String path = request.getPathInfo();<newline46mondego>String site = path.split(<doubleQuotes46>/<doubleQuotes46>)[0];<newline46mondego>"
"1741splitHere46","12756016splitHere46","@RequestMapping(value=<doubleQuotes46>/{site}/blah/blah<doubleQuotes46>, method=RequestMethod.GET)<newline46mondego>public ModelAndView blahBlah(HttpServletRequest req,<newline46mondego>                             HttpServletResponse resp,<newline46mondego>                             @PathVariable(<doubleQuotes46>site<doubleQuotes46>) String site) {<newline46mondego>   // do stuff here<newline46mondego>}<newline46mondego>"
"1742splitHere46","12756016splitHere46","@Controller<newline46mondego>@RequestMapping(value=<doubleQuotes46>/{site}<doubleQuotes46>)<newline46mondego>public class MyController {<newline46mondego>  @RequestMapping(value=<doubleQuotes46>/blah/blah<doubleQuotes46>, method=RequestMethod.GET)<newline46mondego>  public ModelAndView blahBlah(HttpServletRequest req,<newline46mondego>                             HttpServletResponse resp,<newline46mondego>                             @PathVariable(<doubleQuotes46>site<doubleQuotes46>) String site) {<newline46mondego>     // do stuff here<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"1743splitHere46","12756124splitHere46","static"
"1744splitHere46","12756124splitHere46","public class Num {<newline46mondego>  private static String str;<newline46mondego>  private static int i;<newline46mondego>"
"1745splitHere46","12756124splitHere46","public class Num {<newline46mondego>  private String str;<newline46mondego>  private int i;<newline46mondego>"
"1746splitHere46","12756124splitHere46","static"
"1747splitHere46","12756187splitHere46","long numerator = (long)(toFind - sortedArray[low]) * (long)(high - low);<newline46mondego>mid = low + numerator / (sortedArray[high] - sortedArray[low]);<newline46mondego>"
"1748splitHere46","12756187splitHere46","while (sortedArray[low] < toFind && sortedArray[high] >= toFind) {<newline46mondego>"
"1749splitHere46","12756187splitHere46","mid = low + (0 * (high - low)) / 0 = 0/0<newline46mondego>"
"1750splitHere46","12756238splitHere46","[...]"
"1751splitHere46","12756499splitHere46","import java.util.*;<newline46mondego>Set<Integer> a = new HashSet<Integer>();<newline46mondego>a.add( 1);<newline46mondego>a.add( 2);<newline46mondego>a.add( 3);<newline46mondego>"
"1752splitHere46","12756499splitHere46","Set<Integer> b = new HashSet<Integer>();<newline46mondego>b.addAll( Arrays.asList( new int[]{ 1, 4, 5}));<newline46mondego>"
"1753splitHere46","12756499splitHere46","// copies all from A;  then removes those not in B.<newline46mondego>Set<Integer> r = new HashSet( a);<newline46mondego>r.retainAll( b);<newline46mondego>// and print;   r.toString() implied.<newline46mondego>System.out.println(<doubleQuotes46>A intersect B=<doubleQuotes46>+r);<newline46mondego>"
"1754splitHere46","12756559splitHere46","PRODUCTION"
"1755splitHere46","12756571splitHere46","#!/bin/sh<newline46mondego>java -jar your-java-compiled-into-a.jar<newline46mondego>"
"1756splitHere46","12756574splitHere46","class Example {<newline46mondego>    protected Deque<Integer> queueEven = new ArrayDeque<Integer>();<newline46mondego>    protected Deque<Integer> queueOdd = new ArrayDeque<Integer>();<newline46mondego>    // you can synchronize on some mutable flag to finish, too.<newline46mondego><newline46mondego>    class Even extends Thread {<newline46mondego>        public void run() {<newline46mondego>            for (int i = 0; i < 10; i += 2) {<newline46mondego>                synchronized (queueEven) {<newline46mondego>                    queueEven.add( i);<newline46mondego>                }<newline46mondego>            }<newline46mondego>        } <newline46mondego>    } <newline46mondego><newline46mondego>    class Odd extends Thread {<newline46mondego>        public void run() {<newline46mondego>            for (int i = 1; i < 10; i += 2) {<newline46mondego>                synchronized (queueOdd) {<newline46mondego>                    queueOdd.add( i);<newline46mondego>                }<newline46mondego>            }<newline46mondego>        } <newline46mondego>    } <newline46mondego><newline46mondego>    class AddEvenOdd extends Thread {<newline46mondego>        public void run() {<newline46mondego>             while (true) {<newline46mondego>                 int even;<newline46mondego>                 synchronized (queueEven) {<newline46mondego>                     even = queueEven.removeFirst();<newline46mondego>                 }<newline46mondego>                 int odd;<newline46mondego>                 synchronized (queueOdd) {<newline46mondego>                     odd = queueOdd.removeFirst();<newline46mondego>                 }<newline46mondego>                 int result = even + odd;<newline46mondego>                 System.out.println(<doubleQuotes46>result=<doubleQuotes46>+result);<newline46mondego>             }<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1757splitHere46","12756600splitHere46","white space"
"1758splitHere46","12756600splitHere46","New York"
"1759splitHere46","12756600splitHere46","white space"
"1760splitHere46","12756600splitHere46","next()"
"1761splitHere46","12756634splitHere46","C:\Program Files\Java\1.7.0_07\bin"
"1762splitHere46","12756634splitHere46","javac.exe"
"1763splitHere46","12756663splitHere46","myMethod"
"1764splitHere46","12756663splitHere46","Method"
"1765splitHere46","12756663splitHere46","invoke"
"1766splitHere46","12756663splitHere46","myMethod"
"1767splitHere46","12756663splitHere46","when"
"1768splitHere46","12756663splitHere46","MyObject myObject = mock(MyObject.class);<newline46mondego>when(myObject.myMethod(<doubleQuotes46>abc<doubleQuotes46>, 123)).thenReturn(456);<newline46mondego>"
"1769splitHere46","12756663splitHere46","myObject.getClass().getName()<newline46mondego>"
"1770splitHere46","12756663splitHere46","MyObject"
"1771splitHere46","12756722splitHere46",",(?![^\(]*\))<newline46mondego>"
"1772splitHere46","12756722splitHere46","(?<!\([^\)]*),(?![^\(]*\))<newline46mondego>"
"1773splitHere46","12756723splitHere46","<doubleQuotes46>SELECT * FROM courses WHERE NOT EXISTS(SELECT * FROM coursesNATURAL JOIN registerWHERE ssn = ?)<doubleQuotes46><newline46mondego>"
"1774splitHere46","12756723splitHere46","coursesNATURAL"
"1775splitHere46","12756723splitHere46","registerWHERE"
"1776splitHere46","12756730splitHere46","@Override<newline46mondego>protected void onDraw(Canvas canvas) {<newline46mondego>    yourMethod(canvas);<newline46mondego>}<newline46mondego><newline46mondego>void yourMethod(Canvas canvas){<newline46mondego>    //TODO<newline46mondego>    //your code goes here<newline46mondego>}<newline46mondego>"
"1777splitHere46","12756733splitHere46","<doubleQuotes46>Android Tools<doubleQuotes46>"
"1778splitHere46","12756733splitHere46","<doubleQuotes46>Add Support Library<doubleQuotes46>"
"1779splitHere46","12757002splitHere46","void Java_Tester_func<newline46mondego>(JNIEnv *env, jobject obj) {<newline46mondego>  jclass cls = (*env)->GetObjectClass(env,obj);<newline46mondego>  jmethodID mid = (*env)->GetMethodID(env,cls,<doubleQuotes46>printInteger<doubleQuotes46>,<doubleQuotes46>(I)V<doubleQuotes46>);<newline46mondego>  jvalue a1,*arr;<newline46mondego>  a1.i = 2;<newline46mondego>  arr = &a1;<newline46mondego>  (*env)->CallVoidMethodA(env,obj,mid,arr);<newline46mondego> }<newline46mondego>"
"1780splitHere46","12757057splitHere46","{clientFeature: {<doubleQuotes46>feature<doubleQuotes46>:{<doubleQuotes46>id<doubleQuotes46>:3,<doubleQuotes46>enabled<doubleQuotes46>:true,<doubleQuotes46>description<doubleQuotes46>:<doubleQuotes46>description here<doubleQuotes46>,<doubleQuotes46>type<doubleQuotes46>:<doubleQuotes46>FEATURE_TYPE_HERE<doubleQuotes46>},<doubleQuotes46>countries<doubleQuotes46>:[<doubleQuotes46>SG<doubleQuotes46>],<doubleQuotes46>clientId<doubleQuotes46>:10}}<newline46mondego>"
"1781splitHere46","12757065splitHere46","Window | Preferences | Java | Compiler | JDK Compliance | Compiler Compliance Level<newline46mondego>"
"1782splitHere46","12757254splitHere46","else if(col == 0 && row > 0 && row < lastgen[0].length) //Left Col<newline46mondego>        {<newline46mondego>            if(lastgen[col][row - 1] == true) acount++; //Above<newline46mondego>                            if(lastgen[col][row + 1] == true) acount++; //Below  (This is the code that the runtime error is about)<newline46mondego>"
"1783splitHere46","12757254splitHere46","if(lastgen[col][row + 1] == true) <newline46mondego>"
"1784splitHere46","12757254splitHere46","if(lastgen[col][row + 1] == true) <newline46mondego>"
"1785splitHere46","12757254splitHere46","3"
"1786splitHere46","12757254splitHere46","2"
"1787splitHere46","12757260splitHere46","private JComboBox genderJCB;<newline46mondego>"
"1788splitHere46","12757260splitHere46","TestJCB(){"
"1789splitHere46","12757260splitHere46","JComboBox genderJCB = new JComboBox(test);// same issue with JLabel too<newline46mondego>"
"1790splitHere46","12757260splitHere46","ActionPerformed"
"1791splitHere46","12757260splitHere46","genderJCB = new JComboBox(test);<newline46mondego>"
"1792splitHere46","12757282splitHere46","int"
"1793splitHere46","12757282splitHere46","Integer.MIN_VALUE"
"1794splitHere46","12757282splitHere46","Integer.MAX_VALUE"
"1795splitHere46","12757297splitHere46","List<Column> neighborColumns = new ArrayList<Column>();<newline46mondego>List<Column> neighborColumns = new LinkedList<Column>();   // OK To change..<newline46mondego>"
"1796splitHere46","12757297splitHere46","ArrayList<Column> neighborColumns = new ArrayList<Column>();<newline46mondego><newline46mondego>//OOPs.. Cry (Incompatible Types)<newline46mondego>ArrayList<Column> neighborColumns = new LinkedList<Column>(); <newline46mondego>"
"1797splitHere46","12757299splitHere46","LinkedList list = new LinkedList();<newline46mondego>list.add(new Person());<newline46mondego>...<newline46mondego>Object fetched = list.getFirst();<newline46mondego>// Problems...<newline46mondego>"
"1798splitHere46","12757299splitHere46","// Or use an interface type, of course<newline46mondego>LinkedList<Person> list = new LinkedList<Person>();<newline46mondego>list.add(new Person());<newline46mondego>...<newline46mondego>Person fetched = list.getFirst();<newline46mondego>System.out.println(person.getFirstName()); // Hooray!<newline46mondego>"
"1799splitHere46","12757308splitHere46","javax.swing.plaf.metal.MetalLookAndFeel"
"1800splitHere46","12757308splitHere46","com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel"
"1801splitHere46","12757308splitHere46","com.sun.java.swing.plaf.windows.WindowsLookAndFeel"
"1802splitHere46","12757308splitHere46","com.sun.java.swing.plaf.gtk.GTKLookAndFeel"
"1803splitHere46","12757308splitHere46","com.sun.java.swing.plaf.mac.MacLookAndFeel"
"1804splitHere46","12757308splitHere46","UIManager.getSystemLookAndFeelClassName()"
"1805splitHere46","12757308splitHere46","com.sun.java.swing.plaf.motif.MotifLookAndFeel"
"1806splitHere46","12757308splitHere46","--cp:p <jar_path>"
"1807splitHere46","12757308splitHere46","--laf <laf_class>"
"1808splitHere46","12757345splitHere46","((myclass) obj).methodOfMyClass();<newline46mondego>"
"1809splitHere46","12757363splitHere46","2020-11-10T00:00:00.000-05:00"
"1810splitHere46","12757363splitHere46","2020-11-10T05:00:00.000Z"
"1811splitHere46","12757363splitHere46","Calendar"
"1812splitHere46","12757363splitHere46","Date"
"1813splitHere46","12757470splitHere46","mtr.showArrayIdVal()"
"1814splitHere46","12757470splitHere46","JLabel"
"1815splitHere46","12757470splitHere46","mtr.showarrayidval()"
"1816splitHere46","12757470splitHere46","array of Jlable objects"
"1817splitHere46","12757470splitHere46","index"
"1818splitHere46","12757470splitHere46","setText(...)"
"1819splitHere46","12757470splitHere46","for(JLable jl: mtr.showArrayIdVal()) {<newline46mondego>        jl.setText(..)// do what ever you are setting here.<newline46mondego>     }<newline46mondego>"
"1820splitHere46","12757689splitHere46","try{<newline46mondego>    QueryRequest c = new QueryRequest(<doubleQuotes46>testcaseresult<doubleQuotes46>);<newline46mondego>    c.setFetch(new Fetch(<doubleQuotes46>testcase<doubleQuotes46>));<newline46mondego>    c.setQueryFilter(new QueryFilter(<doubleQuotes46>testcase<doubleQuotes46>, <doubleQuotes46>=<doubleQuotes46>, testCaseRef));<newline46mondego>    QueryResponse cc = r.query(c);<newline46mondego>    String testresultRef = cc.getResults().get(0).getAsJsonObject().get(<doubleQuotes46>_ref<doubleQuotes46>).toString();<newline46mondego>} catch(IndexOutOfBoundsException e){<newline46mondego>    //Create a testcaseresult here.<newline46mondego>}<newline46mondego>"
"1821splitHere46","12757786splitHere46","www.yoursite.com?search=JSP&page=3<newline46mondego>"
"1822splitHere46","12757786splitHere46","firstResultNum = page * resultsPerPage<newline46mondego>for (i=firstResultNum; i<firstResultNum+resultsPerPage; i++)<newline46mondego>{<newline46mondego>  displayCurSearchResult(i);<newline46mondego>}<newline46mondego>"
"1823splitHere46","12757810splitHere46","expected"
"1824splitHere46","12757810splitHere46","@Test{expected=...}"
"1825splitHere46","12757849splitHere46","k++"
"1826splitHere46","12757849splitHere46","for(int k = 0; k < a[0].length; )"
"1827splitHere46","12757849splitHere46","System.out.println()"
"1828splitHere46","12757849splitHere46","for(int i = 0; i < array3.length; i++)<newline46mondego>    {<newline46mondego>        for (int j = 0; j < array3.length; j++)<newline46mondego>        {<newline46mondego>            System.out.print(array3[i][j] + <doubleQuotes46> <doubleQuotes46>);<newline46mondego>        }<newline46mondego>        System.out.println();<newline46mondego>    }<newline46mondego>"
"1829splitHere46","12757905splitHere46","com.reaf.xml"
"1830splitHere46","12757905splitHere46","com.read.xml.DataHandler"
"1831splitHere46","12757905splitHere46","com.read.xml"
"1832splitHere46","12757905splitHere46",".DataHandler"
"1833splitHere46","12757974splitHere46","public static class CustomComparator implements Comparator<PeopleInfo> {"
"1834splitHere46","12758062splitHere46","centerX = (a.x + b.x + c.x) / 3<newline46mondego>centerY = (a.y + b.y + c.y) / 3<newline46mondego>"
"1835splitHere46","12758062splitHere46","static class Triangle {<newline46mondego>    double a, b, c;<newline46mondego><newline46mondego>    public Triangle(double a, double b, double c) {<newline46mondego>        this.a = a;<newline46mondego>        this.b = b;<newline46mondego>        this.c = c;<newline46mondego>    }<newline46mondego><newline46mondego>    public double aAngle() {<newline46mondego>        return Math.acos(-(Math.pow(a, 2) - Math.pow(b, 2) - Math.pow(c, 2)) / (2 * b * c));<newline46mondego>    }<newline46mondego><newline46mondego>    public Point[] triangle() {<newline46mondego><newline46mondego>        double angle = aAngle();<newline46mondego><newline46mondego>        Point[] p = new Point[3];<newline46mondego><newline46mondego>        p[0] = new Point(0, 0);<newline46mondego>        p[1] = new Point((int) b, 0);<newline46mondego>        p[2] = new Point((int) (Math.cos(angle) * c), (int) (Math.sin(angle) * c));<newline46mondego><newline46mondego>        Point center = new Point((p[0].x + p[1].x + p[2].x) / 3, <newline46mondego>                                 (p[0].y + p[1].y + p[2].y) / 3);<newline46mondego><newline46mondego>        for (Point a : p)<newline46mondego>            a.translate(-center.x, -center.y);<newline46mondego><newline46mondego>        return p;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1836splitHere46","12758062splitHere46","public static void main(String[] args) {<newline46mondego><newline46mondego>    final Triangle t = new Triangle(20, 30, 40);<newline46mondego>    final Point translation = new Point(100, 400);<newline46mondego><newline46mondego>    JFrame frame = new JFrame(<doubleQuotes46>Test<doubleQuotes46>);<newline46mondego><newline46mondego>    frame.add(new JComponent() {<newline46mondego>        @Override<newline46mondego>        protected void paintComponent(Graphics g) {<newline46mondego>            super.paintComponent(g);<newline46mondego><newline46mondego>            Point[] p = t.triangle();<newline46mondego><newline46mondego>            g.translate(translation.x, translation.y);<newline46mondego><newline46mondego>            for (int i = 0; i < p.length; i++)<newline46mondego>                g.drawLine(p[i].x, <newline46mondego>                           p[i].y, <newline46mondego>                           p[(i+1) % p.length].x, <newline46mondego>                           p[(i+1) % p.length].y);<newline46mondego>        }<newline46mondego>    });<newline46mondego><newline46mondego>    frame.setSize(800, 600);<newline46mondego>    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>    frame.setVisible(true);<newline46mondego><newline46mondego>}<newline46mondego>"
"1837splitHere46","12758352splitHere46","long oneYearWithL = 1000*60*60*24*365L;<newline46mondego>long oneYearWithoutL = 1000*60*60*24*365;<newline46mondego>"
"1838splitHere46","12758352splitHere46","365L"
"1839splitHere46","12758352splitHere46","long"
"1840splitHere46","12758352splitHere46","1000*60*60*24"
"1841splitHere46","12758352splitHere46","integer"
"1842splitHere46","12758352splitHere46","multiplying"
"1843splitHere46","12758352splitHere46","long"
"1844splitHere46","12758352splitHere46","integer"
"1845splitHere46","12758352splitHere46","long"
"1846splitHere46","12758352splitHere46","integer"
"1847splitHere46","12758352splitHere46","integer"
"1848splitHere46","12758352splitHere46","32-bit"
"1849splitHere46","12758352splitHere46","multiplication"
"1850splitHere46","12758352splitHere46","System.out.println(1000*60*60*24*365L);<newline46mondego>System.out.println(1000*60*60*24*365);<newline46mondego>System.out.println(Integer.MAX_VALUE);<newline46mondego>"
"1851splitHere46","12758352splitHere46","31536000000<newline46mondego>1471228928<newline46mondego>2147483647<newline46mondego>"
"1852splitHere46","12758352splitHere46","011101010111101100010010110000000000 -- Binary equivalent of 1000*60*60*24*365L<newline46mondego>    01111111111111111111111111111111 -- Binary equivalent of Integer.MAX_VALUE<newline46mondego>"
"1853splitHere46","12758352splitHere46","L"
"1854splitHere46","12758352splitHere46","(0111)01010111101100010010110000000000 -- Remove the most significant bits..<newline46mondego>      01010111101100010010110000000000 -- Binary equivalent of 1471228928<newline46mondego>"
"1855splitHere46","12758352splitHere46","multiplication"
"1856splitHere46","12758352splitHere46","integers"
"1857splitHere46","12758352splitHere46","365L"
"1858splitHere46","12758352splitHere46","2's complement representation"
"1859splitHere46","12758352splitHere46","long value - 365L"
"1860splitHere46","12758352splitHere46","long thirtyYearWithL = 1000*60*60*24*30*365L;<newline46mondego>"
"1861splitHere46","12758352splitHere46","1000*60*60*24*30"
"1862splitHere46","12758352splitHere46","2592000000"
"1863splitHere46","12758352splitHere46","binary equivalent"
"1864splitHere46","12758352splitHere46","2592000000 = 10011010011111101100100000000000  -- MSB is `1`, a negative value<newline46mondego>             01100101100000010011100000000001  -- 2's complement representation<newline46mondego>"
"1865splitHere46","12758352splitHere46","2's complement"
"1866splitHere46","12758352splitHere46","1702967297"
"1867splitHere46","12758352splitHere46","2592000000"
"1868splitHere46","12758352splitHere46","-1702967297"
"1869splitHere46","12758352splitHere46","365L"
"1870splitHere46","12758352splitHere46","integer range"
"1871splitHere46","12758352splitHere46","[-2147483648 to 2147483647]"
"1872splitHere46","12758352splitHere46","long thirtyYearWithL = 1000*60*60*24*30*365L;<newline46mondego>                     = 2592000000 * 365L;<newline46mondego>                     = -1702967297 * 365L = -621583063040<newline46mondego>"
"1873splitHere46","12758352splitHere46","type"
"1874splitHere46","12758352splitHere46","left to right"
"1875splitHere46","12758352splitHere46","left-to-right"
"1876splitHere46","12758352splitHere46","long thirtyYearWithL = 1000*60*60*24*30*365L;<newline46mondego>"
"1877splitHere46","12758352splitHere46","365L"
"1878splitHere46","12758352splitHere46","long thirtyYearWithL = 365L*1000*60*60*24*30; // will give you correct result<newline46mondego>"
"1879splitHere46","12758352splitHere46","temporary"
"1880splitHere46","12758352splitHere46","long"
"1881splitHere46","12758388splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego><web-app xmlns:xsi=<doubleQuotes46>http://www.w3.org/2001/XMLSchema-instance<doubleQuotes46> xmlns=<doubleQuotes46>http://java.sun.com/xml/ns/javaee<doubleQuotes46> xmlns:web=<doubleQuotes46>http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd<doubleQuotes46> xsi:schemaLocation=<doubleQuotes46>http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd<doubleQuotes46> id=<doubleQuotes46>WebApp_ID<doubleQuotes46> version=<doubleQuotes46>2.5<doubleQuotes46>><newline46mondego>   <servlet><newline46mondego>    <servlet-name>four</servlet-name><newline46mondego>    <servlet-class>Httpservlet1</servlet-class><newline46mondego>  </servlet><newline46mondego>  <servlet-mapping><newline46mondego>    <servlet-name>four</servlet-name><newline46mondego>    <url-pattern>/HTTPSERVLET</url-pattern><newline46mondego>  </servlet-mapping><newline46mondego></web-app><newline46mondego>"
"1882splitHere46","12758417splitHere46","mAdapter.notifyDataSetChanged();<newline46mondego>"
"1883splitHere46","12758511splitHere46","public class MainActivity extends Activity {<newline46mondego>WebView myWebView;<newline46mondego>@Override<newline46mondego>public void onCreate(Bundle savedInstanceState) {<newline46mondego>    super.onCreate(savedInstanceState);<newline46mondego>    setContentView(R.layout.activity_main);<newline46mondego><newline46mondego>    myWebView = (WebView) findViewById(R.id.webView1);<newline46mondego>    myWebView.setWebViewClient(new MyWebViewClient());<newline46mondego>    myWebView.setWebViewClient(new WebViewClient());<newline46mondego>    WebSettings webSettings = myWebView.getSettings();<newline46mondego>    webSettings.setJavaScriptEnabled(true);<newline46mondego>    myWebView.loadUrl(<doubleQuotes46>http://www.google.com<doubleQuotes46>);<newline46mondego>}<newline46mondego><newline46mondego>@Override<newline46mondego>public boolean onCreateOptionsMenu(Menu menu) {<newline46mondego>    getMenuInflater().inflate(R.menu.activity_main, menu);<newline46mondego>    return true;<newline46mondego>}<newline46mondego><newline46mondego>private class MyWebViewClient extends WebViewClient {<newline46mondego>    @Override<newline46mondego>    public boolean shouldOverrideUrlLoading(WebView view, String url) {<newline46mondego>        if (Uri.parse(url).getHost().equals(<doubleQuotes46>www.example.com<doubleQuotes46>)) {<newline46mondego>            // This is my web site, so do not override; let my WebView load the page<newline46mondego>            return false;<newline46mondego>        }<newline46mondego>        // Otherwise, the link is not for a page on my site, so launch another Activity that handles URLs<newline46mondego>        Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(url));<newline46mondego>        startActivity(intent);<newline46mondego>        return true;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>@Override<newline46mondego>public boolean onKeyDown(int keyCode, KeyEvent event) {<newline46mondego>    // Check if the key event was the Back button and if there's history<newline46mondego>    if ((keyCode == KeyEvent.KEYCODE_BACK) && myWebView.canGoBack()) {<newline46mondego>        myWebView.goBack();<newline46mondego>        return true;<newline46mondego>    }<newline46mondego>    // If it wasn't the Back key or there's no web page history, bubble up to the default<newline46mondego>    // system behavior (probably exit the activity)<newline46mondego>    return super.onKeyDown(keyCode, event);<newline46mondego>}<newline46mondego>"
"1884splitHere46","12758522splitHere46","-Xms8192m"
"1885splitHere46","12758522splitHere46","-Xmx10240m"
"1886splitHere46","12758522splitHere46","-XX:MaxPermSize=512m"
"1887splitHere46","12758522splitHere46","-Xms512m;-Xmx1536m;-XX:PermSize=64m;-XX:MaxPermSize=256m<newline46mondego>"
"1888splitHere46","12758522splitHere46","-Xms8192m;-Xmx10240m;-XX:PermSize=512m;-XX:MaxPermSize=512m<newline46mondego>"
"1889splitHere46","12758664splitHere46","int Label::func() <newline46mondego>{<newline46mondego>    return Component::func();<newline46mondego>}<newline46mondego>"
"1890splitHere46","12758702splitHere46","Object[]"
"1891splitHere46","12758702splitHere46","String[] strvls = { <doubleQuotes46>Alessio<doubleQuotes46>, <doubleQuotes46>Ale<doubleQuotes46> };<newline46mondego>Object container = strvls;<newline46mondego>if (container.getClass().isArray()) {<newline46mondego>    Object[] data = (Object[]) container;<newline46mondego>    System.out.println(data.length);<newline46mondego>}<newline46mondego>"
"1892splitHere46","12758725splitHere46","ReadWriteLock"
"1893splitHere46","12758725splitHere46","ReentrantReadWriteLock"
"1894splitHere46","12758725splitHere46","class MyData {<newline46mondego>    private final ReentrantReadWriteLock rwl = new ReentrantReadWriteLock();<newline46mondego>    private final Lock r = rwl.readLock();<newline46mondego>    private final Lock w = rwl.writeLock();<newline46mondego><newline46mondego>    public Data ReadSomething(int id) {<newline46mondego>        r.lock();<newline46mondego>        try {<newline46mondego>            Cursor c = readableDatabase.query(...);<newline46mondego>            return c.getString(0);<newline46mondego>        } finally {<newline46mondego>            r.unlock();<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public void ChangeSomething(int id, int value) {<newline46mondego>        w.lock();<newline46mondego>        try {<newline46mondego>            writeableDatabase.update(...);<newline46mondego>        } finally {<newline46mondego>            w.unlock();<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1895splitHere46","12758742splitHere46","ResourceBundle rb = ResourceBundle.getbundle(<doubleQuotes46>messages<doubleQuotes46>, Locale.forLanguageTag(<doubleQuotes46>zh-TW<doubleQuotes46>);<newline46mondego>"
"1896splitHere46","12758742splitHere46","ResourceBundle.getBundle(String)"
"1897splitHere46","12758742splitHere46","Locale default = Locale.getDefault(Locale.Category.DISPLAY);<newline46mondego>"
"1898splitHere46","12758844splitHere46","public abstract class Wrap<T extends X>{<newline46mondego><newline46mondego>    protected T instance;<newline46mondego><newline46mondego>    public Wrap(T x){<newline46mondego>        this.instance = x;<newline46mondego>    }<newline46mondego><newline46mondego>    public void foo(){<newline46mondego>       instance.foo();<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego><newline46mondego>public final class WrapY extends Wrap<Y> {<newline46mondego><newline46mondego>    public WrapY(Y y) {<newline46mondego>        super(y);<newline46mondego>    }<newline46mondego><newline46mondego>    public void bar(){<newline46mondego>        instance.bar();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1899splitHere46","12758844splitHere46","WrapY"
"1900splitHere46","12758844splitHere46","instance"
"1901splitHere46","12758844splitHere46","Y"
"1902splitHere46","12758844splitHere46","public class WrapY<U extends Y> extends Wrap<U> {<newline46mondego><newline46mondego>    public WrapY(U y) {<newline46mondego>        super(y);<newline46mondego>    }<newline46mondego><newline46mondego>    public void bar(){<newline46mondego>        instance.bar();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1903splitHere46","12758857splitHere46","initializePaint()"
"1904splitHere46","12758857splitHere46","initializePaint()"
"1905splitHere46","12758857splitHere46","class MyClass{<newline46mondego>  private final int intVar;  //ok<newline46mondego>  private final Paint paint;// paint = new Paint(); to avoid //error <doubleQuotes46>Variable paint might not have been initialized<doubleQuotes46><newline46mondego><newline46mondego>  public MyClass(){<newline46mondego>       intVar = 12; <newline46mondego>       //initializePaint(); <newline46mondego>       paint = new Paint(); // here initialized And allowed.<newline46mondego>  }<newline46mondego><newline46mondego>  private void initializePaint(){<newline46mondego>       paint = new Paint();  //error  <doubleQuotes46>cannot assign a variable to final variable<doubleQuotes46><newline46mondego>  }<newline46mondego>}<newline46mondego>"
"1906splitHere46","12758982splitHere46","tabbedPane()"
"1907splitHere46","12758982splitHere46","public JTabbedPane tabbedPane() {<newline46mondego>    UIManager.put(<doubleQuotes46>TabbedPane.selected<doubleQuotes46>, Color.ORANGE);<newline46mondego>    mainJTP = new JTabbedPane();<newline46mondego>    mainJTP.setBackground(Color.WHITE);<newline46mondego>    mainJTP.setBounds(3, 1, 630, 500);<newline46mondego>    mainJTP.addTab(<doubleQuotes46>Classic<doubleQuotes46>, classic());<newline46mondego>    mainJTP.addTab(<doubleQuotes46>Deluxe<doubleQuotes46>, deluxe());<newline46mondego>    mainJTP.addTab(<doubleQuotes46>Presidential<doubleQuotes46>, presidential());<newline46mondego>    rooms();  // I've inserted this, no panic!<newline46mondego>    return mainJTP;<newline46mondego>}<newline46mondego>"
"1908splitHere46","12758982splitHere46","classic(), deluxe()"
"1909splitHere46","12758982splitHere46","presidential()"
"1910splitHere46","12758982splitHere46","rooms()"
"1911splitHere46","12758982splitHere46","rooms()"
"1912splitHere46","12758982splitHere46","rooms()"
"1913splitHere46","12759109splitHere46","public static class Command {<newline46mondego>  protected String code;<newline46mondego>  protected String desc;<newline46mondego>  public String getCode() {return code;}<newline46mondego>  public String getDesc() {return desc;}<newline46mondego>  public Command (String code, String desc) {<newline46mondego>    this.code = code;<newline46mondego>    this.desc = desc;<newline46mondego>  }<newline46mondego>  public String toString() {return code;}<newline46mondego>}<newline46mondego><newline46mondego>public class StandardCommands {<newline46mondego>  public static Command READ = new Command(<doubleQuotes46>READ<doubleQuotes46>, <doubleQuotes46>read a record<doubleQuotes46>);<newline46mondego>  public static Command CREATE = new Command(<doubleQuotes46>WRITE<doubleQuotes46>, <doubleQuotes46>create a record<doubleQuotes46>);<newline46mondego>  public static Command EDIT = new Command(<doubleQuotes46>WRITE<doubleQuotes46>, <doubleQuotes46>modify a record<doubleQuotes46>);<newline46mondego>}<newline46mondego>public class FurtherCommands extends StandardCommands {<newline46mondego>  public static Command LIST = new Command(<doubleQuotes46>LIST<doubleQuotes46>, <doubleQuotes46>list all records<doubleQuotes46>);<newline46mondego>}<newline46mondego><newline46mondego>public class QueryCommands extends FurtherCommands {<newline46mondego>  public static class QueryCmd extends Command {<newline46mondego>    protected String search;<newline46mondego>    public String getSearch() {return search;}<newline46mondego>    // constructor..<newline46mondego>  }<newline46mondego>  public static QueryCmd QUERY_EXAMPLE = new QueryCmd(<doubleQuotes46>QUERY<doubleQuotes46>, <doubleQuotes46>example<doubleQuotes46>, <doubleQuotes46>query for specified string<doubleQuotes46>);<newline46mondego><newline46mondego><newline46mondego>  public static QueryCmd createQuery (String search) {<newline46mondego>    return new QueryCmd( <doubleQuotes46>QUERY<doubleQuotes46>, search, <doubleQuotes46>query for specified string<doubleQuotes46>);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"1914splitHere46","12759164splitHere46","Job"
"1915splitHere46","12759164splitHere46","job1"
"1916splitHere46","12759164splitHere46","new Job()"
"1917splitHere46","12759164splitHere46","addJob(Job job)"
"1918splitHere46","12759164splitHere46","job1"
"1919splitHere46","12759289splitHere46","SimpleComponent comp = new SimpleComponent(10, 10, 100, 100);<newline46mondego>panel.add(comp);<newline46mondego>frame.setVisible(true);<newline46mondego><newline46mondego>System.out.println(comp.getSize());<newline46mondego>"
"1920splitHere46","12759289splitHere46","public Dimension getPreferredSize() {<newline46mondego>  return new Dimension(width, height);<newline46mondego>}<newline46mondego>"
"1921splitHere46","12759289splitHere46","getLocation()"
"1922splitHere46","12759289splitHere46","public SimpleComponent(int x, int y, int width, int height) {<newline46mondego>  this.x = x;<newline46mondego>  this.y = y;<newline46mondego>  this.width = width; // *** added<newline46mondego>  this.height = height; // *** added<newline46mondego>}<newline46mondego>"
"1923splitHere46","12759303splitHere46","log4j.properties"
"1924splitHere46","12759303splitHere46","PropertyConfigurator.configure(<doubleQuotes46>classpath:resources/log4j.properties<doubleQuotes46>);<newline46mondego>"
"1925splitHere46","12759303splitHere46","System.out.println(System.getProperty(<doubleQuotes46>user.dir<doubleQuotes46>));<newline46mondego>"
"1926splitHere46","12759303splitHere46","PropertyConfigurator.configure"
"1927splitHere46","12759360splitHere46","protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {<newline46mondego>   sendBack(request,response);<newline46mondego>}<newline46mondego>"
"1928splitHere46","12759599splitHere46","<form name =<doubleQuotes46>TutorAssign<doubleQuotes46> ACTION=<doubleQuotes46>TutorAssign<doubleQuotes46> method=<doubleQuotes46>post<doubleQuotes46>><newline46mondego>        <select name=<doubleQuotes46>labs<doubleQuotes46>><newline46mondego>        <%<newline46mondego>        for(int i=0; i<list1.length;i++)  <newline46mondego>        { <newline46mondego>        out.println(<doubleQuotes46><option value=<doubleQuotes46>+list1[i]+<doubleQuotes46>> <doubleQuotes46>+list2[i]+<doubleQuotes46> </option><doubleQuotes46>);<newline46mondego><newline46mondego>        } %><newline46mondego>        </select><newline46mondego>"
"1929splitHere46","12759599splitHere46","<select name=<doubleQuotes46>labs<doubleQuotes46>><newline46mondego>"
"1930splitHere46","12759599splitHere46","id"
"1931splitHere46","12759599splitHere46","request.getParameter(<doubleQuotes46>labs<doubleQuotes46>)"
"1932splitHere46","12759752splitHere46","Window w3 = new Window(3);"
"1933splitHere46","12759752splitHere46","w3"
"1934splitHere46","12759752splitHere46","w3"
"1935splitHere46","12759752splitHere46","Window w3"
"1936splitHere46","12759752splitHere46","w3"
"1937splitHere46","12759752splitHere46","null"
"1938splitHere46","12759752splitHere46","import static net.mindview.util.Print.*;<newline46mondego>    // When the constructor is called to create a<newline46mondego>    // Window object, you’ll see a message:<newline46mondego>    class Window {<newline46mondego>        Window(int marker) <newline46mondego>        { <newline46mondego>            print(<doubleQuotes46>Window(<doubleQuotes46> + marker + <doubleQuotes46>)<doubleQuotes46>); <newline46mondego>        } <newline46mondego>    }<newline46mondego><newline46mondego>   class House { <newline46mondego>       Window w1 = new Window(1); <newline46mondego>       // Before constructor <newline46mondego>       House() {<newline46mondego>           // Show that we’re in the constructor:<newline46mondego>           print(<doubleQuotes46>House()<doubleQuotes46>);<newline46mondego>           w3 = new Window(33); // Reinitialize w3<newline46mondego>       }<newline46mondego>        Window w2 = new Window(2); <newline46mondego>        // After constructor void f() { print(<doubleQuotes46>f()<doubleQuotes46>); } <newline46mondego>        Window w3 = new Window(3); <newline46mondego>    // At end <newline46mondego>   }<newline46mondego>"
"1939splitHere46","12759802splitHere46","while(repeat = true); // Note single '=', not '=='<newline46mondego>"
"1940splitHere46","12759802splitHere46","true"
"1941splitHere46","12759802splitHere46","while(repeat);<newline46mondego>"
"1942splitHere46","12759808splitHere46","Intent intent = new Intent(<doubleQuotes46>android.intent.category.LAUNCHER<doubleQuotes46>);<newline46mondego>intent.setClassName(<doubleQuotes46>com.facebook.katana<doubleQuotes46>, <doubleQuotes46>com.facebook.katana.LoginActivity<doubleQuotes46>);<newline46mondego>startActivity(intent);<newline46mondego>"
"1943splitHere46","12759808splitHere46","Intent LaunchIntent = getPackageManager().getLaunchIntentForPackage(<doubleQuotes46>com.package.address<doubleQuotes46>);<newline46mondego>startActivity(LaunchIntent);<newline46mondego>"
"1944splitHere46","12759808splitHere46","Uri webpage = Uri.parse(<doubleQuotes46>http://www.android.com<doubleQuotes46>);<newline46mondego>Intent webIntent = new Intent(Intent.ACTION_VIEW, webpage);<newline46mondego>startActivity(intent);<newline46mondego>"
"1945splitHere46","12759826splitHere46","run()"
"1946splitHere46","12759826splitHere46","final BlockingQueue<Runnable> tasks = new LinkedBlockingQueue<Runnable>();<newline46mondego><newline46mondego>public void submit(Runnable runs) {<newline46mondego>    tasks.add(runs);<newline46mondego>}<newline46mondego><newline46mondego>volatile boolean running = true;<newline46mondego><newline46mondego>// running in each thread in the pool<newline46mondego>class RunsRunnable implement Runnable {<newline46mondego>    public void run() {<newline46mondego>        while(running) {<newline46mondego>           Runnable runs = tasks.take();<newline46mondego>           try {<newline46mondego>              runs.run();<newline46mondego>           } catch(Throwable t) {<newline46mondego>              // handles t<newline46mondego>           }<newline46mondego>        }<newline46mondego>    }<newline46mondego> }<newline46mondego>"
"1947splitHere46","12760018splitHere46","ExecutorService executorService = Executors.newFixedThreadPool(5);<newline46mondego>    List<Future<Void>> handles = new ArrayList<Future<Void>>();<newline46mondego>    Future<Void> handle;<newline46mondego>    for (int i=0;i < 12; i++) {<newline46mondego>        handle = executorService.submit(new Callable<Void>() {<newline46mondego><newline46mondego>            public Void call() throws Exception {<newline46mondego>                Document d = Jsoup.connect(<doubleQuotes46>http://www.google.hr<doubleQuotes46>).timeout(0).get();<newline46mondego>                System.out.println(d.title());<newline46mondego>                return null;<newline46mondego>            }<newline46mondego>        });<newline46mondego>        handles.add(handle);<newline46mondego>    }<newline46mondego><newline46mondego>    for (Future<Void> h : handles) {<newline46mondego>        try {<newline46mondego>            h.get();<newline46mondego>        } <newline46mondego>        catch (Exception ex) {<newline46mondego>            ex.printStackTrace();<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    executorService.shutdownNow();<newline46mondego>"
"1948splitHere46","12760018splitHere46","public static Document connect(String url) {<newline46mondego>    Document doc = null;<newline46mondego>    try {<newline46mondego>        doc = Jsoup.connect(url).timeout(0).get();<newline46mondego>    } catch (IOException ex) {<newline46mondego>        ex.printStackTrace();<newline46mondego>    }<newline46mondego>    return doc;<newline46mondego>}<newline46mondego>"
"1949splitHere46","12760018splitHere46","public Void call() throws Exception {                    <newline46mondego>    System.out.println(App.connect(<doubleQuotes46>http://www.google.hr<doubleQuotes46>).title());<newline46mondego>    return null;<newline46mondego>}<newline46mondego>"
"1950splitHere46","12760018splitHere46","Thread.currentThread.sleep(new Random().nextInt(10000)) <newline46mondego>"
"1951splitHere46","12760110splitHere46","PreparedStatement statement= con.prepareStatement(<doubleQuotes46>INSERT INTO jam(name) <newline46mondego>     VALUES (?)<doubleQuotes46>);<newline46mondego><newline46mondego>    statement.setString(1,<doubleQuotes46>Charlie Sheen<doubleQuotes46>);<newline46mondego><newline46mondego>statement.execute();<newline46mondego>"
"1952splitHere46","12760231splitHere46","MyObject [] array = new MyObject[3];<newline46mondego>array[2] = myObject;<newline46mondego>"
"1953splitHere46","12760245splitHere46","System.setProperty(<doubleQuotes46>hsqldb.reconfig_logging<doubleQuotes46>, <doubleQuotes46>false<doubleQuotes46>);<newline46mondego>"
"1954splitHere46","12760348splitHere46","class ThreadTask implements Runnable {<newline46mondego>    private static AtomicInteger counter = new AtomicInteger();<newline46mondego>    private int id;<newline46mondego><newline46mondego>    public ThreadTask(int id) { this.id = id; }<newline46mondego><newline46mondego>    public void run() {<newline46mondego>        int local = 0;<newline46mondego>        while((local = counter.incrementAndGet()) < 500) {<newline46mondego>            System.out.println(<doubleQuotes46>T<doubleQuotes46> + id + <doubleQuotes46> <doubleQuotes46> + local);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>...<newline46mondego><newline46mondego>new Thread(new ThreadTask(0)).start();<newline46mondego>new Thread(new ThreadTask(1)).start();<newline46mondego>"
"1955splitHere46","12760348splitHere46","class ThreadTask implements Runnable {<newline46mondego>    private int counter = 0;<newline46mondego>    private int id;<newline46mondego><newline46mondego>    public ThreadTask(int id) { this.id = id; }<newline46mondego><newline46mondego>    public void run() {<newline46mondego>        while(counter < 500) {<newline46mondego>            counter++;<newline46mondego>            System.out.println(<doubleQuotes46>T<doubleQuotes46> + id + <doubleQuotes46> <doubleQuotes46> + counter);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>...<newline46mondego><newline46mondego>new Thread(new ThreadTask(0)).start();<newline46mondego>new Thread(new ThreadTask(1)).start();<newline46mondego>"
"1956splitHere46","12760374splitHere46","SAXParserFactory SPF = SAXParserFactory.newInstance();<newline46mondego>SAXParser SP = SPF.newSAXParser();<newline46mondego>"
"1957splitHere46","12760374splitHere46","qName"
"1958splitHere46","12760374splitHere46","SAXParserFactory SPF = SAXParserFactory.newInstance();<newline46mondego>SPF.setNamespaceAware(true);<newline46mondego>SAXParser SP = SPF.newSAXParser();<newline46mondego>"
"1959splitHere46","12760374splitHere46","startElement"
"1960splitHere46","12760416splitHere46","import java.awt.event.ActionEvent;<newline46mondego>import java.awt.event.KeyEvent;<newline46mondego>import javax.swing.*;<newline46mondego><newline46mondego>public class JTextFieldMagic {<newline46mondego>   public static final String CTRL_ALT_BACK_SPACE = <doubleQuotes46>ctrlAltBackspace<doubleQuotes46>;<newline46mondego><newline46mondego>   public static void main(String[] args) {<newline46mondego>      JTextField field = new JTextField(10);<newline46mondego><newline46mondego>      int condition = JComponent.WHEN_FOCUSED;<newline46mondego>      InputMap inputmap = field.getInputMap(condition);<newline46mondego>      ActionMap actionMap = field.getActionMap();<newline46mondego><newline46mondego>      KeyStroke ctrlAltBackSpaceKeyStroke = KeyStroke.getKeyStroke(<newline46mondego>            KeyEvent.VK_BACK_SPACE, <newline46mondego>            KeyEvent.CTRL_DOWN_MASK | KeyEvent.ALT_DOWN_MASK);<newline46mondego><newline46mondego>      inputmap.put(ctrlAltBackSpaceKeyStroke, CTRL_ALT_BACK_SPACE);<newline46mondego>      actionMap.put(CTRL_ALT_BACK_SPACE, new CtrlAltBackspaceAction());<newline46mondego><newline46mondego>      JOptionPane.showMessageDialog(null, field);<newline46mondego>   }<newline46mondego>}<newline46mondego><newline46mondego>class CtrlAltBackspaceAction extends AbstractAction {<newline46mondego>   @Override<newline46mondego>   public void actionPerformed(ActionEvent e) {<newline46mondego>      System.out.println(JTextFieldMagic.CTRL_ALT_BACK_SPACE);<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"1961splitHere46","12760466splitHere46","&&"
"1962splitHere46","12760466splitHere46","||"
"1963splitHere46","12760466splitHere46","n"
"1964splitHere46","12760466splitHere46","int"
"1965splitHere46","12760466splitHere46","==\!="
"1966splitHere46","12760466splitHere46","int"
"1967splitHere46","12760466splitHere46","void cutToInteger (IntSLList L , int n){    <newline46mondego>    IntSLList tmp =L.head;<newline46mondego>    while( tmp != NULL && tmp.into != n ){<newline46mondego>         tmp=tmp.next;<newline46mondego>    }<newline46mondego>    L.head = tmp;<newline46mondego>}<newline46mondego>"
"1968splitHere46","12760611splitHere46","JFrame foo = new JFrame(<doubleQuotes46>Base<doubleQuotes46>);<newline46mondego>JDialog bar = new JDialog(foo, <doubleQuotes46>About<doubleQuotes46>, true);<newline46mondego>"
"1969splitHere46","12760763splitHere46","void onClick(View v)<newline46mondego>{<newline46mondego>    Dialog d = new Dialog(v.getContext());<newline46mondego>                          ^^^^^^^^^^^^^^<newline46mondego>    TextView testField = new TextView(v.context);<newline46mondego>    testField.setText(<doubleQuotes46>Success!<doubleQuotes46>);<newline46mondego>    d.setContentView(testField);<newline46mondego>    d.show();<newline46mondego>}<newline46mondego>"
"1970splitHere46","12760783splitHere46","for(int[] arr2: array1)<newline46mondego>{<newline46mondego>    for(int val: arr2)<newline46mondego>        System.out.print(val);<newline46mondego>}<newline46mondego>"
"1971splitHere46","12760783splitHere46","String"
"1972splitHere46","12760783splitHere46","int oneD[] = new int[5];<newline46mondego>oneD[0] = 7;<newline46mondego>// ...<newline46mondego><newline46mondego>System.out.println(oneD);<newline46mondego>"
"1973splitHere46","12760783splitHere46","[I@148cc8c<newline46mondego>"
"1974splitHere46","12760819splitHere46","return <doubleQuotes46>A<doubleQuotes46>;<newline46mondego>"
"1975splitHere46","12760819splitHere46","System.out.println(<doubleQuotes46>B<doubleQuotes46>);//Finally block<newline46mondego>return <doubleQuotes46>B<doubleQuotes46>;//Finally block<newline46mondego>return <doubleQuotes46>A<doubleQuotes46>;//Return from exception catch<newline46mondego>"
"1976splitHere46","12761044splitHere46","public enum Column {<newline46mondego>    public int index;<newline46mondego><newline46mondego>    A(0), B(1), C(2), D(3);<newline46mondego><newline46mondego>    public Column( int index ) {<newline46mondego>        this.index = index;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1977splitHere46","12761044splitHere46","String columnAValue = csv[row][Column.A.index]<newline46mondego>"
"1978splitHere46","12761044splitHere46","for( Column column : Column.values ) {<newline46mondego>    String column = csv[row][column.index];<newline46mondego>}<newline46mondego>"
"1979splitHere46","12761044splitHere46","public class CsvParser {<newline46mondego>    public static final int COLUMN_A = 0;<newline46mondego>    public static final int COLUMN_B = 1;<newline46mondego>    public static final int COLUMN_C = 2;<newline46mondego><newline46mondego>}<newline46mondego>"
"1980splitHere46","12761104splitHere46","import java.util.Scanner;<newline46mondego>import java.lang.Integer;<newline46mondego>public class points{<newline46mondego>    private class Vertex{<newline46mondego>        public int xcoord,ycoord;<newline46mondego>        public Vertex right,left;<newline46mondego>    }    <newline46mondego>    public points(){<newline46mondego>        Scanner input = new Scanner(System.in);<newline46mondego>        int no_of_pts = Integer.parseInt(input.nextLine());<newline46mondego>        Vertex[] polygon = new Vertex[no_of_pts];        <newline46mondego>        for(int i=0;i<no_of_pts;i++){<newline46mondego>            String line = input.nextLine();<newline46mondego>            String[] check = line.split(<doubleQuotes46> <doubleQuotes46>); <newline46mondego>            polygon[i] = new Vertex(); // this is what you need.          <newline46mondego>            polygon[i].xcoord = Integer.parseInt(check[0]);<newline46mondego>            polygon[i].ycoord = Integer.parseInt(check[1]);<newline46mondego>        }    <newline46mondego>    }    <newline46mondego>    public static void main(String[] args){<newline46mondego>        new points();    <newline46mondego>    }    <newline46mondego>}<newline46mondego>"
"1981splitHere46","12761114splitHere46","RepetitionCounter"
"1982splitHere46","12761114splitHere46","for(int i = 0; i < matrix.length; i++){<newline46mondego>    threadArray.add(new Thread(this));<newline46mondego>}<newline46mondego>"
"1983splitHere46","12761114splitHere46","rowIndex"
"1984splitHere46","12761114splitHere46","Runnable"
"1985splitHere46","12761114splitHere46","class ThreadTask implements Runnable {<newline46mondego>    private int rowId;<newline46mondego>    private int[][] matrix;<newline46mondego><newline46mondego>    public ThreadTask(int[][] matrix, int rowId) {<newline46mondego>        this.matrix = matrix; // only a reference is passed here so no worries<newline46mondego>        this.rowId = rowId;<newline46mondego>    }<newline46mondego><newline46mondego>    public void run() {<newline46mondego>       // search on my row<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1986splitHere46","12761114splitHere46","for(int i = 0; i < matrix.length; i++) {<newline46mondego>     threadArray.add(new Thread(new ThreadTask(matrix, i)));<newline46mondego>}<newline46mondego>"
"1987splitHere46","12761166splitHere46","private ComputerSeats compSeat = new ComputerSeats();<newline46mondego>"
"1988splitHere46","12761166splitHere46","private Student stud = new Student();<newline46mondego>"
"1989splitHere46","12761166splitHere46","compSeat"
"1990splitHere46","12761166splitHere46","ComputerSeat"
"1991splitHere46","12761166splitHere46","stud"
"1992splitHere46","12761166splitHere46","Student"
"1993splitHere46","12761166splitHere46","compSeat"
"1994splitHere46","12761166splitHere46","ComputerSeat"
"1995splitHere46","12761320splitHere46","$PROJECT_DIRECTORY/src"
"1996splitHere46","12761320splitHere46","bin/classes"
"1997splitHere46","12761320splitHere46","javah -classpath ../bin/classes my.first.NDK.MyNDKActivity"
"1998splitHere46","12761415splitHere46","DatagramPacket.getData()"
"1999splitHere46","12761415splitHere46","offset"
"2000splitHere46","12761415splitHere46","length"
"2001splitHere46","12761415splitHere46","byte[]"
"2002splitHere46","12761415splitHere46","new String(packet.getData(), packet.getOffset(), packet.getLength());<newline46mondego>"
"2003splitHere46","12761415splitHere46","String(byte[] bytes, int offset, int length)"
"2004splitHere46","12761430splitHere46","urlConn.setRequestProperty(<doubleQuotes46>Cookie<doubleQuotes46>, <doubleQuotes46>user=mary17; domain=airtravelbargains.com; path=/autos<doubleQuotes46>);<newline46mondego>"
"2005splitHere46","12761430splitHere46","addRequestProperty"
"2006splitHere46","12761569splitHere46","Key.create()"
"2007splitHere46","12761599splitHere46","Map<K, V>"
"2008splitHere46","12761599splitHere46","Map<V, K>"
"2009splitHere46","12761599splitHere46","Map<V, K>"
"2010splitHere46","12761599splitHere46","Map<K, V>"
"2011splitHere46","12761599splitHere46","public static <K, V> Map<K, V> createMap(Map<K, V> m) {<newline46mondego>    Map<K, V> map = new HashMap<K, V>();<newline46mondego>    Map<V, K> tmpMap = new HashMap<V, K>();<newline46mondego>    for(Map.Entry<K, V> entry : m.entrySet()) {<newline46mondego>        if (!tmpMap.containsKey(entry.getValue())) {<newline46mondego>            tmpMap.put(entry.getValue(), entry.getKey());<newline46mondego>        }<newline46mondego>    }<newline46mondego>    for(Map.Entry<V, K> entry : tmpMap.entrySet()) {<newline46mondego>        map.put(entry.getValue(), entry.getKey());<newline46mondego>    }<newline46mondego>    return map;<newline46mondego>}<newline46mondego>"
"2012splitHere46","12761599splitHere46","LinkedHashMap"
"2013splitHere46","12761599splitHere46","HashMap"
"2014splitHere46","12761627splitHere46","TreeSet"
"2015splitHere46","12761627splitHere46","Set"
"2016splitHere46","12761627splitHere46","Comparable"
"2017splitHere46","12761627splitHere46","Comparator"
"2018splitHere46","12761627splitHere46","Set"
"2019splitHere46","12761627splitHere46","equals"
"2020splitHere46","12761627splitHere46","TreeSet"
"2021splitHere46","12761627splitHere46","compareTo"
"2022splitHere46","12761627splitHere46","Set"
"2023splitHere46","12761627splitHere46","Comparable"
"2024splitHere46","12761627splitHere46","equals()"
"2025splitHere46","12761627splitHere46","Set<BigDecimal> decimals = new HashSet<BigDecimal>();<newline46mondego>decimals.add(new BigDecimal(<doubleQuotes46>42<doubleQuotes46>));<newline46mondego>decimals.add(new BigDecimal(<doubleQuotes46>42.0<doubleQuotes46>));<newline46mondego>decimals.add(new BigDecimal(<doubleQuotes46>42.00<doubleQuotes46>));<newline46mondego>System.out.println(decimals);<newline46mondego>"
"2026splitHere46","12761627splitHere46","decimals"
"2027splitHere46","12761627splitHere46","42"
"2028splitHere46","12761627splitHere46","42.0"
"2029splitHere46","12761627splitHere46","42.00"
"2030splitHere46","12761627splitHere46","equals()"
"2031splitHere46","12761627splitHere46","HashSet"
"2032splitHere46","12761627splitHere46","TreeSet"
"2033splitHere46","12761627splitHere46","42"
"2034splitHere46","12761627splitHere46","BigDecimal.compareTo()"
"2035splitHere46","12761627splitHere46","TreeSet"
"2036splitHere46","12761627splitHere46","equals()"
"2037splitHere46","12761627splitHere46","Set"
"2038splitHere46","12761627splitHere46","equal()"
"2039splitHere46","12761719splitHere46","PackageManager pm = getPackageManager();<newline46mondego>try {<newline46mondego>String packageName = <doubleQuotes46>com.example.package<doubleQuotes46>;<newline46mondego>Intent launchIntent = pm.getLaunchIntentForPackage(packageName);<newline46mondego>startActivity(launchIntent);<newline46mondego>}<newline46mondego>catch (Exception e1){}<newline46mondego>"
"2040splitHere46","12761760splitHere46","new A<? extends B>()"
"2041splitHere46","12761760splitHere46","new A<X<? extends B>>()"
"2042splitHere46","12761760splitHere46","? extends B"
"2043splitHere46","12761760splitHere46","X<? extends B>"
"2044splitHere46","12761760splitHere46","new A<X<? extends B>>()"
"2045splitHere46","12761760splitHere46","? extends B"
"2046splitHere46","12761760splitHere46","A"
"2047splitHere46","12761760splitHere46","class A<T> {<newline46mondego>    T value;<newline46mondego>}<newline46mondego>"
"2048splitHere46","12761760splitHere46","new A<? extends B>().value"
"2049splitHere46","12761760splitHere46","? extends B"
"2050splitHere46","12761760splitHere46","new A<X<? extends B>>()"
"2051splitHere46","12761775splitHere46","Service"
"2052splitHere46","12761777splitHere46","<doubleQuotes46>"
"2053splitHere46","12761853splitHere46","public void onWindowFocusChanged (boolean hasFocus)<newline46mondego>"
"2054splitHere46","12761977splitHere46","import java.util.Scanner;<newline46mondego><newline46mondego>//begin class driver       <newline46mondego>public class driver {<newline46mondego><newline46mondego>/**<newline46mondego> * @paramargs the command line arguments<newline46mondego> */<newline46mondego>//begin main method<newline46mondego>    public static void main(String[] args) {<newline46mondego>    //initiates scanner<newline46mondego>        Scanner userInput = new Scanner (System.in);<newline46mondego><newline46mondego>    //declare variables<newline46mondego>    int dayOfWeek;<newline46mondego>    String userEvent;<newline46mondego><newline46mondego>    //creates object for calender class<newline46mondego>    calender calenderObject = new calender();<newline46mondego>    calender.fillArray();<newline46mondego><newline46mondego>    //user prompt<newline46mondego>    System.out.println(<doubleQuotes46>Enter day of week for your event in the following format:<doubleQuotes46>);<newline46mondego>    System.out.println(<doubleQuotes46>Enter 1 for Monday<doubleQuotes46>);<newline46mondego>    System.out.println(<doubleQuotes46>Enter 2 for Tuesday<doubleQuotes46>);<newline46mondego>    System.out.println(<doubleQuotes46>Enter 3 for Wednsday<doubleQuotes46>);<newline46mondego>    System.out.println(<doubleQuotes46>Enter 4 for Thursday<doubleQuotes46>);<newline46mondego>    System.out.println(<doubleQuotes46>Enter 5 for Friday<doubleQuotes46>);<newline46mondego>    System.out.println(<doubleQuotes46>Enter -1 to quit<doubleQuotes46>);<newline46mondego><newline46mondego>    //collect user input<newline46mondego>    dayOfWeek = userInput.nextInt(); <newline46mondego><newline46mondego>    //user prompt<newline46mondego>    System.out.println(<doubleQuotes46>Please type in the name of your event<doubleQuotes46>);<newline46mondego><newline46mondego>    //collect user input<newline46mondego>    userEvent = userInput.next();<newline46mondego><newline46mondego>    //begin while loop<newline46mondego>    while (dayOfWeek != -1) {<newline46mondego>        if ((dayOfWeek>=1) && (dayOfWeek<=5)){<newline46mondego>            calenderObject.createEvent(dayOfWeek, userEvent,dayOfWeek);<newline46mondego>            for (int i=0;i<calender.length;i++){<newline46mondego>                System.out.println(calender.events[i]);<newline46mondego>            }<newline46mondego>            dayOfWeek = userInput.nextInt();<newline46mondego><newline46mondego>            if  (dayOfWeek == -1){<newline46mondego>                for (int i=0;i<calender.length;i++){<newline46mondego>                    System.out.println(calender.events[i]);<newline46mondego>                }<newline46mondego>                System.exit(0);<newline46mondego>            }<newline46mondego>            System.out.println(<doubleQuotes46>Please type in the name of your event<doubleQuotes46>);    <newline46mondego>            userEvent = userInput.next();<newline46mondego>        } else{<newline46mondego>            System.out.println(<doubleQuotes46>You have entered an invalid number<doubleQuotes46>);<newline46mondego>            System.out.println(<doubleQuotes46>Press -1 to quit or enter another day<doubleQuotes46>);<newline46mondego>            System.out.println(<doubleQuotes46>Enter 1 for Monday<doubleQuotes46>);<newline46mondego>            System.out.println(<doubleQuotes46>Enter 2 for Tuesday<doubleQuotes46>);<newline46mondego>            System.out.println(<doubleQuotes46>Enter 3 for Wednsday<doubleQuotes46>);<newline46mondego>            System.out.println(<doubleQuotes46>Enter 4 for Thursday<doubleQuotes46>);<newline46mondego>            System.out.println(<doubleQuotes46>Enter 5 for Friday<doubleQuotes46>);<newline46mondego>            System.out.println(<doubleQuotes46>Enter -1 to quit<doubleQuotes46>);<newline46mondego>            dayOfWeek = userInput.nextInt(); <newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    //end main method<newline46mondego>}<newline46mondego>"
"2055splitHere46","12761977splitHere46","//begin calender class<newline46mondego>public class calender {<newline46mondego><newline46mondego>    static int length = 5;<newline46mondego>    static String[] events = new String[length];<newline46mondego><newline46mondego>    public static String[] fillArray(){<newline46mondego>        for (int i=0; i< length;i++){<newline46mondego>            events[i] = <doubleQuotes46>-No event planned-<doubleQuotes46>;<newline46mondego>        }<newline46mondego>        return events;<newline46mondego>    }<newline46mondego><newline46mondego>    //begin createEvent method<newline46mondego>public String[] createEvent(int l, String userEvent, int dayOfWeek){<newline46mondego>    int t = l;<newline46mondego>        if(t%5 == 1 ){<newline46mondego>            events[0] = (<doubleQuotes46>Monday Appoinment: <doubleQuotes46>) + userEvent;<newline46mondego>        } else if(t%5 == 2 ){<newline46mondego>            events[1] = (<doubleQuotes46>Tuesday Appoinment: <doubleQuotes46>) + userEvent;<newline46mondego>        } else if(t%5 == 3 ){<newline46mondego>            events[2] = (<doubleQuotes46>WednsdayAppoinment: <doubleQuotes46>) + userEvent;<newline46mondego>        } else if(t%5 == 4){<newline46mondego>            events[3] = (<doubleQuotes46>Thursday Appoinment: <doubleQuotes46>) + userEvent;<newline46mondego>        } else if(t%5 == 0 ){<newline46mondego>            events[4] = (<doubleQuotes46>Friday Appoinment: <doubleQuotes46>) + userEvent;<newline46mondego>        }        <newline46mondego>        return events;<newline46mondego>    }<newline46mondego><newline46mondego>//end calender class    <newline46mondego>}<newline46mondego>"
"2056splitHere46","12761980splitHere46","<your_workspace>/.metadata/.plugin/org.eclipse.wst.server.core/"
"2057splitHere46","12761980splitHere46","localhost:8080"
"2058splitHere46","12761980splitHere46","ROOT"
"2059splitHere46","12761980splitHere46","$CATALINA_HOME/webapps/ROOT"
"2060splitHere46","12761996splitHere46","Comparator"
"2061splitHere46","12761996splitHere46","compare"
"2062splitHere46","12761996splitHere46","public class NodeComparator implements Comparator<Node> {<newline46mondego>    public int compare(Node a, Node b) {<newline46mondego>        Integer aCount = a.getFunctionCount();<newline46mondego>        Integer bCount = b.getFunctionCount();<newline46mondego>        return a.compareTo(b);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2063splitHere46","12762163splitHere46","exec"
"2064splitHere46","12762163splitHere46","Process"
"2065splitHere46","12762163splitHere46","*.java"
"2066splitHere46","12762163splitHere46","*.class"
"2067splitHere46","12762277splitHere46","CardLayout"
"2068splitHere46","12762277splitHere46","Buttons"
"2069splitHere46","12762277splitHere46","removeAll()"
"2070splitHere46","12762277splitHere46","resetGame()"
"2071splitHere46","12762296splitHere46","import anotherPackage.anotherClass;<newline46mondego>"
"2072splitHere46","12762296splitHere46","anotherClass ac=new anotherClass();<newline46mondego>"
"2073splitHere46","12762296splitHere46","anotherPackage.anotherClass ac=new anotherPackage.anotherClass()<newline46mondego>"
"2074splitHere46","12762296splitHere46","set CLASSPATH<newline46mondego>"
"2075splitHere46","12762296splitHere46","org.apache.common.exec.DefaultExecutor was not in classpath<newline46mondego>"
"2076splitHere46","12762296splitHere46","javac -classpath %cd%\.. myclass.java<newline46mondego>"
"2077splitHere46","12762355splitHere46","next()"
"2078splitHere46","12762355splitHere46","import java.awt.EventQueue;<newline46mondego><newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JPanel;<newline46mondego>import java.awt.CardLayout;<newline46mondego><newline46mondego>import java.awt.Color;<newline46mondego>import java.awt.GridBagLayout;<newline46mondego>import java.awt.event.ActionEvent;<newline46mondego><newline46mondego>import java.awt.event.ActionListener;<newline46mondego><newline46mondego>import javax.swing.BorderFactory;<newline46mondego>import javax.swing.BoxLayout;<newline46mondego>import javax.swing.JButton;<newline46mondego>import javax.swing.JLabel;<newline46mondego>import javax.swing.border.Border;<newline46mondego><newline46mondego>public class TestCards extends JFrame {<newline46mondego><newline46mondego>    private final CardLayout cl = new CardLayout();<newline46mondego>    private final JPanel cards = new JPanel(cl);<newline46mondego>    private final Border border = BorderFactory.createEmptyBorder(60, 60, 60, 60);<newline46mondego><newline46mondego>    public TestCards() {<newline46mondego><newline46mondego>        JPanel contentPane = new JPanel();<newline46mondego>        contentPane.setLayout(new BoxLayout(contentPane, BoxLayout.Y_AXIS));<newline46mondego>        contentPane.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));<newline46mondego>        setContentPane(contentPane);<newline46mondego><newline46mondego>        JPanel panel1 = new JPanel(new GridBagLayout());<newline46mondego>        panel1.setBorder(border);<newline46mondego>        panel1.setBackground(Color.RED);<newline46mondego>        panel1.add(new JLabel(<doubleQuotes46>Card 1<doubleQuotes46>));<newline46mondego>        cards.add(panel1, <doubleQuotes46>First Panel<doubleQuotes46>);<newline46mondego><newline46mondego>        JPanel panel2 = new JPanel(new GridBagLayout());<newline46mondego>        panel2.setBorder(border);<newline46mondego>        panel2.setBackground(Color.GREEN);<newline46mondego>        panel2.add(new JLabel(<doubleQuotes46>Card 2<doubleQuotes46>));<newline46mondego>        cards.add(panel2, <doubleQuotes46>Second Panel<doubleQuotes46>);<newline46mondego><newline46mondego>        JPanel panel3 = new JPanel(new GridBagLayout());<newline46mondego>        panel3.setBorder(border);<newline46mondego>        panel3.setBackground(Color.BLUE);<newline46mondego>        panel3.add(new JLabel(<doubleQuotes46>Card 3<doubleQuotes46>));<newline46mondego>        cards.add(panel3, <doubleQuotes46>Third Panel<doubleQuotes46>);<newline46mondego><newline46mondego>        JButton controlButton = new JButton(<doubleQuotes46>Switch<doubleQuotes46>);<newline46mondego>        controlButton.addActionListener(new ActionListener() {<newline46mondego>            @Override<newline46mondego>            public void actionPerformed(ActionEvent e) {<newline46mondego>                cl.next(cards);<newline46mondego>            }<newline46mondego>        });<newline46mondego>        JPanel controlPanel = new JPanel();<newline46mondego>        controlPanel.setBackground(Color.LIGHT_GRAY);<newline46mondego>        controlPanel.add(controlButton);<newline46mondego><newline46mondego>        contentPane.add(cards);<newline46mondego>        contentPane.add(controlPanel);<newline46mondego><newline46mondego>        cl.show(cards, <doubleQuotes46>First Panel<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        EventQueue.invokeLater(new Runnable() {<newline46mondego>            public void run() {<newline46mondego>                TestCards frame = new TestCards();<newline46mondego>                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>                frame.pack();<newline46mondego>                frame.setLocationRelativeTo(null);<newline46mondego>                frame.setVisible(true);<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2079splitHere46","12762355splitHere46","show"
"2080splitHere46","12762355splitHere46","next"
"2081splitHere46","12762379splitHere46","<newline46mondego><newline46mondego>    public static boolean copyDirectory(File source, File destination) {<newline46mondego>      try{<newline46mondego>        // Copy Stuff<newline46mondego>        return true;<newline46mondego>      catch(IOException e){<newline46mondego>        // Your way of ErrorLogging<newline46mondego>        return false;<newline46mondego>      }<newline46mondego>    }<newline46mondego><newline46mondego>"
"2082splitHere46","12762379splitHere46","import org.apache.commons.io.FileUtils;<newline46mondego>// the rest import<newline46mondego>public class MyClass{<newline46mondego>  public myMethod(){<newline46mondego>   String src = <doubleQuotes46>/home/user/dir_src<doubleQuotes46>;<newline46mondego>   String dst = <doubleQuotes46>/home/user/dir_dst<doubleQuotes46>;<newline46mondego>   try{<newline46mondego>      FileUtils.copyDirectory(new File(src), new File(dst)); <newline46mondego>   catch(IOException e){<newline46mondego>      e.printStackTrac();<newline46mondego>   }<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"2083splitHere46","12762527splitHere46","Serializable"
"2084splitHere46","12762527splitHere46","Serializable"
"2085splitHere46","12762527splitHere46","NotSerializableException"
"2086splitHere46","12762527splitHere46","values"
"2087splitHere46","12762527splitHere46","Serializable"
"2088splitHere46","12762527splitHere46","Serializable"
"2089splitHere46","12762527splitHere46","Serializable"
"2090splitHere46","12762527splitHere46","A"
"2091splitHere46","12762527splitHere46","Serializable"
"2092splitHere46","12762527splitHere46","public class A implements Serializable {<newline46mondego>    private B b;<newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"2093splitHere46","12762527splitHere46","B"
"2094splitHere46","12762527splitHere46","public class B { ... }<newline46mondego>"
"2095splitHere46","12762527splitHere46","A"
"2096splitHere46","12762527splitHere46","ObjectOutputStream"
"2097splitHere46","12762527splitHere46","NotSerializableException"
"2098splitHere46","12762527splitHere46","private B b"
"2099splitHere46","12762734splitHere46","break"
"2100splitHere46","12762734splitHere46","case 0: <newline46mondego>   answer = (arg1 * milligram) / milligram;<newline46mondego>   break;<newline46mondego>   ...<newline46mondego>"
"2101splitHere46","12762747splitHere46","world"
"2102splitHere46","12762747splitHere46","Balance"
"2103splitHere46","12762747splitHere46","Balance.class"
"2104splitHere46","12762747splitHere46","javac -cp %CLASSPATH%;c:\ SomeClass.java<newline46mondego>"
"2105splitHere46","12762747splitHere46","SomeClass.java"
"2106splitHere46","12762850splitHere46","import java.util.zip.ZipEntry;<newline46mondego>import java.util.zip.ZipOutputStream;<newline46mondego>import org.apache.commons.io.IOUtils;<newline46mondego>import java.io.*;<newline46mondego><newline46mondego>public class TestKmz {<newline46mondego><newline46mondego>    public static void main(String[] args) throws IOException {     <newline46mondego>        createKMZ();<newline46mondego>        System.out.println(<doubleQuotes46>file created<doubleQuotes46>);     <newline46mondego>    }<newline46mondego><newline46mondego>    public static void createKMZ()  throws IOException  {<newline46mondego>        FileOutputStream fos = new FileOutputStream(<doubleQuotes46>out.kmz<doubleQuotes46>);<newline46mondego>        ZipOutputStream zoS = new ZipOutputStream(fos);     <newline46mondego>        ZipEntry ze = new ZipEntry(<doubleQuotes46>doc.kml<doubleQuotes46>);<newline46mondego>        zoS.putNextEntry(ze);<newline46mondego>        PrintStream ps = new PrintStream(zoS);          <newline46mondego>        ps.println(<doubleQuotes46><?xml version='1.0' encoding='UTF-8'?><doubleQuotes46>);<newline46mondego>        ps.println(<doubleQuotes46><kml xmlns='http://www.opengis.net/kml/2.2'><doubleQuotes46>);     <newline46mondego>        // write out contents of KML file ...<newline46mondego>        ps.println(<doubleQuotes46><Placemark><doubleQuotes46>);<newline46mondego>        // add reference to image via inline style<newline46mondego>        ps.println(<doubleQuotes46><Style><IconStyle><doubleQuotes46>);<newline46mondego>        ps.println(<doubleQuotes46>  <Icon><href>image.png</href></Icon><doubleQuotes46>);<newline46mondego>        ps.println(<doubleQuotes46></IconStyle></Style><doubleQuotes46>);<newline46mondego>        ps.println(<doubleQuotes46></Placemark><doubleQuotes46>);<newline46mondego>        ps.println(<doubleQuotes46></kml><doubleQuotes46>);<newline46mondego>        ps.flush();                 <newline46mondego>        zoS.closeEntry(); // close KML entry<newline46mondego><newline46mondego>        // now add image file entry to KMZ<newline46mondego>        FileInputStream is = null;<newline46mondego>        try {                   <newline46mondego>            is = new FileInputStream(<doubleQuotes46>image.png<doubleQuotes46>);<newline46mondego>            ZipEntry zEnt = new ZipEntry(<doubleQuotes46>image.png<doubleQuotes46>);<newline46mondego>            zoS.putNextEntry(zEnt);<newline46mondego>            // copy image input to KMZ output<newline46mondego>            // write contents to entry within compressed KMZ file<newline46mondego>            IOUtils.copy(is, zoS);<newline46mondego>        } finally {<newline46mondego>            IOUtils.closeQuietly(is);<newline46mondego>        }<newline46mondego>        zoS.closeEntry();<newline46mondego>        zoS.close();<newline46mondego>    }   <newline46mondego>}   <newline46mondego>"
"2107splitHere46","12762893splitHere46","public void setFirstName(String firstName)<newline46mondego>{<newline46mondego><newline46mondego>    try{<newline46mondego>    // Here you create a READing statement.<newline46mondego>        statement= con.prepareStatement(<doubleQuotes46>SELECT * FROM guest WHERE firstName = ?<doubleQuotes46>);<newline46mondego>        statement.setString(1, firstName);<newline46mondego>        ResultSet rs = statement.executeQuery();<newline46mondego>        while(rs.next()){<newline46mondego>    // Here you set the >>method param<< to a non-existing String<newline46mondego>            firstName = rs.getString(1);<newline46mondego>        }<newline46mondego>    }catch(Exception e){<newline46mondego>       System.out.print(e);<newline46mondego>    }<newline46mondego>}<newline46mondego>// After the method is done you have done nothing because you didn't even set your class member variable <doubleQuotes46>firstName<doubleQuotes46>, which you would have set using <doubleQuotes46>this.firstName<doubleQuotes46>.<newline46mondego>"
"2108splitHere46","12763025splitHere46","boolean"
"2109splitHere46","12763034splitHere46","byte[]"
"2110splitHere46","12763034splitHere46","byte[]"
"2111splitHere46","12763034splitHere46","int"
"2112splitHere46","12763165splitHere46","drawImage(...)"
"2113splitHere46","12763165splitHere46","g.drawImage(img, 0, 0, getWidth(), getHeight(), this);<newline46mondego>"
"2114splitHere46","12763165splitHere46","import java.awt.Graphics;<newline46mondego>import java.awt.image.BufferedImage;<newline46mondego>import java.io.IOException;<newline46mondego>import java.net.URL;<newline46mondego>import javax.imageio.ImageIO;<newline46mondego>import javax.swing.*;<newline46mondego><newline46mondego>@SuppressWarnings(<doubleQuotes46>serial<doubleQuotes46>)<newline46mondego>public class ExpandingImage extends JPanel {<newline46mondego>   public static final String GUITAR = <doubleQuotes46>http://duke.kenai.com/Oracle/OracleStrat.png<doubleQuotes46>;<newline46mondego>   BufferedImage img;<newline46mondego><newline46mondego>   public ExpandingImage(String imgUrlPath) throws IOException {<newline46mondego>      URL imgUrl = new URL(imgUrlPath);<newline46mondego>      img = ImageIO.read(imgUrl);<newline46mondego>   }<newline46mondego><newline46mondego>   @Override<newline46mondego>   protected void paintComponent(Graphics g) {<newline46mondego>      super.paintComponent(g);<newline46mondego>      if (img != null) {<newline46mondego>         g.drawImage(img, 0, 0, getWidth(), getHeight(), this);<newline46mondego>      }<newline46mondego>   }<newline46mondego><newline46mondego><newline46mondego>   private static void createAndShowGui() {<newline46mondego>      ExpandingImage mainPanel;<newline46mondego>      try {<newline46mondego>         mainPanel = new ExpandingImage(GUITAR);<newline46mondego>         JFrame frame = new JFrame(<doubleQuotes46>ExpandingImage<doubleQuotes46>);<newline46mondego>         frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>         frame.getContentPane().add(mainPanel);<newline46mondego>         frame.pack();<newline46mondego>         frame.setLocationByPlatform(true);<newline46mondego>         frame.setExtendedState(JFrame.MAXIMIZED_BOTH);<newline46mondego>         frame.setVisible(true);<newline46mondego>      } catch (IOException e) {<newline46mondego>         e.printStackTrace();<newline46mondego>      }<newline46mondego>   }<newline46mondego><newline46mondego>   public static void main(String[] args) {<newline46mondego>      SwingUtilities.invokeLater(new Runnable() {<newline46mondego>         public void run() {<newline46mondego>            createAndShowGui();<newline46mondego>         }<newline46mondego>      });<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"2115splitHere46","12763207splitHere46","getCandleSize()"
"2116splitHere46","12763207splitHere46","public int getCandleSize() {<newline46mondego>    if(lengte > 15)<newline46mondego>        lengte -= speed;<newline46mondego>    else<newline46mondego>        autoburn.stop();<newline46mondego><newline46mondego>    return lengte;<newline46mondego>}<newline46mondego>"
"2117splitHere46","12763435splitHere46","struct"
"2118splitHere46","12763435splitHere46",">>> import struct<newline46mondego>>>> struct.unpack('>i', '\x00\x00\x00\x05')<newline46mondego>(5,)<newline46mondego>"
"2119splitHere46","12763435splitHere46",">i"
"2120splitHere46","12763474splitHere46","string toSplit = <doubleQuotes46>75 \r\n 95 64 \r\n 17 47 82<doubleQuotes46>;<newline46mondego><newline46mondego>string[] numbers = toSplit.Split(new[] { Environment.NewLine, <doubleQuotes46>\t<doubleQuotes46>, <doubleQuotes46> <doubleQuotes46> },<newline46mondego>                                 StringSplitOptions.RemoveEmptyEntries);<newline46mondego>"
"2121splitHere46","12763474splitHere46","short"
"2122splitHere46","12763474splitHere46","int"
"2123splitHere46","12763474splitHere46","ushort"
"2124splitHere46","12763474splitHere46","uint"
"2125splitHere46","12763498splitHere46","<div>"
"2126splitHere46","12763498splitHere46","$('.click').click(function() {<newline46mondego><newline46mondego>var content = <doubleQuotes46><img src='test.jpg'> <p>lorum ipsum ipsum ipsum </p><doubleQuotes46><newline46mondego>// replace the contents of the div with the new contents<newline46mondego>$('#content-container').html(lcontent);<newline46mondego><newline46mondego>// cancel the default action of the link by returning false<newline46mondego>return false;<newline46mondego>});<newline46mondego>"
"2127splitHere46","12763549splitHere46","exception.getCause().getClass()"
"2128splitHere46","12763549splitHere46","exception.getClass()"
"2129splitHere46","12763584splitHere46","nary_list.iterator()<newline46mondego>"
"2130splitHere46","12763584splitHere46","while(t.nary_list.iterator().hasNext()){<newline46mondego>"
"2131splitHere46","12763584splitHere46","Iterator<NaryTreeNode> iterator = t.nary_list.iterator();<newline46mondego>while (iterator.hasNext()) {<newline46mondego>"
"2132splitHere46","12763584splitHere46","for (NaryTreeNode node : t.nary_list) <newline46mondego>"
"2133splitHere46","12763584splitHere46","!hasNext()"
"2134splitHere46","12763584splitHere46","// Display all of my children<newline46mondego>for (NaryTreeNode node : t.nary_list) {<newline46mondego>    display(node);<newline46mondego>}<newline46mondego><newline46mondego>// Display myself<newline46mondego>System.out.println(<doubleQuotes46>Value is: <doubleQuotes46> + t.data);<newline46mondego>"
"2135splitHere46","12763655splitHere46","String inputLine2 =  inputLine.substring(inputLine.indexOf(',') + 1);<newline46mondego>"
"2136splitHere46","12763655splitHere46","line.skip(<doubleQuotes46>[ \t]+<doubleQuotes46>);<newline46mondego>"
"2137splitHere46","12763655splitHere46","...<newline46mondego>Orville’s Acres43801114.8<newline46mondego>Hoffman’s Hills3622977.2<newline46mondego>Jiffy Quick Farm2481289.4<newline46mondego>Jolly Good Plantation104570183.2<newline46mondego>Organically Grown Inc.1468345.5<newline46mondego>"
"2138splitHere46","12763655splitHere46","System.out.println(farmName + jars + acres);<newline46mondego>"
"2139splitHere46","12763662splitHere46","public static void main( String[] args ) {<newline46mondego>    String withVowels = <doubleQuotes46>בַּיִת<doubleQuotes46>;<newline46mondego>    String withoutVowels = <doubleQuotes46>בית<doubleQuotes46>;<newline46mondego><newline46mondego>    String withVowelsTwo = <doubleQuotes46>הַבַּיְתָה<doubleQuotes46>;<newline46mondego>    String withoutVowelsTwo = <doubleQuotes46>הביתה<doubleQuotes46>;<newline46mondego><newline46mondego>    System.out.println( <doubleQuotes46>These two strings are <doubleQuotes46> + (withVowels.equals( withoutVowels ) ? <doubleQuotes46><doubleQuotes46> : <doubleQuotes46>not <doubleQuotes46>) + <doubleQuotes46>equal<doubleQuotes46> );<newline46mondego>    System.out.println( <doubleQuotes46>The second two strings are <doubleQuotes46> + (withVowelsTwo.equals( withoutVowelsTwo ) ? <doubleQuotes46><doubleQuotes46> : <doubleQuotes46>not <doubleQuotes46>) + <doubleQuotes46>equal<doubleQuotes46> );<newline46mondego><newline46mondego>    Collator collator = Collator.getInstance( new Locale( <doubleQuotes46>he<doubleQuotes46> ) );<newline46mondego>    collator.setStrength( Collator.PRIMARY );<newline46mondego><newline46mondego>    System.out.println( collator.equals( withVowels, withoutVowels ) );<newline46mondego>    System.out.println( collator.equals( withVowelsTwo, withoutVowelsTwo ) );<newline46mondego>}<newline46mondego>"
"2140splitHere46","12763662splitHere46","These two strings are not equal<newline46mondego>The second two strings are not equal<newline46mondego>true<newline46mondego>true<newline46mondego>"
"2141splitHere46","12763665splitHere46","private ArrayList<GraphNode> getDisconnectedSet(ArrayList<GraphNode> allNodes, GraphNode target)<newline46mondego>{<newline46mondego>    if(!allNodes.contains(target))<newline46mondego>        return;<newline46mondego><newline46mondego>    allNodes.remove(target);<newline46mondego><newline46mondego>    for(Edge e : edges) // Need to edit to iterate through connected nodes<newline46mondego>        getDisconnectedSet(allNodes, e.otherSide);<newline46mondego>}<newline46mondego>"
"2142splitHere46","12763729splitHere46","given"
"2143splitHere46","12763729splitHere46","if ( number <= 80 && number >= 1 ) {<newline46mondego><newline46mondego>   char myChar = '*';<newline46mondego><newline46mondego>   // This while loop will run 15 times if value of number is 15..<newline46mondego>   while(number > 0) {<newline46mondego>        System.out.println(myChar);<newline46mondego>        number--;   // Decrement the value of `number` by 1.<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"2144splitHere46","12763729splitHere46","number > 0"
"2145splitHere46","12764179splitHere46","Map"
"2146splitHere46","12764179splitHere46","HashMap"
"2147splitHere46","12764179splitHere46","List<HashMap<String, String>> data =<newline46mondego>new LinkedList<HashMap<String, String>>();<newline46mondego>"
"2148splitHere46","12764245splitHere46","[]"
"2149splitHere46","12764245splitHere46","String url = jObject.getString(<doubleQuotes46>url<doubleQuotes46>);<newline46mondego>"
"2150splitHere46","12764245splitHere46","{<newline46mondego>    <doubleQuotes46>domain<doubleQuotes46>: <doubleQuotes46>Lorem Ipsum<doubleQuotes46>,<newline46mondego>    <doubleQuotes46>next_page_id<doubleQuotes46>: null,<newline46mondego>    <doubleQuotes46>url<doubleQuotes46>: <doubleQuotes46>Lorem Ipsum<doubleQuotes46>,<newline46mondego>    <doubleQuotes46>array<doubleQuotes46>:<newline46mondego>        [<newline46mondego>            <doubleQuotes46>element1<doubleQuotes46>,<newline46mondego>            <doubleQuotes46>element2<doubleQuotes46><newline46mondego>        ]<newline46mondego>}<newline46mondego>"
"2151splitHere46","12764344splitHere46","20 choose 5"
"2152splitHere46","12764344splitHere46","20! / ( 5! * (20-5)! )"
"2153splitHere46","12764344splitHere46","memoization"
"2154splitHere46","12764344splitHere46","//STORING FACTORIAL COMPUTATIONS<newline46mondego>    private Map<Integer,Long> factorialMap = new HashMap<Integer,Long>();<newline46mondego><newline46mondego><newline46mondego>    public Long getFactorial(int number) {<newline46mondego><newline46mondego>        //CHECK IF I ALREADY COMPUTED THIS FACTORIAL<newline46mondego>        Long val = factorialMap.get(number);<newline46mondego>        if(val != null) {<newline46mondego>            //GOT IT!<newline46mondego>            return val;<newline46mondego>        } else {<newline46mondego>            //NEED TO COMPUTE!<newline46mondego>            val = getFactorialRecursive(number);<newline46mondego>            //STORING IT TO SAVE COMPUTATION FOR LATER<newline46mondego>            factorialMap.put(number, val);<newline46mondego>            return val;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    //RECURSIVE FUNCTION TO COMPUTE FACTORIAL<newline46mondego>    public Long getFactorialRecursive(int number) {<newline46mondego>        if(number < 2) {<newline46mondego>            return 1L;<newline46mondego>        } else {<newline46mondego>            return number * getFactorialRecursive(number-1);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>    //ACTUAL CALL TO <doubleQuotes46>20 choose 5<doubleQuotes46><newline46mondego>    public Long combination(int fromVal, int chooseVal) {<newline46mondego>        return getFactorial(fromVal)/(getFactorial(chooseVal)*getFactorial(fromVal-chooseVal));<newline46mondego>    }<newline46mondego>"
"2155splitHere46","12764491splitHere46","equals()"
"2156splitHere46","12764491splitHere46","playAgain.equals(<doubleQuotes46>yes<doubleQuotes46>)<newline46mondego>"
"2157splitHere46","12764491splitHere46","equals()"
"2158splitHere46","12764491splitHere46","=="
"2159splitHere46","12764491splitHere46","if(rollNum == 3)<newline46mondego>{<newline46mondego>    System.out.println(<doubleQuotes46>You lose.\n<doubleQuotes46>);<newline46mondego>    System.out.println(<doubleQuotes46>Would you like to play again?<doubleQuotes46>);<newline46mondego>    //playAgain = sc.nextLine();<newline46mondego><newline46mondego>    // Change your nextLine() to next()<newline46mondego>    playAgain = sc.next();<newline46mondego>    rollNum ++;<newline46mondego>}<newline46mondego>"
"2160splitHere46","12764573splitHere46","@Override"
"2161splitHere46","12764573splitHere46","@Override"
"2162splitHere46","12764573splitHere46","@Override"
"2163splitHere46","12764603splitHere46","ProcessBuilder pb = new ProcessBuilder(<doubleQuotes46>java<doubleQuotes46>, <doubleQuotes46>CPU/MEMORY<doubleQuotes46>);   <newline46mondego>pb.directory(new File(<doubleQuotes46>/home/myhome/myjavaprojects<doubleQuotes46>));<newline46mondego>Process p = pb.start();<newline46mondego>"
"2164splitHere46","12764693splitHere46","log4j-api-2.0-beta1.jar"
"2165splitHere46","12764693splitHere46","log4j-core-2.0-beta1.jar"
"2166splitHere46","12764693splitHere46","pom.xml"
"2167splitHere46","12764693splitHere46","<dependency><newline46mondego>    <groupId>org.apache.logging.log4j</groupId><newline46mondego>    <artifactId>log4j-api</artifactId><newline46mondego>    <version>2.0-beta1</version><newline46mondego>  </dependency><newline46mondego>  <dependency><newline46mondego>    <groupId>org.apache.logging.log4j</groupId><newline46mondego>    <artifactId>log4j-core</artifactId><newline46mondego>    <version>2.0-beta1</version><newline46mondego>  </dependency><newline46mondego>"
"2168splitHere46","12764968splitHere46","a[0] = b;<newline46mondego>"
"2169splitHere46","12764968splitHere46","a"
"2170splitHere46","12764968splitHere46","Object[]"
"2171splitHere46","12764968splitHere46","Object"
"2172splitHere46","12764968splitHere46","a[0]"
"2173splitHere46","12764968splitHere46","Object"
"2174splitHere46","12764968splitHere46","a[0][0]"
"2175splitHere46","12764968splitHere46","Object"
"2176splitHere46","12764968splitHere46","Object"
"2177splitHere46","12765033splitHere46","public static class Printer implements Printable {<newline46mondego>    final Component comp;<newline46mondego><newline46mondego>    public Printer(Component comp){<newline46mondego>        this.comp = comp;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public int print(Graphics g, PageFormat format, int page_index) <newline46mondego>            throws PrinterException {<newline46mondego>        if (page_index > 0) {<newline46mondego>            return Printable.NO_SUCH_PAGE;<newline46mondego>        }<newline46mondego><newline46mondego>        // get the bounds of the component<newline46mondego>        Dimension dim = comp.getSize();<newline46mondego>        double cHeight = dim.getHeight();<newline46mondego>        double cWidth = dim.getWidth();<newline46mondego><newline46mondego>        // get the bounds of the printable area<newline46mondego>        double pHeight = format.getImageableHeight();<newline46mondego>        double pWidth = format.getImageableWidth();<newline46mondego><newline46mondego>        double pXStart = format.getImageableX();<newline46mondego>        double pYStart = format.getImageableY();<newline46mondego><newline46mondego>        double xRatio = pWidth / cWidth;<newline46mondego>        double yRatio = pHeight / cHeight;<newline46mondego><newline46mondego><newline46mondego>        Graphics2D g2 = (Graphics2D) g;<newline46mondego>        g2.translate(pXStart, pYStart);<newline46mondego>        g2.scale(xRatio, yRatio);<newline46mondego>        comp.paint(g2);<newline46mondego><newline46mondego>        return Printable.PAGE_EXISTS;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2178splitHere46","12765033splitHere46","JFrame yourComponent = new JFrame();<newline46mondego>PrinterJob pjob = PrinterJob.getPrinterJob();<newline46mondego>PageFormat preformat = pjob.defaultPage();<newline46mondego>preformat.setOrientation(PageFormat.LANDSCAPE);<newline46mondego>PageFormat postformat = pjob.pageDialog(preformat);<newline46mondego>//If user does not hit cancel then print.<newline46mondego>if (preformat != postformat) {<newline46mondego>    //Set print component<newline46mondego>    pjob.setPrintable(new Printer(yourComponent), postformat);<newline46mondego>    if (pjob.printDialog()) {<newline46mondego>        pjob.print();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2179splitHere46","12765057splitHere46","private float calculateNewScore(){<newline46mondego>        float currentScore = 6.1123<newline46mondego>        int currentCount = 12;<newline46mondego>        float newValue = 4.5;<newline46mondego>        int newCount = currentCount+1;<newline46mondego><newline46mondego>        float newScore = (currentScore * currentCount + newValue) / newCount ;<newline46mondego><newline46mondego>    }<newline46mondego>"
"2180splitHere46","12765057splitHere46","public class CalculateScore {<newline46mondego><newline46mondego>  public static void main(String[] args) {<newline46mondego>    float currentScore = 6.1123; //you can initialize with any desired value<newline46mondego>    int currentCount = 12;//you can initialize with any desired value<newline46mondego><newline46mondego>    float newValue = 0;<newline46mondego>    Scanner scanner = new Scanner( System.in );     <newline46mondego><newline46mondego>    do{<newline46mondego>        System.out.println(<doubleQuotes46>Enter your new value. Enter 0 or negative to exit.<doubleQuotes46>);<newline46mondego>        newValue = scanner.nextFloat();<newline46mondego>        if(newValue>0){<newline46mondego>            currentScore = (currentScore*currentCount+newValue)/(++currentCount);<newline46mondego>            System.out.println(<doubleQuotes46>Your new score is <doubleQuotes46>+currentScore);<newline46mondego>        }else{<newline46mondego>            System.out.println(<doubleQuotes46>Program is exiting<doubleQuotes46>);<newline46mondego>        }<newline46mondego><newline46mondego>    }while(newValue >0);<newline46mondego>   }<newline46mondego>  }<newline46mondego>"
"2181splitHere46","12765071splitHere46","Is JOGL restricted to one thread?<newline46mondego>"
"2182splitHere46","12765071splitHere46","How to work with JOGL lock free?<newline46mondego>"
"2183splitHere46","12765071splitHere46","Example of multithreading use<newline46mondego>"
"2184splitHere46","12765071splitHere46","Note: offscreen mode can be selected via the GLCapabilities."
"2185splitHere46","12765071splitHere46","You may like to browse through out unit tests in one of the"
"2186splitHere46","12765071splitHere46","git repos"
"2187splitHere46","12765071splitHere46",".<newline46mondego>Pls check class 'TestGLAutoDrawableGLWindowOnOffscrnCapsNEWT' and<newline46mondego>shared OpenGL context tests include the name 'Shared'."
"2188splitHere46","12765216splitHere46","htmlContent = htmlContent.replaceAll(<doubleQuotes46><img.*?><doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>"
"2189splitHere46","12765216splitHere46","htmlContent = htmlContent.replaceAll(<doubleQuotes46><img.*?>.*?</img><doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>"
"2190splitHere46","12765281splitHere46",".various"
"2191splitHere46","12765281splitHere46","class=<doubleQuotes46>various<doubleQuotes46>"
"2192splitHere46","12765281splitHere46","$(document).ready(function() {<newline46mondego>    $(<doubleQuotes46>.various<doubleQuotes46>).fancybox({<newline46mondego>        maxWidth    : 800,<newline46mondego>        maxHeight   : 600,<newline46mondego>        fitToView   : false,<newline46mondego>        width       : '70%',<newline46mondego>        height      : '70%',<newline46mondego>        autoSize    : false,<newline46mondego>        closeClick  : false,<newline46mondego>        openEffect  : 'none',<newline46mondego>        closeEffect : 'none'<newline46mondego>    });<newline46mondego>});<newline46mondego>"
"2193splitHere46","12765281splitHere46","<a id='various' href='#inline'>Read More</a><newline46mondego>"
"2194splitHere46","12765281splitHere46","<a class='various' href='#inline'>Read More</a><newline46mondego>"
"2195splitHere46","12765281splitHere46","<head>"
"2196splitHere46","12765281splitHere46","<head>"
"2197splitHere46","12765281splitHere46","<body>"
"2198splitHere46","12765281splitHere46","<head><newline46mondego>.<newline46mondego></head><newline46mondego><script> ....</script><newline46mondego><body><newline46mondego>.<newline46mondego></body><newline46mondego>"
"2199splitHere46","12765281splitHere46","Timestamp: 06/10/2012 5:48:24 PM<newline46mondego>Error: TypeError: $(this).get(0) is undefined<newline46mondego>Source File: http://universitycompare.com/wp-content/themes/blue-and-grey/jquery.ticker.js<newline46mondego>Line: 25<newline46mondego>"
"2200splitHere46","12765290splitHere46","public void runJob(){<newline46mondego>    boolean jobDone = false; <newline46mondego>    if(!myJobInQueue.isEmpty() && myDuration > myPendingTime){<newline46mondego>         myDuration-= myPendingTime;<newline46mondego>         myFinishedJobs.add(myJobInQueue.get(0));<newline46mondego>         myJobInQueue.remove(0);<newline46mondego>         System.out.println(<doubleQuotes46>The job runing is : <doubleQuotes46>+ myJobInQueue.get(0));<newline46mondego>        jobDone=true;<newline46mondego>    }<newline46mondego>    if(!jobDone ){<newline46mondego>         runJob();<newline46mondego>    } <newline46mondego>  }<newline46mondego>"
"2201splitHere46","12765290splitHere46","myJobInQueue"
"2202splitHere46","12765290splitHere46","if(!myJobInQueue.isEmpty() && myDuration > myPendingTime)"
"2203splitHere46","12765364splitHere46","while (temp != null)<newline46mondego>{<newline46mondego>    temp = in.readLine();   <newline46mondego>}<newline46mondego>"
"2204splitHere46","12765364splitHere46","1-arg constructor"
"2205splitHere46","12765364splitHere46","Patient class"
"2206splitHere46","12765364splitHere46","0-arg constructor"
"2207splitHere46","12765364splitHere46","2-arg constructor"
"2208splitHere46","12765364splitHere46","Patient"
"2209splitHere46","12765364splitHere46","loadPatient"
"2210splitHere46","12765364splitHere46","patientList.add(**new Patient(s)**); --> Will not work<newline46mondego>"
"2211splitHere46","12765364splitHere46","public Patient(String s) {<newline46mondego>    this.s = s;<newline46mondego>}<newline46mondego>"
"2212splitHere46","12765364splitHere46","this.s"
"2213splitHere46","12765364splitHere46","s"
"2214splitHere46","12765521splitHere46","Game"
"2215splitHere46","12765521splitHere46","Serializable"
"2216splitHere46","12765521splitHere46","ObjectInputStream"
"2217splitHere46","12765521splitHere46","ObjectOutputStream"
"2218splitHere46","12765521splitHere46","Game"
"2219splitHere46","12765521splitHere46","Game"
"2220splitHere46","12765521splitHere46","Serializable"
"2221splitHere46","12765521splitHere46","transient"
"2222splitHere46","12765521splitHere46","static"
"2223splitHere46","12765521splitHere46","NotSerializableException"
"2224splitHere46","12765521splitHere46","readObject()"
"2225splitHere46","12765521splitHere46","Object next = input.readObject();<newline46mondego>if (next instanceof Game) {<newline46mondego>    game1 = (Game)next;<newline46mondego>    //...<newline46mondego>}<newline46mondego>else if (next instanceof String) {<newline46mondego>    message = (String)next;<newline46mondego>    //...<newline46mondego>}<newline46mondego>else {<newline46mondego>    System.out.println(<doubleQuotes46>Unexpected object type:  <doubleQuotes46> + next.getClass().getName());<newline46mondego>}<newline46mondego>"
"2226splitHere46","12765603splitHere46","repaint()"
"2227splitHere46","12765603splitHere46","paint()"
"2228splitHere46","12765644splitHere46","if(a) {<newline46mondego>       x.remove(j);<newline46mondego>       continue;<newline46mondego>      }<newline46mondego>"
"2229splitHere46","12765644splitHere46","if(b) {<newline46mondego>       x.remove(i);<newline46mondego>       continue f;<newline46mondego>      }<newline46mondego>"
"2230splitHere46","12765644splitHere46","for(int i = 0; i < x.size() -1; i++)<newline46mondego>"
"2231splitHere46","12765644splitHere46","continue"
"2232splitHere46","12765663splitHere46","Toolkit.createImage()"
"2233splitHere46","12765663splitHere46","JPanel"
"2234splitHere46","12765663splitHere46","ImageObserver"
"2235splitHere46","12765663splitHere46","g.drawImage(spaceship, 100, 100, this);<newline46mondego>"
"2236splitHere46","12765663splitHere46","ImageIO.read"
"2237splitHere46","12765692splitHere46","Eclipse"
"2238splitHere46","12765704splitHere46","update();<newline46mondego>delObjects();<newline46mondego>addObjects();<newline46mondego>"
"2239splitHere46","12765704splitHere46","switch (v.getId()) {<newline46mondego>case R.id.id1:<newline46mondego><newline46mondego><newline46mondego>    Thread th =new Thread(new Runnable() {<newline46mondego>           public void run() {<newline46mondego>            //Prepare for further threading.<newline46mondego>            Looper.prepare();<newline46mondego><newline46mondego>            update();<newline46mondego>            delObjects();<newline46mondego>            addObjects();<newline46mondego><newline46mondego>           }<newline46mondego>          }); <newline46mondego>    th.start();<newline46mondego>    break;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2240splitHere46","12765705splitHere46","public class test {<newline46mondego>    static int pi = 1;<newline46mondego>    public static void main (String args[]){<newline46mondego>        System.out.println(<doubleQuotes46>Yum! Pi!<doubleQuotes46>);<newline46mondego>        varCreate();<newline46mondego>        varAdd();<newline46mondego>    }<newline46mondego>    public static void varCreate () {<newline46mondego>        pi++;<newline46mondego>    }<newline46mondego>    public static void varAdd () {<newline46mondego>        System.out.println(pi);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2241splitHere46","12765712splitHere46","Math"
"2242splitHere46","12765712splitHere46","Object"
"2243splitHere46","12765712splitHere46","Object"
"2244splitHere46","12765712splitHere46","Math"
"2245splitHere46","12765712splitHere46","Math"
"2246splitHere46","12765731splitHere46","savedInstanceState"
"2247splitHere46","12765731splitHere46","SharedPreferences"
"2248splitHere46","12765731splitHere46","public static final String PREFS_NAME = <doubleQuotes46>MyPrefsFile<doubleQuotes46>; // Name of prefs file; don't change this after it's saved something<newline46mondego><newline46mondego>@Override<newline46mondego>public void onCreate(Bundle savedInstanceState) {<newline46mondego><newline46mondego>    super.onCreate(savedInstanceState);<newline46mondego><newline46mondego>    SharedPreferences settings = getSharedPreferences(PREFS_NAME, 0); // Get preferences file (0 = no option flags set)<newline46mondego>    boolean firstRun = settings.getBoolean(<doubleQuotes46>firstRun<doubleQuotes46>, true); // Is it first run? If not specified, use <doubleQuotes46>true<doubleQuotes46><newline46mondego><newline46mondego>    if (firstRun) {<newline46mondego>        Log.w(<doubleQuotes46>activity<doubleQuotes46>, <doubleQuotes46>first time<doubleQuotes46>);<newline46mondego>        setContentView(R.layout.activity_clean_weather);<newline46mondego><newline46mondego>        SharedPreferences.Editor editor = settings.edit(); // Open the editor for our settings<newline46mondego>        editor.putBoolean(<doubleQuotes46>firstRun<doubleQuotes46>, false); // It is no longer the first run<newline46mondego>        editor.commit(); // Save all changed settings<newline46mondego>    } else {<newline46mondego>        Log.w(<doubleQuotes46>activity<doubleQuotes46>, <doubleQuotes46>second time<doubleQuotes46>);<newline46mondego>        setContentView(R.layout.activity_clean_weather);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"2249splitHere46","12765751splitHere46","null"
"2250splitHere46","12765751splitHere46","public bob add(bob other) { ... }<newline46mondego>"
"2251splitHere46","12765751splitHere46","bob test1 = new bob(5);<newline46mondego>bob test2 = new bob(3);<newline46mondego>bob test3 = test1.add(test2);<newline46mondego>"
"2252splitHere46","12765751splitHere46","bob test = 5;"
"2253splitHere46","12765751splitHere46","bob test = new bob(5);"
"2254splitHere46","12765781splitHere46","DRIVER CLASS: com.microsoft.sqlserver.jdbc.SQLServerDriver <newline46mondego>"
"2255splitHere46","12765781splitHere46","JDBC URL FORMAT: jdbc:sqlserver://<server_name>:<port> <newline46mondego>"
"2256splitHere46","12765781splitHere46","jdbc:sqlserver://neptune.acme.com:1433 <newline46mondego><newline46mondego>jdbc:sqlserver://127.0.0.1:1433 <newline46mondego>"
"2257splitHere46","12765794splitHere46","account =interest +base<newline46mondego>"
"2258splitHere46","12765794splitHere46","account = interest +account<newline46mondego>"
"2259splitHere46","12765863splitHere46","setLenient()"
"2260splitHere46","12765863splitHere46","SimpleDateFormat"
"2261splitHere46","12765863splitHere46","SimpleDateFormat sdf = new SimpleDateFormat(<doubleQuotes46>yyyy-MM-dd<doubleQuotes46>);<newline46mondego>sdf.setLenient(false);<newline46mondego>System.out.println(sdf.parse(<doubleQuotes46>2005-02-29<doubleQuotes46>)); // This would throw parse exception.<newline46mondego>"
"2262splitHere46","12765915splitHere46","// loop through each 10th column in the camera<newline46mondego>for (int i=0;i<cam.width;i+=10) {<newline46mondego><newline46mondego>    // loop through each 10th row in the camera<newline46mondego>    for (int j=0;j<cam.height;j+=10) {            <newline46mondego><newline46mondego>        // calculate the pixel location at (i, j)<newline46mondego>        int loc=i+(j*cam.width);<newline46mondego><newline46mondego>        // check the pixel is red<newline46mondego>        if (cam.pixels[loc]==color(255, 0, 0)) {<newline46mondego><newline46mondego>            // loop through each column in the gif image<newline46mondego>            for (int x=0;x<10;x++) {<newline46mondego><newline46mondego>                // loop through each row in the gif image<newline46mondego>                for (int y=0;y<10;y++) {<newline46mondego><newline46mondego>                    int locDos = (i + x) + ((j + y) * cam.width);<newline46mondego>                    cam.pixels[locDos]=hoja.get(x, y);<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2263splitHere46","12765960splitHere46","if"
"2264splitHere46","12765960splitHere46","public void remove(int n)<newline46mondego>   {<newline46mondego>       LinkEntry<E> remove_this = new LinkEntry<E>();<newline46mondego>      //if remove_this is located in the middle of the list, enter this loop until it is<newline46mondego>       //found, then remove it, closing the gap afterwards.<newline46mondego>       int i = 0;<newline46mondego>       boolean removed = false;<newline46mondego>       remove_this = head;<newline46mondego><newline46mondego>       while(removed == false){<newline46mondego>           //if nothing comes before remove_this, set the head to equal the element after remove_this<newline46mondego>           if (remove_this.previous == null){<newline46mondego>               head = remove_this.next;<newline46mondego>               head.previous = null;<newline46mondego>               removed = true;<newline46mondego>           }<newline46mondego><newline46mondego>           //if nothing comes after remove_this, set the tail equal to the element before remove_this<newline46mondego>           else if (remove_this.next == null){<newline46mondego>               tail = remove_this.previous;<newline46mondego>               tail.next = null;<newline46mondego>               removed = true;<newline46mondego>           }<newline46mondego>           //otherwise set the next element's previous pointer to the element before remove_this<newline46mondego>           else{<newline46mondego>               //if i == n, stop and delete 'remove_this' from the list<newline46mondego>               if (i == n) {               <newline46mondego>                   //set the previous element's next to the element that comes after remove_this<newline46mondego>                   remove_this.previous.next = remove_this.next;<newline46mondego>                   //set the element after remove_this' previous pointer to the element before remove_this<newline46mondego>                   remove_this.next.previous = remove_this.previous;<newline46mondego>                   removed = true;<newline46mondego>                   break;<newline46mondego>               }<newline46mondego>               //if i != n, keep iterating through the list<newline46mondego>           }<newline46mondego>           if(!removed){<newline46mondego>               remove_this = remove_this.next;<newline46mondego>           }<newline46mondego>           i++; <newline46mondego>       }<newline46mondego>   }<newline46mondego>"
"2265splitHere46","12765960splitHere46","head"
"2266splitHere46","12765960splitHere46","tail"
"2267splitHere46","12765960splitHere46","if else"
"2268splitHere46","12765960splitHere46","remove_this"
"2269splitHere46","12765960splitHere46","head"
"2270splitHere46","12765960splitHere46","tail"
"2271splitHere46","12765960splitHere46","null"
"2272splitHere46","12766009splitHere46","List<Integer> list1 = Arrays.asList(2,4,5);<newline46mondego>    List<Integer> list2 = Arrays.asList(2,6,8,9,12,56);<newline46mondego><newline46mondego>    List<Integer> mergedList = new ArrayList<Integer>();<newline46mondego>    mergedList.addAll(list1);<newline46mondego>    mergedList.addAll(list2);<newline46mondego>    Collections.sort(mergedList);<newline46mondego>"
"2273splitHere46","12766009splitHere46","mergedList"
"2274splitHere46","12766247splitHere46","public boolean checker(Object obj) {<newline46mondego>    return obj instanceof SomeClass;<newline46mondego>}<newline46mondego>"
"2275splitHere46","12766247splitHere46","public boolean checker(Object obj, Class someclass) {<newline46mondego>    return someClass.isInstance(obj);<newline46mondego>}<newline46mondego>"
"2276splitHere46","12766247splitHere46","someClass"
"2277splitHere46","12766247splitHere46","public boolean checker(Object obj, Class someclass) {<newline46mondego>    return someClass.equals(obj.getClass());<newline46mondego>}<newline46mondego>"
"2278splitHere46","12766272splitHere46","DocumentBuilderFactory docBuilderFactory = DocumentBuilderFactory.newInstance();<newline46mondego>DocumentBuilder docBuilder = docBuilderFactory.newDocumentBuilder();<newline46mondego>Document document = docBuilder.parse(in);<newline46mondego>"
"2279splitHere46","12766341splitHere46","MyLinkedList()<newline46mondego>{<newline46mondego>    this.head = new Node<T>(null, null, null); <newline46mondego>    this.tail = new Node<T>(null, null, null);<newline46mondego>    this.size = 0;<newline46mondego>}<newline46mondego>"
"2280splitHere46","12766341splitHere46","private Node<T> getNth(int index)<newline46mondego>{<newline46mondego>    Node<T> temp = null; //Always try to initialize your variables if you're going<newline46mondego>                         //to return them.<newline46mondego>    if(index < 0 || index > size)<newline46mondego>        throw new IndexOutOfBoundsException();<newline46mondego><newline46mondego>    if(index < this.size() / 2)<newline46mondego>    {<newline46mondego>        temp = this.head;<newline46mondego>        for(int i = 0; i < index; i++)<newline46mondego>        {<newline46mondego>            if(temp.getNext() != null)<newline46mondego>                 temp = temp.getNext();<newline46mondego>            else<newline46mondego>                 break;//Break the iteration if there is not a next node<newline46mondego>        }<newline46mondego>    }<newline46mondego>    else<newline46mondego>    {<newline46mondego>        temp = this.tail;<newline46mondego>        for(int i = this.size(); i > index; i--)<newline46mondego>        {<newline46mondego>            if(temp.getPrev() != null)<newline46mondego>                temp = temp.getPrev();<newline46mondego>            else<newline46mondego>                break;<newline46mondego>        }<newline46mondego>    }<newline46mondego>    return temp;<newline46mondego>}<newline46mondego>"
"2281splitHere46","12766359splitHere46","1,349,585,220,205 milliseconds / (1000 * 3600) = number of hours = 374884.7833902778<newline46mondego>374884.7833902778 hours / 24 = 15620.19930792824 days<newline46mondego>15620.19930792824 days / 365 days = 42.79506659706368 years<newline46mondego><newline46mondego>1970 + 42 years = 2012<newline46mondego>"
"2282splitHere46","12766364splitHere46","tab3[tab3[0]], tab3[tab3[1]], tab3[tab3[2]], ...<newline46mondego>"
"2283splitHere46","12766371splitHere46","Pattern pattern = Pattern.compile(<doubleQuotes46>\\.A\\s(\\d+)<doubleQuotes46>); // grouping number<newline46mondego>Matcher matcher = pattern.matcher(<doubleQuotes46>.A 1 .A 2 .A 3 .A 4 *text* .A5<doubleQuotes46>); // full input string<newline46mondego>while (matcher.find()) {<newline46mondego>    int n = Integer.valueOf(matcher.group(1)); // getting captured number - group #1<newline46mondego>    System.out.println(n);<newline46mondego>}<newline46mondego>"
"2284splitHere46","12766404splitHere46","<doubleQuotes46>(double quotes)s"
"2285splitHere46","12766404splitHere46","test.startsWith(<doubleQuotes46>\<doubleQuotes46><doubleQuotes46>);<newline46mondego> test.endsWith(<doubleQuotes46>\<doubleQuotes46><doubleQuotes46>);<newline46mondego>"
"2286splitHere46","12766443splitHere46","test()"
"2287splitHere46","12766443splitHere46","Test"
"2288splitHere46","12766443splitHere46","class Test<T extends X> {<newline46mondego>    private Class<T> mClass;<newline46mondego>    public Test(Class<T> c) {<newline46mondego>        mClass = c;<newline46mondego>    }<newline46mondego>    public T test() {<newline46mondego>        T t = mClass.newInstance();<newline46mondego>        return t;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2289splitHere46","12766594splitHere46","x & ((1 << N) - 1)<newline46mondego>"
"2290splitHere46","12766594splitHere46","N == 31"
"2291splitHere46","12766594splitHere46","N == 32"
"2292splitHere46","12766594splitHere46","N == 31"
"2293splitHere46","12766594splitHere46","1 << N == Integer.MIN_VALUE"
"2294splitHere46","12766594splitHere46","Integer.MAX_VALUE"
"2295splitHere46","12766594splitHere46","N == 32"
"2296splitHere46","12766594splitHere46","1 << N == 0"
"2297splitHere46","12766594splitHere46","(1 << N) - 1 == -1"
"2298splitHere46","12766640splitHere46","public static void main(String[] args) {<newline46mondego>    try {<newline46mondego>        final JAXBContext context = JAXBContext.newInstance(Country.class);<newline46mondego>        final Marshaller marshaller = context.createMarshaller();<newline46mondego>        // Create a stringWriter to hold the XML<newline46mondego>        final StringWriter stringWriter = new StringWriter();<newline46mondego>        CreateXML xml = new CreateXML();<newline46mondego>        Country country = xml.createCountry();<newline46mondego>        marshaller.marshal(country, stringWriter);<newline46mondego>        // Print out the contents of the stringWriter<newline46mondego>        System.out.println(stringWriter.toString());<newline46mondego>    } catch (JAXBException e) {<newline46mondego>        // TODO Auto-generated catch block<newline46mondego>        e.printStackTrace();<newline46mondego>    }<newline46mondego>}<newline46mondego>private List<String> createCity(){<newline46mondego>    List<String> cities = new ArrayList<String>();<newline46mondego>    cities.add(<doubleQuotes46>Slough<doubleQuotes46>);<newline46mondego>    cities.add(<doubleQuotes46>Manchestor<doubleQuotes46>);<newline46mondego>    return cities;<newline46mondego>}<newline46mondego>private List<State> createState(){<newline46mondego>    List<State> states = new ArrayList<State>();<newline46mondego>    State state = new State();<newline46mondego>    state.setStatName(<doubleQuotes46>London<doubleQuotes46>);<newline46mondego>    state.setCityList(createCity());<newline46mondego>    states.add(state);<newline46mondego>    return states;<newline46mondego>}<newline46mondego>private Country createCountry(){<newline46mondego>    Country country = new Country(<doubleQuotes46>UK<doubleQuotes46>, createState());<newline46mondego>    return country;<newline46mondego>}<newline46mondego>"
"2299splitHere46","12766640splitHere46","@XmlRootElement<newline46mondego>public class Country {<newline46mondego><newline46mondego>    String countryName;<newline46mondego>    List<State> states;<newline46mondego>    public Country(String countryName, List<State> states) {<newline46mondego>        this.countryName = countryName;<newline46mondego>        this.states = states;<newline46mondego>    }<newline46mondego>    public Country() {<newline46mondego>    }<newline46mondego>    public String getCountryName() {<newline46mondego>        return countryName;<newline46mondego>    }<newline46mondego>    public void setCountryName(String countryName) {<newline46mondego>        this.countryName = countryName;<newline46mondego>    }<newline46mondego>    public List<State> getStates() {<newline46mondego>        return states;<newline46mondego>    }<newline46mondego>    public void setStates(List<State> states) {<newline46mondego>        this.states = states;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"2300splitHere46","12766640splitHere46","String statName;<newline46mondego>List<String> cityList;<newline46mondego><newline46mondego>public State() {<newline46mondego>}<newline46mondego>public String getStatName() {<newline46mondego>    return statName;<newline46mondego>}<newline46mondego>public void setStatName(String statName) {<newline46mondego>    this.statName = statName;<newline46mondego>}<newline46mondego>public List<String> getCityList() {<newline46mondego>    return cityList;<newline46mondego>}<newline46mondego>public void setCityList(List<String> cityList) {<newline46mondego>    this.cityList = cityList;<newline46mondego>}<newline46mondego>"
"2301splitHere46","12766664splitHere46","user_id"
"2302splitHere46","12766664splitHere46","request.getParameter(<doubleQuotes46>user_id<doubleQuotes46>)"
"2303splitHere46","12766664splitHere46","request.getParameterValues(<doubleQuotes46>user_id<doubleQuotes46>)"
"2304splitHere46","12766664splitHere46","String"
"2305splitHere46","12766664splitHere46","user_id"
"2306splitHere46","12766664splitHere46","user_id"
"2307splitHere46","12766664splitHere46","lab_id"
"2308splitHere46","12766678splitHere46","head.previous = null;"
"2309splitHere46","12766678splitHere46","remove"
"2310splitHere46","12766678splitHere46","public void remove(int n)<newline46mondego>   {<newline46mondego>       LinkEntry<E> remove_this = new LinkEntry<E>();<newline46mondego>      //if remove_this is located in the middle of the list, enter this loop until it is<newline46mondego>       //found, then remove it, closing the gap afterwards.<newline46mondego>       int i = 0;<newline46mondego>       boolean removed = false;<newline46mondego>       remove_this = head;<newline46mondego><newline46mondego>       while(removed == false){<newline46mondego>           //if nothing comes before remove_this, set the head to equal the element after remove_this<newline46mondego>           if (remove_this.previous == null){<newline46mondego>               head = remove_this.next;<newline46mondego>               head.previous = null;<newline46mondego>               removed = true;<newline46mondego>           }<newline46mondego><newline46mondego>           //if nothing comes after remove_this, set the tail equal to the element before remove_this<newline46mondego>           else if (remove_this.next == null){<newline46mondego>               tail = remove_this.previous;<newline46mondego>               tail.next = null;<newline46mondego>               removed = true;<newline46mondego>           }<newline46mondego>           //otherwise set the next element's previous pointer to the element before remove_this<newline46mondego>           else{<newline46mondego>               //if i == n, stop and delete 'remove_this' from the list<newline46mondego>               if (i == n) {               <newline46mondego>                   //set the previous element's next to the element that comes after remove_this<newline46mondego>                   remove_this.previous.next = remove_this.next;<newline46mondego>                   //set the element after remove_this' previous pointer to the element before remove_this<newline46mondego>                   remove_this.next.previous = remove_this.previous;<newline46mondego>                   removed = true;<newline46mondego>                   break;<newline46mondego>               }<newline46mondego>               //if i != n, keep iterating through the list<newline46mondego>           }<newline46mondego>           if(!removed){<newline46mondego>               remove_this = remove_this.next;<newline46mondego>           }<newline46mondego>           i++; <newline46mondego>       }<newline46mondego>   }<newline46mondego>"
"2311splitHere46","12766793splitHere46","(3)"
"2312splitHere46","12766793splitHere46","("
"2313splitHere46","12766979splitHere46","gsc"
"2314splitHere46","12766979splitHere46","gsc.core"
"2315splitHere46","12766979splitHere46","java -classpath d:\ProjectGsc gsc.core.gsc<newline46mondego>"
"2316splitHere46","12766979splitHere46","d:\ProjectGsc<newline46mondego>             \gsc<newline46mondego>                 \core<newline46mondego>                      \gsc.class<newline46mondego>"
"2317splitHere46","12766979splitHere46","-d"
"2318splitHere46","12766979splitHere46","javac -d d:\ProjectGsc *.java<newline46mondego>"
"2319splitHere46","12767143splitHere46","String.hashCode"
"2320splitHere46","12767143splitHere46","public class Test {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        int hash = 100000;<newline46mondego>        String sample = getStringForHashCode(hash);<newline46mondego>        System.out.println(sample); // ASD^TYQ<newline46mondego>        System.out.println(sample.hashCode()); // 100000<newline46mondego>    }<newline46mondego><newline46mondego>    private static final int OFFSET = <doubleQuotes46>AAAAAAA<doubleQuotes46>.hashCode();<newline46mondego><newline46mondego>    private static String getStringForHashCode(int hash) {<newline46mondego>        hash -= OFFSET;<newline46mondego>        // Treat it as an unsigned long, for simplicity.<newline46mondego>        // This avoids having to worry about negative numbers anywhere.<newline46mondego>        long longHash = (long) hash & 0xFFFFFFFFL;<newline46mondego>        System.out.println(longHash);<newline46mondego><newline46mondego>        char[] c = new char[7];<newline46mondego>        for (int i = 0; i < 7; i++)<newline46mondego>        {<newline46mondego>            c[6 - i] = (char) ('A' + (longHash % 31));<newline46mondego>            longHash /= 31;<newline46mondego>        }<newline46mondego>        return new String(c);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2321splitHere46","12767159splitHere46","public void testGetSum()<newline46mondego>"
"2322splitHere46","12767159splitHere46","test"
"2323splitHere46","12767159splitHere46","public"
"2324splitHere46","12767159splitHere46","@Test"
"2325splitHere46","12767159splitHere46","@Before"
"2326splitHere46","12767159splitHere46","@After"
"2327splitHere46","12767159splitHere46","sum"
"2328splitHere46","12767159splitHere46","getSum"
"2329splitHere46","12767212splitHere46","render=<doubleQuotes46>Panel_Y<doubleQuotes46>"
"2330splitHere46","12767212splitHere46","rendered=<doubleQuotes46>#{magicBean.show_X == false}<doubleQuotes46>"
"2331splitHere46","12767212splitHere46","rendered=<doubleQuotes46>#{magicBean.show_Y}<doubleQuotes46>"
"2332splitHere46","12767246splitHere46","Scanner"
"2333splitHere46","12767246splitHere46","InputStream"
"2334splitHere46","12767246splitHere46","Scanner"
"2335splitHere46","12767246splitHere46","Console"
"2336splitHere46","12767246splitHere46","public class Example {<newline46mondego>   public Example() {<newline46mondego>      Scanner scanner = new Scanner(System.console().reader()); <newline46mondego>      // note change on above line<newline46mondego>      int row = scanner.nextInt();<newline46mondego>      scanner.close();<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"2337splitHere46","12767246splitHere46","echo 2 3 | java Example<newline46mondego>"
"2338splitHere46","12767246splitHere46","Process p = new ProcessBuilder(<doubleQuotes46>java<doubleQuotes46>, <doubleQuotes46>Example<doubleQuotes46>).start();<newline46mondego>// write data to process<newline46mondego>"
"2339splitHere46","12767300splitHere46","java KTEngine.java<newline46mondego>"
"2340splitHere46","12767300splitHere46","KTEngine"
"2341splitHere46","12767300splitHere46","main"
"2342splitHere46","12767334splitHere46","onLocationChanged()"
"2343splitHere46","12767334splitHere46","onCreate()"
"2344splitHere46","12767334splitHere46","onLocationChanged()"
"2345splitHere46","12767334splitHere46","onCreate()"
"2346splitHere46","12767473splitHere46","javax.swing.Timer"
"2347splitHere46","12767473splitHere46","public class TestBlinkingText {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        EventQueue.invokeLater(new Runnable() {<newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                try {<newline46mondego>                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());<newline46mondego>                } catch (ClassNotFoundException ex) {<newline46mondego>                } catch (InstantiationException ex) {<newline46mondego>                } catch (IllegalAccessException ex) {<newline46mondego>                } catch (UnsupportedLookAndFeelException ex) {<newline46mondego>                }<newline46mondego><newline46mondego>                JFrame frame = new JFrame();<newline46mondego>                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>                frame.setLayout(new BorderLayout());<newline46mondego>                frame.add(new BlinkPane());<newline46mondego>                frame.setSize(200, 200);<newline46mondego>                frame.setLocationRelativeTo(null);<newline46mondego>                frame.setVisible(true);<newline46mondego>            }            <newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>    protected static class BlinkPane extends JLabel {<newline46mondego><newline46mondego>        private JLabel label;<newline46mondego>        private boolean state;<newline46mondego><newline46mondego>        public BlinkPane() {<newline46mondego><newline46mondego>            label = new JLabel(<doubleQuotes46>Look at me!<doubleQuotes46>);<newline46mondego>            setLayout(new GridBagLayout());<newline46mondego><newline46mondego>            add(label);<newline46mondego><newline46mondego>            Timer timer = new Timer(500, new ActionListener() {<newline46mondego><newline46mondego>                @Override<newline46mondego>                public void actionPerformed(ActionEvent ae) {                    <newline46mondego>                    state = !state;<newline46mondego>                    if (state) {<newline46mondego>                        label.setForeground(Color.RED);<newline46mondego>                    } else {<newline46mondego>                        label.setForeground(Color.BLACK);<newline46mondego>                    }                    <newline46mondego>                    repaint();                    <newline46mondego>                }<newline46mondego>            });<newline46mondego>            timer.setRepeats(true);<newline46mondego>            timer.setCoalesce(true);<newline46mondego>            timer.setInitialDelay(0);<newline46mondego>            timer.start();            <newline46mondego>        }        <newline46mondego>    }    <newline46mondego>}<newline46mondego>"
"2348splitHere46","12767486splitHere46","int hex = 0xA; <newline46mondego>System.out.println( (char)hex );<newline46mondego>"
"2349splitHere46","12767486splitHere46","int hex = (char) 0xA;<newline46mondego>System.out.println(hex); //here value of hex is '10', type of hex is 'int', the overloaded println(int x) is invoked.<newline46mondego><newline46mondego>int hex = 0xA;<newline46mondego>System.out.println((char) hex); //this is equivalent to System.out.println( '\n' ); since the int is cast to a char, which produces '\n', the overloaded println(char x) is invoked.<newline46mondego>"
"2350splitHere46","12767733splitHere46",".zzz"
"2351splitHere46","12767733splitHere46","String"
"2352splitHere46","12767733splitHere46","main(String[])"
"2353splitHere46","12767733splitHere46","File"
"2354splitHere46","12767791splitHere46","FilterInputStream"
"2355splitHere46","12767791splitHere46","FilterOutputStream"
"2356splitHere46","12767791splitHere46","OutputStream os = new CountingOutpurStream(socket.getOutputStream());<newline46mondego>    InputStream is = new CountingInputStream(socket.getInputStream());<newline46mondego>"
"2357splitHere46","12767815splitHere46","."
"2358splitHere46","12767815splitHere46","String s = <doubleQuotes46>hi 3.78 hi bye<doubleQuotes46>;<newline46mondego>String numberOnly = s.replaceAll(<doubleQuotes46>[^0-9\\.]+<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>double d = Double.parseDouble(numberOnly); //d == 3.78d<newline46mondego>"
"2359splitHere46","12767836splitHere46","public boolean insert(E e) {        <newline46mondego>    if (root == null) {<newline46mondego>        root = new BTNode();<newline46mondego>        root.setElement(e); //how would this work with a null root?<newline46mondego>        return true; //that's it, we're done (when is this ever false by the way?)<newline46mondego>    }<newline46mondego>    BTNode current = root; <newline46mondego>    while (true) { //brackets! indenting is important for readabilty<newline46mondego>        BTNode parent=current;<newline46mondego>        if (current.element().getClass().getName().compareTo(e.getClass().getName()) < 0) {<newline46mondego>            current = current.getRight();<newline46mondego>            if(current==null) { //we don't have a right node, need to make one<newline46mondego>              current = new BTNode();<newline46mondego>              parent.setRight(current);<newline46mondego>              break; //we have a new node in <doubleQuotes46>current<doubleQuotes46> that is empty<newline46mondego>            }<newline46mondego>        } else { <newline46mondego>            current= current.getLeft();<newline46mondego>            if(current==null) { //we don't have a left node, need to make one<newline46mondego>              current = new BTNode();<newline46mondego>              parent.setLeft(current);<newline46mondego>              break;  //we have a new node in <doubleQuotes46>current<doubleQuotes46> that is empty<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>    current.setElement(e); <newline46mondego>    return true; <newline46mondego>} <newline46mondego>"
"2360splitHere46","12767858splitHere46","try {<newline46mondego>   FileUtils.copyDirectory(new File(src), new File(dst));<newline46mondego>  } catch (Exception e){ //Please log at least a message here!!! }<newline46mondego>"
"2361splitHere46","12767929splitHere46","Manifest-Version: 1.0<newline46mondego>"
"2362splitHere46","12767929splitHere46","Main-Class: classname<newline46mondego>"
"2363splitHere46","12767929splitHere46","Class-Path: servlet.jar infobus.jar acme/beans.jar<newline46mondego>"
"2364splitHere46","12767929splitHere46","Name: myCompany/myPackage/<newline46mondego>Sealed: true<newline46mondego>"
"2365splitHere46","12767929splitHere46","Name: java/util/<newline46mondego>Specification-Title: <doubleQuotes46>Java Utility Classes<doubleQuotes46> <newline46mondego>Specification-Version: <doubleQuotes46>1.2<doubleQuotes46><newline46mondego>Specification-Vendor: <doubleQuotes46>Sun Microsystems, Inc.<doubleQuotes46>.<newline46mondego>Implementation-Title: <doubleQuotes46>java.util<doubleQuotes46> <newline46mondego>Implementation-Version: <doubleQuotes46>build57<doubleQuotes46><newline46mondego>Implementation-Vendor: <doubleQuotes46>Sun Microsystems, Inc.<doubleQuotes46><newline46mondego>"
"2366splitHere46","12768005splitHere46","@Autowired<newline46mondego>private AbstractRememberMeServices rememberMeService;<newline46mondego>"
"2367splitHere46","12768005splitHere46","rememberMeService.setTokenValiditySeconds(X);<newline46mondego>"
"2368splitHere46","12768008splitHere46","while(isStarted) {<newline46mondego>    try {<newline46mondego>        Thread.sleep(60000); // sleep for 1 minute<newline46mondego>    } catch(InterruptedException exc) {<newline46mondego>        exc.printStackTrace();<newline46mondego>    }<newline46mondego>    ArrayList<String> keyStrokeList = nativeMethods.getKeyStrokeList();<newline46mondego>    int result = copy.copyToLogFile(keyStrokeList);<newline46mondego>    System.out.println(result);<newline46mondego>}<newline46mondego>"
"2369splitHere46","12768008splitHere46","public void dispose() {<newline46mondego>    isStarted = false;<newline46mondego>    interrupt();<newline46mondego>    try {<newline46mondego>        join();<newline46mondego>    } catch(InterruptedException exc) {<newline46mondego>        exc.printStackTrace();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2370splitHere46","12768008splitHere46","System.exit(0)"
"2371splitHere46","12768008splitHere46","dispose"
"2372splitHere46","12768035splitHere46","FlowLayout"
"2373splitHere46","12768035splitHere46","frame.setLayout(new FlowLayout());<newline46mondego>"
"2374splitHere46","12768035splitHere46","JFrame"
"2375splitHere46","12768035splitHere46","BorderLayout"
"2376splitHere46","12768035splitHere46","frame.getContentPane().add(textArea);<newline46mondego>"
"2377splitHere46","12768035splitHere46","JScrollPane"
"2378splitHere46","12768139splitHere46","A"
"2379splitHere46","12768139splitHere46","myDir4"
"2380splitHere46","12768139splitHere46","B"
"2381splitHere46","12768139splitHere46","myDir4"
"2382splitHere46","12768139splitHere46","A"
"2383splitHere46","12768139splitHere46","myDir4"
"2384splitHere46","12768139splitHere46","B"
"2385splitHere46","12768139splitHere46","myDir4"
"2386splitHere46","12768139splitHere46","this"
"2387splitHere46","12768139splitHere46","this"
"2388splitHere46","12768139splitHere46","CreteDir"
"2389splitHere46","12768139splitHere46","// Test first without locking to reduce the concurrency bottleneck<newline46mondego>if (!dir.exists()) {<newline46mondego>    synchronize (globalDirLock) {<newline46mondego>        // Repeat the test while holding the lock<newline46mondego>        if (!dir.exists()) { <newline46mondego>            if (!dir.mkdir()) {<newline46mondego>                System.out.println(<doubleQuotes46>OOOPS!<doubleQuotes46>);<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2390splitHere46","12768139splitHere46","File.mkdir()"
"2391splitHere46","12768139splitHere46","false"
"2392splitHere46","12768139splitHere46","File.exists()"
"2393splitHere46","12768139splitHere46","File.isDirectory()"
"2394splitHere46","12768263splitHere46","public class DBUtil {<newline46mondego><newline46mondego>private static DataSource dataSource;<newline46mondego><newline46mondego>static {<newline46mondego>    try {<newline46mondego>        dataSource = new InitialContext().lookup(<doubleQuotes46>jdbc/MyDataSource<doubleQuotes46>);<newline46mondego>    } catch (NamingException e) { <newline46mondego>        throw new ExceptionInInitializerError(<doubleQuotes46>'jdbc/MyDataSource' not found in JNDI<doubleQuotes46>, e);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public static Connection getConnection() {<newline46mondego>    return dataSource.getConnection();<newline46mondego>}<newline46mondego>"
"2395splitHere46","12768263splitHere46","try {<newline46mondego>    connection = DBUtil.getConnection();<newline46mondego>    statement = connection.prepareStatement(<doubleQuotes46>SELECT id, foo, bar FROM table<doubleQuotes46>);<newline46mondego>    resultSet = statement.executeQuery();<newline46mondego><newline46mondego>   //Do what you need to do. <newline46mondego><newline46mondego>} finally {<newline46mondego>    if (resultSet != null) try { resultSet.close(); } catch (SQLException ignore) {}<newline46mondego>    if (statement != null) try { statement.close(); } catch (SQLException ignore) {}<newline46mondego>    if (connection != null) try { connection.close(); } catch (SQLException ignore) {}<newline46mondego>}<newline46mondego>"
"2396splitHere46","12768271splitHere46","/lib/endorsed"
"2397splitHere46","12768271splitHere46","/lib/endorsed"
"2398splitHere46","12768296splitHere46",".. how to pass array as value instead of reference ?<newline46mondego>"
"2399splitHere46","12768296splitHere46","System.arraycopy(sourceArray, 0, targetArray, 0, sourceArray.length);"
"2400splitHere46","12768360splitHere46","sshd"
"2401splitHere46","12768360splitHere46","$JAVA_HOME/bin/java -cp /tmp Provider > /dev/null 2>&1 &<newline46mondego>"
"2402splitHere46","12768394splitHere46","Activity"
"2403splitHere46","12768394splitHere46","if( Build.VERSION.SDK_INT >= Build.HONEYCOMB ) {<newline46mondego>    getWindow().setFlags(<newline46mondego>    WindowManager.LayoutParams.FLAG_HARDWARE_ACCELERATED,<newline46mondego>    WindowManager.LayoutParams.FLAG_HARDWARE_ACCELERATED);<newline46mondego>}<newline46mondego>"
"2404splitHere46","12768401splitHere46","(long)(1<<31)<newline46mondego>"
"2405splitHere46","12768401splitHere46","(1L << 31)<newline46mondego>"
"2406splitHere46","12768432splitHere46","public class HandshakeRequest extends Message {<newline46mondego>    private static final long serialVersionUID = 1L;<newline46mondego>}<newline46mondego>"
"2407splitHere46","12768432splitHere46","public class HandshakeResponse extends Message {<newline46mondego>    private static final long serialVersionUID = 1L;<newline46mondego>    private final HandshakeResult handshakeResult;<newline46mondego><newline46mondego>    public HandshakeResponse(HandshakeResult handshakeResult) {<newline46mondego>        this.handshakeResult = handshakeResult;<newline46mondego>    }<newline46mondego><newline46mondego>    public HandshakeResult getHandshakeResult() {<newline46mondego>        return handshakeResult;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2408splitHere46","12768432splitHere46","@Override<newline46mondego>public void channelConnected(ChannelHandlerContext ctx, ChannelStateEvent e) {<newline46mondego>    Channel ch = e.getChannel();<newline46mondego>    ch.write(new HandshakeRequest();<newline46mondego>}<newline46mondego>"
"2409splitHere46","12768432splitHere46","Map<Class<?>, Method>"
"2410splitHere46","12768432splitHere46","public HashMap<Class<?>, Method> populateMessageHandler() {<newline46mondego>    HashMap<Class<?>, Method> temp = new HashMap<Class<?>, Method>();<newline46mondego>    for (Method method : getClass().getMethods()) {<newline46mondego>        if (method.getAnnotation(MessageHandler.class) != null) {<newline46mondego>            Class<?>[] methodParameters = method.getParameterTypes();<newline46mondego>            temp.put(methodParameters[1], method);<newline46mondego>        }<newline46mondego>    }<newline46mondego>    return temp;<newline46mondego>}<newline46mondego>"
"2411splitHere46","12768432splitHere46","public void handleHandshakeRequest(HandshakeRequest request)"
"2412splitHere46","12768432splitHere46","@Override<newline46mondego>public void messageReceived(ChannelHandlerContext ctx, MessageEvent e) {<newline46mondego>    try {<newline46mondego>        Message message = (Message) e.getMessage();<newline46mondego>        Method method = messageHandlers.get(message.getClass());<newline46mondego>        if (method == null) {<newline46mondego>            System.out.println(<doubleQuotes46>No handler for message!<doubleQuotes46>);<newline46mondego>        } else {<newline46mondego>            method.invoke(this, ctx, message);<newline46mondego>        }<newline46mondego>    } catch(Exception exception) {<newline46mondego>        exception.printStackTrace();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2413splitHere46","12768437splitHere46","Class MyData<newline46mondego>{<newline46mondego>    private String[] fixedData;<newline46mondego>    private List<String> variableData;<newline46mondego>    public MyData(int fixedSizeN) {<newline46mondego>         fixedData = new String[fixedSizeN];<newline46mondego>         variableData = new ArrayList<String>();<newline46mondego>    }<newline46mondego>    //public get/set go here<newline46mondego>}<newline46mondego><newline46mondego>List<MyData> comboData;<newline46mondego>"
"2414splitHere46","12768547splitHere46","public void swapRow(int a, int b) {<newline46mondego>        int ai = 0, bi = 0;<newline46mondego>        for (final Index i : rows_) {<newline46mondego>            if (i.getIndex() == a) {<newline46mondego>                ai = rows_.indexOf(i);<newline46mondego>            }<newline46mondego>            if (i.getIndex() == b) {<newline46mondego>                bi = rows_.indexOf(i);<newline46mondego>            }<newline46mondego>        }<newline46mondego>        final Index aidx = rows_.get(ai);<newline46mondego>        rows_.set(ai, rows_.get(bi));<newline46mondego>        rows_.set(bi, aidx);<newline46mondego><newline46mondego>    }<newline46mondego>"
"2415splitHere46","12768559splitHere46","minimumPosition(a, n);<newline46mondego>"
"2416splitHere46","12768559splitHere46","public static int minimumPosition(int[] a, int from)<newline46mondego>"
"2417splitHere46","12768569splitHere46","binding = JavaBeanStringPropertyBuilder.create().beanClass(Model.class).bean(model).name(<doubleQuotes46>prop1<doubleQuotes46>).build();<newline46mondego>"
"2418splitHere46","12768609splitHere46","GridBagLayout"
"2419splitHere46","12768805splitHere46","final URL url = new URL(<doubleQuotes46>http://localhost:8080/SearchPerson.aspx/PersonSearch<doubleQuotes46>);<newline46mondego>final URLConnection urlConnection = url.openConnection();<newline46mondego>urlConnection.setDoOutput(true);<newline46mondego>urlConnection.setRequestProperty(<doubleQuotes46>Content-Type<doubleQuotes46>, <doubleQuotes46>application/json; charset=utf-8<doubleQuotes46>);<newline46mondego>urlConnection.connect();<newline46mondego>final OutputStream outputStream = urlConnection.getOutputStream();<newline46mondego>outputStream.write((<doubleQuotes46>{\<doubleQuotes46>fNamn\<doubleQuotes46>: \<doubleQuotes46><doubleQuotes46> + stringData + <doubleQuotes46>\<doubleQuotes46>}<doubleQuotes46>).getBytes(<doubleQuotes46>UTF-8<doubleQuotes46>));<newline46mondego>outputStream.flush();<newline46mondego>final InputStream inputStream = urlConnection.getInputStream();<newline46mondego>"
"2420splitHere46","12768805splitHere46","localhost:8080"
"2421splitHere46","12768834splitHere46","interface AppPlugin {<newline46mondego>    Node getContentNode();<newline46mondego><newline46mondego>    String getName();<newline46mondego>}<newline46mondego>"
"2422splitHere46","12768880splitHere46","ContextLoaderListener"
"2423splitHere46","12768880splitHere46","web.xml"
"2424splitHere46","12768880splitHere46","<listener><newline46mondego>    <listener-class><newline46mondego>        org.springframework.web.context.ContextLoaderListener<newline46mondego>    </listener-class><newline46mondego></listener><newline46mondego>"
"2425splitHere46","12768901splitHere46","public class Cod { <newline46mondego>  public static void main(String[] args) { <newline46mondego>    System.out.println(exp()); <newline46mondego>  }<newline46mondego>  public static int exp() { <newline46mondego>    int x=10; <newline46mondego>    for (int i=1; i<=3;i++) { <newline46mondego>      x=x*10; <newline46mondego>    } <newline46mondego>    int y=x/10; <newline46mondego>    return y; <newline46mondego>  }<newline46mondego>}<newline46mondego>"
"2426splitHere46","12768901splitHere46","x/10"
"2427splitHere46","12768981splitHere46","equals()"
"2428splitHere46","12768981splitHere46","equals(Object)"
"2429splitHere46","12768981splitHere46","@Override<newline46mondego>public boolean equals(Object o){<newline46mondego>    if(!(o instanceof Coordinate)) {<newline46mondego>        return false;<newline46mondego>    }<newline46mondego>    Coordinate c = (Coordinate)o;<newline46mondego>    return (this.x == c.getxCoordinate() && this.y == c.getyCoordinate());<newline46mondego>    }<newline46mondego>"
"2430splitHere46","12768981splitHere46","@Override"
"2431splitHere46","12769099splitHere46","JComboBox"
"2432splitHere46","12769099splitHere46","JTextField"
"2433splitHere46","12769099splitHere46","?"
"2434splitHere46","12769099splitHere46","AuthorID"
"2435splitHere46","12769099splitHere46","toString()"
"2436splitHere46","12769099splitHere46","class OneAuthor extends AbstractMap.SimpleEntry<Integer, String> {<newline46mondego>    public OneAuthor(Integer id, String name) {<newline46mondego>        super(id, name);<newline46mondego>    }<newline46mondego><newline46mondego>    public String toString() {<newline46mondego>        return getValue();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2437splitHere46","12769099splitHere46","JComboBox"
"2438splitHere46","12769099splitHere46","ResultSet rs = con.createStatement().executeQuery(<doubleQuotes46>SELECT id, name FROM authors ORDER BY name<doubleQuotes46>);<newline46mondego><newline46mondego>while(rs.next()) {<newline46mondego>    author_names_combo.addItem(new OneAuthor(rs.getInt(1), rs.getString(2));<newline46mondego>}<newline46mondego>"
"2439splitHere46","12769099splitHere46","pst.setInt(1, ((OneAuthor)author_name_combo.getSelectedItem()).getKey());<newline46mondego>"
"2440splitHere46","12769099splitHere46","getSelectedText()"
"2441splitHere46","12769099splitHere46","getText()"
"2442splitHere46","12769099splitHere46","getSelectedText()"
"2443splitHere46","12769099splitHere46","getText()"
"2444splitHere46","12769099splitHere46","pst = con.prepareStatement(sql);<newline46mondego>pst.setInt(1, ((OneAuthor)author_name_combo.getSelectedItem()).getKey());<newline46mondego>pst.setString(2, book_name.getText());<newline46mondego>"
"2445splitHere46","12769141splitHere46","Spring for Apache Hadoop"
"2446splitHere46","12769141splitHere46","Hive"
"2447splitHere46","12769141splitHere46","Hive"
"2448splitHere46","12769141splitHere46","hive -f file.q"
"2449splitHere46","12769141splitHere46","import java.io.PrintStream;<newline46mondego>import org.apache.hadoop.hive.cli.CliDriver;<newline46mondego>import org.apache.hadoop.hive.cli.CliSessionState;<newline46mondego>import org.apache.hadoop.hive.common.LogUtils;<newline46mondego>import org.apache.hadoop.hive.conf.HiveConf;<newline46mondego>import org.apache.hadoop.hive.ql.session.SessionState;<newline46mondego><newline46mondego>public class RunHQLScript {<newline46mondego><newline46mondego>    private static class MyCliSessionState extends CliSessionState {<newline46mondego>        public MyCliSessionState(HiveConf conf, String host, int port) {<newline46mondego>            super(conf);<newline46mondego>            this.host = host;<newline46mondego>            this.port = port;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) throws Exception {<newline46mondego><newline46mondego>        LogUtils.initHiveLog4j();<newline46mondego>        CliSessionState ss = new MyCliSessionState(new HiveConf(SessionState.class),<newline46mondego>                <doubleQuotes46>localhost<doubleQuotes46>, 10000);<newline46mondego><newline46mondego>        ss.in = System.in;<newline46mondego>        ss.out = new PrintStream(System.out, true, <doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>        ss.err = new PrintStream(System.err, true, <doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>        ss.fileName = <doubleQuotes46>file.q<doubleQuotes46>;  //HQL file<newline46mondego><newline46mondego>        SessionState.start(ss);<newline46mondego>        ss.connect();<newline46mondego>        CliDriver cli = new CliDriver();<newline46mondego>        int processFile = cli.processFile(ss.fileName);<newline46mondego>        System.out.println(<doubleQuotes46>return code: <doubleQuotes46> +processFile);<newline46mondego>        ss.close();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2450splitHere46","12769141splitHere46","Thrift service"
"2451splitHere46","12769241splitHere46","DriverManager.getConnection(<doubleQuotes46>jdbc:sqlserver://localhost:1433;databaseName=SocialFamilyTree;integratedSecurity=true;<doubleQuotes46>);<newline46mondego>"
"2452splitHere46","12769285splitHere46","public void addToBlueSp(String string) {<newline46mondego>    Bluesp.add(string);<newline46mondego>} <newline46mondego>"
"2453splitHere46","12769389splitHere46","public void readFile(String path){<newline46mondego><newline46mondego><newline46mondego>File f = new File(path);<newline46mondego>FileReader fr = new FileReader(f);<newline46mondego>BufferedReader br = new BufferedReader(fr);<newline46mondego><newline46mondego>String read = new String();<newline46mondego><newline46mondego>String temRead = new String();<newline46mondego><newline46mondego>while((temRead = br.readLine())!=null){<newline46mondego><newline46mondego>     read = read + temRead;<newline46mondego><newline46mondego> }<newline46mondego><newline46mondego><newline46mondego><newline46mondego>}<newline46mondego>"
"2454splitHere46","12769417splitHere46","int originalValue = Integer.parseInt(toBinaryString , 2));<newline46mondego>"
"2455splitHere46","12769512splitHere46","public void sum()"
"2456splitHere46","12769512splitHere46","public class Calculate{<newline46mondego>     private int sum = 0;<newline46mondego><newline46mondego>     public void performSum(){<newline46mondego>         sum(3,4);<newline46mondego>         System.out.println(<doubleQuotes46>sum=<doubleQuotes46>+this.sum);<newline46mondego>     }<newline46mondego><newline46mondego>     public void sum(int value, int value2){<newline46mondego>           sum = value1+ value2;<newline46mondego>           return; //optional<newline46mondego>     }<newline46mondego>  }<newline46mondego>"
"2457splitHere46","12769512splitHere46","public int sum()"
"2458splitHere46","12769512splitHere46","int"
"2459splitHere46","12769512splitHere46","public class Calculate{<newline46mondego><newline46mondego>     public void performSum(){<newline46mondego>         int sum = sum(3,4);<newline46mondego>         System.out.println(<doubleQuotes46>sum=<doubleQuotes46>+sum);<newline46mondego>     }<newline46mondego><newline46mondego>     public int sum(int value, int value2){<newline46mondego>          return value1+ value2;<newline46mondego>     }<newline46mondego>  }<newline46mondego>"
"2460splitHere46","12769535splitHere46","public static void main( String [] args ) {<newline46mondego><newline46mondego>    System.out.println( <doubleQuotes46>Starting Main<doubleQuotes46> ) ;<newline46mondego>        Thread numberThread;<newline46mondego>        for ( int i = 1 ; i <= 5 ; i++ ) {<newline46mondego>            numberThread = new Thread(new NumberTask(i)) ;<newline46mondego>            numberThread.start() ;<newline46mondego>        }<newline46mondego>        numberThread.join();<newline46mondego>        System.out.println( <doubleQuotes46>Ending Main<doubleQuotes46> ) ; <newline46mondego>    }<newline46mondego>"
"2461splitHere46","12769602splitHere46","public boolean onTap(GeoPoint p, MapView mapView) { <newline46mondego>  Projection projection = mapView.getProjection();<newline46mondego>  projection.toPixels(yourMarkerGeopoint, pointTap);<newline46mondego>  yourMarker.copyBounds(boundsTap);<newline46mondego>  boundsTap.offset(pointTap.x, pointTap.y);<newline46mondego>  projection.toPixels(geoPoint, pointTap);<newline46mondego>  if(boundsTap.contains(pointTap.x, pointTap.y)){<newline46mondego>    //you tap on the marker<newline46mondego>    return true;<newline46mondego>  }<newline46mondego>  return false;<newline46mondego>}<newline46mondego>"
"2462splitHere46","12769683splitHere46","+"
"2463splitHere46","12769683splitHere46","[^7]+"
"2464splitHere46","12769683splitHere46","int no7 = 0, no0_3 = 0, no5_6 = 0;<newline46mondego>for (int i = 0; i < myString.length(); i++) {<newline46mondego>  char c = myString.charAt(i);<newline46mondego>  if (c == '7') no7++;<newline46mondego>  if (c >= '0' && c <= '3') no0_3++;<newline46mondego>  if (c == '5' || c == '6') no5_6++;<newline46mondego>}<newline46mondego>"
"2465splitHere46","12769732splitHere46","public <T><newline46mondego>void myFunction(Class<T> clazz, ArrayList<T> myList) {<newline46mondego>    T myObject = null;<newline46mondego>    try {<newline46mondego>        myObject = clazz.newInstance();<newline46mondego>    } catch (Exception e) {<newline46mondego>    }<newline46mondego>    myList.add(myObject);<newline46mondego>}<newline46mondego>"
"2466splitHere46","12769732splitHere46","public <T><newline46mondego>ArrayList<T> myFunction(Class<T> clazz) {<newline46mondego>    ArrayList<T> myList = new ArrayList<T>();<newline46mondego>    T myObject = null;<newline46mondego>    try {<newline46mondego>        myObject = clazz.newInstance();<newline46mondego>    } catch (Exception e) {<newline46mondego>    }<newline46mondego>    myList.add(myObject);<newline46mondego>    return myList;<newline46mondego>}<newline46mondego>"
"2467splitHere46","12769732splitHere46","T"
"2468splitHere46","12769732splitHere46","T"
"2469splitHere46","12769885splitHere46","2e+08"
"2470splitHere46","12769885splitHere46","int"
"2471splitHere46","12769885splitHere46","int n = (int)2e+08<newline46mondego>"
"2472splitHere46","12769885splitHere46","2e+08"
"2473splitHere46","12769885splitHere46","2e08"
"2474splitHere46","12769885splitHere46","2e8"
"2475splitHere46","12769885splitHere46","2E+08"
"2476splitHere46","12769885splitHere46","2E08"
"2477splitHere46","12769885splitHere46","2E8"
"2478splitHere46","12769911splitHere46","select s <newline46mondego>from Sentence s<newline46mondego>where s.date = :date<newline46mondego>and :numberOfWords = (select count(sw) from SentenceWord sw<newline46mondego>                      where sw.sentence = s<newline46mondego>                      and sw in (:words))<newline46mondego>"
"2479splitHere46","12769911splitHere46","numberOfWords"
"2480splitHere46","12769969splitHere46","public static class JImagePanel extends JPanel implements Scrollable {<newline46mondego><newline46mondego>    private BufferedImage image;<newline46mondego><newline46mondego>    public JImagePanel(BufferedImage image) {<newline46mondego>        this.image = image;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void paintComponent(Graphics g) {<newline46mondego>        super.paintComponent(g);<newline46mondego>        BufferedImage scaled = //new BufferedImage(getWidth(), getHeight(), BufferedImage.TYPE_INT_RGB);<newline46mondego>                GraphicsUtilities.createCompatibleImage(getWidth(), getHeight());<newline46mondego>        Graphics2D g2 = scaled.createGraphics();<newline46mondego>        g2.drawImage(image, 0, 0, getWidth(), getHeight(), null);<newline46mondego>        g.drawImage(scaled, 0, 0, this);<newline46mondego>        g2.dispose();<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * This method is used for laying out this container<newline46mondego>     * inside the Viewport: let it return the <doubleQuotes46>real<doubleQuotes46> pref<newline46mondego>     * or min, depending on whether or not the scrollbars<newline46mondego>     * are showing.  <newline46mondego>     */<newline46mondego>    @Override<newline46mondego>    public Dimension getPreferredSize() {<newline46mondego>        Dimension size = getImageSize();<newline46mondego>        if (!getScrollableTracksViewportWidth()) {<newline46mondego>            size.width = getMinimumSize().width;<newline46mondego>        }<newline46mondego>        if (!getScrollableTracksViewportHeight()) {<newline46mondego>            size.height = getMinimumSize().height;<newline46mondego>        }<newline46mondego>        return size;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Dimension getMinimumSize() {<newline46mondego>        Dimension min = getImageSize();<newline46mondego>        min.height /= 2;<newline46mondego>        min.width /= 2;<newline46mondego>        return min;<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * This is used for laying out the scrollPane. Keep <newline46mondego>     * it fixed to <doubleQuotes46>real<doubleQuotes46> pref size.<newline46mondego>     */<newline46mondego>    @Override<newline46mondego>    public Dimension getPreferredScrollableViewportSize() {<newline46mondego>        return getImageSize();<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * The unscaled image size (aka: <doubleQuotes46>real<doubleQuotes46> pref)<newline46mondego>     */<newline46mondego>    protected Dimension getImageSize() {<newline46mondego>        return new Dimension(image.getWidth(), image.getHeight());<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean getScrollableTracksViewportWidth() {<newline46mondego>        return getParent() instanceof JViewport<newline46mondego>                && getParent().getWidth() >= getMinimumSize().width;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean getScrollableTracksViewportWidth() {<newline46mondego>        return getParent() instanceof JViewport<newline46mondego>                && getParent().getWidth() >= getMinimumSize().width;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean getScrollableTracksViewportHeight() {<newline46mondego>        return getParent() instanceof JViewport<newline46mondego>              && getParent().getHeight() >= getMinimumSize().height;        }<newline46mondego><newline46mondego><newline46mondego>    @Override<newline46mondego>    public int getScrollableUnitIncrement(Rectangle visibleRect,<newline46mondego>            int orientation, int direction) {<newline46mondego>        return 10;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public int getScrollableBlockIncrement(Rectangle visibleRect,<newline46mondego>            int orientation, int direction) {<newline46mondego>        return 100;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"2481splitHere46","12770081splitHere46","public class UserView {<newline46mondego><newline46mondego>    private final User corbaUser;<newline46mondego><newline46mondego>    public UserView(User corbaUser) {<newline46mondego>        this.corbaUser = corbaUser<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public String toString() {<newline46mondego>       String ret = null;<newline46mondego>       // construct the string as you want here<newline46mondego>       return ret;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2482splitHere46","12770093splitHere46","Map"
"2483splitHere46","12770093splitHere46","Set"
"2484splitHere46","12770093splitHere46","HashMap"
"2485splitHere46","12770093splitHere46","HashMap"
"2486splitHere46","12770093splitHere46","getEntry"
"2487splitHere46","12770093splitHere46","/**<newline46mondego>   * Returns the entry associated with the specified key in the<newline46mondego>   * HashMap.  Returns null if the HashMap contains no mapping<newline46mondego>   * for the key.<newline46mondego>   */<newline46mondego>  final Entry<K,V> getEntry(Object key) {<newline46mondego>"
"2488splitHere46","12770093splitHere46","java.util"
"2489splitHere46","12770136splitHere46","int"
"2490splitHere46","12770136splitHere46","printSyra(113383, 1);<newline46mondego>"
"2491splitHere46","12770136splitHere46","int num"
"2492splitHere46","12770136splitHere46","long num"
"2493splitHere46","12770136splitHere46","BigInteger"
"2494splitHere46","12770136splitHere46","StackOverflowError"
"2495splitHere46","12770136splitHere46","BigInteger"
"2496splitHere46","12770136splitHere46","private static int printSyra(BigInteger num, int count) {<newline46mondego>    if (num.equals(BigInteger.ONE)) {<newline46mondego>        return count;<newline46mondego>    }<newline46mondego>    if (num.mod(BigInteger.valueOf(2)).equals(BigInteger.ZERO)) {<newline46mondego>        return printSyra(num.divide(BigInteger.valueOf(2)), count + 1);<newline46mondego>    } else {<newline46mondego>        return printSyra(num.multiply(BigInteger.valueOf(3)).add(BigInteger.ONE), count + 1);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2497splitHere46","12770136splitHere46","printSyra(new BigInteger(<doubleQuotes46>9780657630<doubleQuotes46>), 0)  //1132<newline46mondego>printSyra(new BigInteger(<doubleQuotes46>104899295810901231<doubleQuotes46>), 0)  //2254<newline46mondego>"
"2498splitHere46","12770250splitHere46","System.out.format(<doubleQuotes46>%3d * %4d = %5d\n<doubleQuotes46>, numberLoop, num_input, result);<newline46mondego>"
"2499splitHere46","12770250splitHere46","%d"
"2500splitHere46","12770250splitHere46","%3d"
"2501splitHere46","12770250splitHere46","numberLoop"
"2502splitHere46","12770250splitHere46","%4d"
"2503splitHere46","12770250splitHere46","num_input"
"2504splitHere46","12770250splitHere46","%5d"
"2505splitHere46","12770250splitHere46","result"
"2506splitHere46","12770250splitHere46","numberLoop(3 spaces) * num_input(4 spaces) = result(5 spaces)<newline46mondego>"
"2507splitHere46","12770250splitHere46","%3d"
"2508splitHere46","12770250splitHere46","%-3d"
"2509splitHere46","12770250splitHere46","String.format()"
"2510splitHere46","12770250splitHere46","String result = String.format(<doubleQuotes46>%3d * %4d = %5d\n<doubleQuotes46>, numberLoop, num_input, result)<newline46mondego>"
"2511splitHere46","12770362splitHere46","Runnable"
"2512splitHere46","12770362splitHere46","Display"
"2513splitHere46","12770362splitHere46","asyncExec"
"2514splitHere46","12770362splitHere46","syncExec"
"2515splitHere46","12770362splitHere46","Toolkit.getDefaultToolkit().getSystemClipboard().addFlavorListener(<newline46mondego>    new FlavorListener() {<newline46mondego><newline46mondego>    @Override<newline46mondego>     public void flavorsChanged(FlavorEvent e) {<newline46mondego>         Display.getDefault().asyncExec(new Runnable(){<newline46mondego>            public void run(){<newline46mondego>              // do things on the UI thread<newline46mondego>              String result = <doubleQuotes46><doubleQuotes46>;<newline46mondego>              Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();<newline46mondego>              Transferable contents = clipboard.getContents(null);<newline46mondego>              ...<newline46mondego>            }<newline46mondego>         }<newline46mondego>     });<newline46mondego>"
"2516splitHere46","12770362splitHere46","Toolkit.getDefaultToolkit().getSystemClipboard()<newline46mondego>                                    .addFlavorListener(<newline46mondego>"
"2517splitHere46","12770544splitHere46","toString"
"2518splitHere46","12770544splitHere46","toString()"
"2519splitHere46","12770544splitHere46","Object"
"2520splitHere46","12770544splitHere46","MyClass#toString()"
"2521splitHere46","12770798splitHere46","for (int i = 0; i < nElems; i++)<newline46mondego>  for (int j = 0; j < nElems; j++)<newline46mondego>    if(a[j].equals(a[i]) && j != i)<newline46mondego>      b[k++] = i;<newline46mondego>"
"2522splitHere46","12770798splitHere46","for (int i = 0; i < nElems; i++)<newline46mondego>  for (int j = i+1; j < nElems; j++)<newline46mondego>    if(a[j].equals(a[i]))<newline46mondego>      b[k++] = j;<newline46mondego>"
"2523splitHere46","12770798splitHere46","Output which index are duplicated: 2, 7<newline46mondego>"
"2524splitHere46","12770798splitHere46","public class Test {<newline46mondego>  Integer[] a = {00, 11, 11, 22, 33, 44, 55, 55, 66, 77, 88, 99};<newline46mondego>  int nElems = a.length;<newline46mondego><newline46mondego>  public void dups() {<newline46mondego>    int[] b = new int[100];<newline46mondego>    int[] c = new int[100];<newline46mondego><newline46mondego>    int k = 0;<newline46mondego>    int n = 0;<newline46mondego>    int p = 0;<newline46mondego><newline46mondego>    for (int i = 0; i < nElems; i++) {<newline46mondego>      for (int j = i + 1; j < nElems; j++) {<newline46mondego>        if (a[j].equals(a[i])) {<newline46mondego>          b[k++] = j;<newline46mondego>        }<newline46mondego>      }<newline46mondego>    }<newline46mondego><newline46mondego>    for (int l = 0; l < k; l++) {<newline46mondego>      System.out.print(b[l] + <doubleQuotes46> <doubleQuotes46>);<newline46mondego>    }<newline46mondego>    for (int m = 0; m < nElems; m++) {<newline46mondego>      if (m != b[p]) {<newline46mondego>        c[n++] = a[m];<newline46mondego>      } else {<newline46mondego>        p += 1;<newline46mondego>      }<newline46mondego>    }<newline46mondego><newline46mondego>    System.out.print(<doubleQuotes46>\n<doubleQuotes46>);<newline46mondego><newline46mondego>    for (int o = 0; o < nElems - k; o++) {<newline46mondego>      System.out.print(c[o] + <doubleQuotes46> <doubleQuotes46>);<newline46mondego>    }<newline46mondego>  }<newline46mondego><newline46mondego>  public static void main(String args[]) {<newline46mondego>    new Test().dups();<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"2525splitHere46","12770798splitHere46","2 7 <newline46mondego>0 11 22 33 44 55 66 77 88 99<newline46mondego>"
"2526splitHere46","12770804splitHere46","adb"
"2527splitHere46","12770804splitHere46","adb connect 127.0.0.1 <newline46mondego>"
"2528splitHere46","12770820splitHere46","SHIFT immediate"
"2529splitHere46","12770820splitHere46","ROTATE immediate"
"2530splitHere46","12770820splitHere46","movq    %rax, %rbx<newline46mondego>salq    $13, %rbx<newline46mondego>leaq    (%rbp,%rbx), %rbx<newline46mondego>movq    %rdi, %rbp<newline46mondego>sarq    $27, %rbp<newline46mondego>xorq    %rbx, %rdx<newline46mondego>"
"2531splitHere46","12770820splitHere46","movq    %rdx, %rbx<newline46mondego>rorq    $45, %rbx<newline46mondego>leaq    (%rbp,%rbx), %rbx<newline46mondego>movq    %r8, %rbp<newline46mondego>rorq    $49, %rbp<newline46mondego>xorq    %rbx, %r9<newline46mondego>"
"2532splitHere46","12770820splitHere46","SHIFT"
"2533splitHere46","12770820splitHere46","ROTATE"
"2534splitHere46","12770820splitHere46","Order Number: 248966-026 April 2012"
"2535splitHere46","12770820splitHere46","SHIFT"
"2536splitHere46","12770820splitHere46","by 1"
"2537splitHere46","12770820splitHere46","by immediate"
"2538splitHere46","12770820splitHere46","Port 0"
"2539splitHere46","12770820splitHere46","Port 1"
"2540splitHere46","12770820splitHere46","SHIFT immediate"
"2541splitHere46","12770820splitHere46","ROTATE"
"2542splitHere46","12770820splitHere46","ROTATE"
"2543splitHere46","12770820splitHere46","Port 1"
"2544splitHere46","12770820splitHere46","ROTATE immediate"
"2545splitHere46","12770866splitHere46","labelDisplay[1].setText(<doubleQuotes46><doubleQuotes46>+id);<newline46mondego><newline46mondego> String labels[] = {guestInfo.getFirstName()+<doubleQuotes46> <doubleQuotes46>+guestInfo.getLastName(),<newline46mondego>      <doubleQuotes46><doubleQuotes46>+roomInfo.getRoomNo(),roomInfo.getRoomType(), guestInfo.getTime(),<newline46mondego>      <doubleQuotes46>11:00<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>+guestInfo.getDeposit(),<doubleQuotes46>30<doubleQuotes46>};<newline46mondego><newline46mondego> labels = new String[7];<newline46mondego><newline46mondego> for(int z = 0; z<labels.length; z++){<newline46mondego>      labelDisplay[z].setText(labels[z]);<newline46mondego> }<newline46mondego>"
"2546splitHere46","12770866splitHere46","labels = new String[7];"
"2547splitHere46","12770893splitHere46","Font"
"2548splitHere46","12770896splitHere46","int hex = (char)0xA;<newline46mondego>"
"2549splitHere46","12770896splitHere46","char hex = 0xA;<newline46mondego>"
"2550splitHere46","12770896splitHere46","char hex = 0xA;<newline46mondego>System.out.println(hex);<newline46mondego><newline46mondego>int hex = 0xA;<newline46mondego>System.out.println((char)hex);<newline46mondego>"
"2551splitHere46","12770896splitHere46","String newLine = System.getProperty(<doubleQuotes46>line.separator<doubleQuotes46>).toString();<newline46mondego>"
"2552splitHere46","12770949splitHere46","a.suba"
"2553splitHere46","12770949splitHere46","a"
"2554splitHere46","12770976splitHere46","File > New Project > Java Project with Existing Sources"
"2555splitHere46","12770976splitHere46","Run > Generate Javadoc"
"2556splitHere46","12770976splitHere46","Overview"
"2557splitHere46","12770976splitHere46","Index"
"2558splitHere46","12770976splitHere46","Use"
"2559splitHere46","12770976splitHere46","Tree"
"2560splitHere46","12770976splitHere46","Window > Debugging > Call Stack"
"2561splitHere46","12770976splitHere46","Profile > Profile Project"
"2562splitHere46","12770984splitHere46","java.util.Set"
"2563splitHere46","12771024splitHere46","for (int i = 0; i < numArcs; i++){<newline46mondego>    for (int j = 0; j < numNodes; j++){<newline46mondego>        if (matriz[j][i] != 0)<newline46mondego>            break;<newline46mondego>            //It finds a number != 0 so it should move to the next column <newline46mondego><newline46mondego>        //If it gets here, the whole column was full of zeros<newline46mondego>        column = i; <newline46mondego>        key = true;<newline46mondego>        break outerloop;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2564splitHere46","12771024splitHere46","i"
"2565splitHere46","12771024splitHere46","int[][] matrix = new int[5][4];<newline46mondego>    boolean columnEmpty = true;<newline46mondego>    int column = 0;<newline46mondego>    boolean key = false;<newline46mondego><newline46mondego>    matrix[0][0] = -1;<newline46mondego>    matrix[0][1] = -1;<newline46mondego>    matrix[1][1] = 1;<newline46mondego>    matrix[1][2] = -1;<newline46mondego>    matrix[2][2] = -1;<newline46mondego><newline46mondego>    outerloop: for (int i = 0; i < 5; i++){<newline46mondego>            columnEmpty = true;<newline46mondego>            for (int j = 0; j < 4; j++){<newline46mondego>                if (matrix[j][i] != 0) {<newline46mondego>                   columnEmpty = false;<newline46mondego>                   break;<newline46mondego>                }<newline46mondego><newline46mondego>            }<newline46mondego>            if (columnEmpty) {<newline46mondego>                // If we are here.. then flag was never set to `true`. <newline46mondego>                // So, all the rows for that column was Zero..<newline46mondego>                column = i; <newline46mondego>                key = true;<newline46mondego>                break outerloop;<newline46mondego>            }<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>    System.out.println(<doubleQuotes46>Column : <doubleQuotes46> + column);<newline46mondego>"
"2566splitHere46","12771132splitHere46","=="
"2567splitHere46","12771132splitHere46","equals(...)"
"2568splitHere46","12771132splitHere46","equalsIgnoreCase(...)"
"2569splitHere46","12771132splitHere46","if (fu == <doubleQuotes46>bar<doubleQuotes46>) {<newline46mondego>  // do something<newline46mondego>}<newline46mondego>"
"2570splitHere46","12771132splitHere46","if (<doubleQuotes46>bar<doubleQuotes46>.equals(fu)) {<newline46mondego>  // do something<newline46mondego>}<newline46mondego>"
"2571splitHere46","12771132splitHere46","if (<doubleQuotes46>bar<doubleQuotes46>.equalsIgnoreCase(fu)) {<newline46mondego>  // do something<newline46mondego>}<newline46mondego>"
"2572splitHere46","12771132splitHere46","if (e.getActionCommand() == <doubleQuotes46>GET TIME<doubleQuotes46>)<newline46mondego>"
"2573splitHere46","12771132splitHere46","if (<doubleQuotes46>GET TIME<doubleQuotes46>.equals(e.getActionCommand())<newline46mondego>"
"2574splitHere46","12771132splitHere46","now"
"2575splitHere46","12771132splitHere46","public void actionPerformed(ActionEvent e)<newline46mondego>{<newline46mondego>    if (e.getActionCommand() == <doubleQuotes46>GET TIME<doubleQuotes46>)<newline46mondego>    {<newline46mondego>        now = new Date();<newline46mondego>        JOptionPane.showMessageDialog(null, <doubleQuotes46>Time <doubleQuotes46>+dateFormatter.format(now),       <newline46mondego>"
"2576splitHere46","12771145splitHere46","class PairKey<T extends Comparable<T>> { <newline46mondego>  final T fst, snd;<newline46mondego>  public PairKey(T a, T b) {<newline46mondego>    if (a.compareTo(b) <=0 ) {<newline46mondego>      fst = a;<newline46mondego>      snd = b;<newline46mondego>    } else {<newline46mondego>      fst = b;<newline46mondego>      snd = a;<newline46mondego>    }<newline46mondego>  }<newline46mondego><newline46mondego>  @Override<newline46mondego>  public int hashCode() {<newline46mondego>    return a.hashCode() & 37 & b.hashCode();<newline46mondego>  }<newline46mondego><newline46mondego>  @Override<newline46mondego>  public boolean equals(Object other) {<newline46mondego>    if (other == this) return true;<newline46mondego>    if (!(other instanceOf PairKey)) return false;<newline46mondego>    PairKey<T> obj = (PairKey<T>) other;<newline46mondego>    return (obj.fst.equals(fst) && obj.snd.equals(snd));<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"2577splitHere46","12771145splitHere46","pairs.contains(new PairKey(A,B)); <newline46mondego>"
"2578splitHere46","12771253splitHere46","internalMap"
"2579splitHere46","12771253splitHere46","Map"
"2580splitHere46","12771253splitHere46","HashMap"
"2581splitHere46","12771253splitHere46","TreeMap"
"2582splitHere46","12771253splitHere46","public class TestMap<KeyType, ValueType> {<newline46mondego>    private Map<KeyType, ValueType> internalMap;<newline46mondego><newline46mondego>    public TestMap() {<newline46mondego>        internalMap = new HashMap<KeyType, ValueType>();<newline46mondego>    }<newline46mondego><newline46mondego>    public TestMap(Map<KeyType, ValueType> m) {<newline46mondego>        internalMap = m;<newline46mondego>    }<newline46mondego><newline46mondego>    public void printMap( String msg )<newline46mondego>    {<newline46mondego>        System.out.println( msg + <doubleQuotes46>:<doubleQuotes46> );<newline46mondego>        Set<Map.Entry<KeyType,ValueType>> entries = internalMap.entrySet( );<newline46mondego><newline46mondego>        for( Map.Entry<KeyType,ValueType> thisPair : entries )<newline46mondego>        {<newline46mondego>            System.out.print( thisPair.getKey( ) + <doubleQuotes46>: <doubleQuotes46> );<newline46mondego>            System.out.println( thisPair.getValue( ) );<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    . . . // methods to add to internal map, etc.<newline46mondego>}<newline46mondego>"
"2583splitHere46","12771273splitHere46","create_statement = this.sql_connection.prepareStatement(sb.toString(),<newline46mondego>                   Statement.RETURN_GENERATED_KEYS);<newline46mondego>//your code<newline46mondego>ResultSet res = create_statement.getGeneratedKeys();<newline46mondego>"
"2584splitHere46","12771273splitHere46","create"
"2585splitHere46","12771317splitHere46","images"
"2586splitHere46","12771317splitHere46","WebContent"
"2587splitHere46","12771339splitHere46","<c:if test=<doubleQuotes46>${!empty REPORTED_WORD_LIST}<doubleQuotes46>><newline46mondego>        <form method=<doubleQuotes46>post<doubleQuotes46> action=<doubleQuotes46>seeReportedWordsOneByOne.html<doubleQuotes46>><newline46mondego><newline46mondego>            <select name=<doubleQuotes46>fityma<doubleQuotes46> onchange=<doubleQuotes46>submit()<doubleQuotes46>><newline46mondego>                <c:forEach items=<doubleQuotes46>${REPORTED_WORD_LIST}<doubleQuotes46> var=<doubleQuotes46>rep<doubleQuotes46>><newline46mondego>                    <option value=<doubleQuotes46>${rep.german}<doubleQuotes46>>${rep.german}</option><newline46mondego>                </c:forEach><newline46mondego>            </select><newline46mondego><newline46mondego><newline46mondego>        </form><newline46mondego></c:if><newline46mondego>"
"2588splitHere46","12771508splitHere46","run()"
"2589splitHere46","12771508splitHere46","run()"
"2590splitHere46","12771508splitHere46","start()"
"2591splitHere46","12771541splitHere46","public class CdiEnvironmentLoaderListener extends EnvironmentLoaderListener {<newline46mondego><newline46mondego>    //this is your implementation that extends Authorizing Realm<newline46mondego>    ShiroRealm shiroRealm = null; <newline46mondego><newline46mondego>    @Override<newline46mondego>    protected WebEnvironment createEnvironment(ServletContext sc) {<newline46mondego>        WebEnvironment environment = super.createEnvironment(sc);<newline46mondego>        shiroRealm = new ShiroRealm();<newline46mondego><newline46mondego>        RealmSecurityManager rsm = (RealmSecurityManager) environment<newline46mondego>            .getSecurityManager();<newline46mondego><newline46mondego>        HashedCredentialsMatcher matcher = new HashedCredentialsMatcher();<newline46mondego>        matcher.setHashAlgorithmName(Sha512Hash.ALGORITHM_NAME);<newline46mondego><newline46mondego>        shiroRealm.setCredentialsMatcher(matcher);<newline46mondego><newline46mondego>        rsm.setRealm(shiroRealm);<newline46mondego><newline46mondego>        ((DefaultWebEnvironment) environment).setSecurityManager(rsm);<newline46mondego><newline46mondego>        return environment;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2592splitHere46","12771541splitHere46","<listener><newline46mondego>    <listener-class>com.company.security.CdiEnvironmentLoaderListener</listener-class><newline46mondego></listener><newline46mondego>"
"2593splitHere46","12771571splitHere46","Collections.sort(List<T>)"
"2594splitHere46","12771571splitHere46","T"
"2595splitHere46","12771571splitHere46","Comparable"
"2596splitHere46","12771571splitHere46","sort()"
"2597splitHere46","12771571splitHere46","Comparator"
"2598splitHere46","12771571splitHere46","Person"
"2599splitHere46","12771571splitHere46","Comparable"
"2600splitHere46","12771571splitHere46","Comparator"
"2601splitHere46","12771571splitHere46","ArrayList<Person> nameFromText = new ArrayList<Person>();<newline46mondego>fillArrayList(nameFromText, pullFile);<newline46mondego>// Sort ArrayList<newline46mondego>Collections.sort(nameFromText);  // How to sort?<newline46mondego>"
"2602splitHere46","12771571splitHere46","Comparator"
"2603splitHere46","12771571splitHere46","Person"
"2604splitHere46","12771571splitHere46","sort()"
"2605splitHere46","12771571splitHere46","public class PersonNameComparator implements Comparator<Person> {<newline46mondego>    public int compare(Person p1, Person p2) {<newline46mondego>        return p1.getName().compareTo(p2.getName());<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2606splitHere46","12771571splitHere46","Collections.sort()"
"2607splitHere46","12771571splitHere46","Collections.sort(nameForText, new PersonNameComparator());<newline46mondego>"
"2608splitHere46","12771589splitHere46","for (int i = 1, j = 1 ; i < 10 ; i++, j = (i <= 5) ? (j*10 + 1) : (j/10))<newline46mondego>    System.out.println(i * j); <newline46mondego>"
"2609splitHere46","12771731splitHere46","TabHost"
"2610splitHere46","12771731splitHere46","android:id=<doubleQuotes46>@+id/tabhost<doubleQuotes46><newline46mondego>"
"2611splitHere46","12771731splitHere46","android:id=<doubleQuotes46>@android:id/tabhost<doubleQuotes46><newline46mondego>"
"2612splitHere46","12771731splitHere46","TabActivity"
"2613splitHere46","12771887splitHere46","<f:viewParam>"
"2614splitHere46","12771887splitHere46","<h:inputText>"
"2615splitHere46","12771887splitHere46","validator"
"2616splitHere46","12771887splitHere46","<f:validator>"
"2617splitHere46","12771887splitHere46","<f:validateXxx>"
"2618splitHere46","12771887splitHere46","<h:message>"
"2619splitHere46","12771887splitHere46","<f:metadata><newline46mondego>    <f:viewParam id=<doubleQuotes46>key<doubleQuotes46> name=<doubleQuotes46>key<doubleQuotes46> value=<doubleQuotes46>#{myBean.keyFromUser}<doubleQuotes46> validator=<doubleQuotes46>myValidator<doubleQuotes46> /><newline46mondego></f:metadata><newline46mondego><h:message for=<doubleQuotes46>key<doubleQuotes46> /><newline46mondego>"
"2620splitHere46","12771887splitHere46","@PostConstruct"
"2621splitHere46","12771887splitHere46","<f:event type=<doubleQuotes46>preRenderView<doubleQuotes46>>"
"2622splitHere46","12771901splitHere46","java.awt.Graphics.drawRect(x1, y1, width, height);<newline46mondego>"
"2623splitHere46","12771901splitHere46","drawRect"
"2624splitHere46","12771901splitHere46","(graphicsInstance).drawRect(x1, y1, width, height);<newline46mondego>"
"2625splitHere46","12771901splitHere46","Graphics"
"2626splitHere46","12771901splitHere46","abstract"
"2627splitHere46","12771901splitHere46","graphicsInstance"
"2628splitHere46","12771901splitHere46","GraphicsContext"
"2629splitHere46","12771901splitHere46","Graphics"
"2630splitHere46","12771901splitHere46","drawRect()"
"2631splitHere46","12771938splitHere46","eliminateDuplicates"
"2632splitHere46","12771938splitHere46","public static int[] eliminateDuplicates(int[] list){   <newline46mondego>     List<Integer> noDup = new ArrayList<Integer>(); <newline46mondego>     noDup.add(list[0]);<newline46mondego>     for (int c = 1; c < list.length-1; c++){<newline46mondego>         if(!noDup.contains(list[c])){<newline46mondego>             noDup.add(list[c]); <newline46mondego>         }<newline46mondego>     }<newline46mondego>     int[] noDupArray = new int[noDup.size()];<newline46mondego>     for(int i = 0; i < noDup.size(); i++){<newline46mondego>         noDupArray[i] = noDup.get(i);<newline46mondego>         System.out.println(noDup.get(i));<newline46mondego>     } <newline46mondego>     return noDupArray;<newline46mondego>} <newline46mondego>"
"2633splitHere46","12771938splitHere46","List/ArrayList"
"2634splitHere46","12771938splitHere46","eliminateDuplicates"
"2635splitHere46","12771938splitHere46","public static int[] eliminateDuplicates(int[] list){   <newline46mondego>     int[] noDup = new int[list.length]; <newline46mondego>     noDup[0] = list[0];<newline46mondego>     int noDupCount = 1;<newline46mondego>     for (int c = 1; c < list.length-1; c++){<newline46mondego>         boolean bAlreadyAdded = false;<newline46mondego>         for (int d = 0; d < noDup.length-1; d++){<newline46mondego>           if (noDup[d] == list[c]){<newline46mondego>               bAlreadyAdded = true;<newline46mondego>            }<newline46mondego>         }<newline46mondego>         if(!bAlreadyAdded){<newline46mondego>             noDup[noDupCount++] = list[c]; <newline46mondego>         }<newline46mondego>     }<newline46mondego>     int[] newUniques = new int[noDupCount];<newline46mondego>     for(int i = 0; i < noDupCount; i++){<newline46mondego>         newUniques[i] = noDup[i];<newline46mondego>         System.out.println(noDup[i]);<newline46mondego>     }<newline46mondego>     return newUniques;<newline46mondego>} <newline46mondego>"
"2636splitHere46","12771953splitHere46","columns"
"2637splitHere46","12771953splitHere46","<p:row>"
"2638splitHere46","12771953splitHere46","<p:column>"
"2639splitHere46","12771953splitHere46","<p:panelGrid>"
"2640splitHere46","12771953splitHere46","<p:panelGrid columns=<doubleQuotes46>1<doubleQuotes46>><newline46mondego>    <h:outputText ... /><newline46mondego>    <h:outputText ... /><newline46mondego></p:panelGrid><newline46mondego>"
"2641splitHere46","12771953splitHere46","<table>"
"2642splitHere46","12771953splitHere46","<p:panelGrid>"
"2643splitHere46","12771953splitHere46","<newline46mondego>"
"2644splitHere46","12771953splitHere46","<h:outputText ... /><newline46mondego><br /><newline46mondego><h:outputText ... /><newline46mondego>"
"2645splitHere46","12772008splitHere46","public static void main(String[] args) {<newline46mondego>  int f = 0;<newline46mondego>  int g = 1;<newline46mondego><newline46mondego>  for(int i = 1; i <= 10; i++)<newline46mondego>  {<newline46mondego>    System.out.print(f + <doubleQuotes46> <doubleQuotes46>);<newline46mondego>    f = f + g;<newline46mondego>    g = f - g;<newline46mondego>  } <newline46mondego><newline46mondego>  System.out.println();<newline46mondego>}<newline46mondego>"
"2646splitHere46","12772008splitHere46","g"
"2647splitHere46","12772008splitHere46","f"
"2648splitHere46","12772045splitHere46","BigInteger"
"2649splitHere46","12772045splitHere46","BigInteger"
"2650splitHere46","12772045splitHere46","BigInteger"
"2651splitHere46","12772045splitHere46","BigInteger"
"2652splitHere46","12772045splitHere46","BigInteger bi = new BigInteger(intVal+<doubleQuotes46><doubleQuotes46>);<newline46mondego>"
"2653splitHere46","12772045splitHere46","add"
"2654splitHere46","12772045splitHere46","multiply"
"2655splitHere46","12772045splitHere46","divide"
"2656splitHere46","12772045splitHere46","subtract"
"2657splitHere46","12772045splitHere46","bi = bi.add(bi2);<newline46mondego>"
"2658splitHere46","12772045splitHere46","longValue()"
"2659splitHere46","12772045splitHere46","return bi.longValue();<newline46mondego>"
"2660splitHere46","12772130splitHere46","import java.io.BufferedReader;<newline46mondego>import java.io.InputStream;<newline46mondego>import java.io.InputStreamReader;<newline46mondego>import java.io.PrintWriter;<newline46mondego>import java.net.ServerSocket;<newline46mondego>import java.net.Socket;<newline46mondego><newline46mondego>public class MiniPbxManServer extends Thread {<newline46mondego>    private final int PORT = 2222;    <newline46mondego>    public static void main(String[] args) {<newline46mondego>        MiniPbxManServer gtp = new MiniPbxManServer();<newline46mondego>        gtp.start();<newline46mondego>    }    <newline46mondego>    public void run() {<newline46mondego>        try {<newline46mondego>            ServerSocket server = new ServerSocket(PORT);<newline46mondego>            System.out.println(<doubleQuotes46>MiniServer active <doubleQuotes46>+PORT);<newline46mondego>            boolean shudown = true;<newline46mondego>            while (shudown) {               <newline46mondego>                Socket socket = server.accept();                <newline46mondego>                InputStream is = socket.getInputStream();<newline46mondego>                PrintWriter out = new PrintWriter(socket.getOutputStream());            <newline46mondego>                BufferedReader in = new BufferedReader(new InputStreamReader(is));              <newline46mondego>                String line;<newline46mondego>                line = in.readLine();<newline46mondego>                String auxLine = line;<newline46mondego>                line = <doubleQuotes46><doubleQuotes46>;<newline46mondego>                // looks for post data<newline46mondego>                int postDataI = -1;<newline46mondego>                while ((line = in.readLine()) != null && (line.length() != 0)) {<newline46mondego>                    System.out.println(line);<newline46mondego>                    if (line.indexOf(<doubleQuotes46>Content-Length:<doubleQuotes46>) > -1) {<newline46mondego>                        postDataI = new Integer(line<newline46mondego>                                .substring(<newline46mondego>                                        line.indexOf(<doubleQuotes46>Content-Length:<doubleQuotes46>) + 16,<newline46mondego>                                        line.length())).intValue();<newline46mondego>                    }<newline46mondego>                }<newline46mondego>                String postData = <doubleQuotes46><doubleQuotes46>;<newline46mondego>                for (int i = 0; i < postDataI; i++) {<newline46mondego>                    int intParser = in.read();<newline46mondego>                    postData += (char) intParser;<newline46mondego>                }                               <newline46mondego>                out.println(<doubleQuotes46>HTTP/1.0 200 OK<doubleQuotes46>);<newline46mondego>                out.println(<doubleQuotes46>Content-Type: text/html; charset=utf-8<doubleQuotes46>);<newline46mondego>                out.println(<doubleQuotes46>Server: MINISERVER<doubleQuotes46>);<newline46mondego>                // this blank line signals the end of the headers<newline46mondego>                out.println(<doubleQuotes46><doubleQuotes46>);<newline46mondego>                // Send the HTML page               <newline46mondego>                out.println(<doubleQuotes46><H1>Welcome to the Mini PbxMan server</H1><doubleQuotes46>);<newline46mondego>                out.println(<doubleQuotes46><H2>GET-><doubleQuotes46>+auxLine+ <doubleQuotes46></H2><doubleQuotes46>);        <newline46mondego>                out.println(<doubleQuotes46><H2>Post-><doubleQuotes46>+postData+ <doubleQuotes46></H2><doubleQuotes46>);<newline46mondego>                out.println(<doubleQuotes46><form name=\<doubleQuotes46>input\<doubleQuotes46> action=\<doubleQuotes46>imback\<doubleQuotes46> method=\<doubleQuotes46>post\<doubleQuotes46>><doubleQuotes46>);<newline46mondego>                out.println(<doubleQuotes46>Username: <input type=\<doubleQuotes46>text\<doubleQuotes46> name=\<doubleQuotes46>user\<doubleQuotes46>><input type=\<doubleQuotes46>submit\<doubleQuotes46> value=\<doubleQuotes46>Submit\<doubleQuotes46>></form><doubleQuotes46>);                 <newline46mondego>                //if your get parameter contains shutdown it will shutdown<newline46mondego>                if(auxLine.indexOf(<doubleQuotes46>?shutdown<doubleQuotes46>)>-1){<newline46mondego>                    shudown = false;<newline46mondego>                }<newline46mondego>                out.close();<newline46mondego>                socket.close();<newline46mondego>            }<newline46mondego>            server.close();            <newline46mondego>        } catch (Exception e) {<newline46mondego>            e.printStackTrace();<newline46mondego>        }<newline46mondego>    }    <newline46mondego>}<newline46mondego>"
"2661splitHere46","12772236splitHere46","if(name != null && value != null)<newline46mondego>{<newline46mondego>  //nothing here<newline46mondego>}<newline46mondego>{<newline46mondego>  System.out.println(<doubleQuotes46>Values not null<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"2662splitHere46","12772236splitHere46","if"
"2663splitHere46","12772236splitHere46","true"
"2664splitHere46","12772236splitHere46","if"
"2665splitHere46","12772236splitHere46","System.out"
"2666splitHere46","12772236splitHere46","for(int i = 0; i < 10; ++i);<newline46mondego>{<newline46mondego>  System.out.println(<doubleQuotes46>Y U always run once?<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"2667splitHere46","12772236splitHere46","boolean stop = false;<newline46mondego>while(!stop);<newline46mondego>{<newline46mondego>  //...<newline46mondego>  stop = true;<newline46mondego>}<newline46mondego>"
"2668splitHere46","12772236splitHere46","if(x = 7)"
"2669splitHere46","12772272splitHere46","java.lang.System.gc()"
"2670splitHere46","12772342splitHere46","int getX()"
"2671splitHere46","12772342splitHere46","int getY()"
"2672splitHere46","12772438splitHere46","@WebServlet"
"2673splitHere46","12772438splitHere46","@ApplicationPath"
"2674splitHere46","12772438splitHere46","@Path"
"2675splitHere46","12772446splitHere46","@Component<newline46mondego>public class YourViewPreparer implements ViewPreparer {<newline46mondego>    @Autowired<newline46mondego>    private UserService userService;<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void execute(TilesRequestContext tilesContext, AttributeContext attributeContext) {<newline46mondego>        // Some magic here to get the HttpRequest...<newline46mondego>        Object[] requestObjects = tilesContext.getRequestObjects();<newline46mondego>        if (requestObjects.length == 2) {<newline46mondego>            HttpServletRequest request = (HttpServletRequest) requestObjects[0];<newline46mondego>            User user = userService.getCurrentUser();<newline46mondego>            request.setAttribute(<doubleQuotes46>isLoggedIn<doubleQuotes46>, user != null);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2676splitHere46","12772446splitHere46","<bean class=<doubleQuotes46>org.springframework.web.servlet.view.tiles2.TilesConfigurer<doubleQuotes46> id=<doubleQuotes46>tilesConfigurer<doubleQuotes46>><newline46mondego>    <property name=<doubleQuotes46>definitions<doubleQuotes46>><newline46mondego>        ...<newline46mondego>    </property><newline46mondego>    <property name=<doubleQuotes46>preparerFactoryClass<doubleQuotes46> value=<doubleQuotes46>org.springframework.web.servlet.view.tiles2.SimpleSpringPreparerFactory<doubleQuotes46> /><newline46mondego></bean><newline46mondego>"
"2677splitHere46","12772446splitHere46","<definition name=<doubleQuotes46>main<doubleQuotes46> preparer=<doubleQuotes46>com.example.YourViewPreparer<doubleQuotes46>><newline46mondego>    ...<newline46mondego></definition><newline46mondego><newline46mondego><definition name=<doubleQuotes46>myView<doubleQuotes46> extends=<doubleQuotes46>main<doubleQuotes46>><newline46mondego>    ...<newline46mondego></definition><newline46mondego>"
"2678splitHere46","12772521splitHere46","FirefoxProfile firefoxProfile = new FirefoxProfile();<newline46mondego><newline46mondego>    firefoxProfile.setPreference(<doubleQuotes46>browser.download.folderList<doubleQuotes46>,2);<newline46mondego>    firefoxProfile.setPreference(<doubleQuotes46>browser.download.manager.showWhenStarting<doubleQuotes46>,false);<newline46mondego>    firefoxProfile.setPreference(<doubleQuotes46>browser.download.dir<doubleQuotes46>,<doubleQuotes46>c:\\downloads<doubleQuotes46>);<newline46mondego>    firefoxProfile.setPreference(<doubleQuotes46>browser.helperApps.neverAsk.saveToDisk<doubleQuotes46>,<doubleQuotes46>text/csv<doubleQuotes46>);<newline46mondego><newline46mondego>    WebDriver driver = new FirefoxDriver(firefoxProfile);//new RemoteWebDriver(new URL(<doubleQuotes46>http://localhost:4444/wd/hub<doubleQuotes46>), capability);<newline46mondego><newline46mondego>    driver.navigate().to(<doubleQuotes46>http://www.myfile.com/hey.csv<doubleQuotes46>);<newline46mondego>"
"2679splitHere46","12772565splitHere46","HashMap"
"2680splitHere46","12772565splitHere46","public Map<Character, Integer> getFrequency(String str){<newline46mondego><newline46mondego>    String vowels = <doubleQuotes46>aeiouAEIOU<doubleQuotes46>;<newline46mondego>    Map<Character, Integer> freqMap = new HashMap<Character, Integer>();<newline46mondego><newline46mondego>    for(int i=0;i<str.length(); i++) {<newline46mondego><newline46mondego>        char ch = str.charAt(i);<newline46mondego><newline46mondego>        // If character is a not consonant.. continue with next iteration<newline46mondego><newline46mondego>        if (vowels.contains(ch)) {<newline46mondego>            continue;<newline46mondego>        }<newline46mondego><newline46mondego>        Integer val = freqMap.get(ch);<newline46mondego><newline46mondego>        if (val != null) {<newline46mondego>            // Put new entry in Map.. With character and count = 1<newline46mondego><newline46mondego>        } else {<newline46mondego>            // Increment val by 1, and update the map for this character<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego>    return freqMap;<newline46mondego>}<newline46mondego>"
"2681splitHere46","12772565splitHere46","index = consonants.getFrequencyOf(s);<newline46mondego>if(index != 0 && consonants.contains(s)==true){<newline46mondego>"
"2682splitHere46","12772565splitHere46","index !=0"
"2683splitHere46","12772565splitHere46","consonants"
"2684splitHere46","12772565splitHere46","s"
"2685splitHere46","12772565splitHere46","getFrequencyOf(s)"
"2686splitHere46","12772637splitHere46","Thread.checkAccess()"
"2687splitHere46","12772637splitHere46","Android"
"2688splitHere46","12772637splitHere46","Thread.checkAccess"
"2689splitHere46","12772637splitHere46","public final void checkAccess() {<newline46mondego>    SecurityManager security = System.getSecurityManager();<newline46mondego>    if (security != null) {<newline46mondego>        security.checkAccess(this);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2690splitHere46","12772671splitHere46","import java.awt.BorderLayout;<newline46mondego>import java.awt.Dimension;<newline46mondego>import java.awt.event.ActionEvent;<newline46mondego>import java.beans.PropertyChangeEvent;<newline46mondego>import java.beans.PropertyChangeListener;<newline46mondego>import java.io.File;<newline46mondego>import java.util.Arrays;<newline46mondego><newline46mondego>import javax.swing.AbstractAction;<newline46mondego>import javax.swing.Icon;<newline46mondego>import javax.swing.JFileChooser;<newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JOptionPane;<newline46mondego>import javax.swing.JScrollPane;<newline46mondego>import javax.swing.JTable;<newline46mondego>import javax.swing.SwingUtilities;<newline46mondego>import javax.swing.UIManager;<newline46mondego>import javax.swing.UnsupportedLookAndFeelException;<newline46mondego>import javax.swing.filechooser.FileSystemView;<newline46mondego>import javax.swing.table.AbstractTableModel;<newline46mondego>import javax.swing.table.DefaultTableCellRenderer;<newline46mondego>import javax.swing.table.TableColumnModel;<newline46mondego>import javax.swing.table.TableModel;<newline46mondego><newline46mondego>public class TestFileTable {<newline46mondego><newline46mondego>    public class DirectoryModel extends AbstractTableModel {<newline46mondego><newline46mondego>        private File directory;<newline46mondego><newline46mondego>        private File[] files;<newline46mondego><newline46mondego>        public DirectoryModel(File directory) {<newline46mondego>            super();<newline46mondego>            setDiretory(directory);<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public String getColumnName(int column) {<newline46mondego>            switch (column) {<newline46mondego>            case 0:<newline46mondego>                return <doubleQuotes46><doubleQuotes46>;<newline46mondego>            case 1:<newline46mondego>                return <doubleQuotes46>File name<doubleQuotes46>;<newline46mondego>            case 2:<newline46mondego>                return <doubleQuotes46><doubleQuotes46>;<newline46mondego>            default:<newline46mondego>                break;<newline46mondego>            }<newline46mondego>            return <doubleQuotes46><doubleQuotes46>;<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public int getRowCount() {<newline46mondego>            return files.length;<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public int getColumnCount() {<newline46mondego>            return 6;<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public boolean isCellEditable(int rowIndex, int columnIndex) {<newline46mondego>            return columnIndex > 1;// button columns<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public Object getValueAt(int rowIndex, int columnIndex) {<newline46mondego>            switch (columnIndex) {<newline46mondego>            case 0:<newline46mondego>                return FileSystemView.getFileSystemView().getSystemIcon(files[rowIndex]);<newline46mondego>            case 1:<newline46mondego>                return files[rowIndex].getName();<newline46mondego>            case 2:<newline46mondego>                return <doubleQuotes46>Edit<doubleQuotes46>;<newline46mondego>            case 3:<newline46mondego>                return <doubleQuotes46>Results<doubleQuotes46>;<newline46mondego>            case 4:<newline46mondego>                return <doubleQuotes46>Take<doubleQuotes46>;<newline46mondego>            case 5:<newline46mondego>                return <doubleQuotes46>Delete<doubleQuotes46>;<newline46mondego>            }<newline46mondego>            return null;<newline46mondego>        }<newline46mondego><newline46mondego>        public TableModel setDiretory(File currentDirectory) {<newline46mondego>            this.directory = currentDirectory;<newline46mondego>            files = directory.listFiles();<newline46mondego>            if (files == null) {<newline46mondego>                files = new File[0];<newline46mondego>            }<newline46mondego>            Arrays.sort(files);<newline46mondego>            fireTableDataChanged();<newline46mondego>            return this;<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    protected void initUI() {<newline46mondego>        JFrame frame = new JFrame(TestFileTable.class.getSimpleName());<newline46mondego>        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        final JTable table = new JTable();<newline46mondego>        final JFileChooser fileChooser = new JFileChooser();<newline46mondego>        final DirectoryModel model = new DirectoryModel(fileChooser.getCurrentDirectory());<newline46mondego>        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);<newline46mondego>        fileChooser.addPropertyChangeListener(JFileChooser.DIRECTORY_CHANGED_PROPERTY, new PropertyChangeListener() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void propertyChange(PropertyChangeEvent evt) {<newline46mondego>                table.setModel(model.setDiretory(fileChooser.getCurrentDirectory()));<newline46mondego>            }<newline46mondego>        });<newline46mondego>        fileChooser.setCurrentDirectory(new File(System.getProperty(<doubleQuotes46>user.home<doubleQuotes46>)));<newline46mondego>        table.setShowGrid(false);<newline46mondego>        table.setIntercellSpacing(new Dimension(10, 10));<newline46mondego>        table.setRowHeight(30);<newline46mondego>        TableColumnModel columnModel = table.getColumnModel();<newline46mondego>        columnModel.getColumn(0).setCellRenderer(new DefaultTableCellRenderer() {<newline46mondego>            @Override<newline46mondego>            protected void setValue(Object value) {<newline46mondego>                if (value instanceof Icon) {<newline46mondego>                    setText(null);<newline46mondego>                    setIcon((Icon) value);<newline46mondego>                } else {<newline46mondego>                    super.setValue(value);<newline46mondego>                }<newline46mondego>            }<newline46mondego>        });<newline46mondego>        columnModel.getColumn(0).setPreferredWidth(36);<newline46mondego>        columnModel.getColumn(0).setMaxWidth(36);<newline46mondego>        table.setTableHeader(null);<newline46mondego><newline46mondego>        // If you don't have the class ButtonCOlumn, comment the next lines, it still works<newline46mondego>        // You can get it at http://tips4java.wordpress.com/2009/07/12/table-button-column/<newline46mondego>        new ButtonColumn(table, new AbstractAction() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void actionPerformed(ActionEvent e) {<newline46mondego>                JOptionPane.showMessageDialog(table, <doubleQuotes46>You have chosen to edit <doubleQuotes46> + table.getModel().getValueAt(table.getSelectedRow(), 1));<newline46mondego>            }<newline46mondego>        }, 2);<newline46mondego>        new ButtonColumn(table, new AbstractAction() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void actionPerformed(ActionEvent e) {<newline46mondego>                JOptionPane.showMessageDialog(table,<newline46mondego>                        <doubleQuotes46>You have chosen to show results for <doubleQuotes46> + table.getModel().getValueAt(table.getSelectedRow(), 1));<newline46mondego>            }<newline46mondego>        }, 3);<newline46mondego>        new ButtonColumn(table, new AbstractAction() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void actionPerformed(ActionEvent e) {<newline46mondego>                JOptionPane.showMessageDialog(table, <doubleQuotes46>You have chosen to take <doubleQuotes46> + table.getModel().getValueAt(table.getSelectedRow(), 1));<newline46mondego>            }<newline46mondego>        }, 4);<newline46mondego>        new ButtonColumn(table, new AbstractAction() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void actionPerformed(ActionEvent e) {<newline46mondego>                JOptionPane.showMessageDialog(table, <doubleQuotes46>You have chosen to delete <doubleQuotes46> + table.getModel().getValueAt(table.getSelectedRow(), 1));<newline46mondego>            }<newline46mondego>        }, 5);<newline46mondego><newline46mondego>        frame.add(fileChooser, BorderLayout.WEST);<newline46mondego>        frame.add(new JScrollPane(table));<newline46mondego>        frame.setSize(1200, 600);<newline46mondego>        frame.setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) throws ClassNotFoundException, InstantiationException, IllegalAccessException,<newline46mondego>            UnsupportedLookAndFeelException {<newline46mondego>        UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());<newline46mondego>        SwingUtilities.invokeLater(new Runnable() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                new TestFileTable().initUI();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2691splitHere46","12772746splitHere46","<action name=<doubleQuotes46>processAdd<doubleQuotes46> class=<doubleQuotes46>com.myapp.actions.StudentAction<doubleQuotes46>><newline46mondego>  <result name=<doubleQuotes46>success<doubleQuotes46> type=<doubleQuotes46>redirectAction<doubleQuotes46>>list</result><newline46mondego>  <result name=<doubleQuotes46>input<doubleQuotes46> type=<doubleQuotes46>redirectAction<doubleQuotes46>>add</result><newline46mondego>  <result name=<doubleQuotes46>failure<doubleQuotes46> type=<doubleQuotes46>redirectAction<doubleQuotes46>>add</result><newline46mondego></action><newline46mondego>"
"2692splitHere46","12772784splitHere46","test()"
"2693splitHere46","12772784splitHere46","TestMap"
"2694splitHere46","12772784splitHere46","TestMap"
"2695splitHere46","12772784splitHere46","public static void main( String [ ] args )<newline46mondego>{<newline46mondego>    TestMap<String, Integer> testHashMap = new TestMap<String,Integer>(new HashMap<String, Integer>());<newline46mondego>    testHashMap.internalMap.put(<doubleQuotes46>Pittsburgh Steelers<doubleQuotes46>, 6);<newline46mondego><newline46mondego>    TestMap<String, Integer> testTreeMap = new TestMap<String,Integer>(new TreeMap<String, Integer>());<newline46mondego>    testTreeMap.internalMap.put(<doubleQuotes46>Pittsburgh Steelers<doubleQuotes46>, 6);<newline46mondego>}<newline46mondego>"
"2696splitHere46","12772967splitHere46","enum Example {<newline46mondego>    A = 1,<newline46mondego>    B = 2,<newline46mondego>    ....<newline46mondego>}<newline46mondego>"
"2697splitHere46","12772967splitHere46","public interface Example {<newline46mondego>    public static final int A = 1;<newline46mondego>    public static final int B = 2;<newline46mondego>    ....<newline46mondego>}<newline46mondego>"
"2698splitHere46","12772967splitHere46","value"
"2699splitHere46","12772967splitHere46","public enum Example {<newline46mondego>    A(1),<newline46mondego>    B(2)<newline46mondego>    ....<newline46mondego><newline46mondego>    private final int val;<newline46mondego><newline46mondego>    public Example (int val) {<newline46mondego>        this.val = val;<newline46mondego>    }<newline46mondego><newline46mondego>    public int getValue() {<newline46mondego>        return val;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2700splitHere46","12772968splitHere46","y"
"2701splitHere46","12772968splitHere46","x"
"2702splitHere46","12772968splitHere46","-1"
"2703splitHere46","12772968splitHere46","y < 0"
"2704splitHere46","12772968splitHere46","int"
"2705splitHere46","12772968splitHere46","x"
"2706splitHere46","12772968splitHere46","y"
"2707splitHere46","12772968splitHere46","long l = (((long)x) << 32) | (y & 0xffffffffL);<newline46mondego>int x = (int)(l >> 32);<newline46mondego>int y = (int)l;<newline46mondego>"
"2708splitHere46","12772999splitHere46","largest"
"2709splitHere46","12772999splitHere46","smallest"
"2710splitHere46","12772999splitHere46","Math.max"
"2711splitHere46","12772999splitHere46","Math.min"
"2712splitHere46","12772999splitHere46","largest = Integer.MIN_VALUE;<newline46mondego>smallest = Integer.MAX_VALUE;<newline46mondego>"
"2713splitHere46","12772999splitHere46","Integer.MIN_VALUE"
"2714splitHere46","12772999splitHere46","largest = Math.max(x, largest);<newline46mondego>"
"2715splitHere46","12772999splitHere46","x"
"2716splitHere46","12773024splitHere46","Editor"
"2717splitHere46","12773024splitHere46","SharedPreferences getPrefs = PreferenceManager.getDefaultSharedPreferences(getBaseContext());<newline46mondego>boolean cmute = getPrefs.getBoolean(<doubleQuotes46>mute<doubleQuotes46>, defValue);<newline46mondego>Editor editor = getPrefs.edit();<newline46mondego>editor.putBoolean(<doubleQuotes46>mute<doubleQuotes46>, !cmute);<newline46mondego>editor.commit();<newline46mondego>"
"2718splitHere46","12773174splitHere46","if (matrix[0][1] == null)<newline46mondego>{<newline46mondego>    matrix[0][1] = 'n/a';<newline46mondego>}<newline46mondego>"
"2719splitHere46","12773183splitHere46","ant release install test"
"2720splitHere46","12773183splitHere46","test"
"2721splitHere46","12773183splitHere46","ant release install"
"2722splitHere46","12773183splitHere46","ant release install test"
"2723splitHere46","12773183splitHere46","Failure [INSTALL_PARSE_FAILED_INCONSISTENT_CERTIFICATES]<newline46mondego>"
"2724splitHere46","12773183splitHere46","adb uninstall com........tests"
"2725splitHere46","12773183splitHere46","key.store=release.keystore<newline46mondego>key.alias=mykey<newline46mondego>key.store.password=password<newline46mondego>key.alias.password=password<newline46mondego>"
"2726splitHere46","12773213splitHere46","public int maxLevel() {<newline46mondego>    int maxChildLevel = 0;<newline46mondego>    for (Node child : children) {<newline46mondego>        maxChildLevel = Math.max(maxChildLevel, child.maxLevel());<newline46mondego>    }<newline46mondego>    return maxChildLevel + 1;<newline46mondego>}<newline46mondego>"
"2727splitHere46","12773213splitHere46","maxLevel"
"2728splitHere46","12773213splitHere46","Node"
"2729splitHere46","12773213splitHere46","Node"
"2730splitHere46","12773250splitHere46","dateFormatter.format(now2) - dateFormatter.format(now1)"
"2731splitHere46","12773250splitHere46","now2.getTime() - now1.getTime()"
"2732splitHere46","12773433splitHere46","Room"
"2733splitHere46","12773433splitHere46","public Room(int guestsID)<newline46mondego>{<newline46mondego>    this();<newline46mondego>    try{<newline46mondego>        // This line looks wrong, shouldn't this be selecting from the<newline46mondego>        // room table??<newline46mondego>        // statement = con.prepareStatement(<doubleQuotes46>SELECT * FROM room WHERE guestID=?<doubleQuotes46>);<newline46mondego>        // instead???<newline46mondego>        statement = con.prepareStatement(<doubleQuotes46>SELECT * FROM guest WHERE guestID=?<doubleQuotes46>);<newline46mondego>        statement.setInt(1, guestID);<newline46mondego>        ResultSet rs = statement.executeQuery();<newline46mondego>        while(rs.next()){<newline46mondego>            this.guestID = rs.getInt(1);<newline46mondego>            this.roomType = rs.getString(2);<newline46mondego>            this.roomNo = rs.getInt(3);<newline46mondego>        }<newline46mondego>    }catch(Exception e){<newline46mondego>        System.out.print(e);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2734splitHere46","12773433splitHere46","while(rs.next()){<newline46mondego>    this.guestID = rs.getInt(<doubleQuotes46>guestID<doubleQuotes46>);<newline46mondego>    this.roomType = rs.getString(<doubleQuotes46>roomType<doubleQuotes46>);<newline46mondego>    this.roomNo = rs.getInt(<doubleQuotes46>roomNumber<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"2735splitHere46","12773433splitHere46","PreparedStatement statement = null;<newline46mondego>try{<newline46mondego>    statement = con.prepareStatement(<doubleQuotes46>SELECT * FROM guest WHERE guestID=?<doubleQuotes46>);<newline46mondego>    statement.setInt(1, guestID);<newline46mondego>    ResultSet rs = statement.executeQuery();<newline46mondego>    while(rs.next()){<newline46mondego>        this.guestID = rs.getInt(1);<newline46mondego>        this.roomType = rs.getString(2);<newline46mondego>        this.roomNo = rs.getInt(3);<newline46mondego>    }<newline46mondego>}catch(Exception e){<newline46mondego>    System.out.print(e);<newline46mondego>} finally {<newline46mondego>    try {<newline46mondego>        statement.close();<newline46mondego>    }catch(Exception e){<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2736splitHere46","12773433splitHere46","Connection"
"2737splitHere46","12773460splitHere46","ShapeListener test = new ShapeListener(); // First instance<newline46mondego>JButton button = new JButton(<doubleQuotes46>Hello<doubleQuotes46>);<newline46mondego>test.setBackground(Color.CYAN);<newline46mondego>button.addActionListener(new ShapeListener()); // Second instance...<newline46mondego>test.add(button);<newline46mondego>add(test);<newline46mondego>"
"2738splitHere46","12773460splitHere46","ShapeListener"
"2739splitHere46","12773460splitHere46","ShapeListener"
"2740splitHere46","12773460splitHere46","preferredSize"
"2741splitHere46","12773460splitHere46","ShapeListener"
"2742splitHere46","12773460splitHere46","BorderLayout"
"2743splitHere46","12773460splitHere46","public class ShapeGUI extends JFrame {<newline46mondego><newline46mondego>    public static final int WIDTH = 500;<newline46mondego>    public static final int HEIGHT = 500;<newline46mondego><newline46mondego>    public ShapeGUI() {<newline46mondego>        setSize(WIDTH, HEIGHT);<newline46mondego>        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        setLocationRelativeTo(null);<newline46mondego>        JMenuBar menu = new JMenuBar();<newline46mondego>        JMenu file = new JMenu(<doubleQuotes46>File<doubleQuotes46>);<newline46mondego>        menu.add(file);<newline46mondego>        JMenuItem save = new JMenuItem(<doubleQuotes46>Save Information<doubleQuotes46>);<newline46mondego>        JMenuItem exit = new JMenuItem(<doubleQuotes46>Exit<doubleQuotes46>);<newline46mondego>        file.add(save);<newline46mondego>        file.add(exit);<newline46mondego>        setJMenuBar(menu);<newline46mondego><newline46mondego>        setLayout(new BorderLayout());<newline46mondego><newline46mondego>        ShapeListener test = new ShapeListener();<newline46mondego>        JButton button = new JButton(<doubleQuotes46>Hello<doubleQuotes46>);<newline46mondego>        test.setBackground(Color.CYAN);<newline46mondego>        button.addActionListener(test);<newline46mondego>        test.add(button);<newline46mondego>        add(test);<newline46mondego><newline46mondego>        setVisible(true);<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        EventQueue.invokeLater(new Runnable() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                try {<newline46mondego>                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());<newline46mondego>                } catch (ClassNotFoundException ex) {<newline46mondego>                } catch (InstantiationException ex) {<newline46mondego>                } catch (IllegalAccessException ex) {<newline46mondego>                } catch (UnsupportedLookAndFeelException ex) {<newline46mondego>                }<newline46mondego><newline46mondego>                new ShapeGUI();<newline46mondego><newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>    public class ShapeListener extends JPanel implements ActionListener {<newline46mondego><newline46mondego>        Shape s = new Ellipse2D.Float(0, 0, 20, 20);<newline46mondego>        Shape a = new Rectangle2D.Float(0, 0, 20, 20);<newline46mondego><newline46mondego>        private Shape paintMe = a;<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void actionPerformed(ActionEvent e) {<newline46mondego>            paintMe = s;<newline46mondego>            repaint();<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void paintComponent(Graphics g) {<newline46mondego>            super.paintComponent(g);<newline46mondego><newline46mondego>            int x = (getWidth() - paintMe.getBounds().width) / 2;<newline46mondego>            int y = (getHeight() - paintMe.getBounds().height) / 2;<newline46mondego><newline46mondego>            Graphics2D g2d = (Graphics2D) g.create();<newline46mondego>            g2d.translate(x, y);<newline46mondego>            g2d.draw(paintMe);<newline46mondego>            g2d.dispose();<newline46mondego><newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2744splitHere46","12773522splitHere46","private static double promptUserDecimal(){<newline46mondego>    Scanner scan = new Scanner(System.in);<newline46mondego>    System.out.println(<doubleQuotes46>Enter a decimal<doubleQuotes46>);<newline46mondego>    try{<newline46mondego>        double input2 = Double.parseDouble(scan.nextLine());<newline46mondego>        return input2;<newline46mondego>    } catch(NumberFormatException e){<newline46mondego>        System.out.println(<doubleQuotes46>Sorry, you provided an invalid option, please try again.<doubleQuotes46>);<newline46mondego>        return promptUserDecimal();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2745splitHere46","12773572splitHere46","Scanner#next()"
"2746splitHere46","12773572splitHere46","Scanner.nextLine()"
"2747splitHere46","12773572splitHere46","name = scan.nextLine(); //Ex: John Smith<newline46mondego>"
"2748splitHere46","12773596splitHere46","JFormattedTextField"
"2749splitHere46","12773596splitHere46","PropertyChangeListener"
"2750splitHere46","12773596splitHere46","FocusListener"
"2751splitHere46","12773596splitHere46","BlankInputException"
"2752splitHere46","12773596splitHere46","ActionListener"
"2753splitHere46","12773596splitHere46","calculate_btn.addActionListener(new InvalidValueException());<newline46mondego>"
"2754splitHere46","12773621splitHere46","boolean contains(Object o)"
"2755splitHere46","12773700splitHere46","O(N)"
"2756splitHere46","12773785splitHere46","public void saveOfficer(Officers officer) {<newline46mondego>        logger.info(<doubleQuotes46>In saveOfficer<doubleQuotes46>);<newline46mondego>        SimpleDateFormat dateFormat = new SimpleDateFormat(<doubleQuotes46>yyyy-MM-dd<doubleQuotes46>);<newline46mondego><newline46mondego><newline46mondego>        try{<newline46mondego><newline46mondego>            logger.info(<doubleQuotes46>Values are <doubleQuotes46>+officer.getUserName()+<doubleQuotes46> <doubleQuotes46>+StringSecurity.EncryptString(officer.getPassword())+<doubleQuotes46> <doubleQuotes46>+officer.getfName()+<doubleQuotes46> <doubleQuotes46>+officer.getoName()+<doubleQuotes46> <doubleQuotes46>+officer.getDivisionNo()+<doubleQuotes46> <doubleQuotes46>+officer.getPositionId()+<doubleQuotes46> <doubleQuotes46>+officer.getEmailAdd()+<doubleQuotes46> <doubleQuotes46>+dateFormat.format(officer.getStartDate())+<doubleQuotes46> <doubleQuotes46>+dateFormat.format(officer.getEndDate())+<doubleQuotes46> <doubleQuotes46>+ officer.getGenderId()+<doubleQuotes46> <doubleQuotes46>+officer.getPhoneNo()+<doubleQuotes46> <doubleQuotes46>+dateFormat.format(officer.getDob()));<newline46mondego><newline46mondego>            int count = getJdbcTemplate().update(<doubleQuotes46>INSERT INTO crimetrack.tblofficers (userName,password, fName, lName, oName, divisionNo, positionId, emailAdd, startDate, endDate, genderId,phoneNo, dob,badgeNo) <doubleQuotes46>+<newline46mondego>                                                <doubleQuotes46>VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?)<doubleQuotes46><newline46mondego>                                                , new Object[]{officer.getUserName(),StringSecurity.EncryptString(officer.getPassword()),officer.getfName(),<newline46mondego>                                                 officer.getlName(),officer.getoName(),officer.getDivisionNo(),officer.getPositionId(),<newline46mondego>                                                 officer.getEmailAdd(),officer.getStartDate(),officer.getEndDate(),officer.getGenderId(),<newline46mondego>                                                 officer.getPhoneNo(),officer.getDob(),officer.getBadgeNo()});<newline46mondego><newline46mondego>        logger.info(count +<doubleQuotes46> Rows affected in tblOfficers<doubleQuotes46>);<newline46mondego><newline46mondego><newline46mondego><newline46mondego>        }catch(Exception e){<newline46mondego><newline46mondego>            logger.error(<doubleQuotes46>Could not save officer <doubleQuotes46>, e);<newline46mondego>        }       <newline46mondego>    }<newline46mondego>"
"2757splitHere46","12773807splitHere46","public class RandomCards {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        new RandomCards();<newline46mondego>    }<newline46mondego><newline46mondego>    public RandomCards() {<newline46mondego><newline46mondego>        EventQueue.invokeLater(new Runnable() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego><newline46mondego>                try {<newline46mondego>                    JFrame frame = new JFrame();<newline46mondego>                    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>                    frame.setLayout(new BorderLayout());<newline46mondego>                    frame.add(new RandomCardsPane());<newline46mondego>                    frame.pack();<newline46mondego>                    frame.setLocationRelativeTo(null);<newline46mondego>                    frame.setVisible(true);<newline46mondego>                } catch (Exception exp) {<newline46mondego>                    exp.printStackTrace();<newline46mondego>                }<newline46mondego><newline46mondego>            }<newline46mondego><newline46mondego>        });<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    public class RandomCardsPane extends JPanel {<newline46mondego><newline46mondego>        // A list is a collection of Image objects...<newline46mondego>        private List<Image> cardList;<newline46mondego>        private Image card = null;<newline46mondego><newline46mondego>        public RandomCardsPane() throws IOException {<newline46mondego><newline46mondego>            // My cards are stored in the default execution location of the program<newline46mondego>            // and are named <doubleQuotes46>Card_1.png<doubleQuotes46> through <doubleQuotes46>Card_51.png<doubleQuotes46>...<newline46mondego>            // You image loading process will be different, replace it here..<newline46mondego><newline46mondego>            // ArrayList is a dynamic list (meaning it can grow and shrink<newline46mondego>            // over the life time of the list) and is backed by an array<newline46mondego>            // which shouldn't concern you, the only thing you really need to<newline46mondego>            // know is that it has excellent random access...<newline46mondego>            cardList = new ArrayList<Image>(51);<newline46mondego>            for (int index = 0; index < 51; index++) {<newline46mondego>                cardList.add(ImageIO.read(new File(<doubleQuotes46>Card_<doubleQuotes46> + index + <doubleQuotes46>.png<doubleQuotes46>)));<newline46mondego>            }<newline46mondego><newline46mondego>            addMouseListener(new MouseAdapter() {<newline46mondego>                @Override<newline46mondego>                public void mouseClicked(MouseEvent e) {<newline46mondego>                    card = cardList.get(Math.min((int)Math.round(Math.random() * cardList.size()), 51));<newline46mondego>                    repaint();<newline46mondego>                }<newline46mondego>            });<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        protected void paintComponent(Graphics g) {<newline46mondego>            super.paintComponent(g);<newline46mondego><newline46mondego>            if (card != null) {<newline46mondego>                int x = (getWidth() - card.getWidth(this)) / 2;<newline46mondego>                int y = (getHeight() - card.getHeight(this)) / 2;<newline46mondego>                g.drawImage(card, x, y, this);<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public Dimension getPreferredSize() {<newline46mondego>            return new Dimension(225, 315);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2758splitHere46","12773807splitHere46","ImageIO"
"2759splitHere46","12773807splitHere46","Toolkit.getImage"
"2760splitHere46","12773807splitHere46","ImageIcon"
"2761splitHere46","12773887splitHere46","for (int i =0; i< data.length;i++)<newline46mondego>  {<newline46mondego>    if(data[i]%2==0)<newline46mondego>    {<newline46mondego>      filArray[i]= data[i] ; <newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2762splitHere46","12773941splitHere46","setEnabledCipherSuites"
"2763splitHere46","12773941splitHere46","SSLSocket"
"2764splitHere46","12773941splitHere46","SSLEngine"
"2765splitHere46","12773941splitHere46","sun.security.ssl.allowUnsafeRenegotiation"
"2766splitHere46","12773941splitHere46","SSLContext"
"2767splitHere46","12773941splitHere46","X509TrustManager"
"2768splitHere46","12774034splitHere46","case A: B: C: D: E:<newline46mondego>"
"2769splitHere46","12774034splitHere46","case A: case B: case C: case D: case E:<newline46mondego>"
"2770splitHere46","12774041splitHere46","ChessUI.setVisibile(false)"
"2771splitHere46","12774041splitHere46","Class"
"2772splitHere46","12774041splitHere46","Object"
"2773splitHere46","12774041splitHere46","Class"
"2774splitHere46","12774041splitHere46","Object"
"2775splitHere46","12774041splitHere46","Class"
"2776splitHere46","12774041splitHere46","Class"
"2777splitHere46","12774041splitHere46","Object"
"2778splitHere46","12774041splitHere46","setVisible(false)"
"2779splitHere46","12774041splitHere46","ChessUI"
"2780splitHere46","12774111splitHere46","activity.runOnUiThread(Runnable); <newline46mondego>"
"2781splitHere46","12774117splitHere46","public interface Dao<T> {<newline46mondego><newline46mondego>    // you can customise these signatures by your needs<newline46mondego>    // these are just my suggestions<newline46mondego><newline46mondego>    T get(long id);<newline46mondego><newline46mondego>    List<T> getAll();<newline46mondego><newline46mondego>    T add(T t);<newline46mondego><newline46mondego>    T update(T t);<newline46mondego><newline46mondego>    void delete(T t);<newline46mondego>}<newline46mondego><newline46mondego>public class UserDao implements Dao<User> {<newline46mondego><newline46mondego>    public User get(long id) { ... }<newline46mondego><newline46mondego>    public List<User> getAll() { ... }<newline46mondego><newline46mondego>    public User add(User user) { ... }<newline46mondego><newline46mondego>    public User update(User user) { ... }<newline46mondego><newline46mondego>    public void delete(User user) { ... }<newline46mondego>}<newline46mondego>"
"2782splitHere46","12774199splitHere46","put"
"2783splitHere46","12774199splitHere46","null"
"2784splitHere46","12774199splitHere46","static private Map<Object, String> enum_desc = new HashMap<Object, String>();<newline46mondego>"
"2785splitHere46","12774205splitHere46","if (fitValue >= -5000)<newline46mondego>  fitValue += 5000;<newline46mondego>else<newline46mondego>  fitvalue = 0;<newline46mondego>"
"2786splitHere46","12774205splitHere46","rouletteWheelSelection()"
"2787splitHere46","12774205splitHere46","getFitness()"
"2788splitHere46","12774205splitHere46","ScratchGA.functionTest(x1,x2)"
"2789splitHere46","12774205splitHere46","ScratchGA.getDesired()"
"2790splitHere46","12774269splitHere46","if(yourDialog.isVisible())"
"2791splitHere46","12774269splitHere46","/**<newline46mondego> * This class allows for some plain text (a note) to be placed into a ScrollPane inside<newline46mondego> * a dialog.  The dialog is non-modal.<newline46mondego> * @author L. LaSpina<newline46mondego> */<newline46mondego>public class NoteViewDialog extends javax.swing.JDialog {<newline46mondego><newline46mondego>    int returnValue;<newline46mondego>    public static final int OKPRESSED = 1;<newline46mondego>    public static final int CANCELPRESSED = 2;<newline46mondego><newline46mondego>    /** Creates new form NoteDialog */<newline46mondego>    public NoteViewDialog(java.awt.Frame parent, String note) {<newline46mondego>        super(parent, false);<newline46mondego>        initComponents();<newline46mondego>        this.setTitle(<doubleQuotes46>Faculty Assignment Summary<doubleQuotes46>);<newline46mondego>        setLabel(<doubleQuotes46>Error List<doubleQuotes46>);<newline46mondego>        setNote(note);<newline46mondego>        setSize(500,300);       <newline46mondego>    }<newline46mondego><newline46mondego>    public void setNote(String s) {<newline46mondego>        textArea.setText(s);<newline46mondego>    }<newline46mondego>    public String getNote() {<newline46mondego>        return textArea.getText();<newline46mondego>    }<newline46mondego><newline46mondego>    public void setLabel(String s) {<newline46mondego>        headingLabel.setText(s);<newline46mondego>    }<newline46mondego><newline46mondego>    public int getReturnValue() {<newline46mondego>        return returnValue;<newline46mondego>    }<newline46mondego><newline46mondego>    /** This method is called from within the constructor to<newline46mondego>     * initialize the form.<newline46mondego>     * WARNING: Do NOT modify this code. The content of this method is<newline46mondego>     * always regenerated by the Form Editor.<newline46mondego>     */<newline46mondego>    @SuppressWarnings(<doubleQuotes46>unchecked<doubleQuotes46>)<newline46mondego>    // <editor-fold defaultstate=<doubleQuotes46>collapsed<doubleQuotes46> desc=<doubleQuotes46>Generated Code<doubleQuotes46>>                          <newline46mondego>    private void initComponents() {<newline46mondego><newline46mondego>        scrollPane = new javax.swing.JScrollPane();<newline46mondego>        textArea = new javax.swing.JTextArea();<newline46mondego>        buttonPanel = new javax.swing.JPanel();<newline46mondego>        okButton = new javax.swing.JButton();<newline46mondego>        headingLabel = new javax.swing.JLabel();<newline46mondego><newline46mondego>        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);<newline46mondego><newline46mondego>        textArea.setColumns(20);<newline46mondego>        textArea.setLineWrap(true);<newline46mondego>        textArea.setRows(5);<newline46mondego>        textArea.setWrapStyleWord(true);<newline46mondego>        scrollPane.setViewportView(textArea);<newline46mondego><newline46mondego>        getContentPane().add(scrollPane, java.awt.BorderLayout.CENTER);<newline46mondego><newline46mondego>        okButton.setText(<doubleQuotes46>Close<doubleQuotes46>);<newline46mondego>        okButton.addActionListener(new java.awt.event.ActionListener() {<newline46mondego>            public void actionPerformed(java.awt.event.ActionEvent evt) {<newline46mondego>                okButtonActionPerformed(evt);<newline46mondego>            }<newline46mondego>        });<newline46mondego>        buttonPanel.add(okButton);<newline46mondego><newline46mondego>        getContentPane().add(buttonPanel, java.awt.BorderLayout.PAGE_END);<newline46mondego><newline46mondego>        headingLabel.setText(<doubleQuotes46>Error Report<doubleQuotes46>);<newline46mondego>        getContentPane().add(headingLabel, java.awt.BorderLayout.PAGE_START);<newline46mondego><newline46mondego>        pack();<newline46mondego>    }// </editor-fold>                        <newline46mondego><newline46mondego>    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {                                         <newline46mondego>        this.dispose();<newline46mondego>    }                                        <newline46mondego><newline46mondego>    // Variables declaration - do not modify                     <newline46mondego>    private javax.swing.JPanel buttonPanel;<newline46mondego>    private javax.swing.JLabel headingLabel;<newline46mondego>    private javax.swing.JButton okButton;<newline46mondego>    private javax.swing.JScrollPane scrollPane;<newline46mondego>    private javax.swing.JTextArea textArea;<newline46mondego>    // End of variables declaration                   <newline46mondego>}<newline46mondego>"
"2792splitHere46","12774473splitHere46","private static final long serialVersionUID = 1L;"
"2793splitHere46","12774643splitHere46","native"
"2794splitHere46","12774643splitHere46","native void methodname(_arguments go here_);"
"2795splitHere46","12774728splitHere46","Color"
"2796splitHere46","12774728splitHere46","equals()"
"2797splitHere46","12774728splitHere46","hashcode()"
"2798splitHere46","12774728splitHere46","collections"
"2799splitHere46","12774728splitHere46","equals()"
"2800splitHere46","12774728splitHere46","hashcode()"
"2801splitHere46","12774761splitHere46","1. Create POJO class<newline46mondego>   2. Create entries in mapping config file<newline46mondego>   3. Get Hibernate Session through Hibernate Session Factory<newline46mondego>   4. Use session API methods to perform CRUD operation<newline46mondego>"
"2802splitHere46","12774761splitHere46","Annotation"
"2803splitHere46","12774770splitHere46","Rectangle boxes[] = new Rectangle[maxnum];<newline46mondego>int boxnum = 0;<newline46mondego>"
"2804splitHere46","12774770splitHere46","boxes[boxnum] = new Rectangle[e.getX(), e.getY(), sizeX, sizeY);<newline46mondego>boxnum = boxnum + 1;<newline46mondego>"
"2805splitHere46","12774770splitHere46","counter = 0;<newline46mondego>do<newline46mondego>{<newline46mondego>   g.drawRect(boxes[counter].x, boxes[counter].y, sizeX, sizeY);<newline46mondego>   counter = counter + 1;<newline46mondego>} while (counter < maxnum);<newline46mondego>"
"2806splitHere46","12774830splitHere46","List"
"2807splitHere46","12774830splitHere46","Rectangle"
"2808splitHere46","12774830splitHere46","render()"
"2809splitHere46","12774830splitHere46","List"
"2810splitHere46","12774830splitHere46","Rectangle"
"2811splitHere46","12775006splitHere46","class KshortestPath"
"2812splitHere46","12775006splitHere46","k-shortest paths"
"2813splitHere46","12775006splitHere46","kBestShortestPaths"
"2814splitHere46","12775113splitHere46","class GrandFather {<newline46mondego>  GrandFather(String name, boolean configure) {<newline46mondego>    // some init<newline46mondego>    if (configure) {<newline46mondego>      configure(name);<newline46mondego>    }<newline46mondego>  }<newline46mondego><newline46mondego>  GrandFather(String name) {<newline46mondego>    this(name, true);<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>class Father {<newline46mondego>  Father(String name, boolean configure) {<newline46mondego>    super(name, false);<newline46mondego><newline46mondego>    // some init<newline46mondego>    if (configure) {<newline46mondego>      configure(name);<newline46mondego>    }<newline46mondego>  }<newline46mondego><newline46mondego>  Father(String name) {<newline46mondego>    this(name, true);<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>class Son {<newline46mondego>  Son(String name, boolean configure) {<newline46mondego>    super(name, false);<newline46mondego><newline46mondego>    // some init<newline46mondego>    if (configure) {<newline46mondego>      configure(name);<newline46mondego>    }<newline46mondego>  }<newline46mondego><newline46mondego>  Son(String name) {<newline46mondego>    this(name, true);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"2815splitHere46","12775166splitHere46","public void mousePressed(int button, int x, int y) {<newline46mondego>    pressedX = x;<newline46mondego>    pressedY = y;<newline46mondego>    num++;<newline46mondego>    point[num] = new Point(pressedX, pressedY);<newline46mondego>}<newline46mondego>"
"2816splitHere46","12775166splitHere46","render"
"2817splitHere46","12775166splitHere46","public void render(GameContainer container, StateBasedGame game, Graphics g) throws SlickException {<newline46mondego>    for (Point p : point) {<newline46mondego>        if (p != null) {<newline46mondego>            m.drawParticle(p.x, p.y);<newline46mondego>        }<newline46mondego>    }<newline46mondego>    m.drawParticle(pressedX, pressedY);<newline46mondego>}<newline46mondego>"
"2818splitHere46","12775166splitHere46","Graphics"
"2819splitHere46","12775166splitHere46","render"
"2820splitHere46","12775205splitHere46","isBar"
"2821splitHere46","12775205splitHere46","boolean"
"2822splitHere46","12775468splitHere46","<doubleQuotes46>[a-zA-z\\s]*<doubleQuotes46><newline46mondego>"
"2823splitHere46","12775468splitHere46","[A-z]"
"2824splitHere46","12775468splitHere46","["
"2825splitHere46","12775468splitHere46","]"
"2826splitHere46","12775468splitHere46","^"
"2827splitHere46","12775468splitHere46","_"
"2828splitHere46","12775468splitHere46","Z"
"2829splitHere46","12775468splitHere46","a"
"2830splitHere46","12775468splitHere46","\s"
"2831splitHere46","12775468splitHere46","<doubleQuotes46>[a-zA-Z ]*<doubleQuotes46><newline46mondego>"
"2832splitHere46","12775468splitHere46","^"
"2833splitHere46","12775468splitHere46","$"
"2834splitHere46","12775468splitHere46","matches()"
"2835splitHere46","12775547splitHere46","public void render(GameContainer container, StateBasedGame game, Graphics g) throws SlickException {<newline46mondego>    for (int index = 0; index < point.length; index++) {<newline46mondego>        Point p = point[index];<newline46mondego>        if (p != null) {<newline46mondego>            p.y++;<newline46mondego>            if (p.y > height) { // You'll need to define height...<newline46mondego>                point[index] = null; // Or do something else with it??<newline46mondego>            } else {<newline46mondego>                m.drawParticle(p.x, p.y);<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>    g.drawString(<doubleQuotes46>Particle Test<doubleQuotes46>, 680, 0);<newline46mondego>    g.drawString(<doubleQuotes46>Build: <doubleQuotes46> + Build, 680, 15);<newline46mondego>    g.drawString(<doubleQuotes46>Pixels: <doubleQuotes46> + num, 10, 25);<newline46mondego>}<newline46mondego>"
"2836splitHere46","12775547splitHere46","if (p != null) {<newline46mondego>            if (p.y >= height) { // You'll need to define height...<newline46mondego>                // Do something here<newline46mondego>            } else {<newline46mondego>                p.y++;<newline46mondego>                m.drawParticle(p.x, p.y);<newline46mondego>            }<newline46mondego>        }<newline46mondego>"
"2837splitHere46","12775600splitHere46","sun.*"
"2838splitHere46","12775611splitHere46","String date = new SimpleDateFormat(<doubleQuotes46>MM/dd/yy  HH:mm<doubleQuotes46>).format(new Date());<newline46mondego><newline46mondego>timeAndDate = new JFormattedTextField(date);<newline46mondego>"
"2839splitHere46","12775614splitHere46","myMark"
"2840splitHere46","12775614splitHere46","while"
"2841splitHere46","12775614splitHere46","Scanner"
"2842splitHere46","12775614splitHere46","public class Demo {<newline46mondego>    private Scanner scanner = new Scanner(System.in);<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego><newline46mondego>        int myMarks = 0;<newline46mondego>        while (myMarks >= 0 && myMark < 100) {<newline46mondego>            // Rest is all same<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2843splitHere46","12775693splitHere46","<doubleQuotes46>org.apache.mahout<doubleQuotes46> % <doubleQuotes46>mahout-core<doubleQuotes46> % <doubleQuotes46>0.7<doubleQuotes46> excludeAll(ExclusionRule(organization = <doubleQuotes46>org.slf4j<doubleQuotes46>))<newline46mondego>"
"2844splitHere46","12775728splitHere46","public interface LinkedListDS<E> implements ListADT<E> {<newline46mondego>"
"2845splitHere46","12775728splitHere46","methods"
"2846splitHere46","12775728splitHere46","constructors"
"2847splitHere46","12775728splitHere46","public class LinkedListDS<E> implements ListADT<E> {<newline46mondego>"
"2848splitHere46","12775728splitHere46","iterator"
"2849splitHere46","12775728splitHere46","public iterator<E> iterator() {<newline46mondego>        return new iterator;<newline46mondego>"
"2850splitHere46","12775751splitHere46","System.out.println(choose(N, K).intValue());<newline46mondego>"
"2851splitHere46","12775751splitHere46","System.out.println(choose(N, K).toString());<newline46mondego>"
"2852splitHere46","12775793splitHere46","[+++[----]+]"
"2853splitHere46","12775797splitHere46","Comparable<Integer>"
"2854splitHere46","12775797splitHere46","Comparable"
"2855splitHere46","12775797splitHere46","public class List<Integer> implements Comparable<newline46mondego>"
"2856splitHere46","12775797splitHere46","Integer"
"2857splitHere46","12775797splitHere46","java.lang.Integer"
"2858splitHere46","12775797splitHere46","//List is kind of ambiguous with java.util.List<newline46mondego>public class MyList<E> implements Comparable<Integer> {<newline46mondego>"
"2859splitHere46","12775797splitHere46","MyList"
"2860splitHere46","12775797splitHere46","Comparable"
"2861splitHere46","12775797splitHere46","@Override<newline46mondego>public int compareTo(Object itemToCompare) {<newline46mondego>"
"2862splitHere46","12775797splitHere46","Comparable<Integer>"
"2863splitHere46","12775797splitHere46","@Override<newline46mondego>public int compareTo(Integer itemToCompare)<newline46mondego>"
"2864splitHere46","12775797splitHere46","Object"
"2865splitHere46","12775797splitHere46","Integer"
"2866splitHere46","12775797splitHere46","List"
"2867splitHere46","12775797splitHere46","Comparable"
"2868splitHere46","12775797splitHere46","List"
"2869splitHere46","12775797splitHere46","public class MyList<E> implements Comparable<MyList> {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public int compareTo(MyList other) {<newline46mondego>        //compare and return result<newline46mondego>    }<newline46mondego>"
"2870splitHere46","12775797splitHere46","Integer"
"2871splitHere46","12775797splitHere46","Integer"
"2872splitHere46","12775797splitHere46","Integer"
"2873splitHere46","12775797splitHere46","Comparable"
"2874splitHere46","12775797splitHere46","((Comparable) removedItemFromList1).compareTo( removedItemFromList2);<newline46mondego>"
"2875splitHere46","12775797splitHere46","removedItemFromList1.compareTo(removedItemFromList2);<newline46mondego>"
"2876splitHere46","12775797splitHere46","Comparable"
"2877splitHere46","12775797splitHere46","compareTo"
"2878splitHere46","12775904splitHere46","#{list users, as:'u'}<newline46mondego>  <input type=<doubleQuotes46>hidden<doubleQuotes46> name=<doubleQuotes46>users[$[u_index -1].id<doubleQuotes46> value=<doubleQuotes46>${u.id}<doubleQuotes46>><newline46mondego>#{/list}<newline46mondego>"
"2879splitHere46","12775904splitHere46","public static void save(List<User> users) {<newline46mondego>}<newline46mondego>"
"2880splitHere46","12775911splitHere46","if ( data[ leftIndex ] <= data[ rightIndex ] )<newline46mondego>"
"2881splitHere46","12775911splitHere46","if ( cmp.compare(data[ leftIndex ], date[ rightIndex ]) <= 0 )<newline46mondego>"
"2882splitHere46","12775911splitHere46","MergeSort<T>"
"2883splitHere46","12775911splitHere46","T[]"
"2884splitHere46","12775911splitHere46","List<? extends T>"
"2885splitHere46","12775911splitHere46","Comparator<? super T>"
"2886splitHere46","12775911splitHere46","Arrays.sort"
"2887splitHere46","12775911splitHere46","sortNativeJava"
"2888splitHere46","12776038splitHere46","while(scanner.hasNextLine() && !input.equalsIgnoreCase(<doubleQuotes46>stop<doubleQuotes46>)) {<newline46mondego>    input = scanner.nextLine();<newline46mondego>}<newline46mondego>"
"2889splitHere46","12776184splitHere46","public class MyDefaultTableModel extends DefaultTableModel {<newline46mondego>    private boolean[][] editable_cells; // 2d array to represent rows and columns<newline46mondego>    private MyDefaultTableModel(int rows, int cols) { // constructor<newline46mondego>        super(rows, cols);<newline46mondego>        this.editable_cells = new boolean[rows][cols];<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean isCellEditable(int row, int column) { // custom isCellEditable function<newline46mondego>       return this.editable_cells[row][col];<newline46mondego>    }<newline46mondego>    public void setCellEditable(int row, int col, boolean value) {<newline46mondego>        this.editable_cell[row][col] = value; // set cell true/false<newline46mondego>        this.fireTableCellUpdated(row, int col);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2890splitHere46","12776184splitHere46","... stuff<newline46mondego>DefaultTableModel myModel = new MyDefaultTableModel(x, y); <newline46mondego>table.setModel(myModel);<newline46mondego>... stuff<newline46mondego>"
"2891splitHere46","12776350splitHere46","&&"
"2892splitHere46","12776610splitHere46","Gson gson = new Gson();<newline46mondego>String json = gson.toJson(names);<newline46mondego>HttpGet httpget = new HttpGet(<doubleQuotes46>http://localhost:9080/HttpClientPractice/FirstServlet?obj=<doubleQuotes46>+json);<newline46mondego>"
"2893splitHere46","12776610splitHere46","Gson gson = new Gson();<newline46mondego>Names names = fromJson(json, Names.class);<newline46mondego>"
"2894splitHere46","12776830splitHere46","/**<newline46mondego> * This is a Javadoc example. It explains the working of Javadoc comments.<newline46mondego> * <newline46mondego> * @param String text<newline46mondego> *  The above line is used to document what the parameters<newline46mondego> *  that are passed to the method do.<newline46mondego> *  Each parameter gets its own @param block.<newline46mondego> *  <newline46mondego> * @return void<newline46mondego> *  This explains what the output / result of the method is. In this case, it's void.<newline46mondego> */<newline46mondego>"
"2895splitHere46","12776830splitHere46","//commentcommentcomment"
"2896splitHere46","12776830splitHere46","/* comment comment<newline46mondego>    comment comment comment<newline46mondego>    */"
"2897splitHere46","12776840splitHere46","import javax.xml.datatype.Duration;<newline46mondego>import javax.xml.datatype.DatatypeFactory<newline46mondego>...<newline46mondego>Duration d = DatatypeFactory.newInstance().newDuration(time_stamp);<newline46mondego>System.out.println(d.getHours() + <doubleQuotes46>h:<doubleQuotes46> + d.getMinutes() + <doubleQuotes46>m: <doubleQuotes46> + d.getSeconds() + <doubleQuotes46>s<doubleQuotes46>);<newline46mondego>"
"2898splitHere46","12776850splitHere46","public class Test {<newline46mondego><newline46mondego>public static void main(String[] args) {<newline46mondego>    Calendar cal = GregorianCalendar.getInstance();<newline46mondego>    System.out.println(<doubleQuotes46>Minutes : <doubleQuotes46>+ cal.get(Calendar.MINUTE));<newline46mondego>    System.out.println(<doubleQuotes46>Seconds :<doubleQuotes46> + cal.get(Calendar.SECOND));<newline46mondego>    cal.add(Calendar.SECOND, 50);<newline46mondego>    System.out.println(<doubleQuotes46>Minutes : <doubleQuotes46>+ cal.get(Calendar.MINUTE));<newline46mondego>    System.out.println(<doubleQuotes46>Seconds :<doubleQuotes46> + cal.get(Calendar.SECOND));<newline46mondego>}<newline46mondego>"
"2899splitHere46","12776850splitHere46","Minutes : 11<newline46mondego>Seconds :33<newline46mondego>Minutes : 12<newline46mondego>Seconds :23<newline46mondego>"
"2900splitHere46","12776901splitHere46","java.util.Set"
"2901splitHere46","12776901splitHere46","equals"
"2902splitHere46","12776901splitHere46","hashCode"
"2903splitHere46","12776901splitHere46","Set"
"2904splitHere46","12776901splitHere46","</p><newline46mondego><newline46mondego><pre><code>@Override<newline46mondego>public int hashCode() {<newline46mondego>  final int prime = 31;<newline46mondego>  int result = 1;<newline46mondego>  result = prime * result + ((id == null) ? 0 : id.hashCode());<newline46mondego>  return result;<newline46mondego>}<newline46mondego><newline46mondego>@Override<newline46mondego>public boolean equals(Object obj) {<newline46mondego>    if (this == obj)<newline46mondego>      return true;<newline46mondego>    if (obj == null)<newline46mondego>      return false;<newline46mondego>    if (getClass() != obj.getClass())<newline46mondego>      return false;<newline46mondego>    Employee other = (Employee) obj;<newline46mondego>    if (id == null) {<newline46mondego>      if (other.id != null)<newline46mondego>        return false;<newline46mondego>    } else if (!id.equals(other.id))<newline46mondego>      return false;<newline46mondego>    return true;<newline46mondego>  }<newline46mondego>"
"2905splitHere46","12776966splitHere46","BarCodeBuilder"
"2906splitHere46","12776966splitHere46","Barcode"
"2907splitHere46","12776966splitHere46","BarCodeBuilder b=new BarCodeBuilder();<newline46mondego>  b.setCodeText(<doubleQuotes46>abc123<doubleQuotes46>);<newline46mondego>  b.setSymbologyType(Symbology.Codabar);<newline46mondego>  b.setResolution(new Resolution(50f,40f,ResolutionMode.Graphics));<newline46mondego>"
"2908splitHere46","12777217splitHere46","-Djavax.net.ssl.trustStore=<doubleQuotes46><path to truststore><doubleQuotes46><newline46mondego>-Djavax.net.ssl.trustStorePassword=password<newline46mondego>"
"2909splitHere46","12777315splitHere46","messages.xy"
"2910splitHere46","12777329splitHere46","test.setStyle(<doubleQuotes46>build.css<doubleQuotes46>);<newline46mondego>"
"2911splitHere46","12777329splitHere46","scene.getStylesheets().add(getClass().getResource(<doubleQuotes46>build.css<doubleQuotes46>).toExternalForm());<newline46mondego>"
"2912splitHere46","12777329splitHere46","test.setId(<doubleQuotes46>myTestId<doubleQuotes46>);<newline46mondego>"
"2913splitHere46","12777329splitHere46","@FXML private AnchorPane anchorPane; // where fx:id = anchorPane<newline46mondego>anchorPane.getChildren().addAll(test, test2);<newline46mondego>"
"2914splitHere46","12777538splitHere46","ClassLoader parent = Thread.currentThread().getContextClassLoader();<newline46mondego>// or<newline46mondego>// ClassLoader parent = getClass().getClassLoader();<newline46mondego>ClassLoader loader = new URLClassLoader(new URL[] { new File(<doubleQuotes46>C:/Plugin/Directory/<doubleQuotes46>).toURI().toURL() }, parent);<newline46mondego>"
"2915splitHere46","12777572splitHere46","picketbox"
"2916splitHere46","12777572splitHere46","my_picketbox"
"2917splitHere46","12777572splitHere46","<dependency><newline46mondego>    <groupId>...</groupId><newline46mondego>    <artifactId>my_picketbox</artifactId><newline46mondego>    <version>...</version><newline46mondego></dependency><newline46mondego>"
"2918splitHere46","12777572splitHere46","mvn install"
"2919splitHere46","12777892splitHere46","Map"
"2920splitHere46","12777892splitHere46","Set"
"2921splitHere46","12777892splitHere46","Map<String, Set<String>> givenMap = new HashMap<String, Set<String>>();<newline46mondego>    Map<String, List<String>> newMap = new HashMap<String, List<String>>();<newline46mondego><newline46mondego>    Set<String> newSet = new HashSet<String>();<newline46mondego>    newSet.add(<doubleQuotes46>rohit<doubleQuotes46>);<newline46mondego><newline46mondego>    givenMap.put(<doubleQuotes46>a<doubleQuotes46>, newSet);<newline46mondego>    givenMap.put(<doubleQuotes46>b<doubleQuotes46>, newSet);<newline46mondego>    givenMap.put(<doubleQuotes46>c<doubleQuotes46>, newSet);<newline46mondego><newline46mondego>    for (String str: givenMap.keySet()) {<newline46mondego>        newMap.put(str, new ArrayList<String>(givenMap.get(str)));<newline46mondego>    }<newline46mondego><newline46mondego>    for(String str:newMap.keySet()) {<newline46mondego>        System.out.println(newMap.get(str));<newline46mondego>    }<newline46mondego>"
"2922splitHere46","12777892splitHere46","public static <K, V> void changeSetToList (Map<K, Set<V>> givenMap, <newline46mondego>        Map<K, List<V>> newMap) {<newline46mondego><newline46mondego>    for (K str: givenMap.keySet()) {<newline46mondego>        newMap.put(str, new ArrayList<V>(givenMap.get(str)));<newline46mondego>    }<newline46mondego><newline46mondego>    for(K str:newMap.keySet()) {<newline46mondego>        System.out.println(newMap.get(str));<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2923splitHere46","12778022splitHere46","private Future future = null;<newline46mondego>private long periodMS = 0;<newline46mondego><newline46mondego>public void setPeriod(long periodMS) {<newline46mondego>   if (future != null && this.periodMS == periodMS) return;<newline46mondego>   if (future != null) future.cancel(false);<newline46mondego>   scheduledExecutorService.scheduleWithFixedDelay(task, periodMS/2, periodMS, TimeUnit.MILLI_SECONDS);<newline46mondego>}<newline46mondego>"
"2924splitHere46","12778022splitHere46","private long periodMS;<newline46mondego><newline46mondego>public void start() {<newline46mondego>  scheduledExecutorService.schedule(this, periodMS, TimeUnit.MILLI_SECONDS);<newline46mondego>}<newline46mondego><newline46mondego>public void run() {<newline46mondego>   try {<newline46mondego>       task.run();<newline46mondego>   } catch(Exception e) {<newline46mondego>       // handle e<newline46mondego>   }<newline46mondego>   start();<newline46mondego>}<newline46mondego>"
"2925splitHere46","12778096splitHere46","AK.*"
"2926splitHere46","12778096splitHere46","AK"
"2927splitHere46","12778096splitHere46","join"
"2928splitHere46","12778096splitHere46","where"
"2929splitHere46","12778096splitHere46","on"
"2930splitHere46","12778096splitHere46","NativeQuery"
"2931splitHere46","12778096splitHere46","select AK from AssesmentActivity AA join AssesmentKey AK where AA.assesmentKey = AK ...<newline46mondego>"
"2932splitHere46","12778127splitHere46","TableModel"
"2933splitHere46","12778127splitHere46","JTable"
"2934splitHere46","12778127splitHere46","convertRowIndexToView"
"2935splitHere46","12778127splitHere46","setRowSelectionInterval"
"2936splitHere46","12778127splitHere46","JTable"
"2937splitHere46","12778127splitHere46","JXTable"
"2938splitHere46","12778127splitHere46","JXTable"
"2939splitHere46","12778127splitHere46","JXSearchPanel"
"2940splitHere46","12778127splitHere46","JXSearchField"
"2941splitHere46","12778167splitHere46","String testArray[] = testString.split(<doubleQuotes46>\\s|(?<=\\()|(?=\\))<doubleQuotes46>);<newline46mondego>"
"2942splitHere46","12778302splitHere46","TableColumn#getWidth()"
"2943splitHere46","12778302splitHere46","for(int col = 0; col < tblMainData.getColumnCount(); col++)<newline46mondego>{<newline46mondego>    if(tblMainData.getColumn(col).getWidth() == 0)<newline46mondego>    {<newline46mondego>        // do something<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2944splitHere46","12778429splitHere46","Runtime rt = Runtime.getRuntime();<newline46mondego>    Process proc;<newline46mondego>    int exitVal = -1;<newline46mondego>    try {<newline46mondego>        proc =  rt.exec(<doubleQuotes46>chmod 777 <doubleQuotes46>+file);<newline46mondego>        exitVal = proc.waitFor();<newline46mondego>    } catch (Exception e) {}<newline46mondego>"
"2945splitHere46","12778494splitHere46","StackLayout"
"2946splitHere46","12778706splitHere46","telnet imap.gmail.com {port number}<newline46mondego>"
"2947splitHere46","12778772splitHere46","UDP"
"2948splitHere46","12778892splitHere46","jvisualvm -J-Dnetbeans.logger.console=true<newline46mondego>"
"2949splitHere46","12779024splitHere46","String.replaceAll()"
"2950splitHere46","12779024splitHere46","String part = x.replaceAll(<doubleQuotes46>.*\\((.*?)\\).*<doubleQuotes46>, <doubleQuotes46>$1<doubleQuotes46>); <newline46mondego>"
"2951splitHere46","12779024splitHere46","public static void main(String[] args) {<newline46mondego>    String x = <doubleQuotes46>xxxxxx xxxxxx xxxxxx (xxx)<doubleQuotes46>;<newline46mondego>    String part = x.replaceAll(<doubleQuotes46>.*\\((.*)\\).*<doubleQuotes46>, <doubleQuotes46>$1<doubleQuotes46>);<newline46mondego>    System.out.println(part);<newline46mondego>}<newline46mondego>"
"2952splitHere46","12779024splitHere46","xxx    <newline46mondego>"
"2953splitHere46","12779050splitHere46","@Grab( 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.0.5' )<newline46mondego>import com.fasterxml.jackson.dataformat.xml.XmlMapper<newline46mondego>import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlText<newline46mondego><newline46mondego>class Entry {<newline46mondego>  static class Title {<newline46mondego>    public String type<newline46mondego><newline46mondego>    @JacksonXmlText<newline46mondego>    public String value<newline46mondego><newline46mondego>    public String toString() {<newline46mondego>      <doubleQuotes46>$type -> $value<doubleQuotes46><newline46mondego>    }<newline46mondego>  }<newline46mondego><newline46mondego>  public Title title<newline46mondego><newline46mondego>  public String toString() {<newline46mondego>    <doubleQuotes46>Entry [$title]<doubleQuotes46><newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>def xml = '''<entry><newline46mondego>            |    <title type=<doubleQuotes46>text<doubleQuotes46>>W411638</title><newline46mondego>            |</entry>'''.stripMargin()<newline46mondego><newline46mondego>def xmlMapper = new XmlMapper()<newline46mondego>Entry pojo = xmlMapper.readValue( xml, Entry )<newline46mondego><newline46mondego>println pojo // prints 'Entry [text -> W411638]'<newline46mondego>"
"2954splitHere46","12779070splitHere46","JTable"
"2955splitHere46","12779070splitHere46","public class TestLayout {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        EventQueue.invokeLater(new Runnable() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                try {<newline46mondego>                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());<newline46mondego>                } catch (ClassNotFoundException ex) {<newline46mondego>                } catch (InstantiationException ex) {<newline46mondego>                } catch (IllegalAccessException ex) {<newline46mondego>                } catch (UnsupportedLookAndFeelException ex) {<newline46mondego>                }<newline46mondego><newline46mondego>                JFrame frame = new JFrame();<newline46mondego>                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>                frame.setLayout(new BorderLayout());<newline46mondego>                frame.add(new FormPane());<newline46mondego>                frame.setSize(600, 300);<newline46mondego>                frame.setLocationRelativeTo(null);<newline46mondego>                frame.setVisible(true);<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>    protected static class FormPane extends JPanel {<newline46mondego><newline46mondego>        public FormPane() {<newline46mondego>            setLayout(new GridBagLayout());<newline46mondego>            GridBagConstraints gbc = new GridBagConstraints();<newline46mondego>            gbc.gridx = 0;<newline46mondego>            gbc.gridy = 0;<newline46mondego>            gbc.gridwidth = GridBagConstraints.REMAINDER;<newline46mondego>            gbc.anchor = GridBagConstraints.WEST;<newline46mondego><newline46mondego>            add(new JLabel(<doubleQuotes46>Geben sie bitte die Kriterien für die Suche an:<doubleQuotes46>), gbc);<newline46mondego><newline46mondego>            gbc.gridwidth = 1;<newline46mondego>            gbc.gridy++;<newline46mondego>            add(new JLabel(<doubleQuotes46>Name:<doubleQuotes46>), gbc);<newline46mondego>            gbc.gridy++;<newline46mondego>            add(new JLabel(<doubleQuotes46>Maximaler Preis:<doubleQuotes46>), gbc);<newline46mondego>            gbc.gridy++;<newline46mondego>            add(new JLabel(<doubleQuotes46>Alter des Kunden:<doubleQuotes46>), gbc);<newline46mondego>            gbc.gridy++;<newline46mondego>            add(new JLabel(<doubleQuotes46>Kategorie:<doubleQuotes46>), gbc);<newline46mondego><newline46mondego>            gbc.gridx++;<newline46mondego>            gbc.gridy = 1;<newline46mondego>            add(new JTextField(10), gbc);<newline46mondego>            gbc.gridy++;<newline46mondego>            add(new JTextField(10), gbc);<newline46mondego>            gbc.gridy++;<newline46mondego>            add(new JTextField(10), gbc);<newline46mondego>            gbc.gridy++;<newline46mondego>            add(new JComboBox(), gbc);<newline46mondego>            gbc.gridy++;<newline46mondego>            add(new JButton(<doubleQuotes46>Click me<doubleQuotes46>), gbc);<newline46mondego><newline46mondego>            gbc.gridy++;<newline46mondego>            gbc.gridx = 0;<newline46mondego>            gbc.gridwidth = GridBagConstraints.REMAINDER;<newline46mondego>            gbc.fill = GridBagConstraints.HORIZONTAL;<newline46mondego><newline46mondego>            DefaultTableModel model = new DefaultTableModel(<newline46mondego>                            new Object[][] {<newline46mondego>                                {<doubleQuotes46>id<doubleQuotes46>, <doubleQuotes46>Name<doubleQuotes46>, <doubleQuotes46>Price<doubleQuotes46>, <doubleQuotes46>Something<doubleQuotes46>, <doubleQuotes46>Something<doubleQuotes46>, <doubleQuotes46>Something<doubleQuotes46>},<newline46mondego>                                {<doubleQuotes46>NA<doubleQuotes46>, <doubleQuotes46>NA<doubleQuotes46>, <doubleQuotes46>NA<doubleQuotes46>, <doubleQuotes46>NA<doubleQuotes46>, <doubleQuotes46>NA<doubleQuotes46>, <doubleQuotes46>NA<doubleQuotes46>}<newline46mondego>                            },<newline46mondego>                            new Object[]{<doubleQuotes46>id<doubleQuotes46>, <doubleQuotes46>Name<doubleQuotes46>, <doubleQuotes46>Price<doubleQuotes46>, <doubleQuotes46>Something<doubleQuotes46>, <doubleQuotes46>Something<doubleQuotes46>, <doubleQuotes46>Something<doubleQuotes46>});<newline46mondego><newline46mondego><newline46mondego>            add(new JTable(model), gbc);<newline46mondego><newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2956splitHere46","12779076splitHere46","Manifest-Version: 1.0<newline46mondego>Main-Class: Test<newline46mondego>SplashScreen-Image: filename.gif<newline46mondego>"
"2957splitHere46","12779076splitHere46","java -splash:filename.gif Test<newline46mondego>"
"2958splitHere46","12779122splitHere46","HashMap"
"2959splitHere46","12779158splitHere46","LinkedList"
"2960splitHere46","12779158splitHere46","LinkedListNode<Double> nod1 = linkedList1.First;<newline46mondego>LinkedListNode<Double> nod2 = linkedList2.First;<newline46mondego>while (nod1 != null && nod2 != null)<newline46mondego>{<newline46mondego>    Double d = nod1.Value + nod2.Value;              <newline46mondego>    nod1.Value = d;<newline46mondego>    nod1 = nod1.Next;<newline46mondego>    nod2 = nod2.Next;<newline46mondego>} <newline46mondego>"
"2961splitHere46","12779241splitHere46","IdentityHashMap"
"2962splitHere46","12779241splitHere46","equals"
"2963splitHere46","12779241splitHere46","true"
"2964splitHere46","12779241splitHere46","IdentityHashMap"
"2965splitHere46","12779241splitHere46","=="
"2966splitHere46","12779241splitHere46","true"
"2967splitHere46","12779241splitHere46","IdentityHashMap"
"2968splitHere46","12779241splitHere46","table[hash]"
"2969splitHere46","12779241splitHere46","table[hash+1]"
"2970splitHere46","12779241splitHere46","HashMap"
"2971splitHere46","12779241splitHere46","Entry"
"2972splitHere46","12779470splitHere46","Query query = session.createQuery(<doubleQuotes46>from Foo where date between :fromDate and :toDate<doubleQuotes46>);<newline46mondego>query.setParameter(<doubleQuotes46>fromDate<doubleQuotes46>, DateConstants.MIN_DATE);<newline46mondego>query.setParameter(<doubleQuotes46>toDate<doubleQuotes46>, DateConstants.MAX_DATE);<newline46mondego>"
"2973splitHere46","12779470splitHere46","from Foo where date between MaxDate() and MinDate()"
"2974splitHere46","12779608splitHere46","<jxb:bindings <newline46mondego>    xmlns:xs=<doubleQuotes46>http://www.w3.org/2001/XMLSchema<doubleQuotes46><newline46mondego>    xmlns:jxb=<doubleQuotes46>http://java.sun.com/xml/ns/jaxb<doubleQuotes46><newline46mondego>    version=<doubleQuotes46>2.1<doubleQuotes46>><newline46mondego><newline46mondego>   <!-- Raise theEnumMemberSizeCap limit --><newline46mondego>   <jxb:bindings ><newline46mondego>       <jxb:globalBindings typesafeEnumMaxMembers=<doubleQuotes46>2000<doubleQuotes46>/><newline46mondego>   </jxb:bindings><newline46mondego><newline46mondego>    <jxb:bindings schemaLocation=<doubleQuotes46>your-schema.xsd<doubleQuotes46>><newline46mondego>            <jxb:bindings node=<doubleQuotes46>//xs:complexType[@name='tRight_Owner']<doubleQuotes46>><newline46mondego>                <jxb:class name=<doubleQuotes46>TRight_Owner2<doubleQuotes46>/><newline46mondego>            </jxb:bindings><newline46mondego>    </jxb:bindings><newline46mondego><newline46mondego></jxb:bindings><newline46mondego>"
"2975splitHere46","12779608splitHere46","xjc -d out -b binding.xml your-schema.xsd<newline46mondego>"
"2976splitHere46","12779618splitHere46","Bitmap.recycle()"
"2977splitHere46","12779618splitHere46","Bitmap bmp = ...;<newline46mondego>boolean isBitmapInCache = false;<newline46mondego>MemoryCacheAware<String, Bitmap> memoryCache = ImageLoader.getInstance().getMemoryCache();<newline46mondego>for (String key : memoryCache.keys()) {<newline46mondego>    if (bmp == memoryCache.get(key)) {<newline46mondego>        isBitmapInCache = true;<newline46mondego>        break;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>if (!isBitmapInCache) {<newline46mondego>    // You can recycle bitmap<newline46mondego>}<newline46mondego>"
"2978splitHere46","12779805splitHere46","InputStream myxls = new FileInputStream(<doubleQuotes46>workbook.xls<doubleQuotes46>));<newline46mondego>HSSFWorkbook wb = new HSSFWorkbook(myxls); // for *.xlsx use XSSFWorkbook<newline46mondego>"
"2979splitHere46","12779805splitHere46","HSSFSheet sheet = wb.getSheetAt(0);       // first sheet<newline46mondego>HSSFRow row     = sheet.getRow(0);        // first row<newline46mondego>HSSFCell cell   = row.getCell((short)0);  // first cell<newline46mondego>"
"2980splitHere46","12779805splitHere46","String value = cell.getStringCellValue();<newline46mondego>"
"2981splitHere46","12779805splitHere46","Int value = cell.getCellValue();<newline46mondego>"
"2982splitHere46","12779805splitHere46","public String getValue(int x, int y){<newline46mondego>    Row row = this.activeSheet.getRow(y);<newline46mondego>    if(row==null) return <doubleQuotes46><doubleQuotes46>;<newline46mondego>    Cell cell = row.getCell(x);<newline46mondego>    if(cell==null) return <doubleQuotes46><doubleQuotes46>;<newline46mondego>    int type = cell.getCellType();<newline46mondego>    switch(type){<newline46mondego>    case 0:<newline46mondego>        return cell.getNumericCellValue() + <doubleQuotes46><doubleQuotes46>;<newline46mondego>    case 1:<newline46mondego>        return cell.getStringCellValue();<newline46mondego>    case 2:<newline46mondego>        return cell.getCellFormula();<newline46mondego>    case 3:<newline46mondego>        return <doubleQuotes46><doubleQuotes46>;<newline46mondego>    case 4:<newline46mondego>        return cell.getBooleanCellValue() + <doubleQuotes46><doubleQuotes46>;<newline46mondego>    case 5:<newline46mondego>        return cell.getErrorCellValue() + <doubleQuotes46><doubleQuotes46>;<newline46mondego>    default:<newline46mondego>        return <doubleQuotes46><doubleQuotes46>;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2983splitHere46","12779845splitHere46","@XmlSchema"
"2984splitHere46","12779845splitHere46","@XmlSchema( <newline46mondego>    namespace = <doubleQuotes46>http://www.BASt.de/ZEB/Rohdaten/Version_3_0<doubleQuotes46>, <newline46mondego>    elementFormDefault = XmlNsForm.QUALIFIED) <newline46mondego>package xml;<newline46mondego><newline46mondego>import javax.xml.bind.annotation.XmlNsForm;<newline46mondego>import javax.xml.bind.annotation.XmlSchema;<newline46mondego>"
"2985splitHere46","12779845splitHere46","@XmlSchema( <newline46mondego>    namespace = <doubleQuotes46>http://www.BASt.de/ZEB/Rohdaten/Version_3_0<doubleQuotes46>, <newline46mondego>    elementFormDefault = XmlNsForm.QUALIFIED) <newline46mondego>package xml.messstrecke;<newline46mondego><newline46mondego>import javax.xml.bind.annotation.XmlNsForm;<newline46mondego>import javax.xml.bind.annotation.XmlSchema;<newline46mondego>"
"2986splitHere46","12779867splitHere46","Queue q = new LinkedList();<newline46mondego>List l = (List) q;<newline46mondego>"
"2987splitHere46","12779867splitHere46","List l = new ArrayList(q);<newline46mondego>"
"2988splitHere46","12779944splitHere46","<form method=<doubleQuotes46>post<doubleQuotes46>><newline46mondego>   <p>...<p><newline46mondego>   <p>...<p><newline46mondego>   <p>...<p><newline46mondego>   <p>...<p><newline46mondego>   <p>...<p><newline46mondego>     <input type=<doubleQuotes46>submit<doubleQuotes46> name=<doubleQuotes46>apply<doubleQuotes46> value <doubleQuotes46>Save<doubleQuotes46>><newline46mondego></form><newline46mondego>"
"2989splitHere46","12779944splitHere46","ValuePair"
"2990splitHere46","12779944splitHere46","nvps2.add(new BasicNameValuePair(<doubleQuotes46>apply<doubleQuotes46>, <doubleQuotes46>Save<doubleQuotes46>));<newline46mondego>"
"2991splitHere46","12779997splitHere46","FontMetrics.getHeight()"
"2992splitHere46","12780079splitHere46","public class MSC<newline46mondego>{<newline46mondego>   private String column1;<newline46mondego>   private String column2;<newline46mondego><newline46mondego>   public String getColumn1(){<newline46mondego>      return column1;<newline46mondego>   }<newline46mondego><newline46mondego>   public void setColumn1(String value) {<newline46mondego>      column1 = value;<newline46mondego>   }  <newline46mondego><newline46mondego>   public String getColumn2(){<newline46mondego>      return column2;<newline46mondego>   }<newline46mondego><newline46mondego>   public void setColumn2(String value) {<newline46mondego>      column2 = value;<newline46mondego>   } <newline46mondego>}<newline46mondego>"
"2993splitHere46","12780083splitHere46","\u0000"
"2994splitHere46","12780083splitHere46","\u000B"
"2995splitHere46","12780104splitHere46","{<newline46mondego>        int genreId = 2; // << Set Your Genre ID Here<newline46mondego>        Uri uri = MediaStore.Audio.Albums.getContentUri(<doubleQuotes46>external<doubleQuotes46>);<newline46mondego>        Log.i(<doubleQuotes46>XXX<doubleQuotes46>, <doubleQuotes46>uri = <doubleQuotes46> + uri.toString());<newline46mondego>        Cursor cursor = null;<newline46mondego>        try {<newline46mondego><newline46mondego>            String selection = <doubleQuotes46>album_info._id IN <doubleQuotes46><newline46mondego>                    + <doubleQuotes46>(SELECT (audio_meta.album_id) album_id FROM audio_meta, audio_genres_map <doubleQuotes46><newline46mondego>                    + <doubleQuotes46>WHERE audio_genres_map.audio_id=audio_meta._id AND audio_genres_map.genre_id=?)<doubleQuotes46>;<newline46mondego>            String[] selectionArgs = new String[] { String.valueOf(genreId) };<newline46mondego>            String[] proj = { AlbumColumns.ALBUM };<newline46mondego>            cursor = getContentResolver().query(uri, proj, selection,<newline46mondego>                    selectionArgs, null);<newline46mondego>            if (null != cursor) {<newline46mondego>                Log.i(<doubleQuotes46>XXX<doubleQuotes46>, <doubleQuotes46>cursor rows count = <doubleQuotes46> + cursor.getCount());<newline46mondego>                while (cursor.moveToNext()) {<newline46mondego>                    Log.i(<doubleQuotes46>XXX<doubleQuotes46>, <doubleQuotes46>  Album: <doubleQuotes46> + cursor.getString(0));<newline46mondego>                }<newline46mondego>                cursor.close();<newline46mondego>                Log.i(<doubleQuotes46>XXX<doubleQuotes46>, <doubleQuotes46>cursor closed<doubleQuotes46>);<newline46mondego>            }<newline46mondego>        } catch (Exception ex) {<newline46mondego>            Log.e(<doubleQuotes46>XXX<doubleQuotes46>, <doubleQuotes46>Error Querying Database<doubleQuotes46>);<newline46mondego>        } finally {<newline46mondego>            if (cursor != null) {<newline46mondego>                cursor.close();<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"2996splitHere46","12780154splitHere46","ftpClient.sendSiteCommand(<doubleQuotes46>chmod <doubleQuotes46> + <doubleQuotes46>755<doubleQuotes46> + <doubleQuotes46> example.html<doubleQuotes46>);<newline46mondego>"
"2997splitHere46","12780294splitHere46","<servlet>"
"2998splitHere46","12780294splitHere46","WEB-INF/web.xml"
"2999splitHere46","12780294splitHere46","*.gwt.xml"
"3000splitHere46","12780294splitHere46","entry-point"
"3001splitHere46","12780294splitHere46","inherits"
"3002splitHere46","12780324splitHere46","Pannable"
"3003splitHere46","12780415splitHere46","PriorityBlockingQueue"
"3004splitHere46","12780415splitHere46","poll()"
"3005splitHere46","12780434splitHere46","appartment"
"3006splitHere46","12780434splitHere46","Appartment"
"3007splitHere46","12780434splitHere46","money"
"3008splitHere46","12780434splitHere46","int"
"3009splitHere46","12780434splitHere46","double"
"3010splitHere46","12780434splitHere46","appartment[i].money= (int) Double.parseDouble(word[2]);"
"3011splitHere46","12780471splitHere46","path"
"3012splitHere46","12780471splitHere46","String"
"3013splitHere46","12780471splitHere46","new File(path).exists();<newline46mondego>"
"3014splitHere46","12780471splitHere46","new File(path).isDirectory();<newline46mondego>"
"3015splitHere46","12780471splitHere46","new File(path).isFile();<newline46mondego>"
"3016splitHere46","12780471splitHere46","File"
"3017splitHere46","12780478splitHere46","pack();<newline46mondego>"
"3018splitHere46","12780478splitHere46","setLayout(null)<newline46mondego>"
"3019splitHere46","12780478splitHere46","// This is a BoxLayout with top to bottom orientation, the trick is to nest many JPanel<newline46mondego>// with BoxLayout in both the direction to have all working<newline46mondego>// What I want to achieve is:<newline46mondego>//<newline46mondego>//     1. Having a main box top to bottom where I will put:<newline46mondego>//           - Top margin (a rigid area with dimension (0,MARGIN)<newline46mondego>//           - Main JPanel with BoxLayout and LINE_AXIS (left to right) orientation<newline46mondego>//           - Bottom margin (a rigid area like top margin)<newline46mondego>//<newline46mondego>//     2. In the main panel I will put:<newline46mondego>//           - Left Margin (a rigid area with dimensions (MARGIN,0)<newline46mondego>//           - A JPanel (leftPanel) Boxed top to bottom containing the things on the left that actually are jLabel3 and jLabel2<newline46mondego>//           - A little separator between the two panel, a rigid area (10,0) i.e.<newline46mondego>//           - A JPanel (rightPanel) Boxed top to bottom containing the remaining 4 JLabels<newline46mondego>//           - Right Margin (as left)<newline46mondego>//<newline46mondego>//     3. In rightPanel JPanel (BoxLayout.PAGE_AXIS, top to bottom) I will have:<newline46mondego>//           - a rigid area space to match the position that I want<newline46mondego>//           - the first label<newline46mondego>//           - a rigid area.. etc so on<newline46mondego>//     <newline46mondego>//     For each JLabel I must set all:<newline46mondego>//           - setPreferredSize(dimension)<newline46mondego>//           - setMinimumSize(dimension)<newline46mondego>//           - setMaximumSize(dimension)<newline46mondego>//<newline46mondego>//     Then, if you specify also the JFrame is better, but you can try to pack().<newline46mondego>//     BoxLayout take care of sizes, not exceeding maximum and not making it smaller than minimum. Yust try it and you will love it.<newline46mondego><newline46mondego>getContentPane().setLayout(new BoxLayout(getContentPane(), BoxLayout.PAGE_AXIS);<newline46mondego><newline46mondego>JPanel main = new JPanel();<newline46mondego>main.setLayout(new BoxLayout(main, BoxLayout.LINE_AXIS));<newline46mondego><newline46mondego>this.add(Box.createRigidArea(new Dimension(0,20))); // VERTICAL SPACE (top margin)<newline46mondego>this.add(main);<newline46mondego>this.add(Box.createRigidArea(new Dimension(0,20))); // VERTICAL SPACE (bottom margin)<newline46mondego><newline46mondego>JPanel rightPanel = new JPanel();<newline46mondego>rightPanel.setLayout( new BoxLayout(rightPanel, BoxLayout.PAGE_AXIS));<newline46mondego>JPanel leftPanel = new JPanel();<newline46mondego>leftPanel.setLayout( new BoxLayout(leftPanel, BoxLayout.PAGE_AXIS));<newline46mondego><newline46mondego>main.add(Box.createRigidArea(new Dimension(20,0))); // HORIZONTAL SPACE (left margin)<newline46mondego>main.add(leftPanel);<newline46mondego>main.add(Box.createRigidArea(new Dimension(10,0))); // HORIZONTAL SPACE (between the two)<newline46mondego>main.add(rightPanel);<newline46mondego>main.add(Box.createRigidArea(new Dimension(20,0))); // HORIZONTAL SPACE (right margin)<newline46mondego><newline46mondego>// now you should have understood how it works, just try to fill the right and left panel with your labels. Remember to set preferredm, maximum and minimum sizes.<newline46mondego>"
"3020splitHere46","12780506splitHere46","@Rule"
"3021splitHere46","12780577splitHere46","ArrayBlockingQueue"
"3022splitHere46","12780577splitHere46","true"
"3023splitHere46","12780577splitHere46","take()"
"3024splitHere46","12780577splitHere46","ArrayBlockingQueue"
"3025splitHere46","12780577splitHere46","fair = true"
"3026splitHere46","12780702splitHere46","p:commandButton"
"3027splitHere46","12780702splitHere46","<button>"
"3028splitHere46","12780787splitHere46","JTable"
"3029splitHere46","12780787splitHere46","DefaultTableModel"
"3030splitHere46","12780787splitHere46","ArrayList"
"3031splitHere46","12780787splitHere46","removeRow(int)"
"3032splitHere46","12780787splitHere46","int"
"3033splitHere46","12780787splitHere46","JTable.getSelectedRow()"
"3034splitHere46","12780802splitHere46","JAXP APIs"
"3035splitHere46","12780802splitHere46","InputStream is = new ByteArrayInputStream(xml.getBytes(<doubleQuotes46>UTF-8<doubleQuotes46>));<newline46mondego>DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();<newline46mondego>DocumentBuilder docBuilder = dbf.newDocumentBuilder();<newline46mondego>Document doc = docBuilder.parse(is);<newline46mondego>NodeList nodeList = doc.getChildNodes();<newline46mondego>"
"3036splitHere46","12780802splitHere46","for (int i = 0; i < nodeList.getLength(); i++) {<newline46mondego>            Node node = nodeList.item(i);<newline46mondego>            NamedNodeMap attributes = node.getAttributes();<newline46mondego><newline46mondego>//...<newline46mondego>"
"3037splitHere46","12780855splitHere46","public void open() {<newline46mondego>        onAttach();<newline46mondego>        RootPanel.detachOnWindowClose(this);<newline46mondego>        open(id);<newline46mondego>    }<newline46mondego>"
"3038splitHere46","12780855splitHere46","void onClose() {<newline46mondego>        if(RootPanel.isInDetachList(this)) {<newline46mondego>            RootPanel.detachNow(this);<newline46mondego>        }<newline46mondego>        else {<newline46mondego>            onDetach();<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"3039splitHere46","12780855splitHere46","final native void create(String id) /*-{<newline46mondego>        var _self = this;<newline46mondego>        $wnd.jQuery(<doubleQuotes46>#<doubleQuotes46> + id).dialog({ <newline46mondego>            autoHide: true, <newline46mondego>            close: function(event, ui) {<newline46mondego>                _self.@your.package.Dialog::onClose()();<newline46mondego>                _self = null;<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }-*/;<newline46mondego>"
"3040splitHere46","12780855splitHere46","public class Dialog extends Composite {<newline46mondego><newline46mondego>    public Dialog(IsWidget body) {<newline46mondego>        initWidget(body.asWidget());<newline46mondego>    }<newline46mondego><newline46mondego>    public void create() {<newline46mondego>        create(getElement());<newline46mondego>    }<newline46mondego><newline46mondego>    public void open() {<newline46mondego>        onAttach();<newline46mondego>        RootPanel.detachOnWindowClose(this);<newline46mondego>        open(getElement());<newline46mondego>    }<newline46mondego><newline46mondego>    void onClose() {<newline46mondego>        if(RootPanel.isInDetachList(this)) {<newline46mondego>            RootPanel.detachNow(this);<newline46mondego>        }<newline46mondego>        else {<newline46mondego>            onDetach();<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    final native void create(Element element) /*-{<newline46mondego>        var _self = this;<newline46mondego>        $wnd.jQuery(element).dialog({ <newline46mondego>            autoHide: true, <newline46mondego>            close: function(event, ui) {<newline46mondego>                _self.@your.package.Dialog::onClose()();<newline46mondego>                _self = null;<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }-*/;<newline46mondego><newline46mondego>    final native void open(Element element) /*-{<newline46mondego>        $wnd.jQuery(element).dialog(<doubleQuotes46>open<doubleQuotes46>);<newline46mondego>    }-*/;<newline46mondego>}<newline46mondego>"
"3041splitHere46","12781008splitHere46","@Lob<newline46mondego>public String getFullText() {<newline46mondego>    return fullText;<newline46mondego>}<newline46mondego><newline46mondego>@Lob <newline46mondego>public byte[] getFullCode() {<newline46mondego>    return fullCode;<newline46mondego>}<newline46mondego>"
"3042splitHere46","12781120splitHere46","@Override<newline46mondego>public void renderHead(IHeaderResponse response) {<newline46mondego><newline46mondego>    try {<newline46mondego>        InputStream in = new CssPackageResource(BusinessMail.class, <newline46mondego>                <doubleQuotes46>style.css<doubleQuotes46>, getLocale(), <doubleQuotes46>?<doubleQuotes46>, <doubleQuotes46>?<doubleQuotes46>)<newline46mondego>                .getCacheableResourceStream().getInputStream();<newline46mondego><newline46mondego>        String data = new java.util.Scanner(in).useDelimiter(<doubleQuotes46>\\A<doubleQuotes46>).next();<newline46mondego>        response.renderCSS(data, <doubleQuotes46>notneeded<doubleQuotes46>);<newline46mondego><newline46mondego>    } catch (ResourceStreamNotFoundException e) {<newline46mondego>        logger.error(<doubleQuotes46>Could not load css<doubleQuotes46>, e);<newline46mondego>    }           <newline46mondego>}<newline46mondego>"
"3043splitHere46","12781128splitHere46","<bean id=<doubleQuotes46>marshaller<doubleQuotes46> class=<doubleQuotes46>org.springframework.oxm.jaxb.Jaxb2Marshaller<doubleQuotes46>><newline46mondego>     <property name=<doubleQuotes46>classesToBeBound<doubleQuotes46>><newline46mondego>        <list><newline46mondego>            <value>com.package.YourClass</value><newline46mondego>         </list><newline46mondego>    </property><newline46mondego></bean><newline46mondego>"
"3044splitHere46","12781210splitHere46","interface Interface1 {<newline46mondego>   public void method();<newline46mondego>}<newline46mondego><newline46mondego>public class Parent {<newline46mondego>   protected abstract void method();<newline46mondego>}<newline46mondego><newline46mondego>public class Child extends Parent implements Interface1 {<newline46mondego>   @Override<newline46mondego>   public void method() {<newline46mondego>   }<newline46mondego>   //This would be impossible if the visibility of method() in class Parent could not be increased.<newline46mondego>}<newline46mondego>"
"3045splitHere46","12781210splitHere46","class Child extends Base{<newline46mondego>      @Override<newline46mondego>      protected void a(){<newline46mondego><newline46mondego>      }<newline46mondego><newline46mondego>      public void a2() {<newline46mondego>           a(); //This would have the same problems that allowing to increase the visibility.<newline46mondego>      }<newline46mondego>"
"3046splitHere46","12781296splitHere46","java.lang.NoClassDefFoundError: com.test.library.R$drawable<newline46mondego>"
"3047splitHere46","12781446splitHere46","translate"
"3048splitHere46","12781446splitHere46","Book"
"3049splitHere46","12781446splitHere46","Author[Book[translate(.,'ABCDEFGHIJKLMNOPQRSTUVWXYZ','abcdefghijklmnopqrstuvwxyz')='b1']]<newline46mondego>"
"3050splitHere46","12781475splitHere46","res/layout-land [Landscape Mode]<newline46mondego>main.xml <newline46mondego>res/layout-port [Portrait Mode ]<newline46mondego>main.xml<newline46mondego>"
"3051splitHere46","12781527splitHere46","import java.awt.GridLayout;<newline46mondego>import javax.swing.*;<newline46mondego>import javax.swing.border.*;<newline46mondego><newline46mondego>public class CaseForLayoutsNumber547 {<newline46mondego><newline46mondego>    CaseForLayoutsNumber547() {<newline46mondego>        Border titledBorder1 = new TitledBorder(<doubleQuotes46>Case for Layouts #547<doubleQuotes46>);<newline46mondego>        // START: code snippet variant<newline46mondego>        JPanel panelMain = new JPanel(new GridLayout());<newline46mondego>        panelMain.setBorder(titledBorder1);<newline46mondego><newline46mondego>        JTextArea fieldBody = new JTextArea(5,40);<newline46mondego>        JScrollPane fieldBodyScrollPane = new JScrollPane(fieldBody);<newline46mondego>        panelMain.add(fieldBodyScrollPane);<newline46mondego>        // END: code snippet variant<newline46mondego>        JOptionPane.showMessageDialog(null, panelMain);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        Runnable r = new Runnable() {<newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                new CaseForLayoutsNumber547();<newline46mondego>            }<newline46mondego>        };<newline46mondego>        SwingUtilities.invokeLater(r);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3052splitHere46","12781588splitHere46","NumberFormat.getCurrencyInstance()"
"3053splitHere46","12781588splitHere46","NumberFormat.html#setMaximumFractionDigits"
"3054splitHere46","12781769splitHere46","left"
"3055splitHere46","12781769splitHere46","right"
"3056splitHere46","12781769splitHere46","BSTNode"
"3057splitHere46","12781769splitHere46","BSTNode"
"3058splitHere46","12781769splitHere46","contains"
"3059splitHere46","12781769splitHere46","public boolean contains(Object item) {<newline46mondego>    return value.equals(item);<newline46mondego>}<newline46mondego>"
"3060splitHere46","12781859splitHere46","object"
"3061splitHere46","12781859splitHere46","play()"
"3062splitHere46","12781859splitHere46","object"
"3063splitHere46","12781887splitHere46","String"
"3064splitHere46","12781887splitHere46","Object"
"3065splitHere46","12781887splitHere46","public Song implements Comparable<Song> {<newline46mondego>    private String title;<newline46mondego>    private String artist;<newline46mondego>    private String album;<newline46mondego><newline46mondego>    public Song(String title, String artist, String album) {<newline46mondego>       ...<newline46mondego>    }<newline46mondego><newline46mondego>    public int compareTo(Song s) {<newline46mondego>        // sorting logic<newline46mondego>    }<newline46mondego><newline46mondego>    ... // getters, setters, equals & hashCode<newline46mondego>}<newline46mondego>"
"3066splitHere46","12781887splitHere46","List<Song> songs = new ArrayList<Song>();<newline46mondego>songs.add(new Song(<doubleQuotes46>Dancing Queen<doubleQuotes46>, <doubleQuotes46>Abba<doubleQuotes46>, <doubleQuotes46>Arrival<doubleQuotes46>); // I had to find this on Wikipedia<newline46mondego>...<newline46mondego>"
"3067splitHere46","12781887splitHere46","Collections.sort(songs);<newline46mondego>"
"3068splitHere46","12781967splitHere46","Serializable"
"3069splitHere46","12781967splitHere46","class ValueWithRadix implements Serializable<newline46mondego>{<newline46mondego>    int radix;<newline46mondego>    String value;<newline46mondego>}<newline46mondego><newline46mondego>int deserializedTwo = Integer.parseInt( valueWithRadix.getValue() , valueWithRadix.getRadix() );<newline46mondego>"
"3070splitHere46","12781967splitHere46","<ValueWithRadix><newline46mondego>  <value>10</value><newline46mondego>  <radix>2</radix><newline46mondego></ValueWithRadix><newline46mondego>"
"3071splitHere46","12781967splitHere46","<value>10</value><newline46mondego>"
"3072splitHere46","12782072splitHere46","Enum.valueOf();"
"3073splitHere46","12782072splitHere46","Code c = Code.valueOf(Code.class, fieldName);<newline46mondego>"
"3074splitHere46","12782325splitHere46","Toolkit#createImage()"
"3075splitHere46","12782325splitHere46","ImageIO.read()"
"3076splitHere46","12782325splitHere46","imgToBufferedImg()"
"3077splitHere46","12782382splitHere46","MessageDigest md = MessageDigest.getInstance(<doubleQuotes46>MD5<doubleQuotes46>);<newline46mondego>byte[] hashCode = md.digest(...);<newline46mondego>"
"3078splitHere46","12782408splitHere46","Window->Preferences->Ant->Runtime->Global Entries->Add External JAR->(Browse to your JDK lib folder) Add tools.jar"
"3079splitHere46","12782546splitHere46","double"
"3080splitHere46","12782546splitHere46","int"
"3081splitHere46","12782546splitHere46","class C {<newline46mondego>    public A getA();<newline46mondego>    public B getB();<newline46mondego>}<newline46mondego><newline46mondego>C c = new C();<newline46mondego>int a = c.getA().foo();<newline46mondego>double b = c.getB().foo();<newline46mondego>"
"3082splitHere46","12782554splitHere46","long pi = (new Double(piDouble)).longValue();"
"3083splitHere46","12782554splitHere46","3"
"3084splitHere46","12782554splitHere46","double piDouble = Math.PI;<newline46mondego>long height = Long.parseLong(heightString);<newline46mondego>long radius = Long.parseLong(radiusString);<newline46mondego>double volumeBase = (piDouble * (radius * radius) * height) / 3;<newline46mondego>"
"3085splitHere46","12782554splitHere46","long roundedDownVolume = (long) volumeBase; //round down<newline46mondego>long roundedVolume = Math.round(volumeBase); //or round to the closest long<newline46mondego>"
"3086splitHere46","12782582splitHere46","<p:commandButton value=<doubleQuotes46>DELETE<doubleQuotes46> <newline46mondego>                 onclick=<doubleQuotes46>deleteDialog.show()<doubleQuotes46> <newline46mondego>                 disabled=<doubleQuotes46>#{fn:length(bean.selectedItems) eq 0}<doubleQuotes46> /><newline46mondego><newline46mondego><p:commandButton value=<doubleQuotes46>EDIT<doubleQuotes46> <newline46mondego>                 onclick=<doubleQuotes46>editDialog.show()<doubleQuotes46> <newline46mondego>                 disabled=<doubleQuotes46>#{fn:length(bean.selectedItems) ne 1}<doubleQuotes46> /><newline46mondego>"
"3087splitHere46","12782677splitHere46","getScheduler().getContext().put(<doubleQuotes46>externalInstance<doubleQuotes46>, externalInstance);<newline46mondego>"
"3088splitHere46","12782677splitHere46","public class SimpleJob implements Job {<newline46mondego>    @Override<newline46mondego>    public void execute(JobExecutionContext context)<newline46mondego>            throws JobExecutionException {<newline46mondego>       SchedulerContext schedulerContext = null;<newline46mondego>       try {<newline46mondego>        schedulerContext = context.getScheduler().getContext();<newline46mondego>       } catch (SchedulerException e1) {<newline46mondego>       e1.printStackTrace();<newline46mondego>   }<newline46mondego> ExternalInstance externalInstance= (ExternalInstance)schedulerContext.get(<doubleQuotes46>ExternalInstance<doubleQuotes46>);<newline46mondego><newline46mondego>        float avg = externalInstance.calculateAvg();<newline46mondego>    }<newline46mondego>"
"3089splitHere46","12782746splitHere46","KeyStore.setKeyEntry"
"3090splitHere46","12782746splitHere46","Certificate[] chain"
"3091splitHere46","12782753splitHere46","XYSeries"
"3092splitHere46","12782753splitHere46","private static XYDataset createDataset() {<newline46mondego>  XYSeries dataset = new XYSeries(<doubleQuotes46>A<doubleQuotes46>,false,true);<newline46mondego>  dataset.add(1,1);<newline46mondego>  dataset.add(2,3);<newline46mondego>  dataset.add(3,5);<newline46mondego>  dataset.add(4,7);<newline46mondego>  dataset.add(2.5,1);<newline46mondego>  XYSeriesCollection ds = new XYSeriesCollection();<newline46mondego>  ds.addSeries(dataset);<newline46mondego>  return ds;<newline46mondego>} <newline46mondego>"
"3093splitHere46","12782775splitHere46","JLabel[] bot = label.inputLabels();<newline46mondego>"
"3094splitHere46","12782775splitHere46","JLabel[] bot = inputLabels;<newline46mondego>"
"3095splitHere46","12782855splitHere46","public static void sendFile(DataOutput out, String filename) throws IOException {<newline46mondego>    FileInputStream fis = new FileInputStream(filename);<newline46mondego>    byte[] bytes = new byte[8192];<newline46mondego>    try {<newline46mondego>        long size = fis.getChannel().size();<newline46mondego>        out.writeLong(size);<newline46mondego>        for (int len; (len = fis.read(bytes, 0, (int) Math.min(bytes.length, size))) > 0; ) {<newline46mondego>            out.write(bytes, 0, len);<newline46mondego>            size -= len;<newline46mondego>        }<newline46mondego>        assert size == 0;<newline46mondego>    } finally {<newline46mondego>        fis.close();<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public void receiveFile(DataInput in, String filename) throws IOException {<newline46mondego>    long size = in.readLong();<newline46mondego>    FileOutputStream fos = new FileOutputStream(filename);<newline46mondego>    byte[] bytes = new byte[8192];<newline46mondego>    try {<newline46mondego>        for (int len; (len = (int) Math.min(size, bytes.length)) > 0; ) {<newline46mondego>            in.readFully(bytes, 0, len);<newline46mondego>            fos.write(bytes, 0, len);<newline46mondego>            size -= len;<newline46mondego>        }<newline46mondego>    } finally {<newline46mondego>        fos.close();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3096splitHere46","12782982splitHere46","Debug"
"3097splitHere46","12782982splitHere46","Expressions"
"3098splitHere46","12782982splitHere46","e.printStackTrace()"
"3099splitHere46","12782982splitHere46","e"
"3100splitHere46","12782982splitHere46","getStackTrace()"
"3101splitHere46","12782982splitHere46","StackTraceElement"
"3102splitHere46","12782982splitHere46","Expressions"
"3103splitHere46","12783083splitHere46","String.format(<doubleQuotes46>%1$,.2f<doubleQuotes46>, myDouble);<newline46mondego>"
"3104splitHere46","12783107splitHere46","return Department.staffNumber = Department.staffNumber;<newline46mondego>"
"3105splitHere46","12783107splitHere46","Department.staffNumber"
"3106splitHere46","12783107splitHere46","staffNumber"
"3107splitHere46","12783107splitHere46","Department"
"3108splitHere46","12783107splitHere46","public Department getStaffNumber() {<newline46mondego>    //<Department attribute in the class><newline46mondego>    return staffNumber;<newline46mondego>}<newline46mondego>"
"3109splitHere46","12783107splitHere46","Department.staffNumber"
"3110splitHere46","12783107splitHere46","Department"
"3111splitHere46","12783107splitHere46","return Department.staffNumber = Department.staffNumber;"
"3112splitHere46","12783107splitHere46","public class SomeClass {<newline46mondego><newline46mondego>    int x;<newline46mondego><newline46mondego>    public int getX() {<newline46mondego>        //return x = x; //clumsy<newline46mondego>        return x; //now this might be better<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3113splitHere46","12783181splitHere46","public void paint(Graphics g, Shape a)"
"3114splitHere46","12783181splitHere46","drawLine(line, g, x, y);<newline46mondego>        y += fontHeight;<newline46mondego>"
"3115splitHere46","12783181splitHere46","BasicTextAreaUI"
"3116splitHere46","12783181splitHere46","PlainView"
"3117splitHere46","12783181splitHere46","public View create(Element elem) {<newline46mondego>    Document doc = elem.getDocument();<newline46mondego>    Object i18nFlag = doc.getProperty(<doubleQuotes46>i18n<doubleQuotes46>/*AbstractDocument.I18NProperty*/);<newline46mondego>    if ((i18nFlag != null) && i18nFlag.equals(Boolean.TRUE)) {<newline46mondego>        // build a view that support bidi<newline46mondego>        return createI18N(elem);<newline46mondego>    } else {<newline46mondego>        JTextComponent c = getComponent();<newline46mondego>        if (c instanceof JTextArea) {<newline46mondego>        JTextArea area = (JTextArea) c;<newline46mondego>        View v;<newline46mondego>        if (area.getLineWrap()) {<newline46mondego>            v = new WrappedPlainView(elem, area.getWrapStyleWord());<newline46mondego>        } else {<newline46mondego>            v = new PlainView(elem);<newline46mondego>        }<newline46mondego>        return v;<newline46mondego>        }<newline46mondego>    }<newline46mondego>    return null;<newline46mondego>}<newline46mondego>"
"3118splitHere46","12783660splitHere46","mvn mrm:catch-deploy deploy mrm:push-deploy<newline46mondego>"
"3119splitHere46","12783686splitHere46","setForeground()"
"3120splitHere46","12783686splitHere46","setBackground()"
"3121splitHere46","12783686splitHere46","Label"
"3122splitHere46","12783686splitHere46","Listener"
"3123splitHere46","12783686splitHere46","SWT.Paint"
"3124splitHere46","12783686splitHere46","Label"
"3125splitHere46","12783686splitHere46","Listener"
"3126splitHere46","12783686splitHere46","handleEvent"
"3127splitHere46","12783686splitHere46","Event"
"3128splitHere46","12783686splitHere46","GC"
"3129splitHere46","12783686splitHere46","label.addListener(SWT.Paint, new Listener() {<newline46mondego>    public void handleEvent(Event event) {<newline46mondego>        GC gc = event.gc;<newline46mondego>        // paint what you want<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"3130splitHere46","12783728splitHere46","fopFactory.ignoreNamespace(<doubleQuotes46>http://www.w3.org/2001/XMLSchema-instance<doubleQuotes46>);<newline46mondego>"
"3131splitHere46","12783806splitHere46","Calendar cal=Calendar.getInstance();<newline46mondego>cal.add( Calendar.DAY_OF_WEEK, -(cal.get(Calendar.DAY_OF_WEEK)-1)); <newline46mondego>System.out.println(cal.get(Calendar.DATE));<newline46mondego>"
"3132splitHere46","12784007splitHere46","@Target({ElementType.TYPE})<newline46mondego>@Retention(RetentionPolicy.RUNTIME)<newline46mondego>public @interface MakeJson {<newline46mondego>    String label();<newline46mondego>}<newline46mondego>"
"3133splitHere46","12784007splitHere46","Reflections reflections = new Reflections(<doubleQuotes46>my.package.name<doubleQuotes46>);<newline46mondego>    Set<Class<?>> annotatedClasses = reflections.getTypesAnnotatedWith(MakeJson.class);<newline46mondego>    for (Class<?> annotated : annotatedClasses) {<newline46mondego>        if  (annotated.isEnum()) {<newline46mondego>            Jsonify j = annotated.getAnnotation(MakeJson.class);<newline46mondego>            Object[] constants = annotated.getEnumConstants();<newline46mondego>            Method m = annotated.getMethod(j.label()); // get the method name<newline46mondego>            for (Object constant : constants) {<newline46mondego>                System.out.println(constant.toString());<newline46mondego>                System.out.println(m.invoke(constant));<newline46mondego>                // construct json object here<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"3134splitHere46","12784162splitHere46","<target name=<doubleQuotes46>jschset<doubleQuotes46> description=<doubleQuotes46>Set the jar<doubleQuotes46>>   <newline46mondego>    <copy file=<doubleQuotes46>${lib}/jsch-0.1.48.jar<doubleQuotes46> tofile=<doubleQuotes46>${ant.home}/lib/jsch-0.1.48.jar<doubleQuotes46>/><newline46mondego></target><newline46mondego>"
"3135splitHere46","12784204splitHere46","DOM"
"3136splitHere46","12784204splitHere46","StAXResult"
"3137splitHere46","12784204splitHere46","XMLOutputFactory factory=XMLOutputFactory.newFactory();<newline46mondego> XMLStreamWriter writer=factory.createXMLStreamWriter(System.out);<newline46mondego> StAXResult result=new StAXResult(writer);<newline46mondego> trans.transform(new DOMSource(doc),result);<newline46mondego>"
"3138splitHere46","12784406splitHere46","import javafx.application.Application;<newline46mondego>import javafx.scene.Scene;<newline46mondego>import javafx.scene.layout.VBox;<newline46mondego>import javafx.scene.text.Font;<newline46mondego>import javafx.scene.text.Text;<newline46mondego>import javafx.stage.Stage;<newline46mondego>import javafx.stage.StageStyle;<newline46mondego><newline46mondego>public class TransparentStage extends Application {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void start(Stage stage) {<newline46mondego>        // important line<newline46mondego>        stage.initStyle(StageStyle.TRANSPARENT);<newline46mondego><newline46mondego>        Text text = new Text(<doubleQuotes46>Transparent!<doubleQuotes46>);<newline46mondego>        text.setFont(new Font(40));<newline46mondego>        VBox box = new VBox();<newline46mondego>        box.getChildren().add(text);<newline46mondego>        final Scene scene = new Scene(box,300, 250);<newline46mondego>        scene.setFill(null);<newline46mondego>        stage.setScene(scene);<newline46mondego>        stage.show();<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        launch(args);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3139splitHere46","12784422splitHere46","String val = <doubleQuotes46>Gambia<doubleQuotes46>;<newline46mondego>String field = <doubleQuotes46><doubleQuotes46>;<newline46mondego><newline46mondego>for (Code c : Code.values())<newline46mondego>    if (c.getStringValue().equals(val)) {<newline46mondego>        field = c.name();<newline46mondego>        break;<newline46mondego>    }<newline46mondego><newline46mondego>System.out.println(field);<newline46mondego>"
"3140splitHere46","12784538splitHere46","integration-test"
"3141splitHere46","12784538splitHere46","start-jetty"
"3142splitHere46","12784538splitHere46","pre-integration-test"
"3143splitHere46","12784653splitHere46","META-INF/services/package.A <newline46mondego>"
"3144splitHere46","12784653splitHere46","package.Aimpl<newline46mondego>package.A2impl<newline46mondego>package.A3impl<newline46mondego>"
"3145splitHere46","12784699splitHere46","Content-Type: application/xml;charset=UTF-8\r\n<newline46mondego>"
"3146splitHere46","12784699splitHere46","D..SSELDORF<newline46mondego>"
"3147splitHere46","12784699splitHere46","44 c2 9d 53 53<newline46mondego>"
"3148splitHere46","12784699splitHere46","44 - D<newline46mondego>53 - S<newline46mondego>"
"3149splitHere46","12784834splitHere46","\w"
"3150splitHere46","12784834splitHere46","[^\s<>.!?]{2}<newline46mondego>"
"3151splitHere46","12784834splitHere46","[^\W\d]<newline46mondego>"
"3152splitHere46","12784834splitHere46","[^\W]"
"3153splitHere46","12784834splitHere46","\w"
"3154splitHere46","12784834splitHere46","\d"
"3155splitHere46","12784834splitHere46","[a-z-[e-g]]<newline46mondego>"
"3156splitHere46","12784834splitHere46","[a-z]"
"3157splitHere46","12784834splitHere46","e"
"3158splitHere46","12784834splitHere46","f"
"3159splitHere46","12784834splitHere46","g"
"3160splitHere46","12784901splitHere46","get"
"3161splitHere46","12784901splitHere46","setAccessible(true);"
"3162splitHere46","12784901splitHere46","for (Field field : fields) {<newline46mondego>  field.setAccessible(true); //Additional line<newline46mondego>  System.out.println(<doubleQuotes46>Field Name: <doubleQuotes46> + field.getName());<newline46mondego>  System.out.println(<doubleQuotes46>Field Type: <doubleQuotes46> + field.getType());<newline46mondego>  System.out.println(<doubleQuotes46>Field Value: <doubleQuotes46> + field.get(person));<newline46mondego>}<newline46mondego>"
"3163splitHere46","12785172splitHere46","pass"
"3164splitHere46","12785172splitHere46","superSecretKeyBytes.length == pass.length()"
"3165splitHere46","12785172splitHere46","for (int i = 0; i < superSecretKeyBytes.length; i++) {<newline46mondego>    key[i] = superSecretKeyBytes[i];<newline46mondego>}<newline46mondego>"
"3166splitHere46","12785172splitHere46","for (int i = 0; i < pass.length(); i++) {<newline46mondego>    key[i] = superSecretKeyBytes[i];<newline46mondego>}<newline46mondego>"
"3167splitHere46","12785172splitHere46","OutOfBoundsException"
"3168splitHere46","12785172splitHere46","key"
"3169splitHere46","12785172splitHere46","for (int i = 0; i < superSecretKeyBytes.length && i < key.length; i++) {<newline46mondego>    key[i] = superSecretKeyBytes[i];<newline46mondego>}<newline46mondego>"
"3170splitHere46","12785219splitHere46","object"
"3171splitHere46","12785219splitHere46","trait Greetings {<newline46mondego>  def hello() { println(<doubleQuotes46>hello<doubleQuotes46>) }<newline46mondego>  def bye() { println(<doubleQuotes46>bye<doubleQuotes46>) }<newline46mondego>}<newline46mondego><newline46mondego>object FrenchGreetings extends Greetings {<newline46mondego>  override def hello() { println(<doubleQuotes46>bonjour<doubleQuotes46>) }<newline46mondego>  override def bye() { println(<doubleQuotes46>au revoir<doubleQuotes46>) }<newline46mondego>}<newline46mondego><newline46mondego>def doSomething( greetings: Greetings ) {<newline46mondego>  greetings.hello()<newline46mondego>  println(<doubleQuotes46>... doing some work ...<doubleQuotes46>)<newline46mondego>  greetings.bye()<newline46mondego>}<newline46mondego><newline46mondego>doSomething( FrenchGreetings )<newline46mondego>"
"3172splitHere46","12785219splitHere46","doSomething"
"3173splitHere46","12785219splitHere46","hello"
"3174splitHere46","12785219splitHere46","bye"
"3175splitHere46","12785219splitHere46","bonjour<newline46mondego>... doing some work ...<newline46mondego>au revoir<newline46mondego>"
"3176splitHere46","12785219splitHere46","object"
"3177splitHere46","12785219splitHere46","MODULE$"
"3178splitHere46","12785219splitHere46","public final class JavaTrueRing implements ScalaObject {<newline46mondego>  public static final  MODULE$;<newline46mondego><newline46mondego>  static {<newline46mondego>    new JavaTrueRing();<newline46mondego>  }<newline46mondego><newline46mondego>  public void rule() {<newline46mondego>    Predef.MODULE$.println(<doubleQuotes46>To rule them all<doubleQuotes46>);<newline46mondego>  }<newline46mondego><newline46mondego>  private JavaTrueRing() {<newline46mondego>    MODULE$ = this;<newline46mondego>  }<newline46mondego><newline46mondego>  // Forwarders<newline46mondego>  public static final void rule() {<newline46mondego>    MODULE$.rule();<newline46mondego>  }  <newline46mondego>}<newline46mondego>"
"3179splitHere46","12785260splitHere46","while ((thisLine = reader.readLine()) != null) { // only read once per loop.<newline46mondego>    String propertyDetails[] = thisLine.split(<doubleQuotes46>,<doubleQuotes46>);<newline46mondego>    if (propertyDetails[0].equals(userName)) {<newline46mondego>        System.out.print(<doubleQuotes46>\nUser: <doubleQuotes46> + propertyDetails[0] + <doubleQuotes46>\nAddress: <doubleQuotes46> + propertyDetails[1] + <doubleQuotes46>\nEst. Value: <doubleQuotes46> + propertyDetails[2]<newline46mondego>                + <doubleQuotes46>\nLocation Cat: <doubleQuotes46> + propertyDetails[3] + <doubleQuotes46>\nPrivate Residence: <doubleQuotes46> + propertyDetails[4] + <doubleQuotes46>\nTax Paid: <doubleQuotes46> + propertyDetails[5] + <doubleQuotes46>\nTax Due: <doubleQuotes46> + propertyDetails[6] + breakLine);<newline46mondego><newline46mondego>    }<newline46mondego>}<newline46mondego>// out side the loop.<newline46mondego>System.out.print(<doubleQuotes46>\nNo Further Properties Found For This User\n<doubleQuotes46>);<newline46mondego>"
"3180splitHere46","12785337splitHere46","<dependencies><newline46mondego> ...<newline46mondego><dependency><newline46mondego>  <groupId>commons-logging</groupId><newline46mondego>  <artifactId>commons-logging</artifactId><newline46mondego>  <!-- notice there is no version --><newline46mondego></dependency> <newline46mondego>"
"3181splitHere46","12785495splitHere46","Multimap"
"3182splitHere46","12785495splitHere46","ListMultimap"
"3183splitHere46","12785495splitHere46","Map<K, Collection<V>>"
"3184splitHere46","12785645splitHere46","/Library"
"3185splitHere46","12785645splitHere46","/System/Library"
"3186splitHere46","12785838splitHere46","@import simple._<newline46mondego>"
"3187splitHere46","12785845splitHere46","@Override<newline46mondego>protected void onListItemClick(ListView l, View v, int position, long id) {<newline46mondego>    Bundle positionBundle = new Bundle();<newline46mondego>    positionBundle.putInt(<doubleQuotes46>position<doubleQuotes46>, position);<newline46mondego>    Intent i = new Intent(this, MyOtherActivity.class);<newline46mondego>    i.putExtras(positionBundle);<newline46mondego>    startActivity(i);<newline46mondego>}<newline46mondego>"
"3188splitHere46","12785909splitHere46","public void actionPerformed(ActionEvent arg0) {<newline46mondego>    if(psw != null && !psw.isDone()){<newline46mondego>        closeDBConnection(psw.getSession());<newline46mondego>        psw.cancel(true);<newline46mondego>        psw = null;<newline46mondego>        restoreData();<newline46mondego>    }<newline46mondego>"
"3189splitHere46","12785952splitHere46","drawLevel"
"3190splitHere46","12785952splitHere46","y"
"3191splitHere46","12785952splitHere46","x"
"3192splitHere46","12785952splitHere46","L"
"3193splitHere46","12785952splitHere46","U"
"3194splitHere46","12785952splitHere46","x"
"3195splitHere46","12785952splitHere46","int U = x*tileHeight;"
"3196splitHere46","12785952splitHere46","int L = y*tileWidth"
"3197splitHere46","12785952splitHere46","x"
"3198splitHere46","12785952splitHere46","y"
"3199splitHere46","12785952splitHere46","for (int y = 0; y <= mapy; y++){<newline46mondego>    for (int x = 0; x <= mapx; x++){<newline46mondego>        int L = x * tileWidth;<newline46mondego>        int U = y * tileHeight;<newline46mondego>        int R =  tileWidth;<newline46mondego>        int D =  tileHeight;<newline46mondego>        if (map[x][y] == 1){<newline46mondego>            g.fillRect(L, U, R, D);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"3200splitHere46","12785975splitHere46","both"
"3201splitHere46","12785975splitHere46","assertThat(50L, is(both(greaterThan(12L)).and(lessThan(1658L))));<newline46mondego>"
"3202splitHere46","12786009splitHere46","Thread"
"3203splitHere46","12786009splitHere46","Runnable"
"3204splitHere46","12786009splitHere46","Runnable runnable = new Runnable() {<newline46mondego>    // Code as before<newline46mondego>};<newline46mondego>Thread first = new Thread(runnable);<newline46mondego>first.start();<newline46mondego>... Maybe the first thread dies...<newline46mondego>Thread second = new Thread(runnable);<newline46mondego>second.start();<newline46mondego>"
"3205splitHere46","12786104splitHere46","ActionListener"
"3206splitHere46","12786107splitHere46","/**<newline46mondego> * Cage constraint Check: Checks if num is an acceptable value for the<newline46mondego> * given Cage<newline46mondego> *<newline46mondego> * Precondition: Given cell is empty, and has passed rowConstraintCheck() and<newline46mondego> * columnConstraintCheck()<newline46mondego> */<newline46mondego>public static boolean cageConstraintCheck(<newline46mondego>        int rowIndex, int columnIndex, int num) {<newline46mondego><newline46mondego>    int cageIndex =  cellToCageMapper[rowIndex][columnIndex];          <newline46mondego>    Cage cage = cages.get(cageIndex); // or whatever class-name you are using<newline46mondego><newline46mondego>    String currentOperator = cage.cageOperator;<newline46mondego>    int targetValue = cage.cageValue;<newline46mondego><newline46mondego>    // Sum and product of all cells in cage, including the new one.<newline46mondego>    int sum = num;<newline46mondego>    int product = num;<newline46mondego><newline46mondego>    // Last non-zero value seen in the cage, not counting the new one.<newline46mondego>    int last = -1;<newline46mondego><newline46mondego>    int numberOfEmptyCellsInCage = 0;<newline46mondego>    int numberOfCellsInCage = cage.placeHolders.length;            <newline46mondego><newline46mondego>    if (numberOfCellsInCage == 1)<newline46mondego>    {<newline46mondego>        // Single-cell cage<newline46mondego>        return (targetValue == num);<newline46mondego>    }<newline46mondego><newline46mondego>    for (int j = 0; j < numberOfCellsInCage; j++) {<newline46mondego>        int cellIndex = cage.placeHolders[j];<newline46mondego>        int cellRow = (cellIndex / puzzleDimension); // Integer division<newline46mondego>        int cellCol = (cellIndex % puzzleDimension);<newline46mondego>        int cellValue = puzzleArray[cellRow][cellCol];<newline46mondego>        if (cellValue == 0) {<newline46mondego>            // Empty cell<newline46mondego>            numberOfEmptyCellsInCage++;<newline46mondego>        }<newline46mondego>        else {<newline46mondego>            // Update the tracking variables<newline46mondego>            sum += cellValue;<newline46mondego>            product *= cellValue;<newline46mondego>            last = cellValue;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    if (numberOfEmptyCellsInCage == 1 && last != -1) {<newline46mondego>        // The new number will be placed in the only empty spot in the cage.<newline46mondego><newline46mondego>        // For subtraction and division, there will only be two cells. Sort<newline46mondego>        // their values onto 'low' and 'high'.<newline46mondego>        int low = num < last ? num : last;<newline46mondego>        int high = num + last - low;<newline46mondego><newline46mondego>        switch (currentOperator.charAt(0)) {<newline46mondego>            case '+':<newline46mondego>                if (targetValue != sum) {<newline46mondego>                    // The new value would produce an incorrect sum<newline46mondego>                    return false;<newline46mondego>                }<newline46mondego>                break;<newline46mondego>            case '*':<newline46mondego>                if (targetValue != product) {<newline46mondego>                    // The new value would produce an incorrect product<newline46mondego>                    reutrn false;<newline46mondego>                }<newline46mondego>                break;<newline46mondego>            case '-':<newline46mondego>                if (targetValue != high - low) {<newline46mondego>                    // The new value would produce an incorrect difference<newline46mondego>                    return false;<newline46mondego>                }<newline46mondego>                break;<newline46mondego>            case '/':<newline46mondego>                if (high % low != 0 || targetValue != high / low) {<newline46mondego>                    // The new value would produce an incorrect quotient<newline46mondego>                    return false;<newline46mondego>                }<newline46mondego>                break;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    return true;<newline46mondego>}<newline46mondego>"
"3207splitHere46","12786171splitHere46","<bean name=<doubleQuotes46>myBean<doubleQuotes46> class=<doubleQuotes46>my.Class<doubleQuotes46>><newline46mondego>  <property name=<doubleQuotes46>bundleContext<doubleQuotes46> ref=<doubleQuotes46>bundleContext<doubleQuotes46> /><newline46mondego></bean><newline46mondego>"
"3208splitHere46","12786172splitHere46","android.support.*"
"3209splitHere46","12786172splitHere46","android-support-v4.jar"
"3210splitHere46","12786172splitHere46","libs/"
"3211splitHere46","12786246splitHere46","<http use-expressions=<doubleQuotes46>true<doubleQuotes46>><newline46mondego>    <intercept-url pattern=<doubleQuotes46>/admin*<doubleQuotes46><newline46mondego>        access=<doubleQuotes46>hasRole('admin') and hasIpAddress('192.168.1.0/24')<doubleQuotes46>/><newline46mondego>    ...<newline46mondego></http><newline46mondego>"
"3212splitHere46","12786257splitHere46","/\b([^<>]*?)[.!?]\s/<newline46mondego>"
"3213splitHere46","12786257splitHere46","<newline46mondego>"
"3214splitHere46","12786257splitHere46","<"
"3215splitHere46","12786257splitHere46",">"
"3216splitHere46","12786257splitHere46",".*?"
"3217splitHere46","12786257splitHere46","[^<>]*?"
"3218splitHere46","12786306splitHere46","myList.toArray(new CompositeType[myList.size()]);<newline46mondego>"
"3219splitHere46","12786389splitHere46","itemStateChanged"
"3220splitHere46","12786389splitHere46","itemStatechanged"
"3221splitHere46","12786389splitHere46","itemStateChanged"
"3222splitHere46","12786392splitHere46","String player1Choice = liste.getSelectedValue()<newline46mondego>String player2Choice = liste2.getSelectedValue()<newline46mondego><newline46mondego>if (player1Choice.equals(player2Choice)<newline46mondego>    System.out.println(<doubleQuotes46>Draw<doubleQuotes46>); // Or whatever you want to output to, could be another jLabel<newline46mondego>else if(player1Choice.equals(rock) && player2Choice.equals(paper))<newline46mondego>    System.out.println(<doubleQuotes46>Player 2 wins.<doubleQuotes46>);<newline46mondego><newline46mondego>// And just keep adding on here.....<newline46mondego>"
"3223splitHere46","12786594splitHere46","public class University {<newline46mondego> private String id;<newline46mondego> private String name;<newline46mondego> private String address;<newline46mondego> private List<Student> students;<newline46mondego><newline46mondego> // setters and getters<newline46mondego>}<newline46mondego>"
"3224splitHere46","12786899splitHere46","public synchronized void playTurn(){<newline46mondego>    //code<newline46mondego>}<newline46mondego>"
"3225splitHere46","12786899splitHere46","public void playTurn() {<newline46mondego>    synchronized(this) {<newline46mondego>         //code<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3226splitHere46","12786899splitHere46","private static String turn = <doubleQuotes46><doubleQuotes46>; // must initialize or you ll get an NPE<newline46mondego><newline46mondego>public void playTurn() {<newline46mondego>    synchronized(turn) {<newline46mondego>         //...<newline46mondego>         turn = msg; // (1)<newline46mondego>         //...<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3227splitHere46","12786899splitHere46","thread1 locks on <doubleQuotes46><doubleQuotes46><newline46mondego>thread2 blocks on <doubleQuotes46><doubleQuotes46><newline46mondego>thread1 changes the value of turn variable to <doubleQuotes46>PING<doubleQuotes46> - thread2 can continue since <doubleQuotes46><doubleQuotes46> is no longer locked <newline46mondego>"
"3228splitHere46","12786899splitHere46","try {<newline46mondego>    Thread.currentThread().sleep(1000); // try with 10, 100 also multiple times<newline46mondego> } <newline46mondego> catch (InterruptedException ex) {}<newline46mondego>"
"3229splitHere46","12786899splitHere46","turn = msg;<newline46mondego>"
"3230splitHere46","12786899splitHere46","try {<newline46mondego>    Thread.yield();<newline46mondego>    Thread.currentThread().sleep(1000); //  also  try multiple times<newline46mondego> } <newline46mondego> catch (InterruptedException ex) {}<newline46mondego>"
"3231splitHere46","12786899splitHere46","turn = msg;<newline46mondego>"
"3232splitHere46","12786899splitHere46","public void playTurn() {<newline46mondego>    synchronized(PingPongThread.class) {<newline46mondego>         //code<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3233splitHere46","12786899splitHere46","public static synchronized void playTurn() {<newline46mondego>     //code<newline46mondego> }<newline46mondego>"
"3234splitHere46","12786899splitHere46","public static Object lock = new Object();<newline46mondego><newline46mondego> public void playTurn() {<newline46mondego>    synchronized(lock) {<newline46mondego>         //code<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3235splitHere46","12786995splitHere46","ListLoc insertLoc = new ListLoc();<newline46mondego>insertLoc.findEnd(item);<newline46mondego>"
"3236splitHere46","12786995splitHere46","ListLoc insertLoc = findEnd(item);<newline46mondego>"
"3237splitHere46","12786995splitHere46","findEnd"
"3238splitHere46","12786995splitHere46","ListLoc"
"3239splitHere46","12786995splitHere46","ListLoc"
"3240splitHere46","12786995splitHere46","findEnd"
"3241splitHere46","12786995splitHere46","insertLoc"
"3242splitHere46","12786995splitHere46","insertLoc"
"3243splitHere46","12786995splitHere46","ListLoc"
"3244splitHere46","12786995splitHere46","findEnd"
"3245splitHere46","12786995splitHere46","findItem"
"3246splitHere46","12786995splitHere46","add"
"3247splitHere46","12786995splitHere46","MyList"
"3248splitHere46","12786995splitHere46","MyList.findEnd"
"3249splitHere46","12786995splitHere46","ListLoc.findEnd"
"3250splitHere46","12787060splitHere46","select book from Book book<newline46mondego>where :numberOfTags = (select count(tag.id) from Book book2<newline46mondego>                       inner join book2.tags tag<newline46mondego>                       where book2.id = book.id<newline46mondego>                       and tag in (:tags))<newline46mondego>"
"3251splitHere46","12787060splitHere46","numberOfTags"
"3252splitHere46","12787109splitHere46","String.format()"
"3253splitHere46","12787109splitHere46","StringBuilder"
"3254splitHere46","12787109splitHere46","StringBuffer"
"3255splitHere46","12787109splitHere46","String"
"3256splitHere46","12787109splitHere46","+"
"3257splitHere46","12787109splitHere46","String.replace()"
"3258splitHere46","12787109splitHere46","String.concat()"
"3259splitHere46","12787109splitHere46","public class StringFormatBenchmark extends SimpleBenchmark {<newline46mondego><newline46mondego>    public void timeStringFormat(int reps) {<newline46mondego>        while (--reps >= 0) {<newline46mondego>            String s = String.format(<doubleQuotes46>test %d<doubleQuotes46>, reps);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public void timeStringBuilder(int reps) {<newline46mondego>        while (--reps >= 0) {<newline46mondego>            String s = new StringBuilder(<doubleQuotes46>test <doubleQuotes46>).append(reps).toString();<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public void timeStringBuffer(int reps) {<newline46mondego>        while (--reps >= 0) {<newline46mondego>            String s = new StringBuffer(<doubleQuotes46>test <doubleQuotes46>).append(reps).toString();<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public void timeStringPlusOperator(int reps) {<newline46mondego>        while (--reps >= 0) {<newline46mondego>            String s = <doubleQuotes46>test <doubleQuotes46> + reps;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public void timeReplace(int reps) {<newline46mondego>        while (--reps >= 0) {<newline46mondego>            String s = <doubleQuotes46>test {}<doubleQuotes46>.replace(<doubleQuotes46>{}<doubleQuotes46>, String.valueOf(reps));<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public void timeStringConcat(int reps) {<newline46mondego>        while (--reps >= 0) {<newline46mondego>            String s = <doubleQuotes46>test <doubleQuotes46>.concat(String.valueOf(reps));<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        new Runner().run(StringFormatBenchmark.class.getName());<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"3260splitHere46","12787109splitHere46","String.format()"
"3261splitHere46","12787109splitHere46","StringBuffer"
"3262splitHere46","12787109splitHere46","StringBuilder"
"3263splitHere46","12787109splitHere46","StringBuilder"
"3264splitHere46","12787109splitHere46","String"
"3265splitHere46","12787109splitHere46","+"
"3266splitHere46","12787109splitHere46","String.concat()"
"3267splitHere46","12787109splitHere46","String.replace()"
"3268splitHere46","12787264splitHere46","JTextPane textPane = new JTextPane();<newline46mondego>textPane.setContentType(<doubleQuotes46>text/html<doubleQuotes46>);<newline46mondego>textPane.setText(<doubleQuotes46><html>Some Text Above The Line<hr size=5>Some Text Below</html><doubleQuotes46>);<newline46mondego>"
"3269splitHere46","12787305splitHere46","Process"
"3270splitHere46","12787305splitHere46","UNIXProcess"
"3271splitHere46","12787305splitHere46","WindowsProcess"
"3272splitHere46","12787305splitHere46","arguments"
"3273splitHere46","12787457splitHere46","String display = DateUtils.formatElapsedTime(millisUntilFinished/1000);<newline46mondego>"
"3274splitHere46","12787457splitHere46","timer = new CountDownTimer(playtime,1000){ <newline46mondego>"
"3275splitHere46","12787489splitHere46","File inputFile = new File(<doubleQuotes46>utf-8-data.txt<doubleQuotes46>);<newline46mondego>File outputFile = new File(<doubleQuotes46>latin-1-data.zip<doubleQuotes46>);<newline46mondego><newline46mondego>ZipEntry entry = new ZipEntry(<doubleQuotes46>latin-1-data.txt<doubleQuotes46>);<newline46mondego><newline46mondego>BufferedReader reader = new BufferedReader(new FileReader(inputFile));<newline46mondego><newline46mondego>ZipOutputStream zipStream = new ZipOutputStream(new FileOutputStream(outputFile));<newline46mondego>BufferedWriter writer = new BufferedWriter(<newline46mondego>    new OutputStreamWriter(zipStream, Charset.forName(<doubleQuotes46>ISO-8859-1<doubleQuotes46>))<newline46mondego>);<newline46mondego><newline46mondego>zipStream.putNextEntry(entry);<newline46mondego><newline46mondego>// this is the important part:<newline46mondego>// all character data is written via the writer and not the zip output stream<newline46mondego>String line = null;<newline46mondego>while ((line = reader.readLine()) != null) {<newline46mondego>    writer.append(line).append('\n');<newline46mondego>}<newline46mondego>writer.flush(); // i've used a buffered writer, so make sure to flush to the<newline46mondego>// underlying zip output stream<newline46mondego><newline46mondego>zipStream.closeEntry();<newline46mondego>zipStream.finish();<newline46mondego><newline46mondego>reader.close(); <newline46mondego>writer.close();<newline46mondego>"
"3276splitHere46","12787518splitHere46","getStrokeDashArray().add()"
"3277splitHere46","12787518splitHere46","Line line1 = new Line(20, 40, 270, 40);<newline46mondego>line1.getStrokeDashArray().addAll(25d, 20d, 5d, 20d);<newline46mondego><newline46mondego>Line line2 = new Line(20, 60, 270, 60);<newline46mondego>line2.getStrokeDashArray().addAll(50d, 40d);<newline46mondego><newline46mondego>Line line3 = new Line(20, 80, 270, 80);<newline46mondego>line3.getStrokeDashArray().addAll(25d, 10d);<newline46mondego><newline46mondego>Line line4 = new Line(20, 100, 270, 100);<newline46mondego>line4.getStrokeDashArray().addAll(2d);<newline46mondego><newline46mondego>Line line5 = new Line(20, 120, 270, 120);<newline46mondego>line5.getStrokeDashArray().addAll(2d, 21d);<newline46mondego><newline46mondego>pane.getChildren().addAll(line1, line2, line3, line4, line5);<newline46mondego>"
"3278splitHere46","12787698splitHere46","DateFormat df = new SimpleDateFormat(<doubleQuotes46>M'm'W'w'F'd'H'h'm'm's's'yyyy<doubleQuotes46>);<newline46mondego>System.out.println(df.parse(<doubleQuotes46>5m1w5d3h10m15s<doubleQuotes46>+<doubleQuotes46>2012<doubleQuotes46>));<newline46mondego>"
"3279splitHere46","12787751splitHere46","c.fill = GridBagConstraints.HORIZONTAL;<newline46mondego>    c.insets = new Insets(0, 10, 0, 10); // 10 is the marginal<newline46mondego>"
"3280splitHere46","12787751splitHere46","public static void main(String[] args)<newline46mondego>{<newline46mondego>    news.setEditable(false);<newline46mondego>    news.append(<doubleQuotes46>                        NEWS:\n<doubleQuotes46>);<newline46mondego>    news.setBorder(BorderFactory.createBevelBorder(BevelBorder.RAISED, Color.gray, Color.black));<newline46mondego><newline46mondego>    frame.setLayout(new GridBagLayout());<newline46mondego>    c.fill = GridBagConstraints.VERTICAL;<newline46mondego>    c.weighty = 0.5;<newline46mondego>    c.gridx = 0;<newline46mondego>    c.gridy = 0;<newline46mondego>    c.gridheight = 3;<newline46mondego>    frame.add(news, c);<newline46mondego>    c.fill = GridBagConstraints.HORIZONTAL;<newline46mondego>    c.insets = new Insets(10, 10, 10, 10); // 10 is the marginal<newline46mondego>    c.weightx = 0.5;<newline46mondego>    c.gridx = 1;<newline46mondego>    c.gridheight = 1;<newline46mondego>    frame.add(launchGame, c);<newline46mondego>    c.gridy = 1;<newline46mondego>    frame.add(settings, c);<newline46mondego>    c.gridy = 2;<newline46mondego>    frame.add(exitGame, c);<newline46mondego><newline46mondego>    frame.pack();<newline46mondego>    frame.setVisible(true);<newline46mondego>}<newline46mondego>"
"3281splitHere46","12787751splitHere46","BoxLayout"
"3282splitHere46","12787751splitHere46","private static JComponent buildButtons() {<newline46mondego>    for (JButton button : Arrays.asList(launchGame, settings, exitGame)) {<newline46mondego>        button.setMaximumSize(new Dimension(Short.MAX_VALUE, Short.MAX_VALUE));<newline46mondego>    }<newline46mondego><newline46mondego>    Box b = Box.createVerticalBox();<newline46mondego>    b.add(Box.createVerticalStrut(10));<newline46mondego>    b.add(launchGame);<newline46mondego>    b.add(Box.createVerticalStrut(10));<newline46mondego>    b.add(settings);<newline46mondego>    b.add(Box.createVerticalStrut(10));<newline46mondego>    b.add(exitGame);<newline46mondego>    b.add(Box.createVerticalStrut(10));<newline46mondego><newline46mondego>    return b;<newline46mondego>}<newline46mondego><newline46mondego>static JComponent buildUI() {<newline46mondego>    Box b = Box.createHorizontalBox();<newline46mondego>    b.add(news);<newline46mondego>    b.add(Box.createHorizontalStrut(10));<newline46mondego>    b.add(buildButtons());<newline46mondego>    b.add(Box.createHorizontalStrut(10));<newline46mondego><newline46mondego>    return b;<newline46mondego>}<newline46mondego><newline46mondego>public static void main(String[] args)<newline46mondego>{<newline46mondego>    news.setEditable(false);<newline46mondego>    news.append(<doubleQuotes46>                        NEWS:\n<doubleQuotes46>);<newline46mondego>    news.setBorder(BorderFactory.createBevelBorder(BevelBorder.RAISED, Color.gray, Color.black));<newline46mondego><newline46mondego>    frame.add(buildUI());<newline46mondego>    frame.pack();<newline46mondego>    frame.setVisible(true);<newline46mondego>}<newline46mondego>"
"3283splitHere46","12787864splitHere46","close()"
"3284splitHere46","12787907splitHere46","<f:event>"
"3285splitHere46","12787907splitHere46","@PostConstruct"
"3286splitHere46","12787907splitHere46","@PostConstruct"
"3287splitHere46","12787907splitHere46","FacesServlet"
"3288splitHere46","12787907splitHere46","/WEB-INF/web.xml"
"3289splitHere46","12787907splitHere46","*.jsf"
"3290splitHere46","12787907splitHere46","/page.jsf"
"3291splitHere46","12787907splitHere46","/page.xhtml"
"3292splitHere46","12787907splitHere46","FacesServlet"
"3293splitHere46","12787907splitHere46","*.xhtml"
"3294splitHere46","12787924splitHere46","Matcher.group(1)"
"3295splitHere46","12787924splitHere46","Matcher.group()"
"3296splitHere46","12787924splitHere46","String data = <doubleQuotes46>id: 1 name: Joe age:27 id: 2 name: Mary age:22<doubleQuotes46>;<newline46mondego>Pattern namePtrn = Pattern.compile(<doubleQuotes46>age:(\\w+)<doubleQuotes46>);<newline46mondego>Matcher nameMtchr = namePtrn.matcher(data);<newline46mondego><newline46mondego>while (nameMtchr.find()) {<newline46mondego>   String find = nameMtchr.group(1);<newline46mondego>   System.out.println(<doubleQuotes46>\t<doubleQuotes46> + find);<newline46mondego>}<newline46mondego>"
"3297splitHere46","12787974splitHere46","Dataset"
"3298splitHere46","12787974splitHere46","getOutput(double[])"
"3299splitHere46","12787974splitHere46","getOutput()"
"3300splitHere46","12788083splitHere46","equals(Object)"
"3301splitHere46","12788083splitHere46","public class MyClass {<newline46mondego><newline46mondego>    public boolean equals(MyClass m) {<newline46mondego>        return true;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3302splitHere46","12788083splitHere46","HashSet"
"3303splitHere46","12788083splitHere46","public static void main(String[] args) {<newline46mondego>    Set<MyClass> myClasses = new HashSet<>();<newline46mondego>    myClasses.add(new MyClass());<newline46mondego>    myClasses.add(new MyClass());<newline46mondego>    System.out.println(myClasses.size());<newline46mondego>}<newline46mondego>"
"3304splitHere46","12788083splitHere46","2"
"3305splitHere46","12788083splitHere46","1"
"3306splitHere46","12788083splitHere46","MyClass"
"3307splitHere46","12788083splitHere46","true"
"3308splitHere46","12788083splitHere46","MyClass myClass = new MyClass();<newline46mondego>new MyClass().equals(myClass);<newline46mondego>"
"3309splitHere46","12788083splitHere46","false"
"3310splitHere46","12788083splitHere46","Object o = new MyClass();<newline46mondego>new MyClass().equals(o);<newline46mondego>"
"3311splitHere46","12788083splitHere46","true"
"3312splitHere46","12788083splitHere46","MyClass"
"3313splitHere46","12788083splitHere46","@Override<newline46mondego>public boolean equals(Object o) { ... }<newline46mondego>"
"3314splitHere46","12788083splitHere46","equals"
"3315splitHere46","12788083splitHere46","Object"
"3316splitHere46","12788083splitHere46","public boolean equals(MyClass m) { ... }<newline46mondego>"
"3317splitHere46","12788083splitHere46","HashSet"
"3318splitHere46","12788083splitHere46","equals"
"3319splitHere46","12788083splitHere46","Object"
"3320splitHere46","12788083splitHere46","Object k;<newline46mondego>if (e.hash == hash && ((k = e.key) == key || key.equals(k))) {<newline46mondego>"
"3321splitHere46","12788083splitHere46","HashMap.put"
"3322splitHere46","12788083splitHere46","HashSet.add"
"3323splitHere46","12788083splitHere46","equals"
"3324splitHere46","12788083splitHere46","equals"
"3325splitHere46","12788083splitHere46","@Override"
"3326splitHere46","12788083splitHere46","equals"
"3327splitHere46","12788083splitHere46","equals"
"3328splitHere46","12788083splitHere46","public class MyClass {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean equals(Object o) {<newline46mondego>        return false;<newline46mondego>    }<newline46mondego><newline46mondego>    public boolean equals(MyClass m) {<newline46mondego>        return true;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3329splitHere46","12788083splitHere46","equals"
"3330splitHere46","12788083splitHere46","Object"
"3331splitHere46","12788083splitHere46","public class MyGenericClass<T> {<newline46mondego><newline46mondego>    public boolean equals(T t) {<newline46mondego>        return false;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3332splitHere46","12788083splitHere46","@Override"
"3333splitHere46","12788083splitHere46","public class MyGenericClass<T> {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean equals(T t) {<newline46mondego>        return false;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3334splitHere46","12788083splitHere46","Object"
"3335splitHere46","12788083splitHere46","T"
"3336splitHere46","12788083splitHere46","Object"
"3337splitHere46","12788083splitHere46","list instanceof List<String>"
"3338splitHere46","12788083splitHere46","public class Example<T> {<newline46mondego>    public void add(Object o) { ... }<newline46mondego>    public void add(T t) { ... }<newline46mondego>}<newline46mondego>"
"3339splitHere46","12788083splitHere46","add(T)"
"3340splitHere46","12788083splitHere46","public void add(Object)"
"3341splitHere46","12788135splitHere46","50 * 26KB"
"3342splitHere46","12788135splitHere46","8GB * 80%"
"3343splitHere46","12788440splitHere46","files:Seq[File] = ...<newline46mondego>"
"3344splitHere46","12788440splitHere46","files.par"
"3345splitHere46","12788440splitHere46","files.par.map(readFile).foreach(process)<newline46mondego>"
"3346splitHere46","12788535splitHere46","::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::<newline46mondego>@ECHO OFF<newline46mondego><newline46mondego>:: Export java settings from registry to a temporary file<newline46mondego>START /W REGEDIT /E %Temp%.\java.reg <doubleQuotes46>HKEY_LOCAL_MACHINE\SOFTWARE\JavaSoft<doubleQuotes46><newline46mondego><newline46mondego><newline46mondego><newline46mondego>:: Find java location<newline46mondego>FOR /F <doubleQuotes46>tokens=1* delims==<doubleQuotes46> %%A IN ('TYPE %Temp%.\java.reg ^| FIND <doubleQuotes46>INSTALLDIR<doubleQuotes46>') DO SET JAVA_HOME=%%B<newline46mondego>SET JAVA_HOME=%JAVA_HOME:<doubleQuotes46>=%<newline46mondego>SET JAVA_HOME=%JAVA_HOME:\\=\%<newline46mondego>SET JAVA_HOME<newline46mondego><newline46mondego>:: Get java version<newline46mondego>FOR /F <doubleQuotes46>tokens=1* delims==<doubleQuotes46> %%A IN ('TYPE %Temp%.\java.reg ^| FIND <doubleQuotes46>CurrentVersion<doubleQuotes46>') DO SET JAVA_VERSION=%%B<newline46mondego>SET JAVA_VERSION=%JAVA_VERSION:<doubleQuotes46>=%<newline46mondego>SET JAVA_VERSION<newline46mondego>SET JAVA_VERSION=%JAVA_VERSION:.=%<newline46mondego>SET JAVA_VERSION=%JAVA_VERSION:_=%<newline46mondego>SET /A JAVA_VERSION=%JAVA_VERSION%<newline46mondego><newline46mondego>:: Delete temp file<newline46mondego>@DEL %Temp%.\java.reg /S /Q > NUL 2>&1<newline46mondego><newline46mondego>:: Check java version compatibility<newline46mondego>IF %JAVA_VERSION% LSS 16020 (<newline46mondego>ECHO.<newline46mondego>ECHO YOU NEED AT LEAST JAVA WITH VERSION 1.6.0_20 -- this is just an example echo.<newline46mondego>GOTO :EOF<newline46mondego>)<newline46mondego><newline46mondego>PAUSE<newline46mondego>:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::<newline46mondego>"
"3347splitHere46","12788595splitHere46","game.frame = new JFrame();<newline46mondego>game.frame.setResizable(true);<newline46mondego>...<newline46mondego>"
"3348splitHere46","12788595splitHere46","public Game() {<newline46mondego> this.frame = new JFrame();<newline46mondego> Dimension size = new Dimension(width * scale, height * scale);<newline46mondego> setPreferredSize(size);<newline46mondego>}<newline46mondego>"
"3349splitHere46","12788595splitHere46","main"
"3350splitHere46","12788595splitHere46","public Game() {//base constructor<newline46mondego> this.frame = new JFrame();<newline46mondego> Dimension size = new Dimension(width * scale, height * scale);<newline46mondego> setPreferredSize(size);<newline46mondego>}<newline46mondego><newline46mondego>public Game(JFrame jframe)//injected frame constructor<newline46mondego>{<newline46mondego> this.frame = jframe;<newline46mondego> Dimension size = new Dimension(width * scale, height * scale);<newline46mondego> setPreferredSize(size);<newline46mondego>}<newline46mondego>"
"3351splitHere46","12788595splitHere46","public Game()<newline46mondego>{<newline46mondego> this.ConstructFrame();<newline46mondego> Dimension size = new Dimension(width * scale, height * scale);<newline46mondego> setPreferredSize(size);<newline46mondego>}<newline46mondego><newline46mondego>private void ConstructFrame()<newline46mondego>{<newline46mondego>    this.frame = new JFrame();<newline46mondego>    this.frame.setResizable(true);<newline46mondego>    this.frame.setTitle(<doubleQuotes46>Frytree<doubleQuotes46>);<newline46mondego>    this.frame.add(game);<newline46mondego>    this.frame.pack();<newline46mondego>    this.frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>    this.frame.setLocationRelativeTo(null);<newline46mondego>    this.frame.setVisible(true);<newline46mondego>}<newline46mondego>"
"3352splitHere46","12788660splitHere46","IWorkbench wb = PlatformUI.getWorkbench();<newline46mondego>IWorkbenchWindow activeBenchWindow = wb.getActiveWorkbenchWindow();<newline46mondego>IWorkbenchPage[] pages = activeBenchWindow.getPages();<newline46mondego>IWorkbenchPage page = pages[0];<newline46mondego>IViewPart yourView = page.findView(YourView.ID);<newline46mondego>"
"3353splitHere46","12788765splitHere46","InputStream input = uploadedFile.getInputStream();<newline46mondego>OutputStream output = new FileOutputStream(uniqueImagePath);<newline46mondego>// Now write input to output in a loop the usual way.<newline46mondego>"
"3354splitHere46","12788765splitHere46","InputStream input = new FileInputStream(uniqueImagePath);<newline46mondego>OutputStream output = response.getOutputStream();<newline46mondego>// Now write input to output in a loop the usual way.<newline46mondego>"
"3355splitHere46","12788795splitHere46","Response"
"3356splitHere46","12788795splitHere46","JacksonJsonProvider provider = new JacksonJsonProvider();<newline46mondego>provider.addUntouchable(Response.class);<newline46mondego>providerList.add(provider);         <newline46mondego>webService = JAXRSClientFactory.create(url, IWebService.class, providerList);<newline46mondego>"
"3357splitHere46","12788807splitHere46","public class Updater<T extends IAppendOnlyData> {<newline46mondego>    ...<newline46mondego>    public abstract void processRow(Cluster cluster, T row);<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>public class UserdataUpdater extends Updater<IUserData> {<newline46mondego>    @Override<newline46mondego>    public void processRow(Cluster cluster, IUserData row) {<newline46mondego>        ...<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3358splitHere46","12788890splitHere46","String"
"3359splitHere46","12788890splitHere46","M"
"3360splitHere46","12788890splitHere46","y"
"3361splitHere46","12788890splitHere46","M"
"3362splitHere46","12788890splitHere46","m"
"3363splitHere46","12788890splitHere46","SimpleDateFormat"
"3364splitHere46","12788890splitHere46","1998"
"3365splitHere46","12788890splitHere46","yyyy"
"3366splitHere46","12788890splitHere46","98"
"3367splitHere46","12788890splitHere46","yy"
"3368splitHere46","12788890splitHere46","o' clock"
"3369splitHere46","12788890splitHere46","/"
"3370splitHere46","12788890splitHere46","-"
"3371splitHere46","12788890splitHere46","SimpleDateFormat"
"3372splitHere46","12788890splitHere46","String inputTime = <doubleQuotes46>03-05-2014<doubleQuotes46>;<newline46mondego>String datePattern = <doubleQuotes46>MM-dd-yyyy<doubleQuotes46>;<newline46mondego>SimpleDateFormat dateFormat = new SimpleDateFormat(datePattern);<newline46mondego>Date date = dateFormat.parse(inputTime);<newline46mondego>"
"3373splitHere46","12788914splitHere46","public class WorldGuard extends WorldGuardPlugin<newline46mondego>{<newline46mondego>  public static WorldGuard getFromPlugin(Plugin parent)<newline46mondego>  {<newline46mondego>    return (WorldGuard) parent.getServer().getPluginManager().getPlugin(<doubleQuotes46>WorldGuard<doubleQuotes46>);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"3374splitHere46","12788959splitHere46","ExecutorService service = Executors.newFixedThreadPool(3);<newline46mondego>service.submit(matrixMult1);<newline46mondego>service.submit(matrixMult2); // the objects that do the work<newline46mondego>service.submit(matrixMult3);<newline46mondego><newline46mondego>service.shutdown();<newline46mondego>service.awaitTermination(1, TimeUnit.HOURS);<newline46mondego>"
"3375splitHere46","12789035splitHere46","import java.util.*;<newline46mondego><newline46mondego>class NaryTree {<newline46mondego>    final int data;<newline46mondego>    final List<NaryTree> children;<newline46mondego><newline46mondego>    public NaryTree(int data, NaryTree... children) {<newline46mondego>        this.data = data;<newline46mondego>        this.children = Arrays.asList(children);<newline46mondego>    }<newline46mondego><newline46mondego>    static class InOrderIterator implements Iterator<Integer> {<newline46mondego>        final Queue<NaryTree> queue = new LinkedList<NaryTree>();<newline46mondego><newline46mondego>        public InOrderIterator(NaryTree tree) {<newline46mondego>            queue.add(tree);<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public boolean hasNext() {<newline46mondego>            return !queue.isEmpty();<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public Integer next() {<newline46mondego>            NaryTree node = queue.remove();<newline46mondego>            queue.addAll(node.children);<newline46mondego>            return node.data;<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void remove() {<newline46mondego>            throw new UnsupportedOperationException();<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    Iterable<Integer> inOrderView = new Iterable<Integer>() {<newline46mondego>        @Override<newline46mondego>        public Iterator<Integer> iterator() {<newline46mondego>            return new InOrderIterator(NaryTree.this);<newline46mondego>        } <newline46mondego>    };<newline46mondego>}<newline46mondego>"
"3376splitHere46","12789035splitHere46","public class Test {<newline46mondego>    public static void main(String[] args) throws Exception {<newline46mondego>        NaryTree tree = new NaryTree(100,<newline46mondego>            new NaryTree(90, <newline46mondego>                new NaryTree(20),<newline46mondego>                new NaryTree(30)<newline46mondego>            ), new NaryTree(50, <newline46mondego>                new NaryTree(200),<newline46mondego>                new NaryTree(300)<newline46mondego>            ), new NaryTree(70)<newline46mondego>        );<newline46mondego>        for (int x : tree.inOrderView) {<newline46mondego>            System.out.println(x);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3377splitHere46","12789097splitHere46","InetAddress.getByName()"
"3378splitHere46","12789097splitHere46","String host = url.substring(2).replaceFirst(<doubleQuotes46>/.*<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>InetAddress.getByName(host);<newline46mondego>"
"3379splitHere46","12789211splitHere46","webtv.destroy();<newline46mondego>"
"3380splitHere46","12789211splitHere46","webtv.onPause();<newline46mondego>"
"3381splitHere46","12789216splitHere46","Number n = bool ? 1 : 2.0"
"3382splitHere46","12789216splitHere46","Number n = bool ? new Long(1) : new Double(2.0)"
"3383splitHere46","12789222splitHere46","'\u00B0'"
"3384splitHere46","12789222splitHere46","javacOptions ++= Seq(<doubleQuotes46>-encoding<doubleQuotes46>, <doubleQuotes46>UTF-8<doubleQuotes46>)"
"3385splitHere46","12789222splitHere46","javac"
"3386splitHere46","12789222splitHere46","-encoding UTF-8"
"3387splitHere46","12789222splitHere46","-Dfile.encoding=UTF-8"
"3388splitHere46","12789285splitHere46","int"
"3389splitHere46","12789285splitHere46","fitness2"
"3390splitHere46","12789285splitHere46","double"
"3391splitHere46","12789285splitHere46","+="
"3392splitHere46","12789285splitHere46","int"
"3393splitHere46","12789285splitHere46","double"
"3394splitHere46","12789285splitHere46","double"
"3395splitHere46","12789285splitHere46","int"
"3396splitHere46","12789285splitHere46","int"
"3397splitHere46","12789285splitHere46","long"
"3398splitHere46","12789394splitHere46","HttpServletRequest"
"3399splitHere46","12789394splitHere46","HttpServletRequest.getRequestURL()"
"3400splitHere46","12789448splitHere46","\.(?=[0-9])<newline46mondego>"
"3401splitHere46","12789448splitHere46","Pattern regex = Pattern.compile(<doubleQuotes46>\\.(?=[0-9])<doubleQuotes46>);<newline46mondego>Matcher regexMatcher = regex.matcher(subjectString);<newline46mondego>foundMatch = regexMatcher.find();<newline46mondego>"
"3402splitHere46","12789530splitHere46","fillArc"
"3403splitHere46","12789530splitHere46","g.setColor(Color.yellow);<newline46mondego>  g.fillArc(0,0,150,150,30,300);<newline46mondego>"
"3404splitHere46","12789680splitHere46","import java.awt.BasicStroke;<newline46mondego>import java.awt.Component;<newline46mondego>import java.awt.Dimension;<newline46mondego>import java.awt.Graphics;<newline46mondego>import java.awt.Graphics2D;<newline46mondego>import java.awt.GridBagLayout;<newline46mondego>import java.awt.Stroke;<newline46mondego>import java.awt.event.ActionEvent;<newline46mondego>import java.awt.event.ActionListener;<newline46mondego><newline46mondego>import javax.swing.JComboBox;<newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JList;<newline46mondego>import javax.swing.JOptionPane;<newline46mondego>import javax.swing.JPanel;<newline46mondego>import javax.swing.ListCellRenderer;<newline46mondego>import javax.swing.SwingUtilities;<newline46mondego>import javax.swing.UnsupportedLookAndFeelException;<newline46mondego><newline46mondego>public class TestComboBox {<newline46mondego><newline46mondego>    private static enum LineType {<newline46mondego><newline46mondego>        PLAIN {<newline46mondego>            @Override<newline46mondego>            public Stroke getStroke() {<newline46mondego>                return new BasicStroke(1.0f, BasicStroke.CAP_SQUARE, BasicStroke.JOIN_MITER, 1.0f, new float[] { 1.0f }, 1);<newline46mondego>            }<newline46mondego>        },<newline46mondego>        DOTTED {<newline46mondego>            @Override<newline46mondego>            public Stroke getStroke() {<newline46mondego>                return new BasicStroke(1.0f, BasicStroke.CAP_SQUARE, BasicStroke.JOIN_MITER, 1.0f, new float[] { 0.1f, 5.0f }, 1);<newline46mondego>            }<newline46mondego><newline46mondego>        },<newline46mondego>        DASHED {<newline46mondego>            @Override<newline46mondego>            public Stroke getStroke() {<newline46mondego>                return new BasicStroke(1.0f, BasicStroke.CAP_SQUARE, BasicStroke.JOIN_MITER, 1.0f, new float[] { 3.0f, 3.0f }, 1);<newline46mondego>            }<newline46mondego><newline46mondego>        };<newline46mondego>        public abstract Stroke getStroke();<newline46mondego>    }<newline46mondego><newline46mondego>    public class LineRenderer extends JPanel implements ListCellRenderer {<newline46mondego>        private LineType value;<newline46mondego><newline46mondego>        @Override<newline46mondego>        public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {<newline46mondego>            if (value instanceof LineType) {<newline46mondego>                setLineType((LineType) value);<newline46mondego>            } else {<newline46mondego>                setLineType(null);<newline46mondego>            }<newline46mondego>            return this;<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        protected void paintComponent(Graphics g) {<newline46mondego>            super.paintComponent(g);<newline46mondego>            Graphics2D g2d = (Graphics2D) g;<newline46mondego>            if (value != null) {<newline46mondego>                g2d.setStroke(value.getStroke());<newline46mondego>                g.drawLine(0, getHeight() / 2, getWidth(), getHeight() / 2);<newline46mondego>            }<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>        private void setLineType(LineType value) {<newline46mondego>            this.value = value;<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public Dimension getPreferredSize() {<newline46mondego>            return new Dimension(50, 20);<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    protected void initUI() {<newline46mondego>        final JFrame frame = new JFrame(TestComboBox.class.getSimpleName());<newline46mondego>        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        JPanel panel = new JPanel(new GridBagLayout());<newline46mondego>        final JComboBox comboBox = new JComboBox(LineType.values());<newline46mondego>        comboBox.setRenderer(new LineRenderer());<newline46mondego>        comboBox.setSelectedItem(null);<newline46mondego>        comboBox.addActionListener(new ActionListener() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void actionPerformed(ActionEvent e) {<newline46mondego>                SwingUtilities.invokeLater(new Runnable() {<newline46mondego><newline46mondego>                    @Override<newline46mondego>                    public void run() {<newline46mondego>                        JOptionPane.showMessageDialog(comboBox, <doubleQuotes46>You have selected <doubleQuotes46> + comboBox.getSelectedItem());<newline46mondego>                    }<newline46mondego>                });<newline46mondego>            }<newline46mondego>        });<newline46mondego>        panel.add(comboBox);<newline46mondego>        frame.add(panel);<newline46mondego>        frame.setSize(300, 100);<newline46mondego>        frame.setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) throws ClassNotFoundException, InstantiationException, IllegalAccessException,<newline46mondego>            UnsupportedLookAndFeelException {<newline46mondego>        SwingUtilities.invokeLater(new Runnable() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                new TestComboBox().initUI();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3405splitHere46","12789775splitHere46","int mostWins = teams.get(0).getWins();<newline46mondego><newline46mondego>// Find the team with the most wins<newline46mondego>for(Team team : teams) {<newline46mondego>    if (team.getWins() > mostWins) {<newline46mondego>        teamWithMostWins = team;<newline46mondego>        mostWins = team.getWins(); // <--- Update the most wins every time you find a team with more wins<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3406splitHere46","12789805splitHere46","synchronized"
"3407splitHere46","12789805splitHere46","map1"
"3408splitHere46","12789805splitHere46","map2"
"3409splitHere46","12789805splitHere46","doSomething"
"3410splitHere46","12789805splitHere46","putIfAbsent"
"3411splitHere46","12789915splitHere46","Array.newInstance(...)"
"3412splitHere46","12789915splitHere46","arr1.getClass()"
"3413splitHere46","12789915splitHere46","arr1.getClass().getComponentType()<newline46mondego>"
"3414splitHere46","12789915splitHere46","String"
"3415splitHere46","12789915splitHere46","String[]"
"3416splitHere46","12789915splitHere46","static Object newInstance(Class<?> componentType, int[] dimensions) <newline46mondego>"
"3417splitHere46","12789929splitHere46","user.dir"
"3418splitHere46","12789929splitHere46","/Users/yv/Documents/Eclipse-workspace/InputParser/bin/test.txt<newline46mondego>"
"3419splitHere46","12789929splitHere46","bin/test.txt<newline46mondego>"
"3420splitHere46","12789929splitHere46","user.dir"
"3421splitHere46","12789943splitHere46","doGet()"
"3422splitHere46","12789943splitHere46","doPost()"
"3423splitHere46","12789943splitHere46","async"
"3424splitHere46","12789943splitHere46","RateLimiter"
"3425splitHere46","12789947splitHere46","this.setBackground(new Color(50, 50, 50, 50));<newline46mondego>"
"3426splitHere46","12789947splitHere46","this.setBackground(new Color(50, 50, 50, 0));<newline46mondego>"
"3427splitHere46","12789993splitHere46","again"
"3428splitHere46","12789993splitHere46","while (!again.equals(<doubleQuotes46>N<doubleQuotes46>) && !again.equals(<doubleQuotes46>n<doubleQuotes46>) ...<newline46mondego>"
"3429splitHere46","12789993splitHere46",".equals()"
"3430splitHere46","12790015splitHere46","Platform.isFxApplicationThread();<newline46mondego>"
"3431splitHere46","12790050splitHere46","FileSystem"
"3432splitHere46","12790050splitHere46","...<newline46mondego>Configuration conf = new Configuration();<newline46mondego>conf.addResource(new Path(<doubleQuotes46>/home/user/hadoop/conf/core-site.xml<doubleQuotes46>));<newline46mondego>conf.addResource(new Path(<doubleQuotes46>/home/user/hadoop/conf/hdfs-site.xml<doubleQuotes46>));<newline46mondego><newline46mondego>FileSystem fs = FileSystem.get(conf);<newline46mondego>fs.copyFromLocalFile(new Path(<doubleQuotes46>/home/user/directory/<doubleQuotes46>), <newline46mondego>  new Path(<doubleQuotes46>/user/hadoop/dir<doubleQuotes46>));<newline46mondego>...   <newline46mondego>"
"3433splitHere46","12790105splitHere46","String expectedTag = <doubleQuotes46>en-US<doubleQuotes46>;<newline46mondego>Locale locale = Locale.forLanguageTag( expectedTag );<newline46mondego>String actualTag = locale.toLanguageTag();<newline46mondego>Assert.assertEquals( expectedTag, actualTag );<newline46mondego>"
"3434splitHere46","12790115splitHere46","glDrawArrays/glDrawElements"
"3435splitHere46","12790115splitHere46","foreach (Object obj in List<Object>) {<newline46mondego>    setupVertexAttributes(obj.attributes);   //setup the attributes (VBOs)<newline46mondego>    uploadMatrix(obj.matrix);                //set the matrix<newline46mondego>    glDrawElements(obj.indices);             //draw the object<newline46mondego><newline46mondego>}<newline46mondego>"
"3436splitHere46","12790178splitHere46","HashSet"
"3437splitHere46","12790178splitHere46","x"
"3438splitHere46","12790178splitHere46","y"
"3439splitHere46","12790178splitHere46","x.removeAll(y)"
"3440splitHere46","12790178splitHere46","x.removeAll(new HashSet(y))"
"3441splitHere46","12790178splitHere46","x"
"3442splitHere46","12790178splitHere46","List"
"3443splitHere46","12790178splitHere46","contains"
"3444splitHere46","12790178splitHere46","x"
"3445splitHere46","12790178splitHere46","y"
"3446splitHere46","12790178splitHere46","HashSet xx = new HashSet(x), yy = HashSet(y); x.removeAll(y); y.removeAll(x);"
"3447splitHere46","12790247splitHere46","PDU_RSC_DATA pRscData = new PDU_RSC_DATA();<newline46mondego>    pRscData.BusTypeId = 1;<newline46mondego>    pRscData.ProtocolId = 7;<newline46mondego>    pRscData.NumPinData = 2; <newline46mondego><newline46mondego>    PDU_PIN_DATA pDLCPinData = new PDU_PIN_DATA();<newline46mondego><newline46mondego>    PDU_PIN_DATA[] pDLCPinDataArray= (PDU_PIN_DATA[])pDLCPinData.toArray(pRscData.NumPinData);<newline46mondego><newline46mondego>    pDLCPinDataArray[0].DLCPinNumber = 6;<newline46mondego>    pDLCPinDataArray[0].DLCPinTypeId = 1;<newline46mondego>    pDLCPinDataArray[1].DLCPinNumber = 14;<newline46mondego>    pDLCPinDataArray[1].DLCPinTypeId = 2;<newline46mondego><newline46mondego>    pDLCPinData.autoWrite();<newline46mondego><newline46mondego>    Pointer ptr_pDLCPinData = pDLCPinData.getPointer();<newline46mondego>    pRscData.pDLCPinData = ptr_pDLCPinData;<newline46mondego>"
"3448splitHere46","12790316splitHere46","bankStatement[i] = (iA*(Math.pow((1+(gR)), (i++))));<newline46mondego>"
"3449splitHere46","12790316splitHere46","i++"
"3450splitHere46","12790316splitHere46","i"
"3451splitHere46","12790316splitHere46","bankStatement[i] = (iA*(Math.pow((1+(gR)), i + 1)));<newline46mondego>"
"3452splitHere46","12790316splitHere46","bankStatement[i] = iA * Math.pow(1 + gR, i + 1);<newline46mondego>"
"3453splitHere46","12790316splitHere46","i + 1"
"3454splitHere46","12790316splitHere46","i"
"3455splitHere46","12790316splitHere46","Math.pow"
"3456splitHere46","12790316splitHere46","iA"
"3457splitHere46","12790316splitHere46","bankStatement[i-1]"
"3458splitHere46","12790316splitHere46","bankStatement[i]"
"3459splitHere46","12790336splitHere46","public class Anything {<newline46mondego>    public static void main ...<newline46mondego><newline46mondego>    public static void printPyramid ...<newline46mondego>}<newline46mondego>"
"3460splitHere46","12790336splitHere46","printPyramid"
"3461splitHere46","12790336splitHere46","public class Anything {<newline46mondego>    public static void main ... {<newline46mondego>         ...<newline46mondego>         printPyramid (numLines);<newline46mondego>         ...<newline46mondego>    }<newline46mondego><newline46mondego>    public static void printPyramid ...<newline46mondego>}<newline46mondego>"
"3462splitHere46","12790360splitHere46","objectIn.close();"
"3463splitHere46","12790407splitHere46","public String date = null;<newline46mondego>public String supplier = null;<newline46mondego>public String description = null;<newline46mondego>public float amount = 0.00f;<newline46mondego>public boolean receipt = false;<newline46mondego>"
"3464splitHere46","12790407splitHere46","public String date;<newline46mondego>public String supplier;<newline46mondego>public String description;<newline46mondego>public float amount;<newline46mondego>public boolean receipt;<newline46mondego>"
"3465splitHere46","12790493splitHere46","BSTSetIterator();<newline46mondego>"
"3466splitHere46","12790493splitHere46","BSTSetIterator iterator = new BSTSetIterator(tree.getRoot());<newline46mondego>"
"3467splitHere46","12790493splitHere46","public BSTNode getRoot()<newline46mondego>{<newline46mondego>    return this.root;<newline46mondego>}<newline46mondego>"
"3468splitHere46","12790493splitHere46","public BSTSetIterator(BSTNode root) {<newline46mondego>         return new BSTSetIterator();<newline46mondego>    }<newline46mondego>"
"3469splitHere46","12790493splitHere46","public BSTSetIterator(BSTNode root)<newline46mondego>{<newline46mondego>    this.current = root;<newline46mondego>}<newline46mondego>"
"3470splitHere46","12790493splitHere46","private BSTNode current = root;<newline46mondego>"
"3471splitHere46","12790493splitHere46","private BSTNode current;<newline46mondego>"
"3472splitHere46","12790493splitHere46","BSTNode next = null;<newline46mondego>"
"3473splitHere46","12790493splitHere46","public E next()<newline46mondego>"
"3474splitHere46","12790493splitHere46","return next;<newline46mondego>"
"3475splitHere46","12790659splitHere46","public class ServerManager implements Runnable {<newline46mondego>  public static final String IS_RUNNING = <doubleQuotes46>is running<doubleQuotes46>; // for the Event's name<newline46mondego>  private SwingPropertyChangeSupport propChngSupport = new SwingPropertyChangeSupport(this);<newline46mondego>  private volatile boolean isRunning  = false;<newline46mondego>  // other variables<newline46mondego><newline46mondego>  // addPropertyChangeListener(...) {...} goes here<newline46mondego>  // removePropertyChangeListener(...)  {...} goes here<newline46mondego><newline46mondego>  public void setIsRunning(boolean isRunning) {<newline46mondego>    boolean newValue = isRunning;<newline46mondego>    boolean oldValue = this.isRunning;<newline46mondego>    this.isRunning = isRunning;<newline46mondego>    propChngSupport.firePropertyChange(IS_RUNNING, oldValue, newValue);    <newline46mondego>  }<newline46mondego><newline46mondego>  public void run() {<newline46mondego>    // ....<newline46mondego>  }<newline46mondego><newline46mondego>  // other methods<newline46mondego>}<newline46mondego>"
"3476splitHere46","12790721splitHere46","add"
"3477splitHere46","12790721splitHere46","AST"
"3478splitHere46","12790721splitHere46","block"
"3479splitHere46","12790721splitHere46","MethodDeclaration"
"3480splitHere46","12790721splitHere46","hello()"
"3481splitHere46","12790721splitHere46","block.statements().add(position, ASTNode.copySubtree(bl.getAST(), bl));<newline46mondego>"
"3482splitHere46","12790721splitHere46","ASTNode singleStmt = (ASTNode) bl.statements().get(0);<newline46mondego>block.statements().add(position, ASTNode.copySubtree(bl.getAST(), singleStmt));<newline46mondego>"
"3483splitHere46","12790721splitHere46","for (int i = 0; i < bl.statements().size(); i++) {<newline46mondego>     ASTNode singleStmt = (ASTNode) bl.statements().get(i);<newline46mondego>     block.statements().add(position + i,<newline46mondego>         ASTNode.copySubtree(bl.getAST(), singleStmt));<newline46mondego>}<newline46mondego>"
"3484splitHere46","12790816splitHere46","i.putExtras(<doubleQuotes46>param1<doubleQuotes46>, ((HashMap<String, Object>) adapter.getItem(position)));<newline46mondego>"
"3485splitHere46","12790816splitHere46","Bundle#putExtras(Bundle bundle)"
"3486splitHere46","12790822splitHere46","ImmutableClassToInstanceMap"
"3487splitHere46","12790822splitHere46","ImmutableClassToInstanceMap<Object> map = ImmutableClassToInstanceMap<newline46mondego>  .builder()<newline46mondego>  .put(String.class, <doubleQuotes46>foo<doubleQuotes46>)<newline46mondego>  .put(Integer.class, 42)<newline46mondego>  .build();<newline46mondego>"
"3488splitHere46","12790822splitHere46","map.getInstance(String.class)"
"3489splitHere46","12790822splitHere46","String"
"3490splitHere46","12790822splitHere46","copyOf()"
"3491splitHere46","12790863splitHere46","{<newline46mondego> ....<newline46mondego> getHash hashThread =  new getHash(this);<newline46mondego> hashThread.execute(new String[] {<doubleQuotes46>http://www.full.path/to/the/file.hash<doubleQuotes46>});<newline46mondego> return; // ok now we just have to wait for it to finish ... can't read it until then<newline46mondego>}<newline46mondego><newline46mondego>// Separate callback method<newline46mondego>public void onHashComplete(String hash) {<newline46mondego><newline46mondego>   if(hash != null && !hash.equals(localHash)) {<newline46mondego>      ....<newline46mondego>   }<newline46mondego>   ....<newline46mondego> }<newline46mondego>"
"3492splitHere46","12790863splitHere46","public String doInBackground(String[] params) {<newline46mondego>    .... // don't set hash here ... it will work but you will probably read it at the wrong time.<newline46mondego>    return str;<newline46mondego>}<newline46mondego><newline46mondego>public void onPostExecute(String str) {<newline46mondego>    onHashComplete(str); // or just do all the work in here since it is a private inner class<newline46mondego>}<newline46mondego>"
"3493splitHere46","12790863splitHere46","doInBackground()"
"3494splitHere46","12790863splitHere46","onPostExecute()"
"3495splitHere46","12790863splitHere46","execute()"
"3496splitHere46","12790863splitHere46","onPostCreate()"
"3497splitHere46","12790863splitHere46","execute()"
"3498splitHere46","12790906splitHere46","JProgressBar"
"3499splitHere46","12790906splitHere46","MouseListener"
"3500splitHere46","12790906splitHere46","Timer"
"3501splitHere46","12790906splitHere46","MouseEvent"
"3502splitHere46","12790995splitHere46","..<newline46mondego>@WebService(targetNamespace = <doubleQuotes46>@WS_NAMESPACE@<doubleQuotes46>)<newline46mondego>public class CustomerWebService {<newline46mondego>..<newline46mondego>"
"3503splitHere46","12790995splitHere46","<target name=<doubleQuotes46>filter-sources<doubleQuotes46>><newline46mondego>    <copy todir=<doubleQuotes46>${build.dir}/src<doubleQuotes46>><newline46mondego>       <fileset dir=<doubleQuotes46>src/templates<doubleQuotes46> includes=<doubleQuotes46>**/*.java<doubleQuotes46>/><newline46mondego>       <filterset><newline46mondego>          <filter token=<doubleQuotes46>WS_NAMESPACE<doubleQuotes46> value=<doubleQuotes46>${ws.namespace}<doubleQuotes46>/><newline46mondego>       </filterset><newline46mondego>    </copy><newline46mondego></target><newline46mondego><newline46mondego><target name=<doubleQuotes46>compile<doubleQuotes46> depends=<doubleQuotes46>filter-sources<doubleQuotes46>><newline46mondego>    <javac destdir=<doubleQuotes46>${build.dir}/classes<doubleQuotes46>><newline46mondego>        <src path=<doubleQuotes46>src/java<doubleQuotes46>/><newline46mondego>        <src path=<doubleQuotes46>${build.dir}/src<doubleQuotes46>/><newline46mondego>        <classpath><newline46mondego>        ..<newline46mondego>        ..<newline46mondego>    </javac><newline46mondego></target><newline46mondego>"
"3504splitHere46","12790995splitHere46","src/properties/dev.properties<newline46mondego>src/properties/qa.properties<newline46mondego>src/properties/prod.properties<newline46mondego>..<newline46mondego>"
"3505splitHere46","12790995splitHere46","<property name=<doubleQuotes46>profile<doubleQuotes46> value=<doubleQuotes46>dev<doubleQuotes46>/><newline46mondego><property file=<doubleQuotes46>src/properties/${profile}.properties<doubleQuotes46>/><newline46mondego>"
"3506splitHere46","12790995splitHere46","ant -Dprofile=qa ..<newline46mondego>"
"3507splitHere46","12791011splitHere46","size = (n + 31) >> 5<newline46mondego>"
"3508splitHere46","12791011splitHere46","size"
"3509splitHere46","12791011splitHere46","ceiling(n/32)"
"3510splitHere46","12791011splitHere46","n"
"3511splitHere46","12791011splitHere46","n"
"3512splitHere46","12791011splitHere46","n"
"3513splitHere46","12791105splitHere46","IWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot();<newline46mondego>IProject project = root.getProject(<doubleQuotes46>someJavaProject<doubleQuotes46>);<newline46mondego>project.open(null /* IProgressMonitor */);<newline46mondego><newline46mondego>IJavaProject javaProject = JavaCore.create(project);<newline46mondego>"
"3514splitHere46","12791105splitHere46","setProject"
"3515splitHere46","12791105splitHere46","private static CompilationUnit createCompilationUnit(String sourceFile,<newline46mondego>        IJavaProject javaProject) {<newline46mondego>    String source = readWithStringBuilder(sourceFile);<newline46mondego>    ASTParser parser = ASTParser.newParser(AST.JLS3); <newline46mondego>    parser.setKind(ASTParser.K_COMPILATION_UNIT);<newline46mondego>    parser.setSource(source.toCharArray()); // set source<newline46mondego>    parser.setProject(javaProject);<newline46mondego>    parser.setResolveBindings(true); // we need bindings later on<newline46mondego>    return (CompilationUnit) parser.createAST(null /* IProgressMonitor */); // parse<newline46mondego>"
"3516splitHere46","12791165splitHere46",".*"
"3517splitHere46","12791165splitHere46","\S*"
"3518splitHere46","12791165splitHere46","?"
"3519splitHere46","12791165splitHere46","\b"
"3520splitHere46","12791165splitHere46","\s"
"3521splitHere46","12791165splitHere46","(http://(bit\.ly|t\.co|lnkd\.in|tcrn\.ch)\S*)\b<newline46mondego>"
"3522splitHere46","12791170splitHere46","^[\s,]*(.+?)[\s,]*$"
"3523splitHere46","12791170splitHere46","^"
"3524splitHere46","12791170splitHere46","matches()"
"3525splitHere46","12791170splitHere46","[\s,]*"
"3526splitHere46","12791170splitHere46","(.+?)"
"3527splitHere46","12791170splitHere46","[\s,]*"
"3528splitHere46","12791170splitHere46","^"
"3529splitHere46","12791170splitHere46","$"
"3530splitHere46","12791170splitHere46","find()"
"3531splitHere46","12791170splitHere46","matches()"
"3532splitHere46","12791170splitHere46","[\s,]"
"3533splitHere46","12791170splitHere46","[ ,]"
"3534splitHere46","12791170splitHere46","Pattern pattern = Pattern.compile(<doubleQuotes46>^[\\s,]*(.+?)[\\s,]*$<doubleQuotes46>);<newline46mondego>Matcher matcher = pattern.matcher(<doubleQuotes46>, ,, ,,, , , Hello, my lovely, world, ,, ,<doubleQuotes46>);<newline46mondego>if (!matcher.matches())<newline46mondego>    return null;<newline46mondego>return matcher.group(1); // <doubleQuotes46>Hello, my lovely, world<doubleQuotes46><newline46mondego>"
"3535splitHere46","12791393splitHere46","Collection<Callable> tasks = <get all sub tasks>;<newline46mondego>executorService.invokeAll(tasks);<newline46mondego>// Execution proceeds at the following line only once all <doubleQuotes46>tasks<doubleQuotes46> have been run<newline46mondego>"
"3536splitHere46","12791393splitHere46","Runnable"
"3537splitHere46","12791393splitHere46","Callable"
"3538splitHere46","12791393splitHere46","ExecutorService.submit(Runnable)"
"3539splitHere46","12791393splitHere46","for (Runnable task:tasks) {<newline46mondego>    futures.add(executorService.submit(task));<newline46mondego>}<newline46mondego><newline46mondego>for (Future<Void> result:futures) {<newline46mondego>    result.get();<newline46mondego>}<newline46mondego>"
"3540splitHere46","12791397splitHere46","a = length * sin(θ)<newline46mondego>b = length * cos(θ)<newline46mondego>"
"3541splitHere46","12791397splitHere46","public void drawY(int level, double length)<newline46mondego>{<newline46mondego>    //Drawing the bottom <doubleQuotes46>leg<doubleQuotes46> of our Y shape<newline46mondego>    Move Forward length/2<newline46mondego>    Save our position <newline46mondego>    Save our direction<newline46mondego><newline46mondego>    Turn to the right 90 degrees<newline46mondego>    Recursion (call drawY())<newline46mondego><newline46mondego>    revert to original location<newline46mondego>    revert to original direction<newline46mondego>    move forward length/2 (to go to center point of Y)<newline46mondego><newline46mondego>    save our new position<newline46mondego>    save our new direction <newline46mondego><newline46mondego>    //Drawing upper Right Leg<newline46mondego>    Turn 60 to the right<newline46mondego>    Move Forward length/2 //going to the midpoint<newline46mondego>    save our new position (don't forget the center point)<newline46mondego>    save our new direction (don't forget the center point direction)<newline46mondego>    Turn 90 to the left<newline46mondego>    Recursion (call drawY())<newline46mondego><newline46mondego>    return to our saved position (not center one)<newline46mondego>    return to our saved direction (not center one)<newline46mondego><newline46mondego>    move forward length/2<newline46mondego><newline46mondego>    //drawing upper left leg<newline46mondego>    return to center point<newline46mondego>    return to center direction<newline46mondego><newline46mondego>    turn left 60 <newline46mondego>    move forward length/2<newline46mondego>    save position (you can overwrite the center one now<newline46mondego>    save direction (you can overwrite)<newline46mondego><newline46mondego>    turn left 90<newline46mondego>    Recursion (call drawY())<newline46mondego><newline46mondego>    return to position<newline46mondego>    return to direction<newline46mondego>    move forward length/2<newline46mondego>}<newline46mondego>"
"3542splitHere46","12791528splitHere46","SecureRandom"
"3543splitHere46","12791528splitHere46","SecureRandom"
"3544splitHere46","12791528splitHere46","salt"
"3545splitHere46","12791528splitHere46","salt"
"3546splitHere46","12791605splitHere46","ExceptionA"
"3547splitHere46","12791605splitHere46","public class ExceptionA extends Exception {<newline46mondego><newline46mondego>        public ExceptionA(String message){<newline46mondego>            super(message);<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"3548splitHere46","12791605splitHere46","ExceptionB"
"3549splitHere46","12791605splitHere46","public class ExceptionB extends ExceptionA {<newline46mondego><newline46mondego>        public ExceptionB(String message){<newline46mondego>            super(message);<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"3550splitHere46","12791605splitHere46","ExceptionC"
"3551splitHere46","12791605splitHere46","public class ExceptionC extends ExceptionB {<newline46mondego><newline46mondego>        public ExceptionC(String message){<newline46mondego>            super(message);<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"3552splitHere46","12791605splitHere46","TestException"
"3553splitHere46","12791605splitHere46","ExceptionB"
"3554splitHere46","12791605splitHere46","ExceptionC"
"3555splitHere46","12791605splitHere46","ExceptionA"
"3556splitHere46","12791605splitHere46","public class TestException {<newline46mondego><newline46mondego>        public static void main(String[] args){<newline46mondego><newline46mondego>            try{<newline46mondego>                getExceptionB();<newline46mondego>            }catch(ExceptionA ea){<newline46mondego>                ea.printStackTrace();<newline46mondego>            }<newline46mondego><newline46mondego>            try{<newline46mondego>                getExceptionC();<newline46mondego>            }catch(ExceptionA ea){<newline46mondego>                ea.printStackTrace();<newline46mondego>            }<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>        public static void  getExceptionB() throws ExceptionB{<newline46mondego>            throw new ExceptionB(<doubleQuotes46>Exception B<doubleQuotes46>);<newline46mondego>        }<newline46mondego><newline46mondego>        public static void  getExceptionC() throws ExceptionC{<newline46mondego>            throw new ExceptionC(<doubleQuotes46>Exception C<doubleQuotes46>);<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego>"
"3557splitHere46","12791610splitHere46","while(true) {<newline46mondego>        // don't forget to make num final!<newline46mondego>        final int num = 25 + (int)(Math.random() * ((40 - 30) + 1));<newline46mondego>        System.out.println(num);<newline46mondego>        SwingUtilities.invokeLater(new Runnable(){<newline46mondego>          public void run() {<newline46mondego>            ts.addOrUpdate(new Millisecond(), num);                <newline46mondego>          }<newline46mondego>        });<newline46mondego>        // ts.addOrUpdate(new Millisecond(), num);<newline46mondego>        System.out.println(<doubleQuotes46>HI<doubleQuotes46>);<newline46mondego>        try {<newline46mondego>            Thread.sleep(20);<newline46mondego>        }<newline46mondego>        catch (InterruptedException ex) {<newline46mondego>            System.out.println(ex);<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"3558splitHere46","12791683splitHere46","defaultHost"
"3559splitHere46","12791683splitHere46","hostname"
"3560splitHere46","12791683splitHere46","conf/server.xml"
"3561splitHere46","12791683splitHere46","<Engine ... defaultHost=<doubleQuotes46>myserver<doubleQuotes46>><newline46mondego>"
"3562splitHere46","12791683splitHere46","<Host ... name=<doubleQuotes46>myserver<doubleQuotes46>><newline46mondego>"
"3563splitHere46","12791683splitHere46","jvmRoute"
"3564splitHere46","12791683splitHere46","<Engine ... jvmRoute=<doubleQuotes46>instance1<doubleQuotes46>><newline46mondego>"
"3565splitHere46","12791683splitHere46","JSESSIONID"
"3566splitHere46","12791683splitHere46","C85262796BE5F656BD8EF58A96F03C96.instance1<newline46mondego>"
"3567splitHere46","12791873splitHere46","Future<MyTask>future = taskExecutor.submit(myTask)<newline46mondego>try {<newline46mondego>    future.get(5,TimeUnit.Seconds);<newline46mondego>    ...<newline46mondego>    }<newline46mondego>    catch (Exception e)<newline46mondego>    {<newline46mondego>        future.cancel(true); // attempt to interupt the thread<newline46mondego>        throw new Exception();<newline46mondego>    }<newline46mondego>"
"3568splitHere46","12791894splitHere46","public static String genString(char first, int len) {<newline46mondego>    String s = <doubleQuotes46><doubleQuotes46>;<newline46mondego>    for (int i = 1 ; i < len ; i++)<newline46mondego>        s += (char)(Math.random() * ('Z' - 'A' + 1) + 'A');<newline46mondego>    return first + s;<newline46mondego>}<newline46mondego>"
"3569splitHere46","12791894splitHere46","System.out.println(genString('A', 4));<newline46mondego>"
"3570splitHere46","12792063splitHere46","your real constructor has more arguments"
"3571splitHere46","12792063splitHere46","public abstract class BodyPart {<newline46mondego>  private String name;<newline46mondego>  private String color;<newline46mondego>      ......<newline46mondego>      ......<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>public class DrawablePart extends BodyPart {<newline46mondego><newline46mondego>    public DrawablePart(){<newline46mondego>        super();<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public class ContainerPart extends BodyPart {<newline46mondego><newline46mondego>    public ContainerPart(String name, String color, int xCoord, int yCoord, BodyPart[] yourParts){<newline46mondego>        super(......);<newline46mondego>        ...........<newline46mondego>     }<newline46mondego>}<newline46mondego><newline46mondego>public class Legs extends DrawablePart {<newline46mondego><newline46mondego>    public Legs(){<newline46mondego>        super();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3572splitHere46","12792063splitHere46","LowerBody"
"3573splitHere46","12792063splitHere46","public class LowerBody extends ContainerPart {<newline46mondego><newline46mondego>    public LowerBody(Legs[] legs, Feet[] feet, String name, String color, int xCoord, int yCoord){<newline46mondego>         super(name, color,xCoord, yCoord, legs);<newline46mondego>         ........<newline46mondego>         .......<newline46mondego>    }<newline46mondego><newline46mondego>    public LowerBody(Legs leg, Feet feet, String name, String color, int xCoord, int yCoord){<newline46mondego>        super(name, color,xCoord, yCoord, new BodyPart[]{leg, feet});<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3574splitHere46","12792174splitHere46",".class"
"3575splitHere46","12792174splitHere46",".java"
"3576splitHere46","12792174splitHere46",".class"
"3577splitHere46","12792242splitHere46","private void addNodes(ErdosStruct erdosStruct, DefaultTreeModel tModel) {<newline46mondego>    if (erdosStruct.getRoot().getCoAuthCount() == 0) {<newline46mondego>        return;<newline46mondego>    } else {<newline46mondego>        AuthNode node = erdosStruct.getRoot();<newline46mondego>        addNodes(node, tModel, (MutableTreeNode) tModel.getRoot());<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>protected void addNodes(AuthNode node, DefaultTreeModel tModel, MutableTreeNode parent) {<newline46mondego>    if (node != null) {<newline46mondego>        MutableTreeNode newParent = new DefaultMutableTreeNode(node);<newline46mondego>        tModel.insertNodeInto(newParent, parent, parent.getChildCount() - 1);<newline46mondego>        for (int index = 0; index < node.getCoAuthCount(); index++) {<newline46mondego>            AuthNode child = node.getCoAuth(index);<newline46mondego>            addNodes(child, tModel, newParent);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3578splitHere46","12792302splitHere46","enum"
"3579splitHere46","12792302splitHere46","enum"
"3580splitHere46","12792302splitHere46","public enum Color{<newline46mondego> RED(<doubleQuotes46>Red<doubleQuotes46>), Green(<doubleQuotes46>Green<doubleQuotes46>);<newline46mondego><newline46mondego> private Color(String color){<newline46mondego>    this.color = color;<newline46mondego>  }<newline46mondego><newline46mondego>  private String color;<newline46mondego><newline46mondego>  public String getColor(){<newline46mondego>    return this.color;<newline46mondego>  }<newline46mondego><newline46mondego>  public String toString(){<newline46mondego>    return this.color;<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"3581splitHere46","12792302splitHere46","public enum Color{<newline46mondego> RED(<doubleQuotes46>Red<doubleQuotes46>), Green(<doubleQuotes46>Green<doubleQuotes46>);<newline46mondego><newline46mondego> private Color(String color){<newline46mondego>    this.color = color;<newline46mondego>  }<newline46mondego><newline46mondego>  private String color;<newline46mondego><newline46mondego>  public String getColor(){<newline46mondego>    return this.color;<newline46mondego>  }<newline46mondego><newline46mondego>  public void setColor(String color){<newline46mondego>    this.color = color;<newline46mondego>  }<newline46mondego><newline46mondego>  public String toString(){<newline46mondego>    return this.color;<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"3582splitHere46","12792302splitHere46","public static void main(String args[]){<newline46mondego>  System.out.println(Color.RED.getColor());<newline46mondego><newline46mondego>  // or<newline46mondego><newline46mondego>  System.out.println(Color.GREEN);<newline46mondego>}<newline46mondego>"
"3583splitHere46","12792572splitHere46","Stock"
"3584splitHere46","12792572splitHere46","latestPrice"
"3585splitHere46","12792572splitHere46","purchasePrice"
"3586splitHere46","12792572splitHere46","latestPrice"
"3587splitHere46","12792572splitHere46","public Stock(Stock other) throws IllegalArgumentException<newline46mondego>{<newline46mondego>    this(other.ticker, other.shares, other.purchasePrice);<newline46mondego>    this.latestPrice = other.latestPrice;<newline46mondego>    updatePercentGain();<newline46mondego>}<newline46mondego>"
"3588splitHere46","12792832splitHere46","if - else"
"3589splitHere46","12792832splitHere46","switch"
"3590splitHere46","12792832splitHere46","case"
"3591splitHere46","12792832splitHere46","default"
"3592splitHere46","12792832splitHere46","switch"
"3593splitHere46","12793065splitHere46","<project><newline46mondego>  ...<newline46mondego>  <build><newline46mondego>    <plugins><newline46mondego>      <plugin><newline46mondego>        <groupId>org.codehaus.mojo</groupId><newline46mondego>        <artifactId>exec-maven-plugin</artifactId><newline46mondego>        <version>1.2.1</version><newline46mondego>        <executions><newline46mondego>          <execution><newline46mondego>            ...<newline46mondego>            <goals><newline46mondego>              <goal>java</goal><newline46mondego>            </goals><newline46mondego>          </execution><newline46mondego>        </executions><newline46mondego>        <configuration><newline46mondego>          <mainClass>com.example.Main</mainClass><newline46mondego>          <arguments><newline46mondego>            <argument>argument1</argument><newline46mondego>            ...<newline46mondego>          </arguments><newline46mondego>          <systemProperties><newline46mondego>            <systemProperty><newline46mondego>              <key>myproperty</key><newline46mondego>              <value>myvalue</value><newline46mondego>            </systemProperty><newline46mondego>            ...<newline46mondego>          </systemProperties><newline46mondego>        </configuration><newline46mondego>      </plugin><newline46mondego>    </plugins><newline46mondego>  </build><newline46mondego>   ...<newline46mondego></project><newline46mondego>"
"3594splitHere46","12793127splitHere46","import java.io.BufferedReader;<newline46mondego>import java.io.File;<newline46mondego>import java.io.FileNotFoundException;<newline46mondego>import java.io.FileReader;<newline46mondego>import java.util.Iterator;<newline46mondego>import java.util.Map;<newline46mondego>import java.util.Scanner;<newline46mondego>import java.util.Set;<newline46mondego>import java.util.StringTokenizer;<newline46mondego>import java.util.TreeMap;<newline46mondego>import java.util.TreeSet;<newline46mondego>public class Nu {<newline46mondego><newline46mondego>    public static void main(String[] args) throws FileNotFoundException{<newline46mondego>        int lineCount=0;<newline46mondego>        Scanner scn1=new Scanner(new File(<doubleQuotes46>D:/abc.txt<doubleQuotes46>));<newline46mondego>        while(scn1.hasNextLine()){<newline46mondego>            scn1.nextLine();<newline46mondego>            lineCount++;//count no of lines for array length<newline46mondego>        }<newline46mondego>        int count=1;<newline46mondego>        int cnt=0;<newline46mondego>        String[] yearss=new String[lineCount];//new array for years<newline46mondego>        Scanner scn=new Scanner(new File(<doubleQuotes46>D:/abc.txt<doubleQuotes46>));<newline46mondego>        while(scn.hasNextLine()){//file yearss array<newline46mondego>            Scanner sc=new Scanner(scn.nextLine());<newline46mondego>            while(sc.hasNext()){<newline46mondego>                if(count==1){<newline46mondego>                    sc.next();<newline46mondego>                    count++;<newline46mondego>                }<newline46mondego>                else if(count==2){<newline46mondego>                    yearss[cnt]=sc.next();//yearss array is filled<newline46mondego>                    count++;<newline46mondego>                }<newline46mondego>                else{<newline46mondego>                    sc.next();<newline46mondego>                    count=count-2;<newline46mondego>                }<newline46mondego>            }<newline46mondego>            cnt++;<newline46mondego>        }<newline46mondego><newline46mondego>        TreeSet<String> yr=new TreeSet<String>();//remove duplicate elements from years and sort them<newline46mondego>        for(int i=1;i<yearss.length;i++)<newline46mondego>            if(yearss[i]!=null)<newline46mondego>                yr.add(yearss[i]);//add elements to treeset<newline46mondego>        TreeMap allRecord=new TreeMap();//treemap sorts keys<newline46mondego>        try{<newline46mondego>            File file=new File(<doubleQuotes46>D:/abc.txt<doubleQuotes46>);//used for file searching<newline46mondego>            String[] yearArray=(String[])yr.toArray(new String[0]);//convert treeset to String array<newline46mondego>            String roll=<doubleQuotes46><doubleQuotes46>;<newline46mondego>            String year=<doubleQuotes46><doubleQuotes46>;<newline46mondego>            String rank=<doubleQuotes46><doubleQuotes46>;<newline46mondego>            BufferedReader in =new BufferedReader(new FileReader(file));//Filereader reads character by character and bufferedReader reads blocks or streams of data<newline46mondego>            String value=in.readLine();//read next line <newline46mondego><newline46mondego>            while(value!=null){<newline46mondego>                StringTokenizer st=new StringTokenizer(value);//pass line into stringtokenizer<newline46mondego>                roll=st.nextToken();//add 1st string to roll<newline46mondego>                year=st.nextToken();//add 2nd to year<newline46mondego>                rank=st.nextToken();//add third to rank<newline46mondego>                TreeMap record=(allRecord.get(roll)!=null)?(TreeMap)allRecord.get(roll):null;//if roll != null then add roll to record else add null<newline46mondego>                //returns year and rank//   System.out.println(allRecord.get(roll));<newline46mondego>                if(record==null)//if null<newline46mondego>                    record=new TreeMap();//if null create new instance<newline46mondego>                    else<newline46mondego>                    allRecord.remove(roll);//remove null from allrecord<newline46mondego>                record.put(year, rank);//put year and rank//every time record is refreshed <newline46mondego>                allRecord.put(roll, record);//put 22 and record//treemap returns null if get(key)==null<newline46mondego>                value=in.readLine();//read next line<newline46mondego>            }<newline46mondego><newline46mondego>            Set keyset=allRecord.keySet();//gets all  keys from allRecord<newline46mondego>            Iterator i=keyset.iterator();//iterate keyset<newline46mondego>            System.out.print(<doubleQuotes46>rno<doubleQuotes46>+<doubleQuotes46> <doubleQuotes46>);<newline46mondego>            for(int j=0;j<yearArray.length;j++)<newline46mondego>                System.out.print(yearArray[j]+<doubleQuotes46>   <doubleQuotes46>);<newline46mondego>            //print all years<newline46mondego>            System.out.println();<newline46mondego>            while(i.hasNext()){<newline46mondego>                roll=(String)i.next();//get roll numbers<newline46mondego>                if(!roll.equals(<doubleQuotes46>rno<doubleQuotes46>))<newline46mondego>                System.out.print(roll+<doubleQuotes46>    <doubleQuotes46>);<newline46mondego>                else<newline46mondego>                    System.out.print(<doubleQuotes46>    <doubleQuotes46>);<newline46mondego>                Map record=(Map)allRecord.get(roll);//get record using the rollno<newline46mondego>                for(int j=0;j<yearArray.length;j++){<newline46mondego>                    rank=(String)record.get(yearArray[j]);<newline46mondego>                    //get rank for the year<newline46mondego>                    if(rank!=null){<newline46mondego>                    System.out.print(rank+<doubleQuotes46>    <doubleQuotes46>);<newline46mondego>                    }<newline46mondego>                    else<newline46mondego>                    {<newline46mondego>                        System.out.print(<doubleQuotes46>       <doubleQuotes46>);<newline46mondego>                    }<newline46mondego>                }<newline46mondego>                System.out.println(<doubleQuotes46><doubleQuotes46>);<newline46mondego>            }<newline46mondego>        }<newline46mondego>        catch(Exception e){e.printStackTrace();}<newline46mondego>    }<newline46mondego>}*<newline46mondego>"
"3595splitHere46","12793169splitHere46","super(structureName);"
"3596splitHere46","12793169splitHere46","public GrammerStructure(String name)"
"3597splitHere46","12793169splitHere46","public GrammerStack(String structureName, int limit){<newline46mondego>  super(structureName);<newline46mondego>  this.structName = structureName; <newline46mondego>  this.cap = limit; <newline46mondego>  System.out.println(structName+<doubleQuotes46>[<doubleQuotes46>+cap+<doubleQuotes46>]<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"3598splitHere46","12793169splitHere46","new"
"3599splitHere46","12793169splitHere46","public void main(String args[]){ <newline46mondego>          GrammerStack(<doubleQuotes46>Stack1<doubleQuotes46>,3); <newline46mondego> }<newline46mondego>"
"3600splitHere46","12793169splitHere46","public void main(String args[]){ <newline46mondego>     new GrammerStack(<doubleQuotes46>Stack1<doubleQuotes46>,3); <newline46mondego> }<newline46mondego>"
"3601splitHere46","12793169splitHere46","public void main(String args[]){ <newline46mondego>   GrammerStack grammerStack = new GrammerStack(<doubleQuotes46>Stack1<doubleQuotes46>,3); <newline46mondego> }<newline46mondego>"
"3602splitHere46","12793213splitHere46","Iterator<Integer> iterator = list.iterator();<newline46mondego>while(iterator.hasNext()) {<newline46mondego>    Integer integer = iterator.next();<newline46mondego><newline46mondego>    // ...check if you want to remove this one...<newline46mondego><newline46mondego>    iterator.remove();<newline46mondego>}<newline46mondego>"
"3603splitHere46","12793213splitHere46","List<Integer> newList = new ArrayList<Integer>();<newline46mondego><newline46mondego>Iterator<Integer> iterator = list.iterator();<newline46mondego>while(iterator.hasNext()) {<newline46mondego>    Integer integer = iterator.next();<newline46mondego><newline46mondego>    newList.add(integer);<newline46mondego><newline46mondego>    iterator.remove();<newline46mondego>}<newline46mondego>"
"3604splitHere46","12793217splitHere46","mkdirs()"
"3605splitHere46","12793217splitHere46","File SDCardRoot = new File(Environment.getExternalStorageDirectory().toString() + <doubleQuotes46>/alQuranData/Reader1/Surah<doubleQuotes46>);<newline46mondego>                Toast.makeText(getApplicationContext(), SDCardRoot.toString(), Toast.LENGTH_LONG).show();<newline46mondego>                if (!SDCardRoot.exists()) {<newline46mondego>                    Log.d(<doubleQuotes46>DIRECTORY CHECK<doubleQuotes46>, <doubleQuotes46>Directory doesnt exist creating directory<doubleQuotes46>);<newline46mondego>                    SDCardRoot.mkdirs();<newline46mondego>                }<newline46mondego>"
"3606splitHere46","12793217splitHere46","<uses-permission android:name=<doubleQuotes46>android.permission.WRITE_EXTERNAL_STORAGE<doubleQuotes46>/><newline46mondego>"
"3607splitHere46","12793217splitHere46","File SDCardRoot = new File(Environment.getExternalStorageDirectory()<newline46mondego>                .toString() + <doubleQuotes46>/alQuranData/Reader1/Surah<doubleQuotes46>);<newline46mondego>        Toast.makeText(getApplicationContext(), SDCardRoot.toString(),<newline46mondego>                Toast.LENGTH_LONG).show();<newline46mondego>        if (!SDCardRoot.exists()) {<newline46mondego>            Log.d(<doubleQuotes46>DIRECTORY CHECK<doubleQuotes46>,<newline46mondego>                    <doubleQuotes46>Directory doesnt exist creating directory <doubleQuotes46><newline46mondego>                            + Environment.getExternalStorageDirectory()<newline46mondego>                                    .toString());<newline46mondego>            boolean outcome = SDCardRoot.mkdirs();<newline46mondego><newline46mondego>            Log.d(<doubleQuotes46>DIRECTORY CHECK<doubleQuotes46>,<newline46mondego>                    <doubleQuotes46>outcome for <doubleQuotes46> + SDCardRoot.getAbsolutePath() + <doubleQuotes46>     <doubleQuotes46><newline46mondego>                            + outcome);<newline46mondego>        }<newline46mondego>"
"3608splitHere46","12793317splitHere46","main()"
"3609splitHere46","12793317splitHere46","public class Homework1C {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        double term = 2, sum = 0;<newline46mondego>        final double difference = 0.0000000001;<newline46mondego>        int n;<newline46mondego><newline46mondego>        for (n = 0; term > difference; n++) {<newline46mondego>            term = 1.0 / find_n_fact(n);<newline46mondego>            sum += term;<newline46mondego>        }<newline46mondego><newline46mondego>        System.out.printf(<doubleQuotes46>e : %f\n<doubleQuotes46>, sum);<newline46mondego>        System.out.printf(<doubleQuotes46>term : %d\n<doubleQuotes46>, n);<newline46mondego>    }<newline46mondego><newline46mondego>    public static double find_n_fact(int n) {<newline46mondego><newline46mondego>        if (n == 0 || n == 1)<newline46mondego>            return 1.0;<newline46mondego><newline46mondego>        return n * find_n_fact(n - 1);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3610splitHere46","12793317splitHere46","public static double find_n_fact(int n) {<newline46mondego>    double i, fact = 1;<newline46mondego><newline46mondego>    if(n < 0) // for negative numbers, factorial is nonsense.<newline46mondego>        return -1;<newline46mondego><newline46mondego>    for (i = n; i > 1; i--)<newline46mondego>        fact *= i;<newline46mondego><newline46mondego>    return fact;<newline46mondego>}<newline46mondego>"
"3611splitHere46","12793352splitHere46","abstract class Message<newline46mondego>{<newline46mondego>   public enum TYPE { Heart, Spade };<newline46mondego>}<newline46mondego><newline46mondego>class Message<T> : Message<newline46mondego>{<newline46mondego><newline46mondego>}<newline46mondego>"
"3612splitHere46","12793352splitHere46","TYPE"
"3613splitHere46","12793352splitHere46","Message.TYPE type = Message.TYPE.Heart;"
"3614splitHere46","12793443splitHere46","if (list.get(list.size() -1).contains(<doubleQuotes46>1<doubleQuotes46>))<newline46mondego>"
"3615splitHere46","12793443splitHere46","import java.util.*; <newline46mondego><newline46mondego>public class Total{ <newline46mondego><newline46mondego>   static int total; <newline46mondego>   public static void main(String[] args) { <newline46mondego><newline46mondego>    int numberArray[] = {100, 200, 300, 400, 500}; <newline46mondego><newline46mondego>    List<String> list = new ArrayList<String>(); <newline46mondego>    Scanner input = new Scanner(System.in); <newline46mondego><newline46mondego>    do{ <newline46mondego>        System.out.println(<doubleQuotes46>Add item? Please enter \<doubleQuotes46>y\<doubleQuotes46> or \<doubleQuotes46>n\<doubleQuotes46><doubleQuotes46>); <newline46mondego>        if (input.next().startsWith(<doubleQuotes46>y<doubleQuotes46>)){ <newline46mondego>            System.out.println(<doubleQuotes46>Enter item number: <doubleQuotes46>); <newline46mondego>            String temp = input.next(); //store the user inputed element<newline46mondego>            list.add(temp); //add that element in list<newline46mondego>            //System.out.println(input.next()); <newline46mondego><newline46mondego>            //Now use the temporary variable in if conditions<newline46mondego>            if (temp.contains(<doubleQuotes46>1<doubleQuotes46>)){ <newline46mondego>                int item1 = numberArray[0]; <newline46mondego>                total = total + item1; <newline46mondego>            } else if(temp.contains(<doubleQuotes46>2<doubleQuotes46>)){ <newline46mondego>                int item2 = numberArray[1]; <newline46mondego>                total = total + item2; <newline46mondego>            } else if(temp.contains(<doubleQuotes46>3<doubleQuotes46>)){ <newline46mondego>                int item3 = numberArray[2]; <newline46mondego>                    total = total + item3; <newline46mondego>            } else if(temp.contains(<doubleQuotes46>4<doubleQuotes46>)){ <newline46mondego>                    int item4 = numberArray[3]; <newline46mondego>                total = total + item4; <newline46mondego>            } else { <newline46mondego>            System.out.println(<doubleQuotes46>You have entered invalid item number!<doubleQuotes46>); <newline46mondego>            break; <newline46mondego>            }                <newline46mondego>        }else{ <newline46mondego>            System.out.println(<doubleQuotes46>You have entered all the item(s).<doubleQuotes46>); <newline46mondego>            break; <newline46mondego>        }        <newline46mondego>     } while(true);<newline46mondego><newline46mondego>        System.out.println(<doubleQuotes46>Total is: <doubleQuotes46> + total);<newline46mondego>    } <newline46mondego>} <newline46mondego>"
"3616splitHere46","12793569splitHere46","File f = new File(<doubleQuotes46>Sale Receipts<doubleQuotes46>);<newline46mondego>  f.mkdir();<newline46mondego>  BufferedWriter bw = new BufferedWriter(new FileWriter(<doubleQuotes46>Sale Receipts/Sale<doubleQuotes46> + Lrecno.getText() + <doubleQuotes46>.TXT<doubleQuotes46>));<newline46mondego>  String receipt=<doubleQuotes46><doubleQuotes46>;<newline46mondego>  while (rs.next()) {<newline46mondego>        receipt += rs.getString(<doubleQuotes46>PART_DESC<doubleQuotes46>) + <doubleQuotes46>  <doubleQuotes46> + rs.getString(<doubleQuotes46>QUNTY<doubleQuotes46>) + <doubleQuotes46>  <doubleQuotes46><newline46mondego>                   + rs.getString(<doubleQuotes46>UNIT_SALE<doubleQuotes46>) + <doubleQuotes46>  <doubleQuotes46> + rs.getString(<doubleQuotes46>TOTAL_SALE<doubleQuotes46>);<newline46mondego>        String[] rece = receipt.split(<doubleQuotes46>\n<doubleQuotes46>);<newline46mondego>        for (int i = 0; i < rece.length; i++) {<newline46mondego>            bw.write(receipt);<newline46mondego>            bw.flush();<newline46mondego>            bw.newLine();<newline46mondego>        }<newline46mondego>        JOptionPane.showMessageDialog(this, <doubleQuotes46>Item sold successfully<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>Success<doubleQuotes46>, JOptionPane.PLAIN_MESSAGE);<newline46mondego>    }<newline46mondego>"
"3617splitHere46","12793569splitHere46","StringBuilder  receipt = new StringBuilder();<newline46mondego>  while (rs.next()) {<newline46mondego>        receipt.append( rs.getString(<doubleQuotes46>PART_DESC<doubleQuotes46>) + <doubleQuotes46>  <doubleQuotes46> + rs.getString(<doubleQuotes46>QUNTY<doubleQuotes46>) + <doubleQuotes46>  <doubleQuotes46><newline46mondego>                   + rs.getString(<doubleQuotes46>UNIT_SALE<doubleQuotes46>) + <doubleQuotes46>  <doubleQuotes46> + rs.getString(<doubleQuotes46>TOTAL_SALE<doubleQuotes46>));<newline46mondego>        receipt.append(<doubleQuotes46>\n<doubleQuotes46>);<newline46mondego>        JOptionPane.showMessageDialog(this, <doubleQuotes46>Item sold successfully<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>Success<doubleQuotes46>, JOptionPane.PLAIN_MESSAGE);<newline46mondego>  }<newline46mondego>  bw.write(receipt.toString());<newline46mondego>  bw.flush();<newline46mondego>  bw.newLine();<newline46mondego>"
"3618splitHere46","12793649splitHere46","format()"
"3619splitHere46","12793649splitHere46","for(int i=1; i<13; i++){<newline46mondego>        for(int j=1; j<13; j++){<newline46mondego><newline46mondego>           System.out.format(<doubleQuotes46>%5d<doubleQuotes46>, i * j);<newline46mondego>        }<newline46mondego>        System.out.println();  // To move to the next line.<newline46mondego>    }<newline46mondego>"
"3620splitHere46","12793649splitHere46","System.out.print(String.format(<doubleQuotes46>%5d<doubleQuotes46>, i * j));<newline46mondego>"
"3621splitHere46","12793649splitHere46","System.out.format"
"3622splitHere46","12793649splitHere46","%5d"
"3623splitHere46","12793649splitHere46","%d"
"3624splitHere46","12793649splitHere46","5"
"3625splitHere46","12793649splitHere46","%5d"
"3626splitHere46","12793649splitHere46","****5"
"3627splitHere46","12793649splitHere46","%5d"
"3628splitHere46","12793649splitHere46","%-5d"
"3629splitHere46","12793649splitHere46","5"
"3630splitHere46","12793649splitHere46","5****"
"3631splitHere46","12793700splitHere46","<java-config  debug-options=<doubleQuotes46>-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=9009<doubleQuotes46> debug-enabled=<doubleQuotes46>true<doubleQuotes46><newline46mondego>  system-classpath=<doubleQuotes46><doubleQuotes46> native-library-path-prefix=<doubleQuotes46>D:\Project\lib\windows\64bit<doubleQuotes46> classpath-suffix=<doubleQuotes46><doubleQuotes46>><newline46mondego>"
"3632splitHere46","12793716splitHere46","JLabel's"
"3633splitHere46","12793764splitHere46","intent.putExtra(<doubleQuotes46>radioButtonState<doubleQuotes46>, radioButtonState);<newline46mondego>"
"3634splitHere46","12793764splitHere46","intent.getxxxxExtra()"
"3635splitHere46","12793764splitHere46","getIntExtra"
"3636splitHere46","12793820splitHere46","java -jar <your jar file>"
"3637splitHere46","12793838splitHere46","int[] values = new int[10];<newline46mondego>new Formatter().format(<doubleQuotes46>%21d<doubleQuotes46>, values);<newline46mondego>"
"3638splitHere46","12793838splitHere46","// Please change your variable names to follow Java conventions<newline46mondego>fmt = new Formatter(System.out);<newline46mondego>for (int value : Totalbystate) {<newline46mondego>    fmt.format(<doubleQuotes46>%21d<doubleQuotes46>, value);<newline46mondego>}<newline46mondego>"
"3639splitHere46","12793838splitHere46","<doubleQuotes46>%21d%21d%21d%21d%21d<doubleQuotes46>"
"3640splitHere46","12793838splitHere46","Integer[]"
"3641splitHere46","12793838splitHere46","int[]"
"3642splitHere46","12793841splitHere46","MANIFEST.MF"
"3643splitHere46","12793841splitHere46","Manifest-Version: 1.0<newline46mondego>Built-By: user<newline46mondego>Build-Jdk: 1.6.0_35<newline46mondego>Created-By: Apache Maven 3.0.4<newline46mondego>Archiver-Version: Plexus Archiver<newline46mondego><newline46mondego>Name: Artifact<newline46mondego>Implementation-Build: 1.14-SNAPSHOT<newline46mondego>Version: 1.14-SNAPSHOT<newline46mondego>"
"3644splitHere46","12793841splitHere46","public static String getApplicationVersion() {<newline46mondego>        String version = null;<newline46mondego>        try {<newline46mondego>            final List<VersionsUtil.Version> moduleVersions = VersionsUtil.getModuleVersions(Thread.currentThread().getContextClassLoader());<newline46mondego>            for (VersionsUtil.Version moduleVersion : moduleVersions) {<newline46mondego>                if (moduleVersion.name.equals(<doubleQuotes46><NAME OF ARTIFACT TO GET><doubleQuotes46>)) {<newline46mondego>                    version = moduleVersion.version;<newline46mondego>                    break;<newline46mondego>                }<newline46mondego>            }<newline46mondego>        } catch (IOException e) {<newline46mondego>            // We'll return null...<newline46mondego>        }<newline46mondego>        return version;<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>public class VersionsUtil {<newline46mondego>    private static final Logger LOG = LoggerFactory.getLogger(VersionsUtil.class);<newline46mondego><newline46mondego>    /**<newline46mondego>     * Returns a list of the module versions available for the given class loader.<newline46mondego>     *<newline46mondego>     * @param classLoader the class loader to return module versions for<newline46mondego>     * @return a list of module versions<newline46mondego>     * @throws IOException in case there's an error reading the manifest<newline46mondego>     */<newline46mondego>    public static List<Version> getModuleVersions(final ClassLoader classLoader) throws IOException {<newline46mondego>        return processResources(classLoader.getResources(<doubleQuotes46>META-INF/MANIFEST.MF<doubleQuotes46>));<newline46mondego>    }<newline46mondego><newline46mondego>    private static List<Version> processResources(final Enumeration<URL> resources) throws IOException {<newline46mondego>        final List<Version> moduleVersions = new ArrayList();<newline46mondego>        while (resources.hasMoreElements()) {<newline46mondego>            URL resource = resources.nextElement();<newline46mondego>            Version v = process(resource);<newline46mondego>            if (v != null) {<newline46mondego>                moduleVersions.add(v);<newline46mondego>            }<newline46mondego>        }<newline46mondego>        return moduleVersions;<newline46mondego>    }<newline46mondego><newline46mondego>    private static Version process(final URL resource) {<newline46mondego>        try {<newline46mondego>            Properties p = readResource(resource);<newline46mondego>            return createVersion(p);<newline46mondego>        } catch (IOException e) {<newline46mondego>            LOG.warn(<doubleQuotes46>Failed to read resource: <doubleQuotes46> + resource, e);<newline46mondego>            return null;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    private static Version createVersion(final Properties p) {<newline46mondego>        Object name = p.get(<doubleQuotes46>Name<doubleQuotes46>);<newline46mondego>        if (name != null) {<newline46mondego>            return new Version((String) name, (String) p.get(<doubleQuotes46>Version<doubleQuotes46>));<newline46mondego>        }<newline46mondego>        return null;<newline46mondego>    }<newline46mondego><newline46mondego>    private static Properties readResource(final URL resource) throws IOException {<newline46mondego>        LOG.trace(<doubleQuotes46>Reading resource: <doubleQuotes46> + resource);<newline46mondego>        InputStream is = resource.openStream();<newline46mondego>        Properties p = new Properties();<newline46mondego>        p.load(is);<newline46mondego>        is.close();<newline46mondego>        return p;<newline46mondego>    }<newline46mondego><newline46mondego>    public static final class Version {<newline46mondego>        String name;<newline46mondego>        String version;<newline46mondego><newline46mondego>        private Version(final String name, final String version) {<newline46mondego>            this.name = name;<newline46mondego>            this.version = version;<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3645splitHere46","12793841splitHere46","MANIFEST.MF"
"3646splitHere46","12793841splitHere46","POM.XML"
"3647splitHere46","12793841splitHere46","...<newline46mondego>  <plugin><newline46mondego>    <artifactId>maven-jar-plugin</artifactId><newline46mondego>    <version>2.2</version><newline46mondego>    <configuration><newline46mondego>      <archive><newline46mondego>        <manifestSections><newline46mondego>          <manifestSection><newline46mondego>            <name>${project.name} (${project.artifactId})</name><newline46mondego>            <manifestEntries><newline46mondego>              <Version>${project.version}${build.number}</Version><newline46mondego>            </manifestEntries><newline46mondego>          </manifestSection><newline46mondego>        </manifestSections><newline46mondego>      </archive><newline46mondego>    </configuration><newline46mondego>  </plugin><newline46mondego>  ...<newline46mondego>  <properties><newline46mondego>     <build.number /><newline46mondego>  </properties><newline46mondego>  ...<newline46mondego>"
"3648splitHere46","12793841splitHere46","BUILD_NUMBER"
"3649splitHere46","12793841splitHere46","-Dbuild.number=$BUILD_NUMBER"
"3650splitHere46","12794083splitHere46","maven-enforcer-plugin"
"3651splitHere46","12794083splitHere46","<project><newline46mondego>  [...]<newline46mondego>  <build><newline46mondego>    <plugins><newline46mondego>      <plugin><newline46mondego>        <groupId>org.apache.maven.plugins</groupId><newline46mondego>        <artifactId>maven-enforcer-plugin</artifactId><newline46mondego>        <version>1.1.1</version><newline46mondego>        <executions><newline46mondego>          <execution><newline46mondego>            <id>enforce-banned-dependencies</id><newline46mondego>            <goals><newline46mondego>              <goal>enforce</goal><newline46mondego>            </goals><newline46mondego>            <configuration><newline46mondego>              <rules><newline46mondego>                <bannedDependencies><newline46mondego>                  <excludes><newline46mondego>                    <exclude>commons-logging:commons-logging</exclude><newline46mondego>                  </excludes><newline46mondego>                </bannedDependencies><newline46mondego>              </rules><newline46mondego>              <fail>true</fail><newline46mondego>            </configuration><newline46mondego>          </execution><newline46mondego>        </executions><newline46mondego>      </plugin><newline46mondego>    </plugins><newline46mondego>  </build><newline46mondego>  [...]<newline46mondego></project><newline46mondego>"
"3652splitHere46","12794083splitHere46","mvn install"
"3653splitHere46","12794083splitHere46","[WARNING] Rule 1: org.apache.maven.plugins.enforcer.BannedDependencies failed with message:<newline46mondego>Found Banned Dependency: commons-logging:commons-logging:jar:1.1.1<newline46mondego>Use 'mvn dependency:tree' to locate the source of the banned dependencies.<newline46mondego>"
"3654splitHere46","12794083splitHere46","BUILD FAILURE"
"3655splitHere46","12794683splitHere46","SpringLayout"
"3656splitHere46","12794683splitHere46","SpringLayout"
"3657splitHere46","12794683splitHere46","SpringLayout"
"3658splitHere46","12794683splitHere46","SpringLayout"
"3659splitHere46","12794683splitHere46","SpringLayout"
"3660splitHere46","12794683splitHere46","BorderLayout"
"3661splitHere46","12794683splitHere46","MigLayout"
"3662splitHere46","12794683splitHere46","public static void main(String[] args) {<newline46mondego>    JFrame frame = new JFrame(<doubleQuotes46>Testing MigLayout<doubleQuotes46>);<newline46mondego>    JPanel contentPane = new JPanel(new MigLayout(<doubleQuotes46>fillx<doubleQuotes46>));<newline46mondego><newline46mondego>    // Row 1<newline46mondego>    JLabel areaLabel = new JLabel(<doubleQuotes46>Area of Triangle<doubleQuotes46>);<newline46mondego>    areaLabel.setFont(areaLabel.getFont().deriveFont(16.0f));<newline46mondego>    areaLabel.setHorizontalAlignment(JLabel.CENTER);<newline46mondego>    contentPane.add(areaLabel, <doubleQuotes46>spanx, growx, wrap<doubleQuotes46>);<newline46mondego>    // wrap indicates a new row<newline46mondego><newline46mondego>    // Row 2<newline46mondego>    JLabel side1Label = new JLabel(<doubleQuotes46>Side 1:<doubleQuotes46>);<newline46mondego>    contentPane.add(side1Label, <doubleQuotes46>alignx trailing<doubleQuotes46>);<newline46mondego>    JTextField side1Field = new JTextField();<newline46mondego>    side1Field.setColumns(6);<newline46mondego>    contentPane.add(side1Field, <doubleQuotes46>alignx leading, wrap<doubleQuotes46>);<newline46mondego><newline46mondego>    // Row 3<newline46mondego>    JLabel side2Label = new JLabel(<doubleQuotes46>Side 2:<doubleQuotes46>);<newline46mondego>    contentPane.add(side2Label, <doubleQuotes46>alignx trailing<doubleQuotes46>);<newline46mondego>    JTextField side2Field = new JTextField();<newline46mondego>    side2Field.setColumns(6);<newline46mondego>    contentPane.add(side2Field, <doubleQuotes46>alignx leading, wrap<doubleQuotes46>);<newline46mondego><newline46mondego>    // Row 4<newline46mondego>    JLabel side3Label = new JLabel(<doubleQuotes46>Side 3:<doubleQuotes46>);<newline46mondego>    contentPane.add(side3Label, <doubleQuotes46>alignx trailing<doubleQuotes46>);<newline46mondego>    JTextField side3Field = new JTextField();<newline46mondego>    side3Field.setColumns(6);<newline46mondego>    contentPane.add(side3Field, <doubleQuotes46>alignx leading, wrap<doubleQuotes46>);<newline46mondego><newline46mondego>    // Row 5<newline46mondego>    JButton calculateButton = new JButton(<doubleQuotes46>Calculate Area<doubleQuotes46>);<newline46mondego>    contentPane.add(calculateButton, <doubleQuotes46>spanx, growx<doubleQuotes46>);<newline46mondego><newline46mondego>    frame.setContentPane(contentPane);<newline46mondego>    // Resizes automatically<newline46mondego>    frame.pack();<newline46mondego>    // Centers automatically<newline46mondego>    frame.setLocationRelativeTo(null);<newline46mondego>    // Exit when the frame is closed<newline46mondego>    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego><newline46mondego>    frame.setVisible(true);<newline46mondego>}<newline46mondego>"
"3663splitHere46","12794683splitHere46","GridBadLayout"
"3664splitHere46","12794683splitHere46","MigLayout"
"3665splitHere46","12794683splitHere46","MigLayout"
"3666splitHere46","12794683splitHere46","<doubleQuotes46>fillx<doubleQuotes46>"
"3667splitHere46","12794683splitHere46","add"
"3668splitHere46","12794683splitHere46","<doubleQuotes46>spanx<doubleQuotes46>"
"3669splitHere46","12794683splitHere46","<doubleQuotes46>wrap<doubleQuotes46>"
"3670splitHere46","12794683splitHere46","GridLayout"
"3671splitHere46","12794683splitHere46","BoxLayout"
"3672splitHere46","12794683splitHere46","BorderLayout"
"3673splitHere46","12794683splitHere46","BoxLayout"
"3674splitHere46","12794683splitHere46","CardLayout"
"3675splitHere46","12794683splitHere46","FlowLayout"
"3676splitHere46","12794683splitHere46","GridBagLayout"
"3677splitHere46","12794683splitHere46","GridLayout"
"3678splitHere46","12795248splitHere46",".*"
"3679splitHere46","12795248splitHere46","<tagname>"
"3680splitHere46","12795248splitHere46","</tagname>"
"3681splitHere46","12795248splitHere46",".*"
"3682splitHere46","12795248splitHere46",".*?"
"3683splitHere46","12795248splitHere46","<doubleQuotes46>(?<=<tagname>).*?(?=</tagname>)<doubleQuotes46><newline46mondego>"
"3684splitHere46","12795279splitHere46","xmlns:android=<doubleQuotes46>http://schemas.android.com/apk/res/android<doubleQuotes46>"
"3685splitHere46","12795279splitHere46","R.java"
"3686splitHere46","12795332splitHere46","prvnummer"
"3687splitHere46","12795332splitHere46","PRVNummer"
"3688splitHere46","12795332splitHere46","public List<Ansokan> search(String search)"
"3689splitHere46","12795332splitHere46","public List<Ansokan> search(PRVNummer search)"
"3690splitHere46","12795355splitHere46","hibernate.ejb.naming_strategy"
"3691splitHere46","12795355splitHere46","configuration.setNamingStrategy(ImprovedNamingStrategy.INSTANCE);<newline46mondego>"
"3692splitHere46","12795474splitHere46","reference of passed parameter"
"3693splitHere46","12795474splitHere46","load()"
"3694splitHere46","12795474splitHere46","public static ArrayList<Info> load() {//Change return type<newline46mondego>    File f = new File(<doubleQuotes46>savefile.dat<doubleQuotes46>);<newline46mondego>    try {<newline46mondego>        FileInputStream fis = new FileInputStream(f);<newline46mondego>        ObjectInputStream ois = new ObjectInputStream(fis);<newline46mondego>        try {<newline46mondego>            ArrayList<Info> a = (ArrayList<Info>) ois.readObject();//get the object that is read<newline46mondego>            return a;<newline46mondego>        } catch (ClassNotFoundException cnfe) {<newline46mondego>            System.out.println(<doubleQuotes46>Failed to load<doubleQuotes46>);<newline46mondego>        }<newline46mondego>        fis.close();<newline46mondego>    } catch (IOException ioe) {<newline46mondego>        System.out.println(<doubleQuotes46>Failed to load<doubleQuotes46>);<newline46mondego>    }<newline46mondego>    return null;<newline46mondego>  }<newline46mondego>"
"3695splitHere46","12795474splitHere46","ArrayList<Info> loaded = load();<newline46mondego>"
"3696splitHere46","12795484splitHere46","PriorityQueue queue; // works, but is raw<newline46mondego>PriorityQueue<PriQMsgPayload> queue; // works, but is partially raw<newline46mondego>PriorityQueue<PriQMsgPayload<Object>> queue; // won't accept either object<newline46mondego>"
"3697splitHere46","12795484splitHere46","PriorityQueue<PriQMsgPayload<?>> queue; // won't accept either object<newline46mondego>"
"3698splitHere46","12795484splitHere46","PriQMsgPayload<Integer>"
"3699splitHere46","12795484splitHere46","PriQMsgPayload<MyClass>"
"3700splitHere46","12795501splitHere46","Producing 425     Thread-0 size left 0<newline46mondego>Consuming 890     Thread-3 size left 0<newline46mondego>Consuming 425     Thread-2 size left 0<newline46mondego>Producing 890     Thread-1 size left 0<newline46mondego>"
"3701splitHere46","12795501splitHere46","items.put(rand);<newline46mondego>"
"3702splitHere46","12795501splitHere46","System.out.println(<doubleQuotes46>Consuming <doubleQuotes46> + items.take() + <doubleQuotes46>     <doubleQuotes46> + Thread.currentThread().getName() + <doubleQuotes46> size left <doubleQuotes46> + items.size());<newline46mondego>"
"3703splitHere46","12795501splitHere46","System.out.println(<doubleQuotes46>Producing <doubleQuotes46> + rand + <doubleQuotes46>     <doubleQuotes46> + Thread.currentThread().getName() + <doubleQuotes46> size left <doubleQuotes46> + items.size());<newline46mondego>"
"3704splitHere46","12795501splitHere46","Thread t1 = new Thread(producer);<newline46mondego>Thread t2 = new Thread(producer);<newline46mondego>Thread t3 = new Thread(consumer);<newline46mondego>Thread t4 = new Thread(consumer);<newline46mondego><newline46mondego>t1.start();<newline46mondego>t2.start();<newline46mondego>t3.start();<newline46mondego>t4.start();<newline46mondego>"
"3705splitHere46","12795518splitHere46","ListView"
"3706splitHere46","12795518splitHere46","AbsListView"
"3707splitHere46","12795518splitHere46","AdapterView"
"3708splitHere46","12795518splitHere46","ListView"
"3709splitHere46","12795518splitHere46","ViewGroup"
"3710splitHere46","12795518splitHere46","listLayout"
"3711splitHere46","12795518splitHere46","AbsListView.LayoutParams"
"3712splitHere46","12795518splitHere46","listLayout"
"3713splitHere46","12795518splitHere46","public class MainActivity1 extends Activity {<newline46mondego><newline46mondego>    String[] wordlist = new String[] { <doubleQuotes46>a<doubleQuotes46>, <doubleQuotes46>b<doubleQuotes46>, <doubleQuotes46>c<doubleQuotes46> };<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void onCreate(Bundle savedInstanceState) {<newline46mondego>        super.onCreate(savedInstanceState);<newline46mondego><newline46mondego>        ListView list = new ListView(this);<newline46mondego>        list.setAdapter(new MyAdapter(this, wordlist));<newline46mondego><newline46mondego>        setContentView(list);<newline46mondego>    }<newline46mondego><newline46mondego>    private class MyAdapter extends ArrayAdapter<String> {<newline46mondego><newline46mondego>        public MyAdapter(Context context, String[] strings) {<newline46mondego>            super(context, -1, -1, strings);<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public View getView(int position, View convertView, ViewGroup parent) {<newline46mondego><newline46mondego>            LinearLayout listLayout = new LinearLayout(MainActivity1.this);<newline46mondego>            listLayout.setLayoutParams(new AbsListView.LayoutParams(<newline46mondego>                    AbsListView.LayoutParams.WRAP_CONTENT,<newline46mondego>                    AbsListView.LayoutParams.WRAP_CONTENT));<newline46mondego>            listLayout.setId(5000);<newline46mondego><newline46mondego>            TextView listText = new TextView(MainActivity1.this);<newline46mondego>            listText.setId(5001);<newline46mondego><newline46mondego>            listLayout.addView(listText);<newline46mondego><newline46mondego>        listText.setText(super.getItem(position));<newline46mondego><newline46mondego>            return listLayout;<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3714splitHere46","12795518splitHere46","ViewGroup.LayoutParams"
"3715splitHere46","12795518splitHere46","AbsListView.LayoutParams"
"3716splitHere46","12795518splitHere46","getView()"
"3717splitHere46","12795963splitHere46","man 2 write"
"3718splitHere46","12795963splitHere46","The number of bytes written may be less than  count  if,  for  example,<newline46mondego>   there  is  insufficient space on the underlying physical medium, or the<newline46mondego>   RLIMIT_FSIZE resource limit is encountered (see setrlimit(2)),  or  the<newline46mondego>   call was interrupted by a signal handler after having written less than<newline46mondego>   count bytes.  (See also pipe(7).)<newline46mondego>"
"3719splitHere46","12795963splitHere46","man 2 setrlimit"
"3720splitHere46","12795963splitHere46","RLIMIT_FSIZE<newline46mondego>          The maximum size of files that the process may create.  Attempts<newline46mondego>          to extend a file beyond this  limit  result  in  delivery  of  a<newline46mondego>          SIGXFSZ  signal.   By default, this signal terminates a process,<newline46mondego>          but a process can catch this signal instead, in which  case  the<newline46mondego>          relevant  system  call  (e.g., write(2), truncate(2)) fails with<newline46mondego>          the error EFBIG.<newline46mondego>"
"3721splitHere46","12795963splitHere46","ulimit -Sf<newline46mondego>ulimit -Hf<newline46mondego>"
"3722splitHere46","12795963splitHere46","#include <stdio.h><newline46mondego>#include <errno.h><newline46mondego>#include <sys/resource.h><newline46mondego><newline46mondego>int main()<newline46mondego>{<newline46mondego>    struct rlimit rl;<newline46mondego>    if (getrlimit(RLIMIT_FSIZE, &rl) == 0) {<newline46mondego>        printf(<doubleQuotes46>%d %d\n<doubleQuotes46>, rl.rlim_cur, rl.rlim_max);<newline46mondego>    } else {<newline46mondego>        fprintf(stderr, <doubleQuotes46>error: %d\n<doubleQuotes46>, errno);<newline46mondego>    }<newline46mondego>    return 0;<newline46mondego>}<newline46mondego>"
"3723splitHere46","12795970splitHere46","if (node.indent.equals(word))"
"3724splitHere46","12795970splitHere46","1. node is null<newline46mondego>2. indent is null<newline46mondego>3. word is null.<newline46mondego><newline46mondego>1. cannot be (because you have a null check).<newline46mondego>2. possible<newline46mondego>3. possible<newline46mondego>"
"3725splitHere46","12795972splitHere46","int times = 10; // Say you want it 10 times, in your code it's 7.<newline46mondego><newline46mondego>    for (int i = 0; i < times; i++) {<newline46mondego>        System.out.println(deck[(int) (Math.random() * deck.length)]<newline46mondego>                 + <doubleQuotes46> : <doubleQuotes46> + suit[(int) (Math.random() * suit.length)]);<newline46mondego>    }<newline46mondego>"
"3726splitHere46","12796037splitHere46","JTextField.setColumns(int)"
"3727splitHere46","12796343splitHere46","Shell"
"3728splitHere46","12796343splitHere46","Shell active = Display.getCurrent().getActiveShell();<newline46mondego>String title = active.getText();<newline46mondego>"
"3729splitHere46","12796343splitHere46","Shell active = PlatformUI.getWorkbench().getDisplay().getActiveShell();<newline46mondego>String title = active.getText();<newline46mondego>"
"3730splitHere46","12796377splitHere46","poi-3.8-20120326.jar"
"3731splitHere46","12796377splitHere46","NetBeans"
"3732splitHere46","12796377splitHere46","Libraries"
"3733splitHere46","12796377splitHere46","Add JAR/Folder"
"3734splitHere46","12796377splitHere46","poi-3.8-20120326.jar"
"3735splitHere46","12796377splitHere46","poi-3.8-20120326.jar"
"3736splitHere46","12796377splitHere46","lib"
"3737splitHere46","12796377splitHere46","poi"
"3738splitHere46","12796411splitHere46","JComponents"
"3739splitHere46","12796462splitHere46","MouseListener"
"3740splitHere46","12796462splitHere46","mouseClicked"
"3741splitHere46","12796462splitHere46","List"
"3742splitHere46","12796462splitHere46","Rectangle"
"3743splitHere46","12796462splitHere46","Rectangle#contains(Point)"
"3744splitHere46","12796462splitHere46","int row = -1;<newline46mondego>int col = -1;<newline46mondego><newline46mondego>for (int i = 0; i < 9; i++) {<newline46mondego>    int yPos = (i + 1) * 50 - 15;<newline46mondego>    if (y >= yPos && y <= yPos + 50) {<newline46mondego>        row = i;<newline46mondego>        break;<newline46mondego>    }<newline46mondego>}<newline46mondego>for (int j = 0; j < 9; j++) {<newline46mondego>    int xPos = j * 50 + 15;<newline46mondego>    if (x >= xPos && x <= xPos + 50) {<newline46mondego>        col = j;<newline46mondego>        break;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3745splitHere46","12796462splitHere46","java.util.Timer"
"3746splitHere46","12796462splitHere46","javax.swing.Timer"
"3747splitHere46","12796462splitHere46","Timer countDown = new Timer(1000, new Watcher(gameTime));<newline46mondego>countDown.setRepeats(true);<newline46mondego>countDown.setCoalesce(true);<newline46mondego>countDown.start();<newline46mondego>"
"3748splitHere46","12796462splitHere46","public class Watcher implements ActionListener {<newline46mondego>    private int length;<newline46mondego>    private int ticks = 0;<newline46mondego>    public Watcher(int time) {<newline46mondego>        length = time;<newline46mondego>    }<newline46mondego><newline46mondego>    public void actionPerformed(ActionEvent evt) {<newline46mondego>        tick++;<newline46mondego>        int timeRemaining = length - (tick * 1000);<newline46mondego>        if (timeRemaining <= 0) {<newline46mondego>            // Game over<newline46mondego>        } else {<newline46mondego>            labelShowingTimeRemaining.setText(Integer.toString((int)Math.round(timeRemaining / 1000)));<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3749splitHere46","12796462splitHere46","bufferedImage=new ImageIcon(this.getClass().getResource(path)).getImage();  <newline46mondego>"
"3750splitHere46","12796462splitHere46","Cell"
"3751splitHere46","12796462splitHere46","paintable"
"3752splitHere46","12796462splitHere46","JPanel"
"3753splitHere46","12796462splitHere46","GridLayout"
"3754splitHere46","12796462splitHere46","GridBagLayout"
"3755splitHere46","12796515splitHere46","public class Main {<newline46mondego>    public static void main(String[] args){<newline46mondego><newline46mondego>         String[] suit = { <doubleQuotes46>Clubs<doubleQuotes46>, <doubleQuotes46>Hearts<doubleQuotes46>, <doubleQuotes46>Diamonds<doubleQuotes46>, <doubleQuotes46>Spades<doubleQuotes46> };<newline46mondego>         String[] deck = { <doubleQuotes46>2<doubleQuotes46>, <doubleQuotes46>3<doubleQuotes46>, <doubleQuotes46>4<doubleQuotes46>, <doubleQuotes46>5<doubleQuotes46>, <doubleQuotes46>6<doubleQuotes46>, <doubleQuotes46>7<doubleQuotes46>, <doubleQuotes46>8<doubleQuotes46>, <doubleQuotes46>9<doubleQuotes46>, <doubleQuotes46>10<doubleQuotes46>,<newline46mondego>                            <doubleQuotes46>Jack<doubleQuotes46>, <doubleQuotes46>Queen<doubleQuotes46>, <doubleQuotes46>King<doubleQuotes46>, <doubleQuotes46>Aces<doubleQuotes46> };<newline46mondego>         int counts[] = new int[4];<newline46mondego>         for( int a = 0; a < 7; a++ ){<newline46mondego>         int i = (int) ( Math.random() * suit.length );<newline46mondego>         int j = (int) ( Math.random() * deck.length );<newline46mondego>             //System.out.println( <doubleQuotes46>Suit <doubleQuotes46> + suit[i] + <doubleQuotes46> Deck <doubleQuotes46> + deck[j] );<newline46mondego>         System.out.println( suit[i] + <doubleQuotes46> : <doubleQuotes46> + deck[j]);<newline46mondego>         counts[i]++;<newline46mondego>         }<newline46mondego>                System.out.println();<newline46mondego>         for (int i =0;i<4;++i){<newline46mondego>            System.out.println(suit[i] + <doubleQuotes46> : <doubleQuotes46> + counts[i]);<newline46mondego>         }<newline46mondego><newline46mondego>      }<newline46mondego>    }<newline46mondego>"
"3756splitHere46","12796541splitHere46","UserDetail"
"3757splitHere46","12796541splitHere46","UserDetail existingUserDetail = session.get(UserDetail.class, theUserDetailId);<newline46mondego>existingUserDetail.setInfo(newInfo);<newline46mondego>"
"3758splitHere46","12796541splitHere46","USER_ID"
"3759splitHere46","12796541splitHere46","UserDetail"
"3760splitHere46","12796561splitHere46","private JTable hiddenTable = new JTable();<newline46mondego>private DefaultTableColumnModel hiddenModel = new DefaultTableColumnModel();<newline46mondego>"
"3761splitHere46","12796561splitHere46","private void filterList() {<newline46mondego><newline46mondego>        // Hide columns<newline46mondego>        for (TableColumn column : table.getColumns()) {<newline46mondego>            if (!((String) column.getHeaderValue()).toLowerCase().contains(<newline46mondego>                    searchBox.getText().toLowerCase().trim())) {<newline46mondego>                hiddenModel.addColumn(column);<newline46mondego>                table.getColumnModel().removeColumn(column);<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        // Show columns<newline46mondego>        for (TableColumn column : hiddenTable.getColumns()) {<newline46mondego>            if (((String) column.getHeaderValue()).toLowerCase().contains(<newline46mondego>                    searchBox.getText().toLowerCase().trim())) {<newline46mondego>                table.getColumnModel().addColumn(column);<newline46mondego>                hiddenModel.removeColumn(column);<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"3762splitHere46","12796755splitHere46","Order"
"3763splitHere46","12796755splitHere46","getOrderpositions()"
"3764splitHere46","12796780splitHere46","ipady"
"3765splitHere46","12796780splitHere46","insets"
"3766splitHere46","12796780splitHere46","c.insets = new Insets(10, 0, 10, 0);<newline46mondego>"
"3767splitHere46","12797077splitHere46","Node"
"3768splitHere46","12797077splitHere46","getAttributes"
"3769splitHere46","12797077splitHere46","NamedNodeMap attributes = nodes.item(0).getAttributes();<newline46mondego>for (int i=0, len=attributes.getLenght(); i<len; i++) {<newline46mondego>   Attr attr = (Attr)attributes.item(i);<newline46mondego>   System.out.println(attr.getName() + <doubleQuotes46>=<doubleQuotes46> + attr.getValue());<newline46mondego>}<newline46mondego>"
"3770splitHere46","12797237splitHere46","String querystmt = <doubleQuotes46>SELECT * FROM FIRSTTABLE WHERE  ID = <doubleQuotes46> + badgeID;<newline46mondego>"
"3771splitHere46","12797291splitHere46","Object value = field.get(abc);<newline46mondego>"
"3772splitHere46","12797392splitHere46","Scanner"
"3773splitHere46","12797392splitHere46","BufferedReader"
"3774splitHere46","12797392splitHere46","List<Integer> seriesOfInt = new ArrayList<>();<newline46mondego><newline46mondego>while (scanner.hasNextInt()) {<newline46mondego>    seriesOfInt.add(scanner.nextInt());<newline46mondego>}<newline46mondego>"
"3775splitHere46","12797392splitHere46","if (scanner.hasNext()) {<newline46mondego>    List<String> seriesOfIntString = Arrays.asList(scanner.next().split(<doubleQuotes46> <doubleQuotes46>));<newline46mondego>}<newline46mondego>"
"3776splitHere46","12797459splitHere46","public static void First_function(Context context)<newline46mondego>  {<newline46mondego>    SMS sms = new SMS();<newline46mondego>    sms.Second_function(context);<newline46mondego>  }<newline46mondego><newline46mondego>  public void Second_function(Context context)<newline46mondego>  {<newline46mondego>    Toast.makeText(context,<doubleQuotes46>Hello<doubleQuotes46>,1).show(); // This i anable to display and cause crash<newline46mondego>  }<newline46mondego>"
"3777splitHere46","12797459splitHere46","First_function(getApplicationContext())"
"3778splitHere46","12797459splitHere46","public static String staticString = <doubleQuotes46>xyz<doubleQuotes46>;<newline46mondego><newline46mondego>public static String getStaticString()<newline46mondego>{<newline46mondego>  return staticString;<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>String xyz = getStaticString();<newline46mondego>"
"3779splitHere46","12797629splitHere46",">"
"3780splitHere46","12797629splitHere46","String[] cmd = { <doubleQuotes46>cmd<doubleQuotes46>, <doubleQuotes46>/C<doubleQuotes46>, <doubleQuotes46>saucy input.saucy > output.saucy<doubleQuotes46> }; <newline46mondego>"
"3781splitHere46","12797642splitHere46","alter qmgr SSLKEYR('/var/mqm/qmgrs/MYQMGR/ssl/keydb')"
"3782splitHere46","12797683splitHere46","Object[] params = new Object[]{null};<newline46mondego>"
"3783splitHere46","12797683splitHere46","null"
"3784splitHere46","12797683splitHere46","Object[] params = new Object[0];<newline46mondego>"
"3785splitHere46","12797723splitHere46","public class MyTimePicker {<newline46mondego>TimePickerDialog mTimePickerDialog;<newline46mondego><newline46mondego>public interface onTimeSet {<newline46mondego>    public void onTime(TimePicker view, int hourOfDay, int minute);<newline46mondego>}<newline46mondego><newline46mondego>onTimeSet mOnTimeSet;<newline46mondego><newline46mondego>public void setTimeListener(onTimeSet onTimeset) {<newline46mondego>    mOnTimeSet = onTimeset;<newline46mondego>}<newline46mondego><newline46mondego>public MyTimePicker(Context ctx) {<newline46mondego>    mTimePickerDialog = new TimePickerDialog(ctx, new OnTimeSetListener() {<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void onTimeSet(TimePicker view, int hourOfDay, int minute) {<newline46mondego>            mOnTimeSet.onTime(view, hourOfDay, minute);<newline46mondego><newline46mondego>        }<newline46mondego>    }, 1, 1, true);<newline46mondego>}<newline46mondego><newline46mondego>public void show() {<newline46mondego>    mTimePickerDialog.show();<newline46mondego>}<newline46mondego>"
"3786splitHere46","12797723splitHere46","public void ShowTimePicker() {<newline46mondego>    MyTimePicker myTimePicker = new MyTimePicker(this);<newline46mondego>    myTimePicker.show();<newline46mondego>    myTimePicker.setTimeListener(new onTimeSet() {<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void onTime(TimePicker view, int hourOfDay, int minute) {<newline46mondego>            Toast.makeText(MainActivity.this,<newline46mondego>                    <doubleQuotes46>time is <doubleQuotes46> + hourOfDay + <doubleQuotes46>:<doubleQuotes46> + minute,<newline46mondego>                    Toast.LENGTH_LONG).show();<newline46mondego><newline46mondego>        }<newline46mondego>    });<newline46mondego>}<newline46mondego>"
"3787splitHere46","12797750splitHere46","private final ExecutorService service = Executors.newSingleThreadExecutor();<newline46mondego><newline46mondego>service.submit(new Runnable() {<newline46mondego>   public void run() {<newline46mondego>       // task to perform here.<newline46mondego>   }<newline46mondego>});<newline46mondego>"
"3788splitHere46","12797777splitHere46","interface Strategy {<newline46mondego>  void m1(); void m2();<newline46mondego>}<newline46mondego>"
"3789splitHere46","12797777splitHere46","void actionMethod(Strategy s) {<newline46mondego>  s.m1(); s.m2();<newline46mondego>}<newline46mondego>"
"3790splitHere46","12797777splitHere46","actionMethod(new Strategy() { <newline46mondego>   public void m1() { ...stuff 1...}<newline46mondego>   public void m2() { ...stuff 2...}<newline46mondego>});<newline46mondego>"
"3791splitHere46","12797803splitHere46","private boolean isTouchOutside;<newline46mondego><newline46mondego>protected boolean touchEvent(TouchEvent message) {<newline46mondego>    isTouchOutside = message.getX(1) < 0 || message.getX(1) > getWidth() || message.getY(1) < 0 || message.getY(1) > getHeight();<newline46mondego>    return super.touchEvent(message); <newline46mondego>}<newline46mondego><newline46mondego>protected boolean navigationClick(int status, int time) {<newline46mondego>    if(! isTouchOutside)<newline46mondego>        fieldChangeNotify(0);<newline46mondego>    return true;<newline46mondego>}<newline46mondego>"
"3792splitHere46","12797962splitHere46","cas-servlet.xml"
"3793splitHere46","12797962splitHere46","<bean id=<doubleQuotes46>logoutController<doubleQuotes46> class=<doubleQuotes46>org.jasig.cas.web.LogoutController<doubleQuotes46><newline46mondego>    p:centralAuthenticationService-ref=<doubleQuotes46>centralAuthenticationService<doubleQuotes46><newline46mondego>    p:logoutView=<doubleQuotes46>casLogoutView<doubleQuotes46><newline46mondego>    p:warnCookieGenerator-ref=<doubleQuotes46>warnCookieGenerator<doubleQuotes46><newline46mondego>    p:ticketGrantingTicketCookieGenerator-ref=<doubleQuotes46>ticketGrantingTicketCookieGenerator<doubleQuotes46><newline46mondego>    p:servicesManager-ref=<doubleQuotes46>servicesManager<doubleQuotes46><newline46mondego>    p:followServiceRedirects=<doubleQuotes46>${cas.logout.followServiceRedirects:false}<doubleQuotes46>/><newline46mondego>"
"3794splitHere46","12797962splitHere46","${cas.logout.followServiceRedirects:false}"
"3795splitHere46","12797995splitHere46","client"
"3796splitHere46","12797995splitHere46","<dependency><newline46mondego>    <groupId>your.group</groupId><newline46mondego>    <artifactId>MyProjectEJB</artifactId><newline46mondego>    <version>1.0</version><newline46mondego></dependency><newline46mondego>"
"3797splitHere46","12797995splitHere46","<dependency><newline46mondego>    <groupId>your.group</groupId><newline46mondego>    <artifactId>MyProjectEJB</artifactId><newline46mondego>    <version>1.0</version><newline46mondego>    <classifier>client</classifier><newline46mondego></dependency><newline46mondego>"
"3798splitHere46","12798267splitHere46","String[] dataArray = data.split(<doubleQuotes46>,<doubleQuotes46>)<newline46mondego>"
"3799splitHere46","12798267splitHere46","dataArray"
"3800splitHere46","12798267splitHere46","byte[]"
"3801splitHere46","12798267splitHere46","String dataArray[] = data.split(<doubleQuotes46>,<doubleQuotes46>);<newline46mondego>    byte[] bytes = new byte[dataArray.length];<newline46mondego>    int count = 0;<newline46mondego>    for(String str : dataArray)<newline46mondego>    {<newline46mondego>        bytes[count++] = Byte.parseByte(str);<newline46mondego>    }<newline46mondego>"
"3802splitHere46","12798382splitHere46","mvn archetype:generate -DgroupId=com.mycompany.app -DartifactId=my-webapp -DarchetypeArtifactId=maven-archetype-webapp<newline46mondego>"
"3803splitHere46","12798382splitHere46","mvn clean install<newline46mondego>"
"3804splitHere46","12798438splitHere46","String selection = (String) webView.getEngine()<newline46mondego>                     .executeScript(<doubleQuotes46>window.getSelection().toString()<doubleQuotes46>);<newline46mondego>System.out.println(selection);<newline46mondego>"
"3805splitHere46","12798462splitHere46","super()"
"3806splitHere46","12798462splitHere46","public class MyClass extends ClassWithNoDefaultConstructor<newline46mondego>    public MyClass() {<newline46mondego>        super(); //this call will be added by the compiler if you don't have any super call here<newline46mondego>        // if the super class has no default constructor the above line will not compile<newline46mondego>        // and removing it won't help either because the compiler will add that call<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3807splitHere46","12798480splitHere46","this.img.getGraphics().drawImage(im, 0, 0, null)"
"3808splitHere46","12798480splitHere46","paintComponent"
"3809splitHere46","12798480splitHere46","JComponent"
"3810splitHere46","12798480splitHere46","JPanel"
"3811splitHere46","12798480splitHere46","GridBagLayout"
"3812splitHere46","12798480splitHere46","getPreferredSize"
"3813splitHere46","12798480splitHere46","public class ResizableImagePane {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        new ResizableImagePane();<newline46mondego>    }<newline46mondego><newline46mondego>    public ResizableImagePane() {<newline46mondego>        EventQueue.invokeLater(new Runnable() {<newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                try {<newline46mondego>                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());<newline46mondego>                } catch (ClassNotFoundException ex) {<newline46mondego>                } catch (InstantiationException ex) {<newline46mondego>                } catch (IllegalAccessException ex) {<newline46mondego>                } catch (UnsupportedLookAndFeelException ex) {<newline46mondego>                }<newline46mondego><newline46mondego>                JFrame frame = new JFrame();<newline46mondego>                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>                frame.setLayout(new BorderLayout());<newline46mondego>                frame.add(new ScalerPane());<newline46mondego>                frame.pack();<newline46mondego>                frame.setLocationRelativeTo(null);<newline46mondego>                frame.setVisible(true);<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>    protected class ScalerPane extends JPanel {<newline46mondego>        private JSlider slider;<newline46mondego>        private ImagePane imagePane;<newline46mondego>        public ScalerPane() {<newline46mondego><newline46mondego>            setLayout(new GridBagLayout());<newline46mondego>            GridBagConstraints gbc = new GridBagConstraints();<newline46mondego><newline46mondego>            gbc.gridx = 0;<newline46mondego>            gbc.gridy = 0;<newline46mondego><newline46mondego>            imagePane = new ImagePane();<newline46mondego><newline46mondego>            add(imagePane, gbc);<newline46mondego><newline46mondego>            gbc.gridy = 1;<newline46mondego>            gbc.weightx = 0;<newline46mondego>            gbc.weighty = 0;<newline46mondego>            gbc.fill = GridBagConstraints.HORIZONTAL;<newline46mondego><newline46mondego>            slider = new JSlider();<newline46mondego>            slider.setMinimum(1);<newline46mondego>            slider.setMaximum(100);<newline46mondego>            gbc.weightx = 1;<newline46mondego>            gbc.weighty = 1;<newline46mondego>            gbc.anchor = GridBagConstraints.SOUTH;<newline46mondego>            gbc.fill = GridBagConstraints.HORIZONTAL;<newline46mondego>            add(slider, gbc);<newline46mondego><newline46mondego>            slider.addChangeListener(new ChangeListener() {<newline46mondego>                @Override<newline46mondego>                public void stateChanged(ChangeEvent ce) {<newline46mondego>                    imagePane.setZoom(slider.getValue() / 100f);<newline46mondego>                }<newline46mondego>            });<newline46mondego>            slider.setValue(100);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    protected class ImagePane extends JPanel {<newline46mondego>        private BufferedImage background;<newline46mondego>        private Image scaled;<newline46mondego>        private float zoom;<newline46mondego>        public ImagePane() {<newline46mondego>            try {<newline46mondego>                background = ImageIO.read(new File(<doubleQuotes46>path/to/your/image<doubleQuotes46>));<newline46mondego>            } catch (IOException ex) {<newline46mondego>                ex.printStackTrace();<newline46mondego>            }<newline46mondego><newline46mondego>            setZoom(1f);<newline46mondego>            setBorder(new LineBorder(Color.RED));<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public Dimension getPreferredSize() {<newline46mondego>            return new Dimension(scaled.getWidth(this), scaled.getHeight(this));<newline46mondego>        }<newline46mondego><newline46mondego>        public void setZoom(float zoom) {<newline46mondego>            this.zoom = zoom;<newline46mondego>            int width = Math.round(background.getWidth() * zoom);<newline46mondego>            scaled = background.getScaledInstance(width, -1, Image.SCALE_SMOOTH);<newline46mondego><newline46mondego>            invalidate();<newline46mondego>            revalidate();<newline46mondego>            repaint();<newline46mondego>        }<newline46mondego><newline46mondego>        public float getZoom() {<newline46mondego>            return zoom;<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        protected void paintComponent(Graphics grphcs) {<newline46mondego>            super.paintComponent(grphcs);<newline46mondego><newline46mondego>            int x = (getWidth() - scaled.getWidth(this)) / 2;<newline46mondego>            int y = (getHeight() - scaled.getHeight(this)) / 2;<newline46mondego><newline46mondego>            grphcs.drawImage(scaled, x, y, this);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3814splitHere46","12798698splitHere46","service.autodiscoverUrl(<doubleQuotes46>adamb@fabrikam.com<doubleQuotes46>);<newline46mondego>"
"3815splitHere46","12798698splitHere46","service.setUrl(new java.net.URI(<newline46mondego>                    <doubleQuotes46>https://myhostname/EWS/Exchange.asmx<doubleQuotes46>));<newline46mondego>"
"3816splitHere46","12798813splitHere46","JSONObject jsonObj = new JSONObject();<newline46mondego>        JSONObject obj  = jsonObj.fromObject(userReorderOption);<newline46mondego>        JSONArray columnName = (JSONArray) obj.get(<doubleQuotes46>COLUMN<doubleQuotes46>);<newline46mondego><newline46mondego>        for (int i = 0; i < columnName.size(); i++) {<newline46mondego>            System.out.println(columnName.getString(i));<newline46mondego><newline46mondego>        }<newline46mondego>"
"3817splitHere46","12799002splitHere46","compare"
"3818splitHere46","12799002splitHere46","a[]"
"3819splitHere46","12799002splitHere46","b[]"
"3820splitHere46","12799002splitHere46","java.util.Arrays.sort(d2, new java.util.Comparator<int[]>() {<newline46mondego>                public int compare(int[] a, int[] b) {<newline46mondego>                    if (a.length != b.length) {<newline46mondego>                        return a.length < b.length ? -1 : 1;<newline46mondego>                    }<newline46mondego>                    return a[0] - b[0];<newline46mondego>                }<newline46mondego>            });<newline46mondego>"
"3821splitHere46","12799002splitHere46","compare"
"3822splitHere46","12799002splitHere46","public int compare(int[] a, int[] b) {<newline46mondego><newline46mondego>    if (a.length == b.length) {<newline46mondego>        for (int i = 0; i < a.length; i++) {<newline46mondego>            if (a[i] == b[i]) {<newline46mondego><newline46mondego>            } else {<newline46mondego>                return a[i] - b[i];<newline46mondego>            }<newline46mondego>        }<newline46mondego>        return 0;<newline46mondego><newline46mondego>    } else {<newline46mondego>        return a.length < b.length ? -1 : 1;<newline46mondego>    }                       <newline46mondego>}<newline46mondego>"
"3823splitHere46","12799034splitHere46","Names"
"3824splitHere46","12799034splitHere46","java.io.Serializable"
"3825splitHere46","12799034splitHere46","out = new ObjectOutputStream(urlCon.getOutputStream());<newline46mondego>"
"3826splitHere46","12799034splitHere46","out = new ObjectOutputStream(response.getOutputStream());<newline46mondego>out.writeObject(names);<newline46mondego>out.close();<newline46mondego>"
"3827splitHere46","12799034splitHere46","Names names = new Names();<newline46mondego>names.setName(<doubleQuotes46>ABC<doubleQuotes46>);<newline46mondego>names.setPlace(<doubleQuotes46>Bangalore<doubleQuotes46>);<newline46mondego>URL url;<newline46mondego>try {<newline46mondego>    url = new URL(<doubleQuotes46>http://localhost:6080/HttpClientSerializable/HttpPostServlet<doubleQuotes46>);<newline46mondego>    urlCon = (HttpURLConnection) url.openConnection();<newline46mondego><newline46mondego>    urlCon.setDoOutput(true); // to be able to write.<newline46mondego>    urlCon.setDoInput(true); // to be able to read.<newline46mondego><newline46mondego>    out = new ObjectOutputStream(urlCon.getOutputStream());<newline46mondego>    out.writeObject(names);<newline46mondego>    out.close();<newline46mondego><newline46mondego>    ObjectInputStream ois = new ObjectInputStream(urlCon.getInputStream());<newline46mondego>    names = (Names) ois.readObject();<newline46mondego>    ois.close();<newline46mondego>} catch (IOException e) {<newline46mondego>    e.printStackTrace();<newline46mondego>}<newline46mondego>catch (MalformedURLException e1) {<newline46mondego>    e1.printStackTrace();<newline46mondego>}<newline46mondego>"
"3828splitHere46","12799034splitHere46","ObjectInputStream in = new ObjectInputStream(request.getInputStream());<newline46mondego>try {<newline46mondego>    names = (Names) in.readObject();<newline46mondego>} catch (ClassNotFoundException e) {<newline46mondego>    e.printStackTrace();<newline46mondego>}<newline46mondego>in.close();<newline46mondego>ObjectOutputStream out = new ObjectOutputStream(<newline46mondego>    new FileOutputStream(<doubleQuotes46>C:/Documents and Settings/RAGASTH/Desktop/Names<doubleQuotes46>));<newline46mondego>out.writeObject(names);<newline46mondego>out.close();<newline46mondego><newline46mondego>ObjectOutputStream oos = new ObjectOutputStream(response.getOutputStream());<newline46mondego>oos.writeObject(names);<newline46mondego>oos.close();<newline46mondego>"
"3829splitHere46","12799091splitHere46","interface Listener<T> {<newline46mondego>    void matched(T t1);<newline46mondego>    void onlyIn1(T t1);<newline46mondego>    void onlyIn2(T t2);<newline46mondego>}<newline46mondego><newline46mondego>public static <T> void compare(List<T> list1, List<T> list2, Listener<T> tListener) {<newline46mondego>    Set<T> onlyIn1 = new HashSet<T>();<newline46mondego>    Set<T> onlyIn2 = new HashSet<T>();<newline46mondego>    for (int i = 0; i < list1.size(); i++) {<newline46mondego>        T t1 = list1.get(i);<newline46mondego>        T t2 = list2.get(i);<newline46mondego>        if (t1.equals(t2)) {<newline46mondego>            tListener.matched(t1);<newline46mondego>            continue;<newline46mondego>        }<newline46mondego>        if (onlyIn2.remove(t1)) <newline46mondego>            tListener.matched(t1);<newline46mondego>         else <newline46mondego>            onlyIn1.add(t1);<newline46mondego>        if (!onlyIn1.remove(t2))<newline46mondego>            onlyIn2.add(t2);<newline46mondego>    }<newline46mondego>    for (T t1 : onlyIn1)<newline46mondego>        tListener.onlyIn1(t1);<newline46mondego>    for (T t2 : onlyIn2)<newline46mondego>        tListener.onlyIn2(t2);<newline46mondego>}<newline46mondego>"
"3830splitHere46","12799175splitHere46","setSelection(ISelection, boolean)"
"3831splitHere46","12799175splitHere46","position"
"3832splitHere46","12799175splitHere46","mListViewer.setSelection(new StructuredSelection(mListViewer.getElementAt(position)), true);<newline46mondego>"
"3833splitHere46","12799292splitHere46","MemcachedInterface"
"3834splitHere46","12799416splitHere46","try {<newline46mondego>   Thread.sleep(20000);<newline46mondego>    } catch(InterruptedException ex) {<newline46mondego>    System.out.println(<doubleQuotes46>caught <doubleQuotes46> + ex.getMessage());<newline46mondego>    }<newline46mondego><newline46mondego>    timer.cancel();<newline46mondego><newline46mondego>    }<newline46mondego>"
"3835splitHere46","12799815splitHere46","View v_iew=inflater.inflate(R.layout.activity_login, null)) ;<newline46mondego>builder.setView(v_iew);<newline46mondego>"
"3836splitHere46","12799815splitHere46","uName = (EditText) findViewById(R.id.login_username); <newline46mondego>        passWord = (EditText) findViewById(R.id.login_password);<newline46mondego>"
"3837splitHere46","12799815splitHere46","uName = (EditText) v_iew.findViewById(R.id.login_username);<newline46mondego>         passWord = (EditText) v_iew.findViewById(R.id.login_password); <newline46mondego>"
"3838splitHere46","12799905splitHere46","import groovy.swing.SwingBuilder<newline46mondego><newline46mondego>def mainMenu = { builder -><newline46mondego>  builder.panel( id:'mainM' ) {<newline46mondego>    label( text: 'Welcome Travelers' )<newline46mondego>    button( text: 'Say Hello', actionPerformed:{<newline46mondego>      builder.optionPane( message:'Hello World' )<newline46mondego>             .createDialog( null, 'Hello' )<newline46mondego>             .show()<newline46mondego>    } )<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>new SwingBuilder().with { builder -><newline46mondego>  builder.edt {<newline46mondego>    frame( size:[ 1024, 768 ], show:true ) {<newline46mondego>      panel()<newline46mondego>      mainMenu( builder )<newline46mondego>    }<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"3839splitHere46","12800131splitHere46","public class MyDatePicker {<newline46mondego>DatePickerDialog mDatePickerDialog;<newline46mondego><newline46mondego><newline46mondego>public interface onDateSet {<newline46mondego>    public void onDate(DatePicker view, int year, int monthOfYear,<newline46mondego>            int dayOfMonth);<newline46mondego>}<newline46mondego><newline46mondego>onDateSet mOnDateSet;<newline46mondego><newline46mondego>public void setDateListener(onDateSet mOnDateSet) {<newline46mondego>    this.mOnDateSet = mOnDateSet;<newline46mondego>}<newline46mondego>public MyDatePicker(Context ctx) {<newline46mondego>    mDatePickerDialog = new DatePickerDialog(ctx, new OnDateSetListener() {<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void onDateSet(DatePicker view, int year, int monthOfYear,<newline46mondego>                int dayOfMonth) {<newline46mondego>            mOnDateSet.onDate(view, year, monthOfYear, dayOfMonth);<newline46mondego><newline46mondego>        }<newline46mondego>    }, 2000, 1, 1);<newline46mondego>}<newline46mondego><newline46mondego>public void show() {<newline46mondego>    mDatePickerDialog.show();<newline46mondego>}<newline46mondego>"
"3840splitHere46","12800131splitHere46","public void ShowDatePicker() {<newline46mondego>        MyDatePicker myTimePicker = new MyDatePicker(this);<newline46mondego>        myTimePicker.show();<newline46mondego>    myTimePicker.setDateListener(new onDateSet() {<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void onDate(DatePicker view, int year, int monthOfYear,<newline46mondego>                int dayOfMonth) {<newline46mondego>            Toast.makeText(MainActivity.this,<newline46mondego>                    <doubleQuotes46>date is <doubleQuotes46> + year + <doubleQuotes46>:<doubleQuotes46> + monthOfYear+<doubleQuotes46>:<doubleQuotes46>+dayOfMonth,<newline46mondego>                    Toast.LENGTH_LONG).show();<newline46mondego><newline46mondego>        }<newline46mondego>    });<newline46mondego>}<newline46mondego>"
"3841splitHere46","12800374splitHere46","File.renameTo(...)"
"3842splitHere46","12800409splitHere46","JSpinner"
"3843splitHere46","12800409splitHere46","SpinnerDateModel"
"3844splitHere46","12800409splitHere46","import java.awt.*;<newline46mondego>import java.text.SimpleDateFormat;<newline46mondego>import java.util.*;<newline46mondego>import javax.swing.*;<newline46mondego>import javax.swing.event.*;<newline46mondego><newline46mondego>public class TimeZoneSpinners {<newline46mondego><newline46mondego>    private final String[] zones = {<doubleQuotes46>Asia/Tokyo<doubleQuotes46>, <doubleQuotes46>Asia/Hong_Kong<doubleQuotes46>,<newline46mondego>        <doubleQuotes46>Asia/Calcutta<doubleQuotes46>, <doubleQuotes46>Europe/Paris<doubleQuotes46>, <doubleQuotes46>Europe/London<doubleQuotes46>,<newline46mondego>        <doubleQuotes46>America/New_York<doubleQuotes46>, <doubleQuotes46>America/Los_Angeles<doubleQuotes46><newline46mondego>    };<newline46mondego>    private final JLabel[] labels = new JLabel[zones.length];<newline46mondego>    private final SimpleDateFormat[] formats = new SimpleDateFormat[zones.length];<newline46mondego>    private JSpinner spinner;<newline46mondego>    private JSpinner spinnerDate;<newline46mondego>    private JSpinner spinnerMonth;<newline46mondego>    private JSpinner spinnerYear;<newline46mondego>    private SpinnerDateModel model;<newline46mondego>    private SimpleDateFormat format;<newline46mondego>    private JPanel panel;<newline46mondego>    private JFrame frame = new JFrame();<newline46mondego><newline46mondego>    public void makeUI() {<newline46mondego>        Calendar cal = Calendar.getInstance();<newline46mondego>        Date date = cal.getTime();<newline46mondego>        model = new SpinnerDateModel();<newline46mondego>        model.setValue(date);<newline46mondego>        spinner = new JSpinner(model);<newline46mondego>        spinner.addChangeListener(new ChangeListener() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void stateChanged(ChangeEvent e) {<newline46mondego>                Date date = (Date) ((JSpinner) e.getSource()).getValue();<newline46mondego>                for (int i = 0; i < labels.length; i++) {<newline46mondego>                    labels[i].setText(formats[i].format(date));<newline46mondego>                }<newline46mondego>            }<newline46mondego>        });<newline46mondego>        format = ((JSpinner.DateEditor) spinner.getEditor()).getFormat();<newline46mondego>        format.setTimeZone(TimeZone.getTimeZone(zones[0]));<newline46mondego>        format.applyPattern(<doubleQuotes46>yyyy-MM-dd HH:mm:ss<doubleQuotes46>);<newline46mondego>        panel = new JPanel(new GridLayout(zones.length, 2, 10, 10));<newline46mondego>        for (int i = 0; i < zones.length; i++) {<newline46mondego>            formats[i] = new SimpleDateFormat(<doubleQuotes46>yyyy-MMM-dd HH:mm:ss<doubleQuotes46>);<newline46mondego>            formats[i].setTimeZone(TimeZone.getTimeZone(zones[i]));<newline46mondego>            JLabel label = new JLabel(zones[i]);<newline46mondego>            labels[i] = new JLabel(formats[i].format(date));<newline46mondego>            panel.add(label);<newline46mondego>            panel.add(labels[i]);<newline46mondego>        }<newline46mondego>        frame.setLayout(new BorderLayout(10, 10));<newline46mondego>        frame.add(spinner, BorderLayout.NORTH);<newline46mondego>        frame.add(panel, BorderLayout.CENTER);<newline46mondego>        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        frame.pack();<newline46mondego>        frame.setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        SwingUtilities.invokeLater(new Runnable() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                new TimeZoneSpinners().makeUI();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3845splitHere46","12800466splitHere46","Intent in=new Intent(currentclass.this,nextactivity.class);<newline46mondego>in.putExtras(<doubleQuotes46>value_name<doubleQuotes46>,value);<newline46mondego>startActivity(in);<newline46mondego>finish();<newline46mondego>"
"3846splitHere46","12800466splitHere46","If(getIntent().getExtras!=null)<newline46mondego>{<newline46mondego>   String msg=getIntent().getStringExtra(<doubleQuotes46>value_name<doubleQuotes46>); // value_name is the attribute given in second activity<newline46mondego>}<newline46mondego>"
"3847splitHere46","12800556splitHere46","<context:component-scan>"
"3848splitHere46","12800556splitHere46","<context:component-scan base-package=<doubleQuotes46>com.comviva.mfs.eig.logging.dataAccess<doubleQuotes46> /><newline46mondego>"
"3849splitHere46","12800556splitHere46","<beans:import resource=<doubleQuotes46>appnewcontext.xml<doubleQuotes46>/><newline46mondego>"
"3850splitHere46","12800568splitHere46","String filename = sc.getRealPath(<doubleQuotes46>image.gif<doubleQuotes46>);<newline46mondego>"
"3851splitHere46","12800568splitHere46","<img src=<doubleQuotes46>/ServletName?id=xxxx<doubleQuotes46> ... ... ... /><newline46mondego>"
"3852splitHere46","12800568splitHere46","< url-pattern >"
"3853splitHere46","12800568splitHere46","ServletName"
"3854splitHere46","12800568splitHere46","id=xxxx"
"3855splitHere46","12800619splitHere46","rsSize"
"3856splitHere46","12800619splitHere46","int"
"3857splitHere46","12800619splitHere46","totalRecords"
"3858splitHere46","12800619splitHere46","String"
"3859splitHere46","12800669splitHere46","import java.awt.Dimension;<newline46mondego><newline46mondego>import javax.swing.BorderFactory;<newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JScrollPane;<newline46mondego>import javax.swing.JSplitPane;<newline46mondego>import javax.swing.JTable;<newline46mondego>import javax.swing.SwingUtilities;<newline46mondego>import javax.swing.UIManager;<newline46mondego><newline46mondego>public class JSplitPaneToy {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        UIManager.getDefaults().put(<doubleQuotes46>SplitPane.border<doubleQuotes46>, BorderFactory.createEmptyBorder());<newline46mondego>        SwingUtilities.invokeLater(new Runnable() {<newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                new JSplitPaneToy().initUI();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>    public void initUI() {<newline46mondego>        JSplitPane sp = new JSplitPane(JSplitPane.VERTICAL_SPLIT, makePanel(), makePanel());<newline46mondego>        sp = new JSplitPane(JSplitPane.VERTICAL_SPLIT, makePanel(), sp);<newline46mondego>        sp = new JSplitPane(JSplitPane.VERTICAL_SPLIT, makePanel(), sp);<newline46mondego>        sp = new JSplitPane(JSplitPane.VERTICAL_SPLIT, makePanel(), sp);<newline46mondego><newline46mondego>        JFrame frame = new JFrame(<doubleQuotes46>JSplitPane Toy<doubleQuotes46>);<newline46mondego>        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        frame.setContentPane(sp);<newline46mondego>        frame.pack();<newline46mondego>        frame.setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>    private JScrollPane makePanel() {<newline46mondego>        JScrollPane pane = new JScrollPane(new JTable(new Object[][] { { 0, 1, 2 }, { 1, 2, 3 }, { 2, 3, 4 } }, new Object[] { 1, 2, 3 }));<newline46mondego>        pane.setPreferredSize(new Dimension(200, 100));<newline46mondego>        return pane;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3860splitHere46","12800728splitHere46","new T[...] // prohibited<newline46mondego>"
"3861splitHere46","12800746splitHere46","null"
"3862splitHere46","12800746splitHere46","int"
"3863splitHere46","12800746splitHere46","long"
"3864splitHere46","12800746splitHere46","Integer"
"3865splitHere46","12800746splitHere46","Long"
"3866splitHere46","12800746splitHere46","BigInteger"
"3867splitHere46","12800746splitHere46","BigDecimal"
"3868splitHere46","12800746splitHere46","null"
"3869splitHere46","12800746splitHere46","-Dorg.apache.el.parser.COERCE_TO_ZERO=false<newline46mondego>"
"3870splitHere46","12800801splitHere46","private int getFileSize(URL url) {<newline46mondego>    HttpURLConnection conn = null;<newline46mondego>    try {<newline46mondego>        conn = (HttpURLConnection) url.openConnection();<newline46mondego>        conn.setRequestMethod(<doubleQuotes46>HEAD<doubleQuotes46>);<newline46mondego>        conn.getInputStream();<newline46mondego>        return conn.getContentLength();<newline46mondego>    } catch (IOException e) {<newline46mondego>        return -1;<newline46mondego>    } finally {<newline46mondego>        conn.disconnect();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3871splitHere46","12800897splitHere46","init()"
"3872splitHere46","12800897splitHere46","destroy()"
"3873splitHere46","12800897splitHere46","init()"
"3874splitHere46","12800903splitHere46","struts"
"3875splitHere46","12800903splitHere46","form"
"3876splitHere46","12800903splitHere46","action"
"3877splitHere46","12800903splitHere46","controllers"
"3878splitHere46","12800903splitHere46","struts"
"3879splitHere46","12800903splitHere46","load"
"3880splitHere46","12801060splitHere46","class CommandFactory extends Factory[Command] {<newline46mondego><newline46mondego>  override def create():Command = {<newline46mondego>    new Command() {<newline46mondego>      def destroy() {}<newline46mondego><newline46mondego>      def setInputStream(in: InputStream) {}<newline46mondego><newline46mondego>      def setErrorStream(err: OutputStream) {}<newline46mondego><newline46mondego>      def setOutputStream(out: OutputStream) {}<newline46mondego><newline46mondego>      def start(env: Environment) {}<newline46mondego><newline46mondego>      def setExitCallback(callback: ExitCallback) {}<newline46mondego>    }<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"3881splitHere46","12801060splitHere46","sshd.setShellFactory(new CommandFactory())<newline46mondego>"
"3882splitHere46","12801075splitHere46","int g = 0;<newline46mondego>"
"3883splitHere46","12801075splitHere46","ArrayList<Process>"
"3884splitHere46","12801221splitHere46","java -Xmx1024m  ....<newline46mondego>"
"3885splitHere46","12801237splitHere46","DateTime dateTimeDOB = ...<newline46mondego><newline46mondego>    int day = dateTimeDOB.getDay();<newline46mondego>    int month = dateTimeDOB.getMonth() + 1;<newline46mondego>    int year = dateTimeDOB.getYear();<newline46mondego><newline46mondego>    String strDate = (day < 10) ? <doubleQuotes46>0<doubleQuotes46> + day + <doubleQuotes46>/<doubleQuotes46> : day + <doubleQuotes46>/<doubleQuotes46>;<newline46mondego>    strDate += (month < 10) ? <doubleQuotes46>0<doubleQuotes46> + month + <doubleQuotes46>/<doubleQuotes46> : month + <doubleQuotes46>/<doubleQuotes46>;<newline46mondego>    strDate += year;<newline46mondego>"
"3886splitHere46","12801290splitHere46","Enumeration<URL> enumer = Thread.currentThread().getContextClassLoader().getResources(<doubleQuotes46>/Path/To/xyz.properties<doubleQuotes46>);<newline46mondego>while (enumer.hasMoreElements()) {<newline46mondego>    System.out.print(enumer.nextElement());<newline46mondego>}<newline46mondego>"
"3887splitHere46","12801331splitHere46","java -cp JarFile.jar package.ClassName"
"3888splitHere46","12801331splitHere46","java -jar pJarFile.jar"
"3889splitHere46","12801356splitHere46","StoredConfig config = git.getRepository().getConfig();<newline46mondego>config.setString(<doubleQuotes46>remote<doubleQuotes46>, <doubleQuotes46>origin<doubleQuotes46>, <doubleQuotes46>url<doubleQuotes46>, <doubleQuotes46>http://github.com/user/repo<doubleQuotes46>);<newline46mondego>config.save();<newline46mondego>"
"3890splitHere46","12801373splitHere46","if (activeImage != null) {<newline46mondego>    activeImage.NewPosition(activePosition);<newline46mondego>}<newline46mondego>"
"3891splitHere46","12801373splitHere46","NewPosition"
"3892splitHere46","12801373splitHere46","WordParts"
"3893splitHere46","12801373splitHere46","WordParts"
"3894splitHere46","12801373splitHere46","Point"
"3895splitHere46","12801373splitHere46","Point"
"3896splitHere46","12801373splitHere46","activePosition.x = (int) event.getX();<newline46mondego>activePosition.y = (int) event.getY();<newline46mondego>"
"3897splitHere46","12801373splitHere46","WordParts"
"3898splitHere46","12801393splitHere46","7z.sfx"
"3899splitHere46","12801393splitHere46","7zSD.sfx"
"3900splitHere46","12801393splitHere46","MSVCRT.dll"
"3901splitHere46","12801501splitHere46","SimpleDateFormat"
"3902splitHere46","12801501splitHere46","SimpleDateFormat"
"3903splitHere46","12801501splitHere46","TimeUnit"
"3904splitHere46","12801501splitHere46","public static void main(String[] args) throws Exception {<newline46mondego>        long millis = 900000;<newline46mondego><newline46mondego>        String s = String.format(<doubleQuotes46>%d min, %d sec<doubleQuotes46>,<newline46mondego>                TimeUnit.MILLISECONDS.toMinutes(millis),<newline46mondego>                TimeUnit.MILLISECONDS.toSeconds(millis)<newline46mondego>                - TimeUnit.MINUTES.toSeconds(TimeUnit.MILLISECONDS.toMinutes(millis)));<newline46mondego><newline46mondego>        System.out.println(s);<newline46mondego><newline46mondego><newline46mondego>    }<newline46mondego>"
"3905splitHere46","12801501splitHere46","15 min, 0 sec"
"3906splitHere46","12801516splitHere46","int[][] values = new int[rows][];<newline46mondego>for(int i = 0; i < values.length; i++)<newline46mondego>{<newline46mondego>    values[i] = new int[i+1];<newline46mondego><newline46mondego>    for(int j = 0; j < values[i].length; j++)<newline46mondego>    {<newline46mondego>        values[i][j] = kb.nextInt();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3907splitHere46","12801516splitHere46","for"
"3908splitHere46","12801613splitHere46","LinearLayout ll = (LinearLayout)findViewById(R.id.LinearLayout);<newline46mondego>ll.post(new Runnable(){<newline46mondego>    public void run() {<newline46mondego>        //get dimensions in here.   <newline46mondego>    }<newline46mondego>});<newline46mondego>"
"3909splitHere46","12801614splitHere46","final"
"3910splitHere46","12801696splitHere46","Unluckily, the library hasn't seen an update for over a year, and it's not in any Maven repo - so for me it's not a really reliable one"
"3911splitHere46","12801817splitHere46","java.util.concurrent"
"3912splitHere46","12801817splitHere46","BlockingQueue<E>"
"3913splitHere46","12801833splitHere46","Catch(HibernateException he){<newline46mondego>   SQLException sqe = he.getSQLEception();<newline46mondego>   String sqlState = sqe.getSQLState();<newline46mondego>   if(sqlState.equals(<doubleQuotes46>23000<doubleQuotes46>){<newline46mondego>       // Handle your exception<newline46mondego>   } <newline46mondego>}<newline46mondego>"
"3914splitHere46","12801941splitHere46","String str = <doubleQuotes46>AbCdEf<doubleQuotes46>;<newline46mondego>char[] arr = str.toCharArray();<newline46mondego><newline46mondego>for(int i = 0; i < arr.length; i++) System.out.print(arr[i]);<newline46mondego>System.out.println();<newline46mondego><newline46mondego>Arrays.sort(arr); // sorted in ascending order<newline46mondego><newline46mondego>// print them backwards i.e. descending order.<newline46mondego>for(int i = arr.length - 1; i >= 0; i--) System.out.print(arr[i]);<newline46mondego>System.out.println();<newline46mondego>"
"3915splitHere46","12801941splitHere46","AbCdEf<newline46mondego>fdbECA<newline46mondego>"
"3916splitHere46","12801960splitHere46","public static final float FLOAT_1  =  1;<newline46mondego> public static final float FLOAT_20 = 20;<newline46mondego><newline46mondego> public final void testAddPrice_priceIsGreaterThanZero() {<newline46mondego>   expectedList.add((float) FLOAT_1);<newline46mondego>   expectedList.add((float) FLOAT_20);<newline46mondego>   List<Float> expectedList = new ArrayList<Float>();<newline46mondego>   expectedList.add((float) FLOAT_1);<newline46mondego>   expectedList.add((float) FLOAT_20);<newline46mondego>   //...<newline46mondego> }<newline46mondego>"
"3917splitHere46","12801960splitHere46","#getPriceList()"
"3918splitHere46","12801960splitHere46","getPriceList().toString()"
"3919splitHere46","12801960splitHere46","setUp()"
"3920splitHere46","12801961splitHere46","if (packet.getError() != null) <newline46mondego>{<newline46mondego>    Exception e = new XMPPException(packet.getError())<newline46mondego>    System.out.println(e);<newline46mondego>}<newline46mondego>"
"3921splitHere46","12801976splitHere46","getattr"
"3922splitHere46","12801976splitHere46",">>> getattr(Mapping, s)<newline46mondego>1<newline46mondego>"
"3923splitHere46","12801976splitHere46","getattr(x, 'foobar')"
"3924splitHere46","12801976splitHere46","x.foobar"
"3925splitHere46","12801976splitHere46","AttributeError"
"3926splitHere46","12802042splitHere46","<a[^>]*>([^<]*)<[^>]*>(.*)<newline46mondego>"
"3927splitHere46","12802084splitHere46","SELECT * FROM system.peers"
"3928splitHere46","12802101splitHere46","import java.awt.Window;<newline46mondego><newline46mondego>import javax.swing.JPopupMenu;<newline46mondego>import javax.swing.SwingUtilities;<newline46mondego><newline46mondego>public class TranslucentPopup extends JPopupMenu {<newline46mondego><newline46mondego>    {<newline46mondego>        // need to disable that to work<newline46mondego>        setLightWeightPopupEnabled(false);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void setVisible(boolean visible) {<newline46mondego>        if (visible == isVisible())<newline46mondego>            return;<newline46mondego>        super.setVisible(visible);<newline46mondego>        if (visible) {<newline46mondego>            // attempt to set tranparency<newline46mondego>            try {<newline46mondego>                Window w = SwingUtilities.getWindowAncestor(this);<newline46mondego>                w.setOpacity(0.667F);<newline46mondego>            } catch (Exception e) {<newline46mondego>                e.printStackTrace();<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"3929splitHere46","12802102splitHere46","DataFormatter fmt = new DataFormatter();<newline46mondego> for (Row r : sheet) {<newline46mondego>    for (Cell c : r) {<newline46mondego>       CellReference cr = new CellRefence(c);<newline46mondego>       System.out.println(<doubleQuotes46>Cell <doubleQuotes46> + cr.formatAsString() + <doubleQuotes46> is <doubleQuotes46> + <newline46mondego>                          fmt.formatCellValue(c) );<newline46mondego>    }<newline46mondego> }<newline46mondego>"
"3930splitHere46","12802148splitHere46","Card[] temp = rummyHand.getHand().clone();<newline46mondego>"
"3931splitHere46","12802148splitHere46","="
"3932splitHere46","12802148splitHere46","="
"3933splitHere46","12802148splitHere46","new Card[8];<newline46mondego>"
"3934splitHere46","12802148splitHere46","Card[] temp<newline46mondego>"
"3935splitHere46","12802148splitHere46","=<newline46mondego>"
"3936splitHere46","12802148splitHere46","rummyHand.getHand();<newline46mondego>"
"3937splitHere46","12802148splitHere46","temp = rummyHand.getHand();<newline46mondego>"
"3938splitHere46","12802148splitHere46","temp"
"3939splitHere46","12802148splitHere46","copyOf"
"3940splitHere46","12802148splitHere46","arrayCopy"
"3941splitHere46","12802148splitHere46","clone"
"3942splitHere46","12802593splitHere46","System.out"
"3943splitHere46","12802593splitHere46","stdout"
"3944splitHere46","12802609splitHere46","JTextArea"
"3945splitHere46","12802609splitHere46","JTextPane"
"3946splitHere46","12802609splitHere46","JLabel"
"3947splitHere46","12802609splitHere46","JTextArea"
"3948splitHere46","12802717splitHere46","// method 2 of initializing and adding elements to the list<newline46mondego>List<String> list1 = new LinkedList<String> (Arrays.asList(colors));<newline46mondego>"
"3949splitHere46","12802717splitHere46","List<String> list1 = new LinkedList<String> (new ArrayList<String>(colors));<newline46mondego>"
"3950splitHere46","12802717splitHere46","ArrayList"
"3951splitHere46","12802717splitHere46","ArrayList(E[] array) {<newline46mondego>            if (array==null)<newline46mondego>                throw new NullPointerException();<newline46mondego>        a = array;<newline46mondego>    }<newline46mondego>"
"3952splitHere46","12802717splitHere46","LinkedList"
"3953splitHere46","12802717splitHere46","public LinkedList(Collection<? extends E> c) {<newline46mondego>    this();<newline46mondego>    addAll(c);<newline46mondego>    }<newline46mondego>"
"3954splitHere46","12802717splitHere46","LinkedList"
"3955splitHere46","12802818splitHere46","public class ProgressModel implements IModel<String><newline46mondego>{<newline46mondego>    private static final long serialVersionUID = 1L;<newline46mondego><newline46mondego>    public String status;<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void detach ()<newline46mondego>    {<newline46mondego>        // TODO Auto-generated method stub<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public String getObject ()<newline46mondego>    {<newline46mondego>        return status;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void setObject (String object)<newline46mondego>    {<newline46mondego>        status = object;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3956splitHere46","12802818splitHere46","pm = new ProgressModel ();<newline46mondego>statusLbl = new Label (<doubleQuotes46>statusLbl<doubleQuotes46>, pm);<newline46mondego>statusLbl.setOutputMarkupId (true);<newline46mondego>"
"3957splitHere46","12802818splitHere46","@Override<newline46mondego>protected void onTimer (AjaxRequestTarget target)<newline46mondego>{<newline46mondego>    target.add (statusLbl);<newline46mondego>}<newline46mondego>"
"3958splitHere46","12802818splitHere46","class Task implements Runnable<newline46mondego>{<newline46mondego>    public Task (ProgressModel progressModel)<newline46mondego>    {<newline46mondego>        this.pm = progressModel;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void run ()<newline46mondego>    {<newline46mondego>        // some operations<newline46mondego>        pm.status = x;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3959splitHere46","12802820splitHere46","abstract class MenuItem {<newline46mondego>  int index;<newline46mondego><newline46mondego>  protected MenuItem(int index) {<newline46mondego>    this.index = index;<newline46mondego>  }<newline46mondego><newline46mondego>  abstract void action();<newline46mondego>}<newline46mondego><newline46mondego>class ExitMenuItem {<newline46mondego>  ExitMenuItem() {<newline46mondego>    super(3); // the index value of the menu item<newline46mondego>  }<newline46mondego><newline46mondego>  void action() {<newline46mondego>    System.exit(0);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"3960splitHere46","12802820splitHere46","class Menu {<newline46mondego>  ArrayList<MenuItem> items;<newline46mondego><newline46mondego>  void executeAction(String input) {<newline46mondego>    ..<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"3961splitHere46","12803209splitHere46","import java.awt.Robot;<newline46mondego>import java.awt.event.KeyEvent;<newline46mondego>import java.util.Scanner;<newline46mondego>import java.util.concurrent.TimeUnit;<newline46mondego><newline46mondego>public class ConsoleTest {<newline46mondego><newline46mondego>    /**<newline46mondego>     * @param args<newline46mondego>     */<newline46mondego>    public static void main(String[] args) {<newline46mondego>        new TimeoutThread().start();<newline46mondego>        new ReaderThread().start();<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>class ReaderThread extends Thread {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void run() {<newline46mondego>        System.out.print(<doubleQuotes46>Please enter your name: <doubleQuotes46>);<newline46mondego>        try(Scanner in = new Scanner(System.in)) {<newline46mondego>            String name = in.nextLine();<newline46mondego>            if(name.trim().isEmpty()) {<newline46mondego>                name = <doubleQuotes46>TEST<doubleQuotes46>; // default user name<newline46mondego>            }<newline46mondego>            System.out.println(<doubleQuotes46>Name entered = <doubleQuotes46> + name);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>class TimeoutThread extends Thread {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void run() {<newline46mondego>        try {<newline46mondego>            Thread.sleep(TimeUnit.SECONDS.toMillis(5));<newline46mondego>            Robot robot = new Robot();<newline46mondego>            robot.keyPress(KeyEvent.VK_ENTER);<newline46mondego>            robot.keyRelease(KeyEvent.VK_ENTER);<newline46mondego>        } catch(Exception e) {<newline46mondego>            e.printStackTrace();<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"3962splitHere46","12803209splitHere46","ENTER"
"3963splitHere46","12803215splitHere46","List<Item> items = session.createQuery(<newline46mondego>          <doubleQuotes46>from Item i left join fetch i.bids b where b.amount > :amount<doubleQuotes46>)<newline46mondego>          .setParameter(<doubleQuotes46>amount<doubleQuotes46>, 100)<newline46mondego>          .list();<newline46mondego>"
"3964splitHere46","12803215splitHere46","List<Item> items = session.createQuery(<newline46mondego>          <doubleQuotes46>from Item i left join fetch i.bids b <doubleQuotes46> +<newline46mondego>          <doubleQuotes46>where not exists (from Bid b where b.item = i and b.amount <= :amount)<doubleQuotes46>)<newline46mondego>          .setParameter(<doubleQuotes46>amount<doubleQuotes46>, 100)<newline46mondego>          .list();<newline46mondego>"
"3965splitHere46","12803242splitHere46","key"
"3966splitHere46","12803586splitHere46","out.println"
"3967splitHere46","12803586splitHere46","StringBuilder contentInnerHtml = new StringBuilder();<newline46mondego>"
"3968splitHere46","12803586splitHere46","while ((strLine = br.readLine()) != null)   <newline46mondego>{<newline46mondego>    contentInnerHtml.append(strLine);<newline46mondego>}<newline46mondego>"
"3969splitHere46","12803586splitHere46","toString()"
"3970splitHere46","12803586splitHere46","<script type=<doubleQuotes46>text/javascript<doubleQuotes46> language=<doubleQuotes46>JavaScript<doubleQuotes46>><newline46mondego>function showContent()<newline46mondego>{<newline46mondego>    document.getElementById('showContent').innerHTML = <doubleQuotes46><%=contentInnerHtml.toString()%><doubleQuotes46>;<newline46mondego>}<newline46mondego></script><newline46mondego>"
"3971splitHere46","12803688splitHere46","public class ChatBean implements Serializable {<newline46mondego>   private static final long serialVersionUID = 1L;<newline46mondego>   private com.ibm.xsp.http.MimeMultipart chatContent;<newline46mondego><newline46mondego>   public com.ibm.xsp.http.MimeMultipart getChatContent() {<newline46mondego>       return chatContent;<newline46mondego>   }<newline46mondego><newline46mondego>   public void setChatContent(com.ibm.xsp.http.MimeMultipart chatContent) {<newline46mondego>       this.chatContent = chatContent;<newline46mondego>   }<newline46mondego><newline46mondego>   public void saveContent() {<newline46mondego>       // TODO implement save<newline46mondego>       this.chatContent = null;<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"3972splitHere46","12803830splitHere46","public void onItemClick(AdapterView<?> parent, View view, final int pos, long id){<newline46mondego>    selected_student=studentList.get(pos); //member of your activity.<newline46mondego>});<newline46mondego>"
"3973splitHere46","12803835splitHere46","<context:property-placeholder location=<doubleQuotes46>classpath:your.properties<doubleQuotes46> ignore-unresolvable=<doubleQuotes46>true<doubleQuotes46>/><newline46mondego>"
"3974splitHere46","12803835splitHere46","@Value(<doubleQuotes46>${cities}<doubleQuotes46>)<newline46mondego>private String cities;<newline46mondego>"
"3975splitHere46","12803835splitHere46","cities = my test string <newline46mondego>"
"3976splitHere46","12803844splitHere46","java.lang.String"
"3977splitHere46","12803844splitHere46","replaceAll"
"3978splitHere46","12803844splitHere46","file = file.replaceAll(<doubleQuotes46>/<doubleQuotes46>, <doubleQuotes46>_<doubleQuotes46>);<newline46mondego>"
"3979splitHere46","12803844splitHere46","<doubleQuotes46>A/B<doubleQuotes46>"
"3980splitHere46","12803872splitHere46","BorderLayout"
"3981splitHere46","12803872splitHere46","CENTER"
"3982splitHere46","12803872splitHere46","add(mainHolder, BorderLayout.WEST);   //has the JButtons, JTextArea.<newline46mondego>add(canvas, BorderLayout.CENTER);<newline46mondego>"
"3983splitHere46","12804045splitHere46","result_lbl"
"3984splitHere46","12804045splitHere46","input1_tb = new JTextField(20);<newline46mondego>"
"3985splitHere46","12804045splitHere46","why doesn't the button listener is not kicking in the first time?<newline46mondego>"
"3986splitHere46","12804045splitHere46","calculate_btn.addActionListener(new java.awt.event.ActionListener() {<newline46mondego>        public void actionPerformed(java.awt.event.ActionEvent evt) {<newline46mondego>            calculate_btnActionPerformed(evt);<newline46mondego>        }<newline46mondego>    });<newline46mondego>"
"3987splitHere46","12804045splitHere46","private void calculate_btnActionPerformed(java.awt.event.ActionEvent evt) {                                              <newline46mondego>    // TODO add your handling code here:<newline46mondego>    InvalidValueException ive = new InvalidValueException();<newline46mondego>    calculate_btn.addActionListener(ive);<newline46mondego>    //addActionListener<newline46mondego>}            <newline46mondego>"
"3988splitHere46","12804045splitHere46","calculate_btn.addActionListener(new InvalidValueException());<newline46mondego>"
"3989splitHere46","12804086splitHere46","\n"
"3990splitHere46","12804086splitHere46","System.lineSeparator()"
"3991splitHere46","12804086splitHere46","BufferedWriter"
"3992splitHere46","12804086splitHere46","newLine"
"3993splitHere46","12804125splitHere46","super"
"3994splitHere46","12804125splitHere46","super"
"3995splitHere46","12804125splitHere46","Dog"
"3996splitHere46","12804125splitHere46","CleverDog"
"3997splitHere46","12804125splitHere46","/* file Dog.java */<newline46mondego>public static class Dog extends Animal {<newline46mondego><newline46mondego>    private String name;<newline46mondego><newline46mondego>    public Dog(String name) {<newline46mondego>        this.name = name;<newline46mondego>    }<newline46mondego><newline46mondego>    public String getName() {<newline46mondego>        return name;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>/* file CleverDog.java */<newline46mondego>public class CleverDog extends Dog {<newline46mondego><newline46mondego>    public CleverDog(String name) {<newline46mondego>         super(name);<newline46mondego>    }<newline46mondego><newline46mondego>    public void rollover() {<newline46mondego>        System.out.println(super.getName()+<doubleQuotes46> rolls over!<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    public void speak() {<newline46mondego>        System.out.println(super.getName() + <doubleQuotes46> speaks!<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"3998splitHere46","12804125splitHere46","getName(...)"
"3999splitHere46","12804125splitHere46","/* file DogOnTv.java */<newline46mondego>public class DogOnTv extends CleverDog {<newline46mondego><newline46mondego>    String fictionalName;<newline46mondego><newline46mondego>    public DogOnTv(String realName, String fictionalName) {<newline46mondego>        super(realName);<newline46mondego>        fictionalName = fictionalName;<newline46mondego>    }<newline46mondego><newline46mondego>    public String getName() {<newline46mondego>        return fictionalName;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"4000splitHere46","12804125splitHere46","super"
"4001splitHere46","12804125splitHere46","CleverDog"
"4002splitHere46","12804125splitHere46","getName()"
"4003splitHere46","12804125splitHere46","super"
"4004splitHere46","12804125splitHere46","Dog.getName()"
"4005splitHere46","12804125splitHere46","DogOnTv"
"4006splitHere46","12804125splitHere46","System.out.println(<doubleQuotes46>Showcasing the Clever Dog!<doubleQuotes46>);<newline46mondego>    CleverDog showDog = new CleverDog(<doubleQuotes46>TugBoat<doubleQuotes46>);<newline46mondego>    showDog.rollover();<newline46mondego>    showDog.speak();<newline46mondego><newline46mondego>    System.out.println(<doubleQuotes46>And now the Dog on Tv!<doubleQuotes46>);<newline46mondego>    DogOnTv dogOnTv = new DogOnTv(<doubleQuotes46>Pal<doubleQuotes46>, <doubleQuotes46>Lassie<doubleQuotes46>);<newline46mondego>    dogOnTv.rollover();<newline46mondego>"
"4007splitHere46","12804125splitHere46","Showcasing the Clever Dog!<newline46mondego>Tugboat rolls over!<newline46mondego>Tugboat speaks!<newline46mondego><newline46mondego>And now the Dog on Tv!<newline46mondego>Pal rolls over!<newline46mondego>Pal speaks!<newline46mondego>"
"4008splitHere46","12804125splitHere46","super"
"4009splitHere46","12804125splitHere46","final"
"4010splitHere46","12804125splitHere46","/* file CleverDog.java */<newline46mondego>public class CleverDog extends Dog {<newline46mondego><newline46mondego>    public CleverDog(String name) {<newline46mondego>         super(name);<newline46mondego>    }<newline46mondego><newline46mondego>    public final String getName() { // final so it can't be overrided<newline46mondego>        return super.getName();<newline46mondego>    }<newline46mondego><newline46mondego>    public void rollover() {<newline46mondego>        System.out.println(this.getName()+<doubleQuotes46> rolls over!<doubleQuotes46>); // no `super` keyword<newline46mondego>    }<newline46mondego><newline46mondego>    public void speak() {<newline46mondego>        System.out.println(this.getName() + <doubleQuotes46> speaks!<doubleQuotes46>); // no `super` keyword<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"4011splitHere46","12804241splitHere46","SELECT ?pizza (strafter(str(?pizza), <doubleQuotes46>#<doubleQuotes46>) AS ?localName)<newline46mondego>WHERE<newline46mondego>"
"4012splitHere46","12804307splitHere46","ErrorListener"
"4013splitHere46","12804307splitHere46","Transformer"
"4014splitHere46","12804307splitHere46","TransformerFactory"
"4015splitHere46","12804307splitHere46","Transformer transformer = factory.newTransformer(config);<newline46mondego>transformer.setErrorListener(listener);<newline46mondego>"
"4016splitHere46","12804487splitHere46","int sum =0;<newline46mondego>for(int row=0; row < votes.length; row++)<newline46mondego>{   <newline46mondego>    for (int col=0; col < votes[row].length; col++)<newline46mondego>    {<newline46mondego>        sum = sum + votes[row][col];<newline46mondego>    }<newline46mondego>    fmt = new Formatter();<newline46mondego>    fmt.format(<doubleQuotes46>%21d<doubleQuotes46>, sum);<newline46mondego>    System.out.print(fmt);  <newline46mondego>}<newline46mondego>"
"4017splitHere46","12804487splitHere46","sum"
"4018splitHere46","12804496splitHere46","xjc -mark-generated -no-header -target 2.1 -npa .<newline46mondego>"
"4019splitHere46","12804496splitHere46","generated"
"4020splitHere46","12804496splitHere46","org.htng._2009b"
"4021splitHere46","12804496splitHere46","HTNG_CommonTypes.xsd"
"4022splitHere46","12804496splitHere46","targetNamespace"
"4023splitHere46","12804496splitHere46","generated"
"4024splitHere46","12804496splitHere46","HTNG_CommonTypes"
"4025splitHere46","12804496splitHere46","targetNamespace"
"4026splitHere46","12804496splitHere46","org.htng._2009b"
"4027splitHere46","12804496splitHere46","-p"
"4028splitHere46","12804496splitHere46","xjc"
"4029splitHere46","12804496splitHere46","CommonTypes"
"4030splitHere46","12804496splitHere46","xjc -mark-generated -no-header -target 2.1 -npa -p com.justin.htng HTNG_P*.xsd<newline46mondego>"
"4031splitHere46","12804524splitHere46","class Employee {<newline46mondego>    int id;<newline46mondego>    String Name;<newline46mondego>    double salary;<newline46mondego>}<newline46mondego>"
"4032splitHere46","12804524splitHere46","ArrayList<Employee>"
"4033splitHere46","12804524splitHere46","POJO"
"4034splitHere46","12804524splitHere46","List<Employee> empList = new ArrayList<Employee>();<newline46mondego><newline46mondego>empList.add(new Employee(1001, <doubleQuotes46>rohit<doubleQuotes46>, 542345));<newline46mondego>empList.add(new Employee(1001, <doubleQuotes46>abc<doubleQuotes46>, 542345));<newline46mondego>empList.add(new Employee(1001, <doubleQuotes46>asf<doubleQuotes46>, 542345));<newline46mondego>"
"4035splitHere46","12804524splitHere46","equals()"
"4036splitHere46","12804524splitHere46","Employee POJO"
"4037splitHere46","12804524splitHere46","Employees"
"4038splitHere46","12804524splitHere46","e1.equals(e2)"
"4039splitHere46","12804567splitHere46","stack"
"4040splitHere46","12804567splitHere46","count"
"4041splitHere46","12804572splitHere46","JFrame"
"4042splitHere46","12804572splitHere46","JFrame"
"4043splitHere46","12804600splitHere46","getModel()"
"4044splitHere46","12804600splitHere46","getRoot()"
"4045splitHere46","12804600splitHere46","getChild(Object parent, int index)"
"4046splitHere46","12804600splitHere46","getChild(Object parent, int index)"
"4047splitHere46","12804608splitHere46","Dimension parentSize = pane.getParent().getSize();<newline46mondego>// get the initial preferred size - this has to be done before setContentPane()<newline46mondego>// the height should, I think, be the border + height of the title bar<newline46mondego>// the width is based on the title name, icon, etc. so is not useful<newline46mondego>Dimension initSize = internal.getPreferredSize(); <newline46mondego><newline46mondego>// then get the insets, which can be used for the horizontal border<newline46mondego>Insets insets = internal.getInsets();<newline46mondego><newline46mondego>Point point = pane.getMousePosition();<newline46mondego>int width = parentSize.width - (insets.left+insets.right) - point.x;<newline46mondego>int height = parentSize.height - initSize.height -  point.y;<newline46mondego>label.setPreferredSize(new Dimension(width, height));<newline46mondego>"
"4048splitHere46","12804654splitHere46","Map<String,String>"
"4049splitHere46","12804654splitHere46","Map<String,CartDataHelper>"
"4050splitHere46","12804686splitHere46","GrahamsProjStartAppPage.html"
"4051splitHere46","12804686splitHere46","deployJava.createWebStartLaunchButton()"
"4052splitHere46","12804686splitHere46","1.6.0+"
"4053splitHere46","12804686splitHere46","1.6.0"
"4054splitHere46","12804686splitHere46","<body><newline46mondego><!-- ... --><newline46mondego><script src=<newline46mondego>  <doubleQuotes46>http://www.java.com/js/deployJava.js<doubleQuotes46>></script><newline46mondego><script><newline46mondego>    // using JavaScript to get location of JNLP<newline46mondego>    // file relative to HTML page<newline46mondego>    var dir = location.href.substring(0,<newline46mondego>        location.href.lastIndexOf('/')+1);<newline46mondego>    //var url = dir + <doubleQuotes46>GrahamsProjClient-webstart.jnlp<doubleQuotes46>;<newline46mondego>    var url = <doubleQuotes46>http://127.0.0.1:8080/GrahamsProjClient/GrahamsProjClient-webstart.jnlp<doubleQuotes46><newline46mondego>    deployJava.createWebStartLaunchButton(url, '1.6.0+'); //changed from 1.6.0 to 1.6.0+<newline46mondego></script><newline46mondego><!-- ... --><newline46mondego></body><newline46mondego>"
"4055splitHere46","12804727splitHere46","JComboxBox"
"4056splitHere46","12804727splitHere46","(LaborHelper)labourname.field.getSelectedItem()"
"4057splitHere46","12804727splitHere46","JComboxBox"
"4058splitHere46","12804750splitHere46","Criteria criteria = getSession().createCriteria(getPersistentClass())<newline46mondego>  .add(Restrictions.eq(<doubleQuotes46>employerId<doubleQuotes46>,employerId))<newline46mondego>  .setFetchMode(<doubleQuotes46>card<doubleQuotes46>, FetchMode.JOIN)<newline46mondego>  .createCriteria(<doubleQuotes46>card<doubleQuotes46>)<newline46mondego>  .addOrder(Order.desc(<doubleQuotes46>cardId<doubleQuotes46>))<newline46mondego>  .createCriteria(<doubleQuotes46>salary<doubleQuotes46>, <doubleQuotes46>sl<doubleQuotes46>)  // <- alias for salary<newline46mondego>  .add(Restrictions.eq(<doubleQuotes46>sl.salaryType<doubleQuotes46>,SalaryIdentifierType.CONTRACTOR))<newline46mondego>  .add(Restrictions.eq(<doubleQuotes46>sl.active<doubleQuotes46>,<doubleQuotes46>YES<doubleQuotes46>));<newline46mondego><newline46mondego>if(startDate!=null) {<newline46mondego>  criteria.add(Restrictions.ge(<doubleQuotes46>sl.startDate<doubleQuotes46>,startDate));<newline46mondego>}<newline46mondego>"
"4059splitHere46","12804767splitHere46","private class EnumChildren implements Enumeration<Integer> {<newline46mondego>    int category, current;<newline46mondego>    int[] next, first;<newline46mondego><newline46mondego>    public EnumChildren(int category) {<newline46mondego>        ChildrenArrays childrenArrays = tr.getChildrenArrays();<newline46mondego>        first = childrenArrays.getYoungestChildArray(); <newline46mondego>        next = childrenArrays.getOlderSiblingArray();<newline46mondego>        current = first[category];<newline46mondego>    }<newline46mondego><newline46mondego>    public boolean hasChildren() {<newline46mondego>        return (current != TaxonomyReader.INVALID_ORDINAL);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean hasMoreElements() {  <newline46mondego>        current = next[current];<newline46mondego>        return (current != TaxonomyReader.INVALID_ORDINAL);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Integer nextElement() {<newline46mondego>        return current;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4060splitHere46","12804767splitHere46","ordinal = tr.getOrdinal(new CategoryPath(nodeCategory.getPath(), '/')); <newline46mondego>        EnumChildren childrenEnumeration = new EnumChildren(ordinal);<newline46mondego>        if (childrenEnumeration.hasChildren()) {<newline46mondego>            do {<newline46mondego>                int current = childrenEnumeration.nextElement();<newline46mondego>                Category child = new Category(tr.getPath(current).toString());<newline46mondego>                addChildren(child);<newline46mondego>                nodeCategory.children.add(child);<newline46mondego>            } while (childrenEnumeration.hasMoreElements());<newline46mondego>        }<newline46mondego>"
"4061splitHere46","12804984splitHere46","ExecutorService"
"4062splitHere46","12804984splitHere46","Callable<HeuristicResult>"
"4063splitHere46","12804984splitHere46","Future<HeuristicResult>"
"4064splitHere46","12804984splitHere46","join()"
"4065splitHere46","12804984splitHere46","Future.get()"
"4066splitHere46","12805051splitHere46","Process process = Runtime.getRuntime().exec(<doubleQuotes46>Command <doubleQuotes46>);        <newline46mondego>    OutputStream pout = process.getOutputStream();<newline46mondego>    PrintWriter pw = new PrintWriter(pout);<newline46mondego>    pw.println(<doubleQuotes46>Command response here<doubleQuotes46>);<newline46mondego>"
"4067splitHere46","12805099splitHere46","for(int row=0; row < votes.length; row++)<newline46mondego>   {   <newline46mondego>        int sum =0;<newline46mondego>        for (int col=0; col < votes[row].length; col++)<newline46mondego>         {<newline46mondego>          sum = sum + votes[row][col];<newline46mondego><newline46mondego>        }<newline46mondego>        fmt = new Formatter();<newline46mondego>        fmt.format(<doubleQuotes46>%21d<doubleQuotes46>, sum);  <newline46mondego>        System.out.print(fmt); // You are not printing newline after each vote..<newline46mondego>   }<newline46mondego>"
"4068splitHere46","12805099splitHere46","System.out.println(fmt);"
"4069splitHere46","12805099splitHere46","total no of votes"
"4070splitHere46","12805099splitHere46","//for(int row=0; row < votes.length; row++) // Remove this loop<newline46mondego>   //{ // Remove this<newline46mondego><newline46mondego>        int sum =0;<newline46mondego>        for (int col=0; col < votes[s].length; col++)<newline46mondego>         {<newline46mondego>          sum = sum + votes[s][col];<newline46mondego><newline46mondego>        }<newline46mondego>        fmt = new Formatter();<newline46mondego>        fmt.format(<doubleQuotes46>%21d<doubleQuotes46>, sum);  <newline46mondego>        System.out.print(fmt);<newline46mondego>   //} // Remove this also..<newline46mondego>"
"4071splitHere46","12805099splitHere46","s"
"4072splitHere46","12805099splitHere46","int totalSum = 0;    // Declare a variable outside it..<newline46mondego>for (int s=0; s < 51; s++)   // This is the place where the loop started<newline46mondego>{<newline46mondego>   fmt = new Formatter();<newline46mondego>   fmt.format(<doubleQuotes46>%20s<doubleQuotes46>, states[s]);<newline46mondego>   System.out.print(fmt);<newline46mondego><newline46mondego>   // Other inner loops<newline46mondego><newline46mondego>    int sum =0;   // Your innerloop that calculates sum of each state..<newline46mondego>    for (int col=0; col < votes[s].length; col++)<newline46mondego>     {<newline46mondego>      sum = sum + votes[s][col];<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    totalSum += sum;   // Add sum to `totalSum`<newline46mondego>    fmt = new Formatter();<newline46mondego>    fmt.format(<doubleQuotes46>%21d<doubleQuotes46>, sum);  <newline46mondego>    System.out.print(fmt);<newline46mondego><newline46mondego>    // Continue with the outer loop<newline46mondego>}<newline46mondego>"
"4073splitHere46","12805134splitHere46","@FXML<newline46mondego>private void handleButtonAction(ActionEvent event) {<newline46mondego>    System.out.println(<doubleQuotes46>You clicked me!<doubleQuotes46>);<newline46mondego>    label.setText(<doubleQuotes46>Hello World!<doubleQuotes46>);<newline46mondego>    //Here I want to swap the screen!<newline46mondego><newline46mondego>    Stage stageTheEventSourceNodeBelongs = (Stage) ((Node)event.getSource()).getScene().getWindow();<newline46mondego>    // OR<newline46mondego>    Stage stageTheLabelBelongs = (Stage) label.getScene().getWindow();<newline46mondego>    // these two of them return the same stage<newline46mondego>    // Swap screen<newline46mondego>    stage.setScene(new Scene(new Pane()));<newline46mondego>}<newline46mondego>"
"4074splitHere46","12805157splitHere46","@Configuration<newline46mondego>public class MyConfiguration {<newline46mondego><newline46mondego>    @Bean<newline46mondego>    public ExampleBean exampleBean() {<newline46mondego>        return new ExampleBean(7500000, 42);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4075splitHere46","12805157splitHere46","@Configuration<newline46mondego>@PropertySource(value = { <doubleQuotes46>my.properties<doubleQuotes46> })<newline46mondego>public class MyConfiguration {<newline46mondego><newline46mondego>    @Value(<doubleQuotes46>{prop.value1}<doubleQuotes46>)<newline46mondego>    private int value1;<newline46mondego>    @Value(<doubleQuotes46>{prop.value2}<doubleQuotes46>)<newline46mondego>    private int value2;<newline46mondego><newline46mondego>    @Bean<newline46mondego>    public ExampleBean exampleBean() {<newline46mondego>        return new ExampleBean(value1, value2);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4076splitHere46","12805229splitHere46","mvn versions:display-dependency-updates<newline46mondego>"
"4077splitHere46","12805291splitHere46","connection.disconnect();"
"4078splitHere46","12805291splitHere46","br.close();"
"4079splitHere46","12805291splitHere46","InputStream stream = connection.getInputStream();<newline46mondego>InputStreamReader isReader = new InputStreamReader(stream ); <newline46mondego><newline46mondego>//put output stream into a string<newline46mondego>BufferedReader br = new BufferedReader(isReader );<newline46mondego>"
"4080splitHere46","12805376splitHere46","%"
"4081splitHere46","12805376splitHere46","%d"
"4082splitHere46","12805376splitHere46","String result = String.format( <doubleQuotes46>%4d-%02d-%02d | %-20s| %25s | $%.3f | %5d | %s<doubleQuotes46>, thisYear, thisMonth, thisDay, <newline46mondego>                eventName, eventVenue, ticketPrice, ticketsRemaining, eventType);<newline46mondego>"
"4083splitHere46","12805376splitHere46",","
"4084splitHere46","12805376splitHere46","."
"4085splitHere46","12805432splitHere46","Campaign"
"4086splitHere46","12805432splitHere46","@Id"
"4087splitHere46","12805432splitHere46","@Id<newline46mondego>@Column(name = <doubleQuotes46>id<doubleQuotes46>)<newline46mondego>private String id;<newline46mondego>"
"4088splitHere46","12805434splitHere46","InterrutibleChannel"
"4089splitHere46","12805434splitHere46","BufferedReader"
"4090splitHere46","12805434splitHere46","InterruptedIOException"
"4091splitHere46","12805434splitHere46","BufferedReader in = new BufferedReader(new InputStreamReader(<newline46mondego>    Channels.newInputStream((new FileInputStream(<newline46mondego>        new File(...))).getChannel())));<newline46mondego>"
"4092splitHere46","12805434splitHere46","future.cancel()"
"4093splitHere46","12805434splitHere46","InterruptedIOException"
"4094splitHere46","12805434splitHere46","IOException"
"4095splitHere46","12805434splitHere46","call()"
"4096splitHere46","12805434splitHere46","Future"
"4097splitHere46","12805434splitHere46","call()"
"4098splitHere46","12805434splitHere46","InterruptedException"
"4099splitHere46","12805434splitHere46","return null;"
"4100splitHere46","12805434splitHere46","call()"
"4101splitHere46","12805434splitHere46","call()"
"4102splitHere46","12805434splitHere46","InterruptedException"
"4103splitHere46","12805434splitHere46","future.get()"
"4104splitHere46","12805434splitHere46","ExecutionException"
"4105splitHere46","12805434splitHere46","InterruptedException"
"4106splitHere46","12805434splitHere46","future.get()"
"4107splitHere46","12805434splitHere46","InterruptedException"
"4108splitHere46","12805434splitHere46","get(long timeout, TimeUnit unit)"
"4109splitHere46","12805434splitHere46","try {<newline46mondego>     result = future.get();<newline46mondego> } catch (ExecutionException e) {<newline46mondego>     if (e.getCause() instanceof InterruptedException) {<newline46mondego>        // call() method was interrupted<newline46mondego>     }<newline46mondego> } catch (InterruptedException e) {<newline46mondego>     // get was interrupted<newline46mondego> }<newline46mondego>"
"4110splitHere46","12805434splitHere46","future.cancel(true)"
"4111splitHere46","12805434splitHere46","future.get()"
"4112splitHere46","12805434splitHere46","CancellationException"
"4113splitHere46","12805435splitHere46","double input = 5.59;<newline46mondego>System.out.format(<doubleQuotes46>Output: %.2f%n<doubleQuotes46>, (input % 2));<newline46mondego>"
"4114splitHere46","12805530splitHere46","UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());<newline46mondego>"
"4115splitHere46","12805530splitHere46","*/<newline46mondego>public class MyPhoneBookApp {<newline46mondego><newline46mondego>    /**<newline46mondego>     * @param args the command line arguments<newline46mondego>     */<newline46mondego>    public static void main(String[] args) <newline46mondego>    {<newline46mondego>        try<newline46mondego>        {<newline46mondego>            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());<newline46mondego>            new MainForm();<newline46mondego>        }<newline46mondego>        catch(Exception e)<newline46mondego>        {<newline46mondego>            e.printStackTrace();<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4116splitHere46","12805566splitHere46","foo({1,2});<newline46mondego>"
"4117splitHere46","12805566splitHere46","new"
"4118splitHere46","12805566splitHere46","Object[] obj = {1, 2};<newline46mondego>"
"4119splitHere46","12805566splitHere46","reference"
"4120splitHere46","12805566splitHere46","foo(new Object[]{1,2});<newline46mondego>"
"4121splitHere46","12805603splitHere46","HttpSolrServer"
"4122splitHere46","12805603splitHere46","HttpClient"
"4123splitHere46","12805603splitHere46","HttpSolrServer"
"4124splitHere46","12805603splitHere46","HttpClient"
"4125splitHere46","12805603splitHere46","DefaultHttpClient httpclient = new DefaultHttpClient();<newline46mondego>HttpHost proxy = new HttpHost(proxyHost, proxyPort, <doubleQuotes46>http<doubleQuotes46>);<newline46mondego>httpclient.getParams().setParameter(ConnRoutePNames.DEFAULT_PROXY, proxy);<newline46mondego>httpclient.getCredentialsProvider().setCredentials(<newline46mondego>                    AuthScope.ANY,<newline46mondego>                    new UsernamePasswordCredentials(username, password));<newline46mondego>SolrServer solrServer = new HttpSolrServer(solrUrl, httpclient);<newline46mondego>"
"4126splitHere46","12805661splitHere46","javac -classpath jogl-all.jar test.java<newline46mondego>"
"4127splitHere46","12805661splitHere46","javax.media.opengl.*"
"4128splitHere46","12805823splitHere46","this"
"4129splitHere46","12805823splitHere46","// I hate synchronizing on <doubleQuotes46>this<doubleQuotes46><newline46mondego>private final Object lock = new Object();<newline46mondego><newline46mondego>public final void foo() {<newline46mondego>    synchronized(lock) {<newline46mondego>        fooImpl();<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>protected abstract void fooImpl();<newline46mondego>"
"4130splitHere46","12805971splitHere46","int count= 0;<newline46mondego>            FileReader fr = new FileReader(<doubleQuotes46>test.txt<doubleQuotes46>);<newline46mondego>            BufferedReader br = new BufferedReader(fr); <newline46mondego>            String text; <newline46mondego>            while((text= br.readLine()) != null) { <newline46mondego>                   for (int i = 0; i < text.length(); i++) {<newline46mondego>                      char c = text.charAt(i);<newline46mondego>                      if (c=='*' ) {<newline46mondego>                           count++;<newline46mondego>                      }<newline46mondego>                   }                <newline46mondego>                } <newline46mondego><newline46mondego>                System.out.println(<doubleQuotes46>Count Stars = <doubleQuotes46>+ count);<newline46mondego>"
"4131splitHere46","12806055splitHere46","String.format(<doubleQuotes46>%1$#251s<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>"
"4132splitHere46","12806055splitHere46","Formatter"
"4133splitHere46","12806055splitHere46","s"
"4134splitHere46","12806055splitHere46","#"
"4135splitHere46","12806055splitHere46","java.lang.String"
"4136splitHere46","12806055splitHere46","Formattable"
"4137splitHere46","12806139splitHere46","Configuration"
"4138splitHere46","12806139splitHere46","@Bean(name = <doubleQuotes46>viewResolver<doubleQuotes46>)<newline46mondego>public ContentNegotiatingViewResolver viewResolver() {<newline46mondego>    final ContentNegotiatingViewResolver contentNegotiatingViewResolver = new ContentNegotiatingViewResolver();<newline46mondego>    contentNegotiatingViewResolver.setOrder(1);<newline46mondego>    contentNegotiatingViewResolver.setFavorPathExtension(true);<newline46mondego>    contentNegotiatingViewResolver.setFavorParameter(true);<newline46mondego>    contentNegotiatingViewResolver.setIgnoreAcceptHeader(false);<newline46mondego>    final Map<String, String> mediaTypes = new HashMap<String, String>();<newline46mondego>    mediaTypes.put(<doubleQuotes46>json<doubleQuotes46>, <doubleQuotes46>application/x-json<doubleQuotes46>);<newline46mondego>    mediaTypes.put(<doubleQuotes46>json<doubleQuotes46>, <doubleQuotes46>text/json<doubleQuotes46>);<newline46mondego>    mediaTypes.put(<doubleQuotes46>json<doubleQuotes46>, <doubleQuotes46>text/x-json<doubleQuotes46>);<newline46mondego>    mediaTypes.put(<doubleQuotes46>json<doubleQuotes46>, <doubleQuotes46>application/json<doubleQuotes46>);<newline46mondego>    mediaTypes.put(<doubleQuotes46>xml<doubleQuotes46>, <doubleQuotes46>text/xml<doubleQuotes46>);<newline46mondego>    mediaTypes.put(<doubleQuotes46>xml<doubleQuotes46>, <doubleQuotes46>application/xml<doubleQuotes46>);<newline46mondego>    contentNegotiatingViewResolver.setMediaTypes(mediaTypes);<newline46mondego>    final List<View> defaultViews = new ArrayList<View>();<newline46mondego>    defaultViews.add(jsonView());<newline46mondego>    defaultViews.add(xmlView());<newline46mondego>    contentNegotiatingViewResolver.setDefaultViews(defaultViews);<newline46mondego>    return contentNegotiatingViewResolver;<newline46mondego>}<newline46mondego><newline46mondego>@Bean(name = <doubleQuotes46>xStreamMarshaller<doubleQuotes46>)<newline46mondego>public XStreamMarshaller xStreamMarshaller() {<newline46mondego>    return new XStreamMarshaller();<newline46mondego>}<newline46mondego><newline46mondego>@Bean(name = <doubleQuotes46>xmlView<doubleQuotes46>)<newline46mondego>public MarshallingView xmlView() {<newline46mondego>    final MarshallingView marshallingView = new MarshallingView(xStreamMarshaller());<newline46mondego>    marshallingView.setContentType(<doubleQuotes46>application/xml<doubleQuotes46>);<newline46mondego>    return marshallingView;<newline46mondego>}<newline46mondego><newline46mondego>@Bean(name = <doubleQuotes46>jsonView<doubleQuotes46>)<newline46mondego>public MappingJacksonJsonView jsonView() {<newline46mondego>    return new MappingJacksonJsonView();<newline46mondego>}<newline46mondego>"
"4139splitHere46","12806139splitHere46","Controller"
"4140splitHere46","12806139splitHere46","@RequestMapping(value = { <doubleQuotes46>/pets<doubleQuotes46> }, method = RequestMethod.GET)<newline46mondego>public String list(Model model) {<newline46mondego>    model.addAttribute(<doubleQuotes46>pets<doubleQuotes46>, petRepository.findAll());<newline46mondego>    return <doubleQuotes46>pets/list<doubleQuotes46>;<newline46mondego>}<newline46mondego><newline46mondego>@RequestMapping(value = { <doubleQuotes46>/pets<doubleQuotes46> }, method = RequestMethod.POST)<newline46mondego>public String create(@Valid @RequestBody Pet pet, Model model) {<newline46mondego>    petRepository.save(pet);<newline46mondego>    return <doubleQuotes46>redirect:pets/read/<doubleQuotes46> + pet.getId();<newline46mondego>}<newline46mondego><newline46mondego>@RequestMapping(value = { <doubleQuotes46>/pets/{petId}<doubleQuotes46> }, method = RequestMethod.GET)<newline46mondego>public String read(@PathVariable Integer petId, Model model) {<newline46mondego>    model.addAttribute(<doubleQuotes46>pet<doubleQuotes46>, petRepository.findOne(petId));<newline46mondego>    return <doubleQuotes46>pets/read<doubleQuotes46>;<newline46mondego>}<newline46mondego><newline46mondego>@RequestMapping(value = { <doubleQuotes46>/pets<doubleQuotes46> }, method = RequestMethod.PUT)<newline46mondego>public String update(@Valid @RequestBody Pet pet, Model model) {<newline46mondego>    petRepository.save(pet);<newline46mondego>    return <doubleQuotes46>redirect:pets/read/<doubleQuotes46> + pet.getId();<newline46mondego>}<newline46mondego><newline46mondego>@RequestMapping(value = { <doubleQuotes46>/pets/{orderId}<doubleQuotes46> }, method = RequestMethod.DELETE)<newline46mondego>public void delete(@PathVariable Integer petId, Model model) {<newline46mondego>    petRepository.delete(petId);<newline46mondego>}<newline46mondego>"
"4141splitHere46","12806139splitHere46","@RequestBody"
"4142splitHere46","12806143splitHere46","<doubleQuotes46>content://sms/inbox<doubleQuotes46>"
"4143splitHere46","12806143splitHere46","Cursor c = getContentResolver().query(Uri.parse(<doubleQuotes46>content://sms/inbox<doubleQuotes46>), null, null, null, null);<newline46mondego>c.moveToFirst();<newline46mondego><newline46mondego>do{<newline46mondego>   String msgBody = <doubleQuotes46><doubleQuotes46>;<newline46mondego>   for(int col=0; col < c.getColumnCount(); col++)<newline46mondego>   {<newline46mondego>       msgBody += <doubleQuotes46> <doubleQuotes46> + c.getColumnName(col) + <doubleQuotes46>:<doubleQuotes46> + c.getString(col);<newline46mondego>   }<newline46mondego>}while(c.moveToNext());<newline46mondego>"
"4144splitHere46","12806257splitHere46","text.replaceAll(<doubleQuotes46>;<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>"
"4145splitHere46","12806257splitHere46","replaceALl()"
"4146splitHere46","12806257splitHere46","$"
"4147splitHere46","12806257splitHere46",";"
"4148splitHere46","12806257splitHere46","text = text.replaceAll(<doubleQuotes46>;$<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>"
"4149splitHere46","12806257splitHere46","$"
"4150splitHere46","12806257splitHere46","semi-colon"
"4151splitHere46","12806257splitHere46","$"
"4152splitHere46","12806257splitHere46",";"
"4153splitHere46","12806257splitHere46",";"
"4154splitHere46","12806257splitHere46","if (text.endsWith(<doubleQuotes46>;<doubleQuotes46>)) {<newline46mondego>        text = text.substring(0, text.length() - 1);<newline46mondego>        System.out.println(text);<newline46mondego>    }<newline46mondego>"
"4155splitHere46","12806257splitHere46","text = text.replaceAll(<doubleQuotes46>;+$<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>"
"4156splitHere46","12806273splitHere46","O(n)"
"4157splitHere46","12806273splitHere46","O(n*log n)"
"4158splitHere46","12806273splitHere46","O(n*log n)"
"4159splitHere46","12806273splitHere46","O(n)"
"4160splitHere46","12806273splitHere46","O(n)"
"4161splitHere46","12806273splitHere46","O(n)"
"4162splitHere46","12806273splitHere46","O(n)"
"4163splitHere46","12806273splitHere46","O(n)"
"4164splitHere46","12806273splitHere46","O(n)"
"4165splitHere46","12806273splitHere46","O(n)"
"4166splitHere46","12806286splitHere46","u.getGroups()"
"4167splitHere46","12806286splitHere46","Collections#unmodifiableSet()"
"4168splitHere46","12806286splitHere46","HashSet"
"4169splitHere46","12806286splitHere46","user.setGroups(new HashSet<Group>(groups));<newline46mondego>"
"4170splitHere46","12806303splitHere46","NumberFormat formatter = new DecimalFormat(<doubleQuotes46>#0.00<doubleQuotes46>);     <newline46mondego>System.out.println(formatter.format(4.0));<newline46mondego>"
"4171splitHere46","12806578splitHere46","spring-data"
"4172splitHere46","12806578splitHere46","Repository"
"4173splitHere46","12806578splitHere46","*Impl"
"4174splitHere46","12806578splitHere46","@Configuration<newline46mondego>@EnableJpaRepositories(basePackages = {<doubleQuotes46>com.examples.repositories<doubleQuotes46>})<newline46mondego>@EnableTransactionManagement<newline46mondego>public class MyConfiguration {<newline46mondego>}<newline46mondego>"
"4175splitHere46","12806578splitHere46","Spring"
"4176splitHere46","12806578splitHere46","Spring"
"4177splitHere46","12806578splitHere46","CustomImpl"
"4178splitHere46","12806578splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego><beans xmlns=<doubleQuotes46>http://www.springframework.org/schema/beans<doubleQuotes46> xmlns:jpa=<doubleQuotes46>http://www.springframework.org/schema/data/jpa<doubleQuotes46><newline46mondego>xmlns:xsi=<doubleQuotes46>http://www.w3.org/2001/XMLSchema-instance<doubleQuotes46> xmlns:util=<doubleQuotes46>http://www.springframework.org/schema/util<doubleQuotes46><newline46mondego>xsi:schemaLocation=<doubleQuotes46>http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/jpa/spring-jpa.xsd<newline46mondego>    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd<newline46mondego>    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd<doubleQuotes46>><newline46mondego><newline46mondego><jpa:repositories base-package=<doubleQuotes46>com.example.repositories<doubleQuotes46> repository-impl-postfix=<doubleQuotes46>CustomImpl<doubleQuotes46> /><newline46mondego><newline46mondego></beans><newline46mondego>"
"4179splitHere46","12806578splitHere46","MyObjectRepository"
"4180splitHere46","12806578splitHere46","Custom"
"4181splitHere46","12806578splitHere46","@Transactional<newline46mondego>public interface MyObjectRepository extends JpaRepository<MyObject, Integer>, MyObjectRepositoryCustom {<newline46mondego><newline46mondego>    List<MyObject> findByName(String name);<newline46mondego><newline46mondego>    @Query(<doubleQuotes46>select * from my_object where name = ?0 or middle_name = ?0<doubleQuotes46>)<newline46mondego>    List<MyObject> findByFirstNameOrMiddleName(String name);<newline46mondego>"
"4182splitHere46","12806578splitHere46","MyObjectRepositoryCustom"
"4183splitHere46","12806578splitHere46","public interface MyObjectRepositoryCustom {<newline46mondego><newline46mondego>    List<MyObject> findByNameWithWeirdOrdering(String name);<newline46mondego>}<newline46mondego>"
"4184splitHere46","12806578splitHere46","MyObjectRepositoryCustomImpl"
"4185splitHere46","12806578splitHere46","EntityManager"
"4186splitHere46","12806578splitHere46","public class MyObjectRepositoryCustomImpl implements MyObjectRepositoryCustom {<newline46mondego><newline46mondego>    @Autowired<newline46mondego>    private EntityManager entityManager;<newline46mondego><newline46mondego>    public final List<MyObject> findByNameWithWeirdOrdering(String name) {<newline46mondego>        Query query = query(where(<doubleQuotes46>name<doubleQuotes46>).is(name);<newline46mondego>        query.sort().on(<doubleQuotes46>whatever<doubleQuotes46>, Order.ASC);<newline46mondego>        return entityManager.find(query, MyObject.class);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4187splitHere46","12806578splitHere46","myObjectRepository.<newline46mondego>"
"4188splitHere46","12806578splitHere46","myObjectRepository.save()<newline46mondego>myObjectRepository.findAll()<newline46mondego>myObjectRepository.findByName()<newline46mondego>myObjectRepository.findByFirstNameOrMiddleName()<newline46mondego>myObjectRepository.findByNameWithWeirdOrdering()<newline46mondego>"
"4189splitHere46","12806578splitHere46","spring-data"
"4190splitHere46","12806619splitHere46","Bundle b = new Bundle();<newline46mondego>b.putString(<doubleQuotes46>test<doubleQuotes46>,<doubleQuotes46>data here<doubleQuotes46>);<newline46mondego>onCreate(b);<newline46mondego>"
"4191splitHere46","12806635splitHere46","double"
"4192splitHere46","12806635splitHere46","double"
"4193splitHere46","12806635splitHere46","Math.pow"
"4194splitHere46","12806635splitHere46","BigDecimal"
"4195splitHere46","12806635splitHere46","BigDecimal.pow"
"4196splitHere46","12806635splitHere46","import java.math.BigDecimal;<newline46mondego><newline46mondego>public class Test {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        BigDecimal inputOne = new BigDecimal(<doubleQuotes46>95.123<doubleQuotes46>);<newline46mondego>        int power = 12;<newline46mondego>        BigDecimal result = inputOne.pow(power);<newline46mondego>        System.out.println(result);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4197splitHere46","12806635splitHere46","548815620517731830194541.899025343415715973535967221869852721<newline46mondego>"
"4198splitHere46","12806711splitHere46","break;"
"4199splitHere46","12806711splitHere46","for"
"4200splitHere46","12806711splitHere46","while(Input.hasNextInt(Input)){<newline46mondego>   if(condition())<newline46mondego>       break;<newline46mondego><newline46mondego>   count++;           <newline46mondego><newline46mondego>   temp = Input.nextInt();<newline46mondego>   sum += temp;<newline46mondego>   System.out.println(temp);<newline46mondego>   System.out.println(count);           <newline46mondego><newline46mondego> }<newline46mondego>"
"4201splitHere46","12806711splitHere46","private boolean keepIterating(Scanner in) {<newline46mondego>    boolean someOtherCondition = //define your value here that must evaluate to false<newline46mondego>                                 //when you want to stop looping<newline46mondego>    return Input.hasNextInt() && someOtherCondition;<newline46mondego>}<newline46mondego>"
"4202splitHere46","12806711splitHere46","while"
"4203splitHere46","12806711splitHere46","while(keepIterating()){<newline46mondego><newline46mondego>   count++;           <newline46mondego><newline46mondego>   temp = Input.nextInt();<newline46mondego>   sum += temp;<newline46mondego>   System.out.println(temp);<newline46mondego>   System.out.println(count);           <newline46mondego><newline46mondego>}<newline46mondego>"
"4204splitHere46","12806731splitHere46","JAVA_HOME"
"4205splitHere46","12806731splitHere46","JDK"
"4206splitHere46","12806731splitHere46","JRE"
"4207splitHere46","12806731splitHere46","ant"
"4208splitHere46","12806731splitHere46","set JAVA_HOME=C:\Program Files (x86)\Java\jdk1.7.0_07"
"4209splitHere46","12806943splitHere46","2147483647"
"4210splitHere46","12807118splitHere46","@Suite.SuiteClasses({<newline46mondego>  AllSubTests.class<newline46mondego>})<newline46mondego>"
"4211splitHere46","12807153splitHere46","myPencil"
"4212splitHere46","12807153splitHere46","null"
"4213splitHere46","12807153splitHere46","myPencil.up();<newline46mondego>"
"4214splitHere46","12807153splitHere46","myPencil"
"4215splitHere46","12807153splitHere46","private DrawingTool myPencil = new Pencil();<newline46mondego>"
"4216splitHere46","12807216splitHere46","$FALL-THROUGH$"
"4217splitHere46","12807216splitHere46","@Suppresswarnings"
"4218splitHere46","12807253splitHere46","HashMap"
"4219splitHere46","12807253splitHere46","ArrayList"
"4220splitHere46","12807253splitHere46","InputStream"
"4221splitHere46","12807272splitHere46","rs.getString()"
"4222splitHere46","12807272splitHere46","String"
"4223splitHere46","12807272splitHere46","ResultSet rs2 = <newline46mondego>     statement.executeQuery(<doubleQuotes46>.... where source_id = '<doubleQuotes46> + rs.getString(<doubleQuotes46>source_id<doubleQuotes46>)+<doubleQuotes46>'<doubleQuotes46>);<newline46mondego>"
"4224splitHere46","12807333splitHere46","System.out.print(<doubleQuotes46>Byte output: <doubleQuotes46>);<newline46mondego>for(int i=0; i < input.length; ++i)<newline46mondego>    System.out.print(((int)input[i]) + <doubleQuotes46>, <doubleQuotes46>);<newline46mondego><newline46mondego>System.out.println();<newline46mondego>"
"4225splitHere46","12807507splitHere46","(<doubleQuotes46>VIEW<doubleQuotes46>)"
"4226splitHere46","12807507splitHere46","...<newline46mondego>public class DetailsController {<newline46mondego><newline46mondego>    @RequestMapping<newline46mondego>    public String showDetails(final ModelMap modelMap, final RenderRequest renderRequest) {<newline46mondego>        return <doubleQuotes46>allDetails/details<doubleQuotes46>;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"4227splitHere46","12807507splitHere46","<portlet:actionURL/>"
"4228splitHere46","12807507splitHere46","...<newline46mondego>public class DetailsController {<newline46mondego><newline46mondego>    @RequestMapping(params = <doubleQuotes46>action=viewDetails<doubleQuotes46>)<newline46mondego>    public String showDetails(final ModelMap modelMap, final RenderRequest renderRequest) {<newline46mondego>        ...<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"4229splitHere46","12807507splitHere46","<portlet:actionURL ... ><newline46mondego>    <portlet:param name=<doubleQuotes46>action<doubleQuotes46> value=<doubleQuotes46>viewDetails<doubleQuotes46>><newline46mondego></portlet:actionURL><newline46mondego>"
"4230splitHere46","12807507splitHere46","...<newline46mondego>public class DetailsController {<newline46mondego><newline46mondego>    @RequestMapping(params = <doubleQuotes46>action=viewDetails<doubleQuotes46>)    // render phase<newline46mondego>    public String showDetails(final ModelMap modelMap, final RenderRequest renderRequest) {<newline46mondego>        ...<newline46mondego>    }<newline46mondego><newline46mondego>    ...<newline46mondego>    // Empty method<newline46mondego>    @RequestMapping(params = <doubleQuotes46>action=viewDetails<doubleQuotes46>)    // action phase<newline46mondego>    public void actionMethod() {<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"4231splitHere46","12807507splitHere46","<portlet:actionURL ... ><newline46mondego>    <portlet:param name=<doubleQuotes46>action<doubleQuotes46> value=<doubleQuotes46>viewDetails<doubleQuotes46>><newline46mondego></portlet:actionURL><newline46mondego>"
"4232splitHere46","12807556splitHere46","public class PushServlet extends HttpServlet {<newline46mondego><newline46mondego>    private boolean processing = true;<newline46mondego>    private HttpServletResponse response;<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {<newline46mondego>        this.response = response;<newline46mondego>        configureAndStart();<newline46mondego>        while (processing) {<newline46mondego>            try {<newline46mondego>                sendMessages();<newline46mondego>            } catch (InterruptedException e) {<newline46mondego>                e.printStackTrace();<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    private void configureAndStart() throws IOException {<newline46mondego>        processing = true;<newline46mondego>        response.setContentType(<doubleQuotes46>text/event-stream; charset=utf-8<doubleQuotes46>);<newline46mondego>        sendMessage(new SSEMessageBean(SSEEventType.START));<newline46mondego>    }<newline46mondego><newline46mondego>    private void sendMessages() throws IOException, InterruptedException {<newline46mondego>        SSEMessageBean message = MessageQueueController.getInstance().getNextMessage();<newline46mondego>        while (message != null) {<newline46mondego>            sendMessage(message);<newline46mondego>            message = MessageQueueController.getInstance().getNextMessage();<newline46mondego>            if (message.getEventType() != SSEEventType.END)<newline46mondego>                return;<newline46mondego>        }<newline46mondego>        Thread.sleep(10000);<newline46mondego>        sendMessage(new SSEMessageBean(SSEEventType.KEEP_ALIVE));<newline46mondego>    }<newline46mondego><newline46mondego>    public void sendMessage(SSEMessageBean message) throws IOException {<newline46mondego>        SSEMessageConverter converter = new SSEMessageConverter();<newline46mondego>        PrintWriter out = response.getWriter();<newline46mondego>        out.print(converter.convert(message));<newline46mondego>        out.flush();<newline46mondego>        if (message.getEventType() == SSEEventType.END) {<newline46mondego>            processing = false;<newline46mondego>            out.close();<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4233splitHere46","12807589splitHere46","import java.security.SecureRandom;<newline46mondego><newline46mondego>import java.util.Map;<newline46mondego>import java.util.Random;<newline46mondego>import java.util.TreeMap;<newline46mondego><newline46mondego>public class HowLong {<newline46mondego><newline46mondego>    public static final int MAX_TO_GENERATE = 10;<newline46mondego><newline46mondego>    public static final int TOTAL_RUNS = 1000000;<newline46mondego>    public static final int TP50 = (int)(TOTAL_RUNS * 0.50);<newline46mondego>    public static final int TP90 = (int)(TOTAL_RUNS * 0.90);<newline46mondego>    public static final int TP99 = (int)(TOTAL_RUNS * 0.99);<newline46mondego>    public static final int TP99_9 = (int)(TOTAL_RUNS * 0.999);<newline46mondego>    public static final int TP100 = (int)(TOTAL_RUNS * 1);<newline46mondego><newline46mondego>    public static final String[] TP_NAMES = {<doubleQuotes46>TP50<doubleQuotes46>, <doubleQuotes46>TP90<doubleQuotes46>, <doubleQuotes46>TP99<doubleQuotes46>, <doubleQuotes46>TP99.9<doubleQuotes46>, <doubleQuotes46>TP100<doubleQuotes46>};<newline46mondego>    public static final int[] TPS = { TP50, TP90, TP99, TP99_9, TP100 };<newline46mondego><newline46mondego>    public interface RandomSource {<newline46mondego>        int next();<newline46mondego>    }<newline46mondego><newline46mondego>    public static class MathRandomSource implements RandomSource {<newline46mondego>        private final Random rand;<newline46mondego><newline46mondego>        public MathRandomSource() {<newline46mondego>            rand = new Random();<newline46mondego>        }<newline46mondego><newline46mondego>        public int next() {<newline46mondego>            return rand.nextInt(MAX_TO_GENERATE);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public static class SecureRandomSource implements RandomSource {<newline46mondego>        private final SecureRandom rand;<newline46mondego><newline46mondego>        public SecureRandomSource() {<newline46mondego>            rand = new SecureRandom();<newline46mondego>        }<newline46mondego><newline46mondego>        public int next() {<newline46mondego>            return rand.nextInt(MAX_TO_GENERATE);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public static int waitForTen() {<newline46mondego><newline46mondego>        final boolean[] found = new boolean[MAX_TO_GENERATE];<newline46mondego>        int remaining = found.length;<newline46mondego><newline46mondego>        final RandomSource source = new SecureRandomSource();<newline46mondego>        int iterations = 0;<newline46mondego>        while (remaining > 0) {<newline46mondego>            int next = source.next();<newline46mondego>            if (!found[next]) {<newline46mondego>                found[next] = true;<newline46mondego>                remaining -= 1;<newline46mondego>            }<newline46mondego>            iterations += 1;<newline46mondego>        }<newline46mondego><newline46mondego>        return iterations;<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        System.out.println(<doubleQuotes46>Attempting to generate all numbers below: <doubleQuotes46> + MAX_TO_GENERATE);<newline46mondego>        System.out.println(<doubleQuotes46>Performing n iterations: <doubleQuotes46> + TOTAL_RUNS);<newline46mondego><newline46mondego>        TreeMap<Integer, Integer> results = new TreeMap<Integer, Integer>();<newline46mondego>        for (int i = 0; i < TOTAL_RUNS; i += 1) {<newline46mondego>            Integer iterations = waitForTen();<newline46mondego>            Integer currentCount = results.get(iterations);<newline46mondego>            if (currentCount == null) {<newline46mondego>                results.put(iterations, 1);<newline46mondego>            } else {<newline46mondego>                results.put(iterations, currentCount + 1);<newline46mondego>            }<newline46mondego>        }<newline46mondego>        int currTP = 0;<newline46mondego>        int count = 0;<newline46mondego>        for (Map.Entry<Integer, Integer> entry: results.entrySet()) {<newline46mondego>            count += entry.getValue();<newline46mondego>            while (currTP < TPS.length && count >= TPS[currTP]) {<newline46mondego>                System.out.println(TP_NAMES[currTP] + <doubleQuotes46>: <doubleQuotes46> + entry.getKey());<newline46mondego>                currTP += 1;<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"4234splitHere46","12807636splitHere46","enum"
"4235splitHere46","12807636splitHere46","int"
"4236splitHere46","12807636splitHere46","switch"
"4237splitHere46","12807636splitHere46","enum Category {<newline46mondego>  private final int score;<newline46mondego>  ... <newline46mondego>  ONES(1) { <newline46mondego>    public int score() { <newline46mondego>      int computedScore = 0;<newline46mondego>      for (int i = 0; i < 4; i++) {<newline46mondego>       if (diceArray[i] == ONES) {<newline46mondego>          println(computedScore);<newline46mondego>          computedScore++;<newline46mondego>       }<newline46mondego>      }<newline46mondego>      return computedScore;<newline46mondego>    }<newline46mondego>  },<newline46mondego>  ...,<newline46mondego>  SIXES(6),<newline46mondego>  ...;<newline46mondego><newline46mondego>  private Category(int score) { this.score = score; }<newline46mondego><newline46mondego>  public int score() { return this.score; }<newline46mondego>}<newline46mondego>"
"4238splitHere46","12807748splitHere46","int[]"
"4239splitHere46","12807748splitHere46","Foo[]"
"4240splitHere46","12807748splitHere46","int[].class"
"4241splitHere46","12807748splitHere46","Foo[].class"
"4242splitHere46","12807748splitHere46","Object.class"
"4243splitHere46","12807748splitHere46","public static void main(String[] args)<newline46mondego>{<newline46mondego>    test(int[].class);<newline46mondego>    test(String[].class);<newline46mondego>}<newline46mondego><newline46mondego>static void test(Class clazz)<newline46mondego>{<newline46mondego>    System.out.println(clazz.getName());<newline46mondego>    System.out.println(clazz.getSuperclass());<newline46mondego>    for(Class face : clazz.getInterfaces())<newline46mondego>        System.out.println(face);<newline46mondego>}<newline46mondego>"
"4244splitHere46","12807748splitHere46","A"
"4245splitHere46","12807748splitHere46","B"
"4246splitHere46","12807748splitHere46","A[]"
"4247splitHere46","12807748splitHere46","B[]"
"4248splitHere46","12807812splitHere46","false"
"4249splitHere46","12807812splitHere46","remove"
"4250splitHere46","12807839splitHere46","setSoTimeout(timeoutMs)"
"4251splitHere46","12807839splitHere46","SocketTimeoutException"
"4252splitHere46","12807848splitHere46","public class Main {<newline46mondego>  public static void main(String[] args) {<newline46mondego>  /* Total number of processors or cores available to the JVM */<newline46mondego>  System.out.println(<doubleQuotes46>Available processors (cores): <doubleQuotes46> + <newline46mondego>  Runtime.getRuntime().availableProcessors());<newline46mondego><newline46mondego>  /* Total amount of free memory available to the JVM */<newline46mondego>  System.out.println(<doubleQuotes46>Free memory (bytes): <doubleQuotes46> + <newline46mondego>  Runtime.getRuntime().freeMemory());<newline46mondego><newline46mondego>  /* This will return Long.MAX_VALUE if there is no preset limit */<newline46mondego>  long maxMemory = Runtime.getRuntime().maxMemory();<newline46mondego>  /* Maximum amount of memory the JVM will attempt to use */<newline46mondego>  System.out.println(<doubleQuotes46>Maximum memory (bytes): <doubleQuotes46> + <newline46mondego>  (maxMemory == Long.MAX_VALUE ? <doubleQuotes46>no limit<doubleQuotes46> : maxMemory));<newline46mondego><newline46mondego>  /* Total memory currently in use by the JVM */<newline46mondego>  System.out.println(<doubleQuotes46>Total memory (bytes): <doubleQuotes46> + <newline46mondego>  Runtime.getRuntime().totalMemory());<newline46mondego><newline46mondego>  /* Get a list of all filesystem roots on this system */<newline46mondego>  File[] roots = File.listRoots();<newline46mondego><newline46mondego>  /* For each filesystem root, print some info */<newline46mondego>  for (File root : roots) {<newline46mondego>    System.out.println(<doubleQuotes46>File system root: <doubleQuotes46> + root.getAbsolutePath());<newline46mondego>    System.out.println(<doubleQuotes46>Total space (bytes): <doubleQuotes46> + root.getTotalSpace());<newline46mondego>    System.out.println(<doubleQuotes46>Free space (bytes): <doubleQuotes46> + root.getFreeSpace());<newline46mondego>    System.out.println(<doubleQuotes46>Usable space (bytes): <doubleQuotes46> + root.getUsableSpace());<newline46mondego>  }<newline46mondego> }<newline46mondego>}<newline46mondego>"
"4253splitHere46","12808095splitHere46","inputStream"
"4254splitHere46","12808095splitHere46","errorStream"
"4255splitHere46","12808095splitHere46","stderr"
"4256splitHere46","12808095splitHere46","stdout"
"4257splitHere46","12808095splitHere46","proc.getOutputStream().close();"
"4258splitHere46","12808096splitHere46","public class FooService { ... }<newline46mondego><newline46mondego>public class SomeOtherService {<newline46mondego>     public SomeOtherService(FooService fooService) {<newline46mondego>          this.fooService = fooService;<newline46mondego>     }<newline46mondego>}<newline46mondego>"
"4259splitHere46","12808096splitHere46","public interface FooService { ... }<newline46mondego><newline46mondego>public class SomeOtherService {<newline46mondego>     public SomeOtherService(FooService fooService) {<newline46mondego>          this.fooService = fooService;<newline46mondego>     }<newline46mondego>}<newline46mondego>"
"4260splitHere46","12808171splitHere46","ApplicationContext"
"4261splitHere46","12808171splitHere46","Proxy"
"4262splitHere46","12808171splitHere46","<bean id=<doubleQuotes46>realBean<doubleQuotes46> class=<doubleQuotes46>RealClass<doubleQuotes46> /><newline46mondego><bean id=<doubleQuotes46>mockBean<doubleQuotes46> class=<doubleQuotes46>MockClass<doubleQuotes46> /><newline46mondego><beand id=<doubleQuotes46>targetSource<doubleQuotes46> class=<doubleQuotes46>org.springframework.aop.target.HotSwappableTargetSource<doubleQuotes46>><newline46mondego>    <constructor-arg ref=<doubleQuotes46>realBean><doubleQuotes46> /><newline46mondego></bean><newline46mondego><newline46mondego><bean id=<doubleQuotes46>bean<doubleQuotes46> class=<doubleQuotes46>org.springframework.aop.framework.ProxyFactoryBean><newline46mondego>    <property name=<doubleQuotes46>targetSource<doubleQuotes46> ref=<doubleQuotes46>targetSource<doubleQuotes46> /><newline46mondego></bean><newline46mondego><newline46mondego>@Test<newline46mondego>public void testWithMockBean() {<newline46mondego>Object real = targetSource.swap(mock);<newline46mondego>....<newline46mondego>// do your test work<newline46mondego>...<newline46mondego>targetSource.swap(real);<newline46mondego><newline46mondego>}<newline46mondego>"
"4263splitHere46","12808278splitHere46","//Get NY time zone instance<newline46mondego>TimeZone ny_tz = TimeZone.getTimeZone(<doubleQuotes46>America/New_York<doubleQuotes46>);<newline46mondego><newline46mondego>//Get NY calendar object with current date/time<newline46mondego>Calendar ny_cal = Calendar.getInstance(ny_tz);<newline46mondego><newline46mondego>//Get offset from UTC, accounting for DST<newline46mondego>int ny_offset_ms = ny_cal.get(Calendar.ZONE_OFFSET) + ny_cal.get(Calendar.DST_OFFSET);<newline46mondego>"
"4264splitHere46","12808426splitHere46","super"
"4265splitHere46","12808426splitHere46","Preconditions.format"
"4266splitHere46","12808429splitHere46","q.add(n)"
"4267splitHere46","12808429splitHere46","n = q.poll()"
"4268splitHere46","12808429splitHere46","q.add(n)"
"4269splitHere46","12808429splitHere46","while(n!=null)<newline46mondego>    {<newline46mondego>        ...<newline46mondego>        n =  q.poll();<newline46mondego>    }<newline46mondego>"
"4270splitHere46","12808429splitHere46","while((n = q.poll()) != null)<newline46mondego>    {<newline46mondego>        ...<newline46mondego>    }<newline46mondego>"
"4271splitHere46","12808448splitHere46","<build><newline46mondego>    <plugins><newline46mondego>             ...<newline46mondego>                        <plugin><newline46mondego>                                <groupId>org.apache.maven.plugins</groupId><newline46mondego>                                <artifactId>maven-compiler-plugin</artifactId><newline46mondego>                                <configuration><newline46mondego>                                        <source>1.6</source><newline46mondego>                                        <target>1.6</target><newline46mondego>                                </configuration><newline46mondego>                        </plugin><newline46mondego>    </plugins><newline46mondego>  </build><newline46mondego>"
"4272splitHere46","12808548splitHere46","textArea"
"4273splitHere46","12808548splitHere46","public void appendTextAreaText(String text) {<newline46mondego>  textArea.append(text);<newline46mondego>}<newline46mondego>"
"4274splitHere46","12808548splitHere46","public void appendTextAreaText(String text) {<newline46mondego>  if (allowTextAreaAppend) {  // a class boolean field <newline46mondego>    textArea.append(text);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"4275splitHere46","12808784splitHere46","ant-launcher"
"4276splitHere46","12808784splitHere46","Project"
"4277splitHere46","12808790splitHere46","(Integer)-x"
"4278splitHere46","12808790splitHere46","x"
"4279splitHere46","12808790splitHere46","Integer"
"4280splitHere46","12808790splitHere46","(int)-x"
"4281splitHere46","12808790splitHere46","int"
"4282splitHere46","12808990splitHere46","double matrix[][] = new double[n][2*n];<newline46mondego>"
"4283splitHere46","12808990splitHere46","double matrix[][] = new double[n][n];<newline46mondego>"
"4284splitHere46","12808990splitHere46","DecimalFormat"
"4285splitHere46","12808990splitHere46","String fPattern = <doubleQuotes46>0.00000000000000000<doubleQuotes46>; //please supply the right format pattern<newline46mondego> DecimalFormat dFormat = new DecimalFormat(fPattern);<newline46mondego> StringBuilder builder = new StringBuilder(n*n);<newline46mondego> for (i = 0; i < n; i++){<newline46mondego>    for(j = 0; j < n; j++){<newline46mondego>      builder.append(dFormat.format(matrix[i][j]));<newline46mondego>      builder.append(<doubleQuotes46>,<doubleQuotes46>);<newline46mondego>    }<newline46mondego>    builder.append(<doubleQuotes46>\n<doubleQuotes46>);<newline46mondego> }<newline46mondego>"
"4286splitHere46","12808990splitHere46","0.00000000000000000"
"4287splitHere46","12808990splitHere46","#.#################"
"4288splitHere46","12809046splitHere46","try<newline46mondego>{<newline46mondego>HttpPost httppost = new HttpPost(<doubleQuotes46>https://maps.googleapis.com/maps/api/place/search/json?location=34.730300,-86.586100&radius=19308&types=food&name=mcdonalds&sensor=false&key=AddYourOwnKeyHere<doubleQuotes46>);<newline46mondego>HttpClient httpclient = new DefaultHttpClient();<newline46mondego>response = httpclient.execute(httppost);<newline46mondego>String data = EntityUtils.toString(response.getEntity());<newline46mondego>JSONObject json = new JSONObject(data);<newline46mondego>//Parse the JSONObject now<newline46mondego>} catch (Exception e) {<newline46mondego>e.printStackTrace();<newline46mondego>}<newline46mondego>"
"4289splitHere46","12809130splitHere46","ArrayList"
"4290splitHere46","12809130splitHere46","java.util.List"
"4291splitHere46","12809130splitHere46","ArrayList"
"4292splitHere46","12809130splitHere46","List"
"4293splitHere46","12809130splitHere46","LinkedList"
"4294splitHere46","12809130splitHere46","List"
"4295splitHere46","12809130splitHere46","List"
"4296splitHere46","12809130splitHere46","add"
"4297splitHere46","12809130splitHere46","get"
"4298splitHere46","12809130splitHere46","remove(int)"
"4299splitHere46","12809130splitHere46","remove(Object)"
"4300splitHere46","12809130splitHere46","set(int, Object)"
"4301splitHere46","12809130splitHere46","contains(Object)"
"4302splitHere46","12809130splitHere46","indexOf(Object)"
"4303splitHere46","12809130splitHere46","size"
"4304splitHere46","12809130splitHere46","public class Test {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        new Test();<newline46mondego>    }<newline46mondego><newline46mondego>    public Test() {<newline46mondego><newline46mondego>        List<Book> listOfBooks = new ArrayList<Book>();<newline46mondego>        Book bk1 = new Book();<newline46mondego>        listOfBooks.add(bk1);<newline46mondego><newline46mondego>        System.out.println(<doubleQuotes46>           bk1 = <doubleQuotes46> + bk1);<newline46mondego>        System.out.println(<doubleQuotes46>listOfBooks(0) = <doubleQuotes46> + listOfBooks.get(0));<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    public class Book {<newline46mondego><newline46mondego>        String name;<newline46mondego>        int pages;<newline46mondego>        String auother;<newline46mondego>        boolean available;<newline46mondego>        String rentername;<newline46mondego><newline46mondego>        @Override<newline46mondego>        public String toString() {<newline46mondego>            return <doubleQuotes46>Book: name = <doubleQuotes46> + name + <doubleQuotes46>; pages = <doubleQuotes46> + pages + <doubleQuotes46>; available = <doubleQuotes46> + available + <doubleQuotes46>; rentername = <doubleQuotes46> + rentername + <doubleQuotes46>; hashCode = <doubleQuotes46> + hashCode();<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4305splitHere46","12809130splitHere46","bk1 = Book: name = null; pages = 0; available = false; rentername = null; hashCode = 1137551390<newline46mondego>listOfBooks(0) = Book: name = null; pages = 0; available = false; rentername = null; hashCode = 1137551390<newline46mondego>"
"4306splitHere46","12809175splitHere46","RectF.contains()"
"4307splitHere46","12809175splitHere46","RectF.intersects()"
"4308splitHere46","12809197splitHere46","Manifest.MF"
"4309splitHere46","12809197splitHere46","Manifest.MF"
"4310splitHere46","12809197splitHere46","org.eclipse.jdt.core"
"4311splitHere46","12809206splitHere46","run()"
"4312splitHere46","12809206splitHere46","start()"
"4313splitHere46","12809206splitHere46","ScheduledExecutorService"
"4314splitHere46","12809206splitHere46","Future.get()"
"4315splitHere46","12809206splitHere46","ExecutionException"
"4316splitHere46","12809206splitHere46","Throwable.getCause()"
"4317splitHere46","12809206splitHere46","Runnable"
"4318splitHere46","12809206splitHere46","run()"
"4319splitHere46","12809254splitHere46","inflater.inflate(R.layout.picture_method_option, null, false);<newline46mondego>"
"4320splitHere46","12809254splitHere46","View v = inflater.inflate(R.layout.picture_method_option, null, false);<newline46mondego>addView(v);<newline46mondego>"
"4321splitHere46","12809254splitHere46","inflater.inflate(R.layout.picture_method_option, this, true);<newline46mondego>"
"4322splitHere46","12809289splitHere46","paintComponent()"
"4323splitHere46","12809289splitHere46","static MyInfoBubble lastBubble;<newline46mondego><newline46mondego><newline46mondego>public static void main(String[] args)<newline46mondego>{<newline46mondego>    JFrame frame = new JFrame();<newline46mondego>    frame.setSize(new Dimension(500, 500));<newline46mondego><newline46mondego>    JPanel glassPane = new JPanel();<newline46mondego>    glassPane.setOpaque(false);<newline46mondego>    glassPane.setLayout(null);<newline46mondego><newline46mondego>    frame.setGlassPane(glassPane);<newline46mondego>    frame.getGlassPane().setVisible(true);<newline46mondego><newline46mondego>    JPanel labelRowPanel = new JPanel();<newline46mondego>    for (int ctr = 0; ctr < 7; ctr++) {<newline46mondego>        labelRowPanel.add(makeButton(frame, <doubleQuotes46>Button <doubleQuotes46> + ctr));<newline46mondego>    }<newline46mondego><newline46mondego>    frame.getContentPane().add(labelRowPanel);<newline46mondego>    frame.setVisible(true);<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego><newline46mondego>private static JButton makeButton(final JFrame frame, final String label) {<newline46mondego>    final JButton button = new JButton(label);<newline46mondego><newline46mondego>    button.addActionListener(new ActionListener() {<newline46mondego><newline46mondego>        public void actionPerformed(ActionEvent arg0)<newline46mondego>        {<newline46mondego>            if (lastBubble != null)<newline46mondego>            {<newline46mondego>                lastBubble.setVisible(false);<newline46mondego>                ((JPanel)frame.getGlassPane()).remove(lastBubble);<newline46mondego>                lastBubble = null;<newline46mondego>            }<newline46mondego><newline46mondego>            Point loc = button.getLocation();<newline46mondego>            MyInfoBubble mib = new MyInfoBubble();<newline46mondego>            mib.setBounds(loc.x+10, loc.y+30, 100, 50);<newline46mondego>            ((JPanel)frame.getGlassPane()).add(mib);<newline46mondego>            lastBubble = mib;<newline46mondego><newline46mondego>            ((JPanel)frame.getGlassPane()).validate();<newline46mondego>            ((JPanel)frame.getGlassPane()).repaint();<newline46mondego>        }<newline46mondego><newline46mondego>    });<newline46mondego><newline46mondego>    return button;<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>static class MyInfoBubble extends JPanel<newline46mondego>{<newline46mondego>    public MyInfoBubble()<newline46mondego>    {<newline46mondego>        setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>    public void paintComponent(Graphics g)<newline46mondego>    {<newline46mondego>        Graphics2D g2d = (Graphics2D)g;<newline46mondego>        g2d.setColor(Color.BLUE);<newline46mondego>        g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);<newline46mondego>        g2d.fillRoundRect(0, 0, getWidth(), getHeight(), 20, 20);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"4324splitHere46","12809330splitHere46","18*9 = 162"
"4325splitHere46","12809577splitHere46","// NwInterface.java<newline46mondego>import java.util.ArrayList;<newline46mondego><newline46mondego>public class NwInterface {    <newline46mondego><newline46mondego>    public native ArrayList<String> getAddresses(String adapterName);    <newline46mondego><newline46mondego>    static<newline46mondego>    {<newline46mondego>        System.loadLibrary(<doubleQuotes46>nwinterface<doubleQuotes46>);<newline46mondego>    }        <newline46mondego>}<newline46mondego>"
"4326splitHere46","12809577splitHere46","// nwinterface.cc<newline46mondego>#include <iostream><newline46mondego>#include <winsock2.h><newline46mondego>#include <iphlpapi.h><newline46mondego>#include <doubleQuotes46>NwInterface.h<doubleQuotes46><newline46mondego><newline46mondego>#pragma comment(lib, <doubleQuotes46>iphlpapi.lib<doubleQuotes46>)<newline46mondego>#pragma comment(lib, <doubleQuotes46>advapi32.lib<doubleQuotes46>)<newline46mondego><newline46mondego>bool GetFriendlyName(const char* adapterName, unsigned char* buffer,<newline46mondego>                     unsigned long size)<newline46mondego>{<newline46mondego>    HKEY hKey;<newline46mondego><newline46mondego>    char key[1024];<newline46mondego>    _snprintf_s(key, sizeof key, _TRUNCATE,<newline46mondego>                <doubleQuotes46>SYSTEM\\CurrentControlSet\\Control\\Network\\<doubleQuotes46><newline46mondego>                <doubleQuotes46>{4D36E972-E325-11CE-BFC1-08002BE10318}\\%s\\Connection<doubleQuotes46>,<newline46mondego>                adapterName);<newline46mondego><newline46mondego>    long ret = RegOpenKeyEx(HKEY_LOCAL_MACHINE, key, 0, KEY_READ, &hKey);<newline46mondego>    if (ret != ERROR_SUCCESS) {<newline46mondego>        return false;<newline46mondego>    }<newline46mondego><newline46mondego>    ret = RegQueryValueEx(hKey, <doubleQuotes46>Name<doubleQuotes46>, 0, 0, buffer, &size);<newline46mondego>    if (ret != ERROR_SUCCESS) {<newline46mondego>        return false;<newline46mondego>    }<newline46mondego>    buffer[size - 1] = '\0';<newline46mondego><newline46mondego>    return true;<newline46mondego>}<newline46mondego><newline46mondego>JNIEXPORT jobject JNICALL Java_NwInterface_getAddresses(JNIEnv *env, jobject obj,<newline46mondego>                                                        jstring jAdapterName)<newline46mondego>{<newline46mondego>    // Create a Java ArrayList object<newline46mondego>    jclass arrayClass = env->FindClass(<doubleQuotes46>java/util/ArrayList<doubleQuotes46>);<newline46mondego>    jmethodID initMethod = env->GetMethodID(arrayClass, <doubleQuotes46><init><doubleQuotes46>, <doubleQuotes46>()V<doubleQuotes46>);<newline46mondego>    jmethodID addMethod = env->GetMethodID(arrayClass, <doubleQuotes46>add<doubleQuotes46>, <doubleQuotes46>(Ljava/lang/Object;)Z<doubleQuotes46>);<newline46mondego>    jobject ips = env->NewObject(arrayClass, initMethod);<newline46mondego><newline46mondego>    // Get information about all adapters<newline46mondego>    IP_ADAPTER_INFO adapterInfo[128];<newline46mondego>    unsigned long bufferSize = sizeof adapterInfo;<newline46mondego>    unsigned long ret = GetAdaptersInfo(adapterInfo, &bufferSize);<newline46mondego><newline46mondego>    // If there is an error, return empty ArrayList object<newline46mondego>    if (ret != NO_ERROR) {<newline46mondego>        return ips;<newline46mondego>    }<newline46mondego><newline46mondego>    // Iterate through the information of each adapter and select the<newline46mondego>    // specified adapter<newline46mondego>    for (PIP_ADAPTER_INFO adapter = adapterInfo; adapter != NULL;<newline46mondego>         adapter = adapter->Next) {<newline46mondego><newline46mondego>        char friendlyName[1024];<newline46mondego>        ret = GetFriendlyName(adapter->AdapterName,<newline46mondego>                              (unsigned char *) friendlyName,<newline46mondego>                              sizeof friendlyName);<newline46mondego>        if (ret == false) {<newline46mondego>            continue;<newline46mondego>        }<newline46mondego><newline46mondego>        const char *adapterName = env->GetStringUTFChars(jAdapterName, 0);<newline46mondego>        if (strncmp(friendlyName, adapterName, sizeof friendlyName) == 0) {<newline46mondego><newline46mondego>            for (PIP_ADDR_STRING addr = &(adapter->IpAddressList); addr != NULL;<newline46mondego>                 addr = addr->Next) {<newline46mondego><newline46mondego>                const char *ip = addr->IpAddress.String;<newline46mondego>                env->CallBooleanMethod(ips, addMethod, env->NewStringUTF(ip));<newline46mondego>            }<newline46mondego>            break;<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    return ips;<newline46mondego>}<newline46mondego>"
"4327splitHere46","12809577splitHere46","// NameToIp2.java<newline46mondego>import java.util.ArrayList;<newline46mondego><newline46mondego>public class NameToIp2 <newline46mondego>{<newline46mondego>    public static void main(String[] args)<newline46mondego>    {<newline46mondego>        // Print help message if adapter name has not been specified<newline46mondego>        if (args.length != 1) {<newline46mondego>            StackTraceElement[] stack = Thread.currentThread().getStackTrace();<newline46mondego>            String prog = stack[stack.length - 1].getClassName();<newline46mondego><newline46mondego>            System.err.println(<doubleQuotes46>Usage: java <doubleQuotes46> + prog + <doubleQuotes46> ADAPTERNAME<doubleQuotes46>);<newline46mondego>            System.err.println(<doubleQuotes46>Examples:<doubleQuotes46>);<newline46mondego>            System.err.println(<doubleQuotes46>  java <doubleQuotes46> + prog +<doubleQuotes46> \<doubleQuotes46>Local Area Connection\<doubleQuotes46><doubleQuotes46>);<newline46mondego>            System.err.println(<doubleQuotes46>  java <doubleQuotes46> + prog +<doubleQuotes46> LAN<doubleQuotes46>);<newline46mondego>            System.err.println(<doubleQuotes46>  java <doubleQuotes46> + prog +<doubleQuotes46> SWITCH<doubleQuotes46>);<newline46mondego>            System.exit(1);<newline46mondego>        }<newline46mondego><newline46mondego>        // Use NwInterface class to translate <newline46mondego>        NwInterface nwInterface = new NwInterface();<newline46mondego>        ArrayList<String> ips = nwInterface.getAddresses(args[0]);<newline46mondego>        for (String ip: ips) {<newline46mondego>            System.out.println(ip);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4328splitHere46","12809577splitHere46","javac NameToIp2.java<newline46mondego>javah -jni NwInterface<newline46mondego>cl /I cl /LD /EHsc /I C:\jdk1.5.0_13\include /I C:\jdk1.5.0_13\include\win32 nwinterface.cc<newline46mondego>"
"4329splitHere46","12809577splitHere46","C:>java NameToIp2 GB1<newline46mondego>0.0.0.0<newline46mondego><newline46mondego>C:>java NameToIp2 SWITCH<newline46mondego>10.200.1.11<newline46mondego>10.200.1.51<newline46mondego><newline46mondego>C:>java NameToIp2 LAN<newline46mondego>10.1.2.62<newline46mondego>10.1.2.151<newline46mondego>"
"4330splitHere46","12809639splitHere46",".class"
"4331splitHere46","12809639splitHere46","."
"4332splitHere46","12809639splitHere46","com.mycompany.MyClass"
"4333splitHere46","12809639splitHere46","./com/mycompany/MyClass.class"
"4334splitHere46","12809639splitHere46","-cp bin"
"4335splitHere46","12809639splitHere46","java"
"4336splitHere46","12809639splitHere46","res"
"4337splitHere46","12809639splitHere46","-cp"
"4338splitHere46","12809639splitHere46","new FileReader(<doubleQuotes46>res/file1.txt<doubleQuotes46>)"
"4339splitHere46","12809639splitHere46","bin"
"4340splitHere46","12809639splitHere46","new FileReader(<doubleQuotes46>../res/file1.txt<doubleQuotes46>)"
"4341splitHere46","12809645splitHere46","NSApplication.presentationOptions"
"4342splitHere46","12809696splitHere46","O(2 * B^(d/2)) = O(B^(d/2))"
"4343splitHere46","12809696splitHere46","d"
"4344splitHere46","12809696splitHere46","B"
"4345splitHere46","12809696splitHere46","O(B^d)"
"4346splitHere46","12809723splitHere46","StringUtils.EMPTY"
"4347splitHere46","12809884splitHere46","public JSONObject(JSONObject jo, java.lang.String[] names)"
"4348splitHere46","12809884splitHere46","public static java.lang.String[] getNames(JSONObject jo)"
"4349splitHere46","12809884splitHere46","JSONObject copy = new JSONObject(original, JSONObject.getNames(original));<newline46mondego>"
"4350splitHere46","12809941splitHere46","Stack"
"4351splitHere46","12809941splitHere46","startElement"
"4352splitHere46","12809941splitHere46","child"
"4353splitHere46","12809941splitHere46","child"
"4354splitHere46","12809941splitHere46","current"
"4355splitHere46","12809941splitHere46","current"
"4356splitHere46","12809941splitHere46","child"
"4357splitHere46","12809941splitHere46","current"
"4358splitHere46","12809941splitHere46","endElement"
"4359splitHere46","12809941splitHere46","stack"
"4360splitHere46","12809941splitHere46","current"
"4361splitHere46","12809941splitHere46","root"
"4362splitHere46","12810079splitHere46","final private pi = Java.lang.Math.PI;<newline46mondego>"
"4363splitHere46","12810079splitHere46","private final double pi = java.lang.Math.PI;<newline46mondego>"
"4364splitHere46","12810079splitHere46","private final double pi = Math.PI;<newline46mondego>"
"4365splitHere46","12810159splitHere46","import java.io.BufferedReader;<newline46mondego>import java.io.FileReader;<newline46mondego>import java.io.IOException;<newline46mondego>import java.util.HashMap;<newline46mondego>import java.util.Map;<newline46mondego>import java.util.StringTokenizer;<newline46mondego><newline46mondego>//...<newline46mondego>try (BufferedReader in = new BufferedReader(new FileReader(<doubleQuotes46>file<doubleQuotes46>));) {<newline46mondego>        Map<Integer, String> mapHash = new HashMap<>();<newline46mondego>        int i = 0;<newline46mondego>        String st;<newline46mondego><newline46mondego>        while ((st = in.readLine()) != null) {<newline46mondego>            st = st.trim();<newline46mondego>            StringTokenizer tokenizer = new StringTokenizer(st);<newline46mondego>            int j = 0;<newline46mondego>            while (tokenizer.hasMoreTokens()) {<newline46mondego>                if (j == 1) {<newline46mondego>                    mapHash.put(i, tokenizer.nextToken());<newline46mondego>                    break;<newline46mondego>                } else {<newline46mondego>                    tokenizer.nextToken();<newline46mondego>                    j++;<newline46mondego>                }<newline46mondego>            }<newline46mondego>            //store the lexicon with position in the hashmap<newline46mondego>            i++;<newline46mondego>        }<newline46mondego>    } catch (IOException e) {<newline46mondego>        throw new RuntimeException(e);<newline46mondego>    }<newline46mondego>"
"4366splitHere46","12810174splitHere46","super.paintComponent(g)"
"4367splitHere46","12810174splitHere46","paintComponent(...)"
"4368splitHere46","12810174splitHere46","=="
"4369splitHere46","12810174splitHere46","equals(...)"
"4370splitHere46","12810174splitHere46","equalsIgnoreCase(...)"
"4371splitHere46","12810174splitHere46","if (fu == <doubleQuotes46>bar<doubleQuotes46>) {<newline46mondego>  // do something<newline46mondego>}<newline46mondego>"
"4372splitHere46","12810174splitHere46","if (<doubleQuotes46>bar<doubleQuotes46>.equals(fu)) {<newline46mondego>  // do something<newline46mondego>}<newline46mondego>"
"4373splitHere46","12810174splitHere46","if (<doubleQuotes46>bar<doubleQuotes46>.equalsIgnoreCase(fu)) {<newline46mondego>  // do something<newline46mondego>}<newline46mondego>"
"4374splitHere46","12810233splitHere46","xmlConfigSetup(<doubleQuotes46>classpath:/META-INF/spring/web/webmvc-config.xml<doubleQuotes46>)<newline46mondego>            .configureWebAppRootDir(<doubleQuotes46>src/main/webapp<doubleQuotes46>, false).build()<newline46mondego>            .perform(get(<doubleQuotes46>/businesses<doubleQuotes46>).param(<doubleQuotes46>name<doubleQuotes46>, <doubleQuotes46>param1<doubleQuotes46>))<newline46mondego>            .andExpect(status().isOk())<newline46mondego>            .andExpect(view().name(<doubleQuotes46>viewname<doubleQuotes46>));<newline46mondego>"
"4375splitHere46","12810247splitHere46","int a=25; <newline46mondego>for (double i=1;i<=a;i++) { <newline46mondego>    int b = 5 * (int)i;  // you must cast <doubleQuotes46>i<doubleQuotes46> in order for this to compile <newline46mondego>    boolean value = b == a;  // you probably wanted <doubleQuotes46>b == a<doubleQuotes46> not <doubleQuotes46>b == i<doubleQuotes46> <newline46mondego>    if (value)<newline46mondego>        System.out.println(<doubleQuotes46>true<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"4376splitHere46","12810247splitHere46","<doubleQuotes46>true<doubleQuotes46>"
"4377splitHere46","12810247splitHere46","value"
"4378splitHere46","12810247splitHere46","true"
"4379splitHere46","12810247splitHere46","value"
"4380splitHere46","12810247splitHere46","true"
"4381splitHere46","12810247splitHere46","break"
"4382splitHere46","12810247splitHere46","int a=25; <newline46mondego>for (double i=1;i<=a;i++) { <newline46mondego>    int b = 5 * (int)i;<newline46mondego>    boolean value = b == a; <newline46mondego>    if (value) {<newline46mondego>        System.out.println(<doubleQuotes46>true<doubleQuotes46>);<newline46mondego>        break;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4383splitHere46","12810264splitHere46","interface MyFactory {<newline46mondego>  SuperType newInstance(Foo arg1, Bar arg2);<newline46mondego>}<newline46mondego><newline46mondego>class BobFactory implements MyFactory {<newline46mondego>  public BobType newInstance(Foo arg1, Bar arg2) {<newline46mondego>    return new BobType(arg1, arg2);<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>class OtherFactory implements MyFactory {<newline46mondego>  public OtherType newInstance(Foo arg1, Bar arg2) {<newline46mondego>    return new OtherType(arg1, arg2);<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>void myMethod() {<newline46mondego>  MyFactory factory;<newline46mondego>  if (v == <doubleQuotes46>bob<doubleQuotes46>) {<newline46mondego>    factory = new BobFactory();<newline46mondego>  } else {<newline46mondego>    factory = new OtherFactory();<newline46mondego>  }<newline46mondego>  SuperType instance = factory.newInstance(arg1, arg2);<newline46mondego>}<newline46mondego>"
"4384splitHere46","12810264splitHere46","BobType"
"4385splitHere46","12810264splitHere46","OtherType"
"4386splitHere46","12810334splitHere46","SimpleLogger"
"4387splitHere46","12810334splitHere46","org.slf4j.simpleLogger.showShortLogName"
"4388splitHere46","12810334splitHere46","LOGGER"
"4389splitHere46","12810334splitHere46","true"
"4390splitHere46","12810415splitHere46","<str>A,B</str><newline46mondego>"
"4391splitHere46","12810478splitHere46","public void onProgressChanged(SeekBar seekBar, int progress,<newline46mondego>        boolean fromUser) {<newline46mondego>    if(progress>95){<newline46mondego>        seekBar.setVisibility(SeekBar.INVISIBLE);<newline46mondego>                    //code<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>public void onStopTrackingTouch(SeekBar seekBar) {<newline46mondego>    seekBar.setProgress(0);<newline46mondego><newline46mondego>}<newline46mondego>"
"4392splitHere46","12810529splitHere46","if (blocks[i][j].isColorBox()) {<newline46mondego>    return pieceColor;<newline46mondego>} else {<newline46mondego>    return backGroundColor;<newline46mondego>}<newline46mondego>"
"4393splitHere46","12810529splitHere46","if (blocks[i][j].isColorBox()) {<newline46mondego>    someVariable = pieceColor;<newline46mondego>} else {<newline46mondego>    someVariable = backGroundColor;<newline46mondego>}<newline46mondego>"
"4394splitHere46","12810529splitHere46","?:"
"4395splitHere46","12810529splitHere46","if/else"
"4396splitHere46","12810529splitHere46","if/else"
"4397splitHere46","12810646splitHere46","volatile"
"4398splitHere46","12810646splitHere46","volatile"
"4399splitHere46","12810646splitHere46","if"
"4400splitHere46","12810673splitHere46","PersistenceService"
"4401splitHere46","12810673splitHere46","PersistenceService"
"4402splitHere46","12810750splitHere46","select c from Folder f, f.contents c where f.name = 'FOLDER' and c.id = 3;<newline46mondego>"
"4403splitHere46","12810761splitHere46","Class<T>"
"4404splitHere46","12810761splitHere46","attrClass.cast()"
"4405splitHere46","12810761splitHere46","ClassCastException"
"4406splitHere46","12810761splitHere46","T"
"4407splitHere46","12810761splitHere46","String"
"4408splitHere46","12810761splitHere46","Integer"
"4409splitHere46","12810761splitHere46","T"
"4410splitHere46","12810761splitHere46","String"
"4411splitHere46","12810761splitHere46","Integer"
"4412splitHere46","12810761splitHere46","if (attrClass.equals(String.class)) {<newline46mondego>    List<String> list =  new ArrayList<String>();<newline46mondego>    list.add(attrClass.cast(attr));<newline46mondego>}<newline46mondego>"
"4413splitHere46","12810761splitHere46","T"
"4414splitHere46","12810761splitHere46","T"
"4415splitHere46","12810761splitHere46","public static <T> List<T> convertMapToAttribute(T attr) {<newline46mondego>    List<T> list = new ArrayList<T>();<newline46mondego>    list.add(attr);<newline46mondego>    return list;<newline46mondego>}<newline46mondego>"
"4416splitHere46","12811289splitHere46","public int whole_cubes_count(int a, int b) {<newline46mondego>    int count = 0;<newline46mondego>    int cube;<newline46mondego>    for (int x = -27; x <= 27; x++) {<newline46mondego>        cube = x * x * x;<newline46mondego>        if ((cube >= a) && (cube <= b))<newline46mondego>            count++;<newline46mondego>    }<newline46mondego>    return count;<newline46mondego>}<newline46mondego>"
"4417splitHere46","12811367splitHere46","List"
"4418splitHere46","12811367splitHere46","private java.util.List<MyObject> myObjectss = new java.util.ArrayList<MyObject>();<newline46mondego>"
"4419splitHere46","12811367splitHere46","ArrayList"
"4420splitHere46","12811367splitHere46","List"
"4421splitHere46","12811367splitHere46","LinkedList"
"4422splitHere46","12811367splitHere46","private java.util.List<MyObject> myObjectss = new java.util.LinkedList<MyObject>();<newline46mondego>"
"4423splitHere46","12811419splitHere46","provided"
"4424splitHere46","12811419splitHere46","compile"
"4425splitHere46","12811446splitHere46","public class TestFullScreen {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego><newline46mondego>        EventQueue.invokeLater(new Runnable() {<newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego><newline46mondego>                FullFrame frame = new FullFrame();<newline46mondego>                frame.setUndecorated(true);<newline46mondego>                frame.getContentPane().setBackground(Color.PINK);<newline46mondego><newline46mondego>                GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();<newline46mondego>                GraphicsDevice[] gs = ge.getScreenDevices();<newline46mondego><newline46mondego>                gs[0].setFullScreenWindow(frame);<newline46mondego><newline46mondego>            }<newline46mondego>        });<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    public static class FullFrame extends JFrame {<newline46mondego><newline46mondego>        public FullFrame() {<newline46mondego>            super();<newline46mondego><newline46mondego>            addMouseListener(new MouseAdapter() {<newline46mondego>                @Override<newline46mondego>                public void mouseClicked(MouseEvent e) {<newline46mondego>                    System.exit(0);<newline46mondego>                }<newline46mondego>            });<newline46mondego><newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4426splitHere46","12811446splitHere46","setBackground"
"4427splitHere46","12811446splitHere46","setFullScreenWindow"
"4428splitHere46","12811732splitHere46","substr(0,n)"
"4429splitHere46","12811732splitHere46","std::string"
"4430splitHere46","12811732splitHere46","n"
"4431splitHere46","12811732splitHere46","n"
"4432splitHere46","12811732splitHere46","substring"
"4433splitHere46","12811732splitHere46","n"
"4434splitHere46","12811732splitHere46","str.substring(0, Math.min(6, str.length())"
"4435splitHere46","12811753splitHere46","OnSystemUiVisibilityChangeListener"
"4436splitHere46","12811753splitHere46","View"
"4437splitHere46","12811753splitHere46","Class.forName(<doubleQuotes46>android.view.View$OnSystemUiVisibilityChangeListener<doubleQuotes46>);"
"4438splitHere46","12811867splitHere46","super.onCreate(savedInstanceState);<newline46mondego>setContentView(R.layout.your);<newline46mondego>"
"4439splitHere46","12811934splitHere46","NullPointerException"
"4440splitHere46","12811934splitHere46","SQLConnection.java"
"4441splitHere46","12811934splitHere46","execSelectQuery"
"4442splitHere46","12811934splitHere46","Item.java"
"4443splitHere46","12811934splitHere46","java.lang.NullPointerException<newline46mondego>connection.SQLConnection.execSelectQuery(SQLConnection.java:35)<newline46mondego>"
"4444splitHere46","12811934splitHere46","Item.java"
"4445splitHere46","12811934splitHere46","model.Item.lastItems(Item.java:10)"
"4446splitHere46","12811934splitHere46","Statement stmt = con.createStatement();"
"4447splitHere46","12811934splitHere46","Connection"
"4448splitHere46","12811971splitHere46","int x = 5;<newline46mondego>System.out.println(x--); //outputs 5<newline46mondego>System.out.println(x);   //outputs 4<newline46mondego>"
"4449splitHere46","12812014splitHere46","Locale ru_loc = new Locale(<doubleQuotes46>ru<doubleQuotes46>, <doubleQuotes46>RU<doubleQuotes46>);<newline46mondego>"
"4450splitHere46","12812155splitHere46","HttpSession session;<newline46mondego>session = request.getSession();<newline46mondego>session.setAttribute(<doubleQuotes46>employeeid<doubleQuotes46>, this.getEmployeeid());<newline46mondego>"
"4451splitHere46","12812155splitHere46","session = request.getSession();<newline46mondego>System.out.println(<doubleQuotes46>EMPLOYEE ID ::<doubleQuotes46>+session.getAttribute(<doubleQuotes46>employeeid<doubleQuotes46>));<newline46mondego>"
"4452splitHere46","12812168splitHere46","<constructor-arg>"
"4453splitHere46","12812168splitHere46","<bean name=<doubleQuotes46>testEquityOrder<doubleQuotes46> class=<doubleQuotes46>com.sapient.Spring.Equity.EquityOrder<doubleQuotes46>><newline46mondego>    <constructor-arg value=<doubleQuotes46>dummyValue<doubleQuotes46> /><newline46mondego></bean><newline46mondego>"
"4454splitHere46","12812198splitHere46","equals"
"4455splitHere46","12812198splitHere46","hashCode"
"4456splitHere46","12812198splitHere46","public class Pair {<newline46mondego>    private String key;<newline46mondego>    private Integer value;<newline46mondego><newline46mondego>    public Pair(String key, Integer value) {<newline46mondego>        this.key = key;<newline46mondego>        this.value = value;<newline46mondego>    }<newline46mondego><newline46mondego>    public String getKey() {<newline46mondego>        return key;<newline46mondego>    }<newline46mondego><newline46mondego>    public Integer getValue() {<newline46mondego>        return value;<newline46mondego>    }<newline46mondego><newline46mondego>    // autogenerated<newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean equals(Object o) {<newline46mondego>        if (this == o) return true;<newline46mondego>        if (!(o instanceof Pair)) return false;<newline46mondego><newline46mondego>        Pair pair = (Pair) o;<newline46mondego><newline46mondego>        if (key != null ? !key.equals(pair.key) : pair.key != null) return false;<newline46mondego>        if (value != null ? !value.equals(pair.value) : pair.value != null) return false;<newline46mondego><newline46mondego>        return true;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public int hashCode() {<newline46mondego>        int result = key != null ? key.hashCode() : 0;<newline46mondego>        result = 31 * result + (value != null ? value.hashCode() : 0);<newline46mondego>        return result;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4457splitHere46","12812198splitHere46","List<Pair> list = new ArrayList<Pair>();<newline46mondego>    list.add(new Pair(<doubleQuotes46>string<doubleQuotes46>, 123));<newline46mondego>"
"4458splitHere46","12812228splitHere46","/**<newline46mondego>     * Calculate the offset     * <newline46mondego>     * @param i<newline46mondego>     * @return array: <newline46mondego>     * 0: x offset<newline46mondego>     * 1: y offset<newline46mondego>     */<newline46mondego>    private int[] calculateOffSet(int i) {<newline46mondego>        int[] val = new int[2];<newline46mondego>        int deflt = -12;<newline46mondego>        if(i == 12) {<newline46mondego>            val[0] = -15;<newline46mondego>            val[1] = 9;<newline46mondego>        }else if (i > 6) {<newline46mondego>            val[0] = deflt + i - 6 ;<newline46mondego>            val[1] = i ;<newline46mondego>        }else {<newline46mondego>            val[0] = deflt + i ;<newline46mondego>            val[1] = i + 6;         <newline46mondego>        }<newline46mondego>        return val;<newline46mondego>    }<newline46mondego>"
"4459splitHere46","12812228splitHere46","int xLocation = (int)tick.getX1()+(int)(tick.getX1()-tick.getX2());<newline46mondego>int yLocation = (int)tick.getY1()+(int)(tick.getY1()-tick.getY2());<newline46mondego>int[] offset = calculateOffSet((secs / 5));<newline46mondego>g2.drawString(number, xLocation + offset[0], yLocation + offset[1]);<newline46mondego>"
"4460splitHere46","12812257splitHere46","DAOManager"
"4461splitHere46","12812257splitHere46","public class DAOManager {<newline46mondego><newline46mondego>    public DAOManager() throws Exception {<newline46mondego>        try<newline46mondego>        {<newline46mondego>            InitialContext ctx = new InitialContext();<newline46mondego>            this.src = (DataSource)ctx.lookup(<doubleQuotes46>jndi/MYSQL<doubleQuotes46>); //The string should be the same name you're giving to your JNDI in Glassfish.<newline46mondego>        }<newline46mondego>        catch(Exception e) { throw e; }<newline46mondego>    }<newline46mondego><newline46mondego>    public void open() throws SQLException {<newline46mondego>        try<newline46mondego>        {<newline46mondego>            if(this.con==null || !this.con.isOpen())<newline46mondego>                this.con = src.getConnection();<newline46mondego>        }<newline46mondego>        catch(SQLException e) { throw e; }<newline46mondego>    }<newline46mondego><newline46mondego>    public void close() throws SQLException {<newline46mondego>        try<newline46mondego>        {<newline46mondego>            if(this.con!=null && this.con.isOpen())<newline46mondego>                this.con.close();<newline46mondego>        }<newline46mondego>        catch(SQLException e) { throw e; }<newline46mondego>    }<newline46mondego><newline46mondego>    //Private<newline46mondego>    private DataSource src;<newline46mondego>    private Connection con;<newline46mondego><newline46mondego>}<newline46mondego>"
"4462splitHere46","12812257splitHere46","DAOManager mngr = new DAOManager();<newline46mondego>mngr.open();<newline46mondego>mngr.close();<newline46mondego>"
"4463splitHere46","12812257splitHere46","DAOManager mngr1 = new DAOManager();<newline46mondego>DAOManager mngr2 = new DAOManager();<newline46mondego>mngr1.open();<newline46mondego>mngr2.open();<newline46mondego>"
"4464splitHere46","12812257splitHere46","public"
"4465splitHere46","12812257splitHere46","DAOManager"
"4466splitHere46","12812257splitHere46","private"
"4467splitHere46","12812257splitHere46","getInstance()"
"4468splitHere46","12812257splitHere46","public class DAOManager {<newline46mondego><newline46mondego>    public static DAOManager getInstance() {<newline46mondego>        return DAOManagerSingleton.INSTANCE;<newline46mondego>    }  <newline46mondego><newline46mondego>    public void open() throws SQLException {<newline46mondego>        try<newline46mondego>        {<newline46mondego>            if(this.con==null || !this.con.isOpen())<newline46mondego>                this.con = src.getConnection();<newline46mondego>        }<newline46mondego>        catch(SQLException e) { throw e; }<newline46mondego>    }<newline46mondego><newline46mondego>    public void close() throws SQLException {<newline46mondego>        try<newline46mondego>        {<newline46mondego>            if(this.con!=null && this.con.isOpen())<newline46mondego>                this.con.close();<newline46mondego>        }<newline46mondego>        catch(SQLException e) { throw e; }<newline46mondego>    }<newline46mondego><newline46mondego>    //Private<newline46mondego>    private DataSource src;<newline46mondego>    private Connection con;<newline46mondego><newline46mondego>    private DAOManager() throws Exception {<newline46mondego>        try<newline46mondego>        {<newline46mondego>            InitialContext ctx = new InitialContext();<newline46mondego>            this.src = (DataSource)ctx.lookup(<doubleQuotes46>jndi/MYSQL<doubleQuotes46>);<newline46mondego>        }<newline46mondego>        catch(Exception e) { throw e; }<newline46mondego>    }<newline46mondego><newline46mondego>    private static class DAOManagerSingleton {<newline46mondego><newline46mondego>        public static final DAOManager INSTANCE;<newline46mondego>        static<newline46mondego>        {<newline46mondego>            DAOManager dm;<newline46mondego>            try<newline46mondego>            {<newline46mondego>                dm = new DAOManager();<newline46mondego>            }<newline46mondego>            catch(Exception e)<newline46mondego>                dm = null;<newline46mondego>            INSTANCE = dm;<newline46mondego>        }        <newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"4469splitHere46","12812257splitHere46","DAOManager"
"4470splitHere46","12812257splitHere46","ThreadLocal"
"4471splitHere46","12812257splitHere46","ThreadLocal"
"4472splitHere46","12812257splitHere46","INSTANCE"
"4473splitHere46","12812257splitHere46","ThreadLocal"
"4474splitHere46","12812257splitHere46","public class DAOManager {<newline46mondego><newline46mondego>    public static DAOManager getInstance() {<newline46mondego>        return DAOManagerSingleton.INSTANCE.get();<newline46mondego>    }  <newline46mondego><newline46mondego>    public void open() throws SQLException {<newline46mondego>        try<newline46mondego>        {<newline46mondego>            if(this.con==null || !this.con.isOpen())<newline46mondego>                this.con = src.getConnection();<newline46mondego>        }<newline46mondego>        catch(SQLException e) { throw e; }<newline46mondego>    }<newline46mondego><newline46mondego>    public void close() throws SQLException {<newline46mondego>        try<newline46mondego>        {<newline46mondego>            if(this.con!=null && this.con.isOpen())<newline46mondego>                this.con.close();<newline46mondego>        }<newline46mondego>        catch(SQLException e) { throw e; }<newline46mondego>    }<newline46mondego><newline46mondego>    //Private<newline46mondego>    private DataSource src;<newline46mondego>    private Connection con;<newline46mondego><newline46mondego>    private DAOManager() throws Exception {<newline46mondego>        try<newline46mondego>        {<newline46mondego>            InitialContext ctx = new InitialContext();<newline46mondego>            this.src = (DataSource)ctx.lookup(<doubleQuotes46>jndi/MYSQL<doubleQuotes46>);<newline46mondego>        }<newline46mondego>        catch(Exception e) { throw e; }<newline46mondego>    }<newline46mondego><newline46mondego>    private static class DAOManagerSingleton {<newline46mondego><newline46mondego>        public static final ThreadLocal<DAOManager> INSTANCE;<newline46mondego>        static<newline46mondego>        {<newline46mondego>            ThreadLocal<DAOManager> dm;<newline46mondego>            try<newline46mondego>            {<newline46mondego>                dm = new ThreadLocal<DAOManager>(){<newline46mondego>                    @Override<newline46mondego>                    protected DAOManager initialValue() {<newline46mondego>                        try<newline46mondego>                        {<newline46mondego>                            return new DAOManager();<newline46mondego>                        }<newline46mondego>                        catch(Exception e)<newline46mondego>                        {<newline46mondego>                            return null;<newline46mondego>                        }<newline46mondego>                    }<newline46mondego>                };<newline46mondego>            }<newline46mondego>            catch(Exception e)<newline46mondego>                dm = null;<newline46mondego>            INSTANCE = dm;<newline46mondego>        }        <newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"4475splitHere46","12812257splitHere46","catch(Exception e)<newline46mondego>{<newline46mondego>    return null;<newline46mondego>}<newline46mondego>"
"4476splitHere46","12812257splitHere46","initialValue()"
"4477splitHere46","12812257splitHere46","initialValue()"
"4478splitHere46","12812257splitHere46","ThreadLocal"
"4479splitHere46","12812257splitHere46","DAOManager"
"4480splitHere46","12812257splitHere46","DAOManager"
"4481splitHere46","12812257splitHere46","GenericDAO"
"4482splitHere46","12812257splitHere46","public abstract class GenericDAO<T> {<newline46mondego><newline46mondego>    public abstract int count() throws SQLException; <newline46mondego><newline46mondego>    //Protected<newline46mondego>    protected final String tableName;<newline46mondego>    protected Connection con;<newline46mondego><newline46mondego>    protected GenericDAO(Connection con, String tableName) {<newline46mondego>        this.tableName = tableName;<newline46mondego>        this.con = con;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"4483splitHere46","12812257splitHere46","First"
"4484splitHere46","12812257splitHere46","Second"
"4485splitHere46","12812257splitHere46","String"
"4486splitHere46","12812257splitHere46","data"
"4487splitHere46","12812257splitHere46","public class FirstDAO extends GenericDAO<First> {<newline46mondego><newline46mondego>    public FirstDAO(Connection con) {<newline46mondego>        super(con, TABLENAME);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public int count() throws SQLException {<newline46mondego>        String query = <doubleQuotes46>SELECT COUNT(*) AS count FROM <doubleQuotes46>+this.tableName;<newline46mondego>        PreparedStatement counter;<newline46mondego>        try<newline46mondego>        {<newline46mondego>        counter = this.con.PrepareStatement(query);<newline46mondego>        ResultSet res = counter.executeQuery();<newline46mondego>        res.next();<newline46mondego>        return res.getInt(<doubleQuotes46>count<doubleQuotes46>);<newline46mondego>        }<newline46mondego>        catch(SQLException e){ throw e; }<newline46mondego>    }<newline46mondego><newline46mondego>   //Private<newline46mondego>   private final static String TABLENAME = <doubleQuotes46>FIRST<doubleQuotes46>;<newline46mondego><newline46mondego>}<newline46mondego>"
"4488splitHere46","12812257splitHere46","SecondDAO"
"4489splitHere46","12812257splitHere46","TABLENAME"
"4490splitHere46","12812257splitHere46","<doubleQuotes46>SECOND<doubleQuotes46>"
"4491splitHere46","12812257splitHere46","DAOManager"
"4492splitHere46","12812257splitHere46","DAOManager"
"4493splitHere46","12812257splitHere46","DAOManager"
"4494splitHere46","12812257splitHere46","DAOManager"
"4495splitHere46","12812257splitHere46","DAOManager"
"4496splitHere46","12812257splitHere46","DAOManager"
"4497splitHere46","12812257splitHere46","enum"
"4498splitHere46","12812257splitHere46","public enum Table { FIRST, SECOND }<newline46mondego>"
"4499splitHere46","12812257splitHere46","DAOManager"
"4500splitHere46","12812257splitHere46","public GenericDAO getDAO(Table t) throws SQLException <newline46mondego>{<newline46mondego><newline46mondego>    try<newline46mondego>    {<newline46mondego>        if(this.con == null || this.con.isClosed()) //Let's ensure our connection is open   <newline46mondego>            this.open();<newline46mondego>    }<newline46mondego>    catch(SQLException e){ throw e; }<newline46mondego><newline46mondego>    switch(t)<newline46mondego>    {<newline46mondego>    case FIRST:<newline46mondego>        return new FirstDAO(this.con);<newline46mondego>    case SECOND:<newline46mondego>        return new SecondDAO(this.con);<newline46mondego>    default:<newline46mondego>        throw new SQLException(<doubleQuotes46>Trying to link to an unexistant table.<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"4501splitHere46","12812257splitHere46","DAOManager dao = DAOManager.getInstance();<newline46mondego>FirstDAO fDao = (FirstDAO)dao.getDAO(Table.FIRST);<newline46mondego>SecondDAO sDao = (SecondDAO)dao.getDAO(Table.SECOND);<newline46mondego>System.out.println(fDao.count());<newline46mondego>System.out.println(sDao.count());<newline46mondego>dao.close();<newline46mondego>"
"4502splitHere46","12812257splitHere46","close()"
"4503splitHere46","12812257splitHere46","DAOManager"
"4504splitHere46","12812257splitHere46","@Override<newline46mondego>protected void finalize()<newline46mondego>{<newline46mondego><newline46mondego>    try{ this.close(); }<newline46mondego>    finally{ super.finalize(); }<newline46mondego><newline46mondego>}<newline46mondego>"
"4505splitHere46","12812257splitHere46","setAutoCommit()"
"4506splitHere46","12812257splitHere46","commit()"
"4507splitHere46","12812257splitHere46","rollback()"
"4508splitHere46","12812257splitHere46","Connection"
"4509splitHere46","12812257splitHere46","Connection"
"4510splitHere46","12812257splitHere46","DAOManager"
"4511splitHere46","12812257splitHere46","PreparedStatement"
"4512splitHere46","12812257splitHere46","ResultSet"
"4513splitHere46","12812257splitHere46","close()"
"4514splitHere46","12812267splitHere46","/**<newline46mondego> * value = base * 10 ^ power.<newline46mondego> */<newline46mondego><newline46mondego>public class MyDouble {<newline46mondego><newline46mondego>    // Threshold values to determine whether given double is too small or not. <newline46mondego>private static final double SMALL_EPSILON = 1e-8;<newline46mondego>private static final double SMALL_EPSILON_MULTIPLIER = 1e8;<newline46mondego>private static final int    SMALL_EPSILON_POWER = 8;<newline46mondego><newline46mondego>private double myBase;<newline46mondego>private int    myPower;<newline46mondego><newline46mondego>public MyDouble(double base, int power){<newline46mondego>    myBase  = base;<newline46mondego>    myPower = power;<newline46mondego>}<newline46mondego><newline46mondego>public MyDouble(double base) <newline46mondego>{<newline46mondego>    myBase  = base;<newline46mondego>    myPower = 0;<newline46mondego>    adjustPower();<newline46mondego>}<newline46mondego><newline46mondego>/**<newline46mondego> * If base value is too small, increase the base by multiplying with some number and <newline46mondego> * decrease the power accordingly. <newline46mondego> * <p> E.g 0.000 000 000 001 * 10^1  => 0.0001 * 10^8  <newline46mondego> */<newline46mondego>private void adjustPower()<newline46mondego>{<newline46mondego>    // Increase the base & decrease the power <newline46mondego>    // if given double value is less than threshold.<newline46mondego>    if (myBase < SMALL_EPSILON) {<newline46mondego>        myBase = myBase * SMALL_EPSILON_MULTIPLIER;<newline46mondego>        myPower -= SMALL_EPSILON_POWER;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>/**<newline46mondego> * This method multiplies given double and updates this object.<newline46mondego> */<newline46mondego>public void multiply(MyDouble d)<newline46mondego>{<newline46mondego>    myBase  *= d.myBase;<newline46mondego>    myPower += d.myPower;<newline46mondego>    adjustPower();<newline46mondego>}<newline46mondego><newline46mondego>/**<newline46mondego> * This method multiplies given primitive double value with this object and update the <newline46mondego> * base and power.<newline46mondego> */<newline46mondego>public void multiply(double d)<newline46mondego>{<newline46mondego>    multiply(new MyDouble(d));<newline46mondego>}<newline46mondego><newline46mondego>@Override<newline46mondego>public String toString()<newline46mondego>{<newline46mondego>    return <doubleQuotes46>Base:<doubleQuotes46> + myBase + <doubleQuotes46>, Power=<doubleQuotes46> + myPower;<newline46mondego>}<newline46mondego><newline46mondego>/**<newline46mondego> * This method multiplies given double values and returns MyDouble object.<newline46mondego> * It make sure that too small double values do not zero out the multiplication result. <newline46mondego> */<newline46mondego>public static MyDouble multiply(double...values) <newline46mondego>{<newline46mondego>    MyDouble result = new MyDouble(1);<newline46mondego>    for (int i=0; i<values.length; i++) {<newline46mondego>        result.multiply(values[i]);<newline46mondego>    }<newline46mondego>    return result;<newline46mondego>}<newline46mondego><newline46mondego>public static void main(String[] args) {<newline46mondego>    MyDouble r = MyDouble.multiply(1e-80, 1e100);<newline46mondego>    System.out.println(r);<newline46mondego>}<newline46mondego>"
"4515splitHere46","12812333splitHere46","AbstractTransactionalJUnit4SpringContextTests"
"4516splitHere46","12812333splitHere46","AbstractTransactionalJUnit4SpringContextTests"
"4517splitHere46","12812333splitHere46","SpringJUnit4ClassRunner"
"4518splitHere46","12812333splitHere46","@Transactional"
"4519splitHere46","12812355splitHere46","String[] str_array = {<doubleQuotes46>item1<doubleQuotes46>,<doubleQuotes46>item2<doubleQuotes46>,<doubleQuotes46>item3<doubleQuotes46>};<newline46mondego>List<String> list = new ArrayList<String>(Arrays.asList(str_array));<newline46mondego>list.remove(<doubleQuotes46>item2<doubleQuotes46>);<newline46mondego>str_array = list.toArray(new String[0]);<newline46mondego>"
"4520splitHere46","12812359splitHere46","org.apache.neethi.Constants.isPolicyElement()"
"4521splitHere46","12812777splitHere46","public static final String A = <doubleQuotes46>test1<doubleQuotes46>;<newline46mondego>public static final String B = <doubleQuotes46>test2<doubleQuotes46>;<newline46mondego>public static final String C = <doubleQuotes46>test3<doubleQuotes46>;<newline46mondego>"
"4522splitHere46","12812777splitHere46","public interface Type1 {<newline46mondego>    String A = <doubleQuotes46>test1<doubleQuotes46>;<newline46mondego>    String B = <doubleQuotes46>test2<doubleQuotes46>;<newline46mondego>    String C = <doubleQuotes46>test3<doubleQuotes46>;<newline46mondego>}<newline46mondego>"
"4523splitHere46","12812878splitHere46","String fname =request.getParameter(<doubleQuotes46>fname<doubleQuotes46>) ;<newline46mondego>System.out.println(<doubleQuotes46>Value of first name <doubleQuotes46> +fname) // this will print your console<newline46mondego>java.lang.String result = port.insert(fname, lname, email, password);<newline46mondego>"
"4524splitHere46","12812878splitHere46","Enumeration reqParams= request.getParameterNames();<newline46mondego>while (reqParams.hasMoreElements()) {<newline46mondego>    String key= (String) reqParams.nextElement();<newline46mondego>    String val = request.getParameter(element);<newline46mondego>    System.out.println(<doubleQuotes46> Key ==> <doubleQuotes46>+key+<doubleQuotes46> , Value ==> <doubleQuotes46>+val);<newline46mondego><newline46mondego>}<newline46mondego>"
"4525splitHere46","12812928splitHere46","PdfPTable"
"4526splitHere46","12812928splitHere46","writeSelectedRows()"
"4527splitHere46","12812928splitHere46","ColumnText"
"4528splitHere46","12812935splitHere46","DocumentFilter"
"4529splitHere46","12812935splitHere46","public class SizeFilter extends DocumentFilter {<newline46mondego><newline46mondego>    private int maxCharacters;    <newline46mondego><newline46mondego>    public SizeFilter(int maxChars) {<newline46mondego>        maxCharacters = maxChars;<newline46mondego>    }<newline46mondego><newline46mondego>    public void insertString(FilterBypass fb, int offs, String str, AttributeSet a)<newline46mondego>            throws BadLocationException {<newline46mondego><newline46mondego>        if ((fb.getDocument().getLength() + str.length()) <= maxCharacters)<newline46mondego>            super.insertString(fb, offs, str, a);<newline46mondego>        else<newline46mondego>            Toolkit.getDefaultToolkit().beep();<newline46mondego>    }<newline46mondego><newline46mondego>    public void replace(FilterBypass fb, int offs, int length, String str, AttributeSet a)<newline46mondego>            throws BadLocationException {<newline46mondego><newline46mondego>        if ((fb.getDocument().getLength() + str.length()<newline46mondego>                - length) <= maxCharacters)<newline46mondego>            super.replace(fb, offs, length, str, a);<newline46mondego>        else<newline46mondego>            Toolkit.getDefaultToolkit().beep();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4530splitHere46","12813001splitHere46","What should I do to solve this?<newline46mondego>"
"4531splitHere46","12813001splitHere46","JFrame#setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);"
"4532splitHere46","12813001splitHere46","MainScreen.getInstance().setExtendedState(JFrame.ICONIFIED);"
"4533splitHere46","12813001splitHere46","MainScreen.getInstance().setVisible(true);"
"4534splitHere46","12813001splitHere46","and only one code line"
"4535splitHere46","12813001splitHere46","public void mouseClicked(MouseEvent e)"
"4536splitHere46","12813001splitHere46","JFrame.HIDE_ON_CLOSE"
"4537splitHere46","12813001splitHere46","JFrame"
"4538splitHere46","12813001splitHere46","Every thing goes fine on Windows with no problems anywhere."
"4539splitHere46","12813202splitHere46","int REC_CODE=2;<newline46mondego>startActivityForResult(new Intent(this,DataPic.class),REC_CODE);<newline46mondego>"
"4540splitHere46","12813202splitHere46","Intent i = new Intent();<newline46mondego>i.putExtra(<doubleQuotes46>date<doubleQuotes46>,selecteddate);<newline46mondego>setResult(RESULT_OK, i);<newline46mondego>finish(); <newline46mondego>"
"4541splitHere46","12813202splitHere46","@Override<newline46mondego>public void onActivityResult(int requestCode, int resultCode, Intent data) <newline46mondego>{<newline46mondego><newline46mondego>  // TODO Auto-generated method stub<newline46mondego>    if(requestCode == REQ_CODE){<newline46mondego>               if (resultCode == Activity.RESULT_OK){<newline46mondego>                   String date= data.getStringExtra(<doubleQuotes46>date<doubleQuotes46>);<newline46mondego>}<newline46mondego>}<newline46mondego>"
"4542splitHere46","12813305splitHere46","Sql"
"4543splitHere46","12813305splitHere46","limit ? offset ?"
"4544splitHere46","12813305splitHere46","addOrder"
"4545splitHere46","12813305splitHere46",".addOrder( Order.asc(<doubleQuotes46>name<doubleQuotes46>) )<newline46mondego>"
"4546splitHere46","12813499splitHere46","ServerSocket ss = new ServerSocket(); // Unbound socket<newline46mondego>ss.bind(new InetSocketAddress(<doubleQuotes46>1.2.3.4<doubleQuotes46>, 1000)); // Bind the socket to a specific interface<newline46mondego>Socket client = ss.accept();<newline46mondego>"
"4547splitHere46","12813920splitHere46","when(mock.load(<doubleQuotes46>a<doubleQuotes46>)).thenAnswer(new Answer<String>() {<newline46mondego>   @Override<newline46mondego>   public String answer(InvocationOnMock invocation){<newline46mondego>     Thread.sleep(5000);<newline46mondego>     return <doubleQuotes46>ABCD1234<doubleQuotes46>;<newline46mondego>   }<newline46mondego>});<newline46mondego>"
"4548splitHere46","12813969splitHere46","Comparator<TreeNode<CharFreq>>"
"4549splitHere46","12813969splitHere46","public static TreeNode<CharFreq> buildTree(ArrayList<TreeNode<CharFreq>> trees)<newline46mondego>    throws IOException {<newline46mondego>    Comparator<TreeNode<CharFreq>> comparator = new Comparator<TreeNode<CharFreq>>() {<newline46mondego><newline46mondego>        //basic implementation, you must use your own!<newline46mondego>        public int compare(TreeNode<CharFreq> node1, TreeNode<CharFreq> node2) {<newline46mondego>            return node1.data.compareTo(node2.data);<newline46mondego>        }<newline46mondego>    };<newline46mondego>    PriorityQueue<TreeNode<CharFreq>> pq = new PriorityQueue<TreeNode<CharFreq>>(10, comparator);<newline46mondego>    //the rest of your code...<newline46mondego>}<newline46mondego>"
"4550splitHere46","12813969splitHere46","Comparator<TreeNode<YourClass>>"
"4551splitHere46","12813969splitHere46","PriorityQueue<TreeNode<YourClass>>"
"4552splitHere46","12813985splitHere46","float[]"
"4553splitHere46","12813985splitHere46","FloatBuffer"
"4554splitHere46","12813985splitHere46","FloatBuffer fb = ByteBuffer.allocateDirect(size*4)<newline46mondego>                           .order(ByteOrder.nativeOrder())<newline46mondego>                           .asFloatBuffer();<newline46mondego>"
"4555splitHere46","12814003splitHere46","ImageIcon image = (new ImageIcon(getClass().getResource(<doubleQuotes46>yourpackage/mypackage/image.gif<doubleQuotes46>)));<newline46mondego>"
"4556splitHere46","12814003splitHere46","InputStream is = this.getClass().getResourceAsStream(<doubleQuotes46>yourpackage/mypackage/file.html<doubleQuotes46>);<newline46mondego>"
"4557splitHere46","12814110splitHere46","Comparator"
"4558splitHere46","12814110splitHere46","sortedList = Collections.sort( list , new YourComparator() )"
"4559splitHere46","12814110splitHere46","Comparator c = new Comparator<String>()<newline46mondego>    {<newline46mondego>        @Override<newline46mondego>        public int compare( String o1, String o2 )<newline46mondego>        {<newline46mondego>            return getNumber( o1 ).compareTo( getNumber( o2 ) );<newline46mondego>        }<newline46mondego><newline46mondego>        private Integer getNumber( String str ) <newline46mondego>        {<newline46mondego>            Pattern pattern = Pattern.compile(<doubleQuotes46>([0-9]+)<doubleQuotes46>);<newline46mondego>            Matcher matcher = pattern.matcher(str);<newline46mondego>            while ( matcher.find() ) { return Integer.parseInt( matcher.group( 1 ) ); }<newline46mondego><newline46mondego>            return 0;<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"4560splitHere46","12814145splitHere46","adb"
"4561splitHere46","12814145splitHere46","adb.exe"
"4562splitHere46","12814145splitHere46","PATH"
"4563splitHere46","12814145splitHere46","adb.exe"
"4564splitHere46","12814145splitHere46","PATH"
"4565splitHere46","12814145splitHere46","Runtime.exec()"
"4566splitHere46","12814145splitHere46","ProcessBuilder"
"4567splitHere46","12814145splitHere46","ProcessBuilder pb = new ProcessBuilder(<doubleQuotes46>cmd<doubleQuotes46>,<doubleQuotes46>/c<doubleQuotes46>,<doubleQuotes46>adb devices<doubleQuotes46>);<newline46mondego>pb.directory(new File(<doubleQuotes46>c:\\path\\to\\android\\platform-tools\\<doubleQuotes46>);<newline46mondego>pb.start();<newline46mondego>"
"4568splitHere46","12814190splitHere46","DatabaseMetaData meta = con.getMetaData();<newline46mondego>"
"4569splitHere46","12814190splitHere46","getSchema();<newline46mondego>getTables(null, null, <doubleQuotes46>%<doubleQuotes46>, null); // thanks to AVD<newline46mondego>"
"4570splitHere46","12814412splitHere46","Console"
"4571splitHere46","12814412splitHere46","cls"
"4572splitHere46","12814412splitHere46","clear"
"4573splitHere46","12814446splitHere46","LocaleProvider"
"4574splitHere46","12814446splitHere46","public class ChangeLocale implements LocaleProvider {  <newline46mondego><newline46mondego>        private String lan;  <newline46mondego><newline46mondego>        public String getLan() {  <newline46mondego>            return lan;  <newline46mondego>        }  <newline46mondego>        public void setLan(String lan) {  <newline46mondego>            this.lan = lan;  <newline46mondego>        }  <newline46mondego>        public Locale getLocale() {  <newline46mondego><newline46mondego>            Locale locale=null;<newline46mondego>            // Switch language between Chinese and English  <newline46mondego>            if(<doubleQuotes46>chinese<doubleQuotes46>.equals(lan)){  <newline46mondego>                locale=new Locale(<doubleQuotes46>zh<doubleQuotes46>, <doubleQuotes46>cn<doubleQuotes46>);  <newline46mondego>            }else if(<doubleQuotes46>english<doubleQuotes46>.equals(lan)){  <newline46mondego>                locale=new Locale(<doubleQuotes46>en<doubleQuotes46>, <doubleQuotes46>US<doubleQuotes46>);  <newline46mondego>            }  <newline46mondego>            return locale;  <newline46mondego>        }  <newline46mondego>    }  <newline46mondego>"
"4575splitHere46","12814446splitHere46","LocaleAction"
"4576splitHere46","12814446splitHere46","public String execute(){  <newline46mondego><newline46mondego>        ActionContext ac=ActionContext.getContext();  <newline46mondego>        ac.setLocale(getLocale());  <newline46mondego>        return <doubleQuotes46>success<doubleQuotes46>;  <newline46mondego>    }  <newline46mondego>"
"4577splitHere46","12814446splitHere46","<a href=<doubleQuotes46><s:property value=<doubleQuotes46>chinese<doubleQuotes46>/><doubleQuotes46>><s:text name=<doubleQuotes46>china<doubleQuotes46>></s:text></a>  <newline46mondego><a href=<doubleQuotes46><s:property value=<doubleQuotes46>english<doubleQuotes46>/><doubleQuotes46>><s:text name=<doubleQuotes46>us<doubleQuotes46>></s:text></a>  <newline46mondego>"
"4578splitHere46","12814528splitHere46","static"
"4579splitHere46","12814528splitHere46","static"
"4580splitHere46","12814528splitHere46","abc"
"4581splitHere46","12814528splitHere46","String"
"4582splitHere46","12814528splitHere46","abc"
"4583splitHere46","12814528splitHere46","public String getAbc() {<newline46mondego>    return abc;<newline46mondego>}<newline46mondego><newline46mondego>public void setAbc(String newAbc) {<newline46mondego>    /* Potentially do some validation of the new value<newline46mondego>     * For example make sure it's not null, or inside reasonable ranges<newline46mondego>     * (A price shouldn't be negative, etc.)<newline46mondego>     */<newline46mondego>    abc = newAbc;<newline46mondego>}<newline46mondego>"
"4584splitHere46","12814528splitHere46","toString()"
"4585splitHere46","12814528splitHere46","class MyClass {<newline46mondego>    private int myInt;<newline46mondego><newline46mondego>    public MyClass(int myInt) {<newline46mondego>        this.myInt = myInt;<newline46mondego>    }<newline46mondego><newline46mondego>    @Overrides<newline46mondego>    public String toString() {<newline46mondego>        return <doubleQuotes46>MyClass with value <doubleQuotes46> + myInt;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4586splitHere46","12814571splitHere46","c.add(Calendar.MONTH, -1);<newline46mondego>"
"4587splitHere46","12814571splitHere46","Calendar"
"4588splitHere46","12814571splitHere46","int month = c.get(Calendar.MONTH) + 1; // beware of month indexing from zero<newline46mondego>int year  = c.get(Calendar.YEAR);<newline46mondego>"
"4589splitHere46","12814578splitHere46","Files.List request = service.files().list().setQ(<newline46mondego>       <doubleQuotes46>mimeType='application/vnd.google-apps.folder' and trashed=false<doubleQuotes46>);<newline46mondego>FileList files = request.execute();<newline46mondego>"
"4590splitHere46","12814578splitHere46","request.setPageToken(files.getNextPageToken());<newline46mondego>"
"4591splitHere46","12814585splitHere46","sock = new Socket(<doubleQuotes46>localhost<doubleQuotes46>, PORT); <newline46mondego>"
"4592splitHere46","12814585splitHere46","cmd"
"4593splitHere46","12814585splitHere46","ipconfig"
"4594splitHere46","12814630splitHere46","PipedInputStream pis = new PipedInputStream();<newline46mondego>PipedOutputStream pos = new PipedOutputStream(pis);<newline46mondego><newline46mondego>// Use pis and pos in place of sock.getInputStream() and sock.getOutputStream().<newline46mondego>"
"4595splitHere46","12814637splitHere46",".cpp"
"4596splitHere46","12814637splitHere46","Android.mk"
"4597splitHere46","12814637splitHere46","JNIEXPORT jlong JNICALL Java_com_lan_factorial_FacLib_fac(JNIEnv *env, jclass, jlong)<newline46mondego>                                                                                    ^<newline46mondego>"
"4598splitHere46","12814637splitHere46","for(i = 1; i <= n; i++)<newline46mondego>"
"4599splitHere46","12814637splitHere46","jclass"
"4600splitHere46","12814637splitHere46","com_lan_factorial_FacLib.h"
"4601splitHere46","12814637splitHere46","#include"
"4602splitHere46","12814706splitHere46","public class ColoredTitle<newline46mondego>    {<newline46mondego><newline46mondego>        private String color;<newline46mondego>        private Title title;<newline46mondego><newline46mondego>        public ColoredTitle(String color, Title title)<newline46mondego>        {<newline46mondego>            this.color = color;<newline46mondego>            this.title = title;<newline46mondego>        }<newline46mondego><newline46mondego>        public String getColor()<newline46mondego>        {<newline46mondego>            return color;<newline46mondego>        }<newline46mondego><newline46mondego>        public void setColor(String color)<newline46mondego>        {<newline46mondego>            this.color = color;<newline46mondego>        }<newline46mondego><newline46mondego>        public String getHeading()<newline46mondego>        {<newline46mondego>            return title.heading;<newline46mondego>        }<newline46mondego><newline46mondego>        enum Title<newline46mondego>        {<newline46mondego>            FRONT_PAGE(<doubleQuotes46>Front Page<doubleQuotes46>),<newline46mondego>            FOOTER_TITLE(<doubleQuotes46>Footer Title<doubleQuotes46>);<newline46mondego><newline46mondego>            private String heading;<newline46mondego><newline46mondego>            Title(String title)<newline46mondego>            {<newline46mondego>                this.heading = title;<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"4603splitHere46","12814879splitHere46","public class Test {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        String haystack = <doubleQuotes46><p><a href='bla'>(UPDATE)</a></p><p><a href='bla'><strong>(UPDATE)</strong></a></p><p><a href='bla'><strong>(Non uppercase 'update' to show this match is exact)</strong></a></p><p><a href='bla'><strong>This does not contain the word you're looking for</strong></a></p><doubleQuotes46>;<newline46mondego>        String regex = <doubleQuotes46><p>.*?(UPDATE).*?</p><doubleQuotes46>;<newline46mondego><newline46mondego>        String result = haystack.replaceAll(regex, <doubleQuotes46><doubleQuotes46>);<newline46mondego>        System.out.println(<doubleQuotes46>Result: <doubleQuotes46> + result);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4604splitHere46","12814883splitHere46","scala test.TestApp"
"4605splitHere46","12814883splitHere46","scala"
"4606splitHere46","12814883splitHere46","packageX.packageY.ClassName"
"4607splitHere46","12814883splitHere46",".class"
"4608splitHere46","12814883splitHere46","packageX/packageY/ClassName.class"
"4609splitHere46","12814883splitHere46","scala test.TestApp"
"4610splitHere46","12814883splitHere46","test/TestApp.class"
"4611splitHere46","12814885splitHere46","List<String> discardedList = new ArrayList<String>();<newline46mondego><newline46mondego>public void readStuff() {}<newline46mondego><newline46mondego>public static List<String> someReaderMethod()<newline46mondego>{<newline46mondego>  for(int i = 0; i < workingList.size(); i++)<newline46mondego>  {<newline46mondego>    if(workingList.get(i).contains(someExp))<newline46mondego>    {<newline46mondego>      discardedList.add(workingList.get(i));<newline46mondego>      workingList.remove(i);<newline46mondego>    }<newline46mondego>  }<newline46mondego>  return discardedList;<newline46mondego>}<newline46mondego>"
"4612splitHere46","12814942splitHere46","public class TestClassUnderTest { <newline46mondego><newline46mondego>     public class ClassUnderTest extends BaseClassForClassUnderTest <newline46mondego>     { <newline46mondego>        public ClassUnderTest(ISomeInterface si) <newline46mondego>        { <newline46mondego>           super(si); <newline46mondego>         } <newline46mondego>         //... <newline46mondego>      } <newline46mondego>@Test <newline46mondego>public void testSuperConstructorCall() <newline46mondego>{ <newline46mondego>    final ISomeInterface si = new ISomeInterface() <newline46mondego>    { <newline46mondego>    }; <newline46mondego><newline46mondego>    Mockit.setUpMock(BaseClassForClassUnderTest.class, new Object() { <newline46mondego>        @Mock <newline46mondego>        public void $init(ISomeInterface si_param) <newline46mondego>        { <newline46mondego>            assertNotNull(si_param); <newline46mondego>            assertTrue(si_param == si); <newline46mondego>        } <newline46mondego>    }); <newline46mondego><newline46mondego>    ClassUnderTest cut = new ClassUnderTest(si); <newline46mondego>} <newline46mondego>"
"4613splitHere46","12814979splitHere46","black"
"4614splitHere46","12814979splitHere46","setColor(<doubleQuotes46>blue<doubleQuotes46>)"
"4615splitHere46","12814979splitHere46","black"
"4616splitHere46","12814979splitHere46","@Transactional"
"4617splitHere46","12815098splitHere46","String#replace"
"4618splitHere46","12815098splitHere46","String finalString = oldString.replace(<doubleQuotes46>|<doubleQuotes46>, <doubleQuotes46>\n<doubleQuotes46>);<newline46mondego>"
"4619splitHere46","12815098splitHere46","String#split"
"4620splitHere46","12815098splitHere46","String[] splitted = oldString.split(Pattern.quote(<doubleQuotes46>|<doubleQuotes46>));<newline46mondego>"
"4621splitHere46","12815143splitHere46","for (Map.Entry<String, List<Integer>> entry : map.entrySet()) {<newline46mondego>    if (entry.getValue().contains(targetValue)) {<newline46mondego>        System.out.println(entry.getKey());<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4622splitHere46","12815143splitHere46","Multimap"
"4623splitHere46","12815217splitHere46","value"
"4624splitHere46","12815217splitHere46","key"
"4625splitHere46","12815217splitHere46","value"
"4626splitHere46","12815217splitHere46","<s:hidden id=<doubleQuotes46>Name<doubleQuotes46> name=<doubleQuotes46>Name<doubleQuotes46> value='${nameVar}'/>"
"4627splitHere46","12815217splitHere46","<s:hidden id=<doubleQuotes46>Name<doubleQuotes46> name=<doubleQuotes46>Name<doubleQuotes46> value=<doubleQuotes46>%{nameVar}<doubleQuotes46>/>"
"4628splitHere46","12815217splitHere46","forEach"
"4629splitHere46","12815217splitHere46","<input type=<doubleQuotes46>hidden<doubleQuotes46> name=<doubleQuotes46>Name<doubleQuotes46> value=<doubleQuotes46>${nameVar}<doubleQuotes46>>"
"4630splitHere46","12815217splitHere46","<s:iterator>"
"4631splitHere46","12815217splitHere46","<s:hidden id=<doubleQuotes46>Name<doubleQuotes46> name=<doubleQuotes46>Name<doubleQuotes46> value=<doubleQuotes46>%{nameVar}<doubleQuotes46>/>"
"4632splitHere46","12815337splitHere46","public class Test {<newline46mondego>    public static void main(String... args) {<newline46mondego>        Drink drink;<newline46mondego>        if (args.length == 0) {<newline46mondego>            drink = new Beer();<newline46mondego>        } else {<newline46mondego>            drink = new Rum();<newline46mondego>        }<newline46mondego>        System.out.println(drink.getBrand());<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>interface Drink {<newline46mondego>    public String getBrand();<newline46mondego>}<newline46mondego><newline46mondego>class Beer implements Drink {<newline46mondego>    @Override<newline46mondego>    public String getBrand() {<newline46mondego>        return <doubleQuotes46>BeerBrand<doubleQuotes46>; <newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class Rum implements Drink {<newline46mondego>    @Override<newline46mondego>    public String getBrand() {<newline46mondego>        return <doubleQuotes46>RumBrand<doubleQuotes46>;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4633splitHere46","12815350splitHere46","public class Midlet extends DiceMidlet {<newline46mondego>    public Midlet() {<newline46mondego>        super();<newline46mondego>    }<newline46mondego>    public void startApp() {<newline46mondego>        for(int i=0;i<1000;i++){<newline46mondego>            if(i==999){<newline46mondego>                super.startApp();<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego>    public void pauseApp() {<newline46mondego>        super.pauseApp();<newline46mondego>    }<newline46mondego>    public void destroyApp(boolean unconditional) {<newline46mondego>        super.destroyApp(unconditional);<newline46mondego>    }<newline46mondego> }   <newline46mondego>"
"4634splitHere46","12815457splitHere46","return (T) instances.get(key);<newline46mondego>"
"4635splitHere46","12815457splitHere46","return instances.getInstance(key);<newline46mondego>"
"4636splitHere46","12815486splitHere46","sudo cat /proc/$PID/maps | wc -l"
"4637splitHere46","12815486splitHere46","cat /proc/sys/vm/max_map_count"
"4638splitHere46","12815486splitHere46","-mx8g -XX:MaxPermSize=1g -Doracle.net.tns_admin=/var/ora_net <newline46mondego>-XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -Dcom.sun.management.jmxremote.port=9026<newline46mondego>"
"4639splitHere46","12815486splitHere46","-XX:+UseG1GC"
"4640splitHere46","12815526splitHere46","public static void main(String args[]) {<newline46mondego>        String partOfCer = <doubleQuotes46>MIIHSjCCBjKgAwIBAgIQQuw1emUfNRlPD/euDuzBjDANBgkqhkiG9w0BAQUFADCB<doubleQuotes46> + <doubleQuotes46>5TELMAkGA1UEBhMCRVMxIDAeBgkqhkiG9w0BCQEWEWFjQGFjYWJvZ2FjaWEub3Jn<doubleQuotes46>;<newline46mondego>        byte[] dec1_byte = Base64.decodeBase64(partOfCer.getBytes());<newline46mondego>//        String dec1 = new String(dec1_byte);<newline46mondego>        byte[] newBytes = Base64.encodeBase64(dec1_byte);<newline46mondego>        String newStr = new String(newBytes);<newline46mondego>        System.out.println(partOfCer);<newline46mondego>        System.out.println(newStr);<newline46mondego>        System.out.println(partOfCer.equals(newStr));<newline46mondego>    }<newline46mondego>"
"4641splitHere46","12815576splitHere46","Java SE 5"
"4642splitHere46","12815576splitHere46","generic"
"4643splitHere46","12815602splitHere46","(.*)\R<newline46mondego>"
"4644splitHere46","12815602splitHere46","\t\t+ <doubleQuotes46>\1\\n<doubleQuotes46>\R<newline46mondego>"
"4645splitHere46","12815602splitHere46","\R"
"4646splitHere46","12815658splitHere46","ServletContextListener.contextDestroyed()"
"4647splitHere46","12815658splitHere46","shutdownNow()"
"4648splitHere46","12815658splitHere46","awaitTermination()"
"4649splitHere46","12815693splitHere46","NZEC"
"4650splitHere46","12815765splitHere46","O(N)"
"4651splitHere46","12815765splitHere46","Map<K,V> map = <newline46mondego>List<Map.Entry<K,V>> list = new ArrayList<Map.Entry<K,V>>(map.entrySet());<newline46mondego><newline46mondego>// each time you want a different order.<newline46mondego>Collections.shuffle(list);<newline46mondego>for(Map.Entry<K, V> entry: list) { /* ... */ }<newline46mondego>"
"4652splitHere46","12815963splitHere46","public class DisplayReminderNotification extends Activity {<newline46mondego><newline46mondego>    private Context context = this;<newline46mondego><newline46mondego>    @SuppressWarnings(<doubleQuotes46>deprecation<doubleQuotes46>)<newline46mondego>    @Override<newline46mondego>    public void onCreate(Bundle savedInstanceState) {<newline46mondego>        super.onCreate(savedInstanceState);<newline46mondego><newline46mondego>        // Get the notification ID.<newline46mondego>        int notifID = 1234;<newline46mondego><newline46mondego>        String reminderName = <doubleQuotes46>reminder<doubleQuotes46>;<newline46mondego><newline46mondego>        // PendingIntent stores the Activity that should be launched when the<newline46mondego>        // user taps the notification.<newline46mondego>        Intent i = new Intent(this, MainActivity.class);<newline46mondego>        i.putExtra(<doubleQuotes46>NotifID<doubleQuotes46>, 123);<newline46mondego>        i.putExtra(<doubleQuotes46>notification_tap<doubleQuotes46>, true);<newline46mondego><newline46mondego>        PendingIntent displayIntent = PendingIntent.getActivity(this, notifID,<newline46mondego>                i, 0);<newline46mondego><newline46mondego>        NotificationManager nm = (NotificationManager) getSystemService(NOTIFICATION_SERVICE);<newline46mondego>        Notification notif = new Notification(R.drawable.ic_launcher,<newline46mondego>                reminderName, System.currentTimeMillis());<newline46mondego><newline46mondego>        CharSequence from = <doubleQuotes46>Here's your reminder:<doubleQuotes46>;<newline46mondego><newline46mondego>        CharSequence message = reminderName;<newline46mondego>        notif.setLatestEventInfo(this, from, message, displayIntent);<newline46mondego><newline46mondego>        // Fire up the notification.<newline46mondego>        nm.notify(notifID, notif);<newline46mondego><newline46mondego>        // Destroy the activity/notification.<newline46mondego>        finish();<newline46mondego><newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4653splitHere46","12816318splitHere46","tmp[currArrPos].setAlignment(Pos.CENTER);<newline46mondego>"
"4654splitHere46","12816408splitHere46","class Test<newline46mondego>  class javax.swing.JRootPane<newline46mondego>    class javax.swing.JPanel<newline46mondego>    class javax.swing.JLayeredPane<newline46mondego>      class javax.swing.JPanel<newline46mondego>      class javax.swing.plaf.metal.MetalTitlePane<newline46mondego>        class javax.swing.plaf.metal.MetalTitlePane$SystemMenuBar<newline46mondego>          class javax.swing.JMenu<newline46mondego>        class javax.swing.JButton<newline46mondego>        class javax.swing.JButton<newline46mondego>        class javax.swing.JButton<newline46mondego>"
"4655splitHere46","12816595splitHere46","static void displayBFS(NaryTreeNode root) {<newline46mondego>    int curlevel = 1;<newline46mondego>    int nextlevel = 0;<newline46mondego><newline46mondego>    LinkedList<NaryTreeNode> queue = new LinkedList<NaryTreeNode>();<newline46mondego>    queue.add(root);<newline46mondego><newline46mondego>    while(!queue.isEmpty()) { <newline46mondego>        NaryTreeNode node = queue.remove(0);<newline46mondego><newline46mondego>        if (curlevel == 0) {<newline46mondego>            System.out.println();<newline46mondego>            curlevel = nextlevel;<newline46mondego>            nextlevel = 0;<newline46mondego>        }<newline46mondego><newline46mondego>        for(NaryTreeNode n : node.nary_list) {<newline46mondego>            queue.addLast(n);<newline46mondego>            nextlevel++;<newline46mondego>        }<newline46mondego><newline46mondego>        curlevel--;<newline46mondego>        System.out.print(node.data + <doubleQuotes46> <doubleQuotes46>);<newline46mondego>    } <newline46mondego>}<newline46mondego>"
"4656splitHere46","12816690splitHere46","for"
"4657splitHere46","12816690splitHere46","Vector<YourObject> vector = ...;<newline46mondego><newline46mondego>for(YourObject obj : vector)<newline46mondego>{<newline46mondego>    System.out.println(obj.YOUR_METHOD_OR_ATTRIBUTE);<newline46mondego>}<newline46mondego>"
"4658splitHere46","12816690splitHere46","elementAt(position)"
"4659splitHere46","12816690splitHere46","System.out.println(vector.elementAt(position).YOUR_METHOD_OR_ATTRIBUTE);<newline46mondego>"
"4660splitHere46","12816690splitHere46","toString()"
"4661splitHere46","12816690splitHere46","System.out.println(vector.elementAt(position));<newline46mondego>"
"4662splitHere46","12816775splitHere46","space"
"4663splitHere46","12816775splitHere46","%20"
"4664splitHere46","12816785splitHere46","notify"
"4665splitHere46","12816785splitHere46","this"
"4666splitHere46","12816785splitHere46","q"
"4667splitHere46","12816785splitHere46","wait"
"4668splitHere46","12816815splitHere46","List"
"4669splitHere46","12816815splitHere46","List<Thread> threads = new ArrayList<Thread>();<newline46mondego>while (rs.next()) {<newline46mondego>    Thread tread  = new Savescreenshots(rs.getString(1),rs.getString(3),rs.getString(2));<newline46mondego>    tread.start();<newline46mondego>    threads.add(thread);<newline46mondego>}<newline46mondego>"
"4670splitHere46","12816815splitHere46","Thread"
"4671splitHere46","12816815splitHere46","threads"
"4672splitHere46","12816815splitHere46","for (Thread thread : threads) {<newline46mondego>    thread.join();<newline46mondego>}<newline46mondego>"
"4673splitHere46","12816829splitHere46","import java.io.*;<newline46mondego>import javax.servlet.*;<newline46mondego>import javax.servlet.http.*;<newline46mondego><newline46mondego>public class HelloWorld extends HttpServlet {<newline46mondego><newline46mondego>  public void doGet(HttpServletRequest req, HttpServletResponse res)<newline46mondego>                           throws ServletException, IOException {<newline46mondego><newline46mondego>res.setContentType(<doubleQuotes46>text/html<doubleQuotes46>);<newline46mondego>PrintWriter out = res.getWriter();<newline46mondego><newline46mondego>out.println(<doubleQuotes46><HTML><doubleQuotes46>);<newline46mondego>out.println(<doubleQuotes46><HEAD><TITLE>Hello World</TITLE></HEAD><doubleQuotes46>);<newline46mondego>out.println(<doubleQuotes46><BODY><doubleQuotes46>);<newline46mondego>out.println(<doubleQuotes46>Success<doubleQuotes46>);<newline46mondego>out.println(<doubleQuotes46></BODY></HTML><doubleQuotes46>);<newline46mondego>out.flush();<newline46mondego>"
"4674splitHere46","12816829splitHere46","res.setContentType(<doubleQuotes46>text/plain<doubleQuotes46>);<newline46mondego>  PrintWriter out = res.getWriter();<newline46mondego><newline46mondego><newline46mondego>out.println(<doubleQuotes46>Success<doubleQuotes46>);<newline46mondego> out.flush();<newline46mondego>"
"4675splitHere46","12817030splitHere46","//movement<newline46mondego>public void setBesturing(int besturing) {<newline46mondego><newline46mondego>    besturing = waarde; <-- THIS LINE<newline46mondego><newline46mondego>    if(waarde == 0) {<newline46mondego>        setVerPlaats( getVerPlaats() + richtingEnSnelheid);<newline46mondego>    }<newline46mondego>    else if(waarde == 1){<newline46mondego>        setHorPlaats( getHorPlaats() + richtingEnSnelheid);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4676splitHere46","12817030splitHere46","besturing"
"4677splitHere46","12817030splitHere46","waarde"
"4678splitHere46","12817030splitHere46","//movement<newline46mondego>public void setBesturing(int besturing) {<newline46mondego><newline46mondego>    waarde = besturing; <-- THIS LINE<newline46mondego><newline46mondego>    if(waarde == 0) {<newline46mondego>        setVerPlaats( getVerPlaats() + richtingEnSnelheid);<newline46mondego>    }<newline46mondego>    else if(waarde == 1){<newline46mondego>        setHorPlaats( getHorPlaats() + richtingEnSnelheid);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4679splitHere46","12817218splitHere46","javax.net.ssl.keyAlias"
"4680splitHere46","12817218splitHere46","javax.net.ssl.keyStoreAlias"
"4681splitHere46","12817313splitHere46","{your_path}\IBM\WebSphere\AppServer"
"4682splitHere46","12817313splitHere46","eclipse.ini"
"4683splitHere46","12817313splitHere46","--launcher.defaultAction<newline46mondego>openFile<newline46mondego>-vmargs<newline46mondego>-Dosgi.requiredJavaVersion=1.5<newline46mondego>-Dhelp.lucene.tokenizer=standard<newline46mondego>-Xms40m<newline46mondego>-Xmx512m<newline46mondego>"
"4684splitHere46","12817313splitHere46","--launcher.defaultAction<newline46mondego>openFile<newline46mondego>-vm<newline46mondego>{your_path}\IBM\WebSphere\AppServer\java\bin\javaw.exe<newline46mondego>-vmargs<newline46mondego>-Dosgi.requiredJavaVersion=1.5<newline46mondego>-Xms40m<newline46mondego>-Xmx512m<newline46mondego>"
"4685splitHere46","12817367splitHere46","getFocusedComponent()"
"4686splitHere46","12817370splitHere46","mapred.job.tracker"
"4687splitHere46","12817370splitHere46","<property><newline46mondego>    <name>mapred.job.tracker</name><newline46mondego>    <value>localhost:9001</value><newline46mondego></property><newline46mondego>"
"4688splitHere46","12817370splitHere46","JobTracker.getAddress(Configuration)"
"4689splitHere46","12817370splitHere46","public static InetSocketAddress getAddress(Configuration conf) {<newline46mondego>  String jobTrackerStr =<newline46mondego>    conf.get(<doubleQuotes46>mapred.job.tracker<doubleQuotes46>, <doubleQuotes46>localhost:8012<doubleQuotes46>);<newline46mondego>  return NetUtils.createSocketAddr(jobTrackerStr);<newline46mondego>}<newline46mondego>"
"4690splitHere46","12817662splitHere46","class CustomAdapter extends BaseAdapter<newline46mondego>    {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public int getCount() {<newline46mondego>        // TODO Auto-generated method stub<newline46mondego>        return mItemName.size;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Object getItem(int arg0) {<newline46mondego>        // TODO Auto-generated method stub<newline46mondego>        return null;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public long getItemId(int arg0) {<newline46mondego>        // TODO Auto-generated method stub<newline46mondego>        return 0;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public View getView(int arg0, View arg1, ViewGroup arg2) {<newline46mondego>        // TODO Auto-generated method stub<newline46mondego><newline46mondego>        LayoutInflater inf=getLayoutInflater();<newline46mondego>        View v=inf.inflate(R.layout.iconrow, arg2,true);<newline46mondego><newline46mondego>        ImageView iv=(ImageView)v.findViewById(R.id.icon);<newline46mondego>        TextView tv=(TextView)v.findViewById(R.id.text);<newline46mondego><newline46mondego>        return v;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"4691splitHere46","12817662splitHere46","listview.setAdapter(new CustomAdapter());<newline46mondego>"
"4692splitHere46","12817719splitHere46","setIgnoringElementContentWhitespace"
"4693splitHere46","12817719splitHere46","setValidating(true)"
"4694splitHere46","12817723splitHere46","getButton()"
"4695splitHere46","12817723splitHere46","root.setOnMouseDragged(new EventHandler<MouseEvent>() {<newline46mondego>        @Override<newline46mondego>        public void handle(MouseEvent t) {<newline46mondego>            if (t.isPrimaryButtonDown()) {<newline46mondego>                System.out.println(<doubleQuotes46>rockets armed<doubleQuotes46>);<newline46mondego>            }<newline46mondego>            if (t.isSecondaryButtonDown()) {<newline46mondego>                System.out.println(<doubleQuotes46>autoaim engaged<doubleQuotes46>);<newline46mondego>            }<newline46mondego>        }<newline46mondego>    });<newline46mondego>"
"4696splitHere46","12817728splitHere46","Map obj=new LinkedHashMap();<newline46mondego>   obj.put(<doubleQuotes46>name<doubleQuotes46>,<doubleQuotes46>foo<doubleQuotes46>);<newline46mondego>   obj.put(<doubleQuotes46>num<doubleQuotes46>,new Integer(100));<newline46mondego>   obj.put(<doubleQuotes46>balance<doubleQuotes46>,new Double(1000.21));<newline46mondego>   obj.put(<doubleQuotes46>is_vip<doubleQuotes46>,new Boolean(true));<newline46mondego>   obj.put(<doubleQuotes46>nickname<doubleQuotes46>,null);<newline46mondego>   StringWriter out = new StringWriter();<newline46mondego>   JSONValue.writeJSONString(obj, out);<newline46mondego>   String jsonText = out.toString();<newline46mondego>   System.out.print(jsonText);<newline46mondego>"
"4697splitHere46","12817746splitHere46","array[boolean]"
"4698splitHere46","12817746splitHere46","BitSet"
"4699splitHere46","12817746splitHere46","true"
"4700splitHere46","12817746splitHere46","start"
"4701splitHere46","12817746splitHere46","false"
"4702splitHere46","12817746splitHere46","end"
"4703splitHere46","12817746splitHere46","true"
"4704splitHere46","12817746splitHere46","start"
"4705splitHere46","12817746splitHere46","end  - n"
"4706splitHere46","12817746splitHere46","false"
"4707splitHere46","12817746splitHere46","false"
"4708splitHere46","12817856splitHere46","session"
"4709splitHere46","12817856splitHere46","session2"
"4710splitHere46","12817856splitHere46","session2"
"4711splitHere46","12817856splitHere46","isConnected()"
"4712splitHere46","12817856splitHere46","getCurrentSession()"
"4713splitHere46","12817856splitHere46","getCurrentSession()"
"4714splitHere46","12817856splitHere46","Session session = factory.getCurrentSession();//Use getCurrentSession rather than openSession<newline46mondego>Transaction trans = session.beginTransaction();<newline46mondego>trans.begin();<newline46mondego><newline46mondego>Session session2 = factory.getCurrentSession();//Same session will be returned.<newline46mondego><newline46mondego>System.out.println(session2.isConnected());<newline46mondego>trans.commit();<newline46mondego>"
"4715splitHere46","12817959splitHere46","getComparator"
"4716splitHere46","12817959splitHere46","getPriority"
"4717splitHere46","12817959splitHere46","getComparator"
"4718splitHere46","12817959splitHere46","Comparator"
"4719splitHere46","12817959splitHere46","Comparator"
"4720splitHere46","12817959splitHere46","compare"
"4721splitHere46","12817959splitHere46","public interface Orange {<newline46mondego>    // Looks up id and returns the corresponding Priority.<newline46mondego>    public int getPriority(Long id);<newline46mondego>}<newline46mondego><newline46mondego>public class Foo {<newline46mondego>    public static Comparator<Long> getComparator(final Orange orange) {<newline46mondego>        return new Comparator<Long>() {<newline46mondego>            public int compare(Long id1, Long id2) {<newline46mondego>                // Get priority through orange, or<newline46mondego>                // Make orange juice from our orange.<newline46mondego>                // You may want to compare them in a different way.<newline46mondego>                return orange.getPriority(id1) - orange.getPriority(id2);<newline46mondego>        };<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4722splitHere46","12817959splitHere46","// This is defined somewhere. It could be a local variable or an instance<newline46mondego>// field or whatever. There's no exception (except is has to be in scope).<newline46mondego>Collection c = ...;<newline46mondego>...<newline46mondego>Orange orange = new Orange() {<newline46mondego>    public int getPriority(Long id) {<newline46mondego>        // Insert code that searches c.mySet for an instance of data<newline46mondego>        // with the desired ID and return its Priority<newline46mondego>    }<newline46mondego>};<newline46mondego>Collections.sort(c.myList, Foo.getComparator(orange));<newline46mondego>"
"4723splitHere46","12818000splitHere46","while (o != times) {<newline46mondego>                int j = client.reciveCommando();<newline46mondego>                System.out.println(<doubleQuotes46>j<doubleQuotes46>+ j);<newline46mondego>                    String name = client.reciveString();<newline46mondego>                    System.out.println(<doubleQuotes46>Name <doubleQuotes46> +name);<newline46mondego>                    createUser(j, name);    <newline46mondego>                o++;<newline46mondego>            }<newline46mondego>"
"4724splitHere46","12818000splitHere46","public String reciveString(){<newline46mondego><newline46mondego>    String x = input.next();<newline46mondego>    return x;<newline46mondego>}<newline46mondego>"
"4725splitHere46","12818000splitHere46","private void createUser(int j, String reciveChat) {<newline46mondego>    if (j == 1) {<newline46mondego>        chatPerson1.setVisible(true);<newline46mondego>        lbl_Chatperson1_userName.setVisible(true);<newline46mondego>        lbl_Chatperson1_userName.setText(reciveChat);<newline46mondego><newline46mondego>    }else if (j == 2) {<newline46mondego>        lbl_chatPerson2.setVisible(true);<newline46mondego>        lbl_userName2.setVisible(true);<newline46mondego>        lbl_userName2.setText(reciveChat);<newline46mondego>    }else if (j == 3){<newline46mondego>        chatPerson3.setVisible(true);<newline46mondego>        lbl_userName3.setVisible(true);<newline46mondego>        lbl_userName3.setText(reciveChat);}<newline46mondego>"
"4726splitHere46","12818105splitHere46","encipher = Cipher.getInstance(<doubleQuotes46>AES/CBC/PKCS7Padding<doubleQuotes46>);"
"4727splitHere46","12818155splitHere46","the_geom"
"4728splitHere46","12818376splitHere46","<classpath><newline46mondego>        <!--<pathelement path=<doubleQuotes46>build/cobertura/classes<doubleQuotes46> />--><newline46mondego>        <path refid=<doubleQuotes46>path.UNITTEST<doubleQuotes46> /><newline46mondego><newline46mondego>    </classpath><newline46mondego>"
"4729splitHere46","12818376splitHere46","<path id=<doubleQuotes46>path.LIB<doubleQuotes46>><newline46mondego>    <fileset dir=<doubleQuotes46>lib<doubleQuotes46> includes=<doubleQuotes46>**/**.jar<doubleQuotes46> /><newline46mondego></path><newline46mondego><newline46mondego><path id=<doubleQuotes46>path.UNITTEST<doubleQuotes46>><newline46mondego>    <path refid=<doubleQuotes46>path.LIB<doubleQuotes46> /><newline46mondego>    <pathelement path=<doubleQuotes46>build/cobertura/classes<doubleQuotes46> /><newline46mondego>    <pathelement path=<doubleQuotes46>build/classes<doubleQuotes46> /><newline46mondego>    <pathelement path=<doubleQuotes46>build/test-classes<doubleQuotes46> /><newline46mondego></path><newline46mondego>"
"4730splitHere46","12818376splitHere46","path.additionaltasks"
"4731splitHere46","12818376splitHere46","path.additionaltasks"
"4732splitHere46","12818376splitHere46","<classpath><newline46mondego>        <!--<pathelement path=<doubleQuotes46>build/cobertura/classes<doubleQuotes46> />--><newline46mondego>        <path refid=<doubleQuotes46>path.UNITTEST<doubleQuotes46> /><newline46mondego>        <path refid=<doubleQuotes46>path.additionaltasks<doubleQuotes46> /><newline46mondego>    </classpath><newline46mondego>"
"4733splitHere46","12818379splitHere46","cb.saveState();<newline46mondego><newline46mondego>PdfTemplate pdfTemplate = cb.createTemplate(table.getWidth(), table.getHeight());<newline46mondego>Graphics2D g2 = pdfTemplate.createGraphics(table.getWidth(), table.getHeight());<newline46mondego>/*g2.setColor(Color.BLACK);<newline46mondego>g2.drawRect(x-2, y-2, table.getWidth()+2, table.getHeight()+2);*/<newline46mondego>table.print(g2);<newline46mondego>System.out.println(<doubleQuotes46>x=<doubleQuotes46>+x + <doubleQuotes46>,<doubleQuotes46> + <doubleQuotes46>y=<doubleQuotes46> + y);<newline46mondego>cb.addTemplate(pdfTemplate, x, y);<newline46mondego>g2.dispose();<newline46mondego>cb.restoreState();<newline46mondego>"
"4734splitHere46","12818426splitHere46","BlockingQueue"
"4735splitHere46","12818488splitHere46","public class EditPage extends WebPage {<newline46mondego>    public EditPage(final PageParameters parameters) {<newline46mondego>        Form<?> form = new Form<Void>(<doubleQuotes46>form<doubleQuotes46>) {<newline46mondego>                    @Override<newline46mondego>                    protected void onSubmit() {<newline46mondego>                        // if button <doubleQuotes46>save<doubleQuotes46> clicked<newline46mondego>                        PageParameters params = new PageParameters();<newline46mondego>                        params.add(<doubleQuotes46>flag<doubleQuotes46>, <doubleQuotes46>true<doubleQuotes46>);<newline46mondego>                        setResponsePage(StartPage.class, params);<newline46mondego>                    }<newline46mondego>        };<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4736splitHere46","12818488splitHere46","public class StartPage extends WebPage {<newline46mondego>    public StartPage(final PageParameters parameters) {     <newline46mondego><newline46mondego>            Form<?> form = new Form<Void>(<doubleQuotes46>form<doubleQuotes46>) {<newline46mondego>                @Override<newline46mondego>                protected void onSubmit() {<newline46mondego>                    // Delete from DB<newline46mondego>                    // Load from web to DB<newline46mondego>                    // Load from DB     <newline46mondego>                }<newline46mondego>            };<newline46mondego><newline46mondego>            if (parameters.getString(<doubleQuotes46>flag<doubleQuotes46>)!=null)<newline46mondego>                // Load from DB<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4737splitHere46","12818519splitHere46","After Setting display to <doubleQuotes46>1.0<doubleQuotes46> with following code manually problem has been resolved and  i am able to access Open Office from web application to generate report<newline46mondego><newline46mondego>oooExeFolder = <doubleQuotes46>/usr/lib/openoffice.org3/program/<doubleQuotes46>;<newline46mondego>List<String> oooOptions = OOoServer.getDefaultOOoOptions();<newline46mondego>oooOptions.add(<doubleQuotes46>-display<doubleQuotes46>);<newline46mondego>oooOptions.add(<doubleQuotes46>:1.0<doubleQuotes46>);<newline46mondego><newline46mondego>OOoServer server = new OOoServer(oooExeFolder, oooOptions);<newline46mondego>XComponentContext xContext = BootstrapSocketConnector.bootstrap(oooExeFolder);<newline46mondego>"
"4738splitHere46","12818556splitHere46","Object"
"4739splitHere46","12818556splitHere46","Cat"
"4740splitHere46","12818556splitHere46","Cat"
"4741splitHere46","12818556splitHere46","Animal"
"4742splitHere46","12818556splitHere46","Animal"
"4743splitHere46","12818571splitHere46","if(!appversion.trim().equals(latestversion.trim()))<newline46mondego>{            <newline46mondego>    System.out.println(<doubleQuotes46>not the same<doubleQuotes46>); <newline46mondego>}<newline46mondego>"
"4744splitHere46","12818589splitHere46","toCharArray()"
"4745splitHere46","12818701splitHere46","@Configuration<newline46mondego>@ComponentScan(<doubleQuotes46>com.acme.app.services<doubleQuotes46>)<newline46mondego> public class AppConfig {<newline46mondego>     @Bean<newline46mondego>     public MyBean myBean() {<newline46mondego>         // instantiate, configure and return bean ...<newline46mondego>     }<newline46mondego> }<newline46mondego>"
"4746splitHere46","12818749splitHere46","mysettings.xml"
"4747splitHere46","12818749splitHere46","${my.iduser}"
"4748splitHere46","12818749splitHere46","mysettings.xml"
"4749splitHere46","12818752splitHere46","query = monthQb<newline46mondego>        .range()<newline46mondego>            .onField( <doubleQuotes46>startTS<doubleQuotes46> ).ignoreFieldBridge()<newline46mondego>            .from( DateTools.dateToString( from, DateTools.Resolution.MILLISECOND ) )<newline46mondego>            .to( DateTools.dateToString( to, DateTools.Resolution.MILLISECOND ) ).excludeLimit()<newline46mondego>            .createQuery();<newline46mondego>"
"4750splitHere46","12818875splitHere46","DataSource"
"4751splitHere46","12818875splitHere46","javax.sql.DataSource"
"4752splitHere46","12818875splitHere46","DataSource"
"4753splitHere46","12818875splitHere46","DataSource"
"4754splitHere46","12818875splitHere46","DriverManagerDataSource"
"4755splitHere46","12818875splitHere46","close()"
"4756splitHere46","12818875splitHere46","Connection"
"4757splitHere46","12818875splitHere46","close()"
"4758splitHere46","12818961splitHere46","Iterable<T> combined = Iterables.concat(list1, list2);<newline46mondego>"
"4759splitHere46","12818961splitHere46","Iterable"
"4760splitHere46","12818961splitHere46","Iterable"
"4761splitHere46","12818961splitHere46","two"
"4762splitHere46","12818961splitHere46","two lists"
"4763splitHere46","12818961splitHere46","Iterating"
"4764splitHere46","12818961splitHere46","copy"
"4765splitHere46","12818961splitHere46","var-args"
"4766splitHere46","12818961splitHere46","Iterable<T> combined = Iterables.concat(list1, list2, list3, list4, ...);<newline46mondego>"
"4767splitHere46","12819057splitHere46","public void emailBack (View backButton){<newline46mondego><newline46mondego>    onBackPressed();<newline46mondego>}<newline46mondego>"
"4768splitHere46","12819137splitHere46","step3()"
"4769splitHere46","12819137splitHere46","step3()"
"4770splitHere46","12819141splitHere46","<doubleQuotes46>INSERT INTO jobs(jobs) VALUES(?) RETURNING row_id<doubleQuotes46><newline46mondego>"
"4771splitHere46","12819141splitHere46","int id = getJdbcTemplate().queryForInt(sql)"
"4772splitHere46","12819274splitHere46","nodeSelectListener=<doubleQuotes46>#{beanRequest.clt}<doubleQuotes46>"
"4773splitHere46","12819274splitHere46","selection=<doubleQuotes46>#{beanRequest.selectedNode}<doubleQuotes46>"
"4774splitHere46","12819274splitHere46","selecttedNode"
"4775splitHere46","12819274splitHere46","beanRequest"
"4776splitHere46","12819274splitHere46","private TreeNode selectedNode;"
"4777splitHere46","12819331splitHere46","sun.font.FontManager"
"4778splitHere46","12819331splitHere46","System.out.println( FontManager.getFontPath( true ) );<newline46mondego>"
"4779splitHere46","12819567splitHere46","POST /RPC2 HTTP/1.0<newline46mondego>User-Agent: Frontier/5.1.2 (WinNT)<newline46mondego>Host: betty.userland.com<newline46mondego>Content-Type: text/xml<newline46mondego>Content-length: 181<newline46mondego><newline46mondego><newline46mondego><?xml version=<doubleQuotes46>1.0<doubleQuotes46>?><newline46mondego><methodCall><newline46mondego>   <methodName>examples.getStateName</methodName><newline46mondego>   <params><newline46mondego>      <param><newline46mondego>         <value><i4>41</i4></value><newline46mondego>         </param><newline46mondego>      </params><newline46mondego>   </methodCall><newline46mondego>"
"4780splitHere46","12819615splitHere46","map.put(tempMap,parts[0]);<newline46mondego>"
"4781splitHere46","12819615splitHere46","map.put(parts[0],tempMap);<newline46mondego>"
"4782splitHere46","12819615splitHere46","Map<Map<String,String>,String> map = new HashMap<>();<newline46mondego>"
"4783splitHere46","12819615splitHere46","Map<String,Map<String,String>> map = new HashMap<>();<newline46mondego>"
"4784splitHere46","12819615splitHere46","parts[0]"
"4785splitHere46","12819615splitHere46","public class CardHolder {<newline46mondego>  public final String cardNumber, issuingBank, cardSwitch, cardType;<newline46mondego><newline46mondego>  public CardHolder(String[] record) {<newline46mondego>    int i = 0;<newline46mondego>    cardNumber = record[i++];<newline46mondego>    issuingBank = record[i++];<newline46mondego>    cardSwitch = record[i++];<newline46mondego>    cardType = record[i++];<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"4786splitHere46","12819615splitHere46","while ((sCurrentLine = br.readLine()) != null) {<newline46mondego>  final CardHolder ch = new CardHolder(sCurrentLine.split(<doubleQuotes46>,<doubleQuotes46>));<newline46mondego>  map.put(ch.cardNumber, ch);<newline46mondego>}<newline46mondego>"
"4787splitHere46","12819615splitHere46","toString"
"4788splitHere46","12819655splitHere46","System.out.println(<doubleQuotes46>Ajob is running<doubleQuotes46>+ myJobInQueue.get(0));"
"4789splitHere46","12819655splitHere46","Job"
"4790splitHere46","12819655splitHere46","myJobInQueue.get(0)"
"4791splitHere46","12819655splitHere46","Job"
"4792splitHere46","12819655splitHere46","toString"
"4793splitHere46","12819655splitHere46","String"
"4794splitHere46","12819655splitHere46","myTimeLeft"
"4795splitHere46","12819655splitHere46","myJobDuration"
"4796splitHere46","12819655splitHere46","myTimeLeft"
"4797splitHere46","12819655splitHere46","Job"
"4798splitHere46","12819655splitHere46","myJobDuration"
"4799splitHere46","12819858splitHere46","-XX:NewSize="
"4800splitHere46","12819885splitHere46","a"
"4801splitHere46","12819885splitHere46","b"
"4802splitHere46","12819885splitHere46","b"
"4803splitHere46","12819885splitHere46","a"
"4804splitHere46","12819885splitHere46","public class Deadlock {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        final Object a = new Object();<newline46mondego>        final Object b = new Object();<newline46mondego>        new Thread() {<newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                synchronized (a) {<newline46mondego>                    /* wait for a second to make it likely the other thread can acquire b */<newline46mondego>                    try { Thread.sleep(1000); } catch (Exception e) {  }<newline46mondego>                    synchronized (b) {<newline46mondego>                        System.out.println(<doubleQuotes46>Acquired a, then b.<doubleQuotes46>);<newline46mondego>                    }<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }.start();<newline46mondego>        new Thread() {<newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                synchronized (b) {<newline46mondego>                    /* wait for a second to make it likely the other thread can acquire a */<newline46mondego>                    try { Thread.sleep(1000); } catch (Exception e) {  }<newline46mondego>                    synchronized (a) {<newline46mondego>                        System.out.println(<doubleQuotes46>Acquired b, then a.<doubleQuotes46>);<newline46mondego>                    }<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }.start();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4805splitHere46","12819885splitHere46","<doubleQuotes46>Acquired a, then b.<doubleQuotes46>"
"4806splitHere46","12819885splitHere46","<doubleQuotes46>Acquired b, then a.<doubleQuotes46>"
"4807splitHere46","12819885splitHere46","<doubleQuotes46>Acquired b, then a.<doubleQuotes46>"
"4808splitHere46","12819885splitHere46","<doubleQuotes46>Acquired a, then b.<doubleQuotes46>"
"4809splitHere46","12819903splitHere46","try {<newline46mondego>        JSONObject jsonObject =new JSONObject(response);<newline46mondego>        Iterator keys = jsonObject.keys();<newline46mondego>        while(keys.hasNext()) {<newline46mondego>            String key = (String) keys.next();<newline46mondego>            Log.d(<doubleQuotes46>MainActivity<doubleQuotes46>, <doubleQuotes46>key : <doubleQuotes46> + key + <doubleQuotes46>    name : <doubleQuotes46> + jsonObject.optString(key));<newline46mondego>        }<newline46mondego>    } catch (JSONException e) {<newline46mondego>        e.printStackTrace();<newline46mondego>    }<newline46mondego>"
"4810splitHere46","12820153splitHere46","public void addAll (Collection<? extends T> collection)"
"4811splitHere46","12820284splitHere46","T"
"4812splitHere46","12820284splitHere46","convert"
"4813splitHere46","12820284splitHere46","Foo??"
"4814splitHere46","12820284splitHere46","T"
"4815splitHere46","12820284splitHere46","S"
"4816splitHere46","12820350splitHere46","@ViewScoped"
"4817splitHere46","12820350splitHere46","selectOpt1"
"4818splitHere46","12820350splitHere46","void"
"4819splitHere46","12820350splitHere46","public void selectOpt1() <newline46mondego>{<newline46mondego>    this.list1Val = 1;<newline46mondego>    this.list2Val = 1;<newline46mondego>    //...<newline46mondego>}<newline46mondego>"
"4820splitHere46","12820350splitHere46","id"
"4821splitHere46","12820350splitHere46","<h:selectOneMenu id=<doubleQuotes46>list1<doubleQuotes46> value=<doubleQuotes46>#{MyClass.list1Val}<doubleQuotes46>><newline46mondego>    //...<newline46mondego></h:selectOneMenu><newline46mondego>"
"4822splitHere46","12820350splitHere46","f:ajax"
"4823splitHere46","12820350splitHere46","<h:commandButton value=<doubleQuotes46>Select all opt1<doubleQuotes46> action=<doubleQuotes46>#{MyClass.selectOpt1}<doubleQuotes46>><newline46mondego>    <f:ajax execute=<doubleQuotes46>@this<doubleQuotes46> render=<doubleQuotes46>list1<doubleQuotes46> /><newline46mondego></h:commandButton><newline46mondego>"
"4824splitHere46","12820350splitHere46","<f:ajax execute=<doubleQuotes46>@this<doubleQuotes46> render=<doubleQuotes46>list1 list2<doubleQuotes46> /><newline46mondego>"
"4825splitHere46","12820350splitHere46","f:ajax"
"4826splitHere46","12820350splitHere46","a4j:support"
"4827splitHere46","12820350splitHere46","<h:commandButton value=<doubleQuotes46>Select all opt1<doubleQuotes46> action=<doubleQuotes46>#{MyClass.selectOpt1}<doubleQuotes46>><newline46mondego>    <a4j:support event=<doubleQuotes46>onclick<doubleQuotes46> reRender=<doubleQuotes46>:list1<doubleQuotes46> ajaxSingle=<doubleQuotes46>true<doubleQuotes46> /><newline46mondego></h:commandButton><newline46mondego>"
"4828splitHere46","12820350splitHere46","a4j:commandButton"
"4829splitHere46","12820350splitHere46","<a4j:commandButton value=<doubleQuotes46>Select all opt1<doubleQuotes46> reRender=<doubleQuotes46>:list1<doubleQuotes46> ajaxSingle=<doubleQuotes46>true<doubleQuotes46> /><newline46mondego>"
"4830splitHere46","12820402splitHere46",".settings/org.eclipse.wst.common.component<newline46mondego>"
"4831splitHere46","12820467splitHere46","cmd + username + password<newline46mondego>"
"4832splitHere46","12820467splitHere46","/tools/scripts/jspTest.shmyusernamemypassword"
"4833splitHere46","12820640splitHere46","scoreTextField"
"4834splitHere46","12820640splitHere46","scoreTextField"
"4835splitHere46","12820640splitHere46","numDropped"
"4836splitHere46","12820640splitHere46","RightPanel.scoreTextField = new JTextField(numDropped+<doubleQuotes46><doubleQuotes46>);<newline46mondego>"
"4837splitHere46","12820640splitHere46","timer = new Timer(<newline46mondego>                500, new ActionListener() {<newline46mondego>                    public void actionPerformed(ActionEvent ae) {<newline46mondego>                        scoreTextField.setText(<doubleQuotes46><doubleQuotes46> + game.getScore());<newline46mondego>                        int scoreForLevelUpdate = game.getScoreForLevelUpdate();<newline46mondego>                        if (scoreForLevelUpdate >= Tetris.PER_LEVEL_SCORE && scoreForLevelUpdate > 0)<newline46mondego>                            game.levelUpdate();<newline46mondego>                    }<newline46mondego>                }<newline46mondego>        );<newline46mondego><newline46mondego>        timer.start();<newline46mondego>"
"4838splitHere46","12820640splitHere46","scoreTextField"
"4839splitHere46","12820640splitHere46","Game"
"4840splitHere46","12820640splitHere46","scoreTextField"
"4841splitHere46","12820640splitHere46","Game"
"4842splitHere46","12820640splitHere46","Thread thread = new Thread(new Game());<newline46mondego>thread.start();<newline46mondego>"
"4843splitHere46","12820640splitHere46","timer"
"4844splitHere46","12820640splitHere46","Timer"
"4845splitHere46","12820640splitHere46","actionPerformed"
"4846splitHere46","12820640splitHere46","while (onPlay)"
"4847splitHere46","12820640splitHere46","Thread.sleep(100)"
"4848splitHere46","12820640splitHere46","cancel"
"4849splitHere46","12820640splitHere46","public void setCount(int count){<newline46mondego>    count++;<newline46mondego>}<newline46mondego>"
"4850splitHere46","12820640splitHere46","count"
"4851splitHere46","12820675splitHere46","result.add(zeile.trim().replace(<doubleQuotes46>\ufeff<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>));<newline46mondego>"
"4852splitHere46","12820905splitHere46","Builder"
"4853splitHere46","12820905splitHere46","ObjectA"
"4854splitHere46","12820905splitHere46","ObjectB"
"4855splitHere46","12820905splitHere46","ObjectA"
"4856splitHere46","12820905splitHere46","ObjectB"
"4857splitHere46","12821111splitHere46","ImageIO.read()"
"4858splitHere46","12821111splitHere46","ByteArrayOutputStream baos = new ByteArrayOutputStream();<newline46mondego>    ImageBitmap.compress(Bitmap.CompressFormat.JPEG, 100, baos);     <newline46mondego>    byte[] b = baos.toByteArray();<newline46mondego>    mBluetoothService.write(b);<newline46mondego>    mBluetoothService.write(<doubleQuotes46>end of file<doubleQuotes46>.getBytes());<newline46mondego>"
"4859splitHere46","12821111splitHere46","byte[] buffer = new byte[1024];<newline46mondego><newline46mondego>    File f = new File(<doubleQuotes46>c:/users/temp.jpg<doubleQuotes46>);<newline46mondego>    FileOutputStream fos = new FileOutputStream (f);<newline46mondego><newline46mondego>    int bytes = 0;<newline46mondego>    boolean eof = false;<newline46mondego><newline46mondego>    while (!eof) {<newline46mondego><newline46mondego>        bytes = inputStream.read(buffer);<newline46mondego>        int offset = bytes - 11;<newline46mondego>        byte[] eofByte = new byte[11];<newline46mondego>        eofByte = Arrays.copyOfRange(buffer, offset, bytes);<newline46mondego>        String message = new String(eofByte, 0, 11);<newline46mondego><newline46mondego>        if(message.equals(<doubleQuotes46>end of file<doubleQuotes46>)) {<newline46mondego><newline46mondego>            eof = true;<newline46mondego><newline46mondego>        } else {<newline46mondego><newline46mondego>            fos.write (buffer, 0, bytes);<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego>    fos.close();<newline46mondego>"
"4860splitHere46","12821115splitHere46","public static void main(String[] args) {<newline46mondego>    String[] array = new String[] {<doubleQuotes46>a<doubleQuotes46>, <doubleQuotes46>b<doubleQuotes46>, <doubleQuotes46>c<doubleQuotes46>};<newline46mondego>    HashSet<String> strings = new HashSet(Arrays.asList(array));<newline46mondego><newline46mondego>    Map<String, Set<String>> map = new HashMap();<newline46mondego>    Map<String, Set<String>> newMap = new HashMap();<newline46mondego>    Map<String, Set<String>> cloneMap = new HashMap();<newline46mondego><newline46mondego>    map.put(<doubleQuotes46>key<doubleQuotes46>, strings);<newline46mondego>    newMap.put(<doubleQuotes46>key<doubleQuotes46>, new HashSet(strings));<newline46mondego>    cloneMap.put(<doubleQuotes46>key<doubleQuotes46>, (Set<String>) strings.clone());<newline46mondego><newline46mondego>    strings.add(<doubleQuotes46>E<doubleQuotes46>);<newline46mondego><newline46mondego>    System.out.println(map); //{key=[E, b, c, a]}<newline46mondego>    System.out.println(newMap); //{key=[b, c, a]}<newline46mondego>    System.out.println(cloneMap); //{key=[b, c, a]}<newline46mondego><newline46mondego>}<newline46mondego>"
"4861splitHere46","12821115splitHere46","map.put(<doubleQuotes46>key<doubleQuotes46>, strings)"
"4862splitHere46","12821115splitHere46","HashSet"
"4863splitHere46","12821115splitHere46","HashSet"
"4864splitHere46","12821115splitHere46","HashMap"
"4865splitHere46","12821162splitHere46","import java.io.*;<newline46mondego>import java.net.*;<newline46mondego><newline46mondego>public class ServerSide {<newline46mondego><newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego><newline46mondego>        try<newline46mondego>        {<newline46mondego>            ServerSocket myServerSocket = new ServerSocket(9999);<newline46mondego>            System.out.println(<doubleQuotes46>Server is waiting on host<doubleQuotes46> + InetAddress.getLocalHost().getCanonicalHostName() + <doubleQuotes46>port= <doubleQuotes46>+ myServerSocket.getLocalPort());<newline46mondego>            Socket skt = myServerSocket.accept();<newline46mondego><newline46mondego>            BufferedReader myInput = new BufferedReader(new InputStreamReader(skt.getInputStream()));<newline46mondego>            PrintStream myOutput = new PrintStream(skt.getOutputStream());<newline46mondego><newline46mondego>            String buf = myInput.readLine();<newline46mondego>            System.out.println(<doubleQuotes46>Server readLine<doubleQuotes46>);<newline46mondego>            if(buf!=null)<newline46mondego>            {<newline46mondego>                System.out.println(<doubleQuotes46>Buf = <doubleQuotes46> + buf);<newline46mondego>                myOutput.print(<doubleQuotes46>Got it?<doubleQuotes46>);<newline46mondego>            }<newline46mondego>            else<newline46mondego>            {<newline46mondego>                System.out.println(<doubleQuotes46>Nothing returned in server sidex`x  <doubleQuotes46>);<newline46mondego>            }<newline46mondego>            skt.close();<newline46mondego>            System.out.println(<doubleQuotes46>Server shutdown<doubleQuotes46>);<newline46mondego>        }<newline46mondego>        catch(IOException e)<newline46mondego>        {<newline46mondego>            e.printStackTrace();<newline46mondego>            System.out.println(<doubleQuotes46>Whooops<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"4866splitHere46","12821162splitHere46","skt.close();<newline46mondego>"
"4867splitHere46","12821194splitHere46","SO_TIMEOUT"
"4868splitHere46","12821194splitHere46","read()"
"4869splitHere46","12821194splitHere46","read()"
"4870splitHere46","12821318splitHere46","e.printStackTrace()"
"4871splitHere46","12821368splitHere46","ArrayList"
"4872splitHere46","12821368splitHere46","List"
"4873splitHere46","12821368splitHere46","ArrayList"
"4874splitHere46","12821368splitHere46","LinkedList"
"4875splitHere46","12821368splitHere46","LinkedList<String> strings = new LinkedList<String>();<newline46mondego>String s = strings.pop();<newline46mondego>"
"4876splitHere46","12821368splitHere46","pop"
"4877splitHere46","12821368splitHere46","LinkedList"
"4878splitHere46","12821368splitHere46","ArrayList"
"4879splitHere46","12821368splitHere46","ArrayList<String> strings = new ArrayList<String>();<newline46mondego>String s = strings.remove(strings.size() - 1);<newline46mondego>"
"4880splitHere46","12821368splitHere46","pop"
"4881splitHere46","12821368splitHere46","strings"
"4882splitHere46","12821368splitHere46","ArrayList"
"4883splitHere46","12821368splitHere46","Collection"
"4884splitHere46","12821368splitHere46","List"
"4885splitHere46","12821368splitHere46","Collection"
"4886splitHere46","12821368splitHere46","Set"
"4887splitHere46","12821472splitHere46","showConfirmDialog()"
"4888splitHere46","12821472splitHere46","JOptionPane"
"4889splitHere46","12821472splitHere46","if (save == JOptionPane.YES_OPTION) {<newline46mondego>  // ...<newline46mondego>} <newline46mondego>"
"4890splitHere46","12821556splitHere46","validateTree()"
"4891splitHere46","12821556splitHere46","validate()"
"4892splitHere46","12821571splitHere46","update(ViewerCell cell)"
"4893splitHere46","12821571splitHere46","ColumnLabelProvider"
"4894splitHere46","12821571splitHere46","getText()"
"4895splitHere46","12821571splitHere46","ViewerCell#setForeground(Color color)"
"4896splitHere46","12821571splitHere46","public class ColorColumnLabelProvider extends ColumnLabelProvider {<newline46mondego>    @Override<newline46mondego>    public void update(ViewerCell cell)<newline46mondego>    {<newline46mondego>        Object element = cell.getElement();<newline46mondego>        if(element instanceof AplotResultsDataModel.ResultsData)<newline46mondego>        {<newline46mondego>            AplotResultsDataModel.ResultsData p = (AplotResultsDataModel.ResultsData) element;<newline46mondego><newline46mondego>            cell.setForeground(YOUR_COLOR);<newline46mondego>            switch(cell.getColumnIndex())<newline46mondego>            {<newline46mondego>                case 0:<newline46mondego>                    cell.setText(p.YOUR_FIRST_TEXT);<newline46mondego>                    break;<newline46mondego>                case 1:<newline46mondego>                    cell.setText(p.YOUR_SECOND_TEXT);<newline46mondego>                    break;<newline46mondego>                case ...<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4897splitHere46","12821571splitHere46","col.getColumn().setWidth(150);<newline46mondego>col.getColumn().setText(<doubleQuotes46>ItemId<doubleQuotes46>);<newline46mondego>col.setLabelProvider(new ColorColumnLabelProvider());<newline46mondego>"
"4898splitHere46","12821571splitHere46","switch"
"4899splitHere46","12821571splitHere46","ColorColumnLabelProvider"
"4900splitHere46","12821571splitHere46","ColorConstants"
"4901splitHere46","12821571splitHere46","ColorConstants.darkGray"
"4902splitHere46","12821571splitHere46","ColumnLabelProvider"
"4903splitHere46","12821571splitHere46","IColorProvider"
"4904splitHere46","12821571splitHere46","public class ColorColumnLabelProvider extends ColumnLabelProvider implements IColorProvider {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Color getBackground(Object element) {<newline46mondego>        return null;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Color getForeground(Object element) {<newline46mondego>        return YOUR_COLOR;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public String getText(Object element) {<newline46mondego>        AplotResultsDataModel.ResultsData p = (AplotResultsDataModel.ResultsData) element;<newline46mondego>        return p.getPrinterProfile();<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"4905splitHere46","12821618splitHere46","for(int i = 0; i < team1Scores.length; i++){<newline46mondego>    team1Scores[i] = input.nextInt();<newline46mondego>    team1Total += team1Scores[i];<newline46mondego>    }<newline46mondego>input.nextLine();<newline46mondego>//rest of your code<newline46mondego>"
"4906splitHere46","12821641splitHere46","Callback<Boolean> callback = new Callback<Boolean>() {<newline46mondego>        @Override<newline46mondego>        public <X,Y> Boolean execute(Operation<X, Y> operation) {<newline46mondego><newline46mondego>        }<newline46mondego>};<newline46mondego>executor.execute(callback);<newline46mondego>"
"4907splitHere46","12821641splitHere46","public interface Callback<T,K,V> {<newline46mondego>    T execute(Operation<K, V> operation) throws SomeException;<newline46mondego> }<newline46mondego>"
"4908splitHere46","12821641splitHere46","Callback<Boolean,String,String> callback = new Callback<Boolean,String,String>() {<newline46mondego>        @Override<newline46mondego>        public Boolean execute(Operation<String, String> operation) {<newline46mondego><newline46mondego>        }<newline46mondego>};<newline46mondego>executor.execute(callback);<newline46mondego>"
"4909splitHere46","12821641splitHere46","<? super K,? super V>"
"4910splitHere46","12821641splitHere46","<? extends K,? extends V>"
"4911splitHere46","12821641splitHere46","public interface Callback<T> {<newline46mondego>    T execute(Operation<Object, Object> operation) throws SomeException;<newline46mondego> }<newline46mondego>"
"4912splitHere46","12821641splitHere46","T == Boolean"
"4913splitHere46","12821641splitHere46","public interface Callback {<newline46mondego>    Boolean execute(Operation<Object, Object> operation) throws SomeException;<newline46mondego> }<newline46mondego>"
"4914splitHere46","12821641splitHere46","Boolean execute(Operation<String, String> operation) throws SomeException;<newline46mondego>"
"4915splitHere46","12821641splitHere46","Object"
"4916splitHere46","12821641splitHere46","Boolean"
"4917splitHere46","12821641splitHere46","Object"
"4918splitHere46","12821641splitHere46","Boolean"
"4919splitHere46","12821641splitHere46","ClassCastException"
"4920splitHere46","12821641splitHere46","public interface Callback<T> {<newline46mondego>  T execute(Object key, Object value);<newline46mondego>}<newline46mondego><newline46mondego>Callback<Boolean> cb = new Callback<Boolean> {<newline46mondego>  @Override<newline46mondego>  public Boolean execute(Object k, Object v) { ... }<newline46mondego>  // not an @Override<newline46mondego>  public Boolean execute(String k, String v) { ... }<newline46mondego>}<newline46mondego>"
"4921splitHere46","12821641splitHere46","Operation<X,Y>"
"4922splitHere46","12821641splitHere46","Operation<String,String>"
"4923splitHere46","12821641splitHere46","Operation<X,Y>"
"4924splitHere46","12821641splitHere46","public interface StringOperation extends Operation<String,String> {}<newline46mondego>"
"4925splitHere46","12821641splitHere46","Callback<Boolean> cb = new Callback<Boolean> {<newline46mondego>  @Override<newline46mondego>  public <K,V> Boolean execute(Operation<K,V> o) { ... }<newline46mondego>  // not an @Override<newline46mondego>  public Boolean execute(StringOperation o) { ... }<newline46mondego>}<newline46mondego>"
"4926splitHere46","12821641splitHere46","execute(Callback<?>)"
"4927splitHere46","12821641splitHere46","<K,V> Boolean execute(Operation<K,V> o)"
"4928splitHere46","12821641splitHere46","Boolean execute(StringOperation o)"
"4929splitHere46","12821836splitHere46","@ManyToMany(cascade = CascadeType.ALL)<newline46mondego>@MapKeyColumn(name = <doubleQuotes46>hierarchyOrdering<doubleQuotes46>)<newline46mondego>@Sort(type = SortType.NATURAL)<newline46mondego>private SortedMap<Integer, Column> columnOrder;<newline46mondego>"
"4930splitHere46","12821837splitHere46","mysql -u <username> -p<password> <database-name> < file.sql"
"4931splitHere46","12822019splitHere46","ThreadPoolExecutor.shutdownNow()"
"4932splitHere46","12822025splitHere46","public static BitSet randomBitSet(int size, int cardinality, Random rnd) {<newline46mondego>    if (0 > cardinality || cardinality > size) throw new IllegalArgumentException();<newline46mondego>    BitSet result = new BitSet(size);<newline46mondego>    int[] chosen = new int[cardinality];<newline46mondego>    int i;<newline46mondego>    for (i = 0; i < cardinality; ++ i) {<newline46mondego>        chosen[i] = i;<newline46mondego>        result.set(i);<newline46mondego>    }<newline46mondego>    for (; i < size; ++ i) {<newline46mondego>        int j = rnd.nextInt(i+1);<newline46mondego>        if (j < cardinality) {<newline46mondego>            result.clear(chosen[j]);<newline46mondego>            result.set(i);<newline46mondego>            chosen[j] = i;<newline46mondego>        }<newline46mondego>    }<newline46mondego>    return result;<newline46mondego>}<newline46mondego>"
"4933splitHere46","12822204splitHere46","mvn tomcat:run"
"4934splitHere46","12822248splitHere46","Table.getColumns"
"4935splitHere46","12822248splitHere46","TableColumn"
"4936splitHere46","12822248splitHere46","Table.getColumns"
"4937splitHere46","12822248splitHere46","ObservableList[TableColumn[S,_]]"
"4938splitHere46","12822248splitHere46","c"
"4939splitHere46","12822248splitHere46","TableColumn[Foo,_]"
"4940splitHere46","12822248splitHere46","c"
"4941splitHere46","12822248splitHere46","val c = test.getColumns.get(0).asInstanceOf[TableColumn[Foo, String]]<newline46mondego>c.setCellValueFactory(new PropertyValueFactory[Foo, String](<doubleQuotes46>message<doubleQuotes46>))<newline46mondego>"
"4942splitHere46","12822248splitHere46","Table.getColumns"
"4943splitHere46","12822248splitHere46","setCellValueFactory"
"4944splitHere46","12822248splitHere46","val c = new TableColumn[Foo, String] // See ma, no cast!<newline46mondego>c.setCellValueFactory(new PropertyValueFactory[Foo, String](<doubleQuotes46>message<doubleQuotes46>))<newline46mondego>"
"4945splitHere46","12822248splitHere46","TableColumn"
"4946splitHere46","12822248splitHere46","TableColumn c  = new TableColumn();    <newline46mondego>c.setCellValueFactory( new PropertyValueFactory<Foo,String>(<doubleQuotes46>name<doubleQuotes46>));<newline46mondego>"
"4947splitHere46","12822248splitHere46","c"
"4948splitHere46","12822248splitHere46","TableColumn"
"4949splitHere46","12822248splitHere46","TableColumn<?, String>"
"4950splitHere46","12822248splitHere46","TableColumn"
"4951splitHere46","12822248splitHere46","c"
"4952splitHere46","12822248splitHere46","TableColumn<Foo, ?> name  = new TableColumn(<doubleQuotes46>Name<doubleQuotes46>);<newline46mondego>name.setCellValueFactory( new PropertyValueFactory<Room,String>(<doubleQuotes46>name<doubleQuotes46>));<newline46mondego>"
"4953splitHere46","12822248splitHere46","error: method setCellValueFactory in class TableColumn<S,T> cannot be applied to given types;<newline46mondego>...<newline46mondego>"
"4954splitHere46","12822248splitHere46","c"
"4955splitHere46","12822303splitHere46",":"
"4956splitHere46","12822303splitHere46","regExp.exec"
"4957splitHere46","12822303splitHere46","MatchResult matcher = regExp.exec(this.sqlFilter, <doubleQuotes46>g<doubleQuotes46>);<newline46mondego>    while (matcher != null) {<newline46mondego>        ...<newline46mondego><newline46mondego>        matcher = regExp.exec(this.sqlFilter);<newline46mondego>    }<newline46mondego>"
"4958splitHere46","12822379splitHere46","User"
"4959splitHere46","12822379splitHere46","Item"
"4960splitHere46","12822379splitHere46","List<User> results = userDao.queryBuilder().where().eq(<doubleQuotes46>item<doubleQuotes46>, item).query();<newline46mondego>"
"4961splitHere46","12822379splitHere46","QueryBuilder<User, Integer> qb = userDao.queryBuilder();<newline46mondego>qb.where().eq(<doubleQuotes46>item<doubleQuotes46>, item);<newline46mondego>User user = qb.queryForFirst();<newline46mondego>"
"4962splitHere46","12822379splitHere46","public final static String"
"4963splitHere46","12822379splitHere46","@DatabaseTable<newline46mondego>public class User {<newline46mondego>    public final static String ITEM_COLUMN_NAME = <doubleQuotes46>item<doubleQuotes46>;<newline46mondego>    ...<newline46mondego>    @DatabaseField(columnName = ITEM_COLUMN_NAME, canBeNull = false,<newline46mondego>         foreign = true, unique = true)<newline46mondego>    private Item item;<newline46mondego>"
"4964splitHere46","12822379splitHere46","...eq(User.ITEM_COLUMN_NAME, item)<newline46mondego>"
"4965splitHere46","12822379splitHere46","eq(...)"
"4966splitHere46","12822379splitHere46","item"
"4967splitHere46","12822400splitHere46","ifconfig"
"4968splitHere46","12822400splitHere46","vboxnet"
"4969splitHere46","12822447splitHere46","new"
"4970splitHere46","12822447splitHere46","New Technology: Escape Analysis<newline46mondego>Definition: An object escapes the thread that allocated it if<newline46mondego>some other thread can ever see it<newline46mondego>If an object doesn't escape, we can abuse it<newline46mondego>• Object explosion: allocate object's fields in different places<newline46mondego>• Scalar replacement: store scalar fields in registers<newline46mondego>• Thread stack allocation: store fields in stack frame<newline46mondego>• Eliminate synchronization<newline46mondego>• Eliminate initial object zero'ing<newline46mondego>• Eliminate GC read / write barriers<newline46mondego>Enabled with -XX:+DoEscapeAnalysis in JDKTM version 6<newline46mondego>"
"4971splitHere46","12822447splitHere46","public class UsesWrappersMain {<newline46mondego>    public static void main(String... args) {<newline46mondego>        for (int j = 0; j < 10; j++) {<newline46mondego>            long used = used(), count = 0;<newline46mondego>            for (int i = 0; i < 2000; i++) {<newline46mondego>                count += printSum();<newline46mondego>            }<newline46mondego>            // add an object to show it is working<newline46mondego>            byte[] b = new byte[16];<newline46mondego>            long used2 = used();<newline46mondego>            System.out.printf(<doubleQuotes46>Memory used for %,d iterations was %,d bytes%n<doubleQuotes46>, count, used2 - used);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    private static int printSum() {<newline46mondego>        int count = 0;<newline46mondego>        for (float i = 0; i < 10000; i++) {<newline46mondego>            // definitively not autoboxed.<newline46mondego>            Float j = new Float(i);<newline46mondego>            count++;<newline46mondego>        }<newline46mondego>        return count;<newline46mondego>    }<newline46mondego><newline46mondego>    private static long used() {<newline46mondego>        return Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4972splitHere46","12822447splitHere46","Memory used for 20,000,000 iterations was 480,888 bytes<newline46mondego>Memory used for 20,000,000 iterations was 32 bytes<newline46mondego>Memory used for 20,000,000 iterations was 32 bytes<newline46mondego>Memory used for 20,000,000 iterations was 32 bytes<newline46mondego>Memory used for 20,000,000 iterations was 32 bytes<newline46mondego>Memory used for 20,000,000 iterations was 32 bytes<newline46mondego>Memory used for 20,000,000 iterations was 32 bytes<newline46mondego>Memory used for 20,000,000 iterations was 0 bytes<newline46mondego>Memory used for 20,000,000 iterations was 0 bytes<newline46mondego>Memory used for 20,000,000 iterations was 0 bytes<newline46mondego>"
"4973splitHere46","12822447splitHere46","-XX:-DoEscapeAnalysis"
"4974splitHere46","12822447splitHere46","Memory used for 20,000,000 iterations was 320,000,928 bytes<newline46mondego>Memory used for 20,000,000 iterations was 320,000,032 bytes<newline46mondego>Memory used for 20,000,000 iterations was 320,000,032 bytes<newline46mondego>Memory used for 20,000,000 iterations was 320,000,032 bytes<newline46mondego>Memory used for 20,000,000 iterations was 320,000,032 bytes<newline46mondego>Memory used for 20,000,000 iterations was 320,000,032 bytes<newline46mondego>Memory used for 20,000,000 iterations was 320,000,032 bytes<newline46mondego>Memory used for 20,000,000 iterations was 320,000,144 bytes<newline46mondego>Memory used for 20,000,000 iterations was 320,000,032 bytes<newline46mondego>Memory used for 20,000,000 iterations was 320,000,032 bytes<newline46mondego>"
"4975splitHere46","12822450splitHere46","class AlwaysOnTopFileChooser extends JFileChooser {<newline46mondego>    protected JDialog createDialog(Component parent) throws HeadlessException {<newline46mondego>        JDialog dialog = super.createDialog(parent);<newline46mondego>        dialog.setAlwaysOnTop(true);<newline46mondego>        return dialog;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4976splitHere46","12822501splitHere46","|"
"4977splitHere46","12822501splitHere46","OR"
"4978splitHere46","12822560splitHere46","byte[] buf = new byte[256];<newline46mondego>DatagramPacket packet = new DatagramPacket(buf, buf.length);<newline46mondego>socket.receive(packet);<newline46mondego>"
"4979splitHere46","12822560splitHere46","SocketAddress remoteHostAddress = packet.getSocketAddress(); <newline46mondego>"
"4980splitHere46","12822688splitHere46","Clock1.Timer"
"4981splitHere46","12822768splitHere46","<h:dataTable>"
"4982splitHere46","12822768splitHere46","<ui:repeat>"
"4983splitHere46","12822768splitHere46","<iframe>"
"4984splitHere46","12822768splitHere46","<object>"
"4985splitHere46","12822971splitHere46","public Bridge createBridge(final TypeReference typereference)<newline46mondego>"
"4986splitHere46","12822971splitHere46","@WebService(serviceName = ...)<newline46mondego>@UsesJAXBContext(MyContextFactory.class)<newline46mondego>public class SoapServer { ... }<newline46mondego>"
"4987splitHere46","12822971splitHere46","public static class MyContextFactory implements JAXBContextFactory<newline46mondego>{<newline46mondego>    @Override<newline46mondego>    public JAXBRIContext createJAXBContext(final SEIModel sei,<newline46mondego>            @SuppressWarnings(<doubleQuotes46>rawtypes<doubleQuotes46>) final List<Class> classesToBind, final List<TypeReference> typeReferences)<newline46mondego>            throws JAXBException<newline46mondego>    {<newline46mondego>        JAXBRIContext context = JAXBContextFactory.DEFAULT.createJAXBContext(sei, classesToBind, typeReferences);<newline46mondego>        return new MyJaxwsContext(context);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4988splitHere46","12822971splitHere46","public class MyContext extends JAXBRIContext<newline46mondego>{<newline46mondego>/** the actual context */<newline46mondego>private final JAXBRIContext delegate;<newline46mondego><newline46mondego>public MyContext(final JAXBRIContext createContext)<newline46mondego>{<newline46mondego>    this.delegate = createContext;<newline46mondego>}<newline46mondego><newline46mondego>public Bridge createBridge(final TypeReference arg0)<newline46mondego>{<newline46mondego>    return new MyBridge((JAXBContextImpl) delegate, delegate.createBridge(arg0));<newline46mondego>}<newline46mondego>"
"4989splitHere46","12822971splitHere46","public class MyBridge extends Bridge<newline46mondego>{<newline46mondego>private final Bridge delegate;<newline46mondego><newline46mondego>protected MyBridge(final JAXBContextImpl context, final Bridge delegate)<newline46mondego>{<newline46mondego>    super(context);<newline46mondego>    this.delegate = delegate;<newline46mondego>}<newline46mondego><newline46mondego>// an example marshal call. There are many more...<newline46mondego>public void marshal(final Marshaller m, final Object object, final ContentHandler contentHandler)<newline46mondego>        throws JAXBException<newline46mondego>{<newline46mondego>    m.setProperty(<doubleQuotes46>com.sun.xml.bind.namespacePrefixMapper<doubleQuotes46>, namespaceMapper);<newline46mondego>    delegate.marshal(m, object, contentHandler);<newline46mondego>}<newline46mondego>"
"4990splitHere46","12823177splitHere46","import java.awt.MouseInfo;<newline46mondego>import java.awt.Point;<newline46mondego>import java.awt.event.ActionEvent;<newline46mondego>import java.awt.event.ActionListener;<newline46mondego>import java.awt.event.MouseEvent;<newline46mondego><newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JLabel;<newline46mondego>import javax.swing.SwingUtilities;<newline46mondego>import javax.swing.Timer;<newline46mondego>import javax.swing.ToolTipManager;<newline46mondego><newline46mondego>public class TestTooltips {<newline46mondego><newline46mondego>    protected static void initUI() {<newline46mondego>        JFrame frame = new JFrame(<doubleQuotes46>test<doubleQuotes46>);<newline46mondego>        final JLabel label = new JLabel(<doubleQuotes46>Label text<doubleQuotes46>);<newline46mondego>        frame.add(label);<newline46mondego>        frame.pack();<newline46mondego>        frame.setVisible(true);<newline46mondego>        Timer t = new Timer(1000, new ActionListener() {<newline46mondego><newline46mondego>            int progress = 0;<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void actionPerformed(ActionEvent e) {<newline46mondego>                if (progress > 100) {<newline46mondego>                    progress = 0;<newline46mondego>                }<newline46mondego>                label.setToolTipText(<doubleQuotes46>Progress: <doubleQuotes46> + progress + <doubleQuotes46> %<doubleQuotes46>);<newline46mondego>                Point locationOnScreen = MouseInfo.getPointerInfo().getLocation();<newline46mondego>                Point locationOnComponent = new Point(locationOnScreen);<newline46mondego>                SwingUtilities.convertPointFromScreen(locationOnComponent, label);<newline46mondego>                if (label.contains(locationOnComponent)) {<newline46mondego>                    ToolTipManager.sharedInstance().mouseMoved(<newline46mondego>                            new MouseEvent(label, -1, System.currentTimeMillis(), 0, locationOnComponent.x, locationOnComponent.y,<newline46mondego>                                    locationOnScreen.x, locationOnScreen.y, 0, false, 0));<newline46mondego>                }<newline46mondego>                progress++;<newline46mondego>            }<newline46mondego>        });<newline46mondego>        t.start();<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        SwingUtilities.invokeLater(new Runnable() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                initUI();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4991splitHere46","12823230splitHere46","fluentWait()"
"4992splitHere46","12823230splitHere46","public WebElement fluentWait(final By locator){<newline46mondego>        Wait<WebDriver> wait = new FluentWait<WebDriver>(driver)<newline46mondego>                .withTimeout(30, TimeUnit.SECONDS)<newline46mondego>                .pollingEvery(1, TimeUnit.SECONDS)<newline46mondego>                .ignoring(NoSuchElementException.class);<newline46mondego><newline46mondego>        WebElement foo = wait.until(<newline46mondego>                new Function<WebDriver, WebElement>() {<newline46mondego>                    public WebElement apply(WebDriver driver) {<newline46mondego>                        return driver.findElement(locator);<newline46mondego>                    }<newline46mondego>                }<newline46mondego>        );<newline46mondego>        return  foo;              <newline46mondego>     };<newline46mondego>"
"4993splitHere46","12823230splitHere46","String xPathElement =<doubleQuotes46>.....blablabla...<doubleQuotes46>;<newline46mondego>WebElement neededElement =fluentWait(By.xpath(xPathElement));<newline46mondego> neededElement.click();<newline46mondego>//neededElement.getText().trim();<newline46mondego>"
"4994splitHere46","12823230splitHere46","staleElement"
"4995splitHere46","12823230splitHere46","staleElement"
"4996splitHere46","12823498splitHere46","String str = <doubleQuotes46>9035<doubleQuotes46>;<newline46mondego>  while (rs.next()) {<newline46mondego>        String areaCode = rs.getString(<doubleQuotes46>AreaCode<doubleQuotes46>);<newline46mondego>        if(str.equals(areaCode)){<newline46mondego>           System.out.println(<doubleQuotes46>!!!!!!It matched: <doubleQuotes46> + str);<newline46mondego>           break;<newline46mondego>        } else {<newline46mondego>           System.out.println(<doubleQuotes46>No match with: <doubleQuotes46> + areaCode);<newline46mondego>        }<newline46mondego>  }<newline46mondego>"
"4997splitHere46","12823498splitHere46","select count(0) as tot from your_table_name where AreaCode = '9035'<newline46mondego>"
"4998splitHere46","12823498splitHere46","if(rs.getInt(<doubleQuotes46>AreaCode<doubleQuotes46>) != 0){<newline46mondego>  //found the/a match<newline46mondego>}<newline46mondego>"
"4999splitHere46","12823714splitHere46","public class MainActivity extends Activity {<newline46mondego><newline46mondego>@Override<newline46mondego>public void onCreate(Bundle savedInstanceState) {<newline46mondego>    super.onCreate(savedInstanceState);<newline46mondego>    setContentView(R.layout.activity_main);<newline46mondego><newline46mondego>    Button startButton = (Button) findViewById(R.id.trigger);<newline46mondego><newline46mondego>    startButton.setOnClickListener(new View.OnClickListener() {<newline46mondego>        public void onClick(View view) {<newline46mondego>        }<newline46mondego>    });<newline46mondego>}<newline46mondego><newline46mondego>@Override<newline46mondego>public boolean onCreateOptionsMenu(Menu menu) {<newline46mondego>    getMenuInflater().inflate(R.menu.activity_main, menu);<newline46mondego>    return true;<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>}<newline46mondego>"
"5000splitHere46","12823734splitHere46","Demo"
"5001splitHere46","12823734splitHere46","test"
"5002splitHere46","12823734splitHere46","test"
"5003splitHere46","12823734splitHere46","test"
"5004splitHere46","12823734splitHere46","Demo.java"
"5005splitHere46","12823734splitHere46","test"
"5006splitHere46","12823734splitHere46","Demo.java"
"5007splitHere46","12823734splitHere46","test"
"5008splitHere46","12823751splitHere46","<bean id=<doubleQuotes46>Barnyard<doubleQuotes46> class=<doubleQuotes46>Company<doubleQuotes46>><newline46mondego>   <property name=<doubleQuotes46>owner<doubleQuotes46> value=<doubleQuotes46>#{Bob.getRelative('father')<doubleQuotes46>/><newline46mondego></bean><newline46mondego>"
"5009splitHere46","12823780splitHere46",".gitignore"
"5010splitHere46","12823780splitHere46",".gitignore"
"5011splitHere46","12823801splitHere46","abstract class CreatureProperties {<newline46mondego>   protected String id = <doubleQuotes46><doubleQuotes46>;<newline46mondego>   protectd int propertyValue = 0;<newline46mondego>   public void actOn(BaseMonster);<newline46mondego>  // plus setter and getter<newline46mondego>}<newline46mondego><newline46mondego>public RegenerationProperty implements CreatureProperties {<newline46mondego>   final public REGENERATION_ID = <doubleQuotes46>Regeneration<doubleQuotes46>;<newline46mondego>   int regenerationValue = 0;<newline46mondego><newline46mondego>   public RegenerationProperty(int value){<newline46mondego>      id = REGENERATION_ID;<newline46mondego>      propertyValue= value;<newline46mondego>   }<newline46mondego><newline46mondego>   public void actOn(BaseMonster monster){<newline46mondego>      monster.setHitPoint(monster.getHitPoints()+propertyValue);<newline46mondego>   }<newline46mondego>}<newline46mondego><newline46mondego>in the BaseMonster class, you manage a set of MonsterProperty, initially empty.<newline46mondego><newline46mondego>    class BaseMonster {<newline46mondego>       protected List<CreatureProperties> properties = <newline46mondego>         new ArrayList<CreatureProperties>();<newline46mondego>       // plus management of propeties : add remove, iterator...<newline46mondego><newline46mondego>       public void update(){<newline46mondego>          // perform all properties-linked update to monster<newline46mondego>          foreach (CreatureProperty property : properties){<newline46mondego>             property.actOn(this);<newline46mondego>          }<newline46mondego>       } <newline46mondego>    }<newline46mondego>"
"5012splitHere46","12823801splitHere46","class SomeMonster extends BaseMonster {<newline46mondego>   public SomeMonster(){<newline46mondego>      properties.add(new RegenerationProperty(5));  // presto : monster regenerate<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"5013splitHere46","12823911splitHere46","Cow"
"5014splitHere46","12823911splitHere46","Milk.setName"
"5015splitHere46","12823911splitHere46","Cow.setName"
"5016splitHere46","12824136splitHere46","WakeLock"
"5017splitHere46","12824136splitHere46","WakeLock"
"5018splitHere46","12824136splitHere46","WakeLock"
"5019splitHere46","12824136splitHere46","WakefulIntentService"
"5020splitHere46","12824136splitHere46","doWakefulWork()"
"5021splitHere46","12824136splitHere46","WakeLock"
"5022splitHere46","12824151splitHere46","ViewPager"
"5023splitHere46","12824151splitHere46","FragmentPagerAdapter"
"5024splitHere46","12824151splitHere46","PagerTabStrip"
"5025splitHere46","12824151splitHere46","PagerTabStrip"
"5026splitHere46","12824151splitHere46","ViewPager"
"5027splitHere46","12824151splitHere46","PagerAdapter"
"5028splitHere46","12824178splitHere46","jPanel1.setMaximumSize(new Dimension(200, 200));<newline46mondego>"
"5029splitHere46","12824178splitHere46","NullPointerException"
"5030splitHere46","12824178splitHere46","initComponents"
"5031splitHere46","12824178splitHere46","private void initComponents() {<newline46mondego>    jPanel1 = new JPanel();<newline46mondego>    title_lbl = new JLabel();<newline46mondego>    side1_lbl = new JLabel();<newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"5032splitHere46","12824202splitHere46","mongo 127.0.0.1/db --eval <doubleQuotes46>var c = db.collection.find(); while(c.hasNext()) {printjson(c.next())}<doubleQuotes46> >> test.txt<newline46mondego>"
"5033splitHere46","12824202splitHere46","mongo 127.0.0.1/db script.js >> test.txt<newline46mondego>"
"5034splitHere46","12824619splitHere46","$1"
"5035splitHere46","12824619splitHere46","s1.replaceAll(<doubleQuotes46>,(\\d|\\w)<doubleQuotes46>,<doubleQuotes46> $1<doubleQuotes46>);<newline46mondego>"
"5036splitHere46","12824619splitHere46","String.replaceAll()"
"5037splitHere46","12824619splitHere46","Matcher.replaceAll()"
"5038splitHere46","12824654splitHere46","!= true"
"5039splitHere46","12824654splitHere46","!boolValue"
"5040splitHere46","12824654splitHere46","int find(int x,int y,int h)<newline46mondego>{    <newline46mondego>    int result = -1;<newline46mondego>    if   ((x+1<rows && m[x+1][y].c=='@'   &&  !m[x+1][y].done) <newline46mondego>        ||(x-1>=0   && m[x-1][y].c=='@'   &&  !m[x-1][y].done)<newline46mondego>        ||(y+1<cols && m[x][y+1].c=='@'   &&  !m[x][y+1].done)   <newline46mondego>        ||(y-1>=0   && m[x][y-1].c=='@'   &&  !m[x][y-1].done)){   <newline46mondego>        return h + 1;<newline46mondego>         }<newline46mondego>      else<newline46mondego>       {<newline46mondego><newline46mondego>        if(x-1>=0   &&  m[x-1][y].c=='1' && !m[x-1][y].done){   /*north cell*/<newline46mondego>                   m[x][y].done=true;<newline46mondego><newline46mondego>                   result = find(x-1,y,h + 1)<newline46mondego>                   if (result > -1) {<newline46mondego>                       return result; <newline46mondego>                   }<newline46mondego>                   m[x][y].done=false;<newline46mondego>        }<newline46mondego>"
"5041splitHere46","12824654splitHere46","return result;<newline46mondego>       } <newline46mondego>"
"5042splitHere46","12824726splitHere46","<plugin><newline46mondego>    <groupId>org.apache.maven.plugins</groupId><newline46mondego>    <artifactId>maven-dependency-plugin</artifactId><newline46mondego>    <executions><newline46mondego>        <execution><newline46mondego>            <id>unpack-dependencies</id><newline46mondego>            <!--unpack all the dependencies to the target of this project-->        <newline46mondego>            <phase>initialize</phase><newline46mondego>            <inherited>false</inherited><newline46mondego>            <goals><newline46mondego>                <goal>unpack-dependencies</goal><newline46mondego>            </goals><newline46mondego>            <configuration><newline46mondego>                <includeGroupIds>${pom.groupId}</includeGroupIds><newline46mondego>                <overWrite>true</overWrite><newline46mondego>                <outputDirectory>${project.build.directory}/${artifactId}</outputDirectory><newline46mondego>                <includes>**/*.properties,**/*.xml</includes><newline46mondego>            </configuration><newline46mondego>        </execution><newline46mondego>    </executions><newline46mondego></plugin><newline46mondego><plugin><newline46mondego>    <artifactId>maven-assembly-plugin</artifactId><newline46mondego>    <configuration><newline46mondego>        <descriptors><newline46mondego>            <descriptor>${config.maven.plattform.resources}/assembly/zip.xml</descriptor><newline46mondego>        </descriptors><newline46mondego>    </configuration><newline46mondego>    <executions><newline46mondego>        <execution><newline46mondego>            <id>zip</id><newline46mondego>            <phase>package</phase><newline46mondego>            <inherited>true</inherited><newline46mondego>            <goals><newline46mondego>                <goal>assembly</goal><newline46mondego>            </goals><newline46mondego>        </execution><newline46mondego>    </executions><newline46mondego></plugin><newline46mondego>"
"5043splitHere46","12824894splitHere46","."
"5044splitHere46","12824894splitHere46","inject"
"5045splitHere46","12824894splitHere46","String key = <doubleQuotes46>my.first.property<doubleQuotes46><newline46mondego>Object value = FOO<newline46mondego><newline46mondego>// split the key into its components<newline46mondego>def keyParts = key.split(/\./)<newline46mondego>// do config.my.first (i.e. up to the last-but-one component) and then set<newline46mondego>// <doubleQuotes46>property<doubleQuotes46> (the last component) on the resulting ConfigObject<newline46mondego>keyParts[0..<(keyParts.size() - 1)].inject(config) {<newline46mondego>  conf, k -> conf.<doubleQuotes46>${k}<doubleQuotes46><newline46mondego>}.<doubleQuotes46>${keyParts[-1]}<doubleQuotes46> = value<newline46mondego>"
"5046splitHere46","12824903splitHere46","java.util.Random"
"5047splitHere46","12824903splitHere46","nextBoolean()"
"5048splitHere46","12824903splitHere46","// assumes a java.util.Random called random<newline46mondego>boolean[] randomBools(int len) {<newline46mondego>    boolean[] arr = new boolean[len];<newline46mondego>    for(int i = 0; i < len; i++) {<newline46mondego>        arr[i] = random.nextBoolean();<newline46mondego>    }<newline46mondego>    return arr;<newline46mondego>}<newline46mondego>"
"5049splitHere46","12825017splitHere46","image"
"5050splitHere46","12825017splitHere46","BufferedImage canvas = new BufferedImage(width, height, BufferedImage.TYPE_3BYTE_BGR);<newline46mondego>"
"5051splitHere46","12825017splitHere46","Graphics"
"5052splitHere46","12825017splitHere46","Graphics cg = canvas.getGraphics();<newline46mondego>"
"5053splitHere46","12825017splitHere46","cg"
"5054splitHere46","12825017splitHere46","paintComponent(Graphics g)"
"5055splitHere46","12825017splitHere46","canvas"
"5056splitHere46","12825017splitHere46","g.drawImage(canvas, 0, 0, null);<newline46mondego>"
"5057splitHere46","12825017splitHere46","VolatileImage"
"5058splitHere46","12825017splitHere46","BufferedImage"
"5059splitHere46","12825017splitHere46","BufferedImage"
"5060splitHere46","12825024splitHere46","public class Restaurant {   <newline46mondego>    private String name=<doubleQuotes46><doubleQuotes46>;     <newline46mondego>    private String address=<doubleQuotes46><doubleQuotes46>;   <newline46mondego>    private String type=<doubleQuotes46><doubleQuotes46>;<newline46mondego>    ............<newline46mondego>}<newline46mondego>"
"5061splitHere46","12825105splitHere46","R.java"
"5062splitHere46","12825105splitHere46","gen"
"5063splitHere46","12825105splitHere46","setContentView(R.layout.activity_main); <newline46mondego>"
"5064splitHere46","12825105splitHere46","R.layout.activity_main"
"5065splitHere46","12825105splitHere46","R.java"
"5066splitHere46","12825130splitHere46","**curl_setopt($ch, CURLOPT_HTTPHEADER, array(<doubleQuotes46>Content-Type: application/json; charset=utf-8<doubleQuotes46>,<doubleQuotes46>Accept:application/json, text/javascript, */*; q=0.01<doubleQuotes46>));**<newline46mondego><newline46mondego>**$postargs = array('user' => 'user', 'pass' => 'pass');**<newline46mondego><newline46mondego>**json_encode($postargs);**<newline46mondego>"
"5067splitHere46","12825242splitHere46","JPanel"
"5068splitHere46","12825242splitHere46","JFrame"
"5069splitHere46","12825242splitHere46","JPanel"
"5070splitHere46","12825242splitHere46","JFrame"
"5071splitHere46","12825242splitHere46","JPanel"
"5072splitHere46","12825242splitHere46","public void updatePartControl() {<newline46mondego>    Thread thread = new CountdownThread(model, this, displayPanel);<newline46mondego>    thread.start();<newline46mondego><newline46mondego>    frame.remove(alarmPanel.getPanel());<newline46mondego>    frame.add(displayPanel.getPanel());<newline46mondego>    frame.validate();<newline46mondego>    frame.pack();<newline46mondego>    frame.setBounds(getBounds());<newline46mondego>}<newline46mondego>"
"5073splitHere46","12825242splitHere46","JPanel"
"5074splitHere46","12825242splitHere46","JPanel"
"5075splitHere46","12825242splitHere46","JFrame"
"5076splitHere46","12825242splitHere46","JPanel"
"5077splitHere46","12825345splitHere46","JsonParser"
"5078splitHere46","12825345splitHere46","Reader jsonReader =<newline46mondego>                new BufferedReader(<newline46mondego>                new InputStreamReader(getIStream(<doubleQuotes46>myFile.json<doubleQuotes46>)));<newline46mondego>JsonParser parser = new JsonParser();<newline46mondego>JsonObject top = parser.parse(jsonReader).getAsJsonObject();<newline46mondego><newline46mondego>JsonElement importantEl = top.get(<doubleQuotes46>important<doubleQuotes46>);<newline46mondego><newline46mondego>//Parse the important element into whatever structure you're creating<newline46mondego>Gson gson = new Gson();<newline46mondego>List<Important> important <newline46mondego>    = Gson.fromJson(importantEl, new TypeToken<ArrayList<Important>>(){}.getType() );<newline46mondego>"
"5079splitHere46","12825688splitHere46","(score/numberOfQuestions)"
"5080splitHere46","12825688splitHere46","int percent = (score * 100 / numberOfQuestions);<newline46mondego>"
"5081splitHere46","12825688splitHere46","*100"
"5082splitHere46","12826049splitHere46","while (splitLine.length != 4) {<newline46mondego>    line = reader.readLine();<newline46mondego>    stringBuilder.append(line);<newline46mondego><newline46mondego>    splitLine = stringBuilder.toString().split(<doubleQuotes46>\t<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"5083splitHere46","12826049splitHere46","splitLine"
"5084splitHere46","12826049splitHere46","null"
"5085splitHere46","12826049splitHere46","StringBuilder"
"5086splitHere46","12826049splitHere46","try"
"5087splitHere46","12826049splitHere46","finally"
"5088splitHere46","12826166splitHere46","AnObject"
"5089splitHere46","12826166splitHere46","changeObj()"
"5090splitHere46","12826166splitHere46","changeValues()"
"5091splitHere46","12826253splitHere46","struct example1 {<newline46mondego>  char someFlag;<newline46mondego>  int  someCount;<newline46mondego>};<newline46mondego>"
"5092splitHere46","12826253splitHere46","send(&example1, sizeof(example1));"
"5093splitHere46","12826253splitHere46","read(&example1, sizeof(example1));"
"5094splitHere46","12826253splitHere46","java.nio.ByteBuffer"
"5095splitHere46","12826253splitHere46","getShort"
"5096splitHere46","12826253splitHere46","getInt"
"5097splitHere46","12826253splitHere46","order()"
"5098splitHere46","12826436splitHere46","Eclipse"
"5099splitHere46","12826436splitHere46","Max length..."
"5100splitHere46","12826436splitHere46","Wrap text"
"5101splitHere46","12826521splitHere46","IClasspathEntry jar = JavaCore.newLibraryEntry(new Path(jarPath), null, null)"
"5102splitHere46","12826561splitHere46","JTextField"
"5103splitHere46","12826561splitHere46","JFormattedTextField"
"5104splitHere46","12826561splitHere46","JSpinner"
"5105splitHere46","12826561splitHere46","DocumentListener"
"5106splitHere46","12826561splitHere46","DocumentFilter"
"5107splitHere46","12826612splitHere46","public int compare(File f1, File f2) {<newline46mondego>    return Long.valueOf(f1.lastModified()).compareTo(f2.lastModified());<newline46mondego>}<newline46mondego>"
"5108splitHere46","12826612splitHere46","public int compare(File f1, File f2) {<newline46mondego>    return Long.valueOf(f1.lastModified()).compareTo(<newline46mondego>           Long.valueOf(f2.lastModified()));<newline46mondego>}<newline46mondego>"
"5109splitHere46","12826753splitHere46","CellEditorListener"
"5110splitHere46","12826753splitHere46","JTable"
"5111splitHere46","12826753splitHere46","CellEditorListener"
"5112splitHere46","12826753splitHere46","table.putClientProperty(<doubleQuotes46>terminateEditOnFocusLost<doubleQuotes46>, true);<newline46mondego>"
"5113splitHere46","12826781splitHere46","Graphics g2d = (Graphics2D) inside.getGraphics();<newline46mondego>"
"5114splitHere46","12826781splitHere46","getGraphics()"
"5115splitHere46","12826781splitHere46","BufferedImage"
"5116splitHere46","12826781splitHere46","paintComponent(Graphics)"
"5117splitHere46","12826939splitHere46","binarySearch"
"5118splitHere46","12826939splitHere46","high"
"5119splitHere46","12826939splitHere46","int low = 0;<newline46mondego>int high = array.length;<newline46mondego>int mid = (low + high)/2;<newline46mondego>"
"5120splitHere46","12826939splitHere46","int high = array.length - 1;<newline46mondego>"
"5121splitHere46","12827012splitHere46","Project Settings > Code Style > Java"
"5122splitHere46","12827012splitHere46","Import"
"5123splitHere46","12827012splitHere46","*"
"5124splitHere46","12827012splitHere46","spring-test-mvc"
"5125splitHere46","12827053splitHere46","reqest.getSession().setAttribute(<doubleQuotes46>udername<doubleQuotes46>,<doubleQuotes46>Elbek<doubleQuotes46>);<newline46mondego>    //later <newline46mondego>    reqest.getSession().removeAttribute(<doubleQuotes46>udername<doubleQuotes46>);<newline46mondego><newline46mondego>   //destroy it<newline46mondego>   reqest.getSession().invalidate();<newline46mondego>"
"5126splitHere46","12827053splitHere46","request"
"5127splitHere46","12827053splitHere46","@Context HttpServletRequest httpRequest"
"5128splitHere46","12827053splitHere46","HttpRequest"
"5129splitHere46","12827216splitHere46","class"
"5130splitHere46","12827216splitHere46","min"
"5131splitHere46","12827216splitHere46","max"
"5132splitHere46","12827216splitHere46","message"
"5133splitHere46","12827216splitHere46","TreeMap"
"5134splitHere46","12827216splitHere46","TreeMap"
"5135splitHere46","12827216splitHere46","floorEntry"
"5136splitHere46","12827276splitHere46","total"
"5137splitHere46","12827276splitHere46","double total=0;"
"5138splitHere46","12827276splitHere46","enterProducts"
"5139splitHere46","12827276splitHere46","private static double enterProducts()"
"5140splitHere46","12827276splitHere46","total"
"5141splitHere46","12827276splitHere46","pause"
"5142splitHere46","12827276splitHere46","return total;"
"5143splitHere46","12827276splitHere46","1"
"5144splitHere46","12827276splitHere46","enterProducts"
"5145splitHere46","12827276splitHere46","total"
"5146splitHere46","12827276splitHere46","total"
"5147splitHere46","12827276splitHere46","total += enterProducts();"
"5148splitHere46","12827276splitHere46","displaySales"
"5149splitHere46","12827276splitHere46","private static void displaySales(double total)"
"5150splitHere46","12827276splitHere46","2"
"5151splitHere46","12827276splitHere46","displaySales(total);"
"5152splitHere46","12827298splitHere46","(?:^|\s+|>)((?:[^<>.!?\s])(?:[^<>.!?]|\.\d)+(?:\.(?!\d)<doubleQuotes46>?|!|\?)?)<newline46mondego>"
"5153splitHere46","12827298splitHere46","(?:^|\s+|>)       # only start after at the string's beginning, after a row of<newline46mondego>                  # spaces, or after closing a tag<newline46mondego>                  # this eliminates all in-tag matches (like <doubleQuotes46>li<doubleQuotes46> and <doubleQuotes46>br<doubleQuotes46>)<newline46mondego>(                 # opening a capturing group that will contain the actual match<newline46mondego>(?:[^<>.!?\s])    # require at least one character that is not in the given group<newline46mondego>                  # this eliminates matching a single space between two <li>s<newline46mondego>                  # NOTE: there are probably better ways to do this<newline46mondego>(?:[^<>.!?]|\.\d) # defines possible sentence characters; allow everything but<newline46mondego>                  # <, >, ., !, ? EXCEPT FOR . followed by a digit<newline46mondego>(?:\.(?!\d)<doubleQuotes46>?|!|\?)?<newline46mondego>                  # include possible sentence endings; that is . not followed by<newline46mondego>                  # a digit (hence, the negative lookahead), but possibly<newline46mondego>                  # followed by <doubleQuotes46>, or !, or ?, or nothing at all<newline46mondego>)                 # close the main matching group<newline46mondego>"
"5154splitHere46","12827298splitHere46","1"
"5155splitHere46","12827344splitHere46","high"
"5156splitHere46","12827344splitHere46","int high = array.length;<newline46mondego>"
"5157splitHere46","12827344splitHere46","while"
"5158splitHere46","12827344splitHere46","while (low <= high)<newline46mondego>"
"5159splitHere46","12827344splitHere46","while"
"5160splitHere46","12827344splitHere46","while (low < high)<newline46mondego>"
"5161splitHere46","12827344splitHere46","high"
"5162splitHere46","12827344splitHere46","array.length - 1"
"5163splitHere46","12827344splitHere46","low == high == mid == array.length"
"5164splitHere46","12827344splitHere46","mid = (low + high) / 2"
"5165splitHere46","12827344splitHere46","while"
"5166splitHere46","12827344splitHere46","while (low < high) {        <newline46mondego>    mid = (low + high) / 2;<newline46mondego>    System.out.print(i + <doubleQuotes46> <doubleQuotes46>);<newline46mondego>    if (array[mid] < key) {<newline46mondego>        low = mid + 1;<newline46mondego>    } else if (array[mid] > key) {<newline46mondego>        high = mid;<newline46mondego>    }<newline46mondego>    else {<newline46mondego>        return mid;<newline46mondego>    }<newline46mondego>    i++;<newline46mondego>}<newline46mondego>"
"5167splitHere46","12827492splitHere46","from(<doubleQuotes46>mywatchcomponent:/var/files/<doubleQuotes46>)<newline46mondego> .to(<doubleQuotes46>direct:pickUp<doubleQuotes46>)<newline46mondego><newline46mondego>from(<doubleQuotes46>direct:pickUp<doubleQuotes46>)<newline46mondego> .pollEnrich(<doubleQuotes46>file:/var/files/<doubleQuotes46>)<newline46mondego> .bean(whatever)..<newline46mondego>"
"5168splitHere46","12827607splitHere46","/public"
"5169splitHere46","12827607splitHere46","File index = new File..."
"5170splitHere46","12827607splitHere46","app/views/staticContact.scala.html"
"5171splitHere46","12827607splitHere46","public static Result staticContact(){<newline46mondego>    return ok(views.html.staticContact.render());<newline46mondego>}<newline46mondego>"
"5172splitHere46","12827643splitHere46","pack()"
"5173splitHere46","12827643splitHere46","import java.awt.Dimension;<newline46mondego>import java.awt.EventQueue;<newline46mondego>import java.awt.GridLayout;<newline46mondego>import java.io.IOException;<newline46mondego>import javax.swing.JEditorPane;<newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JPanel;<newline46mondego>import javax.swing.JScrollPane;<newline46mondego><newline46mondego>/**<newline46mondego> * @see http://stackoverflow.com/a/12827643/230513<newline46mondego> * @see http://stackoverflow.com/questions/4755524<newline46mondego> */<newline46mondego>public class HtmlView extends JPanel {<newline46mondego><newline46mondego>    private static final String EXAMPLE = <doubleQuotes46>http://www.example.com<doubleQuotes46>;<newline46mondego>    private final JEditorPane jep;<newline46mondego><newline46mondego>    public HtmlView(String url) {<newline46mondego>        super(new GridLayout(1, 1));<newline46mondego>        jep = new JEditorPane();<newline46mondego>        try {<newline46mondego>            jep.setPage(EXAMPLE);<newline46mondego>        } catch (IOException ioe) {<newline46mondego>            ioe.printStackTrace(System.err);<newline46mondego>        }<newline46mondego>        jep.setEditable(false);<newline46mondego>        this.add(new JScrollPane(jep));<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Dimension getPreferredSize() {<newline46mondego>        return new Dimension(600, 200);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        EventQueue.invokeLater(new Runnable() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                JFrame f = new JFrame();<newline46mondego>                f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>                JPanel panel = new JPanel(new GridLayout(0, 1));<newline46mondego>                panel.add(new HtmlView(EXAMPLE));<newline46mondego>                panel.add(new HtmlView(EXAMPLE));<newline46mondego>                panel.add(new HtmlView(EXAMPLE));<newline46mondego>                f.add(new JScrollPane(panel));<newline46mondego>                f.pack();<newline46mondego>                f.setSize(640, 480);<newline46mondego>                f.setVisible(true);<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5174splitHere46","12827728splitHere46","MySite-web.context.xml"
"5175splitHere46","12827728splitHere46","<mvc:annotation-driven/><newline46mondego><bean id=<doubleQuotes46>handlerMapping<doubleQuotes46> class=<doubleQuotes46>org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping<doubleQuotes46>><newline46mondego>    <property name=<doubleQuotes46>alwaysUseFullPath<doubleQuotes46> value=<doubleQuotes46>true<doubleQuotes46>/><newline46mondego></bean>                <newline46mondego>"
"5176splitHere46","12827728splitHere46","mvc"
"5177splitHere46","12827728splitHere46","xmlns:mvc=<doubleQuotes46>http://www.springframework.org/schema/mvc<doubleQuotes46><newline46mondego>"
"5178splitHere46","12827728splitHere46","xsi:schemaLocation"
"5179splitHere46","12827750splitHere46","public void writeExternal(ObjectOutput out) throws IOException {        <newline46mondego>    out.writeObject(super.toArray());<newline46mondego>    out.writeObject(field1);<newline46mondego>    out.writeObject(field2);<newline46mondego>}<newline46mondego><newline46mondego>public void readExternal(ObjectInput in) throws IOException,ClassNotFoundException {<newline46mondego>    Object[] arr = (Object[]) in.readObject();<newline46mondego>    for (int k=0; k<arr.length; k++) super.add(arr[k]);<newline46mondego>    field1 = (Field) in.readObject();<newline46mondego>    field2 = (Field) in.readObject();<newline46mondego>}<newline46mondego>"
"5180splitHere46","12827883splitHere46","newMessage()"
"5181splitHere46","12827883splitHere46","MessageDAO"
"5182splitHere46","12827893splitHere46","exclude"
"5183splitHere46","12827893splitHere46","include"
"5184splitHere46","12827893splitHere46","<include name=<doubleQuotes46>common/vo/MyPojo.java<doubleQuotes46>,common/SomeException.java, common/vo/AnotherPojo.java,price/vo/YetAnotherPojo.java,price/vo/OneMorePojo.java<doubleQuotes46> /><newline46mondego>"
"5185splitHere46","12828022splitHere46","B = A + <doubleQuotes46>\u0000<doubleQuotes46>"
"5186splitHere46","12828022splitHere46","<doubleQuotes46>Y<doubleQuotes46>"
"5187splitHere46","12828022splitHere46","<doubleQuotes46>X\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF...<doubleQuotes46>"
"5188splitHere46","12828283splitHere46","for (int j = 0; j < winVals.length; j++)<newline46mondego>{ <newline46mondego>   if( winVals[j] == rand)<newline46mondego>       i--;<newline46mondego>   else<newline46mondego>   {<newline46mondego>       winVals[i] = rand;<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"5189splitHere46","12828283splitHere46","j"
"5190splitHere46","12828283splitHere46","i"
"5191splitHere46","12828283splitHere46","i"
"5192splitHere46","12828283splitHere46","i"
"5193splitHere46","12828335splitHere46","Comparable"
"5194splitHere46","12828335splitHere46","Collections.sort(list);<newline46mondego>"
"5195splitHere46","12828335splitHere46","list"
"5196splitHere46","12828335splitHere46","ArrayList"
"5197splitHere46","12828335splitHere46","Collections"
"5198splitHere46","12828335splitHere46","DateTime"
"5199splitHere46","12828335splitHere46","Comparable"
"5200splitHere46","12828335splitHere46","DateTime"
"5201splitHere46","12828335splitHere46","Comparable"
"5202splitHere46","12828335splitHere46","public class Profile implements Comparable<Profile> { <newline46mondego>    DateTime date;<newline46mondego>    double age; <newline46mondego>    int id; <newline46mondego><newline46mondego>    ...<newline46mondego><newline46mondego>    @Override<newline46mondego>    public int compareTo(Profile other) {<newline46mondego>        return date.compareTo(other.getDate());  // compare by date<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5203splitHere46","12828335splitHere46","List"
"5204splitHere46","12828335splitHere46","Profile"
"5205splitHere46","12828335splitHere46","Collections.sort(list)"
"5206splitHere46","12828335splitHere46","list"
"5207splitHere46","12828335splitHere46","Profile"
"5208splitHere46","12828505splitHere46","toString()"
"5209splitHere46","12828505splitHere46","Color"
"5210splitHere46","12828505splitHere46","Color theColor = getColor()<newline46mondego>String colorName = null;<newline46mondego>if (Color.BLACK.equals(theColor)) <newline46mondego>{<newline46mondego>  colorName = <doubleQuotes46>BLACK<doubleQuotes46>;<newline46mondego>} <newline46mondego>else if (Color.WHITE.equals(theColor)) <newline46mondego>{<newline46mondego>  colorName = <doubleQuotes46>WHITE<doubleQuotes46>;<newline46mondego>}<newline46mondego>...<newline46mondego>System.out.println(colorName);<newline46mondego>"
"5211splitHere46","12828673splitHere46","python"
"5212splitHere46","12828673splitHere46","java"
"5213splitHere46","12828673splitHere46","File file = new File(<doubleQuotes46>script.py<doubleQuotes46>);<newline46mondego>FileOutputStream fis = new FileOutputStream(file);<newline46mondego>PrintStream out = new PrintStream(fis);<newline46mondego>System.setOut(out);<newline46mondego>System.out.println(<doubleQuotes46>#!/usr/bin/python<doubleQuotes46>);<newline46mondego>System.out.println(<doubleQuotes46>print 'hello world'<doubleQuotes46>);<newline46mondego>"
"5214splitHere46","12828847splitHere46","EditText emailFrom"
"5215splitHere46","12828847splitHere46","String from = emailFrom.getText().toString(); // Getting String value from EditText and storing it in <doubleQuotes46>from<doubleQuotes46> String<newline46mondego>SharedPreferences settings = getSharedPreferences(<doubleQuotes46>MyPreferencesFile<doubleQuotes46>, 0); // Opening SharedPreferences <newline46mondego>SharedPreferences.Editor editor = settings.edit(); // Opening editor for SharedPreferences<newline46mondego>editor.putString(<doubleQuotes46>exampleName<doubleQuotes46>, from); // You are putting here a String <doubleQuotes46>from<doubleQuotes46> and give it a <doubleQuotes46>exampleName<doubleQuotes46> name. Later you will use this name to restore data.<newline46mondego>"
"5216splitHere46","12828847splitHere46","SharedPreferences settings = getSharedPreferences(<doubleQuotes46>MyPreferencesFile<doubleQuotes46>, 0); // Again opening SharedPreferences<newline46mondego>String from = settings.getString(<doubleQuotes46>exampleName<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>); // The second argument is the default value. The default value will be set if there wasn't saved any data with <doubleQuotes46>exampleName<doubleQuotes46> name<newline46mondego>if(from != <doubleQuotes46><doubleQuotes46>) // If <doubleQuotes46>from<doubleQuotes46> is not empty, it means that the data was stored in SharedPreferences<newline46mondego>   emailFrom.setText(from); // Setting text in your EditText<newline46mondego>"
"5217splitHere46","12828955splitHere46","em.getReference(Account.class, accountId)"
"5218splitHere46","12828991splitHere46","/WEB-INF/lib"
"5219splitHere46","12828991splitHere46","/WEB-INF/lib"
"5220splitHere46","12829108splitHere46","public class MyLocal extends ThirdClass implements Serializable<newline46mondego>"
"5221splitHere46","12829155splitHere46","JTree"
"5222splitHere46","12829155splitHere46","getCellEditorValue"
"5223splitHere46","12829155splitHere46","valuesForPathChanged"
"5224splitHere46","12829155splitHere46","setUserObject"
"5225splitHere46","12829155splitHere46","String"
"5226splitHere46","12829155splitHere46","setUserObject"
"5227splitHere46","12829155splitHere46","String"
"5228splitHere46","12829167splitHere46","// ...<newline46mondego>Long id = dataService.save(data);<newline46mondego>// ...<newline46mondego>response.sendRedirect(request.getContextPath() + <doubleQuotes46>/index?editId=<doubleQuotes46> + id);<newline46mondego>"
"5229splitHere46","12829167splitHere46","/index"
"5230splitHere46","12829167splitHere46","@Override<newline46mondego>protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {<newline46mondego>    Long editId = Long.valueOf(request.getParameter(<doubleQuotes46>editId<doubleQuotes46>)); // Handle nullcheck yourself.<newline46mondego>    Data editData = dataService.find(editId);<newline46mondego>    request.setAttribute(<doubleQuotes46>editData<doubleQuotes46>, editData); // For the edit form.<newline46mondego>    List<Data> allData = dataService.list();<newline46mondego>    request.setAttribute(<doubleQuotes46>allData<doubleQuotes46>, allData); // For the table/list of all data.<newline46mondego>    request.getRequestDispatcher(<doubleQuotes46>/index.jsp<doubleQuotes46>).forward(request, response);<newline46mondego>}<newline46mondego>"
"5231splitHere46","12829210splitHere46","HashSet"
"5232splitHere46","12829210splitHere46","remove()"
"5233splitHere46","12829210splitHere46","true"
"5234splitHere46","12829210splitHere46","HashMap#remove()"
"5235splitHere46","12829210splitHere46","null"
"5236splitHere46","12829210splitHere46","HashMap#remove()"
"5237splitHere46","12829210splitHere46","null"
"5238splitHere46","12829210splitHere46","HashSet.remove()"
"5239splitHere46","12829264splitHere46","JOptionPane"
"5240splitHere46","12829264splitHere46","public class TestOptionPane02 {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        new TestOptionPane02();<newline46mondego>    }<newline46mondego><newline46mondego>    public TestOptionPane02() {<newline46mondego>        EventQueue.invokeLater(new Runnable() {<newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                try {<newline46mondego>                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());<newline46mondego>                } catch (ClassNotFoundException ex) {<newline46mondego>                } catch (InstantiationException ex) {<newline46mondego>                } catch (IllegalAccessException ex) {<newline46mondego>                } catch (UnsupportedLookAndFeelException ex) {<newline46mondego>                }<newline46mondego><newline46mondego>                JTextField textField = new JTextField(10);<newline46mondego><newline46mondego>                String btnString1 = <doubleQuotes46>Save Object<doubleQuotes46>;<newline46mondego>                String btnString2 = <doubleQuotes46>Delete Object<doubleQuotes46>;<newline46mondego><newline46mondego>                //Create an array of the text and components to be displayed.<newline46mondego>                String msgString1 = <doubleQuotes46>Object label:<doubleQuotes46>;<newline46mondego>                Object[] array = {msgString1, textField};<newline46mondego>                //Create an array specifying the number of dialog buttons<newline46mondego>                //and their text.<newline46mondego>                Object[] options = {btnString1, btnString2};<newline46mondego><newline46mondego>                int result = JOptionPane.showOptionDialog(null, array, <doubleQuotes46><doubleQuotes46>, JOptionPane.YES_NO_OPTION, JOptionPane.PLAIN_MESSAGE, <doubleQuotes46>New Object<doubleQuotes46>, options, options[0]);<newline46mondego>                switch (result) {<newline46mondego>                    case 0:<newline46mondego>                        System.out.println(<doubleQuotes46>Save me<doubleQuotes46>);<newline46mondego>                        break;<newline46mondego>                    case 1:<newline46mondego>                        System.out.println(<doubleQuotes46>Delete me<doubleQuotes46>);<newline46mondego>                        break;<newline46mondego>                }<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5241splitHere46","12829264splitHere46","JOptionPane.VALUE_PROPERTY"
"5242splitHere46","12829264splitHere46","JOptionPane.UNINITIALIZED_VALUE"
"5243splitHere46","12829264splitHere46","JOptionPane#getValue"
"5244splitHere46","12829264splitHere46","Object"
"5245splitHere46","12829264splitHere46","JOptionPane.showXxxDialog"
"5246splitHere46","12829264splitHere46","String"
"5247splitHere46","12829264splitHere46","JButton"
"5248splitHere46","12829288splitHere46","public static int getIthNumber(int seed, int i){<newline46mondego>    return new Random(seed * 10123457689L + i * 101111).nextInt();<newline46mondego>}<newline46mondego>"
"5249splitHere46","12829339splitHere46","name"
"5250splitHere46","12829339splitHere46","{ <doubleQuotes46>aditya<doubleQuotes46>, <doubleQuotes46>ankit<doubleQuotes46>, null, null, null, ... }<newline46mondego>"
"5251splitHere46","12829339splitHere46","name[i].equals(e_name)<newline46mondego>"
"5252splitHere46","12829339splitHere46","equals"
"5253splitHere46","12829339splitHere46","null"
"5254splitHere46","12829339splitHere46","List<String>"
"5255splitHere46","12829339splitHere46","List<String> names = new ArrayList<String>();<newline46mondego>"
"5256splitHere46","12829339splitHere46","ob1.name[0]=<doubleQuotes46>aditya<doubleQuotes46>;<newline46mondego>ob1.name[1]=<doubleQuotes46>ankit<doubleQuotes46>;<newline46mondego>"
"5257splitHere46","12829339splitHere46","ob1.names.add(<doubleQuotes46>aditya<doubleQuotes46>);<newline46mondego>ob1.names.add(<doubleQuotes46>ankit<doubleQuotes46>);<newline46mondego>"
"5258splitHere46","12829339splitHere46","for (int i = 0; i < names.size(); i++) {<newline46mondego>    if (names.get(i).equals(e_name)) {<newline46mondego>        return i;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5259splitHere46","12829339splitHere46","if(e_name.equals(name[i]))<newline46mondego>"
"5260splitHere46","12829339splitHere46","e_name"
"5261splitHere46","12829339splitHere46","List<String>"
"5262splitHere46","12829354splitHere46","public class Logica implements Runnable {<newline46mondego>    [...]<newline46mondego>    @Override<newline46mondego>    public void run() {<newline46mondego>        [do loop]<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5263splitHere46","12829354splitHere46","//start the loop as a new thread...<newline46mondego>final Thread thread = new Thread(logika);<newline46mondego>thread.start();<newline46mondego>//keep listening for keyboard input in the main thread<newline46mondego>"
"5264splitHere46","12829411splitHere46","<bean id=<doubleQuotes46>Barnyard<doubleQuotes46> class=<doubleQuotes46>Company<doubleQuotes46>><newline46mondego>   <property name=<doubleQuotes46>owner<doubleQuotes46> value=<doubleQuotes46>#{Bob.father}<doubleQuotes46>/><newline46mondego></bean><newline46mondego>"
"5265splitHere46","12829584splitHere46","public class test {<newline46mondego><newline46mondego>   public static void main(String[] args){<newline46mondego>      node rootNode = new node(5);<newline46mondego>      rootNode.r = new node(4);<newline46mondego>      rootNode.l = new node(3);<newline46mondego>      rootNode.r.r = new node(2);<newline46mondego>      rootNode.r.l = new node(1);<newline46mondego>      rootNode.l.r = new node(6);<newline46mondego>      rootNode.l.l = new node(7);<newline46mondego><newline46mondego>      reverseInOrder(rootNode, 0);<newline46mondego>   }<newline46mondego><newline46mondego>   public static void reverseInOrder(node h, int indent) { <newline46mondego>      if (h != null) {<newline46mondego>         indent++;<newline46mondego>         reverseInOrder(h.r, indent);<newline46mondego><newline46mondego>         for (int i = 0; i < indent; i++) {<newline46mondego>            System.out.print(<doubleQuotes46>  <doubleQuotes46>);<newline46mondego>         }<newline46mondego>         System.out.println(h.value);<newline46mondego><newline46mondego>         reverseInOrder(h.l, indent);<newline46mondego>      }<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"5266splitHere46","12829584splitHere46","indent--"
"5267splitHere46","12829584splitHere46","2<newline46mondego>    4<newline46mondego>      1<newline46mondego>  5<newline46mondego>      6<newline46mondego>    3<newline46mondego>      7<newline46mondego>"
"5268splitHere46","12829639splitHere46","FileOutputStream outputStream = new FileOutputStream(new File(context.getCacheDir(), FILENAME), false);<newline46mondego>OutputStream out = new BufferedOutputStream(outputStream);<newline46mondego>byte[] loginBuffer = new byte[1024];<newline46mondego>int byteRead = 0;<newline46mondego>while((byteRead = in.read(loginBuffer)) != -1) {<newline46mondego>    out.write(loginBuffer, 0, byteRead);<newline46mondego>}<newline46mondego>out.close();<newline46mondego>"
"5269splitHere46","12829687splitHere46","Stock"
"5270splitHere46","12829687splitHere46","synchronize"
"5271splitHere46","12829687splitHere46","Thread2"
"5272splitHere46","12829687splitHere46","Stock"
"5273splitHere46","12829687splitHere46","Thread2"
"5274splitHere46","12829687splitHere46","volatile"
"5275splitHere46","12829695splitHere46","Run as > Run on Server"
"5276splitHere46","12829799splitHere46","<web-app version=<doubleQuotes46>3.0<doubleQuotes46> xmlns=<doubleQuotes46>http://java.sun.com/xml/ns/javaee<doubleQuotes46> xmlns:xsi=<doubleQuotes46>http://www.w3.org/2001/XMLSchema-instance<doubleQuotes46> xsi:schemaLocation=<doubleQuotes46>http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd<doubleQuotes46>><newline46mondego>    <display-name>Jester</display-name><newline46mondego>    <context-param><newline46mondego>        <param-name>contextConfigLocation</param-name><newline46mondego>        <param-value><newline46mondego>            /WEB-INF/jester-persistence.xml<newline46mondego>            /WEB-INF/jester-service.xml<newline46mondego>        </param-value><newline46mondego>    </context-param><newline46mondego><newline46mondego>    <listener><newline46mondego>        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class><newline46mondego>    </listener><newline46mondego><newline46mondego><newline46mondego>    <servlet><newline46mondego>        <servlet-name>jester</servlet-name><newline46mondego>        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class><newline46mondego><newline46mondego>        <!-- Needed for processing multipart forms ahead of the HiddenHttpMethodFilter --><newline46mondego>        <multipart-config><newline46mondego>            <location>/tmp</location><newline46mondego>            <max-file-size>20848820</max-file-size><newline46mondego>            <max-request-size>418018841</max-request-size><newline46mondego>            <file-size-threshold>1048576</file-size-threshold><newline46mondego>        </multipart-config><newline46mondego>    </servlet><newline46mondego><newline46mondego>    <servlet-mapping><newline46mondego>        <servlet-name>jester</servlet-name><newline46mondego>        <url-pattern>/</url-pattern><newline46mondego>    </servlet-mapping><newline46mondego><newline46mondego>    <!-- Needed for processing multipart forms ahead of the HiddenHttpMethodFilter --><newline46mondego>    <filter><newline46mondego>        <filter-name>multipartFilter</filter-name><newline46mondego>        <filter-class>org.springframework.web.multipart.support.MultipartFilter</filter-class><newline46mondego>        <init-param><newline46mondego>            <param-name>multipartResolverBeanName</param-name><newline46mondego>            <param-value>filterMultipartResolver</param-value><newline46mondego>        </init-param><newline46mondego>    </filter><newline46mondego><newline46mondego>    <filter-mapping><newline46mondego>        <filter-name>multipartFilter</filter-name><newline46mondego>        <servlet-name>jester</servlet-name><newline46mondego>    </filter-mapping><newline46mondego><newline46mondego>    <!-- Convert Masqueraded PUT and DELETE requests --><newline46mondego>    <filter><newline46mondego>        <filter-name>hiddenHttpMethodFilter</filter-name><newline46mondego>        <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class><newline46mondego>    </filter><newline46mondego><newline46mondego>    <filter-mapping><newline46mondego>        <filter-name>hiddenHttpMethodFilter</filter-name><newline46mondego>        <servlet-name>jester</servlet-name><newline46mondego>    </filter-mapping><newline46mondego><newline46mondego></web-app><newline46mondego>"
"5277splitHere46","12829820splitHere46","do<newline46mondego>  statement1();<newline46mondego>while(booleanValue1);<newline46mondego>while(booleanValue2);<newline46mondego>"
"5278splitHere46","12829872splitHere46","public MockTypes getMockTypeByName(String adaptor, String step)<newline46mondego>{<newline46mondego>    for(MockTypes m : MockTypes.values())<newline46mondego>    {<newline46mondego>        if(m.getAdaptor().equals(adaptor) && <newline46mondego>           m.getStep().equals(step)) return m;<newline46mondego>    }<newline46mondego>    return null;<newline46mondego>}<newline46mondego>"
"5279splitHere46","12830001splitHere46","if (run == 0) {<newline46mondego>    throw new IllegalArgumentException(<doubleQuotes46>Divide by zero error<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"5280splitHere46","12830162splitHere46","developerBuild << {<newline46mondego>  exec{<newline46mondego>    commandLine = ['cmd', '/c', 'net', 'stop', 'Foo']<newline46mondego>    ignoreExitValue = true<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"5281splitHere46","12830195splitHere46","upload.isDone()"
"5282splitHere46","12830195splitHere46","System.out.println(<doubleQuotes46>upload prog <doubleQuotes46> + upload.getProgress().getPercentTransfered() + <doubleQuotes46> state <doubleQuotes46> + upload.getState());<newline46mondego>"
"5283splitHere46","12830195splitHere46","Completed"
"5284splitHere46","12830203splitHere46","com_lan_factorial_fac.cpp.callMain"
"5285splitHere46","12830203splitHere46",".cpp"
"5286splitHere46","12830203splitHere46","callMain"
"5287splitHere46","12830203splitHere46",".cpp"
"5288splitHere46","12830203splitHere46","LOCAL_SRC_FILES := com_lan_factorial_callMain.cpp some_other_file_name.cpp<newline46mondego>"
"5289splitHere46","12830203splitHere46","LOCAL_SRC_FILES := com_lan_factorial_callMain.cpp \<newline46mondego>    some_other_file_name.cpp<newline46mondego>"
"5290splitHere46","12830203splitHere46","com_lan_factorial_fac.h"
"5291splitHere46","12830203splitHere46","LOCAL_PATH:= $(call my-dir) <newline46mondego>include $(CLEAR_VARS) <newline46mondego><newline46mondego>LOCAL_CFLAGS := -Wno-psabi <newline46mondego><newline46mondego>LOCAL_MODULE := libfac <newline46mondego><newline46mondego>LOCAL_SRC_FILES := fac.cpp Main.cpp<newline46mondego><newline46mondego>include $(BUILD_STATIC_LIBRARY) <newline46mondego>"
"5292splitHere46","12830203splitHere46","fac()"
"5293splitHere46","12830203splitHere46","Java_com_lan_factorial_FacLib_fac"
"5294splitHere46","12830203splitHere46","extern long fac(long n);<newline46mondego>"
"5295splitHere46","12830203splitHere46","long"
"5296splitHere46","12830203splitHere46","jlong"
"5297splitHere46","12830203splitHere46","fac()"
"5298splitHere46","12830203splitHere46","jlong"
"5299splitHere46","12830292splitHere46","selFile"
"5300splitHere46","12830292splitHere46","fc.getSelectedFile()"
"5301splitHere46","12830306splitHere46","class Configuration {<newline46mondego><newline46mondego>    int threadCount = 10;<newline46mondego><newline46mondego>    String secretKey;<newline46mondego><newline46mondego>    @Description(<doubleQuotes46>Number of workers. Default value is number of available cores.<doubleQuotes46>)<newline46mondego>    int workerThreadCount = Runtime.getRuntime().availableProcessors();<newline46mondego><newline46mondego>    /** Use default settings */<newline46mondego>    Configuration() {<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    /** read the settings from the file */<newline46mondego>    Configuration(Properties props) {<newline46mondego>        for (String prop : props) {<newline46mondego>            Field f = getClass().getField(prop);<newline46mondego>            f.set(this, props.getValue(prop)); <newline46mondego>            // TODO: type conversion, <newline46mondego>            // e.g. with PropertyEditors, <newline46mondego>            // or Spring's ConversionService, <newline46mondego>            // or invoking the constructor that takes a single string argument, <newline46mondego>            // or ...<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    void save() {<newline46mondego>        for (Field f : getClass().getFields()) {<newline46mondego>            // TODO save the setting<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5302splitHere46","12830306splitHere46","new Configuration().save(file)"
"5303splitHere46","12830306splitHere46","if(config.value(Prop.PROXY_ENABLED,Boolean.class)){<newline46mondego>"
"5304splitHere46","12830306splitHere46","if (config.proxyEnabled) {<newline46mondego>"
"5305splitHere46","12830418splitHere46","{<newline46mondego>        Menu.display_menu();<newline46mondego>        m = new Menu(0); // here!<newline46mondego><newline46mondego>    }<newline46mondego>"
"5306splitHere46","12830527splitHere46","if"
"5307splitHere46","12830527splitHere46","int count"
"5308splitHere46","12830527splitHere46","for (int i = 0; i < grades.length; i++) {      //loop through all the grades<newline46mondego>   if(grade[i] < 60) {                         //if the grade is over 60<newline46mondego>       sum = sum + grades[i];                  //add the grade to the sum<newline46mondego>       count++                                 //remember how many grades so we can get average<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"5309splitHere46","12830527splitHere46","grades.length"
"5310splitHere46","12830527splitHere46","return"
"5311splitHere46","12830527splitHere46","return sum/count ;                             //calculate average<newline46mondego>"
"5312splitHere46","12830527splitHere46","public float getPercentFailing(float[] grades) {<newline46mondego>    int count=0;<newline46mondego>    float sum= 0;<newline46mondego>    for (int i = 0; i < grades.length; i++) {<newline46mondego>          if(grade[i] < 60) {<newline46mondego>             sum = sum + grades[i];<newline46mondego>             count++<newline46mondego>          }<newline46mondego>    }<newline46mondego>    return sum/count;<newline46mondego><newline46mondego>}<newline46mondego>"
"5313splitHere46","12830555splitHere46","Container"
"5314splitHere46","12830555splitHere46","TextArea"
"5315splitHere46","12830555splitHere46","Container"
"5316splitHere46","12830555splitHere46","Container"
"5317splitHere46","12830555splitHere46","Form"
"5318splitHere46","12830555splitHere46","Label pubDate = new Label(detailNews.getPubDate().substring(0, 16));<newline46mondego>        Label title=new Label();<newline46mondego>        title.setText(detailNews.getTitle());<newline46mondego>        title.startTicker();<newline46mondego>        pubDate.getStyle().setFont(Font.createSystemFont(Font.FACE_SYSTEM, Font.STYLE_BOLD, Font.SIZE_SMALL));<newline46mondego>            Image geImage = detailNews.geImage(); <newline46mondego>        Label icon=new Label(geImage);<newline46mondego><newline46mondego>        Container container = new Container(new BoxLayout(BoxLAyout.Y_AXIS));<newline46mondego>        container.addComponent(title);<newline46mondego>        container.addComponent(pubDate);<newline46mondego>        container.addComponent(icon);<newline46mondego>        container.addComponent(textarea);<newline46mondego>        form2.addComponent(container);<newline46mondego><newline46mondego>        textarea.setText(detailNews.getDescription());<newline46mondego>        textarea.requestFocus();<newline46mondego>        form2.show();<newline46mondego>"
"5319splitHere46","12830586splitHere46","UPDATE person p<newline46mondego>SET    total = d.calc_total<newline46mondego>FROM (<newline46mondego>  SELECT data_person_id, sum(data_a + data_b + data_c) as calc_total<newline46mondego>  FROM   data<newline46mondego>  GROUP  BY 1<newline46mondego>) d<newline46mondego>WHERE  p.person_id = d.data_person_id<newline46mondego>AND    p.total IS DISTINCT FROM d.calc_total;<newline46mondego>"
"5320splitHere46","12830586splitHere46","calc_total"
"5321splitHere46","12830586splitHere46","data"
"5322splitHere46","12830586splitHere46","data_person_id"
"5323splitHere46","12830586splitHere46","UPDATE"
"5324splitHere46","12830586splitHere46","IS DISTINCT FROM"
"5325splitHere46","12830586splitHere46","NOT NULL"
"5326splitHere46","12830586splitHere46","="
"5327splitHere46","12830596splitHere46","FileInputStream"
"5328splitHere46","12830596splitHere46","Stream"
"5329splitHere46","12830596splitHere46","SaxParser.parse()"
"5330splitHere46","12830596splitHere46","FileInputStream"
"5331splitHere46","12830596splitHere46","SaxParser"
"5332splitHere46","12830596splitHere46","File"
"5333splitHere46","12830596splitHere46","while(notfound)<newline46mondego>{<newline46mondego>    SaxParser.parse(new File(<doubleQuotes46>c:/tmp/123.xml<doubleQuotes46>), sampleHandler);<newline46mondego>    notFound = sampleHandler.checkIfFound();<newline46mondego>}<newline46mondego>"
"5334splitHere46","12830596splitHere46","FileInputStream"
"5335splitHere46","12830868splitHere46","onCreate()"
"5336splitHere46","12830868splitHere46","public class WhileImOut extends Application {<newline46mondego><newline46mondego>    public static TaskManager taskManager;<newline46mondego>    private static Context appContext;<newline46mondego><newline46mondego>    public void onCreate() {<newline46mondego>        super();<newline46mondego>        appContext = this;<newline46mondego>        initialize();<newline46mondego>    }<newline46mondego><newline46mondego>    public static void initialize() {<newline46mondego>        if (taskManager == null && Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED)) {<newline46mondego>            try{<newline46mondego>            File f = appContext.getExternalFilesDir(null); // Exception being thrown here<newline46mondego>            taskManager = new TaskManager(f.getAbsolutePath());<newline46mondego>            }catch(NullPointerException e){<newline46mondego>                Log.d(<doubleQuotes46>Bad<doubleQuotes46>,<doubleQuotes46>NPE<doubleQuotes46>);<newline46mondego>            }catch(Exception e){<newline46mondego><newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5337splitHere46","12830868splitHere46","initialize()"
"5338splitHere46","12830868splitHere46","public"
"5339splitHere46","12830965splitHere46","if (i == 0) { <newline46mondego>        Integer codigo = Integer.parseInt(tabelaImoveis.getValueAt(linha, 0).toString());<newline46mondego>        for (Imovel imovel : imovelLista) { <newline46mondego>            if (imovel.getCodigo() == codigo) {                               <newline46mondego>                frmAlterar alterar = new frmAlterar();  // *** this should be a modal JDialog<newline46mondego>                alterar.setLocationRelativeTo(null); <newline46mondego>                // alterar.setVisible(true);<newline46mondego>                // alterar.setDefaultCloseOperation(alterar.DISPOSE_ON_CLOSE);<newline46mondego>                alterar.setarAtributos(imovel);<newline46mondego>                alterar.setVisible(true);<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"5340splitHere46","12831041splitHere46","SERIALIZABLE"
"5341splitHere46","12831041splitHere46","SERIALIZABLE"
"5342splitHere46","12831041splitHere46","SERIALIZABLE"
"5343splitHere46","12831041splitHere46","count = query(<doubleQuotes46>SELECT count(*) FROM the_table<doubleQuotes46>);<newline46mondego>if (count < threshold):<newline46mondego>    query(<doubleQuotes46>INSERT INTO the_table (...) VALUES (...)<doubleQuotes46>);<newline46mondego>"
"5344splitHere46","12831041splitHere46","psql"
"5345splitHere46","12831041splitHere46","LOCK"
"5346splitHere46","12831041splitHere46","INSERT"
"5347splitHere46","12831041splitHere46","LOCK TABLE my_table IN EXCLUSIVE MODE"
"5348splitHere46","12831041splitHere46","SELECT"
"5349splitHere46","12831041splitHere46","EXCLUSIVE"
"5350splitHere46","12831041splitHere46","SELECT"
"5351splitHere46","12831041splitHere46","SESSION 1                               SESSION 2<newline46mondego><newline46mondego>create table ser_test( x text );<newline46mondego><newline46mondego>BEGIN TRANSACTION <newline46mondego>ISOLATION LEVEL SERIALIZABLE;<newline46mondego><newline46mondego><newline46mondego>                                        BEGIN TRANSACTION <newline46mondego>                                        ISOLATION LEVEL SERIALIZABLE;<newline46mondego><newline46mondego>SELECT count(*) FROM ser_test ;<newline46mondego><newline46mondego>                                        SELECT count(*) FROM ser_test ;<newline46mondego><newline46mondego>INSERT INTO ser_test(x) VALUES ('bob');<newline46mondego><newline46mondego><newline46mondego>                                        INSERT INTO ser_test(x) VALUES ('bob');<newline46mondego><newline46mondego> COMMIT;<newline46mondego><newline46mondego>                                        COMMIT;<newline46mondego>"
"5352splitHere46","12831041splitHere46","st commits succeeds then the second"
"5353splitHere46","12831041splitHere46","regress=# COMMIT;<newline46mondego>ERROR:  could not serialize access due to read/write dependencies among transactions<newline46mondego>DETAIL:  Reason code: Canceled on identification as a pivot, during commit attempt.<newline46mondego>HINT:  The transaction might succeed if retried.<newline46mondego>"
"5354splitHere46","12831045splitHere46","List.addAll"
"5355splitHere46","12831045splitHere46","List.removeAll"
"5356splitHere46","12831089splitHere46","getHolder()"
"5357splitHere46","12831089splitHere46","SurfaceView"
"5358splitHere46","12831089splitHere46","View"
"5359splitHere46","12831089splitHere46","public class GameView extends SurfaceView {<newline46mondego>"
"5360splitHere46","12831112splitHere46","new Thread((Runnable) new echoer())"
"5361splitHere46","12831112splitHere46","run()"
"5362splitHere46","12831112splitHere46","NullPointerException"
"5363splitHere46","12831148splitHere46","public class TestApplet02 extends Applet implements KeyListener, Runnable {<newline46mondego><newline46mondego>    Button options = new Button(<doubleQuotes46>Options<doubleQuotes46>);<newline46mondego>    Thread thread = new Thread(this);<newline46mondego>    int y = 0;<newline46mondego><newline46mondego>    public void init() {<newline46mondego>        thread.start();<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void start() {<newline46mondego>        SwingUtilities.invokeLater(new Runnable() {<newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                setLayout(new BorderLayout());<newline46mondego>                addKeyListener(TestApplet02.this);<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>    public void paint(Graphics graphics) {<newline46mondego>        super.paint(graphics);<newline46mondego>        Graphics2D g2d = (Graphics2D) graphics;<newline46mondego>        y++;<newline46mondego>        if (y > getHeight()) {<newline46mondego>            y = 0;<newline46mondego>        }<newline46mondego>        g2d.drawLine(0, y, getWidth(), y);<newline46mondego>    }<newline46mondego><newline46mondego>    public void run() {<newline46mondego>        try {<newline46mondego>            while (true) {<newline46mondego>                thread.sleep(40);<newline46mondego>                SwingUtilities.invokeLater(new Runnable() {<newline46mondego>                    @Override<newline46mondego>                    public void run() {<newline46mondego>                        repaint();<newline46mondego>                    }<newline46mondego>                });<newline46mondego>            }<newline46mondego>        } catch (InterruptedException exception) {<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public void keyPressed(KeyEvent keyEvent) {<newline46mondego>        switch (keyEvent.getKeyCode()) {<newline46mondego>            case KeyEvent.VK_ESCAPE:<newline46mondego>                // pause game<newline46mondego>                add(options);<newline46mondego>                invalidate();<newline46mondego>                revalidate();<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public void keyReleased(KeyEvent keyEvent) {<newline46mondego>    }<newline46mondego><newline46mondego>    public void keyTyped(KeyEvent keyEvent) {<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5364splitHere46","12831148splitHere46","case KeyEvent.VK_ESCAPE:<newline46mondego>    direction = -direction;<newline46mondego><newline46mondego>    if (direction < 0) {<newline46mondego>        add(options);<newline46mondego>    } else {<newline46mondego>        remove(options);<newline46mondego>    }<newline46mondego>"
"5365splitHere46","12831148splitHere46","revalidate"
"5366splitHere46","12831148splitHere46","invalidate();<newline46mondego>revalidate();<newline46mondego>repaint();<newline46mondego>"
"5367splitHere46","12831292splitHere46","<html><newline46mondego><applet <newline46mondego>    archive=<doubleQuotes46>http://localhost/applet/JavaQuiz.jar<doubleQuotes46> <newline46mondego>    code=<doubleQuotes46>JavaQuiz.class<doubleQuotes46><newline46mondego>    width = 300<newline46mondego>    height = 300 /><newline46mondego></html><newline46mondego>"
"5368splitHere46","12831292splitHere46","http://"
"5369splitHere46","12831292splitHere46","codebase=<doubleQuotes46>localhost/applet/<doubleQuotes46>"
"5370splitHere46","12831292splitHere46","codebase=<doubleQuotes46>http://localhost/applet/<doubleQuotes46>"
"5371splitHere46","12831370splitHere46","HashMap<String,String>"
"5372splitHere46","12831370splitHere46","Patient"
"5373splitHere46","12831370splitHere46",". . .<newline46mondego>while (reader.hasNext()) {<newline46mondego>    s = reader.nextLine();<newline46mondego>    Scanner line = new Scanner(s);<newline46mondego>    String cmd;<newline46mondego><newline46mondego>    if (!s.trim().isEmpty()) {<newline46mondego>        if (p == null) {<newline46mondego>            // starting a new block -- create a new patient record<newline46mondego>            p = new Patient();<newline46mondego>            recordList.add(p);<newline46mondego>        }<newline46mondego><newline46mondego>        if (cmd.equalsIgnoreCase(<doubleQuotes46>name<doubleQuotes46>)) {<newline46mondego>            index++;<newline46mondego>            p.setName(line.nextLine());<newline46mondego>            addressActive = false;<newline46mondego>            mhActive = false;<newline46mondego>        } else if (cmd.equalsIgnoreCase(<doubleQuotes46>address<doubleQuotes46>)) {<newline46mondego>            if (line.hasNext()) {<newline46mondego>                p.setAddress(line.nextLine().trim());<newline46mondego>            }<newline46mondego>            addressActive = true;<newline46mondego>            mhActive = false;<newline46mondego><newline46mondego>        } else if (cmd.equalsIgnoreCase(<doubleQuotes46>birthday<doubleQuotes46>)) {<newline46mondego>            p.setBirthday(line.nextLine());<newline46mondego>            addressActive = mhActive = false;<newline46mondego>        } else if (cmd.equalsIgnoreCase(<doubleQuotes46>email<doubleQuotes46>)) {<newline46mondego>            if (line.hasNext()) {<newline46mondego>                p.setEmail(line.nextLine());<newline46mondego>            }<newline46mondego>            addressActive = mhActive = false;<newline46mondego>        } else if (cmd.equalsIgnoreCase(<doubleQuotes46>phone<doubleQuotes46>)) {<newline46mondego>            if (line.hasNextInt()) {<newline46mondego>                p.setPhone(line.nextInt());<newline46mondego>            }<newline46mondego>            addressActive = mhActive = false;<newline46mondego>        } else if (cmd.equalsIgnoreCase(<doubleQuotes46>medicalHistory<doubleQuotes46>)) {<newline46mondego>            mh = new MedicalHistory();<newline46mondego>            //...parse the medicalHistory<newline46mondego>            addressActive = false;<newline46mondego>            mhActive = true;<newline46mondego>        } else if (addressActive) {<newline46mondego>            String address = p.getAddress() + <doubleQuotes46> <doubleQuotes46> + s.trim();<newline46mondego>            p.setAddress(address);<newline46mondego>        } else if (mhActive) {<newline46mondego>            //to deal with multiple medical histories<newline46mondego>        } else<newline46mondego>            System.out.println(<doubleQuotes46>Error: no command:<doubleQuotes46> + s);<newline46mondego>        }<newline46mondego>    } else {<newline46mondego>        // blank line indicates end of block<newline46mondego>        p = null;<newline46mondego>    }<newline46mondego>}<newline46mondego>. . .<newline46mondego>"
"5374splitHere46","12831370splitHere46","p"
"5375splitHere46","12831370splitHere46","recordList"
"5376splitHere46","12831370splitHere46","index"
"5377splitHere46","12831370splitHere46","recordList"
"5378splitHere46","12831430splitHere46","String"
"5379splitHere46","12831430splitHere46","int"
"5380splitHere46","12831527splitHere46","Thread.sleep(millis)"
"5381splitHere46","12831527splitHere46","Thread.sleep(5)"
"5382splitHere46","12831527splitHere46","display_game"
"5383splitHere46","12831527splitHere46","long time=System.nanoTime()"
"5384splitHere46","12831596splitHere46","keyword"
"5385splitHere46","12831596splitHere46","keyword"
"5386splitHere46","12831633splitHere46","while(scale<0);<newline46mondego>Shape.setScaleFactor(scale);<newline46mondego><newline46mondego>} // Remove this parenthesis.<newline46mondego>break;<newline46mondego>"
"5387splitHere46","12831655splitHere46","final"
"5388splitHere46","12831687splitHere46","getElementsByTagName(<doubleQuotes46>*<doubleQuotes46>)"
"5389splitHere46","12831687splitHere46","DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();<newline46mondego>    DocumentBuilder db = dbf.newDocumentBuilder();<newline46mondego>    Document doc = db.parse(file);<newline46mondego>    doc.getDocumentElement().normalize();<newline46mondego>    System.out.println(<doubleQuotes46>Root element <doubleQuotes46> + doc.getDocumentElement().getNodeName());<newline46mondego><newline46mondego>    NodeList nodeList=doc.getElementsByTagName(<doubleQuotes46>*<doubleQuotes46>);<newline46mondego>    for (int i=0; i<nodeList.getLength(); i++) <newline46mondego>    {<newline46mondego>        // Get element<newline46mondego>        Element element = (Element)nodeList.item(i);<newline46mondego>        System.out.println(element.getNodeName());<newline46mondego>    }<newline46mondego>"
"5390splitHere46","12831748splitHere46","<ListView android:id=<doubleQuotes46>@android:id/list<doubleQuotes46> android:layout_width=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46>></ListView><newline46mondego>"
"5391splitHere46","12831748splitHere46","setContentView()"
"5392splitHere46","12831748splitHere46","onCreate()"
"5393splitHere46","12831748splitHere46","<doubleQuotes46>@android:id/list<doubleQuotes46>"
"5394splitHere46","12831753splitHere46","validate();"
"5395splitHere46","12831835splitHere46","do<newline46mondego>{<newline46mondego>    System.out.println(<doubleQuotes46>\nEnter scale factor<doubleQuotes46>);<newline46mondego>    scale = input.nextDouble();<newline46mondego>}<newline46mondego>while(scale < 0);<newline46mondego>"
"5396splitHere46","12831835splitHere46","do<newline46mondego>{<newline46mondego>    System.out.println(<doubleQuotes46>\nEnter scale factor<doubleQuotes46>);<newline46mondego>    scale = input.nextDouble();<newline46mondego>    System.out.println(<doubleQuotes46>Scale entered was: <doubleQuotes46> + scale);<newline46mondego>    System.out.println(<doubleQuotes46>Is scale < 0? <doubleQuotes46> + (scale < 0));<newline46mondego>}<newline46mondego>while(scale < 0);<newline46mondego>"
"5397splitHere46","12831835splitHere46","String"
"5398splitHere46","12831835splitHere46","Double.valueOf(String)"
"5399splitHere46","12831835splitHere46","scale"
"5400splitHere46","12831907splitHere46","SimpleAccountListener"
"5401splitHere46","12831907splitHere46","perform"
"5402splitHere46","12831907splitHere46","SimpleAccountActionsPanel"
"5403splitHere46","12831907splitHere46","SimpleAccountListener performFn = new SimpleAccountListener(perform); // <-- perform is not initialised...<newline46mondego>"
"5404splitHere46","12831907splitHere46","this"
"5405splitHere46","12831907splitHere46","SimpleAccountListener performFn = new SimpleAccountListener(this);<newline46mondego>"
"5406splitHere46","12831983splitHere46","<list-property name=<doubleQuotes46>visibility<doubleQuotes46>><newline46mondego>  <structure><newline46mondego>     <property name=<doubleQuotes46>format<doubleQuotes46>>all</property><newline46mondego>     <expression name=<doubleQuotes46>valueExpr<doubleQuotes46> type=<doubleQuotes46>javascript<doubleQuotes46>>your evaluation here</expression><newline46mondego>  </structure><newline46mondego></list-property><newline46mondego>"
"5407splitHere46","12831988splitHere46","Arrays.toString(letters)"
"5408splitHere46","12831988splitHere46","if(tmpst.equals(letters[j]))<newline46mondego>"
"5409splitHere46","12832026splitHere46","DocumentFilter"
"5410splitHere46","12832035splitHere46","isAlphanumeric2()"
"5411splitHere46","12832035splitHere46","isAlphanumeric()"
"5412splitHere46","12832035splitHere46","public class QuickTest extends TestCase {<newline46mondego><newline46mondego>    private final int reps = 1000000;<newline46mondego><newline46mondego>    public void testRegexp() {<newline46mondego>        for(int i = 0; i < reps; i++)<newline46mondego>            (<doubleQuotes46>ab4r3rgf<doubleQuotes46>+i).matches(<doubleQuotes46>[a-zA-Z0-9]<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>public void testIsAlphanumeric() {<newline46mondego>    for(int i = 0; i < reps; i++)<newline46mondego>        isAlphanumeric(<doubleQuotes46>ab4r3rgf<doubleQuotes46>+i);<newline46mondego>}<newline46mondego><newline46mondego>public void testIsAlphanumeric2() {<newline46mondego>    for(int i = 0; i < reps; i++)<newline46mondego>        isAlphanumeric2(<doubleQuotes46>ab4r3rgf<doubleQuotes46>+i);<newline46mondego>}<newline46mondego><newline46mondego>    public boolean isAlphanumeric(String str) {<newline46mondego>        for (int i=0; i<str.length(); i++) {<newline46mondego>            char c = str.charAt(i);<newline46mondego>            if (!Character.isDigit(c) && !Character.isLetter(c))<newline46mondego>                return false;<newline46mondego>        }<newline46mondego><newline46mondego>        return true;<newline46mondego>    }<newline46mondego><newline46mondego>    public boolean isAlphanumeric2(String str) {<newline46mondego>        for (int i=0; i<str.length(); i++) {<newline46mondego>            char c = str.charAt(i);<newline46mondego>            if (c < 0x30 || (c >= 0x3a && c <= 0x40) || (c > 0x5a && c <= 0x60) || c > 0x7a)<newline46mondego>                return false;<newline46mondego>        }<newline46mondego>        return true;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"5413splitHere46","12832043splitHere46","j"
"5414splitHere46","12832043splitHere46","j"
"5415splitHere46","12832043splitHere46","public static <E> ArrayList< E > union( ArrayList< E > array1, ArrayList< E > array2 ) {<newline46mondego>    // arrayUnion will be the arrayList that will be returned<newline46mondego>    ArrayList< E > arrayUnion = new ArrayList< E >( array1 );<newline46mondego>    arrayUnion.addAll( array2 );<newline46mondego>    E current;<newline46mondego><newline46mondego>    for ( int i = 0; i < arrayUnion.size( ); i++ ) {<newline46mondego><newline46mondego>        for ( int j = 0; j < arrayUnion.size( ); j++ ) {<newline46mondego>            current = arrayUnion.get( i );<newline46mondego><newline46mondego>            if ( i != j && current.equals( arrayUnion.get( j ) ) ) {<newline46mondego>                arrayUnion.remove( j );<newline46mondego>                --j;// This is set to check the item which replace the removed item at previous statement<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    return arrayUnion;<newline46mondego>}<newline46mondego>"
"5416splitHere46","12832049splitHere46","hasNextXXXX()"
"5417splitHere46","12832049splitHere46","Scanner"
"5418splitHere46","12832049splitHere46","nextInt()"
"5419splitHere46","12832049splitHere46","Scanner"
"5420splitHere46","12832049splitHere46","NoSuchElementException"
"5421splitHere46","12832049splitHere46","nextInt()"
"5422splitHere46","12832049splitHere46","hasNextInt()"
"5423splitHere46","12832049splitHere46","Scanner s = new Scanner(System.in);<newline46mondego>int choice = 0;<newline46mondego><newline46mondego>if(s.hasNextInt()) <newline46mondego>{<newline46mondego>   choice = s.nextInt();<newline46mondego>}<newline46mondego><newline46mondego>s.close();<newline46mondego>"
"5424splitHere46","12832065splitHere46","private int randomBetween(int min, int max) {<newline46mondego>    int range = max - min;<newline46mondego>    return min + numGen.nextInt(range);<newline46mondego>}<newline46mondego><newline46mondego>...<newline46mondego><newline46mondego>g.setColor(new Color(randomBetween(80,256), randomBetween(80,256), randomBetween(80,256)));<newline46mondego>"
"5425splitHere46","12832143splitHere46","SimpleDateFormat formatter = new SimpleDateFormat(<doubleQuotes46>dd MMM yyyy HH:mm<doubleQuotes46>);<newline46mondego>// date is Object of Date class of java.util<newline46mondego>String s = formatter.format(date);<newline46mondego>// now you can save 's' to the sqlite. <newline46mondego>"
"5426splitHere46","12832196splitHere46","ClassB"
"5427splitHere46","12832196splitHere46","ClassA"
"5428splitHere46","12832196splitHere46","Integer"
"5429splitHere46","12832196splitHere46","Number"
"5430splitHere46","12832196splitHere46","public void method(Integer d)"
"5431splitHere46","12832196splitHere46","public void method(Number n)"
"5432splitHere46","12832196splitHere46","ClassB"
"5433splitHere46","12832196splitHere46","public void method(Number n)"
"5434splitHere46","12832196splitHere46","public void method(Integer d)"
"5435splitHere46","12832196splitHere46","ClassA"
"5436splitHere46","12832196splitHere46","ClassA a = new ClassB(); //instance is of ClassB (runtime info)<newline46mondego>a.method(3);             //but the reference of type ClassA (compiletime info)<newline46mondego>"
"5437splitHere46","12832196splitHere46","ClassA"
"5438splitHere46","12832196splitHere46","public void method(Number n)"
"5439splitHere46","12832196splitHere46","Number"
"5440splitHere46","12832196splitHere46","Integer"
"5441splitHere46","12832216splitHere46","XWPFDocument doc = new XWPFDocument(is);<newline46mondego>"
"5442splitHere46","12832257splitHere46","Factory<Integer> vertexFactory = <newline46mondego>            new Factory<Integer>() {<newline46mondego>                int count;<newline46mondego>                public Integer create() {<newline46mondego>                    return count++;<newline46mondego>            }};<newline46mondego>"
"5443splitHere46","12832257splitHere46","vertexFactory.create()"
"5444splitHere46","12832257splitHere46","Integer"
"5445splitHere46","12832257splitHere46","List"
"5446splitHere46","12832257splitHere46","Factory"
"5447splitHere46","12832257splitHere46","Factory"
"5448splitHere46","12832281splitHere46","remove()"
"5449splitHere46","12832281splitHere46","while (!heap.isEmpty()) {<newline46mondego>    System.out.println(heap.remove());<newline46mondego>    newArray.add(heap.remove());<newline46mondego>}<newline46mondego>"
"5450splitHere46","12832281splitHere46","while (!heap.isEmpty()) {<newline46mondego>    final Double removed = heap.remove();<newline46mondego>    System.out.println(removed);<newline46mondego>    newArray.add(removed);<newline46mondego>}<newline46mondego>"
"5451splitHere46","12832499splitHere46","equals"
"5452splitHere46","12832499splitHere46","A"
"5453splitHere46","12832499splitHere46","contains"
"5454splitHere46","12832499splitHere46","public boolean equals(A a){<newline46mondego>       boolean bEqual = false;<newline46mondego>       if(this.value1!= null && a.value1!= null && <newline46mondego>          this.value1.eqauls(a.value1)<newline46mondego>          ........<newline46mondego>          ........<newline46mondego>        ) {<newline46mondego>          bEqual = true;              <newline46mondego>        }<newline46mondego>        return bEqual;<newline46mondego>   }<newline46mondego>"
"5455splitHere46","12832499splitHere46","listA1"
"5456splitHere46","12832499splitHere46","listA"
"5457splitHere46","12832499splitHere46","for(A a: listA1){<newline46mondego>     if(listA.contains(a)){<newline46mondego>        listA.remove(a);<newline46mondego>     }<newline46mondego>   }<newline46mondego>"
"5458splitHere46","12832503splitHere46","RuntimeException"
"5459splitHere46","12832503splitHere46","rollbackFor"
"5460splitHere46","12832503splitHere46","@Transactional(propagation = Propagation.REQUIRED,rollbackFor = MyException.class)<newline46mondego>public void updateSalary(final int increment){<newline46mondego>jdbcTemplate.update(<doubleQuotes46>update EMPLOYEE set emp_salary=emp_salary+?<doubleQuotes46>,increment);<newline46mondego>throw new RuntimeException(<doubleQuotes46>update exception<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"5461splitHere46","12832748splitHere46","Class noparams[] = {};<newline46mondego>        Class cls = Class.forName(<doubleQuotes46>com.test.Fruit<doubleQuotes46>);<newline46mondego>        Object obj = cls.newInstance();<newline46mondego><newline46mondego>        //call the printIt method<newline46mondego>        Method method = cls.getDeclaredMethod(<doubleQuotes46>apples<doubleQuotes46>, noparams);<newline46mondego>        method.invoke(obj, null);<newline46mondego>"
"5462splitHere46","12832975splitHere46","bowlNumber = bowlnNumber.substring(0,bowlNumber.length()-1) + <doubleQuotes46>2<doubleQuotes46>;<newline46mondego>"
"5463splitHere46","12833068splitHere46","linear runtime"
"5464splitHere46","12833242splitHere46","String[] cmd = {<doubleQuotes46>sh test.sh<doubleQuotes46>, <doubleQuotes46>/Path/to my/resource file<doubleQuotes46>};<newline46mondego>"
"5465splitHere46","12833242splitHere46","String[] cmd = {<doubleQuotes46>sh<doubleQuotes46>,  <doubleQuotes46>test.sh<doubleQuotes46>, <doubleQuotes46>/Path/to my/resource file<doubleQuotes46>};<newline46mondego>"
"5466splitHere46","12833245splitHere46","Action"
"5467splitHere46","12833253splitHere46","if (!keepRunning) { break; } else { do next directory/file(); }"
"5468splitHere46","12833253splitHere46",".sleep()"
"5469splitHere46","12833313splitHere46","String Heading = parser.getValue(e, KEY_NAME);<newline46mondego>int a=Heading.indexOf(<doubleQuotes46>|<doubleQuotes46>);<newline46mondego>String beforeSubString=Heading.substring(0, a);<newline46mondego>String afterSubString=Heading.substring(a, Heading.length()-1);<newline46mondego>String final=<doubleQuotes46><b><doubleQuotes46>+beforeSubString+<doubleQuotes46><b><doubleQuotes46>+<doubleQuotes46>|<doubleQuotes46>+afterSubString;<newline46mondego>title.setText(Html.fromHtml(final));<newline46mondego>"
"5470splitHere46","12833341splitHere46","HBox hbox = new HBox();<newline46mondego>Button button1 = new Button(<doubleQuotes46>Add<doubleQuotes46>);<newline46mondego>Button button2 = new Button(<doubleQuotes46>Remove<doubleQuotes46>);<newline46mondego>HBox.setHgrow(button1, Priority.ALWAYS);<newline46mondego>HBox.setHgrow(button2, Priority.ALWAYS);<newline46mondego>button1.setMaxWidth(Double.MAX_VALUE);<newline46mondego>button2.setMaxWidth(Double.MAX_VALUE);<newline46mondego>hbox.getChildren().addAll(button1, button2);<newline46mondego>"
"5471splitHere46","12833341splitHere46","import javafx.application.Application;<newline46mondego>import javafx.collections.ObservableList;<newline46mondego>import javafx.event.*;<newline46mondego>import javafx.scene.*;<newline46mondego>import javafx.scene.control.Button;<newline46mondego>import javafx.scene.layout.*;<newline46mondego>import javafx.stage.Stage;<newline46mondego><newline46mondego>// displays equal width buttons which fill a layout region's width.<newline46mondego>// http://stackoverflow.com/questions/12830402/javafx-2-buttons-size-fill-width-and-are-each-same-width<newline46mondego>public class HorizontallyTiledButtons extends Application {<newline46mondego>  public static void main(String[] args) { launch(args); }<newline46mondego>  @Override public void start(Stage stage) {<newline46mondego>    final Button addButton    = new Button(<doubleQuotes46>Add<doubleQuotes46>);<newline46mondego>    final Button removeButton = new Button(<doubleQuotes46>Remove<doubleQuotes46>);<newline46mondego>    final Button extraButton  = new Button(<doubleQuotes46>The wizard of Frobozz is watching<doubleQuotes46>);<newline46mondego><newline46mondego>    final ButtonBar buttonBar = new ButtonBar(5, addButton, removeButton);<newline46mondego><newline46mondego>    addButton.setOnAction(new EventHandler<ActionEvent>() {<newline46mondego>      @Override public void handle(ActionEvent event) {<newline46mondego>        buttonBar.addButton(extraButton);<newline46mondego>      }<newline46mondego>    });<newline46mondego><newline46mondego>    removeButton.setOnAction(new EventHandler<ActionEvent>() {<newline46mondego>      @Override public void handle(ActionEvent event) {<newline46mondego>        buttonBar.removeButton(extraButton);<newline46mondego>      }<newline46mondego>    });<newline46mondego><newline46mondego>    VBox layout = new VBox(10);<newline46mondego>    layout.getChildren().addAll(buttonBar);<newline46mondego>    layout.setStyle(<doubleQuotes46>-fx-background-color: cornsilk; -fx-padding: 10;<doubleQuotes46>);<newline46mondego><newline46mondego>    stage.setScene(new Scene(layout));<newline46mondego>    stage.setWidth(800);<newline46mondego>    stage.show();<newline46mondego>  }<newline46mondego><newline46mondego>  class ButtonBar extends HBox {<newline46mondego>    ButtonBar(double spacing, Button... buttons) {<newline46mondego>      super(spacing);<newline46mondego>      getChildren().addAll(buttons);<newline46mondego>      for (Button b: buttons) {<newline46mondego>        HBox.setHgrow(b, Priority.ALWAYS);<newline46mondego>        b.setMaxWidth(Double.MAX_VALUE);<newline46mondego>      }<newline46mondego>    }<newline46mondego><newline46mondego>    public void addButton(Button button) {<newline46mondego>      HBox.setHgrow(button, Priority.ALWAYS);<newline46mondego>      button.setMaxWidth(Double.MAX_VALUE);<newline46mondego>      ObservableList<Node> buttons = getChildren();<newline46mondego>      if (!buttons.contains(button)) {<newline46mondego>        buttons.add(button);<newline46mondego>      }<newline46mondego>    }<newline46mondego><newline46mondego>    public void removeButton(Button button) {<newline46mondego>      getChildren().remove(button);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override protected void layoutChildren() {<newline46mondego>      double minPrefWidth = calculatePrefChildWidth();<newline46mondego>      for (Node n: getChildren()) {<newline46mondego>        if (n instanceof Button) {<newline46mondego>          ((Button) n).setMinWidth(minPrefWidth);<newline46mondego>        }<newline46mondego>      }<newline46mondego>      super.layoutChildren();<newline46mondego>    }<newline46mondego><newline46mondego>    private double calculatePrefChildWidth() {<newline46mondego>      double minPrefWidth = 0;<newline46mondego>      for (Node n: getChildren()) {<newline46mondego>        minPrefWidth = Math.max(minPrefWidth, n.prefWidth(-1));<newline46mondego>      }<newline46mondego>      return minPrefWidth;<newline46mondego>    }<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"5472splitHere46","12833426splitHere46","$CATALINA_HOME/webapps"
"5473splitHere46","12833426splitHere46","WEB-INF"
"5474splitHere46","12833426splitHere46","web.xml"
"5475splitHere46","12833426splitHere46","HellowWorld.class"
"5476splitHere46","12833426splitHere46","WEB-INF/classes"
"5477splitHere46","12833426splitHere46","http://localhost:8080/HelloWorld/HelloWorld"
"5478splitHere46","12833426splitHere46","action=get"
"5479splitHere46","12833522splitHere46",".*?"
"5480splitHere46","12833522splitHere46","final String userFname = <doubleQuotes46>MFile123.tx<doubleQuotes46>;<newline46mondego>final String escapedName = Pattern.quote(userFname);<newline46mondego>final String fnamePattern = <doubleQuotes46>.*?<doubleQuotes46> + escapedName + <doubleQuotes46>.*<doubleQuotes46>;<newline46mondego>final Pattern pat = Pattern.compile(fnamePattern);<newline46mondego>final Matcher m = pat.matcher(file);<newline46mondego>"
"5481splitHere46","12833827splitHere46","String str = <doubleQuotes46>Breaking \u003cb\u003eNews\u003c/b\u003e Updates<doubleQuotes46>;<newline46mondego>str = str.replaceAll(<doubleQuotes46>\\<(.*)?\\>(.*)\\</\\1\\><doubleQuotes46>, <doubleQuotes46>$2<doubleQuotes46>);<newline46mondego>System.out.println(str);<newline46mondego>"
"5482splitHere46","12833827splitHere46","Breaking News Updates<newline46mondego>"
"5483splitHere46","12833827splitHere46","\\<(.*)?\\>"
"5484splitHere46","12833827splitHere46","<b>"
"5485splitHere46","12833827splitHere46","\\</\\1\\>"
"5486splitHere46","12833827splitHere46","</b>"
"5487splitHere46","12833827splitHere46","\\1"
"5488splitHere46","12833827splitHere46","<b>news <update></b>"
"5489splitHere46","12833827splitHere46","<update>"
"5490splitHere46","12833833splitHere46","String[] keyArray = { <doubleQuotes46>one<doubleQuotes46>, <doubleQuotes46>two<doubleQuotes46>, <doubleQuotes46>three<doubleQuotes46> };<newline46mondego>String[] valArray = { <doubleQuotes46>foo<doubleQuotes46>, <doubleQuotes46>bar<doubleQuotes46>, <doubleQuotes46>bazzz<doubleQuotes46> };<newline46mondego><newline46mondego>// create a new HashMap that maps Strings to Strings<newline46mondego><newline46mondego>Map<String, String> exampleMap = new HashMap<String, String>();<newline46mondego><newline46mondego>// create a map from the two arrays above<newline46mondego><newline46mondego>for (int i = 0; i < keyArray.length; i++) {<newline46mondego>    String theKey = keyArray[i];<newline46mondego>    String theVal = valArray[i];<newline46mondego>    exampleMap.put(theKey, theVal);<newline46mondego>}<newline46mondego><newline46mondego>// print the contents of our new map<newline46mondego><newline46mondego>for (String loopKey : exampleMap.keySet()) {<newline46mondego>    String loopVal = exampleMap.get(loopKey);<newline46mondego>    System.out.println(loopKey + <doubleQuotes46>: <doubleQuotes46> + loopVal);<newline46mondego>}<newline46mondego>"
"5491splitHere46","12834014splitHere46","Shape shapeCircle = new Circle();<newline46mondego>"
"5492splitHere46","12834014splitHere46","shapeCircle.getRadius();"
"5493splitHere46","12834014splitHere46","Circle shapeCircle = (Circle)shapeCircle;<newline46mondego>"
"5494splitHere46","12834014splitHere46","Shape ShapeCicle = new Circle(Radius);<newline46mondego>Float area = ShapeCircle.area();<newline46mondego>"
"5495splitHere46","12834018splitHere46","String username = request.getRemoteUsr() ;<newline46mondego>session.setAttribute(<doubleQuotes46>username<doubleQuotes46>,username);<newline46mondego>"
"5496splitHere46","12834018splitHere46","String username = (String)session.getAttribute(<doubleQuotes46>username<doubleQuotes46>);<newline46mondego>"
"5497splitHere46","12834101splitHere46","public class DistanceComparator implements Comparator {<newline46mondego>    public int compare(Object o1, Object o2) {<newline46mondego>        return Double.valueOf(((CategoryListing) o1).distance)<newline46mondego>                .compareTo(((CategoryListing) o2).distance);// use getters<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5498splitHere46","12834101splitHere46","below sort method"
"5499splitHere46","12834101splitHere46","Object[] array = new Object[vector.size()];   <newline46mondego>    vector.copyInto(array);   <newline46mondego><newline46mondego>    Arrays.sort(array,comparator);<newline46mondego><newline46mondego>    int i = 0;<newline46mondego>    Enumeration enumumeration = vector.elements();<newline46mondego>    while (enumumeration.hasMoreElements()) {<newline46mondego>        enumumeration.nextElement();<newline46mondego>        vector.insertElementAt(array[i++], i);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5500splitHere46","12834104splitHere46","{'I', 'N', 'V', 'A', 'L', 'I', 'D;}"
"5501splitHere46","12834104splitHere46","Pattern"
"5502splitHere46","12834167splitHere46","java.util.Date"
"5503splitHere46","12834167splitHere46","Date date = new Date(1285666505575L);<newline46mondego>System.out.println(new SimpleDateFormat(<doubleQuotes46>dd/MM/yyyy<doubleQuotes46>).format(date));<newline46mondego>"
"5504splitHere46","12834210splitHere46","lib/security"
"5505splitHere46","12834210splitHere46","java"
"5506splitHere46","12834238splitHere46","public class MyTest {<newline46mondego><newline46mondego>    WebDriver driver;<newline46mondego><newline46mondego>    @BeforeClass<newline46mondego>    public static void setUpClass() {<newline46mondego>        driver = new RemoteWebDriver(new URL(hubAddress), capability);<newline46mondego>    }<newline46mondego><newline46mondego>    @AfterClass<newline46mondego>    public static void setDownClass() {<newline46mondego>         driver.quit();<newline46mondego>    }<newline46mondego><newline46mondego>    @Test <newline46mondego>    public void Test1(){<newline46mondego>         driver.get(...);<newline46mondego>    }<newline46mondego><newline46mondego>    @Test <newline46mondego>    public void Test2(){<newline46mondego>         driver.get(...):<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5507splitHere46","12834238splitHere46","@RunWith(Suite.class)<newline46mondego>@SuiteClasses({ Test1.class, Test2.class})<newline46mondego>public class MyTestSuite {<newline46mondego><newline46mondego>    public static WebDriver driver;<newline46mondego><newline46mondego>    @BeforeClass<newline46mondego>    public static void setUpClass() {<newline46mondego>        driver = new RemoteWebDriver(new URL(hubAddress), capability);<newline46mondego>    }<newline46mondego><newline46mondego>    @AfterClass<newline46mondego>    public static void setDownClass() {<newline46mondego>         driver.quit();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5508splitHere46","12834238splitHere46","public class Test1 {<newline46mondego><newline46mondego>    @Test <newline46mondego>    public void Test1(){<newline46mondego>         MyTestSuite.driver.get(...);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5509splitHere46","12834289splitHere46","String[] token = s.split(<doubleQuotes46>Ç<doubleQuotes46>);<newline46mondego>"
"5510splitHere46","12834289splitHere46","String[] token = s.split(<doubleQuotes46>\u00C7<doubleQuotes46>); // Ç<newline46mondego>"
"5511splitHere46","12834424splitHere46","SimpleFormController"
"5512splitHere46","12834424splitHere46","/**<newline46mondego> * Shows a form for car creation.<newline46mondego> */<newline46mondego>@RequestMapping(params = <doubleQuotes46>form<doubleQuotes46>, method = RequestMethod.GET)<newline46mondego>public ModelAndView createForm() {<newline46mondego>    ModelMap uiModel = new ModelMap();<newline46mondego>    uiModel.addAttribute(<doubleQuotes46>carCreateFormBackingObject<doubleQuotes46>, new CarCreateFormBackingObject()); //formBackingObject - often called command object<newline46mondego>    uiModel.addAttribute(<doubleQuotes46>manufactureres<doubleQuotes46>, this.manufactureresDao.readAll()); //referenceData<newline46mondego>    return new ModelAndView(<doubleQuotes46>car/create<doubleQuotes46>, uiModel);<newline46mondego>}<newline46mondego><newline46mondego>/**<newline46mondego> * Creates the car and redirects to its detail page.<newline46mondego> *<newline46mondego> */<newline46mondego>@RequestMapping(method = RequestMethod.POST)<newline46mondego>public ModelAndView create(final @Valid CarCreateFormBackingObject carCreateFormBackingObject,<newline46mondego>        final BindingResult bindingResult) {<newline46mondego><newline46mondego>    if (bindingResult.hasErrors()) {<newline46mondego>                ModelMap uiModel = new ModelMap();<newline46mondego>        uiModel.addAttribute(<doubleQuotes46>carCreateFormBackingObject<doubleQuotes46>, carCreateFormBackingObject);<newline46mondego>        uiModel.addAttribute(<doubleQuotes46>manufactureres<doubleQuotes46>, this.manufactureresDao.readAll()); //referenceData<newline46mondego>        return new ModelAndView(<doubleQuotes46>car/create<doubleQuotes46>, uiModel);<newline46mondego>    }<newline46mondego><newline46mondego>    Car car = this.carService.create(carCreateFormBackingObject.name, ...);<newline46mondego>    return new ModelAndView(new RedirectView(<doubleQuotes46>/cars/<doubleQuotes46> + car.getId(), true)); //redirect to show page<newline46mondego>}<newline46mondego>"
"5513splitHere46","12834424splitHere46","SimpleFormController"
"5514splitHere46","12834424splitHere46","AbstractFormController"
"5515splitHere46","12834424splitHere46","SimpleFormController"
"5516splitHere46","12834424splitHere46","formBackingObject"
"5517splitHere46","12834424splitHere46","AbstractFormController"
"5518splitHere46","12834424splitHere46","referenceData"
"5519splitHere46","12834424splitHere46","AbstractFormController"
"5520splitHere46","12834458splitHere46","ByteArrayOutputStream baos = new ByteArrayOutputStream();<newline46mondego>ObjectOutputStream ois = new ObjectOutputStream(baos);<newline46mondego>ois.writeObject(object);<newline46mondego>ois.close();<newline46mondego>byte[] bytes = baos.toByteArray();<newline46mondego>"
"5521splitHere46","12834595splitHere46","Service implementation URL not specified..."
"5522splitHere46","12834595splitHere46","@RemoteServiceRelativePath"
"5523splitHere46","12834595splitHere46","ServiceDefTarget"
"5524splitHere46","12834621splitHere46","import be.derycke.pieter.com.COMException;<newline46mondego>import be.derycke.pieter.com.Guid;<newline46mondego>import java.io.*;<newline46mondego>import java.math.BigInteger;<newline46mondego>import jmtp.PortableDevice;<newline46mondego>import jmtp.*;<newline46mondego><newline46mondego>public class Jmtp {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        PortableDeviceManager manager = new PortableDeviceManager();<newline46mondego>        PortableDevice device = manager.getDevices()[0];<newline46mondego>        // Connect to my mp3-player<newline46mondego>        device.open();<newline46mondego><newline46mondego>        System.out.println(device.getModel());<newline46mondego><newline46mondego>        System.out.println(<doubleQuotes46>---------------<doubleQuotes46>);<newline46mondego><newline46mondego>        // Iterate over deviceObjects<newline46mondego>        for (PortableDeviceObject object : device.getRootObjects()) {<newline46mondego>            // If the object is a storage object<newline46mondego>            if (object instanceof PortableDeviceStorageObject) {<newline46mondego>                PortableDeviceStorageObject storage = (PortableDeviceStorageObject) object;<newline46mondego><newline46mondego>                for (PortableDeviceObject o2 : storage.getChildObjects()) {<newline46mondego>//                    <newline46mondego>//                        BigInteger bigInteger1 = new BigInteger(<doubleQuotes46>123456789<doubleQuotes46>);<newline46mondego>//                        File file = new File(<doubleQuotes46>c:/JavaAppletSigningGuide.pdf<doubleQuotes46>);<newline46mondego>//                        try {<newline46mondego>//                            storage.addAudioObject(file, <doubleQuotes46>jj<doubleQuotes46>, <doubleQuotes46>jj<doubleQuotes46>, bigInteger1);<newline46mondego>//                        } catch (Exception e) {<newline46mondego>//                            //System.out.println(<doubleQuotes46>Exception e = <doubleQuotes46> + e);<newline46mondego>//                        }<newline46mondego>//                    <newline46mondego><newline46mondego>                    System.out.println(o2.getOriginalFileName());<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        manager.getDevices()[0].close();<newline46mondego><newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5525splitHere46","12834684splitHere46","private void writeObject(java.io.ObjectOutputStream stream) throws java.io.IOException {<newline46mondego>    throw new java.io.NotSerializableException( getClass().getName() );<newline46mondego>}<newline46mondego><newline46mondego>private void readObject(java.io.ObjectInputStream stream) throws java.io.IOException, ClassNotFoundException {<newline46mondego>    throw new java.io.NotSerializableException( getClass().getName() );<newline46mondego>}<newline46mondego>"
"5526splitHere46","12834786splitHere46","<context root>/upload"
"5527splitHere46","12834786splitHere46","request.getSession().getServletContext().getRealPath(<doubleQuotes46>/upload<doubleQuotes46>)<newline46mondego>"
"5528splitHere46","12834823splitHere46","JNI"
"5529splitHere46","12834823splitHere46","UnsatisfiedLinkedError"
"5530splitHere46","12834823splitHere46","PATH"
"5531splitHere46","12834823splitHere46","LD_LIBRARY_PATH"
"5532splitHere46","12834823splitHere46","maven-surefire-plugin"
"5533splitHere46","12834866splitHere46","public void init(Object otherArg, Class<?> caller) {<newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"5534splitHere46","12834866splitHere46","public void init(Object otherArg, CallerEnum caller) {<newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"5535splitHere46","12835153splitHere46","Executors.newFixedThreadPool(10);"
"5536splitHere46","12835153splitHere46","Runnable"
"5537splitHere46","12835164splitHere46","cpu0minSeek.setMax(frequencies.size() - 1);"
"5538splitHere46","12835183splitHere46","[^;]+=[^;]+<newline46mondego>"
"5539splitHere46","12835183splitHere46","[^;]+"
"5540splitHere46","12835183splitHere46","+"
"5541splitHere46","12835183splitHere46","[^;\r\n]"
"5542splitHere46","12835190splitHere46","List<Exception>"
"5543splitHere46","12835190splitHere46","CustomException"
"5544splitHere46","12835190splitHere46","Exception"
"5545splitHere46","12835190splitHere46","List<Exception>"
"5546splitHere46","12835190splitHere46","CustomException"
"5547splitHere46","12835190splitHere46","List<Exception>"
"5548splitHere46","12835190splitHere46","List<Info>"
"5549splitHere46","12835190splitHere46","Info"
"5550splitHere46","12835190splitHere46","ErrorCollator"
"5551splitHere46","12835190splitHere46","Exceptions"
"5552splitHere46","12835190splitHere46","ErrorCollator.throwExceptionIfReqd()"
"5553splitHere46","12835190splitHere46","List"
"5554splitHere46","12835261splitHere46","UTF-8"
"5555splitHere46","12835261splitHere46","Text"
"5556splitHere46","12835304splitHere46","protected"
"5557splitHere46","12835304splitHere46","finalize()"
"5558splitHere46","12835370splitHere46","public static boolean deleteDir(File dir) {<newline46mondego>    if (dir.isDirectory()) {<newline46mondego>        String[] children = dir.list();<newline46mondego>        for (int i=0; i<children.length; i++) {<newline46mondego>            boolean success = deleteDir(new File(dir, children[i]));<newline46mondego>            if (!success) {<newline46mondego>                return false;<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>    return dir.delete();<newline46mondego>}<newline46mondego>"
"5559splitHere46","12835373splitHere46","while (st.hasMoreTokens()) {<newline46mondego>   String inputNum = st.nextToken();          <newline46mondego>   Map<String,String> mainMap transitions = mainMap.get(initialState);<newline46mondego>   initialState = transitions.get(inputNum);<newline46mondego>} <newline46mondego>"
"5560splitHere46","12835569splitHere46","new Triangle(3,4,5);<newline46mondego>"
"5561splitHere46","12835569splitHere46","// expected to be ok<newline46mondego>   new Triangle(3,4,5);<newline46mondego><newline46mondego>   // expected exception<newline46mondego>   new Triangle(1,1,3);<newline46mondego>"
"5562splitHere46","12835569splitHere46","Triangle"
"5563splitHere46","12835569splitHere46","validate()"
"5564splitHere46","12835569splitHere46","Triangle"
"5565splitHere46","12835624splitHere46","List"
"5566splitHere46","12835754splitHere46","TableColumn"
"5567splitHere46","12835754splitHere46","TableColumnModel"
"5568splitHere46","12835785splitHere46","URL url = new URL(<doubleQuotes46>ftp://user:pass@ftp.something.com/file.txt;type=i<doubleQuotes46>);<newline46mondego>URLConnection urlc = url.openConnection();<newline46mondego>InputStream is = urlc.getInputStream(); // To download<newline46mondego>OutputStream os = urlc.getOutputStream(); // To upload<newline46mondego>"
"5569splitHere46","12835800splitHere46","dialog.setVisible"
"5570splitHere46","12835800splitHere46","area.setText(<doubleQuotes46>zzzz<doubleQuotes46>)"
"5571splitHere46","12835800splitHere46","public class TestDialog {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        EventQueue.invokeLater(new Runnable() {<newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                try {<newline46mondego>                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());<newline46mondego>                } catch (ClassNotFoundException ex) {<newline46mondego>                } catch (InstantiationException ex) {<newline46mondego>                } catch (IllegalAccessException ex) {<newline46mondego>                } catch (UnsupportedLookAndFeelException ex) {<newline46mondego>                }<newline46mondego><newline46mondego>                JFrame frame = new JFrame();<newline46mondego>                frame.setBounds(0, 0, 500, 500);<newline46mondego>                frame.setVisible(true);<newline46mondego><newline46mondego>                JDialog dialog = new JDialog(frame);<newline46mondego>                dialog.setModal(true);<newline46mondego>                JPanel panel = new JPanel();<newline46mondego>                dialog.add(panel);<newline46mondego>                final JTextArea area = new JTextArea();<newline46mondego>                panel.add(area);<newline46mondego>                dialog.setBounds(100, 100, 200, 200);<newline46mondego>                area.setLineWrap(true);<newline46mondego>                area.setText(<doubleQuotes46>bbbbbbbbbbbb<doubleQuotes46>);<newline46mondego><newline46mondego>                new Thread(new Runnable() {<newline46mondego>                    @Override<newline46mondego>                    public void run() {<newline46mondego>                        SwingUtilities.invokeLater(new Runnable() {<newline46mondego><newline46mondego>                            @Override<newline46mondego>                            public void run() {<newline46mondego>                                System.out.println(<doubleQuotes46>Hello<doubleQuotes46>);<newline46mondego>                                area.setText(<doubleQuotes46>zzzz<doubleQuotes46>);<newline46mondego>                            }<newline46mondego>                        });<newline46mondego>                    }<newline46mondego>                }).start();<newline46mondego><newline46mondego>                dialog.setVisible(true);<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5572splitHere46","12835838splitHere46","Database db = new Database(); <newline46mondego>public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest req, HttpServletResponse res) {     <newline46mondego>     List<ProductForm> prodList = db.getProduct();     <newline46mondego>     request.setAttribute(<doubleQuotes46>prodList<doubleQuotes46>, prodList);<newline46mondego>     return mapping.findForward(<doubleQuotes46>success<doubleQuotes46>); <newline46mondego>} <newline46mondego>"
"5573splitHere46","12835838splitHere46","<logic:iterate name=<doubleQuotes46>prodList<doubleQuotes46> id=<doubleQuotes46>product<doubleQuotes46>><newline46mondego><p><newline46mondego>  <bean:write name=<doubleQuotes46>product<doubleQuotes46> property=<doubleQuotes46>productName<doubleQuotes46>/><newline46mondego>  <bean:write name=<doubleQuotes46>product<doubleQuotes46> property =<doubleQuotes46>modelNo<doubleQuotes46>/><newline46mondego>  etc ...<newline46mondego></p><newline46mondego></logic:iterate><newline46mondego>"
"5574splitHere46","12835922splitHere46","ASTRewriter"
"5575splitHere46","12835922splitHere46","private void addAnnotations(final ICompilationUnit cu) throws MalformedTreeException, BadLocationException, CoreException {<newline46mondego><newline46mondego>     // parse compilation unit<newline46mondego>    final ASTParser parser = ASTParser.newParser(AST.JLS3);<newline46mondego>    parser.setSource(cu);<newline46mondego>    final CompilationUnit astRoot = (CompilationUnit) parser.createAST(null);<newline46mondego><newline46mondego><newline46mondego>    // create a ASTRewrite<newline46mondego>    final AST ast = astRoot.getAST();<newline46mondego>    final ASTRewrite rewriter = ASTRewrite.create(ast);<newline46mondego><newline46mondego><newline46mondego><newline46mondego>    final ListRewrite listRewrite = rewriter.getListRewrite(astRoot, CompilationUnit.TYPES_PROPERTY);<newline46mondego>    final NormalAnnotation eventHandlerAnnotation = astRoot.getAST().newNormalAnnotation();<newline46mondego>    eventHandlerAnnotation.setTypeName(astRoot.getAST().newName(<doubleQuotes46>CustomAnnotation<doubleQuotes46>));<newline46mondego>    eventHandlerAnnotation.values().add(createAnnotationMember(ast, <doubleQuotes46>arg1<doubleQuotes46>, <doubleQuotes46>Blup<doubleQuotes46>));<newline46mondego>    eventHandlerAnnotation.values().add(createQualifiedAnnotationMember(ast, <doubleQuotes46>arg2<doubleQuotes46>, <doubleQuotes46>IsWorkbenchTest<doubleQuotes46>, <doubleQuotes46>Blab<doubleQuotes46>));<newline46mondego><newline46mondego><newline46mondego>    final SingleMemberAnnotation runWithFop = astRoot.getAST().newSingleMemberAnnotation();<newline46mondego>    runWithFop.setTypeName(astRoot.getAST().newName(<doubleQuotes46>SimpleAnnotation<doubleQuotes46>));<newline46mondego>    final TypeLiteral newTypeLiteral = astRoot.getAST().newTypeLiteral();<newline46mondego>    newTypeLiteral.setType(astRoot.getAST().newSimpleType(astRoot.getAST().newSimpleName(<doubleQuotes46>Blop<doubleQuotes46>)));<newline46mondego>    runWithFop.setValue(newTypeLiteral);<newline46mondego>    listRewrite.insertAt(runWithFop, 0, null);<newline46mondego>    listRewrite.insertAt(eventHandlerAnnotation, 0, null);<newline46mondego>    final TextEdit edits = rewriter.rewriteAST();<newline46mondego><newline46mondego>    // apply the text edits to the compilation unit<newline46mondego>    final Document document = new Document(cu.getSource());<newline46mondego>    edits.apply(document);<newline46mondego><newline46mondego>    // this is the code for adding statements<newline46mondego>    cu.getBuffer().setContents(formatFileContent(document.get()));<newline46mondego>    cu.save(null, true);<newline46mondego>}<newline46mondego>protected MemberValuePair createQualifiedAnnotationMember(final AST ast, final String name, final String value, final String value2) {<newline46mondego>    final MemberValuePair mV = ast.newMemberValuePair();<newline46mondego>    mV.setName(ast.newSimpleName(name));<newline46mondego>    final TypeLiteral typeLiteral = ast.newTypeLiteral();<newline46mondego>    final QualifiedType newQualifiedName = ast.newQualifiedType(ast.newSimpleType(ast.newSimpleName(value)), ast.newSimpleName(value2));<newline46mondego>    typeLiteral.setType(newQualifiedName);<newline46mondego>    mV.setValue(typeLiteral);<newline46mondego>    return mV;<newline46mondego>}<newline46mondego><newline46mondego>protected MemberValuePair createAnnotationMember(final AST ast, final String name, final String value) {<newline46mondego><newline46mondego>    final MemberValuePair mV = ast.newMemberValuePair();<newline46mondego>    mV.setName(ast.newSimpleName(name));<newline46mondego>    final TypeLiteral typeLiteral = ast.newTypeLiteral();<newline46mondego>    typeLiteral.setType(ast.newSimpleType(ast.newSimpleName(value)));<newline46mondego>    mV.setValue(typeLiteral);<newline46mondego>    return mV;<newline46mondego>}<newline46mondego>"
"5576splitHere46","12835976splitHere46","exec-maven-plugin"
"5577splitHere46","12835976splitHere46","exec:exec"
"5578splitHere46","12835976splitHere46","<build><newline46mondego>    <plugins><newline46mondego>        <plugin><newline46mondego>            <groupId>org.codehaus.mojo</groupId><newline46mondego>            <artifactId>exec-maven-plugin</artifactId><newline46mondego>            <version>1.2.1</version><newline46mondego>            <configuration><newline46mondego>                <executable>mvn</executable><newline46mondego>                <arguments><newline46mondego>                    <argument>clean</argument><newline46mondego>                    <argument>compile</argument><newline46mondego>                    <argument>hibernate3:hbm2java</argument><newline46mondego>                </arguments><newline46mondego>            </configuration><newline46mondego>        </plugin><newline46mondego>    </plugins><newline46mondego></build><newline46mondego>"
"5579splitHere46","12835976splitHere46","mvn exec:exec<newline46mondego>"
"5580splitHere46","12836067splitHere46","Exception"
"5581splitHere46","12836130splitHere46","paintComponents()"
"5582splitHere46","12836242splitHere46","ResourceDeletedException"
"5583splitHere46","12836318splitHere46","myType"
"5584splitHere46","12836318splitHere46","@XmlRootElement(name=<doubleQuotes46>myType<doubleQuotes46>)"
"5585splitHere46","12836318splitHere46","@WebResult(name=<doubleQuotes46>myType<doubleQuotes46>)"
"5586splitHere46","12836318splitHere46","MyType"
"5587splitHere46","12836434splitHere46","public class MyClass {<newline46mondego><newline46mondego>    public String param1;<newline46mondego><newline46mondego>    public String param2;<newline46mondego><newline46mondego>    public String param3;<newline46mondego><newline46mondego>    public String param4;<newline46mondego>}<newline46mondego>"
"5588splitHere46","12836434splitHere46","ArrayList< MyClass > list = buildData();<newline46mondego><newline46mondego>String[] from = { <doubleQuotes46>name<doubleQuotes46>, <doubleQuotes46>purpose<doubleQuotes46>, .... };<newline46mondego><newline46mondego>    int[] to = { android.R.id.text1, android.R.id.text2, ... };<newline46mondego>"
"5589splitHere46","12836492splitHere46","%"
"5590splitHere46","12836492splitHere46","i % numberOfItems"
"5591splitHere46","12836492splitHere46","for (int i = frontIndex; i % numberOfItems != rearIndex+1; i++) { <newline46mondego>   System.out.print(array[(i++) % numberOfItems)] + <doubleQuotes46> <doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"5592splitHere46","12836492splitHere46","(array.length + k) % array.length == k"
"5593splitHere46","12836492splitHere46","%"
"5594splitHere46","12836492splitHere46","i"
"5595splitHere46","12836547splitHere46","$.ajax({<newline46mondego>    type: <doubleQuotes46>POST<doubleQuotes46>,<newline46mondego>    url: <doubleQuotes46>some.php<doubleQuotes46>,<newline46mondego>    data: { name: <doubleQuotes46>John<doubleQuotes46>, location: <doubleQuotes46>Boston<doubleQuotes46> }<newline46mondego>});<newline46mondego>"
"5596splitHere46","12836547splitHere46","url"
"5597splitHere46","12836547splitHere46","type"
"5598splitHere46","12836547splitHere46","data"
"5599splitHere46","12836547splitHere46","jsRoutes.controllers.Clients.addComment().ajax(<newline46mondego>    data: {<newline46mondego>      client: @client.id,<newline46mondego>      text: args.text<newline46mondego>    }<newline46mondego>);<newline46mondego>"
"5600splitHere46","12836547splitHere46","POST"
"5601splitHere46","12836547splitHere46","PUT"
"5602splitHere46","12836547splitHere46","PUT /comments/:client     controllers.Clients.addComment(client: Int)<newline46mondego>"
"5603splitHere46","12836547splitHere46","jsRoutes.controllers.Clients.addComment(@client.id).ajax(<newline46mondego>    data: { text: args.text }<newline46mondego>);<newline46mondego>"
"5604splitHere46","12836547splitHere46","http://domain.tld/comments/123"
"5605splitHere46","12836547splitHere46","text"
"5606splitHere46","12836547splitHere46","form()"
"5607splitHere46","12836547splitHere46","public static Result addComment(int client) {<newline46mondego>    String receivedText = form().bindFromRequest().get(<doubleQuotes46>text<doubleQuotes46>);<newline46mondego>    // save it to DB ...<newline46mondego>    return ok( <doubleQuotes46>Added comment: <doubleQuotes46>+ receivedText+ <doubleQuotes46>. for client id: <doubleQuotes46> + client);<newline46mondego>}<newline46mondego>"
"5608splitHere46","12836621splitHere46","Integer"
"5609splitHere46","12836621splitHere46","Float"
"5610splitHere46","12836621splitHere46","int"
"5611splitHere46","12836621splitHere46","float"
"5612splitHere46","12836670splitHere46","Button"
"5613splitHere46","12836670splitHere46","public static void main(String[] args) {<newline46mondego>    final Display display = new Display();<newline46mondego>    final Shell shell = new Shell(display);<newline46mondego>    shell.setLayout(new GridLayout(1, false));<newline46mondego><newline46mondego>    final Image image = display.getSystemImage(SWT.ICON_ERROR);<newline46mondego>    final String text = <doubleQuotes46>Button<doubleQuotes46>;<newline46mondego><newline46mondego>    final Button button = new Button(shell, SWT.PUSH);<newline46mondego><newline46mondego>    GridData data = new GridData();<newline46mondego>    float fontHeight = shell.getFont().getFontData()[0].height;<newline46mondego>    data.heightHint = image.getImageData().height + (int)fontHeight + 20;<newline46mondego>    data.widthHint = 100;<newline46mondego><newline46mondego>    button.setLayoutData(data);<newline46mondego><newline46mondego>    button.addListener(SWT.Paint, new Listener() {<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void handleEvent(Event event) {<newline46mondego>            GC gc = event.gc;<newline46mondego><newline46mondego>            int width = ((GridData)button.getLayoutData()).widthHint;<newline46mondego>            int height = ((GridData)button.getLayoutData()).heightHint;<newline46mondego>            Point textSize = gc.textExtent(text);<newline46mondego><newline46mondego>            gc.drawText(text, width / 2 - textSize.x / 2, image.getImageData().height - image.getImageData().height / 2 - textSize.y, true);<newline46mondego>            gc.drawImage(image, width / 2 - image.getImageData().width / 2, height / 2 - image.getImageData().height / 2 + textSize.y / 2);<newline46mondego>        }<newline46mondego>    });<newline46mondego><newline46mondego>    shell.pack();<newline46mondego>    shell.open();<newline46mondego>    while (!shell.isDisposed()) {<newline46mondego>        if (!display.readAndDispatch()) {<newline46mondego>            display.sleep();<newline46mondego>        }<newline46mondego>    }<newline46mondego>    image.dispose();<newline46mondego>    display.dispose();<newline46mondego>}<newline46mondego>"
"5614splitHere46","12836670splitHere46","GridData"
"5615splitHere46","12836670splitHere46","Listener"
"5616splitHere46","12836670splitHere46","SWT.Paint"
"5617splitHere46","12836717splitHere46","public abstract class Vehicle {<newline46mondego>    //class stuff<newline46mondego>}<newline46mondego><newline46mondego>public class Car extends Vehicle {<newline46mondego>   //class stuff<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>public class Garage {<newline46mondego>   public void repair(Vehicle vehicle){<newline46mondego>   ....<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"5618splitHere46","12836717splitHere46","repair"
"5619splitHere46","12836717splitHere46","public static void main(String[] args)  {<newline46mondego>    Garage g = new Garage();<newline46mondego>    Vehicle c = new Car();<newline46mondego>    Vehicle b = new Bike(); //assuming Bike is a subclass of Vehicle.<newline46mondego>    g.repair(c);<newline46mondego>    g.repair(b);<newline46mondego>}  <newline46mondego>"
"5620splitHere46","12836717splitHere46","Car c = new Car();<newline46mondego>Bike b = new Bike();<newline46mondego>"
"5621splitHere46","12836913splitHere46","ExtractValue()  Extracts a value from an XML string using XPath notation<newline46mondego>UpdateXML()     Return replaced XML fragment<newline46mondego>"
"5622splitHere46","12836913splitHere46","mysql> SET @xml = '<a><b>X</b><b>Y</b></a>';<newline46mondego>Query OK, 0 rows affected (0.00 sec)<newline46mondego><newline46mondego>mysql> SET @i =1, @j = 2;<newline46mondego>Query OK, 0 rows affected (0.00 sec)<newline46mondego><newline46mondego>mysql> SELECT @i, ExtractValue(@xml, '//b[$@i]');<newline46mondego>+------+--------------------------------+<newline46mondego>| @i   | ExtractValue(@xml, '//b[$@i]') |<newline46mondego>+------+--------------------------------+<newline46mondego>|    1 | X                              |<newline46mondego>+------+--------------------------------+<newline46mondego>1 row in set (0.00 sec)<newline46mondego>"
"5623splitHere46","12836927splitHere46","'t', 'T'    date/time   Prefix for date and time conversion characters. See Date/Time Conversions. <newline46mondego>"
"5624splitHere46","12836927splitHere46","F"
"5625splitHere46","12836927splitHere46","'F'     ISO 8601 complete date formatted as <doubleQuotes46>%tY-%tm-%td<doubleQuotes46>. <newline46mondego>"
"5626splitHere46","12836927splitHere46","String.format(<doubleQuotes46> %1$tF-%2$tF<doubleQuotes46>, startDate, endDate);<newline46mondego>"
"5627splitHere46","12836998splitHere46","@echo off<newline46mondego> @echo Tomcat CLPL Service<newline46mondego> set <doubleQuotes46>CATALINA_HOME=C:\Tomcat\apache-tomcat-6.0.35<doubleQuotes46><newline46mondego> set <doubleQuotes46>CATALINA_BASE=C:\Tomcat\tomcatclpl<doubleQuotes46><newline46mondego> C:\Tomcat\apache-tomcat-6.0.35\bin\startup.bat<newline46mondego>"
"5628splitHere46","12837034splitHere46","Lock"
"5629splitHere46","12837034splitHere46","ReentrantLock"
"5630splitHere46","12837034splitHere46","ReentrantLock.getOwner()"
"5631splitHere46","12837034splitHere46","protected"
"5632splitHere46","12837034splitHere46","ReentrantLock"
"5633splitHere46","12837034splitHere46","Thread.holdsLock()"
"5634splitHere46","12837136splitHere46","// decode the key string into bytes (using Apache Commons)<newline46mondego>byte[] keyBytes = Hex.decodeHex(keystr.toCharArray());<newline46mondego><newline46mondego>// create a representation of the key<newline46mondego>SecretKeySpec spec = new SecretKeySpec(keyBytes, <doubleQuotes46>AES<doubleQuotes46>);<newline46mondego><newline46mondego>// turn the key spec into a usable key<newline46mondego>SecretKeyFactory keyFactory = SecretKeyFactory.getInstance(<doubleQuotes46>AES<doubleQuotes46>);<newline46mondego>SecretKey key = keyFactory.generateSecret(spec);<newline46mondego><newline46mondego>// use a cipher to decrypt the eid<newline46mondego>Cipher cipher = Cipher.getInstance(<doubleQuotes46>AES/CBC/PKCS5Padding<doubleQuotes46>);<newline46mondego>cipher.init(Cipher.DECRYPT_MODE, key);<newline46mondego>byte[] plainText = cipher.doFinal(hex.decodeHex(eid.toCharArray())); // decode from Hex again<newline46mondego>"
"5635splitHere46","12837136splitHere46","eid"
"5636splitHere46","12837136splitHere46","String eid = new String(plainText, <doubleQuotes46>ASCII<doubleQuotes46>);<newline46mondego>"
"5637splitHere46","12837180splitHere46","public class Horse {<newline46mondego><newline46mondego>    private Halter myHalter = new Halter();<newline46mondego><newline46mondego>    {<newline46mondego>       myHalter.tie(new LeadRope());<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5638splitHere46","12837224splitHere46","Boolean bool = new Boolean(true);<newline46mondego>"
"5639splitHere46","12837224splitHere46","bool.booleanValue() == true;<newline46mondego>"
"5640splitHere46","12837289splitHere46","Handler"
"5641splitHere46","12837289splitHere46","Handler h;"
"5642splitHere46","12837289splitHere46","onCreate()"
"5643splitHere46","12837289splitHere46","h = new Handler();"
"5644splitHere46","12837289splitHere46","new Thread(new Runnable(){<newline46mondego><newline46mondego> public void run(){<newline46mondego><newline46mondego>    h.post(new Runnable(){<newline46mondego><newline46mondego><newline46mondego>      // Do the UI work here.<newline46mondego><newline46mondego>   });<newline46mondego><newline46mondego> }<newline46mondego><newline46mondego><newline46mondego>});<newline46mondego>"
"5645splitHere46","12837289splitHere46","AsyncTask"
"5646splitHere46","12837318splitHere46","minus(long duration)"
"5647splitHere46","12837318splitHere46","minusXxxx(int units)"
"5648splitHere46","12837318splitHere46","minusMillis(int)"
"5649splitHere46","12837318splitHere46","minus(long)"
"5650splitHere46","12837318splitHere46","plus(long duration)"
"5651splitHere46","12837318splitHere46","plusMillis(int millis)"
"5652splitHere46","12837320splitHere46","Arrays.asList(EventTypes.values()).contains(EventTypes.WORK));<newline46mondego>"
"5653splitHere46","12837320splitHere46","boolean exist = false;<newline46mondego>try {<newline46mondego>    EventTypes.valueOf(<doubleQuotes46>WORK<doubleQuotes46>);<newline46mondego>    exist = true; <newline46mondego>} catch (IllegalArgumentException e) {}<newline46mondego>"
"5654splitHere46","12837355splitHere46","put"
"5655splitHere46","12837355splitHere46","class ConcurrMattr {<newline46mondego><newline46mondego>    private ConcurrentHashMap<Integer, Lock> locks = <newline46mondego>                    new ConcurrentHashMap<Integer, Lock>();<newline46mondego><newline46mondego>    public Cell put( CellCoords key, Cell arg1 ) {<newline46mondego>        // get or create lock for specific cell (guarantee its uniqueness)<newline46mondego>        Lock lock = this.locks.putIfAbsent( coords.hash % 64, new ReentrantLock() );<newline46mondego>        // 64 threads may concurrently modify different cells of matrix<newline46mondego><newline46mondego>        try {<newline46mondego>            // lock only specific cell<newline46mondego>            lock.lock();<newline46mondego><newline46mondego>            // do all you need with cell<newline46mondego><newline46mondego>            return ...;<newline46mondego><newline46mondego>        } finally {<newline46mondego>            // unlock cell<newline46mondego>            lock.unlock();<newline46mondego>        }<newline46mondego>    }    <newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>// Immutable class to represent cell coordinates<newline46mondego>class CellCoords {    <newline46mondego>    public final int x;<newline46mondego>    public final int y;<newline46mondego>    public final int hash;<newline46mondego><newline46mondego>    public CellCoords( int x, int y ) {<newline46mondego>        this.x = x;<newline46mondego>        this.y = y;<newline46mondego>        this.hash = this.calcHash();<newline46mondego>    }<newline46mondego><newline46mondego>    private int calcHash() {<newline46mondego>        int result = 31 + this.x;<newline46mondego>        return 31 * result + this.y;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5656splitHere46","12837355splitHere46","read/write"
"5657splitHere46","12837355splitHere46","ConcurrentHashMap"
"5658splitHere46","12837355splitHere46","Lock"
"5659splitHere46","12837355splitHere46","CellCoords"
"5660splitHere46","12837355splitHere46","hash"
"5661splitHere46","12837355splitHere46","int"
"5662splitHere46","12837355splitHere46","(coords.hash % 64)"
"5663splitHere46","12837413splitHere46","package managers;<newline46mondego><newline46mondego>import java.util.HashMap;<newline46mondego>import java.util.Map;<newline46mondego><newline46mondego>import org.mt4j.MTApplication;<newline46mondego><newline46mondego>import processing.core.PImage;<newline46mondego><newline46mondego><newline46mondego><newline46mondego><newline46mondego>public class ImageManager {<newline46mondego><newline46mondego>private static ImageManager mImageManager = null;<newline46mondego><newline46mondego>protected MTApplication mApp;<newline46mondego>protected Map< String, PImage > mImages;<newline46mondego><newline46mondego>protected PImage mTempImg;<newline46mondego><newline46mondego>private ImageManager( MTApplication app ) {<newline46mondego>    mApp = app;<newline46mondego>    mImages = new HashMap< String, PImage >();<newline46mondego>}<newline46mondego><newline46mondego>public static synchronized ImageManager getInstance( MTApplication app ) {<newline46mondego>    if( mImageManager == null ) {<newline46mondego>        mImageManager = new ImageManager( app );<newline46mondego>    }<newline46mondego><newline46mondego>    return mImageManager;<newline46mondego>}<newline46mondego><newline46mondego>/**<newline46mondego> * Load or retrieve img in memory<newline46mondego> * <newline46mondego> * @param path Path to the image<newline46mondego> * @return <PImage> the image<newline46mondego> */<newline46mondego>public PImage getImage( String path ) {<newline46mondego>    // Search for image<newline46mondego>    if( mImages.containsKey( path ) ) {<newline46mondego>        System.out.println( <doubleQuotes46>ImageManager::getImage : image found !<doubleQuotes46> );<newline46mondego>        mTempImg = mImages.get( path );<newline46mondego>    } <newline46mondego>    else {<newline46mondego>        System.out.println( <doubleQuotes46>ImageManager::getImage : image not found, loading<doubleQuotes46> );<newline46mondego>        mTempImg = mApp.loadImage( path );<newline46mondego>        mImages.put( path, mTempImg );<newline46mondego>    }<newline46mondego><newline46mondego>    return mTempImg;<newline46mondego>}<newline46mondego>}<newline46mondego>"
"5664splitHere46","12837461splitHere46","-XX+HeapDumpOnOutOfMemoryError"
"5665splitHere46","12837538splitHere46",">>"
"5666splitHere46","12837538splitHere46","-x"
"5667splitHere46","12837538splitHere46","~x + 1"
"5668splitHere46","12837538splitHere46","~x"
"5669splitHere46","12837538splitHere46","-x - 1"
"5670splitHere46","12837569splitHere46","conf.setProperty(OozieClient.APP_PATH, <newline46mondego>    <doubleQuotes46>hdfs://cluster/user/apps/merge-psp-logs/merge-wf/workflow.xml<doubleQuotes46>);<newline46mondego>conf.setProperty(<doubleQuotes46>jobTracker<doubleQuotes46>, <doubleQuotes46>jobtracker.bigdata.com:8021<doubleQuotes46>);<newline46mondego>conf.setProperty(<doubleQuotes46>nameNode<doubleQuotes46>, <doubleQuotes46>hdfs://namenode.bigdata.com:8020<doubleQuotes46>);<newline46mondego>conf.setProperty(<doubleQuotes46>queueName<doubleQuotes46>, <doubleQuotes46>jobtracker.bigdata.com:8021<doubleQuotes46>);<newline46mondego>"
"5671splitHere46","12837569splitHere46","conf.setProperty(OozieClient.APP_PATH, <newline46mondego>    <doubleQuotes46>hdfs://namenode.bigdata.com:8020/user/apps/merge-psp-logs/merge-wf/workflow.xml<doubleQuotes46>);<newline46mondego>"
"5672splitHere46","12837569splitHere46","jobtracker.bigdata.com:8021"
"5673splitHere46","12837569splitHere46","conf.setProperty(<doubleQuotes46>queueName<doubleQuotes46>, <doubleQuotes46>default<doubleQuotes46>);<newline46mondego>"
"5674splitHere46","12837795splitHere46","xvfb"
"5675splitHere46","12837795splitHere46","xvfb"
"5676splitHere46","12837851splitHere46","String nodeName = currentNode.getNodeName()<newline46mondego>String nodeValue = currentNode.getNodeValue() ;<newline46mondego>if( nodeName.equals(<doubleQuotes46>Message<doubleQuotes46>)){<newline46mondego>     message = nodeValue ;<newline46mondego>} else if( nodeName.equals(<doubleQuotes46>FrameHeight<doubleQuotes46>) {<newline46mondego>     frameHeight = nodeValue ;<newline46mondego>}<newline46mondego>"
"5677splitHere46","12837872splitHere46","<dependencies><newline46mondego>  <module name=<doubleQuotes46>org.jboss.ironjacamar.jdbcadapters<doubleQuotes46>/><newline46mondego></dependencies><newline46mondego>"
"5678splitHere46","12837898splitHere46","<%@ include file=<doubleQuotes46>/html_functions.jsp<doubleQuotes46> %><newline46mondego>"
"5679splitHere46","12837898splitHere46","<jsp:include page=<doubleQuotes46>html_functions.jsp<doubleQuotes46> />"
"5680splitHere46","12837898splitHere46","<%@include file=<doubleQuotes46>relativeURL<doubleQuotes46> %>"
"5681splitHere46","12837898splitHere46","<jsp:include page=<doubleQuotes46>relativeURL<doubleQuotes46> />"
"5682splitHere46","12838187splitHere46","VLayout"
"5683splitHere46","12838187splitHere46","setShowResizeBar(true)"
"5684splitHere46","12838187splitHere46","VLayout"
"5685splitHere46","12838187splitHere46","TreeGrid"
"5686splitHere46","12838477splitHere46","spring-support"
"5687splitHere46","12838477splitHere46","spring-context-support"
"5688splitHere46","12838477splitHere46","fc:"
"5689splitHere46","12838508splitHere46","Intent"
"5690splitHere46","12838508splitHere46","BroadcastReceiver"
"5691splitHere46","12838508splitHere46","Intent"
"5692splitHere46","12838551splitHere46","<img src=<doubleQuotes46>resource?imageName=${imageNameYouWant}<doubleQuotes46> />"
"5693splitHere46","12838638splitHere46","<doubleQuotes46>dd/MM/yyyy HH:mm<doubleQuotes46>"
"5694splitHere46","12838688splitHere46","JSONObject mainObj = parseJson<newline46mondego>JSONObject playLists = mainObj.getJSONObject(<doubleQuotes46>playlists<doubleQuotes46>)<newline46mondego>JSONObject myList = playList.getJSONObject(<doubleQuotes46>10063<doubleQuotes46>)<newline46mondego><newline46mondego>id = myList.getString(<doubleQuotes46>id<doubleQuotes46>)<newline46mondego>"
"5695splitHere46","12838688splitHere46","for(int i=0;i<playlistKeys.length;i++){<newline46mondego>  playlistObj = playLists.getJSONObject(playlistsKey[i])<newline46mondego>}<newline46mondego>"
"5696splitHere46","12838812splitHere46","try{<newline46mondego>    OozieClient wc = new OozieClient(<doubleQuotes46>http://host.com:11000/oozie<doubleQuotes46>);<newline46mondego><newline46mondego>    Properties conf = wc.createConfiguration();<newline46mondego>    conf.setProperty(....)<newline46mondego>    ...<newline46mondego>    String jobId = wc.run(conf);<newline46mondego>    System.out.println(<doubleQuotes46>Workflow job submitted<doubleQuotes46>);<newline46mondego><newline46mondego>    while (wc.getJobInfo(jobId).getStatus() == WorkflowJob.Status.RUNNING) {<newline46mondego>       System.out.println(<doubleQuotes46>Workflow job running ...<doubleQuotes46>);<newline46mondego>       Thread.sleep(10 * 1000);<newline46mondego>    }<newline46mondego>    System.out.println(<doubleQuotes46>Workflow job completed ...<doubleQuotes46>);<newline46mondego><newline46mondego><newline46mondego>    System.out.println(wc.getJobInfo(jobId)); <newline46mondego>}catch(OozieClientException oozieClientException){<newline46mondego>    oozieClientException.printStackTrace();<newline46mondego>}<newline46mondego>"
"5697splitHere46","12838842splitHere46","public class Sample {<newline46mondego>    public static void main (String[] args) {<newline46mondego>        Scanner newScan = new Scanner (System.in);<newline46mondego><newline46mondego>        System.out.println (<doubleQuotes46>Enter a 3 digit number: <doubleQuotes46>);<newline46mondego>        String line = newScan.nextLine ();<newline46mondego>        int digit;<newline46mondego>        while (true) {<newline46mondego>            if (line.length () == 3) {<newline46mondego>                try {<newline46mondego>                    digit = Integer.parseInt (line);<newline46mondego>                    break;<newline46mondego>                }<newline46mondego>                catch (NumberFormatException e) {<newline46mondego>                    // do nothing.<newline46mondego>                }<newline46mondego>            }<newline46mondego><newline46mondego>            System.out.println (<doubleQuotes46>Error!(<doubleQuotes46> + line + <doubleQuotes46>) Please enter a 3 digit number: <doubleQuotes46>);<newline46mondego>            line = newScan.nextLine ();<newline46mondego>        }<newline46mondego><newline46mondego>        System.out.println (digit);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5698splitHere46","12838842splitHere46","public class Sample {<newline46mondego>    public static void main (String[] args) {<newline46mondego>        Scanner newScan = new Scanner (System.in);<newline46mondego><newline46mondego>        System.out.println (<doubleQuotes46>Enter a 3 digit number: <doubleQuotes46>);<newline46mondego>        String line = newScan.nextLine ();<newline46mondego>        int digit;<newline46mondego><newline46mondego>        while (true) {<newline46mondego>            if (Pattern.matches (<doubleQuotes46>\\d{3}+<doubleQuotes46>, line)) {<newline46mondego>                digit = Integer.parseInt (line);<newline46mondego>                break;<newline46mondego>            }<newline46mondego><newline46mondego>            System.out.println (<doubleQuotes46>Error!(<doubleQuotes46> + line + <doubleQuotes46>) Please enter a 3 digit number: <doubleQuotes46>);<newline46mondego>            line = newScan.nextLine ();<newline46mondego>        }<newline46mondego><newline46mondego>        System.out.println (digit);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5699splitHere46","12838936splitHere46","<plugins><newline46mondego>    <plugin><newline46mondego>        <artifactId>maven-compiler-plugin</artifactId><newline46mondego>        <configuration><newline46mondego>            <source>1.6</source><newline46mondego>            <target>1.6</target><newline46mondego>            <compilerArgument>-proc:none</compilerArgument><newline46mondego>        </configuration><newline46mondego>    </plugin><newline46mondego>    <plugin><newline46mondego>        <groupId>org.bsc.maven</groupId><newline46mondego>        <artifactId>maven-processor-plugin</artifactId><newline46mondego>        <version>1.3.7</version><newline46mondego>        <executions><newline46mondego>            <execution><newline46mondego>                <id>process</id><newline46mondego>                <goals><newline46mondego>                    <goal>process</goal><newline46mondego>                </goals><newline46mondego>                <phase>process-sources</phase><newline46mondego>            </execution><newline46mondego>        </executions><newline46mondego>        <dependencies><newline46mondego>            <dependency><newline46mondego>                <groupId>org.hibernate</groupId><newline46mondego>                <artifactId>hibernate-jpamodelgen</artifactId><newline46mondego>                <version>1.1.0.Final</version><newline46mondego>                <scope>compile</scope><newline46mondego>            </dependency><newline46mondego>        </dependencies><newline46mondego>    </plugin><newline46mondego>"
"5700splitHere46","12839170splitHere46","XYStepRenderer"
"5701splitHere46","12839170splitHere46","SymbolAxis"
"5702splitHere46","12839170splitHere46","CategoryStepRenderer"
"5703splitHere46","12839170splitHere46","XYStepRenderer"
"5704splitHere46","12839170splitHere46","XYStepRenderer renderer = new XYStepRenderer();<newline46mondego>  renderer.setBaseShapesVisible(true);<newline46mondego>  renderer.setSeriesStroke(0, new BasicStroke(2.0f));<newline46mondego>  renderer.setSeriesStroke(1, new BasicStroke(2.0f));<newline46mondego>  renderer.setBaseToolTipGenerator(new StandardXYToolTipGenerator());<newline46mondego>  renderer.setDefaultEntityRadius(6);<newline46mondego>  plot.setRenderer(renderer);<newline46mondego>"
"5705splitHere46","12839170splitHere46","Symbol Axis"
"5706splitHere46","12839170splitHere46","String[] grade =  new String[3];<newline46mondego>  grade[0] = <doubleQuotes46><doubleQuotes46>;<newline46mondego>  grade[1] = <doubleQuotes46>Status A<doubleQuotes46>;<newline46mondego>  grade[2] = <doubleQuotes46>Status B<doubleQuotes46>;<newline46mondego>  SymbolAxis rangeAxis = new SymbolAxis(<doubleQuotes46><doubleQuotes46>, grade);<newline46mondego>  rangeAxis.setTickUnit(new NumberTickUnit(1));<newline46mondego>  rangeAxis.setRange(0,3);<newline46mondego>  plot.setRangeAxis(rangeAxis);<newline46mondego>"
"5707splitHere46","12839170splitHere46","SymbolAxis"
"5708splitHere46","12839193splitHere46","se.lth.cs.ptdc.square.Square"
"5709splitHere46","12839193splitHere46","lastX = centerX - side/2"
"5710splitHere46","12839193splitHere46","lastY = centerY - side/2"
"5711splitHere46","12839193splitHere46","diffX = posX - lastX"
"5712splitHere46","12839193splitHere46","diffY = posY - lastY"
"5713splitHere46","12839193splitHere46","for (int i=1; i<10; i++){<newline46mondego>    squareX = posX + (diffX/10)*i;<newline46mondego>    squareY = posY + (diffY/10)*i;<newline46mondego>    Square square = new Square(squareX,squareY,200);         <newline46mondego>    square.draw(w);<newline46mondego>}<newline46mondego>"
"5714splitHere46","12839357splitHere46","<property name=<doubleQuotes46>mappingLocations<doubleQuotes46> value=<doubleQuotes46>classpath*:hibernate/**/*.hbm.xml<doubleQuotes46> /><newline46mondego>"
"5715splitHere46","12839427splitHere46","findArea"
"5716splitHere46","12839427splitHere46","throws InvalidValueException"
"5717splitHere46","12839427splitHere46","... findArea(...) throws InvalidValueException {<newline46mondego>   ...<newline46mondego>}<newline46mondego>"
"5718splitHere46","12839436splitHere46","CREATE_CONTACTS_TABLE"
"5719splitHere46","12839436splitHere46","<doubleQuotes46>CREATE TABLE <doubleQuotes46> + TABLE_CONTACTS + <doubleQuotes46> (<doubleQuotes46> + KEY_ID + <doubleQuotes46> INTEGER PRIMARY KEY, <doubleQuotes46> + KEY_NAME + <doubleQuotes46> TEXT, <doubleQuotes46> + KEY_PH_NO + <doubleQuotes46> TEXT)<doubleQuotes46>;<newline46mondego>"
"5720splitHere46","12839436splitHere46","<doubleQuotes46>DROP TABLE IF EXISTS <doubleQuotes46> + TABLE_CONTACTS<newline46mondego>"
"5721splitHere46","12839445splitHere46","sudo"
"5722splitHere46","12839445splitHere46","#!/bin/bash<newline46mondego><newline46mondego>export JAVA_HOME=<doubleQuotes46><path to jdk><doubleQuotes46><newline46mondego>R CMD javareconf<newline46mondego>"
"5723splitHere46","12839445splitHere46","myinstall"
"5724splitHere46","12839445splitHere46","chmod +x myinstall"
"5725splitHere46","12839445splitHere46","sudo ./myinstall"
"5726splitHere46","12839575splitHere46","String[] folders = path.split( <doubleQuotes46>/<doubleQuotes46> );<newline46mondego>for ( String folder : folders ) {<newline46mondego>    if ( folder.length() > 0 ) {<newline46mondego>        try {<newline46mondego>            sftp.cd( folder );<newline46mondego>        }<newline46mondego>        catch ( SftpException e ) {<newline46mondego>            sftp.mkdir( folder );<newline46mondego>            sftp.cd( folder );<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5727splitHere46","12839575splitHere46","sftp"
"5728splitHere46","12839575splitHere46","ChannelSftp"
"5729splitHere46","12839603splitHere46","java.lang.NoSuchMethodError"
"5730splitHere46","12839691splitHere46","JTextArea"
"5731splitHere46","12839691splitHere46","JTextArea"
"5732splitHere46","12839691splitHere46","JTable"
"5733splitHere46","12839691splitHere46","JOptionPane"
"5734splitHere46","12839703splitHere46","public class State {<newline46mondego>    private Long id;<newline46mondego>    private String stateName;<newline46mondego><newline46mondego>    // Getters and Setters here...<newline46mondego>}<newline46mondego>"
"5735splitHere46","12839703splitHere46","<s:select name=<doubleQuotes46>states<doubleQuotes46> value=<doubleQuotes46>myPreferredState<doubleQuotes46> listKey=<doubleQuotes46>id<doubleQuotes46> listValue=<doubleQuotes46>stateName<doubleQuotes46> headerKey=<doubleQuotes46>-1<doubleQuotes46> headerValue=<doubleQuotes46>choose a Nation please...<doubleQuotes46> /><newline46mondego>"
"5736splitHere46","12839817splitHere46","@RequestMapping(value = <doubleQuotes46>/updateSomeData<doubleQuotes46> method = RequestMethod.POST)<newline46mondego>@ResponseStatus(value = HttpStatus.OK)<newline46mondego>public void updateDataThatDoesntRequireClientToBeNotified(...) {<newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"5737splitHere46","12840078splitHere46","a(b)c"
"5738splitHere46","12840078splitHere46","abc"
"5739splitHere46","12840078splitHere46","abc"
"5740splitHere46","12840078splitHere46","b"
"5741splitHere46","12840078splitHere46","//(.*?)\n<newline46mondego>"
"5742splitHere46","12840265splitHere46","myRooms"
"5743splitHere46","12840265splitHere46","for (int i = 0; i < NUM_ROOMS; i++) {<newline46mondego>    myRooms.add(new Room());<newline46mondego>}<newline46mondego>"
"5744splitHere46","12840300splitHere46","@Stateless<newline46mondego>public class A implements Foo { ... }<newline46mondego>@Stateless<newline46mondego>public class B extends A implements Bar { ... }<newline46mondego>"
"5745splitHere46","12840413splitHere46","DefaultTableModel myModel = new DefaultTableModel(...) {<newline46mondego>    @Override<newline46mondego>    public boolean isCellEditable(int row, int column) {<newline46mondego>        return false;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5746splitHere46","12840488splitHere46","-vmargs<newline46mondego>-Xms256m<newline46mondego>-Xmx2048m<newline46mondego>"
"5747splitHere46","12840519splitHere46","content"
"5748splitHere46","12840519splitHere46","ScrollPane"
"5749splitHere46","12840519splitHere46","vValue"
"5750splitHere46","12840519splitHere46","hValue"
"5751splitHere46","12840519splitHere46","ensureVisible()"
"5752splitHere46","12840519splitHere46","public class ScrollPaneEnsureVisible extends Application {<newline46mondego><newline46mondego>    private static final Random random = new Random();<newline46mondego><newline46mondego>    private static void ensureVisible(ScrollPane pane, Node node) {<newline46mondego>        double width = pane.getContent().getBoundsInLocal().getWidth();<newline46mondego>        double height = pane.getContent().getBoundsInLocal().getHeight();<newline46mondego><newline46mondego>        double x = node.getBoundsInParent().getMaxX();<newline46mondego>        double y = node.getBoundsInParent().getMaxY();<newline46mondego><newline46mondego>        // scrolling values range from 0 to 1<newline46mondego>        pane.setVvalue(y/height);<newline46mondego>        pane.setHvalue(x/width);<newline46mondego><newline46mondego>        // just for usability<newline46mondego>        node.requestFocus();<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void start(Stage primaryStage) {<newline46mondego><newline46mondego>        final ScrollPane root = new ScrollPane();<newline46mondego>        final Pane content = new Pane();<newline46mondego>        root.setContent(content);<newline46mondego><newline46mondego>        // put 10 buttons at random places with same handler<newline46mondego>        final EventHandler<ActionEvent> handler = new EventHandler<ActionEvent>() {<newline46mondego>            @Override<newline46mondego>            public void handle(ActionEvent event) {<newline46mondego>                int index = random.nextInt(10);<newline46mondego>                System.out.println(<doubleQuotes46>Moving to button <doubleQuotes46> + index);<newline46mondego>                ensureVisible(root, content.getChildren().get(index));<newline46mondego>            }<newline46mondego>        };<newline46mondego><newline46mondego>        for (int i = 0; i < 10; i++) {<newline46mondego>            Button btn = new Button(<doubleQuotes46>next <doubleQuotes46> + i);<newline46mondego>            btn.setOnAction(handler);<newline46mondego>            content.getChildren().add(btn);<newline46mondego>            btn.relocate(2000 * random.nextDouble(), 2000 * random.nextDouble());<newline46mondego>        }<newline46mondego><newline46mondego>        Scene scene = new Scene(root, 300, 250);<newline46mondego>        primaryStage.setScene(scene);<newline46mondego>        primaryStage.show();<newline46mondego><newline46mondego>        // run once to don't search for a first button manually<newline46mondego>        handler.handle(null);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) { launch(); }<newline46mondego>}<newline46mondego>"
"5753splitHere46","12840554splitHere46","public Triangle_getvalues(int a, int b, int c) throws InvalidValueException {<newline46mondego>    validateTriangle(a, b, c);<newline46mondego>    setSide1(a);<newline46mondego>    setSide2(b);<newline46mondego>    setSide3(c);<newline46mondego>}<newline46mondego>"
"5754splitHere46","12840554splitHere46","public void validateTriangle(int sidea, int sideb, int sidec) <newline46mondego>     throws InvalidValueException<newline46mondego> {<newline46mondego>    if ((sidea + sideb > sidec) || (sideb + sidec > sidea)<newline46mondego>        || (sidea + sidec > sideb))<newline46mondego>    {<newline46mondego><newline46mondego>    } else {<newline46mondego>        throw new InvalidValueException;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5755splitHere46","12840628splitHere46","<test>"
"5756splitHere46","12840628splitHere46","<suite>"
"5757splitHere46","12840832splitHere46","public class DetailActivity extends Activity<newline46mondego>{<newline46mondego>    String descriptionFinale = null,imageFinale = null,url;<newline46mondego>    int position;<newline46mondego>TextView description_,titre,date;<newline46mondego>ImageView image_;<newline46mondego>ArrayList<Article> feeds ;<newline46mondego><newline46mondego>WebView contentWebView;<newline46mondego><newline46mondego><newline46mondego>ProgressDialog dialog;<newline46mondego><newline46mondego>@Override<newline46mondego>protected void onCreate(Bundle savedInstanceState) {<newline46mondego>    super.onCreate(savedInstanceState);<newline46mondego>    setContentView(R.layout.detail);<newline46mondego><newline46mondego>    feeds=new Arraylist<Article>;<newline46mondego>    contentWebView= (WebView)findViewById(R.id.contentWebView);<newline46mondego>    date=(TextView) findViewById(R.id.date);<newline46mondego>    titre=(TextView) findViewById(R.id.titre);<newline46mondego>    Bundle b = getIntent().getExtras();<newline46mondego>    position=b.getInt(<doubleQuotes46>position<doubleQuotes46>);<newline46mondego>    url=b.getString(<doubleQuotes46>url<doubleQuotes46>);<newline46mondego>    AndroidSaxFeedParser feedParser= new AndroidSaxFeedParser(url);<newline46mondego><newline46mondego><newline46mondego>    new MyFetchTask().execute();<newline46mondego><newline46mondego><newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>public class MyFetchTask extends AsyncTask<Object, Object, Object><newline46mondego>{<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void onPreExecute() {<newline46mondego>        // TODO Auto-generated method stub<newline46mondego>        super.onPreExecute();<newline46mondego><newline46mondego>        dialog=ProgressDialog.show(DetailActivity.this, <doubleQuotes46><doubleQuotes46>, <doubleQuotes46>Loading...<doubleQuotes46>);<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>    @Override<newline46mondego>    protected Object doInBackground(Object... params) {<newline46mondego>        // TODO Auto-generated method stub<newline46mondego><newline46mondego>        feeds=feedParser.parse();<newline46mondego><newline46mondego>        return null;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void onPostExecute(Object result) {<newline46mondego>        // TODO Auto-generated method stub<newline46mondego>        super.onPostExecute(result);<newline46mondego><newline46mondego>        dialod.dismiss();<newline46mondego>        date.setText(feeds.get(position).getTitle());<newline46mondego>        GetDescriptionWebView.getDescriptionImage(position, feeds,contentWebView);<newline46mondego>        titre.setText(<doubleQuotes46>Postulé le: <doubleQuotes46>+GetDateFormat.getDate(position, feeds));<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>}<newline46mondego>"
"5758splitHere46","12840968splitHere46","int totalDuration() {<newline46mondego>  int totalDuration = 0;<newline46mondego>  for (Job j : myJobs) totalDuration += j.getDuration();<newline46mondego>  return totalDuration;<newline46mondego>}<newline46mondego>"
"5759splitHere46","12840968splitHere46","totalDuration"
"5760splitHere46","12840968splitHere46","addJob"
"5761splitHere46","12840968splitHere46","public void addJob(Job job)<newline46mondego>{<newline46mondego>    myJobs.add(job);<newline46mondego>    totalDuration += job.getDuration();<newline46mondego>}<newline46mondego>"
"5762splitHere46","12840968splitHere46","int totalDuration() { return totalDuration; }<newline46mondego>"
"5763splitHere46","12841094splitHere46","InputStream in = new ByteArrayInputStream(new byte[]{<newline46mondego>        0x00, 0x0a, (byte) 0xff,<newline46mondego>        0x01, 0x01, 0x01, (byte) 0xff,<newline46mondego>        0x01, (byte) 0xff});<newline46mondego><newline46mondego>ByteArrayOutputStream baos = new ByteArrayOutputStream();<newline46mondego>for (int b; (b = in.read()) >= 0; ) {<newline46mondego>    baos.write(b);<newline46mondego>    if (b == 0xff) {<newline46mondego>        byte[] bytes = baos.toByteArray();<newline46mondego>        System.out.println(Arrays.toString(bytes));<newline46mondego>        baos = new ByteArrayOutputStream();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5764splitHere46","12841094splitHere46","(byte) 0xFF == -1"
"5765splitHere46","12841094splitHere46","[0, 10, -1]<newline46mondego>[1, 1, 1, -1]<newline46mondego>[1, -1]<newline46mondego>"
"5766splitHere46","12841145splitHere46","HTTPClient"
"5767splitHere46","12841145splitHere46","httpresponse.getEntity().getContent()<newline46mondego>"
"5768splitHere46","12841246splitHere46","-encoding"
"5769splitHere46","12841246splitHere46","% javadoc -charset <doubleQuotes46>iso-8859-1<doubleQuotes46> mypackage<newline46mondego>         would insert the following line in the head of every generated page:<newline46mondego><newline46mondego>            <META http-equiv=<doubleQuotes46>Content-Type<doubleQuotes46> content=<doubleQuotes46>text/html; charset=ISO-8859-1<doubleQuotes46>><newline46mondego><newline46mondego>         This META tag is described in the HTML standard @<newline46mondego>         http://www.w3.org/TR/REC-html40/charset.html#h-5.2.2. (4197265 and 4137321)<newline46mondego><newline46mondego>      Also see -encoding and -docencoding.<newline46mondego><newline46mondego>      -docencoding  name<newline46mondego>         Specifies the encoding of the generated HTML files. The name should be a preferred MIME name as given in the IANA Registry @<newline46mondego>         http://www.iana.org/assignments/character-sets. If you omit this option but use -encoding, then the encoding of the generated<newline46mondego>"
"5770splitHere46","12841246splitHere46","% javadoc -docencoding <doubleQuotes46>ISO-8859-1<doubleQuotes46> mypackage<newline46mondego>"
"5771splitHere46","12841280splitHere46","final"
"5772splitHere46","12841280splitHere46","const"
"5773splitHere46","12841280splitHere46","protected"
"5774splitHere46","12841280splitHere46","static"
"5775splitHere46","12841348splitHere46","import org.junit.Test;<newline46mondego><newline46mondego>public class TestDebug {<newline46mondego><newline46mondego>  @Test<newline46mondego>  public void test() {<newline46mondego>    Object foo = new Object();<newline46mondego>    System.err.println(foo);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"5776splitHere46","12841430splitHere46","import java.awt.*;<newline46mondego>import javax.swing.*;<newline46mondego>import javax.swing.border.*;<newline46mondego><newline46mondego>public class BorderExample<newline46mondego>{<newline46mondego>    private JPanel topPanel;<newline46mondego>    private JPanel centerPanel;<newline46mondego>    private JPanel bottomPanel;<newline46mondego>    private int hgap;<newline46mondego>    private int vgap;<newline46mondego>    private JTextField tfield1, tfield2;<newline46mondego>    private JComboBox cbox1, cbox2;<newline46mondego>    private String[] data = {<doubleQuotes46>One<doubleQuotes46>, <doubleQuotes46>Two<doubleQuotes46>};<newline46mondego><newline46mondego>    public BorderExample()<newline46mondego>    {<newline46mondego>        hgap = 5;<newline46mondego>        vgap = 5;<newline46mondego>    }<newline46mondego><newline46mondego>    private void displayGUI()<newline46mondego>    {<newline46mondego>        JFrame frame = new JFrame(<doubleQuotes46>Border Example<doubleQuotes46>);<newline46mondego>        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego><newline46mondego>        JPanel contentPane = new JPanel();<newline46mondego>        contentPane.setOpaque(true);<newline46mondego>        contentPane.setBackground(Color.WHITE);<newline46mondego>        contentPane.setBorder(<newline46mondego>            BorderFactory.createEmptyBorder(hgap, hgap, hgap, hgap));<newline46mondego>        contentPane.setLayout(new BorderLayout(hgap, vgap));<newline46mondego><newline46mondego>        topPanel = new JPanel();<newline46mondego>        topPanel.setOpaque(true);<newline46mondego>        topPanel.setBackground(Color.WHITE);<newline46mondego>        topPanel.setBorder(<newline46mondego>            BorderFactory.createTitledBorder(<doubleQuotes46>Top Panel<doubleQuotes46>));<newline46mondego>        tfield1 = new JTextField(10);   <newline46mondego>        tfield1.setBorder(<newline46mondego>            BorderFactory.createTitledBorder(<newline46mondego>            BorderFactory.createEtchedBorder(<newline46mondego>                    EtchedBorder.RAISED, Color.GRAY<newline46mondego>                    , Color.DARK_GRAY), <doubleQuotes46>JTextField<doubleQuotes46>));<newline46mondego>        JPanel comboPanel = new JPanel();           <newline46mondego>        cbox1 = new JComboBox(data);<newline46mondego>        cbox1.setBorder(<newline46mondego>            BorderFactory.createTitledBorder(<doubleQuotes46>JComboBox<doubleQuotes46>)); <newline46mondego>        topPanel.add(tfield1);  <newline46mondego>        topPanel.add(cbox1);<newline46mondego><newline46mondego>        centerPanel = new JPanel(); <newline46mondego>        centerPanel.setOpaque(true);<newline46mondego>        centerPanel.setBackground(Color.WHITE);<newline46mondego>        centerPanel.setBorder(<newline46mondego>            BorderFactory.createTitledBorder(<doubleQuotes46>Center Panel<doubleQuotes46>));<newline46mondego>        tfield2 = new JTextField(10);   <newline46mondego>        tfield2.setBorder(<newline46mondego>            BorderFactory.createLoweredBevelBorder());<newline46mondego>        cbox2 = new JComboBox(data);<newline46mondego>        cbox2.setBorder(<newline46mondego>            BorderFactory.createRaisedBevelBorder());   <newline46mondego>        centerPanel.add(tfield2);   <newline46mondego>        centerPanel.add(cbox2);<newline46mondego><newline46mondego>        bottomPanel = new JPanel(); <newline46mondego>        bottomPanel.setOpaque(true);<newline46mondego>        bottomPanel.setBackground(Color.WHITE);<newline46mondego>        bottomPanel.setBorder(<newline46mondego>            BorderFactory.createTitledBorder(<doubleQuotes46>Center Panel<doubleQuotes46>));<newline46mondego><newline46mondego>        contentPane.add(topPanel, BorderLayout.PAGE_START);<newline46mondego>        contentPane.add(centerPanel, BorderLayout.CENTER);<newline46mondego>        contentPane.add(bottomPanel, BorderLayout.PAGE_END);<newline46mondego><newline46mondego>        frame.setContentPane(contentPane);<newline46mondego>        frame.pack();<newline46mondego>        frame.setLocationByPlatform(true);<newline46mondego>        frame.setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String... args)<newline46mondego>    {<newline46mondego>        SwingUtilities.invokeLater(new Runnable()<newline46mondego>        {<newline46mondego>            @Override<newline46mondego>            public void run()<newline46mondego>            {<newline46mondego>                new BorderExample().displayGUI();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5777splitHere46","12841572splitHere46","maven-surefire-plugin"
"5778splitHere46","12841572splitHere46","test"
"5779splitHere46","12841572splitHere46","<plugin><newline46mondego>    <groupId>org.apache.maven.plugins</groupId><newline46mondego>    <artifactId>maven-surefire-plugin</artifactId><newline46mondego>    <executions><newline46mondego>        <execution><newline46mondego>            <id>default-test</id><newline46mondego>            <!-- Disable the default-test by putting it in phase none --><newline46mondego>            <phase>none</phase><newline46mondego>        </execution><newline46mondego>        <execution><newline46mondego>            <!-- Enable the test during integration-test phase --><newline46mondego>            <id>surefire-it</id><newline46mondego>            <phase>integration-test</phase><newline46mondego>            <goals><newline46mondego>                <goal>test</goal><newline46mondego>            </goals><newline46mondego>        </execution><newline46mondego>    </executions><newline46mondego></plugin><newline46mondego>"
"5780splitHere46","12841572splitHere46","mvn release:prepare"
"5781splitHere46","12841633splitHere46","$(document).ready(function() {<newline46mondego>  $('#example').dataTable( {<newline46mondego>    <doubleQuotes46>bProcessing<doubleQuotes46>: true,<newline46mondego>    <doubleQuotes46>bServerSide<doubleQuotes46>: true,<newline46mondego>    <doubleQuotes46>sAjaxSource<doubleQuotes46>: <doubleQuotes46>scripts/server_processing.php<doubleQuotes46> // for you it will be - /getWidgetsByType<newline46mondego>  } );<newline46mondego>} );<newline46mondego>"
"5782splitHere46","12841633splitHere46","{<newline46mondego>  <doubleQuotes46>sEcho<doubleQuotes46>: 1,<newline46mondego>  <doubleQuotes46>iTotalRecords<doubleQuotes46>: <doubleQuotes46>57<doubleQuotes46>,<newline46mondego>  <doubleQuotes46>iTotalDisplayRecords<doubleQuotes46>: <doubleQuotes46>57<doubleQuotes46>,<newline46mondego>  <doubleQuotes46>aaData<doubleQuotes46>: [<newline46mondego>    [],[],[],...<newline46mondego>  ]<newline46mondego>}<newline46mondego>"
"5783splitHere46","12841644splitHere46","Start"
"5784splitHere46","12841644splitHere46","gameStart()"
"5785splitHere46","12841644splitHere46","gameStart()"
"5786splitHere46","12841644splitHere46","public void main(String args[]) {<newline46mondego>       new Start().gameStart();<newline46mondego>       ..................<newline46mondego>  }<newline46mondego>"
"5787splitHere46","12841746splitHere46","javac"
"5788splitHere46","12841746splitHere46","javadoc"
"5789splitHere46","12841826splitHere46","AsyncTask"
"5790splitHere46","12841826splitHere46","AsyncTask"
"5791splitHere46","12841826splitHere46","runOnUiThread(Runnable)"
"5792splitHere46","12841826splitHere46","setText"
"5793splitHere46","12841826splitHere46","doInBackground"
"5794splitHere46","12841826splitHere46","try/catch"
"5795splitHere46","12841874splitHere46","BufferedImage beam = ImageIO.read(this.getClass().getResource(<doubleQuotes46>/images/beam.png<doubleQuotes46>));<newline46mondego>"
"5796splitHere46","12841874splitHere46","/"
"5797splitHere46","12842237splitHere46","String stringNumber=<doubleQuotes46><doubleQuotes46>+number;<newline46mondego>if(stringNumber.contains(<doubleQuotes46>.6<doubleQuotes46>){<newline46mondego>promt user<newline46mondego>}<newline46mondego>"
"5798splitHere46","12842271splitHere46","DateFormat df1 = new SimpleDateFormat(<doubleQuotes46>dd/MM/yyyy<doubleQuotes46>);<newline46mondego>    DateFormat df2 = new SimpleDateFormat(<doubleQuotes46>d/MM/yyyy<doubleQuotes46>);<newline46mondego>    DateFormat df3 = new SimpleDateFormat(<doubleQuotes46>dd/M/yyyy<doubleQuotes46>);<newline46mondego>"
"5799splitHere46","12842413splitHere46","for (File file : files) {<newline46mondego>    if (file.getName().matches(<doubleQuotes46>.*0[.]txt<doubleQuotes46>) {<newline46mondego>        a++;<newline46mondego>    } else if ...<newline46mondego>}<newline46mondego>"
"5800splitHere46","12842473splitHere46","HashSet"
"5801splitHere46","12842473splitHere46","ArrayList"
"5802splitHere46","12842509splitHere46","JMX"
"5803splitHere46","12842509splitHere46","ThreadMXBean"
"5804splitHere46","12842509splitHere46","ThreadInfo"
"5805splitHere46","12842509splitHere46","ThreadMXBean mxBean = ManagementFactory.getThreadMXBean();<newline46mondego>ThreadInfo[] threadInfos = mxBean.getThreadInfo(mxBean.getAllThreadIds(), 0);<newline46mondego>...<newline46mondego>"
"5806splitHere46","12842509splitHere46","kill -QUIT pid"
"5807splitHere46","12842509splitHere46","private long lastCpuTimeMillis;<newline46mondego>private long lastPollTimeMillis;<newline46mondego><newline46mondego>public void checkLoadAverage() {<newline46mondego>    long now = System.currentTimeMillis();<newline46mondego>    long currentCpuMillis = getTotalCpuTimeMillis();<newline46mondego>    double loadAvg = calcLoadAveragePercentage(now, currentCpuMillis);<newline46mondego>    if (loadAvg > LOAD_AVERAGE_DUMP_THRESHOLD) {<newline46mondego>        try {<newline46mondego>            dumpStack(<doubleQuotes46>Load average percentage is <doubleQuotes46> + loadAvg);<newline46mondego>        } catch (IOException e) {<newline46mondego>            // Oh well, we tried<newline46mondego>        }<newline46mondego>    }<newline46mondego>    lastCpuTimeMillis = currentCpuMillis;<newline46mondego>    lastPollTimeMillis = now;<newline46mondego>}<newline46mondego><newline46mondego>private long getTotalCpuTimeMillis() {<newline46mondego>    long total = 0;<newline46mondego>    for (long id : threadMxBean.getAllThreadIds()) {<newline46mondego>        long cpuTime = threadMxBean.getThreadCpuTime(id);<newline46mondego>        if (cpuTime > 0) {<newline46mondego>            total += cpuTime;<newline46mondego>        }<newline46mondego>    }<newline46mondego>    // since is in nano-seconds<newline46mondego>    long currentCpuMillis = total / 1000000;<newline46mondego>    return currentCpuMillis;<newline46mondego>}<newline46mondego><newline46mondego>private double calcLoadAveragePercentage(long now, long currentCpuMillis) {<newline46mondego>    long timeDiff = now - lastPollTimeMillis;<newline46mondego>    if (timeDiff == 0) {<newline46mondego>        timeDiff = 1;<newline46mondego>    }<newline46mondego>    long cpuDiff = currentCpuMillis - lastCpuTimeMillis;<newline46mondego>    double loadAvg = (double) cpuDiff / (double) timeDiff;<newline46mondego>    return loadAvg;<newline46mondego>}<newline46mondego>"
"5808splitHere46","12842622splitHere46","try { <newline46mondego>            Robot robot = new Robot(); <newline46mondego>            robot.keyPress(KeyEvent.VK_ENTER); <newline46mondego>            } catch (AWTException e) { <newline46mondego>            e.printStackTrace(); <newline46mondego>            }<newline46mondego>"
"5809splitHere46","12842707splitHere46","int oldSensorValue1 = 0;<newline46mondego>int oldSensorValue2 = 0;<newline46mondego>int oldSensorValue3 = 0;<newline46mondego>for (int i = 0; ; i++) {<newline46mondego><newline46mondego>    // Get the data from analog input 5<newline46mondego>    int sensorValue1 = phidget.getSensorValue(1);<newline46mondego>    int sensorValue2 = phidget.getSensorValue(2);<newline46mondego>    int sensorValue3 = phidget.getSensorValue(3);<newline46mondego><newline46mondego>        if (sensorValue1 > 100 && oldSensorValue1 < 100){<newline46mondego><newline46mondego>            System.out.println(<doubleQuotes46>RIGHT<doubleQuotes46>);<newline46mondego><newline46mondego>            // simulates RIGHT key<newline46mondego>            try { <newline46mondego>            Robot robot = new Robot(); <newline46mondego>            robot.keyPress(KeyEvent.VK_RIGHT); <newline46mondego>            } catch (AWTException e) { <newline46mondego>            e.printStackTrace(); <newline46mondego>            }<newline46mondego><newline46mondego>        } else if (sensorValue2 > 100 && oldSensorValue2 < 100)<newline46mondego>        {<newline46mondego>            System.out.println(<doubleQuotes46>LEFT<doubleQuotes46>);<newline46mondego><newline46mondego>            // simulates LEFT key<newline46mondego>            try { <newline46mondego>            Robot robot = new Robot(); <newline46mondego>            robot.keyPress(KeyEvent.VK_LEFT); <newline46mondego>            } catch (AWTException e) { <newline46mondego>            e.printStackTrace(); <newline46mondego>            }<newline46mondego>        } else if (sensorValue3 > 100 && oldSensorValue3 < 100)<newline46mondego>        {<newline46mondego>            System.out.println(<doubleQuotes46>ENTER<doubleQuotes46>);<newline46mondego><newline46mondego>            // simulates RIGHT key<newline46mondego>            try { <newline46mondego>            Robot robot = new Robot(); <newline46mondego>            robot.keyPress(KeyEvent.VK_RIGHT); <newline46mondego>            } catch (AWTException e) { <newline46mondego>            e.printStackTrace(); <newline46mondego>            }<newline46mondego>        }<newline46mondego>        oldSensorValue1 = sensorValue1;<newline46mondego>        oldSensorValue2 = sensorValue2;<newline46mondego>        oldSensorValue3 = sensorValue3;<newline46mondego>}<newline46mondego>"
"5810splitHere46","12842764splitHere46","<script type=<doubleQuotes46>text/javascript<doubleQuotes46>><newline46mondego>    function VerifyUsername()<newline46mondego>    {<newline46mondego>        //alert(<doubleQuotes46>In Verify Method<doubleQuotes46>);<newline46mondego>        var name=document.getElementById(<doubleQuotes46>username<doubleQuotes46>).value;<newline46mondego>        //alert(name);<newline46mondego>        var xmlhttp;<newline46mondego>        if (window.XMLHttpRequest)<newline46mondego>        {// code for IE7+, Firefox, Chrome, Opera, Safari<newline46mondego>            xmlhttp=new XMLHttpRequest();<newline46mondego>            //alert(<doubleQuotes46>http<doubleQuotes46>);<newline46mondego>         }<newline46mondego>        else<newline46mondego>        {// code for IE6, IE5<newline46mondego>            xmlhttp=new ActiveXObject(<doubleQuotes46>Microsoft.XMLHTTP<doubleQuotes46>);<newline46mondego>            alert(<doubleQuotes46>http active<doubleQuotes46>);<newline46mondego>        }<newline46mondego>        xmlhttp.onreadystatechange=function()<newline46mondego>        {<newline46mondego>            //alert(<doubleQuotes46>in Function()<doubleQuotes46>);<newline46mondego>            if (xmlhttp.readyState==4 && xmlhttp.status==200)<newline46mondego>            {<newline46mondego>                try<newline46mondego>                {<newline46mondego>                    //alert(<doubleQuotes46>In Try<doubleQuotes46>);<newline46mondego>                    document.getElementById(<doubleQuotes46>errorpass<doubleQuotes46>).innerHTML=xmlhttp.responseText;<newline46mondego>                    /*var response = xmlhttp.responseText;<newline46mondego>                    alert(response);<newline46mondego>                    if(response.toString()=='notmatch')<newline46mondego>                    {<newline46mondego>                        alert(<doubleQuotes46>Ok<doubleQuotes46>);<newline46mondego>                        document.getElementById(<doubleQuotes46>errorpass<doubleQuotes46>).innerHTML =<doubleQuotes46>OK<doubleQuotes46>;<newline46mondego>                    }<newline46mondego>                    if(response =='match')<newline46mondego>                    {<newline46mondego>                        alert(<doubleQuotes46>Not Ok<doubleQuotes46>);<newline46mondego>                        document.getElementById(<doubleQuotes46>errorpass<doubleQuotes46>).innerHTML =<doubleQuotes46>Take Other Name.<doubleQuotes46>;<newline46mondego>                    }*/<newline46mondego>                }<newline46mondego>                catch(ex)<newline46mondego>                {<newline46mondego>                    alert(<doubleQuotes46>Exception in function <doubleQuotes46>+ex);<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego>        //xmlhttp.open(<doubleQuotes46>POST<doubleQuotes46>,<doubleQuotes46>servlet/UsernamePresence_Serv?UserId<doubleQuotes46>+name,true);<newline46mondego>        xmlhttp.open(<doubleQuotes46>POST<doubleQuotes46>,<doubleQuotes46>servlet/UsernamePresence_Serv?<doubleQuotes46>+name,true);<newline46mondego>        var params = <doubleQuotes46>UserId=<doubleQuotes46>+name;<newline46mondego>        xmlhttp.setRequestHeader(<doubleQuotes46>Content-type<doubleQuotes46>,<doubleQuotes46>application/x-www-form-urlencoded<doubleQuotes46>);<newline46mondego>        xmlhttp.setRequestHeader(<doubleQuotes46>Content-length<doubleQuotes46>, params.length);<newline46mondego>        xmlhttp.setRequestHeader(<doubleQuotes46>Connection<doubleQuotes46>, <doubleQuotes46>close<doubleQuotes46>); <newline46mondego>        xmlhttp.send(params);<newline46mondego>    }<newline46mondego></script><newline46mondego>"
"5811splitHere46","12842764splitHere46","public void doPost(HttpServletRequest request, HttpServletResponse response)<newline46mondego>        throws ServletException, IOException {<newline46mondego><newline46mondego>    response.setContentType(<doubleQuotes46>text/html<doubleQuotes46>);<newline46mondego>    PrintWriter out = response.getWriter();<newline46mondego>    try<newline46mondego>    {<newline46mondego>        Session session=Hibernate_Class.sessionObject();<newline46mondego>        String userID=null;<newline46mondego>        userID = request.getParameter(<doubleQuotes46>UserId<doubleQuotes46>);<newline46mondego><newline46mondego>        login_model loginModel_Obj=new login_model();<newline46mondego>        loginModel_Obj._Name=userID;<newline46mondego>        System.out.print(<doubleQuotes46>at <doubleQuotes46>+userID);<newline46mondego>        boolean username_bool=Hibernate_Class.usernamePresence(loginModel_Obj, session);<newline46mondego><newline46mondego>        if (username_bool)<newline46mondego>        {<newline46mondego>            out.println(<doubleQuotes46>Username Present In Database<doubleQuotes46>);<newline46mondego>        }<newline46mondego>        else<newline46mondego>        {<newline46mondego>            out.println(<doubleQuotes46>Username Not Present In Database<doubleQuotes46>);<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego>    finally{}<newline46mondego>    out.close();<newline46mondego>}<newline46mondego>"
"5812splitHere46","12842857splitHere46","@RequestMapping(<doubleQuotes46>/readmessage<doubleQuotes46>)<newline46mondego>public String readMessage(@ModelAttribute(<doubleQuotes46>message<doubleQuotes46>) Message message,<newline46mondego>  ModelMap map) {<newline46mondego>    some_message_object = someService.getMessage() ;<newline46mondego>    map.addAttribute(<doubleQuotes46>message<doubleQuotes46>, some_message_object) ;<newline46mondego>}<newline46mondego>"
"5813splitHere46","12842857splitHere46","message"
"5814splitHere46","12843050splitHere46","s"
"5815splitHere46","12843050splitHere46","substring()"
"5816splitHere46","12843050splitHere46","trim()"
"5817splitHere46","12843050splitHere46","s"
"5818splitHere46","12843050splitHere46","s.trim()"
"5819splitHere46","12843050splitHere46","s"
"5820splitHere46","12843050splitHere46","String"
"5821splitHere46","12843050splitHere46","s = s.trim();"
"5822splitHere46","12843068splitHere46","GenericClass"
"5823splitHere46","12843068splitHere46","Class<T>"
"5824splitHere46","12843068splitHere46","class GenericClass<T> {<newline46mondego><newline46mondego>    Class<T> clazz;<newline46mondego><newline46mondego>    public GenericClass(Class<T> c) {<newline46mondego>        clazz = c;<newline46mondego>    }<newline46mondego><newline46mondego>    protected void doStuff() {<newline46mondego>        methodToCall(clazz);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"5825splitHere46","12843193splitHere46","Assert.assertEquals"
"5826splitHere46","12843193splitHere46","expected"
"5827splitHere46","12843193splitHere46","found"
"5828splitHere46","12843223splitHere46","final ImageView anImage = new ImageView();   <newline46mondego>        Image image1 = new Image(StackedBarM.class.getResourceAsStream(<doubleQuotes46>a.png<doubleQuotes46>));<newline46mondego>        anImage.setImage(image1);<newline46mondego>        anImage.setFitWidth(40);<newline46mondego>        anImage.setPreserveRatio(true);<newline46mondego>        anImage.setSmooth(true); <newline46mondego>        anImage.setCache(true); <newline46mondego>"
"5829splitHere46","12843233splitHere46","Motors"
"5830splitHere46","12843280splitHere46","static class MyHandler implements ClickHandler ...<newline46mondego>"
"5831splitHere46","12843355splitHere46","i=0"
"5832splitHere46","12843355splitHere46","i"
"5833splitHere46","12843355splitHere46","while ( (nextLine = reader.readNext()) != null){<newline46mondego>            for(String value: nextLine){<newline46mondego>               System.out.println(value); // Debug only<newline46mondego>            }<newline46mondego>        }<newline46mondego>"
"5834splitHere46","12843666splitHere46","sendButton.setEnabled(true);<newline46mondego>"
"5835splitHere46","12843666splitHere46","enabled"
"5836splitHere46","12843666splitHere46","onClick()"
"5837splitHere46","12843666splitHere46","onSuccess()"
"5838splitHere46","12843666splitHere46","@Override<newline46mondego>public void onSuccess(String result) {<newline46mondego>    processXML(result);<newline46mondego>    sendButton.setEnabled(true);<newline46mondego>}<newline46mondego>"
"5839splitHere46","12843931splitHere46","@Override<newline46mondego>public void onStart(){<newline46mondego>    super.onStart();<newline46mondego>    Button button = (Button) findViewById(R.id.test_button);<newline46mondego>    button.setOnClickListener(new View.OnClickListener() {<newline46mondego><newline46mondego>        public void onClick(View v) {<newline46mondego>            Log.i(TAG, <doubleQuotes46>Clicked<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    });<newline46mondego>    // This will NOT trigger the onClickListener!<newline46mondego>    button.setPressed(true);<newline46mondego>}<newline46mondego>"
"5840splitHere46","12843956splitHere46","A a1 = (A)b;<newline46mondego>"
"5841splitHere46","12843956splitHere46","B b2 = (B) A;<newline46mondego>"
"5842splitHere46","12843956splitHere46","B"
"5843splitHere46","12843956splitHere46","void method(Object o) { }<newline46mondego><newline46mondego>void method(String s) { }<newline46mondego><newline46mondego>method(<doubleQuotes46>hello<doubleQuotes46>);          // calls method(String)<newline46mondego>method((Object) <doubleQuotes46>hello<doubleQuotes46>); // calls method(Object)<newline46mondego>"
"5844splitHere46","12844047splitHere46","SimpleDateFormat"
"5845splitHere46","12844047splitHere46","java.util.Date utilDate = new SimpleDateFormat(<doubleQuotes46>dd MMM yyyy<doubleQuotes46>).parse(<doubleQuotes46>01 NOVEMBER 2012<doubleQuotes46>);<newline46mondego>"
"5846splitHere46","12844047splitHere46","java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());<newline46mondego>"
"5847splitHere46","12844115splitHere46","import java.awt.*;<newline46mondego>import java.awt.event.*;<newline46mondego>import java.util.EventObject;<newline46mondego>import javax.swing.*;<newline46mondego>import javax.swing.event.*;<newline46mondego>import javax.swing.table.*;<newline46mondego><newline46mondego>public class ComboCellInsetsDemo {<newline46mondego>  public JComponent makeUI() {<newline46mondego>    String[] columnNames = {<doubleQuotes46>Name<doubleQuotes46>, <doubleQuotes46>Check<doubleQuotes46>, <doubleQuotes46>Condition<doubleQuotes46>};<newline46mondego>    Object[][] data = {<newline46mondego>      {<doubleQuotes46>bbb<doubleQuotes46>, false, <doubleQuotes46>=<doubleQuotes46>}, {<doubleQuotes46>aaa<doubleQuotes46>, true, <doubleQuotes46><<doubleQuotes46>}<newline46mondego>    };<newline46mondego>    DefaultTableModel model = new DefaultTableModel(data, columnNames) {<newline46mondego>      @Override public Class<?> getColumnClass(int column) {<newline46mondego>        return getValueAt(0, column).getClass();<newline46mondego>      }<newline46mondego>    };<newline46mondego>    JTable table = new JTable(model);<newline46mondego>    table.setRowHeight(36);<newline46mondego>    table.setAutoCreateRowSorter(true);<newline46mondego>    TableColumn column = table.getColumnModel().getColumn(2);<newline46mondego>    column.setCellRenderer(new ComboBoxCellRenderer());<newline46mondego>    column.setCellEditor(new ComboBoxCellEditor());<newline46mondego>    return new JScrollPane(table);<newline46mondego>  }<newline46mondego>  public static void main(String[] args) {<newline46mondego>    EventQueue.invokeLater(new Runnable() {<newline46mondego>      @Override public void run() {<newline46mondego>        createAndShowGUI();<newline46mondego>      }<newline46mondego>    });<newline46mondego>  }<newline46mondego>  public static void createAndShowGUI() {<newline46mondego>    JFrame f = new JFrame();<newline46mondego>    f.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);<newline46mondego>    f.getContentPane().add(new ComboCellInsetsDemo().makeUI());<newline46mondego>    f.setSize(320, 240);<newline46mondego>    f.setLocationRelativeTo(null);<newline46mondego>    f.setVisible(true);<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>class ComboBoxPanel extends JPanel {<newline46mondego>  private String[] m = new String[] {<doubleQuotes46>><doubleQuotes46>, <doubleQuotes46><<doubleQuotes46>, <doubleQuotes46>=<doubleQuotes46>, <doubleQuotes46><=<doubleQuotes46>};<newline46mondego>  protected JComboBox<String> comboBox = new JComboBox<String>(m) {<newline46mondego>    @Override public Dimension getPreferredSize() {<newline46mondego>      Dimension d = super.getPreferredSize();<newline46mondego>      return new Dimension(40, d.height);<newline46mondego>    }<newline46mondego>  };<newline46mondego>  public ComboBoxPanel() {<newline46mondego>    super();<newline46mondego>    setOpaque(true);<newline46mondego>    comboBox.setEditable(true);<newline46mondego>    add(comboBox);<newline46mondego>  }<newline46mondego>}<newline46mondego>class ComboBoxCellRenderer extends ComboBoxPanel<newline46mondego>                           implements TableCellRenderer {<newline46mondego>  public ComboBoxCellRenderer() {<newline46mondego>    super();<newline46mondego>    setName(<doubleQuotes46>Table.cellRenderer<doubleQuotes46>);<newline46mondego>  }<newline46mondego>  @Override public Component getTableCellRendererComponent(<newline46mondego>      JTable table, Object value, boolean isSelected,<newline46mondego>      boolean hasFocus, int row, int column) {<newline46mondego>    setBackground(isSelected?table.getSelectionBackground()<newline46mondego>                            :table.getBackground());<newline46mondego>    if(value!=null) {<newline46mondego>      comboBox.setSelectedItem(value);<newline46mondego>    }<newline46mondego>    return this;<newline46mondego>  }<newline46mondego>}<newline46mondego>class ComboBoxCellEditor extends ComboBoxPanel<newline46mondego>                         implements TableCellEditor {<newline46mondego>  public ComboBoxCellEditor() {<newline46mondego>    super();<newline46mondego>    comboBox.addActionListener(new ActionListener() {<newline46mondego>      @Override public void actionPerformed(ActionEvent e) {<newline46mondego>        fireEditingStopped();<newline46mondego>      }<newline46mondego>    });<newline46mondego>    addMouseListener(new MouseAdapter() {<newline46mondego>      @Override public void mousePressed(MouseEvent e) {<newline46mondego>        fireEditingStopped();<newline46mondego>      }<newline46mondego>    });<newline46mondego>  }<newline46mondego>  @Override public Component getTableCellEditorComponent(<newline46mondego>      JTable table, Object value, boolean isSelected, int row, int column) {<newline46mondego>    this.setBackground(table.getSelectionBackground());<newline46mondego>    comboBox.setSelectedItem(value);<newline46mondego>    return this;<newline46mondego>  }<newline46mondego><newline46mondego>  //Copid from DefaultCellEditor.EditorDelegate<newline46mondego>  @Override public Object getCellEditorValue() {<newline46mondego>    return comboBox.getSelectedItem();<newline46mondego>  }<newline46mondego>  @Override public boolean shouldSelectCell(EventObject anEvent) {<newline46mondego>    if(anEvent instanceof MouseEvent) {<newline46mondego>      MouseEvent e = (MouseEvent)anEvent;<newline46mondego>      return e.getID() != MouseEvent.MOUSE_DRAGGED;<newline46mondego>    }<newline46mondego>    return true;<newline46mondego>  }<newline46mondego>  @Override public boolean stopCellEditing() {<newline46mondego>    if(comboBox.isEditable()) {<newline46mondego>      comboBox.actionPerformed(new ActionEvent(this, 0, <doubleQuotes46><doubleQuotes46>));<newline46mondego>    }<newline46mondego>    fireEditingStopped();<newline46mondego>    return true;<newline46mondego>  }<newline46mondego><newline46mondego>  //Copid from AbstractCellEditor<newline46mondego>  //protected EventListenerList listenerList = new EventListenerList();<newline46mondego>  transient protected ChangeEvent changeEvent = null;<newline46mondego><newline46mondego>  @Override public boolean isCellEditable(EventObject e) {<newline46mondego>    return true;<newline46mondego>  }<newline46mondego>  @Override public void  cancelCellEditing() {<newline46mondego>    fireEditingCanceled();<newline46mondego>  }<newline46mondego>  @Override public void addCellEditorListener(CellEditorListener l) {<newline46mondego>    listenerList.add(CellEditorListener.class, l);<newline46mondego>  }<newline46mondego>  @Override public void removeCellEditorListener(CellEditorListener l) {<newline46mondego>    listenerList.remove(CellEditorListener.class, l);<newline46mondego>  }<newline46mondego>  public CellEditorListener[] getCellEditorListeners() {<newline46mondego>    return listenerList.getListeners(CellEditorListener.class);<newline46mondego>  }<newline46mondego>  protected void fireEditingStopped() {<newline46mondego>    // Guaranteed to return a non-null array<newline46mondego>    Object[] listeners = listenerList.getListenerList();<newline46mondego>    // Process the listeners last to first, notifying<newline46mondego>    // those that are interested in this event<newline46mondego>    for(int i = listeners.length-2; i>=0; i-=2) {<newline46mondego>      if(listeners[i]==CellEditorListener.class) {<newline46mondego>        // Lazily create the event:<newline46mondego>        if(changeEvent == null) changeEvent = new ChangeEvent(this);<newline46mondego>        ((CellEditorListener)listeners[i+1]).editingStopped(changeEvent);<newline46mondego>      }<newline46mondego>    }<newline46mondego>  }<newline46mondego>  protected void fireEditingCanceled() {<newline46mondego>    // Guaranteed to return a non-null array<newline46mondego>    Object[] listeners = listenerList.getListenerList();<newline46mondego>    // Process the listeners last to first, notifying<newline46mondego>    // those that are interested in this event<newline46mondego>    for(int i = listeners.length-2; i>=0; i-=2) {<newline46mondego>      if(listeners[i]==CellEditorListener.class) {<newline46mondego>        // Lazily create the event:<newline46mondego>        if(changeEvent == null) changeEvent = new ChangeEvent(this);<newline46mondego>        ((CellEditorListener)listeners[i+1]).editingCanceled(changeEvent);<newline46mondego>      }<newline46mondego>    }<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"5848splitHere46","12844221splitHere46","new AnnotationConfigApplicationContext(BeanSample.class)<newline46mondego>"
"5849splitHere46","12844221splitHere46","@Configuration"
"5850splitHere46","12844221splitHere46","@Bean"
"5851splitHere46","12844221splitHere46","BeanSample"
"5852splitHere46","12844221splitHere46","@Bean"
"5853splitHere46","12844221splitHere46","@Configuration"
"5854splitHere46","12844221splitHere46","@Bean"
"5855splitHere46","12844221splitHere46","getSomeBean"
"5856splitHere46","12844221splitHere46","someBean"
"5857splitHere46","12844221splitHere46","@Bean(destroyMethod = <doubleQuotes46>stop<doubleQuotes46>)<newline46mondego>public SomeBean someBean() throws Exception {<newline46mondego>    return new SomeBean(<doubleQuotes46>somebean name1<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"5858splitHere46","12844221splitHere46","@Configuration"
"5859splitHere46","12844272splitHere46","Uri.parse(imagePath)"
"5860splitHere46","12844272splitHere46","Uri.fromFile(new File(imagePath))"
"5861splitHere46","12844272splitHere46","Intent intent = new Intent(android.provider.MediaStore.ACTION_IMAGE_CAPTURE);<newline46mondego>intent.putExtra(android.provider.MediaStore.EXTRA_OUTPUT, Uri.fromFile(new File(imagePath)));<newline46mondego>startActivityForResult(intent, 11);<newline46mondego>"
"5862splitHere46","12844272splitHere46","context.getExternalCacheDir()"
"5863splitHere46","12844272splitHere46","imagePath"
"5864splitHere46","12844272splitHere46","/mnt/sdcard/Android/data/<appPkg>/cache/<appName>/cameraImages/image1.jpg"
"5865splitHere46","12844344splitHere46","java"
"5866splitHere46","12844344splitHere46","jdb"
"5867splitHere46","12844344splitHere46","java -d32 -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=127.0.0.1:5463 -classpath . MainClass<newline46mondego>jdb -attach 127.0.0.1:5463<newline46mondego>"
"5868splitHere46","12844344splitHere46","run"
"5869splitHere46","12844344splitHere46","jdb"
"5870splitHere46","12844400splitHere46","OutputKeys.CDATA_SECTION_ELEMENTS"
"5871splitHere46","12844400splitHere46","cdata-section-elements"
"5872splitHere46","12844400splitHere46","<xsl:output>"
"5873splitHere46","12844400splitHere46","<foo>text</foo>"
"5874splitHere46","12844400splitHere46","<foo><![CDATA[text]]></foo>"
"5875splitHere46","12844465splitHere46","ClassLoader.getCallerClassLoader()"
"5876splitHere46","12844627splitHere46","int n"
"5877splitHere46","12844627splitHere46","double r"
"5878splitHere46","12844627splitHere46","protected"
"5879splitHere46","12844627splitHere46","getN()"
"5880splitHere46","12844627splitHere46","return n;"
"5881splitHere46","12844627splitHere46","getM()"
"5882splitHere46","12844627splitHere46","return m;"
"5883splitHere46","12844627splitHere46","getQ()"
"5884splitHere46","12844627splitHere46","return q;"
"5885splitHere46","12844627splitHere46","getR()"
"5886splitHere46","12844627splitHere46","return r;"
"5887splitHere46","12844627splitHere46","public abstract Calculator{<newline46mondego>      public abstract calc();<newline46mondego> }<newline46mondego>"
"5888splitHere46","12844627splitHere46","calc"
"5889splitHere46","12844692splitHere46","{<doubleQuotes46>a<doubleQuotes46>, {<doubleQuotes46>b<doubleQuotes46>, <doubleQuotes46>c<doubleQuotes46>}, <doubleQuotes46>d<doubleQuotes46>}"
"5890splitHere46","12844692splitHere46","{<doubleQuotes46>a<doubleQuotes46>, {<doubleQuotes46>b<doubleQuotes46>, <doubleQuotes46>c<doubleQuotes46>}"
"5891splitHere46","12845023splitHere46","s = s.replaceAll(<doubleQuotes46>\\s{3}<doubleQuotes46>, <doubleQuotes46> <doubleQuotes46>);  // Replace 3 spaces with one.<newline46mondego>"
"5892splitHere46","12845023splitHere46","{n}"
"5893splitHere46","12845023splitHere46","n"
"5894splitHere46","12845023splitHere46","{0,n}"
"5895splitHere46","12845023splitHere46","{4,}"
"5896splitHere46","12845023splitHere46","single space"
"5897splitHere46","12845023splitHere46","3 spaces"
"5898splitHere46","12845023splitHere46","s = <doubleQuotes46>He llo   World<doubleQuotes46>;<newline46mondego>s = s.replaceAll(<doubleQuotes46>(\\S)\\s{1}(\\S)<doubleQuotes46>, <doubleQuotes46>$1$2<doubleQuotes46>).replaceAll(<doubleQuotes46>\\s{3}<doubleQuotes46>, <doubleQuotes46> <doubleQuotes46>);<newline46mondego><newline46mondego>System.out.println(s);<newline46mondego>"
"5899splitHere46","12845023splitHere46","Hello World<newline46mondego>"
"5900splitHere46","12845023splitHere46","3 spaces"
"5901splitHere46","12845023splitHere46","single space"
"5902splitHere46","12845023splitHere46","no-space"
"5903splitHere46","12845023splitHere46","(\\S)\\s{1}(\\S)"
"5904splitHere46","12845023splitHere46","\\S"
"5905splitHere46","12845023splitHere46","\\S"
"5906splitHere46","12845352splitHere46","A interface = new B();<newline46mondego>"
"5907splitHere46","12845352splitHere46","B"
"5908splitHere46","12845352splitHere46","print"
"5909splitHere46","12845352splitHere46","print"
"5910splitHere46","12845352splitHere46","A"
"5911splitHere46","12845352splitHere46","@Qualifier(<doubleQuotes46>CLASS_NAME_HERE<doubleQuotes46>)"
"5912splitHere46","12845352splitHere46","@Autowire"
"5913splitHere46","12845509splitHere46","^.{3}abc.{3}$<newline46mondego>"
"5914splitHere46","12845527splitHere46","Layout"
"5915splitHere46","12845527splitHere46","Button buttonOne = new Button(parent, SWT.PUSH); // 1. slot<newline46mondego>Button buttonOne = new Button(parent, SWT.PUSH); // 2. slot<newline46mondego><newline46mondego>new Label(parent, SWT.NONE)  // 3. slot<newline46mondego>new Label(parent, SWT.NONE)  // 4. slot<newline46mondego><newline46mondego>Button buttonThree = new Button(parent, SWT.PUSH); // 5. slot<newline46mondego>Button buttonFour = new Button(parent, SWT.PUSH); // 6. slot<newline46mondego>"
"5916splitHere46","12845527splitHere46","Label labelOne = ..."
"5917splitHere46","12845527splitHere46","GridLayout gridLayout = new GridLayout(6, true);<newline46mondego>"
"5918splitHere46","12845527splitHere46","GridLayout gridLayout = new GridLayout(6, false);<newline46mondego>"
"5919splitHere46","12845527splitHere46","GridData"
"5920splitHere46","12845527splitHere46","Label"
"5921splitHere46","12845527splitHere46","horizontalSpan"
"5922splitHere46","12845527splitHere46","GridData"
"5923splitHere46","12845527splitHere46","Button button = new Button(parent, SWT.PUSH);<newline46mondego>GridData data = new GridData(SWT.FILL, SWT.FILL, true, true);<newline46mondego>data.horizontalSpan = 2;<newline46mondego>button.setLayoutData(data);<newline46mondego>"
"5924splitHere46","12845536splitHere46","ExecutorService"
"5925splitHere46","12845536splitHere46","submit"
"5926splitHere46","12845536splitHere46","notifyTransactions()"
"5927splitHere46","12845536splitHere46","processOperation(Operation op)"
"5928splitHere46","12845536splitHere46","notifyTransactions()"
"5929splitHere46","12845621splitHere46","Resource   rootRc = root.eResource();<newline46mondego>String     rcPath = rootRc.getURI().toPlatformString( true );<newline46mondego>IFile      file   = (IFile)ResourcesPlugin.getWorkspace().getRoot().findMember( rcPath );<newline46mondego>IContainer parent = file.getParent();<newline46mondego>for( IResource member : parent.members())<newline46mondego>{<newline46mondego>   String ext = member.getFileExtension();<newline46mondego>   if( ext != null && ext.equals( <doubleQuotes46>types<doubleQuotes46> ))<newline46mondego>   {<newline46mondego>      String prefix     = member.getName();<newline46mondego>      String path       = member.getLocation().toString();<newline46mondego>      URI    uriSibling = URI.createFileURI( path );<newline46mondego>      prefix = prefix.substring( 0, prefix.length() - <doubleQuotes46>.types<doubleQuotes46>.length());<newline46mondego>      if( ! rcPath.endsWith( '/' + prefix + <doubleQuotes46>.types<doubleQuotes46> )<newline46mondego>         && ( context.getPrefix().isEmpty() || prefix.startsWith( cntxtPrefix )))<newline46mondego>      {<newline46mondego>         Resource types  = rs.createResource( uriSibling );<newline46mondego>         types.load( null );<newline46mondego>         for( EObject rc : types.getContents())<newline46mondego>         {<newline46mondego>            ...<newline46mondego>         }<newline46mondego>      }<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"5930splitHere46","12845811splitHere46","public class FormattedTablePrint {<newline46mondego><newline46mondego>    public static void printRow(int[] row) {<newline46mondego>        for (int i : row) {<newline46mondego>            System.out.print(i);<newline46mondego>            System.out.print(<doubleQuotes46>\t<doubleQuotes46>);<newline46mondego>        }<newline46mondego>        System.out.println();<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        int twoDm[][]= new int[7][5];<newline46mondego>        int i,j,k=1;<newline46mondego><newline46mondego>        for(i=0;i<7;i++) {<newline46mondego>            for(j=0;j<5;j++) {<newline46mondego>                twoDm[i][j]=k;<newline46mondego>                k++;<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        for(int[] row : twoDm) {<newline46mondego>            printRow(row);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5931splitHere46","12845811splitHere46","1   2   3   4   5   <newline46mondego>6   7   8   9   10  <newline46mondego>11  12  13  14  15  <newline46mondego>16  17  18  19  20  <newline46mondego>21  22  23  24  25  <newline46mondego>26  27  28  29  30  <newline46mondego>31  32  33  34  35  <newline46mondego>"
"5932splitHere46","12845917splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego><!DOCTYPE soapui-project><newline46mondego><con:soapui-project name=<doubleQuotes46>Project_sample<doubleQuotes46> resourceRoot=<doubleQuotes46>${projectDir}<doubleQuotes46> ...><newline46mondego>"
"5933splitHere46","12845964splitHere46","ExecutorService"
"5934splitHere46","12845964splitHere46","Callable"
"5935splitHere46","12845964splitHere46","public class ExpensiveTask implements Callable<String> {<newline46mondego><newline46mondego>    private final String param;<newline46mondego><newline46mondego>    public ExpensiveTask(String param) {<newline46mondego>        this.param = param;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public String call() throws Exception {<newline46mondego>        return expensiveMethod(param);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"5936splitHere46","12845964splitHere46","final ExecutorService executorService = Executors.newFixedThreadPool(16);<newline46mondego>final Future<String> res1 = executorService.submit(new ExpensiveTask(<doubleQuotes46>param1<doubleQuotes46>);<newline46mondego>final Future<String> res2 = executorService.submit(new ExpensiveTask(<doubleQuotes46>param2<doubleQuotes46>);<newline46mondego>String obj1 = res1.get();<newline46mondego>String obj2 = res2.get();<newline46mondego>"
"5937splitHere46","12845964splitHere46","ExecutorCompletionService"
"5938splitHere46","12846036splitHere46","drop"
"5939splitHere46","12846036splitHere46","if (event.isDataFlavorSupported(dataFlavor)) {<newline46mondego>    event.acceptDrop(DnDConstants.ACTION_MOVE);<newline46mondego>    this.panel.add(an);<newline46mondego>    event.dropComplete(true);<newline46mondego>    this.panel.validate();<newline46mondego>    this.panel.repaint();<newline46mondego>    return;<newline46mondego>}<newline46mondego>"
"5940splitHere46","12846036splitHere46","if (event.isDataFlavorSupported(dataFlavor)) {<newline46mondego>    event.acceptDrop(DnDConstants.ACTION_MOVE);<newline46mondego>    panel.add(an);<newline46mondego>    panel.revalidate();<newline46mondego>    event.dropComplete(true);<newline46mondego>    return;<newline46mondego>}<newline46mondego>"
"5941splitHere46","12846186splitHere46","SSLSocket"
"5942splitHere46","12846186splitHere46","SSLEngine"
"5943splitHere46","12846186splitHere46","setEnabledCipherSuites"
"5944splitHere46","12846189splitHere46","LinkedHashMap"
"5945splitHere46","12846189splitHere46","Collections.synchronizedMap(mapInstance)<newline46mondego>"
"5946splitHere46","12846189splitHere46","Collections.synchronizedMap(mapINstance);"
"5947splitHere46","12846189splitHere46","Map<K,V> map = Collections.synchronizedMap(new LinkedHashMap());<newline46mondego>"
"5948splitHere46","12846581splitHere46","public class MapsActivity extends MapActivity {<newline46mondego>     private MapView map;<newline46mondego>     public void onCreate(Bundle savedInstanceState) {<newline46mondego>         super.onCreate(savedInstanceState);<newline46mondego>         setContentView(R.layout.maps_layout);<newline46mondego>         map = (MapView) findViewById(R.id.map);<newline46mondego>         map.setBuiltInZoomControls(true);<newline46mondego>     }<newline46mondego>"
"5949splitHere46","12846581splitHere46","protected boolean isRouteDisplayed() {<newline46mondego>        // TODO Auto-generated method stub<newline46mondego>        return false;<newline46mondego>    }<newline46mondego>"
"5950splitHere46","12846675splitHere46","transient a<Integer> b = new a<Integer>(25);<newline46mondego>boolean c = b.d;<newline46mondego>"
"5951splitHere46","12846675splitHere46","d"
"5952splitHere46","12846675splitHere46","protected"
"5953splitHere46","12846675splitHere46","a"
"5954splitHere46","12846741splitHere46","[ -~]"
"5955splitHere46","12846741splitHere46","[ -~\s]"
"5956splitHere46","12846741splitHere46","System.out.println(input.replaceAll(<doubleQuotes46>[^ -~\\s]+<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>));<newline46mondego>"
"5957splitHere46","12846872splitHere46","public Facelet getFacelet(String uri)"
"5958splitHere46","12846872splitHere46","public static HttpServletRequest getRequest() {<newline46mondego>    return (HttpServletRequest) FacesContext.getCurrentInstance().getExternalContext().getRequest();<newline46mondego>}<newline46mondego><newline46mondego>/**<newline46mondego> * Returns the host name from the current request.<newline46mondego> *<newline46mondego> * @return<newline46mondego> */<newline46mondego>public static String getRequestHost() {<newline46mondego>    HttpServletRequest request = getRequest();<newline46mondego>    if (request == null) {<newline46mondego>        return null;<newline46mondego>    }<newline46mondego>    String result = request.getHeader(<doubleQuotes46>x-forwarded-host<doubleQuotes46>);<newline46mondego>    if (result == null || result.isEmpty()) {<newline46mondego>        result = request.getHeader(<doubleQuotes46>host<doubleQuotes46>);<newline46mondego>    }<newline46mondego>    return result;<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>/*<newline46mondego> * (non-Javadoc)<newline46mondego> * <newline46mondego> * @see com.sun.facelets.FaceletFactory#getFacelet(java.lang.String)<newline46mondego> */<newline46mondego>public Facelet getFacelet(String uri) throws IOException, FaceletException,<newline46mondego>        FacesException, ELException {<newline46mondego>    String key = getRequestHost() + <doubleQuotes46>:<doubleQuotes46> + uri;<newline46mondego>    URL url = (URL) this.relativeLocations.get(key);<newline46mondego>    if (url == null) {<newline46mondego>        url = this.resolveURL(this.baseUrl, uri);<newline46mondego>        if (url != null) {<newline46mondego>            Map newLoc = new HashMap(this.relativeLocations);<newline46mondego>            newLoc.put(key, url);<newline46mondego>            this.relativeLocations = newLoc;<newline46mondego>        } else {<newline46mondego>            throw new IOException(<doubleQuotes46>'<doubleQuotes46> + uri + <doubleQuotes46>' not found.<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    }<newline46mondego>    return this.getFacelet(url);<newline46mondego>}<newline46mondego>"
"5959splitHere46","12846891splitHere46","ProcessBuilder"
"5960splitHere46","12846891splitHere46","/bin/sh YOUR COMMAND >YOURFILE"
"5961splitHere46","12846891splitHere46","cmd -c YOUR COMMAND >YOURFILE"
"5962splitHere46","12846891splitHere46","Process.setOutputStream()"
"5963splitHere46","12846891splitHere46","CommandBuilder"
"5964splitHere46","12846891splitHere46","public class CommandBuilder {<newline46mondego>    public void setPrefix(); // e.g. cmd or /bin/sh But some kind of automatic logic should be implemented too, i.e. cmd for windows, /bin/sh for unix<newline46mondego>    public void setCommand(); // for example ping<newline46mondego>    public void addArgument(String value);  // e.g. myhost<newline46mondego>    public void setInputStream(InputStream in);<newline46mondego>    public void setOutputStream(OutputStream in);<newline46mondego><newline46mondego>    // add appropriate getters.<newline46mondego><newline46mondego>    public Process exec();<newline46mondego>    public int execAndWait(); // returns process status<newline46mondego>}<newline46mondego>"
"5965splitHere46","12847178splitHere46","public class DatabaseAdapter {<newline46mondego><newline46mondego>    private DatabaseType type;<newline46mondego><newline46mondego>    public DatabaseAdapter(DatabaseType type) {<newline46mondego>        this.type = type;<newline46mondego>    }<newline46mondego><newline46mondego>    public ResultSet selectFirstTable(double badgeID) {<newline46mondego>        if (type == DatabaseType.Derby) {<newline46mondego>            String s = Double.toString(badgeID);<newline46mondego>            return derbySelectFirstTable(s);<newline46mondego>        } else if (type == DatabaseType.MySQL) {<newline46mondego>            int i = (int) badgeID;<newline46mondego>            return mysqlSelectFirstTable(i);<newline46mondego>        } else {<newline46mondego>            return null;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>public enum DatabaseType {<newline46mondego>    MySQL, Derby<newline46mondego>}<newline46mondego>"
"5966splitHere46","12847178splitHere46","public interface Database {<newline46mondego>    public ResultSet selectFirstTable(double badgeID);<newline46mondego>}<newline46mondego><newline46mondego>public class MySQLDatabase implements Database {<newline46mondego><newline46mondego>    public ResultSet selectFirstTable(double badgeID) {<newline46mondego>         int i = (int) badgeID;<newline46mondego>         // code to select first table in MySQL<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>public class DerbyDatabase implements Database {<newline46mondego><newline46mondego>    public ResultSet selectFirstTable(double badgeID) {<newline46mondego>        String s = Double.toString(badgeID);<newline46mondego>        // code to select first table in Derby<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"5967splitHere46","12847178splitHere46","Database database = null;<newline46mondego>if (type == DatabaseType.MySQL) {<newline46mondego>    database = new MySQLDatabase();<newline46mondego>} else if (type == DatabaseType.Derby) {<newline46mondego>    database = new DerbyDatabase();<newline46mondego>}<newline46mondego>"
"5968splitHere46","12847259splitHere46","package newtable;<newline46mondego>    import java.io.*;<newline46mondego>    public class Newtable {<newline46mondego><newline46mondego>    public static void printRow(int[] row) {<newline46mondego>         for (int i : row) {<newline46mondego>            System.out.print(i);<newline46mondego>            System.out.print(<doubleQuotes46>\t<doubleQuotes46>);<newline46mondego>        }<newline46mondego>        System.out.println();<newline46mondego>    }<newline46mondego><newline46mondego>     public static void main(String[] args)throws Exception {<newline46mondego>     BufferedReader br=new BufferedReader(new InputStreamReader(System.in));   <newline46mondego>     int twoDm[][]= new int[5][7];<newline46mondego>        int i,j,k=1;<newline46mondego>        int ans;<newline46mondego><newline46mondego>        for(i=0;i<5;i++) {<newline46mondego>            for(j=0;j<7;j++) {<newline46mondego>                twoDm[i][j]=k;<newline46mondego>                k++;<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        for(int[] row : twoDm) {<newline46mondego>            printRow(row);<newline46mondego>        }<newline46mondego><newline46mondego>        //this loop repeats the reserving process (and printing seats) 5 times<newline46mondego>        for (int l = 0; l < 5; l++) {<newline46mondego>            System.out.print(<doubleQuotes46>Enter a Seat number to reserve: <doubleQuotes46>);<newline46mondego>            ans = Integer.parseInt(br.readLine());<newline46mondego>            k = 1;<newline46mondego>            for(i=0;i<5;i++) {<newline46mondego>                for(j=0;j<7;j++) {<newline46mondego>                    if (k == ans) {<newline46mondego>                        //here we check if the seat has already been reserved<newline46mondego>                        if (twoDm[i][j]== 0) {<newline46mondego>                            System.out.println(<doubleQuotes46>That seat has already been reserved<doubleQuotes46>);<newline46mondego>                        }<newline46mondego>                        //if its not reserved then reserve it<newline46mondego>                        else {<newline46mondego>                             twoDm[i][j]= 0;<newline46mondego>                        }<newline46mondego>                    }<newline46mondego>                    k++;<newline46mondego>                }<newline46mondego>            }<newline46mondego>            //print updated array of seats<newline46mondego>            for(int[] row : twoDm) {<newline46mondego>                printRow(row);<newline46mondego>            }<newline46mondego>       }<newline46mondego><newline46mondego>  }<newline46mondego>"
"5969splitHere46","12847259splitHere46","k = 1;<newline46mondego>    for(i=0;i<5;i++) {<newline46mondego>       for(j=0;j<7;j++) {<newline46mondego>           if (k == ans) {<newline46mondego>              twoDm[i][j]= 0;<newline46mondego>           }<newline46mondego>           k++;<newline46mondego>       }<newline46mondego>    }<newline46mondego>"
"5970splitHere46","12847260splitHere46","-XX:+DisableExplicitGC"
"5971splitHere46","12847260splitHere46","-XX:+DisableExplicitGC"
"5972splitHere46","12847438splitHere46","File file = null;<newline46mondego><newline46mondego>try {<newline46mondego>    // ... <newline46mondego>    file = new File(...);<newline46mondego>    // ... <newline46mondego>} catch (Exception e) {<newline46mondego>    out.println(<doubleQuotes46>...<doubleQuotes46>);<newline46mondego>}<newline46mondego><newline46mondego>try {<newline46mondego>    if (file.isFile())<newline46mondego>        // ...<newline46mondego>    } else {<newline46mondego>        // ...<newline46mondego>    }<newline46mondego>} catch (Exception e) {<newline46mondego>    out.println(<doubleQuotes46>...<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"5973splitHere46","12847438splitHere46","NullPointerException"
"5974splitHere46","12847438splitHere46","if (file.isFile())"
"5975splitHere46","12847438splitHere46","try"
"5976splitHere46","12847438splitHere46","file"
"5977splitHere46","12847438splitHere46","null"
"5978splitHere46","12847438splitHere46","try"
"5979splitHere46","12847438splitHere46","try"
"5980splitHere46","12847438splitHere46","file"
"5981splitHere46","12847438splitHere46","null"
"5982splitHere46","12847438splitHere46","} catch (Exception e) {<newline46mondego>    throw new ServletException(e);<newline46mondego>}<newline46mondego>"
"5983splitHere46","12847819splitHere46","/**<newline46mondego> * FIRST REMOVE ITALICS, THEN BOLD, THEN URL<newline46mondego> */<newline46mondego>public static String cleanWikiFormat(CharSequence sequence) {<newline46mondego>    return Test.removeUrl(Test.removeBold(Test.removeItalic(sequence)));<newline46mondego>}<newline46mondego>"
"5984splitHere46","12847819splitHere46","import java.util.regex.Matcher;<newline46mondego>import java.util.regex.Pattern;<newline46mondego><newline46mondego><newline46mondego>public class Test {<newline46mondego><newline46mondego>    private static String removeItalic(CharSequence sequence) {<newline46mondego>        Pattern patt = Pattern.compile(<doubleQuotes46>_\\*(.+?)\\*_<doubleQuotes46>);<newline46mondego>        Matcher m = patt.matcher(sequence);<newline46mondego>        StringBuffer sb = new StringBuffer(sequence.length());<newline46mondego>        while (m.find()) {<newline46mondego>            String text = m.group(1);<newline46mondego>            // ... possibly process 'text' ...<newline46mondego>            m.appendReplacement(sb, Matcher.quoteReplacement(text));<newline46mondego>        }<newline46mondego>        m.appendTail(sb);<newline46mondego>        return sb.toString();<newline46mondego>    }<newline46mondego><newline46mondego>    private static String removeBold(CharSequence sequence) {<newline46mondego>        Pattern patt = Pattern.compile(<doubleQuotes46>\\*(.+?)\\*<doubleQuotes46>);<newline46mondego>        Matcher m = patt.matcher(sequence);<newline46mondego>        StringBuffer sb = new StringBuffer(sequence.length());<newline46mondego>        while (m.find()) {<newline46mondego>            String text = m.group(1);<newline46mondego>            // ... possibly process 'text' ...<newline46mondego>            m.appendReplacement(sb, Matcher.quoteReplacement(text));<newline46mondego>        }<newline46mondego>        m.appendTail(sb);<newline46mondego>        return sb.toString();<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>    private static String removeUrl(CharSequence sequence) {<newline46mondego>        Pattern patt = Pattern.compile(<doubleQuotes46>\\[(.+?)\\|\\]<doubleQuotes46>);<newline46mondego>        Matcher m = patt.matcher(sequence);<newline46mondego>        StringBuffer sb = new StringBuffer(sequence.length());<newline46mondego>        while (m.find()) {<newline46mondego>            String text = m.group(1);<newline46mondego>            // ... possibly process 'text' ...<newline46mondego>            m.appendReplacement(sb, Matcher.quoteReplacement(text));<newline46mondego>        }<newline46mondego>        m.appendTail(sb);<newline46mondego>        return sb.toString();<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>    public static String cleanWikiFormat(CharSequence sequence) {<newline46mondego>        return Test.removeUrl(Test.removeBold(Test.removeItalic(sequence)));<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        String text = <doubleQuotes46>[hello|] this is just a *[test|]* to clean wiki *type* and _*formatting*_<doubleQuotes46>;<newline46mondego>        System.out.println(<doubleQuotes46>Original<doubleQuotes46>);<newline46mondego>        System.out.println(text);<newline46mondego>        text = Test.cleanWikiFormat(text);<newline46mondego>        System.out.println(<doubleQuotes46>CHANGED<doubleQuotes46>);<newline46mondego>        System.out.println(text);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5985splitHere46","12847819splitHere46","Original<newline46mondego>[hello|] this is just a *[test|]* to clean wiki *type* and _*formatting*_<newline46mondego>CHANGED<newline46mondego>hello this is just a test to clean wiki type and formatting<newline46mondego>"
"5986splitHere46","12847915splitHere46","."
"5987splitHere46","12847915splitHere46","String fileName = string.split(<doubleQuotes46>\\.<doubleQuotes46>)[1]<newline46mondego>"
"5988splitHere46","12848141splitHere46","#getDeclaredFields()"
"5989splitHere46","12848141splitHere46","#getFields()"
"5990splitHere46","12848141splitHere46","private"
"5991splitHere46","12848141splitHere46","Field#setAccessible()"
"5992splitHere46","12848196splitHere46","//try catch omitted<newline46mondego>  Mongo mongo = new Mongo(<doubleQuotes46>localhost<doubleQuotes46>, 27017);<newline46mondego>  DB db = mongo.getDB(<doubleQuotes46>db<doubleQuotes46>);<newline46mondego><newline46mondego>  BasicDBObject query = new BasicDBObject(<doubleQuotes46>item.name<doubleQuotes46>,<doubleQuotes46>item1<doubleQuotes46>);<newline46mondego>  DBCursor cur = db.getCollection(<doubleQuotes46>items<doubleQuotes46>).find(query);<newline46mondego>  while(cur.hasNext()) {<newline46mondego>      BasicDBObject object = (BasicDBObject) cur.next();<newline46mondego>      BasicDBObject item =  (BasicDBObject) object.get(<doubleQuotes46>item<doubleQuotes46>);<newline46mondego>      BasicDBList valueslist = (BasicDBList) item.get(<doubleQuotes46>values<doubleQuotes46>);<newline46mondego>      BasicDBObject values = (BasicDBObject) valueslist.get(0);<newline46mondego>      BasicDBList value1 = (BasicDBList) values.get(<doubleQuotes46>value1<doubleQuotes46>);<newline46mondego>      System.out.println(value1); <newline46mondego>  }<newline46mondego>"
"5993splitHere46","12848199splitHere46","ActivityResults.data = searchList;<newline46mondego>Intent intent = new Intent(ActivitySearch.this,ActivityResults.class);<newline46mondego>startActivity(intent);<newline46mondego>"
"5994splitHere46","12848281splitHere46","<bean class=<doubleQuotes46>com.initech.reports.tps.ParameterSetter<doubleQuotes46><newline46mondego>        scope=<doubleQuotes46>step<doubleQuotes46>><newline46mondego>        <constructor-arg value=<doubleQuotes46>#{jobParameters['myParam']}<doubleQuotes46>/><newline46mondego>    </bean><newline46mondego>"
"5995splitHere46","12848509splitHere46","Apple apple = (Apple) field.get(person);<newline46mondego>"
"5996splitHere46","12848509splitHere46","apple"
"5997splitHere46","12848509splitHere46","person"
"5998splitHere46","12848623splitHere46","*"
"5999splitHere46","12848623splitHere46","*?"
"6000splitHere46","12848623splitHere46","Pattern ptrn = Pattern.compile(<doubleQuotes46>\\b(A.*?B)\\b<doubleQuotes46>);<newline46mondego>"
"6001splitHere46","12848652splitHere46","class BagOfPrimitives {<newline46mondego>    private int value1;<newline46mondego>    private String value2;<newline46mondego>    private transient int value3;<newline46mondego>    public BagOfPrimitives(int value1, String value2, int value3) {<newline46mondego>        this.value1 = value1;<newline46mondego>        this.value2 = value2;<newline46mondego>        this.value3 = value3;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>BagOfPrimitives obj1 = new BagOfPrimitives(1, <doubleQuotes46>abc<doubleQuotes46>, 3);<newline46mondego>BagOfPrimitives obj2 = new BagOfPrimitives(32, <doubleQuotes46>gawk<doubleQuotes46>, 500);<newline46mondego>List<BagOfPrimitives> list = Arrays.asList(obj1, obj2);<newline46mondego>Gson gson = new Gson();<newline46mondego>String json = gson.toJson(list);  <newline46mondego>// Now json is [{<doubleQuotes46>value1<doubleQuotes46>:1,<doubleQuotes46>value2<doubleQuotes46>:<doubleQuotes46>abc<doubleQuotes46>},{<doubleQuotes46>value1<doubleQuotes46>:32,<doubleQuotes46>value2<doubleQuotes46>:<doubleQuotes46>gawk<doubleQuotes46>}]<newline46mondego>"
"6002splitHere46","12848686splitHere46","public class MyObject {<newline46mondego>    private Item item;<newline46mondego>    private String _id;<newline46mondego><newline46mondego>    // getters, setters, etc.<newline46mondego>}<newline46mondego><newline46mondego>public class Item {<newline46mondego>    private List<Value> values;<newline46mondego>    private String name;<newline46mondego><newline46mondego>    // getters, setters, etc.<newline46mondego>}<newline46mondego><newline46mondego>public class Value {<newline46mondego>    private List<Integer> values1;<newline46mondego>    private List<Integer> values2;<newline46mondego><newline46mondego>    // getters, setters, etc.<newline46mondego>}<newline46mondego>"
"6003splitHere46","12848686splitHere46","MyObject.class"
"6004splitHere46","12848686splitHere46","MyObject myObj = g.fromJson(tmp.toString(), MyObject.class);<newline46mondego>"
"6005splitHere46","12848686splitHere46","values"
"6006splitHere46","12848686splitHere46","List<Integer> values1 = myObj.getItem().getValues().get(0).getValues1();<newline46mondego>List<Integer> values2 = myObj.getItem().getValues().get(0).getValues2();<newline46mondego>"
"6007splitHere46","12848746splitHere46","private static final String METHOD_TO_REPLACE =<newline46mondego>    <doubleQuotes46>\\Q<doubleQuotes46> +<newline46mondego>    <doubleQuotes46>function sayHi() {\n<doubleQuotes46> +<newline46mondego>    <doubleQuotes46>   alert('hi');\n<doubleQuotes46> +<newline46mondego>    <doubleQuotes46>}<doubleQuotes46> +<newline46mondego>    <doubleQuotes46>\\E<doubleQuotes46>;<newline46mondego>"
"6008splitHere46","12848746splitHere46","function sayHi() {<newline46mondego>    alert(<doubleQuotes46>Hello, World!<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"6009splitHere46","12848746splitHere46","void sayHi() {<newline46mondego>    alert(<doubleQuotes46>Hello, World!<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"6010splitHere46","12848771splitHere46","import java.util.Scanner;<newline46mondego><newline46mondego>public class ScannerEx {<newline46mondego><newline46mondego>public static void main(String[] args) {<newline46mondego>    Scanner scanner = new Scanner(new File(<doubleQuotes46>input.txt<doubleQuotes46>));<newline46mondego>    int count = 1;<newline46mondego>    while(scanner.hasNextLine()) {<newline46mondego>        String nextLine = scanner.nextLine();<newline46mondego>        if(count % 4 == 0) {<newline46mondego>             //Dollar amount in nextLine<newline46mondego>        }<newline46mondego>        count++;<newline46mondego>    }<newline46mondego><newline46mondego> }<newline46mondego>}<newline46mondego>"
"6011splitHere46","12848795splitHere46","exec"
"6012splitHere46","12848795splitHere46","String[]"
"6013splitHere46","12848795splitHere46","String cmds[] = { <doubleQuotes46>open<doubleQuotes46>, <doubleQuotes46>/Applications/Font Book.app<doubleQuotes46> };<newline46mondego>Runtime.getRuntime().exec(cmds);<newline46mondego>"
"6014splitHere46","12848795splitHere46","Runtime.getRuntime().exec(<doubleQuotes46>open /Applications/Font Book.app<doubleQuotes46>);<newline46mondego>"
"6015splitHere46","12848795splitHere46","exec"
"6016splitHere46","12848795splitHere46","String[]"
"6017splitHere46","12848945splitHere46","select view from ForumTopicView view<newline46mondego>where view.user = :currentUser<newline46mondego>and view.topic in (:listOfTopics)<newline46mondego>"
"6018splitHere46","12848956splitHere46","<LinearLayout<newline46mondego>        android:layout_width=<doubleQuotes46>match_parent<doubleQuotes46><newline46mondego>        android:layout_height=<doubleQuotes46>match_parent<doubleQuotes46><newline46mondego>        android:orientation=<doubleQuotes46>vertical<doubleQuotes46>><newline46mondego>        <View<newline46mondego>            android:layout_width=<doubleQuotes46>match_parent<doubleQuotes46><newline46mondego>            android:layout_height=<doubleQuotes46>0dp<doubleQuotes46><newline46mondego>            android:layout_weight=<doubleQuotes46>7<doubleQuotes46>/><newline46mondego>        <WhateverCustomViewGroup<newline46mondego>            android:background=<doubleQuotes46>@drawable/btn_green<doubleQuotes46><newline46mondego>            android:text=<doubleQuotes46>View with Special Gesturing<doubleQuotes46><newline46mondego>            android:textColor=<doubleQuotes46>@color/white<doubleQuotes46><newline46mondego>            android:textSize=<doubleQuotes46>20sp<doubleQuotes46><newline46mondego>            android:gravity=<doubleQuotes46>bottom<doubleQuotes46><newline46mondego>            android:layout_width=<doubleQuotes46>match_parent<doubleQuotes46><newline46mondego>            android:layout_height=<doubleQuotes46>0dp<doubleQuotes46><newline46mondego>            android:layout_weight=<doubleQuotes46>1<doubleQuotes46>/><newline46mondego>    </LinearLayout><newline46mondego>"
"6019splitHere46","12848956splitHere46","setVisibility(GONE)"
"6020splitHere46","12848998splitHere46","double"
"6021splitHere46","12848998splitHere46","float"
"6022splitHere46","12848998splitHere46","double"
"6023splitHere46","12848998splitHere46","float"
"6024splitHere46","12849042splitHere46","<javac srcdir=<doubleQuotes46>src/<doubleQuotes46> destdir=<doubleQuotes46>build/classes<doubleQuotes46> debug=<doubleQuotes46>true<doubleQuotes46> includeantruntime=<doubleQuotes46>true<doubleQuotes46>><newline46mondego>  <classpath><newline46mondego>    <path id=<doubleQuotes46>org.junit<doubleQuotes46> location=<doubleQuotes46>c:/eclipse/plugins/org.apache.ant_1.8.3.v20120321-1730/lib/junit.jar<doubleQuotes46> /> <!-- not sure if you need this --><newline46mondego>  </classpath><newline46mondego></javac><newline46mondego>"
"6025splitHere46","12849152splitHere46","import java.text.ParseException;<newline46mondego>import java.text.SimpleDateFormat;<newline46mondego>import java.util.ArrayList;<newline46mondego>import java.util.Collections;<newline46mondego>import java.util.Date;<newline46mondego>import java.util.List;<newline46mondego><newline46mondego><newline46mondego>public class Parse {<newline46mondego><newline46mondego>    /**<newline46mondego>     * @param args<newline46mondego>     * @throws ParseException <newline46mondego>     */<newline46mondego>    public static void main(String[] args) throws ParseException {<newline46mondego>        StringBuilder sb = new StringBuilder();<newline46mondego>        sb.append(<doubleQuotes46>(comment:file_02389.txt,lastmodified:Wed Oct 10 19:10:49)<doubleQuotes46>).append(<doubleQuotes46>\n<doubleQuotes46>);<newline46mondego>        sb.append(<doubleQuotes46>(comment:file_02342.txt,lastmodified:Wed Oct 10 17:16:08)<doubleQuotes46>).append(<doubleQuotes46>\n<doubleQuotes46>);<newline46mondego>        sb.append(<doubleQuotes46>(comment:file_02315.txt,lastmodified:Wed Oct 10 18:45:12)<doubleQuotes46>).append(<doubleQuotes46>\n<doubleQuotes46>);<newline46mondego>        sb.append(<doubleQuotes46>(comment:file_02344.txt,lastmodified:Wed Oct 10 08:31:01)<doubleQuotes46>).append(<doubleQuotes46>\n<doubleQuotes46>);<newline46mondego><newline46mondego>            //create a date format that can parse dates formatted in the file<newline46mondego>        SimpleDateFormat sdf = new SimpleDateFormat(<doubleQuotes46>EEE MMM dd HH:mm:ss<doubleQuotes46>);<newline46mondego><newline46mondego>            //read the file into an array of lines (or read one line at a time)<newline46mondego>        String[] lines = sb.toString().split(<doubleQuotes46>\n<doubleQuotes46>);<newline46mondego><newline46mondego>            //create an array of pair objects to hold the line as well as the date<newline46mondego>        List<Pair> list = new ArrayList<Pair>();<newline46mondego><newline46mondego><newline46mondego>        for(int i=0;i<lines.length;i++){<newline46mondego>                    //get the date component of the line<newline46mondego>            String dateString = lines[i].substring(lines[i].length()-20, lines[i].length()-1);<newline46mondego><newline46mondego>            Pair pair = new Pair();<newline46mondego>            pair.date = sdf.parse(dateString); <newline46mondego>            pair.line = lines[i];<newline46mondego>            list.add(pair);<newline46mondego>        }<newline46mondego>        Collections.sort(list);<newline46mondego>        System.out.println(list.get(list.size()-1).line);<newline46mondego>    }<newline46mondego>}<newline46mondego>class Pair implements Comparable<Pair>{<newline46mondego><newline46mondego>    public Date date;<newline46mondego>    public String line;<newline46mondego><newline46mondego>    @Override<newline46mondego>    public int compareTo(Pair o) {<newline46mondego>        return date.compareTo(o.date);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"6026splitHere46","12849232splitHere46","-XX:+UseCMSInitiatingOccupancyOnly -XX:CMSInitiatingOccupancyFraction=N<newline46mondego>"
"6027splitHere46","12849266splitHere46","paintXxx"
"6028splitHere46","12849266splitHere46","protected void paintComponent(Graphics g) {<newline46mondego>    super.paintComponent(g);<newline46mondego><newline46mondego>    // This is INCREDIBLY bad<newline46mondego>    setBorder(BorderFactory.createLineBorder(Color.green));<newline46mondego>    setMaximumSize(new Dimension(40, 40));<newline46mondego>    setPreferredSize(new Dimension(40, 40));<newline46mondego>    setSize(new Dimension(40, 40));<newline46mondego>    //------------<newline46mondego><newline46mondego>    g.setColor(Color.RED);<newline46mondego>    g.fillRect(0, 0, 40, 40);<newline46mondego>}<newline46mondego>"
"6029splitHere46","12849266splitHere46","paintComponent"
"6030splitHere46","12849266splitHere46","setPreferred/Minimum/MaximumSize"
"6031splitHere46","12849266splitHere46","g.fillRect(0, 0, 40, 40);<newline46mondego>"
"6032splitHere46","12849266splitHere46","BorderLayout"
"6033splitHere46","12849266splitHere46","getWidth"
"6034splitHere46","12849266splitHere46","getHeight"
"6035splitHere46","12849266splitHere46","Insets"
"6036splitHere46","12849266splitHere46","GridLayout"
"6037splitHere46","12849266splitHere46","public class Main {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        new Main();<newline46mondego>    }<newline46mondego><newline46mondego>    public Main() {<newline46mondego>        EventQueue.invokeLater(new Runnable() {<newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                try {<newline46mondego>                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());<newline46mondego>                } catch (ClassNotFoundException ex) {<newline46mondego>                } catch (InstantiationException ex) {<newline46mondego>                } catch (IllegalAccessException ex) {<newline46mondego>                } catch (UnsupportedLookAndFeelException ex) {<newline46mondego>                }<newline46mondego><newline46mondego>                JFrame frame = new JFrame();<newline46mondego>                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>                frame.setLayout(new GridLayout(3, 1));<newline46mondego>                frame.add(new Label(<doubleQuotes46>One<doubleQuotes46>, Color.BLACK));<newline46mondego>                frame.add(new Label(<doubleQuotes46>Two<doubleQuotes46>, Color.BLACK));<newline46mondego>                frame.add(new Label(<doubleQuotes46>Three<doubleQuotes46>, Color.BLACK));<newline46mondego>                frame.pack();<newline46mondego>                frame.setVisible(true);<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>    public class Label extends JPanel {<newline46mondego><newline46mondego>        JButton btnDeleteObject;<newline46mondego>        // Delete icon<newline46mondego>        ImageIcon delIcon = new ImageIcon(<doubleQuotes46>Delete.png<doubleQuotes46>);<newline46mondego>        Image img = delIcon.getImage();<newline46mondego>        Image newimg = img.getScaledInstance(28, 28, java.awt.Image.SCALE_SMOOTH);<newline46mondego>        ImageIcon scaledDelIcon = new ImageIcon(newimg);<newline46mondego>        Color labelColour;<newline46mondego><newline46mondego>        public Label(String labelName, Color labelColour) {<newline46mondego>            this.labelColour = labelColour;<newline46mondego><newline46mondego>//            setLayout(new BoxLayout(this, BoxLayout.X_AXIS));<newline46mondego>            // Not sure why you want to do this, but this would<newline46mondego>            // be a more useful layout manager in the this context<newline46mondego>            // Personally, I would just layout the components directly onto<newline46mondego>            // this container...<newline46mondego>            setLayout(new BorderLayout());<newline46mondego><newline46mondego>            addComponents(labelName);<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>        private void addComponents(String labelName) {<newline46mondego><newline46mondego>//            JPanel innerContainer = new JPanel(new GridLayout(1, 3));<newline46mondego>            JPanel innerContainer = new JPanel(new GridBagLayout());<newline46mondego>            JLabel name = new JLabel(labelName);<newline46mondego><newline46mondego>            LabelColourBox cBox = new LabelColourBox();<newline46mondego><newline46mondego>//            name.setMaximumSize(new Dimension(80, 40));<newline46mondego>//            name.setPreferredSize(new Dimension(80, 40));<newline46mondego>//            name.setSize(new Dimension(80, 40));<newline46mondego><newline46mondego>            name.setBorder(BorderFactory.createLineBorder(Color.blue));<newline46mondego><newline46mondego>            setBorder(BorderFactory.createLineBorder(Color.black));<newline46mondego><newline46mondego>//      name.setBorder(new EmptyBorder(5, 5, 5, 5));<newline46mondego><newline46mondego>            // Add action to delete button for Icon<newline46mondego>            Action action = new AbstractAction(<doubleQuotes46>Button Label<doubleQuotes46>, scaledDelIcon) {<newline46mondego>                // This method is called when the button is pressed<newline46mondego>                public void actionPerformed(ActionEvent evt) {<newline46mondego>                    System.out.println(<doubleQuotes46>delete<doubleQuotes46>);<newline46mondego>                }<newline46mondego>            };<newline46mondego><newline46mondego>            btnDeleteObject = new JButton(action);<newline46mondego><newline46mondego>            // Remove label, background<newline46mondego>            btnDeleteObject.setText(<doubleQuotes46><doubleQuotes46>);<newline46mondego>            btnDeleteObject.setContentAreaFilled(false);<newline46mondego><newline46mondego>            setAlignmentX(LEFT_ALIGNMENT);<newline46mondego><newline46mondego>            GridBagConstraints gbc = new GridBagConstraints();<newline46mondego>            gbc.gridx = 0;<newline46mondego>            gbc.gridy = 0;<newline46mondego>            gbc.fill = GridBagConstraints.BOTH;<newline46mondego><newline46mondego>            innerContainer.add(cBox, gbc);<newline46mondego>            gbc.gridx++;<newline46mondego>            gbc.weightx = 1;<newline46mondego>            gbc.anchor = GridBagConstraints.WEST;<newline46mondego>            innerContainer.add(name, gbc);<newline46mondego>            gbc.gridx++;<newline46mondego>            gbc.weightx = 0;<newline46mondego>            innerContainer.add(btnDeleteObject, gbc);<newline46mondego><newline46mondego>            add(innerContainer);<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>        public class LabelColourBox extends JPanel {<newline46mondego><newline46mondego>            public LabelColourBox() {<newline46mondego>                setLayout(new BoxLayout(this, BoxLayout.X_AXIS));<newline46mondego>            }<newline46mondego><newline46mondego>            @Override<newline46mondego>            public Dimension getPreferredSize() {<newline46mondego>                return new Dimension(40, 40);<newline46mondego>            }<newline46mondego><newline46mondego>            @Override<newline46mondego>            public Dimension getMinimumSize() {<newline46mondego>                return getPreferredSize();<newline46mondego>            }<newline46mondego><newline46mondego>            @Override<newline46mondego>            public Dimension getMaximumSize() {<newline46mondego>                return getPreferredSize();<newline46mondego>            }<newline46mondego><newline46mondego>            @Override<newline46mondego>            protected void paintComponent(Graphics g) {<newline46mondego><newline46mondego>                super.paintComponent(g);<newline46mondego><newline46mondego>                // DON'T DO THIS, THIS IS A VERY BAD IDEA, THIS WILL RESULT<newline46mondego>                // IN A NEW REPAINT REQUEST BEING SENT TO THE REPAINT MANAGER<newline46mondego>                // CAUSE THIS METHOD TO BE CALLED AND NEW REPAINT REQUEST BEING...<newline46mondego>                // you get the idea..<newline46mondego>                //setBorder(BorderFactory.createLineBorder(Color.green));<newline46mondego>                //setMaximumSize(new Dimension(40, 40));<newline46mondego>                //setPreferredSize(new Dimension(40, 40));<newline46mondego>                //setSize(new Dimension(40, 40));<newline46mondego><newline46mondego>                g.setColor(Color.RED);<newline46mondego>                g.fillRect(0, 0, getWidth() - 1, getHeight() - 1);<newline46mondego>                g.setColor(Color.GREEN);<newline46mondego>                g.drawRect(0, 0, getWidth() - 1, getHeight() - 1);<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6038splitHere46","12849548splitHere46","\uXXXX"
"6039splitHere46","12849548splitHere46","native2ascii"
"6040splitHere46","12849548splitHere46","writer.write(<doubleQuotes46>غزل<doubleQuotes46>);<newline46mondego>"
"6041splitHere46","12849548splitHere46","writer.write(<doubleQuotes46>\u063a\u0632\u0644<doubleQuotes46>);<newline46mondego>"
"6042splitHere46","12849576splitHere46","System.out.print(<doubleQuotes46>This is some text<doubleQuotes46>)"
"6043splitHere46","12849576splitHere46","System.out.println()"
"6044splitHere46","12849576splitHere46","System.out.println(<doubleQuotes46>This is some text<doubleQuotes46>)"
"6045splitHere46","12849576splitHere46","PrintStream"
"6046splitHere46","12849779splitHere46","This sort is guaranteed to be stable: equal elements will not be reordered as a result of the sort.<newline46mondego>"
"6047splitHere46","12849779splitHere46","public class Shoe<newline46mondego>{<newline46mondego>  String style;<newline46mondego>  String color;<newline46mondego>  float price;//There are some reasons to not use float for money, google has lots of blogs etc<newline46mondego>  int quantity;<newline46mondego>}<newline46mondego>"
"6048splitHere46","12849779splitHere46","ArrayList<Shoe> shoes = makeShoes();<newline46mondego>Collections.sort(shoes,col1Comparator);<newline46mondego>Collections.sort(shoes,col2Comparator);<newline46mondego>Collections.sort(shoes,col3Comparator);<newline46mondego>"
"6049splitHere46","12849810splitHere46","equals"
"6050splitHere46","12849810splitHere46","contains"
"6051splitHere46","12849810splitHere46","equalsIgnoreCase"
"6052splitHere46","12849810splitHere46","containsIgnoreCase"
"6053splitHere46","12849810splitHere46","contains"
"6054splitHere46","12849810splitHere46","String s1 = <doubleQuotes46>HeLlO WoRlD<doubleQuotes46>;<newline46mondego>String s2 = <doubleQuotes46>llo worl<doubleQuotes46>;<newline46mondego>System.out.println(s1.toLowerCase().contains(s2.toLowerCase()));  // true<newline46mondego>"
"6055splitHere46","12849998splitHere46","for (Element element : roundEnv.getElementsAnnotatedWith(MyAnnotation.class)) {<newline46mondego>    MyAnnotation myAnnotation = element.getAnnotation(MyAnnotation.class);<newline46mondego>    if (myAnnotation != null) {<newline46mondego>        doSomething(myAnnotation, element);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>for (Element element : roundEnv.getElementsAnnotatedWith(MyMethodAnnotation.class)) {<newline46mondego>    MyMethodAnnotation myMethodAnnotation = element.getAnnotation(MyMethodAnnotation.class);<newline46mondego>    if (myMethodAnnotation != null) {<newline46mondego>        doSomething(myMethodAnnotation, element);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6056splitHere46","12849998splitHere46","element.getEnclosedElements()"
"6057splitHere46","12849998splitHere46","element.getEnclosingElement()"
"6058splitHere46","12850051splitHere46","Collection"
"6059splitHere46","12850051splitHere46","ObjectMapper mapper = new ObjectMapper();<newline46mondego>mapper.enable(DeserializationFeature. ACCEPT_SINGLE_VALUE_AS_ARRAY);<newline46mondego>ResultOb ob = mapper.readValue(jsonInput, ResultOb.class);<newline46mondego>"
"6060splitHere46","12850069splitHere46","if(major.equals(<doubleQuotes46>CIS<doubleQuotes46>))<newline46mondego>CIS_total=gpa+gpa;<newline46mondego>if(major.equals(<doubleQuotes46>Math<doubleQuotes46>))<newline46mondego>Math_total=gpa+gpa;<newline46mondego>"
"6061splitHere46","12850069splitHere46","if(major.equals(<doubleQuotes46>CIS<doubleQuotes46>))<newline46mondego>    CIS_total += gpa;<newline46mondego>if(major.equals(<doubleQuotes46>Math<doubleQuotes46>))<newline46mondego>    Math_total += gpa;<newline46mondego>"
"6062splitHere46","12850175splitHere46","ctx"
"6063splitHere46","12850175splitHere46","PendingIntent"
"6064splitHere46","12850175splitHere46","YOUR_PI_REQ_CODE"
"6065splitHere46","12850175splitHere46","NotificationManager"
"6066splitHere46","12850175splitHere46","notify()"
"6067splitHere46","12850235splitHere46","IService"
"6068splitHere46","12850235splitHere46","@Component<newline46mondego>public class Billing {<newline46mondego><newline46mondego>    private IService service;<newline46mondego><newline46mondego>    @Reference<newline46mondego>    public void setService(IService service) {<newline46mondego>        this.service = service;<newline46mondego>    }<newline46mondego><newline46mondego>    public void billCustomer() {<newline46mondego>         // Do some stuff related to billing, whatever.<newline46mondego><newline46mondego>         // Blah blah blah<newline46mondego><newline46mondego>         // Now call the service, even though it wasn't real Java because<newline46mondego>         // the <T> type parameter was unbound, but who gives a fuck...<newline46mondego>         service.foo(bar);<newline46mondego><newline46mondego>         // Yay.<newline46mondego>    }<newline46mondego>"
"6069splitHere46","12850420splitHere46","char[] alpha"
"6070splitHere46","12850420splitHere46","File inFile = new File(<doubleQuotes46>C:\\Users\\name\\Documents\\workspace\\Testing\\src\\receiver.txt<doubleQuotes46>);<newline46mondego>Scanner sc=new Scanner(inFile);//unchanged<newline46mondego>char[] alpha =  {'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K'}; <newline46mondego>PrintWriter outStream=new PrintWriter(<doubleQuotes46>C:\\Users\\name\\Documents\\workspace\\Testing\\src\\caesar.txt<doubleQuotes46>);<newline46mondego>//rest of code is identical<newline46mondego>/*<newline46mondego>receiver.txt (input file):<newline46mondego><?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego><tradeevent><newline46mondego>   <event><newline46mondego>      <eventId>612</eventId><newline46mondego>      <relatedId>0</relatedId><newline46mondego>      <operationalEventIndicator></operationalEventIndicator><newline46mondego>      <effectiveDate>2012-08-07T11:20:47.09</effectiveDate><newline46mondego>      <id>612</id><newline46mondego>      <createdOnDate>0</createdOnDate><newline46mondego>   </event><newline46mondego>   <trade><newline46mondego>...<newline46mondego>caesar.txt (created output file):<newline46mondego><? FJ=<doubleQuotes46>1.0<doubleQuotes46> FDEJH=<doubleQuotes46>G-8<doubleQuotes46>?><newline46mondego><EFFF><newline46mondego>   <FF><newline46mondego>      <FFJE>612</FFJE><newline46mondego>      <FFEJE>0</FFEJE><newline46mondego>      <FJFFJEJD></FJFFJEJD><newline46mondego>      <FGGFDJFEF>2012-08-0711:20:47.09</FGGFDJFEF><newline46mondego>      <JE>612</JE><newline46mondego>      <DFFEEF>0</DFFEEF><newline46mondego>   </FF><newline46mondego>   <EF><newline46mondego>...<newline46mondego>*/<newline46mondego>"
"6071splitHere46","12850473splitHere46","activation.war"
"6072splitHere46","12850473splitHere46","activation.war"
"6073splitHere46","12850489splitHere46","A"
"6074splitHere46","12850489splitHere46","A"
"6075splitHere46","12850489splitHere46","ATest"
"6076splitHere46","12850533splitHere46","import java.io.File;<newline46mondego>import java.text.NumberFormat;<newline46mondego><newline46mondego>public class TestFileSize {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        File test1 = new File(<doubleQuotes46>C:/pagefile.sys<doubleQuotes46>);<newline46mondego>        File test2 = new File(<doubleQuotes46>C:/hiberfil.sys<doubleQuotes46>);<newline46mondego><newline46mondego>        System.out.println(test1.length() + <doubleQuotes46> / <doubleQuotes46> + ByteFormatter.format(test1.length()));<newline46mondego>        System.out.println(test2.length() + <doubleQuotes46> / <doubleQuotes46> + ByteFormatter.format(test2.length()));<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    public static class ByteFormatter {<newline46mondego><newline46mondego>        public static final long KILO_BYTES = 1024;<newline46mondego>        public static final long MEGA_BYTES = 1024 * KILO_BYTES;<newline46mondego>        public static final long GIGA_BYTES = 1024 * MEGA_BYTES;<newline46mondego>        public static final long TERA_BYTES = 1024 * GIGA_BYTES;<newline46mondego>        public enum Format {<newline46mondego><newline46mondego>            TeraBytes(TERA_BYTES),<newline46mondego>            GigaBytes(GIGA_BYTES),<newline46mondego>            MegaBytes(MEGA_BYTES),<newline46mondego>            KiloBytes(KILO_BYTES);<newline46mondego>            private long multiplier;<newline46mondego><newline46mondego>            private Format(long multiplier) {<newline46mondego>                this.multiplier = multiplier;<newline46mondego>            }<newline46mondego><newline46mondego>            public long getMultiplier() {<newline46mondego>                return multiplier;<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        public static String format(long bytes) {<newline46mondego>            NumberFormat nf = NumberFormat.getNumberInstance();<newline46mondego>            nf.setMaximumFractionDigits(2);<newline46mondego>            nf.setMinimumFractionDigits(0);<newline46mondego>            String format = bytes + <doubleQuotes46> bytes<doubleQuotes46>;<newline46mondego>            if (bytes / TERA_BYTES > 0) {<newline46mondego>                format = nf.format((double) bytes / TERA_BYTES) + <doubleQuotes46> tb<doubleQuotes46>;<newline46mondego>            } else if (bytes / GIGA_BYTES > 0) {<newline46mondego>                format = nf.format((double) bytes / GIGA_BYTES) + <doubleQuotes46> gb<doubleQuotes46>;<newline46mondego>            } else if (bytes / MEGA_BYTES > 0) {<newline46mondego>                format = nf.format((double) bytes / MEGA_BYTES) + <doubleQuotes46> mb<doubleQuotes46>;<newline46mondego>            } else if (bytes / KILO_BYTES > 0) {<newline46mondego>                format = nf.format((double) bytes / KILO_BYTES) + <doubleQuotes46> kb<doubleQuotes46>;<newline46mondego>            } else {<newline46mondego>                format = nf.format(bytes) + <doubleQuotes46> bytes<doubleQuotes46>;<newline46mondego>            }<newline46mondego><newline46mondego>            return format;<newline46mondego>        }<newline46mondego><newline46mondego>        public static String formatMegaBytes(long lMegaBytes) {<newline46mondego><newline46mondego>            return format((long) ((double) lMegaBytes * MEGA_BYTES));<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>        public static String formatKiloBytes(long kbytes) {<newline46mondego><newline46mondego>            return format(kbytes * KILO_BYTES);<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>        public static String formatGigaBytes(long gbytes) {<newline46mondego><newline46mondego>            return format(gbytes * GIGA_BYTES);<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>        public static String formatTeraBytes(long gbytes) {<newline46mondego><newline46mondego>            return format(gbytes * TERA_BYTES);<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>        public static long toBytes(String value, Format format) {<newline46mondego><newline46mondego>            long multipler = format.getMultiplier();<newline46mondego><newline46mondego>            long bytes = (long) (Double.parseDouble(value.trim()) * multipler);<newline46mondego><newline46mondego>            return bytes;<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>        public static long toBytes(String sValue) {<newline46mondego><newline46mondego>            long lBytes = 0;<newline46mondego><newline46mondego>            if (sValue.indexOf(<doubleQuotes46> <doubleQuotes46>) > -1) {<newline46mondego><newline46mondego>                String sElements[] = sValue.split(<doubleQuotes46> <doubleQuotes46>);<newline46mondego><newline46mondego>                lBytes = Long.parseLong(sElements[0]);<newline46mondego><newline46mondego>                if (sElements[1].toLowerCase().startsWith(<doubleQuotes46>gb<doubleQuotes46>)) {<newline46mondego><newline46mondego>                    lBytes *= GIGA_BYTES;<newline46mondego><newline46mondego>                } else if (sElements[1].toLowerCase().startsWith(<doubleQuotes46>mb<doubleQuotes46>)) {<newline46mondego><newline46mondego>                    lBytes *= MEGA_BYTES;<newline46mondego><newline46mondego>                } else if (sElements[1].toLowerCase().startsWith(<doubleQuotes46>kb<doubleQuotes46>)) {<newline46mondego><newline46mondego>                    lBytes *= KILO_BYTES;<newline46mondego><newline46mondego>                }<newline46mondego><newline46mondego>            } else {<newline46mondego><newline46mondego>                sValue = sValue.trim();<newline46mondego>                long lMultiplier = 1;<newline46mondego>                String sBytes = null;<newline46mondego><newline46mondego>                if (sValue.toLowerCase().endsWith(<doubleQuotes46>gb<doubleQuotes46>)) {<newline46mondego><newline46mondego>                    sBytes = sValue.substring(0, sValue.toLowerCase().indexOf(<doubleQuotes46>gb<doubleQuotes46>));<newline46mondego>                    lMultiplier = GIGA_BYTES;<newline46mondego><newline46mondego>                } else if (sValue.toLowerCase().endsWith(<doubleQuotes46>mb<doubleQuotes46>)) {<newline46mondego><newline46mondego>                    sBytes = sValue.substring(0, sValue.toLowerCase().indexOf(<doubleQuotes46>mb<doubleQuotes46>));<newline46mondego>                    lMultiplier = MEGA_BYTES;<newline46mondego><newline46mondego>                } else if (sValue.toLowerCase().endsWith(<doubleQuotes46>kb<doubleQuotes46>)) {<newline46mondego><newline46mondego>                    sBytes = sValue.substring(0, sValue.toLowerCase().indexOf(<doubleQuotes46>kb<doubleQuotes46>));<newline46mondego>                    lMultiplier = KILO_BYTES;<newline46mondego><newline46mondego>                }<newline46mondego><newline46mondego>                lBytes = Long.parseLong(sBytes);<newline46mondego><newline46mondego>                lBytes *= lMultiplier;<newline46mondego><newline46mondego>            }<newline46mondego><newline46mondego>            return lBytes;<newline46mondego><newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6077splitHere46","12850665splitHere46","Comparator<Edge>"
"6078splitHere46","12850665splitHere46","Edge"
"6079splitHere46","12850665splitHere46","Collections.sort()"
"6080splitHere46","12850665splitHere46","import java.util.Collections;<newline46mondego>import java.util.List;<newline46mondego>import java.util.Comparator;<newline46mondego><newline46mondego>public class EdgeComparator implements Comparator<Edge> {<newline46mondego>    public int compare(Edge l, Edge r) { ... }<newline46mondego>}<newline46mondego><newline46mondego>void yourCode() {<newline46mondego>    List<Edge> edges = ...;<newline46mondego>    Collections.sort(edges, new EdgeComparator());<newline46mondego>    //edges now contains the sorted edges<newline46mondego>}<newline46mondego>"
"6081splitHere46","12850665splitHere46","Collections.sort"
"6082splitHere46","12850681splitHere46","src"
"6083splitHere46","12850681splitHere46","resources"
"6084splitHere46","12850681splitHere46","public Image getImage(String name){<newline46mondego>    URL imgUrl = getClass().getClassLoader().getResource(<doubleQuotes46>resources/<doubleQuotes46>+name);<newline46mondego>    ImageIcon icon = new ImageIcon(imgUrl);<newline46mondego>    return icon.getImage();<newline46mondego>}<newline46mondego>"
"6085splitHere46","12850681splitHere46","Image piece1;<newline46mondego><newline46mondego>public Checkers(){<newline46mondego>    piece1 = getImage(<doubleQuotes46>Piece_1.png<doubleQuotes46>);<newline46mondego>}<newline46mondego><newline46mondego>public void paint(Graphics g){<newline46mondego>    if (piece1!=null){<newline46mondego>        g.drawImage(piece1, xcoord, ycoord, null);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6086splitHere46","12850729splitHere46","Certificate"
"6087splitHere46","12850729splitHere46","CertificateRequest"
"6088splitHere46","12850729splitHere46","ServerHelloDone"
"6089splitHere46","12850729splitHere46","CertificateVerify"
"6090splitHere46","12850729splitHere46","Finished"
"6091splitHere46","12850729splitHere46","Padded plaintext after DECRYPTION:  len = 98<newline46mondego>0000: 00 50 2A 2A 2A 2A 2A 2A   2A 2A 2A 20 54 68 69 73  .P********* This<newline46mondego>0010: 20 6C 69 6E 65 20 69 73   20 73 65 6E 74 20 66 72   line is sent fr<newline46mondego>0020: 6F 6D 20 41 6E 64 72 6F   69 64 20 63 6C 69 65 6E  om Android clien<newline46mondego>0030: 74 2E 20 48 65 6C 6C 6F   20 73 73 6C 53 65 72 76  t. Hello sslServ<newline46mondego>0040: 65 72 53 6F 63 6B 65 74   2A 2A 2A 2A 2A 2A 2A 2A  erSocket********<newline46mondego>0050: 2A 2A 03 CE 95 53 B4 97   8D BE 2A 25 DD 52 6B 1F  **...S....*%.Rk.<newline46mondego>0060: 19 44                                              .D<newline46mondego>Padded plaintext before ENCRYPTION:  len = 88<newline46mondego>0000: 00 46 2A 2A 2A 2A 2A 2A   2A 2A 2A 20 54 68 69 73  .F********* This<newline46mondego>0010: 20 6C 69 6E 65 20 69 73   20 73 65 6E 74 20 66 72   line is sent fr<newline46mondego>0020: 6F 6D 20 50 43 20 63 6C   69 65 6E 74 2E 20 48 65  om PC client. He<newline46mondego>0030: 6C 6C 6F 20 53 53 4C 53   6F 63 6B 65 74 20 2A 2A  llo SSLSocket **<newline46mondego>0040: 2A 2A 2A 2A 2A 2A 2A 2A   7B A6 BC 2F 8B C5 E0 A4  ********.../....<newline46mondego>0050: B1 D7 F9 70 DD EF DF 6C                            ...p...l<newline46mondego>"
"6092splitHere46","12850729splitHere46","SSL_RSA_WITH_RC4_128_MD5"
"6093splitHere46","12850729splitHere46","setEnabledCipherSuites()"
"6094splitHere46","12850729splitHere46","CN=smith.droid-ip.com, O=SMITH, C=SE"
"6095splitHere46","12850769splitHere46","double dist = Math.sqrt(distX*distX) + (distY*distY));<newline46mondego>distX /= dist;<newline46mondego>distY /= dist;<newline46mondego>"
"6096splitHere46","12850784splitHere46","import java.math.BigDecimal;<newline46mondego>import java.text.DecimalFormat;<newline46mondego>import java.text.NumberFormat;<newline46mondego>import java.text.ParseException;<newline46mondego>import java.util.Locale;<newline46mondego>public class JavaMain {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        String numberString = <doubleQuotes46>2.105,88<doubleQuotes46>;<newline46mondego>        //using casting<newline46mondego>        try {<newline46mondego>            DecimalFormat df = (DecimalFormat) NumberFormat.getInstance(Locale.GERMAN);<newline46mondego>            df.setParseBigDecimal(true);<newline46mondego>            BigDecimal bd = (BigDecimal) df.parseObject(numberString);<newline46mondego>            System.out.println(bd.toString());<newline46mondego>        } catch (ParseException e) {<newline46mondego>            e.printStackTrace();<newline46mondego>        }<newline46mondego>        //your way short version<newline46mondego>        NumberFormat nf = NumberFormat.getInstance(Locale.GERMAN);<newline46mondego>        try {<newline46mondego>            BigDecimal bd1 = new BigDecimal(nf.parse(numberString).toString());<newline46mondego>            System.out.println(bd1.toString());<newline46mondego>        } catch (ParseException e) {<newline46mondego>            e.printStackTrace();<newline46mondego>        }<newline46mondego>        String numberStringFixed = <doubleQuotes46>2105.88<doubleQuotes46>;<newline46mondego>        //direct string formated<newline46mondego>        System.out.println(new BigDecimal(numberStringFixed));;     <newline46mondego>        //direct but erroneous way if the string is not formated<newline46mondego>        System.out.println(new BigDecimal(numberString));;<newline46mondego><newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6097splitHere46","12851055splitHere46","lazy"
"6098splitHere46","12851055splitHere46","phone"
"6099splitHere46","12851055splitHere46","phoneHistory"
"6100splitHere46","12851055splitHere46","phone"
"6101splitHere46","12851055splitHere46","phoneHistory"
"6102splitHere46","12851055splitHere46","addPhoneHistory"
"6103splitHere46","12851055splitHere46","Phone"
"6104splitHere46","12851055splitHere46","public void addPhoneHistory(PhoneHistory phoneHistory){<newline46mondego>         phoneHistory.setPhone(this); //This is importtant as its sets the parent<newline46mondego>         if(this.phoneHistories == null){<newline46mondego>            this.phoneHistories = new ArrayList<PhoneHistory>();<newline46mondego>         } <newline46mondego>         this.phoneHistories.add(phoneHistory); <newline46mondego>      }<newline46mondego>"
"6105splitHere46","12851055splitHere46","PhoneHistory"
"6106splitHere46","12851055splitHere46","Phone"
"6107splitHere46","12851055splitHere46","existingPhoneHistory.getPhone().addPhoneHistory(newPhoneHistory);<newline46mondego>"
"6108splitHere46","12851055splitHere46","in place of"
"6109splitHere46","12851055splitHere46","Phone phone = existingPhoneHistory.getPhone();<newline46mondego>   phone.addPhoneHistory(newPhoneHistory);<newline46mondego>   entityManager.save(phone);//use your PhoneRepo, if there to persist<newline46mondego>"
"6110splitHere46","12851114splitHere46","<input type=<doubleQuotes46>file<doubleQuotes46>>"
"6111splitHere46","12851114splitHere46","<input type=<doubleQuotes46>range<doubleQuotes46>>"
"6112splitHere46","12851114splitHere46","UINamingContainer"
"6113splitHere46","12851114splitHere46","NamingContainer"
"6114splitHere46","12851114splitHere46","<cc:interface componentType>"
"6115splitHere46","12851114splitHere46","<h:column>"
"6116splitHere46","12851190splitHere46","paintComponent()"
"6117splitHere46","12851190splitHere46","paint()"
"6118splitHere46","12851190splitHere46","super.paintComponent()"
"6119splitHere46","12851238splitHere46","return"
"6120splitHere46","12851238splitHere46","public static boolean insipid(int num){<newline46mondego>  boolean returnValue = false;<newline46mondego>  if(num == 58){ //The number is not insipid<newline46mondego>   //do nothing<newline46mondego>  } if(num == 1){ // the number is insipid<newline46mondego>    returnValue = true;<newline46mondego>  }else{<newline46mondego>    int dig1 = 0, dig2 = 0, dig3 = 0; // num = 159 for example, dig1 would be 1. Default is 0 in case of a 2   digit number, dig1*dig1 = 0<newline46mondego>    if (num < 10){<newline46mondego>        returnValue = insipid(num * num);<newline46mondego>    }<newline46mondego>    else if(num>99){<newline46mondego>        dig1 = (int)(num / 100);<newline46mondego>        dig2 = (int)((num - 100)/10);<newline46mondego>        dig3 = num - (((int)(num / 10))*10);<newline46mondego>        returnValue = insipid(squaresum(dig1,dig2,dig3));<newline46mondego>    }<newline46mondego>    else{<newline46mondego>        dig2 = (int)(num/10); //The 10s place<newline46mondego>        dig3 = num - (((int)(num/10)) * 10); //the 1s place<newline46mondego>        returnValue = insipid(squaresum(dig1, dig2,dig3)); //dig1 = 0 so I just pass it along with it.<newline46mondego>    }<newline46mondego>  }<newline46mondego>  return returnValue ;<newline46mondego>}<newline46mondego>"
"6121splitHere46","12851421splitHere46","public class TreeIterator{<newline46mondego>  private Node next;<newline46mondego><newline46mondego>  public TreeIterator(Node root){<newline46mondego>     next = root;<newline46mondego>     if(next == null)<newline46mondego>       return;<newline46mondego>     while (next.left != null)<newline46mondego>       next = next.left;<newline46mondego>  }<newline46mondego><newline46mondego>  public boolean hasNext(){<newline46mondego>     return next != null<newline46mondego>  }<newline46mondego><newline46mondego>  public Node next(){<newline46mondego>     if(!hasNext()) throw new NoSuchElementException();<newline46mondego>     Node r = next;<newline46mondego>     // if you can walk right, walk right, then fully left.<newline46mondego>     // otherwise, walk up until you come from left.<newline46mondego>     if(next.right != null){<newline46mondego>       next = next.right;<newline46mondego>       while (next.left != null)<newline46mondego>         next = next.left;<newline46mondego>     }else while(true){<newline46mondego>       if(next.parent == null){<newline46mondego>         next = null;<newline46mondego>         return r;<newline46mondego>       }<newline46mondego>       if(next.parent.left == next){<newline46mondego>         next = next.parent;<newline46mondego>         return r;<newline46mondego>       }<newline46mondego>       next = next.parent;<newline46mondego>     }<newline46mondego>   }<newline46mondego> }<newline46mondego>"
"6122splitHere46","12851421splitHere46","d<newline46mondego>   /   \<newline46mondego>  b     f<newline46mondego> / \   / \<newline46mondego>a   c e   g<newline46mondego>"
"6123splitHere46","12851421splitHere46","a"
"6124splitHere46","12851421splitHere46","b"
"6125splitHere46","12851421splitHere46","b"
"6126splitHere46","12851421splitHere46","c"
"6127splitHere46","12851421splitHere46","b"
"6128splitHere46","12851421splitHere46","d"
"6129splitHere46","12851421splitHere46","d"
"6130splitHere46","12851421splitHere46","e"
"6131splitHere46","12851421splitHere46","g"
"6132splitHere46","12851421splitHere46","f"
"6133splitHere46","12851421splitHere46","d"
"6134splitHere46","12851421splitHere46","d"
"6135splitHere46","12851512splitHere46","public void Lines( String fileName ) throws Exception {<newline46mondego>    // rest of the code here<newline46mondego>}<newline46mondego>"
"6136splitHere46","12851512splitHere46","if ( args.length > 0 ) {<newline46mondego>    String file = args[0];<newline46mondego>    Lines( file );<newline46mondego>}<newline46mondego>"
"6137splitHere46","12851591splitHere46","if(numbers > numbers)<newline46mondego>{<newline46mondego>    evenMax = numbers<newline46mondego>}<newline46mondego>"
"6138splitHere46","12851591splitHere46","if (evenMax < numbers) {<newline46mondego>    evenMax = numbers;<newline46mondego>}<newline46mondego>"
"6139splitHere46","12851591splitHere46","-1"
"6140splitHere46","12851591splitHere46","-1"
"6141splitHere46","12851722splitHere46","int max = array[0];<newline46mondego> for (int counter = 1; counter < array.length; counter++)<newline46mondego>        {<newline46mondego>             if (array[counter] > max)<newline46mondego>             {<newline46mondego>              max = array[counter];<newline46mondego>             }<newline46mondego>        }<newline46mondego><newline46mondego>    System.out.println(<doubleQuotes46>The maximum number is: <doubleQuotes46> + max);<newline46mondego>"
"6142splitHere46","12851844splitHere46","(.+)"
"6143splitHere46","12851844splitHere46","<doubleQuotes46>(ab)(cd)<doubleQuotes46>"
"6144splitHere46","12851844splitHere46","(.+)"
"6145splitHere46","12851844splitHere46","ab)(cd"
"6146splitHere46","12851844splitHere46","(.+?)"
"6147splitHere46","12851844splitHere46","?"
"6148splitHere46","12851844splitHere46","+"
"6149splitHere46","12851844splitHere46","<doubleQuotes46>(ab)(cd)<doubleQuotes46>"
"6150splitHere46","12851844splitHere46","(.+?)"
"6151splitHere46","12851844splitHere46","ab"
"6152splitHere46","12851844splitHere46","cd"
"6153splitHere46","12851891splitHere46","app<newline46mondego> |<newline46mondego> |-- lib<newline46mondego> |    `- <jar files><newline46mondego> |<newline46mondego> |-- bin<newline46mondego> |    |- app.jar<newline46mondego> |    |- app.sh<newline46mondego> |    `- app.bat<newline46mondego> |<newline46mondego> `-- README<newline46mondego>"
"6154splitHere46","12851891splitHere46","#you need to fix class path, a relative path will cause issue when running from a diff PWD<newline46mondego>java -cp .:../lib/jar1.jar:../lib/jar2.jar -jar app.jar<newline46mondego>"
"6155splitHere46","12851891splitHere46","#you need to fix class path, a relative path will cause issue when running from a diff PWD<newline46mondego>java -cp .;../lib/jar1.jar;../lib/jar2.jar -jar app.jar<newline46mondego>"
"6156splitHere46","12851891splitHere46","cd bin"
"6157splitHere46","12851944splitHere46","Queue <Integer> tempQueue = new Queue<Integer>();<newline46mondego>for (int i=0;i<numberOfServers;i++){<newline46mondego>    queueArray[i]= tempQueue;<newline46mondego>}<newline46mondego>"
"6158splitHere46","12851944splitHere46","for (int i=0;i<numberOfServers;i++){<newline46mondego>    //I don't know if this works<newline46mondego>    //queueArray[i]= new Queue<Integer>();<newline46mondego>    //LinkedList implements the Queue interface<newline46mondego>    queueArray[i]= new LinkedList<Integer>();<newline46mondego>}<newline46mondego>"
"6159splitHere46","12851954splitHere46","public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest req, HttpServletResponse res) {           <newline46mondego><newline46mondego>     List<Category> catList = db.getCategory();           <newline46mondego>     List<Product> proList = db.getProduct();           <newline46mondego><newline46mondego>     request.setAttribute(<doubleQuotes46>proList<doubleQuotes46>, proList);      <newline46mondego>     request.setAttribute(<doubleQuotes46>catList <doubleQuotes46>, catList );      <newline46mondego>     return mapping.findForward(<doubleQuotes46>success<doubleQuotes46>);  <newline46mondego>}  <newline46mondego>"
"6160splitHere46","12852039splitHere46","DateTime d1 = new DateTime();<newline46mondego>DateTime d2 = new DateTime();<newline46mondego><newline46mondego>long diffInMillis = d2.getMillis() - d1.getMillis();<newline46mondego>"
"6161splitHere46","12852138splitHere46","final MYARRAY_ORIGINAL"
"6162splitHere46","12852138splitHere46","MYARRAY_ORIGINAL"
"6163splitHere46","12852138splitHere46","public void someMethod() {<newline46mondego>    //it won't compile<newline46mondego>    MYARRAY_ORIGINAL = new int[X][];<newline46mondego>}<newline46mondego>"
"6164splitHere46","12852138splitHere46","public void anotherMethod() {<newline46mondego>    MYARRAY_ORIGINAL[0][0] = 25;<newline46mondego>    //later in the code...<newline46mondego>    MYARRAY_ORIGINAL[0][0] = 30; //it works!<newline46mondego>}<newline46mondego>"
"6165splitHere46","12852138splitHere46","Collections.unmodifiableList"
"6166splitHere46","12852138splitHere46","List<Integer> items = Collections.unmodifiableList(Arrays.asList(0,1,2,3));<newline46mondego>"
"6167splitHere46","12852144splitHere46","Container"
"6168splitHere46","12852144splitHere46","JInternalFrame"
"6169splitHere46","12852144splitHere46","JDesktopPane"
"6170splitHere46","12852144splitHere46","ms.cp"
"6171splitHere46","12852144splitHere46","ms.cp.remove(table)"
"6172splitHere46","12852206splitHere46","public String getFirstElementName(){<newline46mondego>        String name = null;//or <doubleQuotes46><doubleQuotes46><newline46mondego>        if(myList.size() >0){<newline46mondego>           name = myList.get(0).getName);<newline46mondego>        }<newline46mondego>        return name;<newline46mondego>    }<newline46mondego>"
"6173splitHere46","12852206splitHere46","public A getFirstElement(){<newline46mondego>        A a = null;//or <doubleQuotes46><doubleQuotes46><newline46mondego>        if(myList.size() >0){<newline46mondego>           a= myList.get(0);<newline46mondego>        }<newline46mondego>        return a;<newline46mondego>    }<newline46mondego>"
"6174splitHere46","12852206splitHere46","A a = getFirstElement();<newline46mondego>   String name = a.getName();<newline46mondego>   int number= a.getNum();<newline46mondego>"
"6175splitHere46","12852212splitHere46","frame.setDefaultCloseOperation( JFrame.DO_NOTHING_ON_CLOSE )<newline46mondego>"
"6176splitHere46","12852212splitHere46","windowClosing"
"6177splitHere46","12852212splitHere46","cancel"
"6178splitHere46","12852212splitHere46","yes"
"6179splitHere46","12852212splitHere46","no"
"6180splitHere46","12852220splitHere46","int r = 1;  //radius, in case you want to use median over a larger kernel<newline46mondego><newline46mondego>for(int y = r; y < height - r; y++)<newline46mondego>{<newline46mondego>   for (int x = r; x < width - r; x++)<newline46mondego>   {<newline46mondego>      for(int j = y - r; j <= y + r; j++)<newline46mondego>      {<newline46mondego>         for(i = x - r; i <= x + r; i++)<newline46mondego>         {<newline46mondego>            //get all neighborhood values <newline46mondego>         } <newline46mondego>      }    <newline46mondego><newline46mondego>      //find median<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"6181splitHere46","12852313splitHere46","public class MinHeap<E extends Comparable<E>> {<newline46mondego>    List<E> h = new ArrayList<E>();<newline46mondego>    ArrayList<E> arrayPostingsList = new ArrayList<E>();<newline46mondego><newline46mondego>    // some more code<newline46mondego>    public static void main(String[] args) {<newline46mondego>        MinHeap<Double> testHeap = new MinHeap<Double>();<newline46mondego>        testHeap.add(2.3); // auto-boxing<newline46mondego>        System.out.println(testHeap.remove()); //unboxing<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    public boolean add(E e) {<newline46mondego>        return h.add(e);<newline46mondego>    }<newline46mondego><newline46mondego>    public E remove() {<newline46mondego>        E removedNode = h.get(0);<newline46mondego>        E lastNode = h.remove(h.size() - 1);<newline46mondego><newline46mondego>        // this seems to be the problem<newline46mondego>        return removedNode;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6182splitHere46","12852362splitHere46","public void paintComponent( Graphics g )<newline46mondego>{<newline46mondego>    super.paintComponent( g );<newline46mondego>    Graphics2D g2d = (Graphics2D) g;<newline46mondego><newline46mondego>    // The 20x20 rectangle that you want to draw<newline46mondego>    Rectangle2D rect = new Rectangle2D.Double( 0, 0, 20, 20 );<newline46mondego><newline46mondego>    // This transform is used to modify the rectangle (an affine<newline46mondego>    // transform is a way to do operations like translations, rotations,<newline46mondego>    // scalings, etc...)<newline46mondego>    AffineTransform transform = new AffineTransform();<newline46mondego><newline46mondego>    // 3rd operation performed: translate the rectangle to the desired<newline46mondego>    // x and y position<newline46mondego>    transform.translate( x + 10, y + 10 );<newline46mondego><newline46mondego>    // 2nd operation performed: rotate the rectangle around the origin<newline46mondego>    transform.rotate( rotation );<newline46mondego><newline46mondego>    // 1st operation performed: translate the rectangle such that it is<newline46mondego>    // centered on the origin<newline46mondego>    transform.translate( -10, -10 );<newline46mondego><newline46mondego>    // Apply the affine transform<newline46mondego>    Shape s = transform.createTransformedShape( rect );<newline46mondego><newline46mondego>    // Fill the shape with the current paint<newline46mondego>    g2d.fill( s );<newline46mondego><newline46mondego>    // Stroke the edge of the shape with the current paint<newline46mondego>    g2d.draw( s );<newline46mondego>}<newline46mondego>"
"6183splitHere46","12852362splitHere46","javax.swing.Timer"
"6184splitHere46","12852362splitHere46","x"
"6185splitHere46","12852362splitHere46","y"
"6186splitHere46","12852362splitHere46","rotation"
"6187splitHere46","12852362splitHere46","repaint()"
"6188splitHere46","12852403splitHere46","idealWeightFemale = ((100 * totalHeight)/60) + (inches * OVERFEMALE));<newline46mondego>"
"6189splitHere46","12852403splitHere46","idealWeightFemale = ((100 * totalHeight)/60) + (inches * OVERFEMALE);<newline46mondego>"
"6190splitHere46","12852403splitHere46","idealWeightMale = ((100 * totalHeight)/60) + (inches * OVERMALE));"
"6191splitHere46","12852465splitHere46","Probability of count2 = (count2/number of rolls);<newline46mondego>Probability of count3 = (count2/number of rolls);<newline46mondego>"
"6192splitHere46","12852465splitHere46","import java.util.Random;<newline46mondego>import java.util.Scanner;<newline46mondego>public class DiceProbability<newline46mondego>{<newline46mondego>public static void main(String[] args)<newline46mondego>{<newline46mondego>    Scanner in = new Scanner(System.in);<newline46mondego>    Random randNum = new Random();<newline46mondego>int count2 = 0;<newline46mondego>int count3 = 0;<newline46mondego>int count4 = 0;<newline46mondego>int count5 = 0;<newline46mondego>int count6 = 0;<newline46mondego>int count7 = 0;<newline46mondego>int count8 = 0;<newline46mondego>int count9 = 0;<newline46mondego>int count10 = 0;<newline46mondego>int count11= 0;<newline46mondego>int count12= 0;<newline46mondego>int count13 = 0;<newline46mondego>int count14 = 0;<newline46mondego>int count15 = 0;<newline46mondego>int count16 = 0;<newline46mondego>int count17 = 0;<newline46mondego>int count18 = 0;<newline46mondego>int count19 = 0;<newline46mondego>int count20 = 0;<newline46mondego>int count21 = 0;<newline46mondego>int count22 = 0;<newline46mondego>int die1 = 0, die2 = 0;<newline46mondego>int rolls = 0;<newline46mondego>int actualDiceSum;<newline46mondego>double probabilityOfDice = 0.0;<newline46mondego><newline46mondego>System.out.print(<doubleQuotes46>Number of Rolls: <doubleQuotes46>);<newline46mondego>rolls = in.nextInt();<newline46mondego><newline46mondego>for(int timesRolled = 0; timesRolled < rolls; timesRolled++)<newline46mondego>    {<newline46mondego>    die1 = randNum.nextInt(12);<newline46mondego>    die2 = randNum.nextInt(12);<newline46mondego>    actualDiceSum = die1 + die2;<newline46mondego><newline46mondego>        if(actualDiceSum == 2){<newline46mondego>        count2++;<newline46mondego><newline46mondego>        }<newline46mondego>        else if(actualDiceSum == 3){<newline46mondego>        count3++;<newline46mondego><newline46mondego>        }<newline46mondego>        else if(actualDiceSum == 4){<newline46mondego>        count4++;<newline46mondego><newline46mondego>        }<newline46mondego>        else if(actualDiceSum == 5){<newline46mondego>        count5++;<newline46mondego><newline46mondego>        }<newline46mondego>        else if(actualDiceSum == 6){<newline46mondego>        count6++;<newline46mondego><newline46mondego>        }<newline46mondego>        else if(actualDiceSum == 7){<newline46mondego>        count7++;<newline46mondego><newline46mondego>        }<newline46mondego>        else if(actualDiceSum == 8){<newline46mondego>        count8++;<newline46mondego><newline46mondego>        }<newline46mondego>        else if(actualDiceSum == 9){<newline46mondego>        count9++;<newline46mondego><newline46mondego>        }<newline46mondego>        else if(actualDiceSum == 10){<newline46mondego>        count10++;<newline46mondego><newline46mondego>        }<newline46mondego>        else if(actualDiceSum == 11){<newline46mondego>        count11++;<newline46mondego><newline46mondego>        }<newline46mondego>        else if(actualDiceSum == 12){<newline46mondego>        count12++;<newline46mondego><newline46mondego>        }<newline46mondego>        else if(actualDiceSum == 13){<newline46mondego>        count13++;<newline46mondego><newline46mondego>        }<newline46mondego>        else if(actualDiceSum == 14){<newline46mondego>        count14++;<newline46mondego><newline46mondego>        }<newline46mondego>        else if(actualDiceSum == 15){<newline46mondego>        count15++;<newline46mondego><newline46mondego>        }<newline46mondego>        else if(actualDiceSum == 16){<newline46mondego>        count16++;<newline46mondego><newline46mondego>        }<newline46mondego>        else if(actualDiceSum == 17){<newline46mondego>        count17++;<newline46mondego><newline46mondego>        }<newline46mondego>        else if(actualDiceSum == 18){<newline46mondego>        count18++;<newline46mondego><newline46mondego>        }<newline46mondego>        else if(actualDiceSum == 19){<newline46mondego>        count19++;<newline46mondego><newline46mondego>        }<newline46mondego>        else if(actualDiceSum == 20){<newline46mondego>        count20++;<newline46mondego><newline46mondego>        }<newline46mondego>        else if(actualDiceSum == 21){<newline46mondego>        count21++;<newline46mondego><newline46mondego>        }<newline46mondego>        else if(actualDiceSum == 22){<newline46mondego>        count22++;<newline46mondego><newline46mondego>       }<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>System.out.println(<doubleQuotes46>Sum of Dice \t\t Probability<doubleQuotes46>);<newline46mondego>System.out.println(<doubleQuotes46>2's\t\t<doubleQuotes46> + count2/rolls + <doubleQuotes46>%<doubleQuotes46>);<newline46mondego>System.out.println(<doubleQuotes46>3's\t\t<doubleQuotes46> + count3/rolls + <doubleQuotes46>%<doubleQuotes46>);<newline46mondego>System.out.println(<doubleQuotes46>4's\t\t<doubleQuotes46> + count4/rolls + <doubleQuotes46>%<doubleQuotes46>);<newline46mondego>System.out.println(<doubleQuotes46>5's\t\t<doubleQuotes46> + count5/rolls + <doubleQuotes46>%<doubleQuotes46>);<newline46mondego>//and so on...<newline46mondego>}<newline46mondego>}<newline46mondego>"
"6193splitHere46","12852650splitHere46","BufferedWriter out = new BufferedWriter(fstream);<newline46mondego>"
"6194splitHere46","12852650splitHere46","out.write(<doubleQuotes46>content to write in the file<doubleQuotes46>);<newline46mondego>"
"6195splitHere46","12852650splitHere46","StringWriter sw = new StringWriter();<newline46mondego>StreamResult result = new StreamResult(sw);<newline46mondego>DOMSource source = new DOMSource(doc);<newline46mondego>trans.transform(source, result);<newline46mondego>String xmlString = sw.toString();<newline46mondego>"
"6196splitHere46","12852650splitHere46","xmlString"
"6197splitHere46","12852650splitHere46","out.write(xmlString,0, xmlString.length);<newline46mondego>"
"6198splitHere46","12852650splitHere46","out.close();<newline46mondego>"
"6199splitHere46","12852710splitHere46","this();"
"6200splitHere46","12852742splitHere46","Statement"
"6201splitHere46","12852742splitHere46","ResultSet"
"6202splitHere46","12852742splitHere46","Statement"
"6203splitHere46","12852742splitHere46","ResultSet"
"6204splitHere46","12852742splitHere46","Statement"
"6205splitHere46","12852742splitHere46","ResultSet"
"6206splitHere46","12852742splitHere46","Statement"
"6207splitHere46","12852742splitHere46","PreparedStatement"
"6208splitHere46","12852742splitHere46","ResultSet"
"6209splitHere46","12852742splitHere46","Statement"
"6210splitHere46","12852742splitHere46","Connection"
"6211splitHere46","12852742splitHere46","Connection con = null;<newline46mondego>Statement st = null;<newline46mondego>ResultSet rs = null;<newline46mondego>try {<newline46mondego>    Class.forName(<doubleQuotes46>com.mysql.jdbc.Driver<doubleQuotes46>);<newline46mondego>    con = DriverManager.getConnection(<newline46mondego>            <doubleQuotes46>jdbc:mysql://localhost:3306/asteriskcdrdb<doubleQuotes46>, <doubleQuotes46>root<doubleQuotes46>, <doubleQuotes46>techsoft<doubleQuotes46>);<newline46mondego>    st = con.createStatement();<newline46mondego>    rs = st.executeQuery(<doubleQuotes46>Select * from asteriskcdrdb.sp1<doubleQuotes46>);<newline46mondego>    while (rs.next()) {<newline46mondego>        AreaCode = rs.getString(<doubleQuotes46>AreaCode<doubleQuotes46>);<newline46mondego>        String Pulse = rs.getString(<doubleQuotes46>Pulse<doubleQuotes46>);<newline46mondego>        Rate = rs.getInt(<doubleQuotes46>Rate/pulse<doubleQuotes46>);<newline46mondego>        if (AreaCode.equals(str)) {<newline46mondego>            Statement stmt = null;<newline46mondego>            ResultSet rst = null;<newline46mondego>            PreparedStatement insSt = null;<newline46mondego>            try {<newline46mondego>                //using the first connection<newline46mondego>                stmt = con.createStatement();<newline46mondego>                rst = stmt.executeQuery(<doubleQuotes46>Select * from cdr where src ='9035020090'<doubleQuotes46>);<newline46mondego>                while (rst.next()) {<newline46mondego>                    calldate = rst.getString(<doubleQuotes46>calldate<doubleQuotes46>);<newline46mondego>                    clid = rst.getString(<doubleQuotes46>clid<doubleQuotes46>);<newline46mondego>                    src = rst.getString(<doubleQuotes46>src<doubleQuotes46>);<newline46mondego>                    dst = rst.getString(<doubleQuotes46>dst<doubleQuotes46>);<newline46mondego>                    dcontext = rst.getString(<doubleQuotes46>dcontext<doubleQuotes46>);<newline46mondego>                    channel = rst.getString(<doubleQuotes46>channel<doubleQuotes46>);<newline46mondego>                    dstchannel = rst.getString(<doubleQuotes46>dstchannel<doubleQuotes46>);<newline46mondego>                    lastapp = rst.getString(<doubleQuotes46>lastapp<doubleQuotes46>);<newline46mondego>                    lastdata = rst.getString(<doubleQuotes46>lastdata<doubleQuotes46>);<newline46mondego>                    duration = rst.getString(<doubleQuotes46>duration<doubleQuotes46>);<newline46mondego>                    dur = Integer.parseInt(duration);<newline46mondego>                    data.add(dur);<newline46mondego>                    billsec = rst.getString(<doubleQuotes46>billsec<doubleQuotes46>);<newline46mondego>                    disposition = rst.getString(<doubleQuotes46>disposition<doubleQuotes46>);<newline46mondego>                    amaflags = rst.getString(<doubleQuotes46>amaflags<doubleQuotes46>);<newline46mondego>                    accountcode = rst.getString(<doubleQuotes46>accountcode<doubleQuotes46>);<newline46mondego>                    uniqueid = rst.getString(<doubleQuotes46>uniqueid<doubleQuotes46>);<newline46mondego>                    userfield = rst.getString(<doubleQuotes46>userfield<doubleQuotes46>);<newline46mondego>                    int newcost = checktime(dur, Rate);<newline46mondego>                    //every ? is a parameter in the query<newline46mondego>                    insSt = con.prepareStatement(<newline46mondego>                        <doubleQuotes46>insert into cdrcost (calldate,clid,src,dst,dcontext,channel, dstchannel, lastapp, lastdata,duration,billsec, disposition,amaflags,accountcode,uniqueid, userfield,cdrcost) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)<doubleQuotes46>;<newline46mondego>                    //setting every parameter<newline46mondego>                    insSt.setObject(1, calldate);<newline46mondego>                    insSt.setObject(2, clid);<newline46mondego>                    insSt.setObject(3, src);<newline46mondego>                    insSt.setObject(4, dst);<newline46mondego>                    insSt.setObject(5, dcontext);<newline46mondego>                    insSt.setObject(6, channel);<newline46mondego>                    insSt.setObject(7, dstchannel);<newline46mondego>                    insSt.setObject(8, lastapp);<newline46mondego>                    insSt.setObject(9, lastdata);<newline46mondego>                    insSt.setObject(10, duration);<newline46mondego>                    insSt.setObject(11, billsec);<newline46mondego>                    insSt.setObject(12, disposition);<newline46mondego>                    insSt.setObject(13, amaflags);<newline46mondego>                    insSt.setObject(14, accountcode);<newline46mondego>                    insSt.setObject(15, uniqueid);<newline46mondego>                    insSt.setObject(16, userfield);<newline46mondego>                    insSt.setObject(17, newcost);<newline46mondego>                    //executing the insert statement<newline46mondego>                    insSt.executeUpdate();<newline46mondego>                }<newline46mondego>            } catch (Exception e) {<newline46mondego>                System.out.println(e);<newline46mondego>            } finally {<newline46mondego>                //closing the resources in this transaction<newline46mondego>                try {<newline46mondego>                    //the insSt statement doesn't have a resultset<newline46mondego>                    if (insSt != null) {<newline46mondego>                        insSt.close();<newline46mondego>                    }<newline46mondego>                    //the rst ResultSet is bounded to stmt Statement, it must be closed first<newline46mondego>                    if (rst != null) {<newline46mondego>                        rst.close();<newline46mondego>                    }<newline46mondego>                    if (stmt != null) {<newline46mondego>                        stmt.close();<newline46mondego>                    }<newline46mondego>                } catch (SQLException sqle) {}<newline46mondego>            }<newline46mondego>        } else if (AreaCode.equals(str2)) {<newline46mondego>            System.out.println(<doubleQuotes46>Hii2<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    }<newline46mondego>} catch (Exception e) {<newline46mondego>    System.out.println(e);<newline46mondego>} finally {<newline46mondego>    //closing the resources in this transaction<newline46mondego>    //similar logic than the used in the last close block code<newline46mondego>    try {<newline46mondego>        if (rs != null) {<newline46mondego>            rs.close();<newline46mondego>        }<newline46mondego>        if (st != null) {<newline46mondego>            st.close();<newline46mondego>        }<newline46mondego>        //at the last of all the operations, close the connection<newline46mondego>        if (con != null) {<newline46mondego>            con.close();<newline46mondego>        }<newline46mondego>    } catch (SQLException sqle) {}<newline46mondego>}<newline46mondego>"
"6212splitHere46","12852780splitHere46","String mytime=<doubleQuotes46>20120120<doubleQuotes46>;<newline46mondego>        SimpleDateFormat dateFormat = new SimpleDateFormat(<newline46mondego>                <doubleQuotes46>yyyyMMdd<doubleQuotes46>);<newline46mondego>        Date myDate = null;<newline46mondego>        try {<newline46mondego>            myDate = dateFormat.parse(mytime);<newline46mondego><newline46mondego>        } catch (ParseException e) {<newline46mondego>            e.printStackTrace();<newline46mondego>        } catch (java.text.ParseException e) {<newline46mondego>            // TODO Auto-generated catch block<newline46mondego>            e.printStackTrace();<newline46mondego>        }<newline46mondego><newline46mondego>        SimpleDateFormat timeFormat = new SimpleDateFormat(<doubleQuotes46>yyyy-MM-dd<doubleQuotes46>);<newline46mondego>        String finalDate = timeFormat.format(myDate);<newline46mondego><newline46mondego>        System.out.println(<doubleQuotes46>rrrrrrrrrrrrr<doubleQuotes46>+finalDate);<newline46mondego>"
"6213splitHere46","12852980splitHere46","add"
"6214splitHere46","12852980splitHere46","String"
"6215splitHere46","12852980splitHere46","public void readAndReplace()<newline46mondego>    {<newline46mondego>      // You can also create a new list out of the existing list.<newline46mondego>      // That way, you won't need to modify the existing one.<newline46mondego>      List<String> newList = new ArrayList<String>();<newline46mondego>      for(int i = 0; i < someList .size(); i++)<newline46mondego>      {<newline46mondego>          if(someList.get(i).contains(someString))<newline46mondego>          {<newline46mondego>              newList.add(someList.get(i).replace(someString, otherString));<newline46mondego>             //someList.set(i, someList.get(i).replace(someString, otherString));<newline46mondego>          } else {<newline46mondego><newline46mondego>              // If it not contains `someString`, add it as it is to newList<newline46mondego>              newList.add(someList.get(i));<newline46mondego>          }<newline46mondego><newline46mondego>       }<newline46mondego>       System.out.println(someList);  // Original<newline46mondego>       System.out.println(newList);   // New List<newline46mondego><newline46mondego>    }<newline46mondego>"
"6216splitHere46","12852989splitHere46","IWorkbenchPage.openEditor(input, editorId)"
"6217splitHere46","12853000splitHere46","DIS CHL(*) CHLTYPE"
"6218splitHere46","12853000splitHere46","CONNAME"
"6219splitHere46","12853000splitHere46","MCAUSER"
"6220splitHere46","12853032splitHere46","//I'm assuming alphashuff is a char[]<newline46mondego>List<Character> lstCh = new ArrayList<Character>();<newline46mondego>for(char c : arrCh) {<newline46mondego>    lstCh.add(c);<newline46mondego>}<newline46mondego>Collections.shuffle(lstCh);<newline46mondego>//...<newline46mondego>else<newline46mondego>{<newline46mondego>    output = output + lstCh.get(n);<newline46mondego>}<newline46mondego>"
"6221splitHere46","12853090splitHere46","ServeltContext's getRealPath(virtualPath)"
"6222splitHere46","12853090splitHere46","real"
"6223splitHere46","12853090splitHere46","virtual"
"6224splitHere46","12853090splitHere46","String virutalPath=<doubleQuotes46>/WEB-INF/view/skin/outlogin<doubleQuotes46>;<newline46mondego>String realPath=getServletContext().getRealPath(virtualPath);<newline46mondego>File file = new File(realPath);<newline46mondego>"
"6225splitHere46","12853135splitHere46","null"
"6226splitHere46","12853262splitHere46","FileInputStream"
"6227splitHere46","12853262splitHere46","Reader"
"6228splitHere46","12853262splitHere46","InputStreamReader"
"6229splitHere46","12853262splitHere46","InputStream"
"6230splitHere46","12853262splitHere46","ZipInputStream"
"6231splitHere46","12853262splitHere46","InflaterInputStream"
"6232splitHere46","12853262splitHere46","GZIPInputStream"
"6233splitHere46","12853317splitHere46","Calendar cal = Calendar.getInstance();<newline46mondego>cal.setTime(initDate); //initDate must be of java.util.Date<newline46mondego>cal.add(Calendar.DAY_OF_MONTH, numberOfDates);<newline46mondego>"
"6234splitHere46","12853317splitHere46","Date finalDate = cal.getTime();<newline46mondego>"
"6235splitHere46","12853413splitHere46","for(User user1 : list1) {<newline46mondego>    for(User user2 : list2) {<newline46mondego>        if(user1.getEmpCode().equals(user2.getEmpCode())) {<newline46mondego>            if(!user1.getFirstName().equals(user2.getFirstName()) ||<newline46mondego>               !user1.getLastName().equals(user2.getLastName()) ||<newline46mondego>               !user1.getEmail().equals(user2.getEmail())) {<newline46mondego>                resultList.add(user1);<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6236splitHere46","12853413splitHere46","User"
"6237splitHere46","12853413splitHere46","equal"
"6238splitHere46","12853413splitHere46","hashCode"
"6239splitHere46","12853522splitHere46","android"
"6240splitHere46","12853522splitHere46","raw"
"6241splitHere46","12853522splitHere46","assets"
"6242splitHere46","12853522splitHere46","res"
"6243splitHere46","12853522splitHere46","getResources().openRawResource()"
"6244splitHere46","12853522splitHere46","getResources().getAssets()"
"6245splitHere46","12853586splitHere46","Index2"
"6246splitHere46","12853586splitHere46","null"
"6247splitHere46","12853586splitHere46","Index2.toString()<newline46mondego>"
"6248splitHere46","12853586splitHere46","Index2"
"6249splitHere46","12853586splitHere46","null"
"6250splitHere46","12853586splitHere46","Index2"
"6251splitHere46","12853586splitHere46","null"
"6252splitHere46","12853586splitHere46","try/catch"
"6253splitHere46","12853586splitHere46","NullPointerException"
"6254splitHere46","12853586splitHere46","if( Index2 != null && !Index2.toString().isEmpty()){<newline46mondego>    //...<newline46mondego>}<newline46mondego>"
"6255splitHere46","12853586splitHere46","try {<newline46mondego>    if( !Index2.toString().isEmpty()){<newline46mondego>      //...<newline46mondego>    }<newline46mondego>} catch (NullPointerException npe) {<newline46mondego>    //handle the Exception...<newline46mondego>}<newline46mondego>"
"6256splitHere46","12853618splitHere46","List<String> species = Arrays.asList(speciesArr);<newline46mondego>"
"6257splitHere46","12853618splitHere46","List<String> species"
"6258splitHere46","12853618splitHere46","ArrayList<String> species"
"6259splitHere46","12853618splitHere46","Arrays.asList"
"6260splitHere46","12853618splitHere46","ArrayList"
"6261splitHere46","12853618splitHere46","java.util.Arrays.ArrayList"
"6262splitHere46","12853618splitHere46","java.util.ArrayList"
"6263splitHere46","12853618splitHere46","addAll"
"6264splitHere46","12853618splitHere46","List<String>"
"6265splitHere46","12853618splitHere46","Arrays.asList"
"6266splitHere46","12853618splitHere46","addAll"
"6267splitHere46","12853618splitHere46","String[] arr = new String[1];<newline46mondego>    arr[0] = <doubleQuotes46>rohit<doubleQuotes46>;<newline46mondego>    List<String> newList = Arrays.asList(arr);<newline46mondego><newline46mondego>    // Will throw `UnsupportedOperationException<newline46mondego>    // newList.add(<doubleQuotes46>jain<doubleQuotes46>); // Can't do this.<newline46mondego><newline46mondego>    ArrayList<String> updatableList = new ArrayList<String>();<newline46mondego><newline46mondego>    updatableList.addAll(newList); <newline46mondego><newline46mondego>    updatableList.add(<doubleQuotes46>jain<doubleQuotes46>); // OK this is fine. <newline46mondego><newline46mondego>    System.out.println(newList);       // Prints [rohit]<newline46mondego>    System.out.println(updatableList); //Prints [rohit, jain]<newline46mondego>"
"6268splitHere46","12853708splitHere46","offer"
"6269splitHere46","12853708splitHere46","initialized"
"6270splitHere46","12853708splitHere46","false"
"6271splitHere46","12853708splitHere46","Case A"
"6272splitHere46","12853708splitHere46","initialized"
"6273splitHere46","12853708splitHere46","true"
"6274splitHere46","12853708splitHere46","handler.target"
"6275splitHere46","12853708splitHere46","offer"
"6276splitHere46","12853847splitHere46","String filePattern = <doubleQuotes46> fileName%.log<doubleQuotes46>;<newline46mondego>int limit = 1000 * 1000; // 1 Mb<newline46mondego>int numLogFiles = 3;<newline46mondego>FileHandler fh = new FileHandler(filePattern, limit, numLogFiles);<newline46mondego><newline46mondego>// Add to logger<newline46mondego>Logger logger = Logger.getLogger(MyClass.class.getPackage().getName());<newline46mondego>logger.addHandler(fh);<newline46mondego>"
"6277splitHere46","12853996splitHere46","Servle"
"6278splitHere46","12853996splitHere46","<%@page import=<doubleQuotes46>java.util.Vector<doubleQuotes46>%><newline46mondego><newline46mondego><%<newline46mondego> Vector oRetVal = new Vector();<newline46mondego> try{<newline46mondego>       oRetVal = uploadexcel.ReadCSV(<doubleQuotes46>C:\\test.csv<doubleQuotes46>); // Just an example<newline46mondego>    }catch(Exception e){<newline46mondego><newline46mondego>        e.printStackTrace();<newline46mondego>    }<newline46mondego>%><newline46mondego>"
"6279splitHere46","12854053splitHere46","JTree"
"6280splitHere46","12854163splitHere46","duedate"
"6281splitHere46","12854163splitHere46","org.jbpm.graph.def.ActionHandler"
"6282splitHere46","12854413splitHere46","Custom Lock"
"6283splitHere46","12854413splitHere46","AbstractQueuedSynchronizer"
"6284splitHere46","12854413splitHere46","ConcurrentHashMap"
"6285splitHere46","12854413splitHere46","Synchronized"
"6286splitHere46","12854413splitHere46","ConcurrentHashMap"
"6287splitHere46","12854515splitHere46","getImage()"
"6288splitHere46","12854515splitHere46","// get image from imageicon<newline46mondego>Image image = icon.getImage();<newline46mondego><newline46mondego>// cast it to bufferedimage<newline46mondego>BufferedImage buffered = (BufferedImage) image;<newline46mondego><newline46mondego>try {<newline46mondego>    // save to file<newline46mondego>    File outputfile = new File(<doubleQuotes46>saved.png<doubleQuotes46>);<newline46mondego>    ImageIO.write(buffered, <doubleQuotes46>png<doubleQuotes46>, outputfile);<newline46mondego>} catch (IOException e) {<newline46mondego>    e.printStackTrace();<newline46mondego>}<newline46mondego>"
"6289splitHere46","12854670splitHere46","TableViewer"
"6290splitHere46","12854670splitHere46","viewer"
"6291splitHere46","12854670splitHere46","TableViewer"
"6292splitHere46","12854670splitHere46","MenuManager manager = new MenuManager();<newline46mondego>viewer.getControl().setMenu(manager.createContextMenu(viewer.getControl()));<newline46mondego><newline46mondego>manager.add(new Action(<doubleQuotes46>MENU ITEM TEXT<doubleQuotes46>, ImageDescriptor.createFromImage(YOUR_IMAGE)) {<newline46mondego>    @Override<newline46mondego>    public void run() {<newline46mondego>        // get the current selection of the tableviewer<newline46mondego>        IStructuredSelection selection = (IStructuredSelection) viewer.getSelection();<newline46mondego>        // do something<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"6293splitHere46","12854696splitHere46","FileDialog(RS274X, String, int)<newline46mondego>"
"6294splitHere46","12854724splitHere46","public String toString() {<newline46mondego><newline46mondego>    String stringX = //build String<newline46mondego>    return stringX;<newline46mondego>}<newline46mondego>"
"6295splitHere46","12854917splitHere46","String str = <doubleQuotes46>Rohit<doubleQuotes46>;<newline46mondego>String abc = str;<newline46mondego>"
"6296splitHere46","12854917splitHere46","str"
"6297splitHere46","12854917splitHere46","abc"
"6298splitHere46","12854917splitHere46","Rohit"
"6299splitHere46","12854917splitHere46","Reflection"
"6300splitHere46","12854917splitHere46","Why on earth would you need that?"
"6301splitHere46","12854959splitHere46","%25"
"6302splitHere46","12855001splitHere46","stringList"
"6303splitHere46","12855001splitHere46","Set"
"6304splitHere46","12855001splitHere46","Set"
"6305splitHere46","12855001splitHere46",".equals()"
"6306splitHere46","12855001splitHere46","true"
"6307splitHere46","12855001splitHere46","uniqueList"
"6308splitHere46","12855001splitHere46","<doubleQuotes46>1<doubleQuotes46>"
"6309splitHere46","12855001splitHere46","<doubleQuotes46>2<doubleQuotes46>"
"6310splitHere46","12855001splitHere46","<doubleQuotes46>3<doubleQuotes46>"
"6311splitHere46","12855001splitHere46","<doubleQuotes46>2<doubleQuotes46>.equals(<doubleQuotes46>2<doubleQuotes46>)"
"6312splitHere46","12855001splitHere46","true"
"6313splitHere46","12855001splitHere46","e1"
"6314splitHere46","12855001splitHere46","e2"
"6315splitHere46","12855001splitHere46","e1.equals(e2)"
"6316splitHere46","12855043splitHere46","DesiredCapabilities capabilities = DesiredCapabilities.htmlUnit();<newline46mondego>capabilities.setBrowserName(<browser_name>);<newline46mondego>capabilities.setPlatform(<platform>);<newline46mondego>capabilities.setVersion(<version>);<newline46mondego>driver = new HtmlUnitDriver(capabilities);<newline46mondego>"
"6317splitHere46","12855080splitHere46","dn: uid=scarter,ou=people,dc=example,dc=com<newline46mondego>changetype: modify<newline46mondego>delete: passwordRetryCount<newline46mondego>-<newline46mondego>delete: accountUnlockTime<newline46mondego>"
"6318splitHere46","12855127splitHere46","public static void main(String[] args) {<newline46mondego>        SimpleDateFormat dateTimeFormat = new SimpleDateFormat(<doubleQuotes46>yyyy-MM-dd'T'HH:mm:ss.SSSZ<doubleQuotes46>);<newline46mondego>        String date=<doubleQuotes46>2012-10-03T22:00:00.000+0000<doubleQuotes46>;<newline46mondego>        try {<newline46mondego>            System.out.println(dateTimeFormat.getTimeZone().getDisplayName());<newline46mondego>            System.out.println(<doubleQuotes46>Today : <doubleQuotes46>+new Date().toString()+ <doubleQuotes46>, Timezone Offset :<doubleQuotes46> +<newline46mondego>                    +(new Date()).getTimezoneOffset());<newline46mondego>            System.out.println(<doubleQuotes46>Parsed Date : <doubleQuotes46>+<newline46mondego>                    dateTimeFormat.parse(date).toString()<newline46mondego>                    + <doubleQuotes46>, Timezone Offset : <doubleQuotes46><newline46mondego>                    +dateTimeFormat.parse(date).getTimezoneOffset());           <newline46mondego>        } catch (ParseException e) {            <newline46mondego>            e.printStackTrace();<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"6319splitHere46","12855127splitHere46","Central European Time<newline46mondego>Today : Wed Oct 03 09:44:56 CEST 2012, Timezone Offset : -120<newline46mondego>Parsed Date : Wed Oct 03 23:00:00 CEST 2012, Timezone Offset : -120<newline46mondego>"
"6320splitHere46","12855188splitHere46","new File(<doubleQuotes46>.<doubleQuotes46>)"
"6321splitHere46","12855188splitHere46","catalina.base"
"6322splitHere46","12855188splitHere46","catalina.sh"
"6323splitHere46","12855188splitHere46","File catalinaBase = new File( System.getProperty( <doubleQuotes46>catalina.base<doubleQuotes46> ) ).getAbsoluteFile();<newline46mondego>File propertyFile = new File( catalinaBase, <doubleQuotes46>webapps/strsproperties/strs.properties<doubleQuotes46> );<newline46mondego><newline46mondego>InputStream inputStream = new FileInputStream( propertyFile );<newline46mondego>"
"6324splitHere46","12855188splitHere46","getAbsoluteFile()"
"6325splitHere46","12855188splitHere46","strsproperties"
"6326splitHere46","12855188splitHere46","strsproperties"
"6327splitHere46","12855449splitHere46","public class MainActivity extends Activity {<newline46mondego><newline46mondego>    private ViewFlipper vf;<newline46mondego>    private float lastX;<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void onCreate(Bundle savedInstanceState) {<newline46mondego>        super.onCreate(savedInstanceState);<newline46mondego>        setContentView(R.layout.activity_main);<newline46mondego><newline46mondego>        vf = (ViewFlipper) findViewById(R.id.view_flipper);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean onCreateOptionsMenu(Menu menu) {<newline46mondego>        getMenuInflater().inflate(R.menu.activity_main, menu);<newline46mondego>        return true;<newline46mondego>    }<newline46mondego><newline46mondego>    public boolean onTouchEvent(MotionEvent touchevent) {<newline46mondego><newline46mondego>        switch (touchevent.getAction())<newline46mondego>        {<newline46mondego>            case MotionEvent.ACTION_DOWN:<newline46mondego>            {<newline46mondego>                lastX = touchevent.getX();<newline46mondego>                break;<newline46mondego>            }<newline46mondego><newline46mondego>            case MotionEvent.ACTION_UP:<newline46mondego>            {<newline46mondego>                float currentX = touchevent.getX();<newline46mondego><newline46mondego>                if (lastX < currentX)<newline46mondego>                {<newline46mondego>                    if (vf.getDisplayedChild()==0)<newline46mondego>                        break;<newline46mondego><newline46mondego>                    vf.setInAnimation(this, R.anim.in_from_left);<newline46mondego>                    vf.setOutAnimation(this, R.anim.out_to_right);<newline46mondego>//                    vf.showNext();<newline46mondego>                    vf.showPrevious();<newline46mondego>                }<newline46mondego><newline46mondego>                if (lastX > currentX)<newline46mondego>                {<newline46mondego>//                    if (vf.getDisplayedChild()==1)<newline46mondego>                    if (vf.getDisplayedChild()==vf.getChildCount()-1)<newline46mondego>                        break;<newline46mondego><newline46mondego>                    vf.setInAnimation(this, R.anim.in_from_right);<newline46mondego>                    vf.setOutAnimation(this, R.anim.out_to_left);<newline46mondego>//                    vf.showPrevious();<newline46mondego>                    vf.showNext();<newline46mondego>                }<newline46mondego><newline46mondego>                break;<newline46mondego>            }<newline46mondego><newline46mondego>            case MotionEvent.ACTION_MOVE:<newline46mondego>            {<newline46mondego>                float tempX = touchevent.getX();<newline46mondego>                int scrollX = (int) (tempX - lastX);<newline46mondego><newline46mondego>                //vf.scrollBy(scrollX, 0);<newline46mondego><newline46mondego>                break;<newline46mondego>            }<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>        return false;<newline46mondego><newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6328splitHere46","12855469splitHere46","<import resource=<doubleQuotes46>classpath:dbConfig.xml<doubleQuotes46>/><newline46mondego><import resource=<doubleQuotes46>classpath:userModuleContext.xml<doubleQuotes46>/><newline46mondego><import resource=<doubleQuotes46>classpath:customerModuleContext.xml<doubleQuotes46>/><newline46mondego>"
"6329splitHere46","12855511splitHere46","<dependency><newline46mondego>      <groupId>org.jaudiotagger</groupId><newline46mondego>      <artifactId>jaudiotagger</artifactId><newline46mondego>      <version>2.0.1</version><newline46mondego>  </dependency><newline46mondego>"
"6330splitHere46","12855511splitHere46","<artifactId>maven-assembly-plugin</artifactId><newline46mondego>   <configuration><newline46mondego>       <archive><newline46mondego>           <manifest><newline46mondego>               <mainClass>be.phury.audiotagger.Audiotagger</mainClass><newline46mondego>           </manifest><newline46mondego>       </archive><newline46mondego>       <descriptorRefs><newline46mondego>           <descriptorRef>jar-with-dependencies</descriptorRef><newline46mondego>       </descriptorRefs><newline46mondego>   </configuration><newline46mondego>"
"6331splitHere46","12855958splitHere46","adb uninstall _nameofapp__<newline46mondego>"
"6332splitHere46","12855958splitHere46","adb kill-server<newline46mondego>adb start-server<newline46mondego>"
"6333splitHere46","12856079splitHere46","import java.util.ArrayList;<newline46mondego>import java.util.List;<newline46mondego><newline46mondego>import org.simpleframework.xml.ElementList;<newline46mondego>import org.simpleframework.xml.Root;<newline46mondego><newline46mondego>@Root(name = <doubleQuotes46>ul<doubleQuotes46>, strict = false)<newline46mondego>public class ULTag {<newline46mondego><newline46mondego>   @ElementList(name = <doubleQuotes46>li<doubleQuotes46>, inline = true, required = false)<newline46mondego>   List<LITag> liTags = new ArrayList<LITag>();<newline46mondego><newline46mondego>   public List<LITag> getLiTags() {<newline46mondego>      return liTags;<newline46mondego>   }<newline46mondego><newline46mondego>   public void setLiTags(List<LITag> liTags) {<newline46mondego>      this.liTags = liTags;<newline46mondego>   }<newline46mondego><newline46mondego>   public ULTag() {<newline46mondego>   }<newline46mondego><newline46mondego>}<newline46mondego>"
"6334splitHere46","12856079splitHere46","import org.simpleframework.xml.Element;<newline46mondego>import org.simpleframework.xml.Root;<newline46mondego><newline46mondego>@Root(name = <doubleQuotes46>li<doubleQuotes46>, strict = false)<newline46mondego>public class LITag {<newline46mondego><newline46mondego>   @Element(name = <doubleQuotes46>strong<doubleQuotes46>, required = false)<newline46mondego>   private String strong;<newline46mondego><newline46mondego>   public LITag() {<newline46mondego>   }<newline46mondego><newline46mondego>   public String getStrong() {<newline46mondego>      return strong;<newline46mondego>   }<newline46mondego><newline46mondego>   public void setStrong(String strong) {<newline46mondego>      this.strong = strong;<newline46mondego>   }<newline46mondego><newline46mondego>}<newline46mondego>"
"6335splitHere46","12856079splitHere46","import org.simpleframework.xml.Element;<newline46mondego>import org.simpleframework.xml.Root;<newline46mondego><newline46mondego>@Root(name = <doubleQuotes46>strong<doubleQuotes46>, strict = false)<newline46mondego>public class StrongTag {<newline46mondego><newline46mondego>   @Element(name = <doubleQuotes46>strong<doubleQuotes46>, required = false)<newline46mondego>   private String strong;<newline46mondego><newline46mondego>   public StrongTag() {<newline46mondego>   }<newline46mondego><newline46mondego>   public String getStrong() {<newline46mondego>      return strong;<newline46mondego>   }<newline46mondego><newline46mondego>   public void setStrong(String strong) {<newline46mondego>      this.strong = strong;<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"6336splitHere46","12856079splitHere46","Serializer serializer = new Persister();<newline46mondego>File source = new File(<doubleQuotes46>yourxmlexampl.xml<doubleQuotes46>);<newline46mondego><newline46mondego>ULTag ulTag = serializer.read(ULTag.class, source);<newline46mondego>"
"6337splitHere46","12856079splitHere46","String percent=ulTag.getLITags().get(0).getStrong();<newline46mondego>"
"6338splitHere46","12856139splitHere46","<doubleQuotes46>both<doubleQuotes46>"
"6339splitHere46","12856139splitHere46","else"
"6340splitHere46","12856139splitHere46","setValue"
"6341splitHere46","12856139splitHere46","protected void setValue(Object element, Object value) <newline46mondego>{<newline46mondego>    if((element instanceof AplotDatasetData) && (value instanceof Integer)) {<newline46mondego>        Integer choice = (Integer)value;<newline46mondego><newline46mondego>        String option = ((AplotDatasetData)element).getMarkupValue();<newline46mondego><newline46mondego>        if(choice == 0) {<newline46mondego>            option = <doubleQuotes46>No<doubleQuotes46>;<newline46mondego>        }    <newline46mondego>        else if(choice == 1) {<newline46mondego>            option = <doubleQuotes46>Yes<doubleQuotes46>;<newline46mondego>        }    <newline46mondego>        else {<newline46mondego>            option = <doubleQuotes46>Both<doubleQuotes46>;<newline46mondego><newline46mondego>            // create a copy of your element<newline46mondego>            // add it to your model<newline46mondego>            // update the viewer<newline46mondego>        }<newline46mondego><newline46mondego>        getViewer().update(element, null);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"6342splitHere46","12856201splitHere46","Calendar"
"6343splitHere46","12856201splitHere46","Date"
"6344splitHere46","12856201splitHere46","LocalDate"
"6345splitHere46","12856201splitHere46","Calendar"
"6346splitHere46","12856201splitHere46","Date"
"6347splitHere46","12856282splitHere46","@MultipartConfig"
"6348splitHere46","12856282splitHere46","FacesServlet"
"6349splitHere46","12856282splitHere46","<h:inputFile>"
"6350splitHere46","12856282splitHere46","<t:inputFileUpload>"
"6351splitHere46","12856282splitHere46","<p:fileUpload>"
"6352splitHere46","12856282splitHere46","<x:inputFile>"
"6353splitHere46","12856772splitHere46","Test.class"
"6354splitHere46","12856772splitHere46","Class"
"6355splitHere46","12856772splitHere46","Test"
"6356splitHere46","12856772splitHere46","this"
"6357splitHere46","12856844splitHere46","if"
"6358splitHere46","12856844splitHere46","private static boolean checkIfLive (boolean[][] board, int row, int col) {<newline46mondego><newline46mondego>    int lastRow = board.length-1;<newline46mondego>    int lastCol = board[0].length-1;<newline46mondego><newline46mondego>    if ((row >= 0 && row <= lastRow) && (col >= 0 && col <= lastCol)) {             <newline46mondego>        return board[row][col];<newline46mondego>    } else {<newline46mondego>        return false;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6359splitHere46","12856885splitHere46","@Override<newline46mondego>public View getView(int position, View convertView, ViewGroup parent) {<newline46mondego><newline46mondego><newline46mondego> final ViewHolder holder;<newline46mondego>    if(convertView==null)<newline46mondego>    {<newline46mondego>        LayoutInflater mInflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);<newline46mondego>        convertView = mInflater.inflate(resource, parent, false);<newline46mondego>        holder = new ViewHolder();<newline46mondego>        convertView.setTag(holder);<newline46mondego><newline46mondego>    }<newline46mondego>    else<newline46mondego>    {<newline46mondego>        holder = (ViewHolder) convertView.getTag();<newline46mondego>    }<newline46mondego>    holder.position = position;<newline46mondego>    no=student.get(holder.position).get(TAG_StudentNo);<newline46mondego>    name =student.get(holder.position).get(TAG_FullName);<newline46mondego>    holder.StudentID= (TextView) convertView.findViewById(R.id.StudentID);<newline46mondego>    holder.FullName= (TextView) convertView.findViewById(R.id.FullName);<newline46mondego>    holder.FullName.setText();<newline46mondego>    holder.StudentNo=(TextView) convertView.findViewById(R.id.StudentNo);<newline46mondego>    holder.StudentNo.setText();<newline46mondego>    holder.DeleteStudent = (ImageView) convertView.findViewById(R.id.DeleteStudent);<newline46mondego>        holder.AlertIcon = (ImageView) convertView.findViewById(R.id.Alert);<newline46mondego><newline46mondego>     // add a listener for phone call<newline46mondego>        holder.DeleteStudent.setOnClickListener(new OnClickListener() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void onClick(View v) {<newline46mondego><newline46mondego>             id = student.get(holder.position).get(TAG_StudentID);<newline46mondego>            Toast.makeText(getContext(),id,Toast.LENGTH_LONG).show();<newline46mondego><newline46mondego><newline46mondego>            }<newline46mondego><newline46mondego>        });<newline46mondego><newline46mondego><newline46mondego>        holder.AlertIcon.setOnClickListener(new OnClickListener() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void onClick(View v) {<newline46mondego><newline46mondego>             //   String email = MyCustomAdapter.listMap.get(holder.position).get(<doubleQuotes46>email<doubleQuotes46>);<newline46mondego>              //  ActivityHelper.startActivity(ActivityManager.EMAIL, email);<newline46mondego>            }<newline46mondego><newline46mondego>        });<newline46mondego><newline46mondego><newline46mondego><newline46mondego>    return convertView;<newline46mondego>"
"6360splitHere46","12856885splitHere46","private static class ViewHolder<newline46mondego>{<newline46mondego>    ImageView DeleteStudent;<newline46mondego><newline46mondego>    ImageView AlertIcon;<newline46mondego><newline46mondego>    TextView StudentID, StudentNo ,FullName;<newline46mondego><newline46mondego>    int position;<newline46mondego>}<newline46mondego>"
"6361splitHere46","12857253splitHere46","Cursor mCursor = database.query(true, bp_TABLE, new String[] { bp_SYS,<newline46mondego>                bp_DIA, bp_DT, bp_ID, bp_NOT, bp_PUL }, <doubleQuotes46>datetime BETWEEN ?<newline46mondego>              AND ?<doubleQuotes46> , new String[]{start,end}, null, null, bp_DT + <doubleQuotes46> DESC<doubleQuotes46>,<newline46mondego>                null);<newline46mondego>"
"6362splitHere46","12857256splitHere46","<>"
"6363splitHere46","12857256splitHere46","static <K,T> Map<K,T> createMap()"
"6364splitHere46","12857313splitHere46","<dependency>  <newline46mondego>    <groupId>org.softsmithy.lib</groupId>  <newline46mondego>    <artifactId>softsmithy-lib-core</artifactId>  <newline46mondego>    <version>0.2</version>   <newline46mondego></dependency> <newline46mondego>"
"6365splitHere46","12857366splitHere46","Character.isJavaIdentifierStart(int)"
"6366splitHere46","12857366splitHere46","Character.isJavaIdentifierPart(int)"
"6367splitHere46","12857366splitHere46","String sçèêûá¢é£¥ = <doubleQuotes46>bc<doubleQuotes46>;<newline46mondego>"
"6368splitHere46","12857366splitHere46","public static void main(String args[]) {<newline46mondego>    for (int i = 0; i < Character.MAX_VALUE; i++) {<newline46mondego>        if (Character.isJavaIdentifierPart(i)) {<newline46mondego>            System.out.println(<doubleQuotes46>i = <doubleQuotes46> + i + <doubleQuotes46>: <doubleQuotes46> + (char) i);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6369splitHere46","12857368splitHere46","project"
"6370splitHere46","12857368splitHere46","Package Explorer"
"6371splitHere46","12857368splitHere46","Properties"
"6372splitHere46","12857368splitHere46","Alt+Enter"
"6373splitHere46","12857368splitHere46","IsLibray"
"6374splitHere46","12857368splitHere46","http://developer.android.com/tools/projects/projects-eclipse.html"
"6375splitHere46","12857368splitHere46","1.File->New->Other<newline46mondego>2.Select Android Project<newline46mondego>3.Select <doubleQuotes46>Create Project from existing source<doubleQuotes46><newline46mondego>4.Click <doubleQuotes46>Browse...<doubleQuotes46> button and navigate to johannilsson-android-actionbar\actionbar<newline46mondego>5.Finish (Now action bar project in your workspace)<newline46mondego>6.Right-click on your project -> Properties<newline46mondego>7.In Android->Library section click Add<newline46mondego>8.select recently added project -> Ok<newline46mondego>"
"6376splitHere46","12857468splitHere46","f.set(myEntity, obj);<newline46mondego>"
"6377splitHere46","12857468splitHere46","myEntity.populateFromMap(myMap);<newline46mondego>"
"6378splitHere46","12857607splitHere46","class A"
"6379splitHere46","12857607splitHere46","abstract"
"6380splitHere46","12857607splitHere46","class"
"6381splitHere46","12857607splitHere46","A"
"6382splitHere46","12857607splitHere46","abstract"
"6383splitHere46","12857607splitHere46","abstract"
"6384splitHere46","12857607splitHere46","B"
"6385splitHere46","12857706splitHere46","Window -> Preferences"
"6386splitHere46","12857706splitHere46","errors/warnings"
"6387splitHere46","12857731splitHere46","String"
"6388splitHere46","12857731splitHere46","String[] arr= null;<newline46mondego>    List<String> itemsSchool = new ArrayList<String>();<newline46mondego><newline46mondego>    try <newline46mondego>    { <newline46mondego>        FileInputStream fstream_school = new FileInputStream(<doubleQuotes46>text1.txt<doubleQuotes46>); <newline46mondego>        DataInputStream data_input = new DataInputStream(fstream_school); <newline46mondego>        BufferedReader buffer = new BufferedReader(new InputStreamReader(data_input)); <newline46mondego>        String str_line; <newline46mondego><newline46mondego>        while ((str_line = buffer.readLine()) != null) <newline46mondego>        { <newline46mondego>            str_line = str_line.trim(); <newline46mondego>            if ((str_line.length()!=0))  <newline46mondego>            { <newline46mondego>                itemsSchool.add(str_line);<newline46mondego>            } <newline46mondego>        }<newline46mondego><newline46mondego>        arr = (String[])itemsSchool.toArray(new String[itemsSchool.size()]);<newline46mondego>    }<newline46mondego>"
"6389splitHere46","12857731splitHere46","arr"
"6390splitHere46","12857731splitHere46","{<doubleQuotes46>abc def jhi<doubleQuotes46>,<doubleQuotes46>klm nop qrs<doubleQuotes46>,<doubleQuotes46>tuv wxy zzz<doubleQuotes46>} <newline46mondego>"
"6391splitHere46","12857748splitHere46","<plugin><newline46mondego>    <groupId>org.apache.maven.plugins</groupId><newline46mondego>    <artifactId>maven-compiler-plugin</artifactId><newline46mondego>    <version>2.3.2</version><newline46mondego>    <configuration><newline46mondego>        <source>1.7</source><newline46mondego>        <target>1.7</target><newline46mondego>    </configuration><newline46mondego></plugin><newline46mondego>"
"6392splitHere46","12857748splitHere46","<source>1.7</source>"
"6393splitHere46","12857748splitHere46","<source>1.6</source>"
"6394splitHere46","12857748splitHere46","<target>"
"6395splitHere46","12857774splitHere46","c: <newline46mondego>"
"6396splitHere46","12857774splitHere46","Element(java.lang.String name, java.lang.String prefix, java.lang.String uri)<newline46mondego>  Creates a new element with the supplied (local) name and a namespace given by the supplied prefix and URI combination.<newline46mondego>"
"6397splitHere46","12857794splitHere46","List"
"6398splitHere46","12857794splitHere46","indexOf(Object)"
"6399splitHere46","12857838splitHere46","@IndexEmbedded"
"6400splitHere46","12857838splitHere46","@ContainedIn"
"6401splitHere46","12857838splitHere46","@IndexedEmbedded<newline46mondego>    private RecordFolderArrival recordFolderArrival;<newline46mondego>"
"6402splitHere46","12857838splitHere46","@ContainedIn<newline46mondego>    private List<RecordFolderAnalysis> recordFolderAnalysis=new ArrayList<>();<newline46mondego>"
"6403splitHere46","12857838splitHere46","@IndexedEmbedded"
"6404splitHere46","12857852splitHere46","public static String LeapYear(int y) {<newline46mondego> int theYear;<newline46mondego> theYear = y;<newline46mondego> String LEAP_YEAR = <doubleQuotes46>IT IS A LEAP YEAR<doubleQuotes46>;<newline46mondego> String NOT_A_LEAP_YEAR = <doubleQuotes46>IT IS NOT A LEAP YEAR<doubleQuotes46>;<newline46mondego><newline46mondego> if (theYear < 100) {<newline46mondego>    if (theYear > 40) {<newline46mondego>        theYear = theYear + 1900;<newline46mondego>    } else {<newline46mondego>        theYear = theYear + 2000;<newline46mondego>    }<newline46mondego> }<newline46mondego><newline46mondego>if (theYear % 4 == 0) {<newline46mondego>    if (theYear % 100 != 0) {<newline46mondego>        //System.out.println(<doubleQuotes46>IT IS A LEAP YEAR<doubleQuotes46>);<newline46mondego>        return LEAP_YEAR;<newline46mondego><newline46mondego>    } else if (theYear % 400 == 0) {<newline46mondego>        //System.out.println(<doubleQuotes46>IT IS A LEAP YEAR<doubleQuotes46>);<newline46mondego>        return LEAP_YEAR;<newline46mondego>    } else {<newline46mondego>       // System.out.println(<doubleQuotes46>IT IS NOT A LEAP YEAR<doubleQuotes46>);<newline46mondego>       return NOT_A_LEAP_YEAR ;<newline46mondego>    }<newline46mondego>  } else {<newline46mondego>    //System.out.println(<doubleQuotes46>IT IS NOT A LEAP YEAR<doubleQuotes46>);<newline46mondego>    return NOT_A_LEAP_YEAR ;<newline46mondego>  }<newline46mondego> return NOT_A_LEAP_YEAR ;<newline46mondego>}<newline46mondego>"
"6405splitHere46","12857926splitHere46","HashSet"
"6406splitHere46","12857926splitHere46","equals"
"6407splitHere46","12857926splitHere46","hashCode"
"6408splitHere46","12857926splitHere46","hashCode"
"6409splitHere46","12857926splitHere46","equals"
"6410splitHere46","12857926splitHere46","HashSet"
"6411splitHere46","12857926splitHere46","MyObject"
"6412splitHere46","12858097splitHere46","a = (B)(I) b;<newline46mondego>"
"6413splitHere46","12858097splitHere46","b"
"6414splitHere46","12858097splitHere46","B"
"6415splitHere46","12858097splitHere46","I"
"6416splitHere46","12858097splitHere46","B"
"6417splitHere46","12858097splitHere46","b"
"6418splitHere46","12858097splitHere46","B"
"6419splitHere46","12858097splitHere46","I i = (C) a;<newline46mondego>"
"6420splitHere46","12858097splitHere46","a"
"6421splitHere46","12858097splitHere46","A"
"6422splitHere46","12858097splitHere46","C"
"6423splitHere46","12858268splitHere46","Location net_loc=null, gps_loc=null;<newline46mondego>if(gps_enabled)<newline46mondego>gps_loc=lm.getLastKnownLocation(LocationManager.GPS_PROVIDER);<newline46mondego>if(network_enabled)<newline46mondego>net_loc=lm.getLastKnownLocation(LocationManager.NETWORK_PROVIDER);<newline46mondego>"
"6424splitHere46","12858273splitHere46","LinearLayout"
"6425splitHere46","12858273splitHere46","View"
"6426splitHere46","12858273splitHere46","View"
"6427splitHere46","12858273splitHere46","LinearLayout"
"6428splitHere46","12858273splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>utf-8<doubleQuotes46>?><newline46mondego><RelativeLayout xmlns:android=<doubleQuotes46>http://schemas.android.com/apk/res/android<doubleQuotes46><newline46mondego>    android:layout_width=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>    android:layout_height=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>    android:orientation=<doubleQuotes46>vertical<doubleQuotes46> ><newline46mondego><newline46mondego>    <LinearLayout<newline46mondego>        android:id=<doubleQuotes46>@+id/linearLayout1<doubleQuotes46><newline46mondego>        android:layout_width=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>        android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>        android:layout_margin=<doubleQuotes46>15dp<doubleQuotes46><newline46mondego>        android:orientation=<doubleQuotes46>horizontal<doubleQuotes46> ><newline46mondego><newline46mondego>        <TextView<newline46mondego>            android:id=<doubleQuotes46>@+id/item1<doubleQuotes46><newline46mondego>            android:layout_width=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>            android:layout_height=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>            android:text=<doubleQuotes46>row_id<doubleQuotes46><newline46mondego>            android:textSize=<doubleQuotes46>18sp<doubleQuotes46><newline46mondego>            android:width=<doubleQuotes46>100dip<doubleQuotes46> /><newline46mondego><newline46mondego>        <TextView<newline46mondego>            android:id=<doubleQuotes46>@+id/item2<doubleQuotes46><newline46mondego>            android:layout_width=<doubleQuotes46>match_parent<doubleQuotes46><newline46mondego>            android:layout_height=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>            android:text=<doubleQuotes46>col_1<doubleQuotes46><newline46mondego>            android:textSize=<doubleQuotes46>18sp<doubleQuotes46><newline46mondego>            android:width=<doubleQuotes46>300dip<doubleQuotes46> /><newline46mondego>    </LinearLayout><newline46mondego><newline46mondego>    <View<newline46mondego>        android:id=<doubleQuotes46>@+id/view2<doubleQuotes46><newline46mondego>        android:layout_width=<doubleQuotes46>2dp<doubleQuotes46><newline46mondego>        android:layout_height=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>        android:layout_marginLeft=<doubleQuotes46>5dp<doubleQuotes46><newline46mondego>        android:background=<doubleQuotes46>#ff000000<doubleQuotes46> /><newline46mondego><newline46mondego></RelativeLayout><newline46mondego>"
"6429splitHere46","12858273splitHere46","convertView = infalInflater.inflate(R.layout.group_list_layout, parent, false);<newline46mondego>"
"6430splitHere46","12858389splitHere46","Pipe (|)"
"6431splitHere46","12858389splitHere46","multiple Regex"
"6432splitHere46","12858389splitHere46","String s = <doubleQuotes46>name lastname (username) <mail@mail.something.dk>; name lastname<newline46mondego>            (username) <mail@mail.something.dk>; name lastname <newline46mondego>            (username) <mail@mail.something.dk>;<doubleQuotes46>;<newline46mondego><newline46mondego>    // Matches (?<=\\()[^\\)]+  or  ((?<=<)[^>]+)<newline46mondego>    Pattern pattern = Pattern.compile(<doubleQuotes46>(?<=\\()[^\\)]+|((?<=<)[^>]+)<doubleQuotes46>);<newline46mondego>    Matcher matcher = pattern.matcher(s);<newline46mondego><newline46mondego>    while (matcher.find()) {<newline46mondego>        System.out.println(matcher.group());<newline46mondego>    }<newline46mondego>"
"6433splitHere46","12858389splitHere46","username<newline46mondego>mail@mail.something.dk<newline46mondego>username<newline46mondego>mail@mail.something.dk<newline46mondego>username<newline46mondego>mail@mail.something.dk<newline46mondego>"
"6434splitHere46","12858389splitHere46","username"
"6435splitHere46","12858389splitHere46","email"
"6436splitHere46","12858389splitHere46",";"
"6437splitHere46","12858389splitHere46","String s = <doubleQuotes46>name lastname (username) ; <newline46mondego>                name lastname (username) <mail@mail.something.dk>; <newline46mondego>                name lastname (username) <mail@mail.something.dk>;<doubleQuotes46>;<newline46mondego><newline46mondego>    String [] strArr = s.split(<doubleQuotes46>;<doubleQuotes46>);<newline46mondego><newline46mondego>    for (String str: strArr) {<newline46mondego><newline46mondego>        Pattern pattern = Pattern.compile(<doubleQuotes46>\\(([^\\)]+)(?:\\))\\s(?:\\<)((?<=<)[^>]+)<doubleQuotes46>);<newline46mondego>        Matcher matcher = pattern.matcher(str);<newline46mondego><newline46mondego>        while (matcher.find()) {<newline46mondego>            System.out.print(matcher.group(1) + <doubleQuotes46> <doubleQuotes46> + matcher.group(2));<newline46mondego>        }<newline46mondego>        System.out.println();<newline46mondego>    }<newline46mondego>"
"6438splitHere46","12858389splitHere46","username mail@mail.something.dk<newline46mondego>username mail@mail.something.dk // Only the last two have both username and email<newline46mondego>"
"6439splitHere46","12858450splitHere46","Properties prop = new Properties();<newline46mondego>prop.setProperty(<doubleQuotes46>root<doubleQuotes46>, <doubleQuotes46>some root<doubleQuotes46>);<newline46mondego>prop.setProperty(<doubleQuotes46>port<doubleQuotes46>, <doubleQuotes46>8020<doubleQuotes46>);<newline46mondego>prop.store(new FileWriter(<doubleQuotes46>config.txt<doubleQuotes46>), <doubleQuotes46>test<doubleQuotes46>);<newline46mondego><newline46mondego>Properties config = new Properties();<newline46mondego>//loading properties from properties file<newline46mondego>config.load(new FileReader(<doubleQuotes46>config.txt<doubleQuotes46>));<newline46mondego><newline46mondego>int port = Integer.parseInt(config.getProperty(<doubleQuotes46>port<doubleQuotes46>));<newline46mondego>System.out.println(<doubleQuotes46>this is port <doubleQuotes46> + port);<newline46mondego>"
"6440splitHere46","12858450splitHere46","this is port 8020<newline46mondego>"
"6441splitHere46","12858461splitHere46","JDesktopPane"
"6442splitHere46","12858461splitHere46","JLayeredPane"
"6443splitHere46","12858577splitHere46","verzekeringBeheer"
"6444splitHere46","12858577splitHere46","NullPointerException"
"6445splitHere46","12858577splitHere46","verzekeringbeheer = new VerzekeringBeheer();<newline46mondego>"
"6446splitHere46","12858577splitHere46","public VerzekeringBeheer() {<newline46mondego>    ...<newline46mondego>    //verzekeringmaatschappijLijst is never initialized!!!<newline46mondego>}<newline46mondego><newline46mondego>public void maakLijstAan() <newline46mondego>{<newline46mondego>    verzekeringmaatschappijLijst = new Lijst<>();<newline46mondego>    System.out.println(<doubleQuotes46>Maak lijst aan<doubleQuotes46>);<newline46mondego>}<newline46mondego><newline46mondego>public Object[] getMaatschappijNamen() <newline46mondego>{<newline46mondego>    ArrayList<String> mnamen = new ArrayList<String>();<newline46mondego>    // Here you use verzekeringmaatschappijLijst without checking that is not null!!!<newline46mondego>    for (VerzekeringsMaatschappij maatschappij : verzekeringmaatschappijLijst) <newline46mondego>    {<newline46mondego>        mnamen.add(maatschappij.getMaatschappijNaam());<newline46mondego>    }<newline46mondego>    return mnamen.toArray();<newline46mondego>}<newline46mondego>"
"6447splitHere46","12858577splitHere46","maakLijstAan"
"6448splitHere46","12858577splitHere46","NullPointerException"
"6449splitHere46","12858577splitHere46","getMaatschappijNamen"
"6450splitHere46","12858590splitHere46","import java.util.Arrays;<newline46mondego><newline46mondego>public class Queue {<newline46mondego><newline46mondego>    private int enqueueIndex;// Separate index to ensure enqueue happens at the end<newline46mondego>    private int dequeueIndex;// Separate index to ensure dequeue happens at the<newline46mondego>                            // start<newline46mondego>    private int[] items;<newline46mondego>    private int count;<newline46mondego>    // Lazy to add javadocs please provide<newline46mondego>    public Queue(int size) {<newline46mondego>        enqueueIndex = 0;<newline46mondego>        dequeueIndex = 0;<newline46mondego>        items = new int[size];<newline46mondego>    }<newline46mondego>    // Lazy to add javadocs please provide<newline46mondego>    public void enqueue(int newNumber) {<newline46mondego>        if (count == items.length)<newline46mondego>            throw new IllegalStateException();<newline46mondego>        items[enqueueIndex] = newNumber;<newline46mondego>        enqueueIndex = ++enqueueIndex == items.length ? 0 : enqueueIndex;<newline46mondego>        ++count;<newline46mondego>    }<newline46mondego>    // Lazy to add javadocs please provide<newline46mondego>    public int dequeue() {<newline46mondego>        if (count == 0)<newline46mondego>            throw new IllegalStateException();<newline46mondego>        int item = items[dequeueIndex];<newline46mondego>        items[dequeueIndex] = 0;<newline46mondego>        dequeueIndex = ++dequeueIndex == items.length ? 0 : dequeueIndex;<newline46mondego>        --count;<newline46mondego>        return item;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public String toString() {<newline46mondego>        return Arrays.toString(items);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6451splitHere46","12858747splitHere46","import java.awt.*;<newline46mondego>import java.awt.event.*;<newline46mondego>import java.util.Date;<newline46mondego>import javax.swing.*;<newline46mondego>import javax.swing.text.*;<newline46mondego>import javax.swing.undo.*;<newline46mondego>import javax.swing.event.*;<newline46mondego><newline46mondego>public class ReplaceUndoableEditDemo {<newline46mondego>  private final UndoManager um = new UndoManager();<newline46mondego>  private final JTextField tf = new JTextField(24);<newline46mondego>  private final UndoManager undoManager = new UndoManager();<newline46mondego>  private final JTextField field = new JTextField(24);<newline46mondego>  private final Document doc = new PlainDocument() {<newline46mondego>    @Override public void replace(<newline46mondego>      int offset, int length, String text, AttributeSet attrs)<newline46mondego>    throws BadLocationException {<newline46mondego>      undoManager.undoableEditHappened(new UndoableEditEvent(<newline46mondego>          this, new ReplaceUndoableEdit(offset, length, text)));<newline46mondego>      replaceIgnoringUndo(offset, length, text, attrs);<newline46mondego>    }<newline46mondego>    private void replaceIgnoringUndo(<newline46mondego>      int offset, int length, String text, AttributeSet attrs)<newline46mondego>    throws BadLocationException {<newline46mondego>      for(UndoableEditListener uel: getUndoableEditListeners()) {<newline46mondego>        removeUndoableEditListener(uel);<newline46mondego>      }<newline46mondego>      super.replace(offset, length, text, attrs);<newline46mondego>      for(UndoableEditListener uel: getUndoableEditListeners()) {<newline46mondego>        addUndoableEditListener(uel);<newline46mondego>      }<newline46mondego>    }<newline46mondego>    class ReplaceUndoableEdit extends AbstractUndoableEdit {<newline46mondego>      private final String oldValue;<newline46mondego>      private final String newValue;<newline46mondego>      private int offset;<newline46mondego>      public ReplaceUndoableEdit(int offset, int length, String newValue) {<newline46mondego>        String txt;<newline46mondego>        try {<newline46mondego>          txt = getText(offset, length);<newline46mondego>        } catch(BadLocationException e) {<newline46mondego>          txt = null;<newline46mondego>        }<newline46mondego>        this.oldValue = txt;<newline46mondego>        this.newValue = newValue;<newline46mondego>        this.offset = offset;<newline46mondego>      }<newline46mondego>      @Override public void undo() throws CannotUndoException {<newline46mondego>        try {<newline46mondego>          replaceIgnoringUndo(offset, newValue.length(), oldValue, null);<newline46mondego>        } catch(BadLocationException ex) {<newline46mondego>          throw new CannotUndoException();<newline46mondego>        }<newline46mondego>      }<newline46mondego>      @Override public void redo() throws CannotRedoException {<newline46mondego>        try {<newline46mondego>          replaceIgnoringUndo(offset, oldValue.length(), newValue, null);<newline46mondego>        } catch(BadLocationException ex) {<newline46mondego>          throw new CannotUndoException();<newline46mondego>        }<newline46mondego>      }<newline46mondego>      @Override public boolean canUndo() {<newline46mondego>        return true;<newline46mondego>      }<newline46mondego>      @Override public boolean canRedo() {<newline46mondego>        return true;<newline46mondego>      }<newline46mondego>    }<newline46mondego>  };<newline46mondego>  public JComponent makeUI() {<newline46mondego>    tf.getDocument().addUndoableEditListener(um);<newline46mondego>    doc.addUndoableEditListener(undoManager);<newline46mondego>    field.setDocument(doc);<newline46mondego>    field.setText(<doubleQuotes46>aaaaaaaaa<doubleQuotes46>);<newline46mondego>    tf.setText(<doubleQuotes46>default<doubleQuotes46>);<newline46mondego>    JPanel p = new JPanel();<newline46mondego>    p.add(tf);<newline46mondego>    p.add(field);<newline46mondego>    p.add(new JButton(new AbstractAction(<doubleQuotes46>undo<doubleQuotes46>) {<newline46mondego>      @Override public void actionPerformed(ActionEvent e) {<newline46mondego>        try {<newline46mondego>          undoManager.undo();<newline46mondego>          um.undo();<newline46mondego>        } catch(Exception ex) {<newline46mondego>          java.awt.Toolkit.getDefaultToolkit().beep();<newline46mondego>        }<newline46mondego>      }<newline46mondego>    }));<newline46mondego>    p.add(new JButton(new AbstractAction(<doubleQuotes46>redo<doubleQuotes46>) {<newline46mondego>      @Override public void actionPerformed(ActionEvent e) {<newline46mondego>        try {<newline46mondego>          undoManager.redo();<newline46mondego>          um.redo();<newline46mondego>        } catch(Exception ex) {<newline46mondego>          java.awt.Toolkit.getDefaultToolkit().beep();<newline46mondego>        }<newline46mondego>      }<newline46mondego>    }));<newline46mondego>    p.add(new JButton(new AbstractAction(<doubleQuotes46>setText<doubleQuotes46>) {<newline46mondego>      @Override public void actionPerformed(ActionEvent e) {<newline46mondego>        String str = new Date().toString();<newline46mondego>        tf.setText(str);<newline46mondego>        field.setText(str);<newline46mondego>      }<newline46mondego>    }));<newline46mondego>    return p;<newline46mondego>  }<newline46mondego>  public static void main(String[] args) {<newline46mondego>    EventQueue.invokeLater(new Runnable() {<newline46mondego>      @Override public void run() {<newline46mondego>        createAndShowGUI();<newline46mondego>      }<newline46mondego>    });<newline46mondego>  }<newline46mondego>  public static void createAndShowGUI() {<newline46mondego>    JFrame f = new JFrame();<newline46mondego>    f.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);<newline46mondego>    f.getContentPane().add(new ReplaceUndoableEditDemo().makeUI());<newline46mondego>    f.setSize(320, 240);<newline46mondego>    f.setLocationRelativeTo(null);<newline46mondego>    f.setVisible(true);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"6452splitHere46","12858805splitHere46","FileBuffers.getTextFileBufferManager().getFileBuffer(...)"
"6453splitHere46","12858805splitHere46","IFileBuffer.isDirty()"
"6454splitHere46","12858807splitHere46","public static volatile boolean yourBoolean;<newline46mondego>"
"6455splitHere46","12858912splitHere46","ProcessBuilder"
"6456splitHere46","12858912splitHere46","InputStream"
"6457splitHere46","12858912splitHere46","parent"
"6458splitHere46","12858912splitHere46","children"
"6459splitHere46","12859102splitHere46","if (volatileBoolean) {<newline46mondego>    volatileBoolean = !volatileBoolean;<newline46mondego>}<newline46mondego>"
"6460splitHere46","12859102splitHere46","atomicBoolean.compareAndSet(true, false);<newline46mondego>"
"6461splitHere46","12859126splitHere46","Graphics2D"
"6462splitHere46","12859126splitHere46","EpsGraphics2D"
"6463splitHere46","12859126splitHere46","Graphics2D"
"6464splitHere46","12859126splitHere46","paint"
"6465splitHere46","12859126splitHere46","paint"
"6466splitHere46","12859126splitHere46","paint(g)"
"6467splitHere46","12859126splitHere46","Graphics2D"
"6468splitHere46","12859126splitHere46","EpsGraphics2D"
"6469splitHere46","12859126splitHere46","Graphics2D"
"6470splitHere46","12859126splitHere46","EpsGraphics2D"
"6471splitHere46","12859126splitHere46","Graphics2D"
"6472splitHere46","12859126splitHere46","Graphics"
"6473splitHere46","12859318splitHere46","Autowired"
"6474splitHere46","12859318splitHere46","MyType2"
"6475splitHere46","12859318splitHere46","MyType2"
"6476splitHere46","12859318splitHere46","myType2 = new MyType2Impl(mock(myType1.class))"
"6477splitHere46","12859318splitHere46","@Before<newline46mondego>public void setup() {<newline46mondego>  myType1 = mock(MyType1.class);<newline46mondego>  myType2 = new MyType2Impl(myType1);<newline46mondego>}<newline46mondego>"
"6478splitHere46","12859318splitHere46","MyType1"
"6479splitHere46","12859558splitHere46","fileName"
"6480splitHere46","12859558splitHere46","null"
"6481splitHere46","12859558splitHere46","System.out.println(<doubleQuotes46>The fileName is `<doubleQuotes46> + fileName+<doubleQuotes46>`<doubleQuotes46>);<newline46mondego>"
"6482splitHere46","12859558splitHere46","private void openWorkbook(String fileName) throws IOException {<newline46mondego>    assert fileName != null;<newline46mondego>"
"6483splitHere46","12859676splitHere46","<dependencySets><newline46mondego>    <dependencySet><newline46mondego>      <outputDirectory>/lib</outputDirectory><newline46mondego>      <useProjectArtifact>false</useProjectArtifact><newline46mondego>      <useTransitiveDependencies>true</useTransitiveDependencies><newline46mondego>      <unpack>false</unpack><newline46mondego>       <scope>runtime</scope><newline46mondego>    </dependencySet><newline46mondego>  </dependencySets><newline46mondego>"
"6484splitHere46","12859676splitHere46","<plugin><newline46mondego>        <groupId>org.apache.maven.plugins</groupId><newline46mondego>        <artifactId>maven-assembly-plugin</artifactId><newline46mondego>        <version>2.3</version><newline46mondego>        <configuration><newline46mondego>          <descriptors><newline46mondego>            <descriptor>assembly.xml</descriptor><newline46mondego>          </descriptors><newline46mondego>        </configuration><newline46mondego>        <executions><newline46mondego>          <execution><newline46mondego>            <id>make-assembly</id> <!-- this is used for inheritance merges --><newline46mondego>            <phase>package</phase> <!-- bind to the packaging phase --><newline46mondego>            <goals><newline46mondego>              <goal>single</goal><newline46mondego>            </goals><newline46mondego>          </execution><newline46mondego>        </executions><newline46mondego>      </plugin><newline46mondego>"
"6485splitHere46","12859778splitHere46","JavaConversion"
"6486splitHere46","12859778splitHere46","Splitter"
"6487splitHere46","12859778splitHere46","Splitter"
"6488splitHere46","12859778splitHere46","force"
"6489splitHere46","12859778splitHere46","Splitter"
"6490splitHere46","12859778splitHere46","JavaConversions"
"6491splitHere46","12859778splitHere46","par"
"6492splitHere46","12859778splitHere46","List"
"6493splitHere46","12859778splitHere46","get"
"6494splitHere46","12859778splitHere46","Splitter"
"6495splitHere46","12859778splitHere46","get"
"6496splitHere46","12859778splitHere46","0"
"6497splitHere46","12859778splitHere46","size - 1"
"6498splitHere46","12859800splitHere46","<bean id=<doubleQuotes46>webServiceTemplate<doubleQuotes46> class=<doubleQuotes46>org.springframework.ws.client.core.WebServiceTemplate<doubleQuotes46>><newline46mondego>    <constructor-arg ref=<doubleQuotes46>messageFactory<doubleQuotes46>/><newline46mondego>    <property name=<doubleQuotes46>messageSender<doubleQuotes46>><newline46mondego>        <bean class=<doubleQuotes46>org.springframework.ws.transport.http.CommonsHttpMessageSender<doubleQuotes46>><newline46mondego>            <property name=<doubleQuotes46>credentials<doubleQuotes46>><newline46mondego>                <bean class=<doubleQuotes46>org.apache.commons.httpclient.UsernamePasswordCredentials<doubleQuotes46>><newline46mondego>                    <constructor-arg value=<doubleQuotes46>john<doubleQuotes46>/><newline46mondego>                    <constructor-arg value=<doubleQuotes46>secret<doubleQuotes46>/><newline46mondego>                </bean><newline46mondego>            </property><newline46mondego>        </bean><newline46mondego>    </property><newline46mondego>    <property name=<doubleQuotes46>defaultUri<doubleQuotes46> value=<doubleQuotes46>http://example.com/WebService<doubleQuotes46>/><newline46mondego></bean><newline46mondego>"
"6499splitHere46","12859915splitHere46","List<String> stations = new ArrayList<String>();  <newline46mondego>            //add stations..in the list<newline46mondego><newline46mondego>    int numStations = stations.size();<newline46mondego><newline46mondego>    int maxPassengersAtStation = 100;//assgin you number<newline46mondego><newline46mondego>    for(int sCount=0; sCount<numStations; sCount++){<newline46mondego>        int passangersAtStation = (int)(Math.random() * maxPassengersAtStation);<newline46mondego>        for(int j=0; j<passangersAtStation; j++){<newline46mondego>            int passengerDestination = sCount + (int)(<newline46mondego>                       Math.random() * ((numStations - sCount) + 1));<newline46mondego>            passengers.add(new Passenger(stations.get(passengerDestination)));<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"6500splitHere46","12859940splitHere46","SimpleDateFormat TIMESTAMPFORMAT = new SimpleDateFormat(<doubleQuotes46>yyyy-MM-dd HH:mm:ss<doubleQuotes46>);<newline46mondego>TIMESTAMPFORMAT.setTimeZone(TimeZone.getTimeZone(<doubleQuotes46>GMT<doubleQuotes46>));<newline46mondego>"
"6501splitHere46","12859954splitHere46","count"
"6502splitHere46","12860018splitHere46","System.out.println(<doubleQuotes46>Hello,World<doubleQuotes46>.split(<doubleQuotes46>,<doubleQuotes46>)[1]);<newline46mondego>"
"6503splitHere46","12860018splitHere46","World<newline46mondego>"
"6504splitHere46","12860018splitHere46","Regex"
"6505splitHere46","12860018splitHere46","?"
"6506splitHere46","12860018splitHere46","?"
"6507splitHere46","12860018splitHere46","+"
"6508splitHere46","12860018splitHere46","Reluctant"
"6509splitHere46","12860018splitHere46","W"
"6510splitHere46","12860018splitHere46","greedy"
"6511splitHere46","12860018splitHere46","final Pattern pattern = Pattern.compile(<doubleQuotes46>,(.+)<doubleQuotes46>); <newline46mondego>final Matcher matcher = pattern.matcher(<doubleQuotes46>Hello,World<doubleQuotes46>); <newline46mondego><newline46mondego>if (matcher.find()) {<newline46mondego>    System.out.println(matcher.group(1));<newline46mondego>}<newline46mondego>"
"6512splitHere46","12860018splitHere46","World<newline46mondego>"
"6513splitHere46","12860108splitHere46","i"
"6514splitHere46","12860108splitHere46","doStuff(i++); <newline46mondego>"
"6515splitHere46","12860108splitHere46","int original = i;<newline46mondego>i = original + 1;<newline46mondego>doStuff(original);<newline46mondego>"
"6516splitHere46","12860108splitHere46","i"
"6517splitHere46","12860108splitHere46","doStuff(i + 1);<newline46mondego>"
"6518splitHere46","12860108splitHere46","i"
"6519splitHere46","12860339splitHere46","ProcessBuilder"
"6520splitHere46","12860339splitHere46","redirectErrorStream(true)"
"6521splitHere46","12860481splitHere46","sess.createSQLQuery(<doubleQuotes46>SELECT * FROM CATS<doubleQuotes46>)<newline46mondego> .addScalar(<doubleQuotes46>ID<doubleQuotes46>, Hibernate.LONG)<newline46mondego> .addScalar(<doubleQuotes46>NAME<doubleQuotes46>, Hibernate.STRING)<newline46mondego> .addScalar(<doubleQuotes46>BIRTHDATE<doubleQuotes46>, Hibernate.DATE)<newline46mondego>"
"6522splitHere46","12860481splitHere46","the SQL query string<newline46mondego><newline46mondego>the columns and types to return<newline46mondego>"
"6523splitHere46","12860481splitHere46","addScalar()"
"6524splitHere46","12860579splitHere46","class ravindra {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        int[] ia = new int[10];<newline46mondego>try{<newline46mondego>        for (int i = 0; i < ia.length; i++)<newline46mondego>            ia[i] = i;<newline46mondego>        int sum = 0;<newline46mondego>        for (int i = 0; i < ia.length; i++)<newline46mondego>            sum += ia[i];<newline46mondego>        System.out.println(sum);<newline46mondego>}<newline46mondego>catch(ArrayIndexOutOfBoundsException e)<newline46mondego>{<newline46mondego>//system.out.println(<doubleQuotes46>exception<doubleQuotes46>);<newline46mondego>}<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6525splitHere46","12860579splitHere46","for loop"
"6526splitHere46","12860579splitHere46","for (int i = 0; i <= ia.length; i++)<newline46mondego>"
"6527splitHere46","12860582splitHere46","myJTextPane.getDocument().remove(int offs, int len)<newline46mondego>"
"6528splitHere46","12860582splitHere46","myJTextPane.getDocument().remove(1, 2)<newline46mondego>"
"6529splitHere46","12860715splitHere46","Random r"
"6530splitHere46","12860715splitHere46","int roll"
"6531splitHere46","12860715splitHere46","import java.util.Random;<newline46mondego><newline46mondego>public class Dice {<newline46mondego><newline46mondego>    public static  int rollDice(int number, int nSides)<newline46mondego>    { <newline46mondego>        int num = 0;<newline46mondego>        int roll = 0;<newline46mondego>        Random  r = new Random(); <newline46mondego>        if(nSides >=3) <newline46mondego>        { <newline46mondego>            for(int i = 0; i < number; i++)<newline46mondego>            { <newline46mondego>                roll = r.nextInt(nSides)+1;<newline46mondego>                System.out.println(<doubleQuotes46>Roll is:  <doubleQuotes46>+roll);<newline46mondego>                num = num + roll; <newline46mondego>            } <newline46mondego>        } <newline46mondego>        else<newline46mondego>        { <newline46mondego>            System.out.println(<doubleQuotes46>Error num needs to be from 3<doubleQuotes46>); <newline46mondego>        } <newline46mondego>        return num;  <newline46mondego>    } <newline46mondego><newline46mondego>    public static void main(String[] args)<newline46mondego>    {<newline46mondego>        System.out.println(<doubleQuotes46>Total is: <doubleQuotes46>+rollDice(3, 6));<newline46mondego>    }<newline46mondego>}<newline46mondego>/*<newline46mondego>Roll is:  4<newline46mondego>Roll is:  1<newline46mondego>Roll is:  2<newline46mondego>Total is: 7<newline46mondego>*/<newline46mondego>"
"6532splitHere46","12860716splitHere46","Mockito.mock"
"6533splitHere46","12860716splitHere46","String"
"6534splitHere46","12860716splitHere46","Class<?>"
"6535splitHere46","12860819splitHere46","readObject()"
"6536splitHere46","12860819splitHere46","String[] myObjects = (String[])inObjectStream.readObject();<newline46mondego>"
"6537splitHere46","12860825splitHere46","n2"
"6538splitHere46","12860825splitHere46","n2"
"6539splitHere46","12860825splitHere46","null"
"6540splitHere46","12860825splitHere46","public static Node addPolynomials(Node n1, Node n2) {<newline46mondego>    Node x = n1;<newline46mondego>    Node y = n2;<newline46mondego><newline46mondego>    for(x = n1; x != null; x = x.next){<newline46mondego>        for(y = n2; y != null; y = y.next){<newline46mondego>            if(x.getData2() == y.getData2()){<newline46mondego>                x.addData1(y);<newline46mondego>                System.out.println(<doubleQuotes46>added <doubleQuotes46> + (x.data1 - y.data1) + <doubleQuotes46> and <doubleQuotes46> + y.data1);<newline46mondego>            }<newline46mondego><newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    return x;<newline46mondego>}<newline46mondego>"
"6541splitHere46","12860890splitHere46","isSet"
"6542splitHere46","12860890splitHere46","<jaxb:globalBindings generateIsSetMethod=<doubleQuotes46>true<doubleQuotes46>/>"
"6543splitHere46","12860890splitHere46","<jaxb:globalBindings generateIsSetMethod=<doubleQuotes46>true<doubleQuotes46>/>"
"6544splitHere46","12860890splitHere46","isSet"
"6545splitHere46","12861098splitHere46","Shell"
"6546splitHere46","12861098splitHere46","Listener"
"6547splitHere46","12861098splitHere46","Display"
"6548splitHere46","12861098splitHere46","public static void main(String[] args) {<newline46mondego>    final Display display = new Display();<newline46mondego>    final Shell shell = new Shell(display);<newline46mondego>    shell.setLayout(new FillLayout());<newline46mondego><newline46mondego>    shell.setFullScreen(true);<newline46mondego>    shell.setAlpha(0);<newline46mondego><newline46mondego>    final Listener sendSomewhere = new Listener() {<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void handleEvent(Event event) {<newline46mondego>            int x = event.x;<newline46mondego>            int y = event.y;<newline46mondego><newline46mondego>            int eventType = event.type;<newline46mondego><newline46mondego>            System.out.println(x + <doubleQuotes46> <doubleQuotes46> + y + <doubleQuotes46>: <doubleQuotes46> + eventType);<newline46mondego><newline46mondego>            // send the coordinates to your other device<newline46mondego>        }<newline46mondego>    };<newline46mondego><newline46mondego>    int[] events = new int[] {SWT.MouseDown, SWT.MouseUp, SWT.MouseDoubleClick, SWT.Selection};<newline46mondego><newline46mondego>    for(int event : events)<newline46mondego>    {<newline46mondego>        display.addFilter(event, sendSomewhere);<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>    shell.open();<newline46mondego>    while (!shell.isDisposed()) {<newline46mondego>        if (!display.readAndDispatch()) {<newline46mondego>            display.sleep();<newline46mondego>        }<newline46mondego>    }<newline46mondego>    display.dispose();<newline46mondego>}<newline46mondego>"
"6549splitHere46","12861184splitHere46","<HTML><HEAD><TITLE>403 Forbidden</TITLE></HEAD><BODY><H2>403 Forbidden</H2><newline46mondego></P></H3>You need permission for this service</BODY></HTML><newline46mondego>"
"6550splitHere46","12861184splitHere46","<code>"
"6551splitHere46","12861184splitHere46","<pre>"
"6552splitHere46","12861184splitHere46","<pre><newline46mondego>    <HTML><HEAD><TITLE>403 Forbidden</TITLE></HEAD><BODY><H2>403 Forbidden</H2><newline46mondego>    </P></H3>You need permission for this service</BODY></HTML><newline46mondego></pre><newline46mondego>"
"6553splitHere46","12861190splitHere46","MyPOIFSReaderListener"
"6554splitHere46","12861190splitHere46","SummaryInformation si = (SummaryInformation)<newline46mondego>             PropertySetFactory.create(event.getStream());<newline46mondego>    String title = si.getTitle();<newline46mondego>    String Author= si.getLastAuthor();<newline46mondego>    ......<newline46mondego>"
"6555splitHere46","12861190splitHere46","POIFSReader r = new POIFSReader();<newline46mondego>    r.registerListener(new MyPOIFSReaderListener(),<newline46mondego>                   <doubleQuotes46>\005SummaryInformation<doubleQuotes46>);<newline46mondego>    r.read(new FileInputStream(filename));<newline46mondego>"
"6556splitHere46","12861231splitHere46","div=Integer.parseInt(inData);<newline46mondego>"
"6557splitHere46","12861231splitHere46","NumberFormatException"
"6558splitHere46","12861231splitHere46","...<newline46mondego>} catch (NumberFormatException nfe) {<newline46mondego>   System.err.println(nfe);<newline46mondego>  // more error handling<newline46mondego>} catch ...<newline46mondego>"
"6559splitHere46","12861420splitHere46","String home = System.getProperty(<doubleQuotes46>user.home<doubleQuotes46>);<newline46mondego>File file = new File(home + File.pathSeparator + <doubleQuotes46>aFile.csv<doubleQuotes46>);<newline46mondego>"
"6560splitHere46","12861420splitHere46","String fileContents = org.apache.commons.io.FileUtils.readFileToString(file);<newline46mondego>"
"6561splitHere46","12861441splitHere46","private final LogFormatter logFormatter; // immutable object.<newline46mondego><newline46mondego>log.debug(logFormatter.format(x,y,z))<newline46mondego>"
"6562splitHere46","12861471splitHere46","public class Main {<newline46mondego>    public static void throwsException() {<newline46mondego>        throw new UnsupportedOperationException();<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String... args) throws NoSuchMethodException, InvocationTargetException, IllegalAccessException {<newline46mondego>        Main.class.getMethod(<doubleQuotes46>throwsException<doubleQuotes46>).invoke(null);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6563splitHere46","12861471splitHere46","Exception in thread <doubleQuotes46>main<doubleQuotes46> java.lang.reflect.InvocationTargetException<newline46mondego>     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)<newline46mondego>     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)<newline46mondego>     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)<newline46mondego>     at java.lang.reflect.Method.invoke(Method.java:601)<newline46mondego>     at Main.main(Main.java:27)<newline46mondego>     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)<newline46mondego>     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)<newline46mondego>     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)<newline46mondego>     at java.lang.reflect.Method.invoke(Method.java:601)<newline46mondego>     at com.intellij.rt.execution.application.AppMain.main(AppMain.java:120)<newline46mondego>Caused by: java.lang.UnsupportedOperationException<newline46mondego>     at Main.throwsException(Main.java:23)<newline46mondego>     ... 10 more<newline46mondego>"
"6564splitHere46","12861471splitHere46","... 10 more"
"6565splitHere46","12861482splitHere46","Activity"
"6566splitHere46","12861482splitHere46","Activity"
"6567splitHere46","12861482splitHere46","public class SomeOtherClass {<newline46mondego>    public static void someOtherMethod(int requestCode, int resultCode, Intent data){<newline46mondego>        ...<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>@Override<newline46mondego>protected void onActivityResult(int requestCode, int resultCode, Intent data) {<newline46mondego>    SomeOtherClass.someOtherMethod(requestCode,resultCode,data);<newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"6568splitHere46","12861512splitHere46","public void stopWorker() {<newline46mondego> workerThread.interrupt()<newline46mondego>}<newline46mondego>"
"6569splitHere46","12861531splitHere46","PacManBediening"
"6570splitHere46","12861531splitHere46","this.pacman = pacman;<newline46mondego>this.setFocusable(true);<newline46mondego>this.addKeyListener(this);<newline46mondego>"
"6571splitHere46","12861699splitHere46","ArrayList<Shot> shot = new ArrayList<Shot>();<newline46mondego>"
"6572splitHere46","12861709splitHere46","Apache BeanUtils"
"6573splitHere46","12861738splitHere46","WatchEvent.Kind[] eventsArray = events_kinds.toArray(new WatchEvent.Kind[0]);<newline46mondego>"
"6574splitHere46","12861738splitHere46","//@param a the array into which the elements of this list are to be stored, if it is big enough; otherwise, a new array of the same runtime type is allocated for this purpose.<newline46mondego><T> T[] toArray(T[] a);<newline46mondego>"
"6575splitHere46","12861785splitHere46","new Throwable().printStackTrace()"
"6576splitHere46","12861785splitHere46","Thread.dumpStack()"
"6577splitHere46","12861785splitHere46","RepaintManager.addDirtyRegion(JComponent, int, int, int, int);"
"6578splitHere46","12861785splitHere46","repaint()"
"6579splitHere46","12861789splitHere46","List"
"6580splitHere46","12861789splitHere46","List"
"6581splitHere46","12861789splitHere46","<List>"
"6582splitHere46","12861789splitHere46","List"
"6583splitHere46","12861789splitHere46","<? extends List>"
"6584splitHere46","12861789splitHere46","List<List<String>> myList = new ArrayList<List<String>>();<newline46mondego>"
"6585splitHere46","12861789splitHere46","// with one level of indirection its simple.<newline46mondego>ArrayList alist = new ArrayList();<newline46mondego>List list = aList; // all good<newline46mondego>list = new LinkedList(); // alist is still good.<newline46mondego>"
"6586splitHere46","12861789splitHere46","// with two levels of indirection<newline46mondego>List<ArrayList> alist = new ArrayList<ArrayList>();<newline46mondego>List<List> list = (List) alist; // gives you a warning.<newline46mondego>list.add(new LinkedList()); // adding a LinkedList into a list of ArrayList!!<newline46mondego>System.out.println(alist.get(0)); // runtime error<newline46mondego>"
"6587splitHere46","12861789splitHere46","Exception in thread <doubleQuotes46>main<doubleQuotes46> java.lang.ClassCastException: java.util.LinkedList<newline46mondego>     cannot be cast to java.util.ArrayList<newline46mondego>"
"6588splitHere46","12861811splitHere46","http://mymemory.translated.net/api/get?q=Thanks&langpair=EN%7CKO<newline46mondego>"
"6589splitHere46","12861928splitHere46","class"
"6590splitHere46","12861928splitHere46","package"
"6591splitHere46","12861928splitHere46","Access Levels<newline46mondego>Modifier    Class   Package  Subclass World<newline46mondego>public         Y        Y       Y       Y<newline46mondego>protected      Y        Y       Y       N<newline46mondego>no modifier    Y        Y       N       N<newline46mondego>private        Y        N       N       N<newline46mondego>"
"6592splitHere46","12861929splitHere46","long res = a*b;<newline46mondego>"
"6593splitHere46","12861929splitHere46","a*b"
"6594splitHere46","12861947splitHere46","GetStringUTFChars()"
"6595splitHere46","12861947splitHere46","ReleaseStringUTFChars()"
"6596splitHere46","12861947splitHere46","string"
"6597splitHere46","12861947splitHere46","utf"
"6598splitHere46","12861947splitHere46","dllName.c_str()"
"6599splitHere46","12861947splitHere46","ReleaseStringUTFChars()"
"6600splitHere46","12861947splitHere46","c_str()"
"6601splitHere46","12861947splitHere46","dllName"
"6602splitHere46","12861947splitHere46","std::string"
"6603splitHere46","12861947splitHere46","pDllName"
"6604splitHere46","12861947splitHere46","const jbyte* pDllName_string = pJniEnv->GetStringUTFChars(pDllName, NULL);<newline46mondego>std::string dllName(pDllName_string);<newline46mondego>pJniEnv->ReleaseStringUTFChars(pDllName, pDllName_string);<newline46mondego><newline46mondego>/* Use 'dllName' */<newline46mondego>"
"6605splitHere46","12861972splitHere46","protected"
"6606splitHere46","12861972splitHere46","protected"
"6607splitHere46","12862198splitHere46","org.omg.CORBA.SystemException  subclass of RuntimeException<newline46mondego>javax.transaction.SystemException subclass of Exception<newline46mondego>"
"6608splitHere46","12862198splitHere46","@ApplicationException(rollback=true)<newline46mondego>"
"6609splitHere46","12862268splitHere46","public class RaceWinners{<newline46mondego>    public static void main(String[] args) {<newline46mondego>        int[] percentages = {25,10,25,10,10,20};<newline46mondego>        System.out.print(pickWinner(percentages));<newline46mondego>    }<newline46mondego><newline46mondego>    //Returns the index of the winner(A = 0, B = 1, ...)<newline46mondego>    private static int pickWinner(int[] percentages) {<newline46mondego>        int randomNumber = (int)(Math.random() * 100);<newline46mondego>        int countdown = randomNumber;<newline46mondego>        for(int i = 0; i < percentages.length; i++) {<newline46mondego>            countdown -= percentages[i];<newline46mondego>            if(countdown < 0) {<newline46mondego>                return i;<newline46mondego>            }<newline46mondego>        }<newline46mondego>        return -1;<newline46mondego>   }<newline46mondego><newline46mondego>}<newline46mondego>"
"6610splitHere46","12862383splitHere46","adb shell dumpsys activity services"
"6611splitHere46","12862383splitHere46","WakefulIntentService"
"6612splitHere46","12862499splitHere46","null"
"6613splitHere46","12862499splitHere46","null"
"6614splitHere46","12862499splitHere46","NullPointerException"
"6615splitHere46","12862613splitHere46","textArea.addEventFilter(KeyEvent.KEY_PRESSED, new EventHandler<KeyEvent>() {<newline46mondego>        @Override<newline46mondego>        public void handle(KeyEvent event) {<newline46mondego>            if (event.getCode() == KeyCode.TAB) {<newline46mondego>                SkinBase skin = (SkinBase) textArea.getSkin();<newline46mondego>                if (skin.getBehavior() instanceof TextAreaBehavior) {<newline46mondego>                    TextAreaBehavior behavior = (TextAreaBehavior) skin.getBehavior();<newline46mondego>                    if (event.isControlDown()) {<newline46mondego>                        behavior.callAction(<doubleQuotes46>InsertTab<doubleQuotes46>);<newline46mondego>                    } else {<newline46mondego>                        behavior.callAction(<doubleQuotes46>TraverseNext<doubleQuotes46>);<newline46mondego>                    }<newline46mondego>                    event.consume();<newline46mondego>                }<newline46mondego><newline46mondego>            }<newline46mondego>        }<newline46mondego>    });<newline46mondego>"
"6616splitHere46","12862652splitHere46","<>"
"6617splitHere46","12862652splitHere46","<>"
"6618splitHere46","12862652splitHere46","List<String> a = new ArrayList<>()<newline46mondego>"
"6619splitHere46","12862652splitHere46","@SuppressWarnings(<doubleQuotes46>unchecked<doubleQuotes46>)<newline46mondego>List<String> a = new ArrayList()<newline46mondego>"
"6620splitHere46","12862703splitHere46","@Autowire"
"6621splitHere46","12862703splitHere46","@Autowire"
"6622splitHere46","12862703splitHere46","@Service"
"6623splitHere46","12862703splitHere46","@Repository"
"6624splitHere46","12862703splitHere46","service"
"6625splitHere46","12862707splitHere46","android:previewImage=<doubleQuotes46>@drawable/preview<doubleQuotes46>"
"6626splitHere46","12862731splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego><schema xmlns=<doubleQuotes46>http://www.w3.org/2001/XMLSchema<doubleQuotes46> targetNamespace=<doubleQuotes46>http://www.example.org/schema<doubleQuotes46><newline46mondego>    xmlns:tns=<doubleQuotes46>http://www.example.org/schema<doubleQuotes46> elementFormDefault=<doubleQuotes46>qualified<doubleQuotes46>><newline46mondego><newline46mondego>    <element name=<doubleQuotes46>elem<doubleQuotes46>><newline46mondego>        <complexType><newline46mondego>            <simpleContent><newline46mondego>                <extension base=<doubleQuotes46>string<doubleQuotes46>><newline46mondego>                    <attribute name=<doubleQuotes46>attr<doubleQuotes46> type=<doubleQuotes46>string<doubleQuotes46> /><newline46mondego>                </extension><newline46mondego>            </simpleContent><newline46mondego>        </complexType><newline46mondego>    </element><newline46mondego><newline46mondego></schema><newline46mondego>"
"6627splitHere46","12862731splitHere46","package forum12859885;<newline46mondego><newline46mondego>import javax.xml.bind.annotation.XmlAccessType;<newline46mondego>import javax.xml.bind.annotation.XmlAccessorType;<newline46mondego>import javax.xml.bind.annotation.XmlAttribute;<newline46mondego>import javax.xml.bind.annotation.XmlRootElement;<newline46mondego>import javax.xml.bind.annotation.XmlType;<newline46mondego>import javax.xml.bind.annotation.XmlValue;<newline46mondego><newline46mondego>@XmlAccessorType(XmlAccessType.FIELD)<newline46mondego>@XmlType(name = <doubleQuotes46><doubleQuotes46>, propOrder = {<newline46mondego>    <doubleQuotes46>value<doubleQuotes46><newline46mondego>})<newline46mondego>@XmlRootElement(name = <doubleQuotes46>elem<doubleQuotes46>)<newline46mondego>public class Elem {<newline46mondego><newline46mondego>    @XmlValue<newline46mondego>    protected String value;<newline46mondego>    @XmlAttribute(name = <doubleQuotes46>attr<doubleQuotes46>)<newline46mondego>    protected String attr;<newline46mondego><newline46mondego>    public String getValue() {<newline46mondego>        return value;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setValue(String value) {<newline46mondego>        this.value = value;<newline46mondego>    }<newline46mondego><newline46mondego>    public String getAttr() {<newline46mondego>        return attr;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setAttr(String value) {<newline46mondego>        this.attr = value;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"6628splitHere46","12862741splitHere46","order"
"6629splitHere46","12862741splitHere46","campus_order"
"6630splitHere46","12862948splitHere46","_filesCollection = _db.getCollection( _bucketName + <doubleQuotes46>.files<doubleQuotes46> );<newline46mondego>"
"6631splitHere46","12862948splitHere46","_fs = new GridFS(_db, <doubleQuotes46>MyBucketName<doubleQuotes46>);<newline46mondego>DBCollection col = _db.getCollection( <doubleQuotes46>MyBucketName<doubleQuotes46> + <doubleQuotes46>.files<doubleQuotes46> );<newline46mondego>col.setWriteConcern(WriteConcern.SAFE);<newline46mondego>"
"6632splitHere46","12863001splitHere46","ClassDefNotFoundError"
"6633splitHere46","12863001splitHere46","ClassNotFoundException"
"6634splitHere46","12863001splitHere46","UrlClassLoader"
"6635splitHere46","12863001splitHere46","A"
"6636splitHere46","12863001splitHere46","A"
"6637splitHere46","12863030splitHere46","public static double run(int i) {<newline46mondego>    if (i < 1) {<newline46mondego>        return 0;<newline46mondego>    }<newline46mondego>    return i / (i + 1.0) + run(i - 1);<newline46mondego>}<newline46mondego>"
"6638splitHere46","12863072splitHere46","import static org.mockito.Mockito.*;<newline46mondego><newline46mondego>// ...<newline46mondego><newline46mondego>verify(dependency, never()).someMethod()<newline46mondego>"
"6639splitHere46","12863152splitHere46","List list = new LinkedList();<newline46mondego>"
"6640splitHere46","12863214splitHere46","@XmlRootElement(name=<doubleQuotes46>NameValuePairs<doubleQuotes46>)<newline46mondego>public class NameValuePairs {<newline46mondego>    List<NameValuePair> nameValuePairs;<newline46mondego>}<newline46mondego>"
"6641splitHere46","12863214splitHere46","public Response getNameValuePairs() {<newline46mondego>    return Response<newline46mondego>        .entity(new NameValuePairs(...))<newline46mondego>        .build();<newline46mondego>}<newline46mondego>"
"6642splitHere46","12863377splitHere46","String [] datastring = dataList.split(Reg);<newline46mondego>"
"6643splitHere46","12863377splitHere46","private Integer[] mImages = takePhotos();<newline46mondego>"
"6644splitHere46","12863377splitHere46","i.setImageResource(mImages[position]);<newline46mondego>"
"6645splitHere46","12863511splitHere46","<%@page buffer=<doubleQuotes46>none<doubleQuotes46>%><newline46mondego><%<newline46mondego>   request.getRequestDispatcher(<doubleQuotes46>a.html<doubleQuotes46>).include(request,response);<newline46mondego>%><newline46mondego>"
"6646splitHere46","12863554splitHere46","InputStreamReader"
"6647splitHere46","12863554splitHere46","BufferedReader"
"6648splitHere46","12863554splitHere46","Socket s = new Socket(<doubleQuotes46>10.0.0.1<doubleQuotes46>,4444);<newline46mondego><newline46mondego>InputStreamReader isr = new InputStreamReader(s.getInputStream());<newline46mondego><newline46mondego>BufferedReader br = new BufferedReader(isr);<newline46mondego><newline46mondego>String str = new String();<newline46mondego><newline46mondego>while ((str = br.readLine())!=null){<newline46mondego><newline46mondego><newline46mondego>    System.out.println(str);<newline46mondego><newline46mondego> }<newline46mondego>"
"6649splitHere46","12863654splitHere46","String input = new String();         <newline46mondego>JButton mbutt = new JButton;<newline46mondego>JTextField jtxt = new JTextField();<newline46mondego><newline46mondego>mbutt.addActionListener(new ActionListener(){<newline46mondego><newline46mondego>       public void actionPerformed(ActionEvent event){    <newline46mondego>             input = jtxt.getText().toString();<newline46mondego>       }<newline46mondego> });<newline46mondego>"
"6650splitHere46","12863654splitHere46","ActionListener"
"6651splitHere46","12863654splitHere46","JFrame"
"6652splitHere46","12863654splitHere46","thats exactly what i have done here"
"6653splitHere46","12863654splitHere46","JPanel"
"6654splitHere46","12863654splitHere46","JFrame"
"6655splitHere46","12863654splitHere46","UI work on the UI thread, and Non-UI work on Non-UI thread"
"6656splitHere46","12863654splitHere46","main()"
"6657splitHere46","12863654splitHere46","Event Dispatcher Thread"
"6658splitHere46","12863654splitHere46","main()"
"6659splitHere46","12863654splitHere46","EventQueue.invokeLater()"
"6660splitHere46","12863654splitHere46","import java.awt.BorderLayout;<newline46mondego>import java.awt.EventQueue;<newline46mondego>import java.awt.event.ActionEvent;<newline46mondego>import java.awt.event.ActionListener;<newline46mondego><newline46mondego>import javax.swing.JButton;<newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JTextField;<newline46mondego><newline46mondego>public class Tes extends JFrame {<newline46mondego><newline46mondego>    String input;<newline46mondego>    JTextField jtxt; <newline46mondego>    JButton mbutt; <newline46mondego><newline46mondego><newline46mondego>    public Tes(){<newline46mondego><newline46mondego> //--ALWAYS USE A JPANEL OVER JFRAME, I DID THIS TO KEEP IT SIMPLE FOR U--//<newline46mondego><newline46mondego>        this.setSize(400,400);<newline46mondego>        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego><newline46mondego>        this.setComponent();<newline46mondego>        this.setHandler();<newline46mondego>    }<newline46mondego><newline46mondego>    public void setComponent(){<newline46mondego><newline46mondego>        jtxt =  new JTextField(<doubleQuotes46>Hello<doubleQuotes46>);<newline46mondego><newline46mondego>        mbutt = new JButton(<doubleQuotes46>Button<doubleQuotes46>); <newline46mondego><newline46mondego>        this.add(BorderLayout.SOUTH,mbutt);<newline46mondego><newline46mondego>        this.add(BorderLayout.NORTH,jtxt);<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    public void setHandler(){<newline46mondego><newline46mondego>        mbutt.addActionListener(new ActionListener() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void actionPerformed(ActionEvent arg0) {<newline46mondego><newline46mondego>                input = jtxt.getText().toString();<newline46mondego><newline46mondego>                System.out.println(<doubleQuotes46>Input Value: <doubleQuotes46>+input);<newline46mondego><newline46mondego>          **//--See your Console Output everytime u press the button--//**<newline46mondego><newline46mondego>            }<newline46mondego>        });<newline46mondego><newline46mondego>    }<newline46mondego>    public static void main(String[] args){<newline46mondego><newline46mondego><newline46mondego>         EventQueue.invokeLater(new Runnable(){<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego><newline46mondego>                Tes t = new Tes();<newline46mondego>                t.setVisible(true);<newline46mondego><newline46mondego>            }<newline46mondego><newline46mondego><newline46mondego><newline46mondego>         });<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"6661splitHere46","12863890splitHere46","ContentProvider"
"6662splitHere46","12863890splitHere46","ZipInputStream"
"6663splitHere46","12863890splitHere46","ContentProvider"
"6664splitHere46","12863890splitHere46","openFile()"
"6665splitHere46","12863890splitHere46","ParcelFileDescriptor.createPipe()"
"6666splitHere46","12863890splitHere46","createPipe()"
"6667splitHere46","12863890splitHere46","ParcelFileDescriptors"
"6668splitHere46","12863890splitHere46","OutputStream"
"6669splitHere46","12863890splitHere46","openFile()"
"6670splitHere46","12863890splitHere46","openInputStream()"
"6671splitHere46","12863890splitHere46","InputStream"
"6672splitHere46","12863890splitHere46","AssetManager"
"6673splitHere46","12863890splitHere46","ZipInputStream"
"6674splitHere46","12863890splitHere46","startActivity()"
"6675splitHere46","12864061splitHere46","double middle = ArrayAlg.getMiddle(new Double[]{ 3.14, 1729.0, 0.0 });<newline46mondego>"
"6676splitHere46","12864061splitHere46","public static <T> T getMiddle(T... a)<newline46mondego>{<newline46mondego>    return a[a.length / 2];<newline46mondego>}<newline46mondego>"
"6677splitHere46","12864061splitHere46","double middle = ArrayAlg.getMiddle(3.14, 1729.0, 0.0);<newline46mondego>"
"6678splitHere46","12864108splitHere46","NULL"
"6679splitHere46","12864108splitHere46","ON DELETE CASCADE"
"6680splitHere46","12864108splitHere46","DELETE"
"6681splitHere46","12864108splitHere46","WITH RECURSIVE x AS (<newline46mondego>   SELECT ad_tree_id, node_id<newline46mondego>   FROM   ad_treenodemm<newline46mondego>   WHERE (ad_tree_id, node_id) = (1,5)   -- enter dead node walking here<newline46mondego><newline46mondego>   UNION  ALL<newline46mondego>   SELECT a.ad_tree_id, a.node_id<newline46mondego>   FROM   x<newline46mondego>   JOIN   ad_treenodemm a ON a.parent_id = x.node_id<newline46mondego>   )<newline46mondego>DELETE FROM ad_treenodemm a<newline46mondego>USING  x<newline46mondego>WHERE (a.ad_tree_id, a.node_id) = (x.ad_tree_id, x.node_id)<newline46mondego>"
"6682splitHere46","12864108splitHere46","SELECT"
"6683splitHere46","12864108splitHere46","DELETE"
"6684splitHere46","12864116splitHere46","Collections.frequency(f, <doubleQuotes46>N<doubleQuotes46>);<newline46mondego>"
"6685splitHere46","12864116splitHere46","String n = <doubleQuotes46>N<doubleQuotes46>;      <newline46mondego>Collection f = new ArrayList();<newline46mondego>f.add(n);<newline46mondego>f.add(n);<newline46mondego>f.add(n);<newline46mondego>f.add(n);<newline46mondego>System.out.println(Collections.frequency(f, n));<newline46mondego>"
"6686splitHere46","12864246splitHere46","import java.io.File;<newline46mondego>import java.io.FileOutputStream;<newline46mondego><newline46mondego>import ar.com.hjg.pngj.FileHelper;<newline46mondego>import ar.com.hjg.pngj.ImageLine;<newline46mondego>import ar.com.hjg.pngj.PngHelperInternal;<newline46mondego>import ar.com.hjg.pngj.PngReader;<newline46mondego>import ar.com.hjg.pngj.PngWriter;<newline46mondego>import ar.com.hjg.pngj.chunks.*;<newline46mondego><newline46mondego>public class ApngSplit {<newline46mondego><newline46mondego>    private static final String PREFIX = <doubleQuotes46>apngf<doubleQuotes46>;<newline46mondego><newline46mondego>    /** reads a APNG file and tries to split it into its frames */<newline46mondego>    public static void process(File orig) throws Exception {<newline46mondego>        PngReader pngr = FileHelper.createPngReader(orig);<newline46mondego>        File dest = new File(orig.getParent(), PREFIX + <doubleQuotes46>0_<doubleQuotes46> + orig.getName());<newline46mondego>        PngWriter pngw = FileHelper.createPngWriter(dest, pngr.imgInfo, true);<newline46mondego>        System.out.println(<doubleQuotes46>writing default frame <doubleQuotes46> + pngw.getFilename());<newline46mondego>        pngr.setChunkLoadBehaviour(ChunkLoadBehaviour.LOAD_CHUNK_ALWAYS);<newline46mondego>        pngr.setMaxBytesMetadata(Integer.MAX_VALUE);<newline46mondego>        pngr.setMaxTotalBytesRead(Long.MAX_VALUE);<newline46mondego>        pngr.setSkipChunkIds(new String[] {});<newline46mondego>        int copyPolicy = ChunkCopyBehaviour.COPY_PALETTE | ChunkCopyBehaviour.COPY_ALL_SAFE;<newline46mondego>        pngw.copyChunksFirst(pngr, copyPolicy);<newline46mondego>        int cols = pngr.imgInfo.cols;<newline46mondego>        int channels = pngr.imgInfo.channels;<newline46mondego>        for (int row = 0; row < pngr.imgInfo.rows; row++) {<newline46mondego>            ImageLine l1 = pngr.readRow(row);<newline46mondego>            pngw.writeRow(l1, row);<newline46mondego>        }<newline46mondego>        pngr.end();<newline46mondego>        pngw.copyChunksLast(pngr, copyPolicy);<newline46mondego>        pngw.end();<newline46mondego>        processExtra2(orig, pngr.getChunksList());<newline46mondego>    }<newline46mondego><newline46mondego>    private static void processExtra2(File orig, ChunksList chunks) throws Exception {<newline46mondego>        int numframe = 0;<newline46mondego>        FileOutputStream os = null;<newline46mondego>        boolean afterIdat = false;<newline46mondego>        for (PngChunk chunkApng : chunks.getChunks()) {<newline46mondego>            if (chunkApng.id.equals(<doubleQuotes46>IDAT<doubleQuotes46>))<newline46mondego>                afterIdat = true;<newline46mondego>            if (chunkApng.id.equals(<doubleQuotes46>fcTL<doubleQuotes46>) && afterIdat) {<newline46mondego>                numframe++;<newline46mondego>                if (os != null)<newline46mondego>                    endPng(chunks, os);<newline46mondego>                File dest = new File(orig.getParent(), PREFIX + numframe + <doubleQuotes46>_<doubleQuotes46> + orig.getName());<newline46mondego>                System.out.println(<doubleQuotes46>writing seq <doubleQuotes46> + numframe + <doubleQuotes46> : <doubleQuotes46> + dest);<newline46mondego>                os = new FileOutputStream(dest);<newline46mondego>                beginPng(chunks, os);<newline46mondego>            }<newline46mondego>            if (chunkApng.id.equals(<doubleQuotes46>fdAT<doubleQuotes46>)) {<newline46mondego>                ChunkRaw crawf = chunkApng.createRawChunk();<newline46mondego>                int seq = PngHelperInternal.readInt4fromBytes(crawf.data, 0);<newline46mondego>                ChunkRaw crawi = new ChunkRaw(crawf.len - 4, ChunkHelper.b_IDAT, true);<newline46mondego>                System.arraycopy(crawf.data, 4, crawi.data, 0, crawi.data.length);<newline46mondego>                crawi.writeChunk(os);<newline46mondego>            }<newline46mondego>        }<newline46mondego>        if (os != null)<newline46mondego>            endPng(chunks, os);<newline46mondego>    }<newline46mondego><newline46mondego>    private static void endPng(ChunksList chunks, FileOutputStream fos) throws Exception {<newline46mondego>        chunks.getById1(PngChunkIEND.ID).createRawChunk().writeChunk(fos);<newline46mondego>        fos.close();<newline46mondego>    }<newline46mondego><newline46mondego>    private static void beginPng(ChunksList chunks, FileOutputStream fos) throws Exception {<newline46mondego>        fos.write(new byte[] { -119, 80, 78, 71, 13, 10, 26, 10 }); // signature<newline46mondego>        chunks.getById1(PngChunkIHDR.ID).createRawChunk().writeChunk(fos);<newline46mondego>        PngChunk plte = chunks.getById1(PngChunkPLTE.ID);<newline46mondego>        if (plte != null)<newline46mondego>            plte.createRawChunk().writeChunk(fos);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) throws Exception {<newline46mondego>        process(new File(<doubleQuotes46>C:/temp/029.png<doubleQuotes46>));<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"6687splitHere46","12864255splitHere46","src/main/java"
"6688splitHere46","12864255splitHere46","pom.xml"
"6689splitHere46","12864255splitHere46","src"
"6690splitHere46","12864255splitHere46","No sources to compile"
"6691splitHere46","12864255splitHere46","pom.xml"
"6692splitHere46","12864255splitHere46","build"
"6693splitHere46","12864255splitHere46","<sourceDirectory>${basedir}/src</sourceDirectory><newline46mondego>"
"6694splitHere46","12864320splitHere46","Class SomePackage.JavaTest Extends %Persistent<newline46mondego>{<newline46mondego><newline46mondego>Method JavaTestyTest() As %String [ Language = java, WebMethod ]<newline46mondego>{<newline46mondego>    string tmp = <doubleQuotes46>Hello World<doubleQuotes46>;<newline46mondego>    return tmp;<newline46mondego>}<newline46mondego>Method bleh() as %Library.String<newline46mondego>{<newline46mondego>    q <doubleQuotes46>bleh<doubleQuotes46><newline46mondego>}<newline46mondego>Projection NewProjection1 As %Projection.Java(ROOTDIR = <doubleQuotes46>C:\trans<doubleQuotes46>);<newline46mondego><newline46mondego>}<newline46mondego>"
"6695splitHere46","12864320splitHere46","public java.lang.String JavaTestyTest () {<newline46mondego>       string tmp = <doubleQuotes46>Hello World<doubleQuotes46>;<newline46mondego>       return tmp;<newline46mondego>}<newline46mondego>"
"6696splitHere46","12864320splitHere46","public java.lang.String bleh () throws com.intersys.objects.CacheException {<newline46mondego>    com.intersys.cache.Dataholder[] args = new com.intersys.cache.Dataholder[0];<newline46mondego>    com.intersys.cache.Dataholder res=mInternal.runInstanceMethod(<doubleQuotes46>bleh<doubleQuotes46>,args,com.intersys.objects.Database.RET_PRIM);<newline46mondego>    return res.getString();<newline46mondego>}<newline46mondego>"
"6697splitHere46","12864370splitHere46","myPanel"
"6698splitHere46","12864370splitHere46","private class ComboBoxListener implements ActionListener {<newline46mondego>    public void actionPerformed(ActionEvent e) {<newline46mondego>        myPanel.setBackground(Color.decode(jcbColour.getSelectedItem().toString()));<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6699splitHere46","12864370splitHere46","decode"
"6700splitHere46","12864370splitHere46","#XXXXXX"
"6701splitHere46","12864555splitHere46","volatile"
"6702splitHere46","12864555splitHere46","synchronized"
"6703splitHere46","12864555splitHere46","volatile"
"6704splitHere46","12864555splitHere46","stop()"
"6705splitHere46","12864555splitHere46","start()"
"6706splitHere46","12864723splitHere46","readInt()"
"6707splitHere46","12864723splitHere46","writeInt()"
"6708splitHere46","12864723splitHere46","for (int i = 0; i < 100; i++){<newline46mondego>  num=(int)(Math.random()*100);<newline46mondego>  numbers.writeInt(num);<newline46mondego>  System.out.print(numbers.readInt()+<doubleQuotes46> <doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"6709splitHere46","12864723splitHere46","for (int i=0; i<numbers.length();i++){<newline46mondego>    numbers.seek(i*4);<newline46mondego>    System.out.print(numbers.readInt()+<doubleQuotes46> <doubleQuotes46>);<newline46mondego><newline46mondego>}//end for<newline46mondego>"
"6710splitHere46","12864803splitHere46","someMethod(num1);"
"6711splitHere46","12864803splitHere46","main"
"6712splitHere46","12864803splitHere46","sc"
"6713splitHere46","12864803splitHere46","num1"
"6714splitHere46","12864803splitHere46","private static int num1 - 60;"
"6715splitHere46","12864803splitHere46","getValue()"
"6716splitHere46","12864803splitHere46","System.out.println(getValue(50));"
"6717splitHere46","12864895splitHere46","@org.hibernate.annotations.SourceType.DB<newline46mondego>"
"6718splitHere46","12864895splitHere46","@Version<newline46mondego>@org.hibernate.annotations.Source(SourceType.DB)<newline46mondego>@org.hibernate.annotations.Generated(GenerationTime.ALWAYS)<newline46mondego>@Column(name = <doubleQuotes46>row_version<doubleQuotes46>) //maybe unnecessary, because this annotation<newline46mondego>                              //is only needed, if the column name does not<newline46mondego>                              //match hibernate's default naming strategy<newline46mondego>                              //(or custom strategy).<newline46mondego>@Temporal(TemporalType.TIMESTAMP)<newline46mondego>private Date rowVersion;<newline46mondego>"
"6719splitHere46","12865004splitHere46","Thread.start"
"6720splitHere46","12865004splitHere46","ExecutorService"
"6721splitHere46","12865004splitHere46","Runnable"
"6722splitHere46","12865004splitHere46","Callable"
"6723splitHere46","12865004splitHere46","Runnable"
"6724splitHere46","12865004splitHere46","void"
"6725splitHere46","12865004splitHere46","Callable"
"6726splitHere46","12865004splitHere46","ExecutorService"
"6727splitHere46","12865004splitHere46","new Formica().start();<newline46mondego>"
"6728splitHere46","12865004splitHere46","Formica"
"6729splitHere46","12865118splitHere46","Component#addComponentListener( ComponentListener )"
"6730splitHere46","12865118splitHere46","componentResized"
"6731splitHere46","12865139splitHere46","void Temp()"
"6732splitHere46","12865139splitHere46","new"
"6733splitHere46","12865202splitHere46","stack"
"6734splitHere46","12865225splitHere46","//Override the createPopup method - everything else can stay the same<newline46mondego>public static CustomRenderer extends MetalComboBoxUI{<newline46mondego>    @Override<newline46mondego>    protected ComboPopup createPopup() {<newline46mondego>        // Do something different here<newline46mondego>        ComboPopup result = super.createPopup();<newline46mondego>        return result;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6735splitHere46","12865225splitHere46","box.setUI(new CustomRenderer());"
"6736splitHere46","12865422splitHere46","public class Generics <T extends Comparable<T>> <newline46mondego>    extends Parent<T> {<newline46mondego><newline46mondego>    ArrayList<T> ar;<newline46mondego><newline46mondego>    public Generics() {<newline46mondego>        ar = new ArrayList<>();<newline46mondego>    }<newline46mondego><newline46mondego>    public void add(T elt){<newline46mondego>        ar.add(elt);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6737splitHere46","12865685splitHere46","}"
"6738splitHere46","12865709splitHere46","plan.xml"
"6739splitHere46","12865709splitHere46","myEnvVariable"
"6740splitHere46","12865709splitHere46","web.xml"
"6741splitHere46","12865709splitHere46","<variable-definition><newline46mondego>  <variable><newline46mondego>      <name>myEnvVariable</name><newline46mondego>      <value>myEnvironmentDependentValue</value><newline46mondego>  </variable><newline46mondego> </variable-definition><newline46mondego>"
"6742splitHere46","12865709splitHere46","plan.xml"
"6743splitHere46","12865709splitHere46","web.xml"
"6744splitHere46","12865709splitHere46","<context-param><newline46mondego>    <param-name>myEnvVariable</param-name><newline46mondego>    <param-value>myEnvironmentDefaultValue/param-value><newline46mondego> </context-param><newline46mondego>"
"6745splitHere46","12865709splitHere46","String myEnvVariableString= getServletContext().getInitParameter(<doubleQuotes46>myEnvVariable<doubleQuotes46>);<newline46mondego>"
"6746splitHere46","12865719splitHere46","int averageNumberOfBottles = (capsOpened / wins);<newline46mondego>"
"6747splitHere46","12865768splitHere46","adb shell am start -n package-name/activity-1-name<newline46mondego>"
"6748splitHere46","12865781splitHere46","tar xvf"
"6749splitHere46","12865825splitHere46","//singleLineComment<newline46mondego><newline46mondego>/*multiple<newline46mondego>  line<newline46mondego>  comment*/<newline46mondego><newline46mondego>//TODO commentTaskTag<newline46mondego>//FIXME commentTaskTag<newline46mondego>//XXX commentTaskTag<newline46mondego><newline46mondego>/**<newline46mondego> * javadoc<newline46mondego> *<newline46mondego> */<newline46mondego><newline46mondego>/**<newline46mondego> * javadocLink<newline46mondego> * {@link}<newline46mondego> */<newline46mondego><newline46mondego>/**<newline46mondego> * javadocTag<newline46mondego> * <a href=<doubleQuotes46><doubleQuotes46> /><newline46mondego> */<newline46mondego><newline46mondego>/**<newline46mondego> * javadocKeyword<newline46mondego> * @author Jagger<newline46mondego> */<newline46mondego>"
"6750splitHere46","12865836splitHere46","# our.hack = <doubleQuotes46>/<doubleQuotes46> on windows<newline46mondego># our.hack = <doubleQuotes46><doubleQuotes46> on linux<newline46mondego>policy.url.3=file:${our.hack}${our.home}/lib/OurSecurity.policy<newline46mondego>"
"6751splitHere46","12865865splitHere46","Class<T>"
"6752splitHere46","12865865splitHere46","T"
"6753splitHere46","12865865splitHere46","Type"
"6754splitHere46","12865865splitHere46","Dictionary<Type, int>"
"6755splitHere46","12865865splitHere46","private Dictionary<Type, int> myDictionary = new Dictionary<Type, int>();<newline46mondego>public void Add(Type type, int number) {<newline46mondego>   if (!typeof(BaseClass).IsAssignableFrom(type)) throw new Exception();<newline46mondego>   myDictionary.Add(type, number);<newline46mondego>}<newline46mondego>"
"6756splitHere46","12865865splitHere46","IDictionary"
"6757splitHere46","12865865splitHere46","public class TypeWrapper<T><newline46mondego>{<newline46mondego>    public Type Type { get; private set; }<newline46mondego>    public TypeWrapper(Type t)<newline46mondego>    {<newline46mondego>        if (!typeof(T).IsAssignableFrom(t)) throw new Exception();<newline46mondego>        Type = t;<newline46mondego>    }<newline46mondego>    public static implicit operator TypeWrapper<T>(Type t) {<newline46mondego>        return new TypeWrapper<T>(t);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6758splitHere46","12865865splitHere46","Equals"
"6759splitHere46","12865865splitHere46","GetHashCode"
"6760splitHere46","12865865splitHere46","Type"
"6761splitHere46","12865865splitHere46","var d = new Dictionary<TypeWrapper<BaseClass>, int>();<newline46mondego>d.Add(typeof(BaseClass), 2);<newline46mondego>d.Add(typeof(Child), 3);<newline46mondego>"
"6762splitHere46","12865895splitHere46","get Attribute"
"6763splitHere46","12866052splitHere46","System.setProperty(<doubleQuotes46>javax.net.ssl.keyStore<doubleQuotes46>,certificatePath);<newline46mondego>System.setProperty(<doubleQuotes46>javax.net.ssl.keyStorePassword<doubleQuotes46>, certificatePassword));<newline46mondego>System.setProperty(<doubleQuotes46>javax.net.ssl.keyStoreType<doubleQuotes46>, <doubleQuotes46>JKS<doubleQuotes46>);<newline46mondego>"
"6764splitHere46","12866052splitHere46","keytool -importcert -file certificate.cer -keystore keystore.jks -alias <doubleQuotes46>Alias<doubleQuotes46><newline46mondego>"
"6765splitHere46","12866201splitHere46","enum Side {<newline46mondego>  BLACK,<newline46mondego>  RED;<newline46mondego>}<newline46mondego><newline46mondego>class Position {<newline46mondego>  int x, int y;<newline46mondego>}<newline46mondego><newline46mondego>class Piece<newline46mondego>{<newline46mondego>  Position position; // position inside the board<newline46mondego>  Side side; // which side the piece is<newline46mondego>}<newline46mondego><newline46mondego>class Board<newline46mondego>{<newline46mondego>  Piece[][] board = new Piece[8][8];<newline46mondego><newline46mondego>  boolean isMoveLegal(Piece p, Position newPosition) {<newline46mondego>    ...<newline46mondego>  }<newline46mondego><newline46mondego>  void doMove(Piece p, Position newPosition) {<newline46mondego>    if (isMoveLegal(p, newPosition) {<newline46mondego>      // game logic of movement and eating other pieces if needed<newline46mondego>    }<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"6766splitHere46","12866201splitHere46","class Position {<newline46mondego>  int x, int y;<newline46mondego>}<newline46mondego><newline46mondego>class Piece<newline46mondego>{<newline46mondego>  Side side; // which side the piece is<newline46mondego>}<newline46mondego><newline46mondego>class Board<newline46mondego>{<newline46mondego>  HashMap<Piece, Position> board;<newline46mondego><newline46mondego>  boolean isMoveLegal(Piece p, Position newPosition) {<newline46mondego>    ...<newline46mondego>  }<newline46mondego><newline46mondego>  void doMove(Piece p, Position newPosition) {<newline46mondego>    if (isMoveLegal(p, newPosition) {<newline46mondego>      // game logic of movement and eating other pieces if needed<newline46mondego>    }<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"6767splitHere46","12866226splitHere46","public static void main(String [] args){<newline46mondego><newline46mondego>       DecimalFormat f = new DecimalFormat(<doubleQuotes46>$#,##0.00;-$#,##0.00<doubleQuotes46>);<newline46mondego><newline46mondego>       //test with<newline46mondego>       long num1 = 9287;<newline46mondego>       long num2 = -9287;<newline46mondego>       long num3 = 100000000;<newline46mondego>       long num4 = 49;<newline46mondego><newline46mondego>       System.out.println(<doubleQuotes46>num1 = <doubleQuotes46>+f.format(num1/100.0));<newline46mondego>       System.out.println(<doubleQuotes46>num2 = <doubleQuotes46>+f.format(num2/100.0));<newline46mondego>       System.out.println(<doubleQuotes46>num3 = <doubleQuotes46>+f.format(num3/100.0));<newline46mondego>       System.out.println(<doubleQuotes46>num4 = <doubleQuotes46>+f.format(num4/100.0));<newline46mondego>}<newline46mondego>"
"6768splitHere46","12866283splitHere46","in.txt out.txt<newline46mondego>"
"6769splitHere46","12866387splitHere46","Pointer"
"6770splitHere46","12866387splitHere46","Structure"
"6771splitHere46","12866387splitHere46","Structure.write()"
"6772splitHere46","12866387splitHere46","Structure.read()"
"6773splitHere46","12866387splitHere46","Structure"
"6774splitHere46","12866387splitHere46","Structure[]"
"6775splitHere46","12866387splitHere46","Structure"
"6776splitHere46","12866500splitHere46","DataInputStream"
"6777splitHere46","12866500splitHere46","FileInputStream"
"6778splitHere46","12866500splitHere46","DataInputStream"
"6779splitHere46","12866534splitHere46","TEST2"
"6780splitHere46","12866534splitHere46","test2"
"6781splitHere46","12866534splitHere46","String stm = <doubleQuotes46>INSERT INTO \<doubleQuotes46>TEST2\<doubleQuotes46>(ID) VALUES(?)<doubleQuotes46>;<newline46mondego>"
"6782splitHere46","12866534splitHere46","CREATE TABLE test2<newline46mondego>(<newline46mondego>  ...<newline46mondego>)<newline46mondego>"
"6783splitHere46","12866534splitHere46","CREATE TABLE <doubleQuotes46>test2<doubleQuotes46><newline46mondego>(<newline46mondego>  ...<newline46mondego>)<newline46mondego>"
"6784splitHere46","12866534splitHere46","alter table <doubleQuotes46>TEST2<doubleQuotes46> rename to test2;<newline46mondego>"
"6785splitHere46","12866570splitHere46","// parent_count is an integer array of the same size as nod[]<newline46mondego><newline46mondego>for i = 1..n<newline46mondego>    for each arc in arc[i] (arc going from i to j)<newline46mondego>        increment parent_count[j]<newline46mondego>    end<newline46mondego>end<newline46mondego><newline46mondego>for k = 1..n<newline46mondego>    if parent_count[k] == 0<newline46mondego>        return k<newline46mondego>end<newline46mondego>"
"6786splitHere46","12866598splitHere46","0x7fffffff"
"6787splitHere46","12866598splitHere46","2^31 = 0x80000000 is negative so Positive is 2^31-1<newline46mondego>"
"6788splitHere46","12866598splitHere46","10000000000000000000000000000000 -->2147483648--> 2^31<newline46mondego>01111111111111111111111111111111  -->2147483647-->2^31 -1<newline46mondego>^ Signed bit<newline46mondego>"
"6789splitHere46","12866656splitHere46","number"
"6790splitHere46","12866656splitHere46","prev"
"6791splitHere46","12866656splitHere46","for"
"6792splitHere46","12866656splitHere46","n"
"6793splitHere46","12866656splitHere46","n"
"6794splitHere46","12866656splitHere46","for"
"6795splitHere46","12866656splitHere46","n=1"
"6796splitHere46","12866656splitHere46","i<10"
"6797splitHere46","12866656splitHere46","i<=9"
"6798splitHere46","12866733splitHere46","strcpy"
"6799splitHere46","12866733splitHere46","%module example<newline46mondego><newline46mondego>%typemap(memberin) char *buffer {<newline46mondego>  // Keep whatever other bits of the mechanics you care about <newline46mondego>  if ($1) free($1);<newline46mondego>  if ($input) {<newline46mondego>    $1 = malloc(strlen($input)+1);<newline46mondego>    customized_strcpy($1, $input);<newline46mondego>  } else {<newline46mondego>    $1 = 0;<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>%inline %{<newline46mondego>typedef struct Test {<newline46mondego>  char *buffer;<newline46mondego>} Test;<newline46mondego>%}<newline46mondego>"
"6800splitHere46","12866740splitHere46","final ScheduledExecutorService s = Executors.newSingleThreadScheduledExecutor();<newline46mondego>s.scheduleAtFixedRate(task, secondsToFirstOccurence, 60*60, TimeUnit.SECONDS);<newline46mondego>"
"6801splitHere46","12866740splitHere46","secondsToFirstOccurence"
"6802splitHere46","12866740splitHere46","Calendar"
"6803splitHere46","12866888splitHere46","add()"
"6804splitHere46","12866888splitHere46","-30"
"6805splitHere46","12866888splitHere46","calReturn.add(Calendar.DATE, -30);<newline46mondego>"
"6806splitHere46","12866930splitHere46","id"
"6807splitHere46","12866930splitHere46","Long"
"6808splitHere46","12866930splitHere46","BIGINT"
"6809splitHere46","12866957splitHere46","ByteArrayOutputStream -> byte[] -> ByteArrayInputStream<newline46mondego>"
"6810splitHere46","12866957splitHere46","PipedInputStream + PipedOutputStream<newline46mondego>"
"6811splitHere46","12866971splitHere46","public int compareTo(Double anotherDouble)<newline46mondego>"
"6812splitHere46","12867035splitHere46","%module test<newline46mondego><newline46mondego>%{<newline46mondego>#include <doubleQuotes46>header.h<doubleQuotes46><newline46mondego>%}<newline46mondego><newline46mondego>%inline %{<newline46mondego>  %immutable;<newline46mondego>  struct FieldFetch {<newline46mondego>    int status;<newline46mondego>    int type;<newline46mondego>    char *value;<newline46mondego>  };<newline46mondego>  %mutable;<newline46mondego><newline46mondego>  struct FieldFetch gaiaTextReaderFetchField(gaiaTextReaderPtr reader, int field_num) {<newline46mondego>    struct FieldFetch result;<newline46mondego>    result.status = gaiaTextReaderFetchField(reader, field_num, &result.type, &result.value);<newline46mondego>    return result;<newline46mondego>  }<newline46mondego>%}<newline46mondego><newline46mondego>%ignore gaiaTextReaderFetchField;<newline46mondego>%include <doubleQuotes46>header.h<doubleQuotes46><newline46mondego>"
"6813splitHere46","12867035splitHere46","gaiaTextReaderFetchField"
"6814splitHere46","12867035splitHere46","%javaexception"
"6815splitHere46","12867139splitHere46","Character.isSurrogate(char c)"
"6816splitHere46","12867139splitHere46","x == false"
"6817splitHere46","12867139splitHere46","!x"
"6818splitHere46","12867139splitHere46","StringBuilder"
"6819splitHere46","12867139splitHere46","public static String removeSurrogates(String query) {<newline46mondego>    StringBuilder sb = new StringBuilder();<newline46mondego>    for (int i = 0; i < query.length(); i++) {<newline46mondego>        char c = query.charAt(i);<newline46mondego>        // !isSurrogate(c) in Java 7<newline46mondego>        if (!(Character.isHighSurrogate(c) || Character.isLowSurrogate(c))) {<newline46mondego>            sb.append(firstChar);<newline46mondego>        }<newline46mondego>    }<newline46mondego>    return sb.toString();<newline46mondego>}<newline46mondego>"
"6820splitHere46","12867139splitHere46","if"
"6821splitHere46","12867139splitHere46","if (!(Character.isHighSurrogate(c) || Character.isLowSurrogate(c))) {<newline46mondego>    sb.append(firstChar);<newline46mondego>}<newline46mondego>"
"6822splitHere46","12867139splitHere46","static boolean isSurrogate(char c) {<newline46mondego>    return Character.isHighSurrogate(c) || Character.isLowSurrogate(c);<newline46mondego>}<newline46mondego><newline46mondego>static boolean isNotSurrogate(char c) {<newline46mondego>    return !isSurrogate(c);<newline46mondego>}<newline46mondego><newline46mondego>...<newline46mondego><newline46mondego>if (isNotSurrogate(c)) {<newline46mondego>    sb.append(firstChar);<newline46mondego>}<newline46mondego>"
"6823splitHere46","12867257splitHere46","rs2.next()"
"6824splitHere46","12867257splitHere46","erg.setId(rs2.getInt(1));"
"6825splitHere46","12867335splitHere46","final List<String> classFiles = new ArrayList<>();<newline46mondego>StandardJavaFileManager inner = compiler.getStandardFileManager(null, null, null);<newline46mondego>JavaFileManager fileManager = new ForwardingJavaFileManager(inner) {<newline46mondego>    @Override<newline46mondego>    public JavaFileObject getJavaFileForOutput(Location location, String className,<newline46mondego>                JavaFileObject.Kind kind, FileObject sibling) throws IOException {<newline46mondego>        JavaFileObject o = super.getJavaFileForOutput(location, className, kind, sibling);<newline46mondego>        classFiles.add(o.getName());<newline46mondego>        return o;<newline46mondego>    }<newline46mondego>};<newline46mondego>"
"6826splitHere46","12867567splitHere46","Logs/catalina.out<newline46mondego>"
"6827splitHere46","12867608splitHere46","//this guy right here <newline46mondego>for ( int i = 0 ; i < bigArray.length; i++)<newline46mondego>    {   if (bigArray[i] == min ) <newline46mondego>            {<newline46mondego>                System.out.println(<doubleQuotes46>bigArray[<doubleQuotes46>+ i + <doubleQuotes46>]<doubleQuotes46>);<newline46mondego><newline46mondego>            }<newline46mondego>    }<newline46mondego>"
"6828splitHere46","12867608splitHere46","indexOfMin"
"6829splitHere46","12867608splitHere46","`//this guy right here <newline46mondego>for ( int i = 0 ; i < bigArray.length; i++)<newline46mondego>    {   if (bigArray[i] == indexOfMin) <newline46mondego>            {<newline46mondego>                System.out.println(<doubleQuotes46>bigArray[<doubleQuotes46>+ i + <doubleQuotes46>]<doubleQuotes46>);<newline46mondego><newline46mondego>            }<newline46mondego>    }<newline46mondego>"
"6830splitHere46","12867748splitHere46","for(int i =0; i<=length; i++ )<newline46mondego>"
"6831splitHere46","12867761splitHere46","int[][]"
"6832splitHere46","12867761splitHere46","earth"
"6833splitHere46","12867761splitHere46","plusPeople(earth, 27);<newline46mondego>"
"6834splitHere46","12867761splitHere46","void plusPeople(...)"
"6835splitHere46","12867761splitHere46","int n = plusPeople(earth, newPerson);"
"6836splitHere46","12867767splitHere46","String openSSLCommand = openssl smime -binary <newline46mondego>-sign -certfile WWDR.pem -signer passcertificate.pem<newline46mondego>-inkey passkey.pem -in manifest.json -out signature -outform DER<newline46mondego>-passin pass:12345<newline46mondego><newline46mondego>Process process = Runtime.getRuntime().exec(openSSLCommand);<newline46mondego>"
"6837splitHere46","12867781splitHere46","Throwable"
"6838splitHere46","12867781splitHere46","Exception"
"6839splitHere46","12867781splitHere46","null"
"6840splitHere46","12867781splitHere46","throw null"
"6841splitHere46","12867781splitHere46","NullPointerException"
"6842splitHere46","12867831splitHere46","SavingsAccount"
"6843splitHere46","12867831splitHere46","SavingsAccount.printAccountInfo()"
"6844splitHere46","12867831splitHere46","printAccountInfo()"
"6845splitHere46","12867831splitHere46","SavingsAccount"
"6846splitHere46","12867831splitHere46","x"
"6847splitHere46","12867831splitHere46","x.printAccountInfo()"
"6848splitHere46","12867831splitHere46","accrueInterest"
"6849splitHere46","12867917splitHere46","ResultTransformer"
"6850splitHere46","12867917splitHere46","criteria.setResultTransformer(Criteria.DISTINCT_ROOT_ENTITY);<newline46mondego>"
"6851splitHere46","12868010splitHere46","<%@ tag body-content=<doubleQuotes46>empty<doubleQuotes46> import=<doubleQuotes46>org.myapp.model.Question<doubleQuotes46> %> <newline46mondego>"
"6852splitHere46","12868090splitHere46","<jaxws:endpoint id=<doubleQuotes46>customerWebServiceSoap<doubleQuotes46><newline46mondego>    implementor=<doubleQuotes46>#customerWebServiceSoapEndpoint<doubleQuotes46><newline46mondego>    address=<doubleQuotes46>/customerService<doubleQuotes46>><newline46mondego>  <jaxws:inInterceptors><newline46mondego>    <ref bean=<doubleQuotes46>soapMessageInterceptor<doubleQuotes46>/><newline46mondego>  </jaxws:inInterceptors><newline46mondego></jaxws:endpoint><newline46mondego>"
"6853splitHere46","12868112splitHere46","String note;<newline46mondego><newline46mondego>onCreate(){<newline46mondego>    note = getSharedPref(NOTE);<newline46mondego>}<newline46mondego><newline46mondego>onClick(){<newline46mondego>    putSharedPref(info.getText());<newline46mondego>    views.setText(note);<newline46mondego>}<newline46mondego>"
"6854splitHere46","12868112splitHere46","onClick(){<newline46mondego>   putSharedPref(info.getText());<newline46mondego>   views.setText(info.getText());<newline46mondego>}<newline46mondego>"
"6855splitHere46","12868156splitHere46","ServletContainerSessionManager"
"6856splitHere46","12868156splitHere46","ShiroWebModule"
"6857splitHere46","12868156splitHere46","DefaultWebSecurityManager"
"6858splitHere46","12868156splitHere46","DefaultWebSessionManager"
"6859splitHere46","12868156splitHere46","bindSessionManager"
"6860splitHere46","12868156splitHere46","bindSessionManager"
"6861splitHere46","12868156splitHere46","@Override<newline46mondego>protected void bindSessionManager(AnnotatedBindingBuilder<SessionManager> bind) {<newline46mondego>    bind.to(DefaultWebSessionManager.class).asEagerSingleton();<newline46mondego>}<newline46mondego>"
"6862splitHere46","12868248splitHere46","..."
"6863splitHere46","12868248splitHere46","sudo mkdir /var/lock<newline46mondego> sudo chmod a+rw /var/lock<newline46mondego>"
"6864splitHere46","12868292splitHere46","public class RandomDemo { // arbitrary example class name<newline46mondego>    // lots of class related stuff may be here...<newline46mondego><newline46mondego>    // still inside the class scope...<newline46mondego>    // private is a good idea unless an external method needs to change it<newline46mondego>    private Random randnum = new Random(123456789L);<newline46mondego>    // the seed guarantees it will always produce the same sequence<newline46mondego>    // of pseudo-random values when the next methods get called<newline46mondego>    // for unpredicable sequences, use the following constructor instead:<newline46mondego>    // private Random randnum = new Random();<newline46mondego><newline46mondego>    // lots of code may be here...<newline46mondego><newline46mondego>    // publicly exposed instance method for getting random number<newline46mondego>    // from a sequence determined by seed 123456789L<newline46mondego>    // in the range from 0 through i-1<newline46mondego>    public int randnum(int i) {<newline46mondego>        // don't set the seed in here, or randnum will return the exact same integer<newline46mondego>        // for the same value of i on every method call<newline46mondego>        // nextInt(i) will give the next value from randnum conforming to range i<newline46mondego>        return randnum.nextInt(i);<newline46mondego>    } // end randnum<newline46mondego><newline46mondego>    // lots of more code may be here...<newline46mondego><newline46mondego>} // end class RandDemo<newline46mondego>"
"6865splitHere46","12868292splitHere46","Random()<newline46mondego>"
"6866splitHere46","12868292splitHere46","Random(long seed)<newline46mondego>"
"6867splitHere46","12868292splitHere46","setSeed(long seed)<newline46mondego>"
"6868splitHere46","12868292splitHere46","setSeed(long seed)<newline46mondego>"
"6869splitHere46","12868301splitHere46","$.getJSON('getMunicipios'),estado,function(data){<newline46mondego>    $('.result').html(''+data.estados+'');<newline46mondego>    $.each(data.estados,function(index,value){<newline46mondego>        var opcion= $('<option>').attr('value', value);<newline46mondego>        var municipio = $(<doubleQuotes46>#municipios<doubleQuotes46>);<newline46mondego>        console.log(value);<newline46mondego>        municipio.append(opcion);<newline46mondego>    });<newline46mondego>});<newline46mondego>"
"6870splitHere46","12868404splitHere46","com.company.MyApp"
"6871splitHere46","12868404splitHere46","ginjector"
"6872splitHere46","12868404splitHere46","<ui:import field=<doubleQuotes46>com.company.MyApp.ginjector<doubleQuotes46> /><newline46mondego>"
"6873splitHere46","12868404splitHere46","ginjector.getResources().style().foo()"
"6874splitHere46","12868404splitHere46","<span class=<doubleQuotes46>{ginjector.getResources.style.foo}<doubleQuotes46>><newline46mondego>"
"6875splitHere46","12868449splitHere46","if(i!=num){<newline46mondego>   String aux=newArray[i];<newline46mondego>   newArray[i]=newArray[num];<newline46mondego>   newArray[num]=aux;<newline46mondego>}<newline46mondego>"
"6876splitHere46","12868521splitHere46","ArrayList"
"6877splitHere46","12868521splitHere46","Card"
"6878splitHere46","12868521splitHere46","Deck"
"6879splitHere46","12868521splitHere46","ArrayList<Card> hand = new ArrayList<Card>();<newline46mondego><newline46mondego>hand.add(d); // d = Deck<newline46mondego>"
"6880splitHere46","12868521splitHere46","Deck.deal"
"6881splitHere46","12868521splitHere46","hand"
"6882splitHere46","12868521splitHere46","Card c = new Card();<newline46mondego>"
"6883splitHere46","12868521splitHere46","public Card(int rank, int suit)<newline46mondego>"
"6884splitHere46","12868521splitHere46","deal"
"6885splitHere46","12868521splitHere46","...<newline46mondego>return <doubleQuotes46>You have been dealt a: <doubleQuotes46> + c.toString();<newline46mondego>index++;<newline46mondego>...<newline46mondego>"
"6886splitHere46","12868521splitHere46","Card"
"6887splitHere46","12868521splitHere46","c"
"6888splitHere46","12868521splitHere46","Card c = cards.remove(index);<newline46mondego>"
"6889splitHere46","12868521splitHere46","return"
"6890splitHere46","12868521splitHere46","index++"
"6891splitHere46","12868521splitHere46","total = hand.get(index);<newline46mondego>      ^            ^<newline46mondego>   int type     Card type<newline46mondego>"
"6892splitHere46","12868521splitHere46","ArrayList"
"6893splitHere46","12868521splitHere46","cards.shuffle();<newline46mondego>"
"6894splitHere46","12868521splitHere46","shuffle();<newline46mondego>"
"6895splitHere46","12868521splitHere46","=="
"6896splitHere46","12868521splitHere46","if (input == <doubleQuotes46>yes<doubleQuotes46>)<newline46mondego>"
"6897splitHere46","12868521splitHere46","if (<doubleQuotes46>yes<doubleQuotes46>.equals(input))<newline46mondego>"
"6898splitHere46","12868639splitHere46","public class LoginPrepThread extends SwingWorker<String,String> {<newline46mondego><newline46mondego>    private final UIMain parent;<newline46mondego><newline46mondego>    public LoginPrepThread(UIMain w){<newline46mondego>        parent = w;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected String doInBackground() throws Exception {<newline46mondego>        try{<newline46mondego>            publish(<doubleQuotes46>Fetching preferences...<doubleQuotes46>);<newline46mondego>            Thread.sleep(1000);<newline46mondego>            publish(<doubleQuotes46>Updating permissions...<doubleQuotes46>);<newline46mondego>            Thread.sleep(1000);<newline46mondego>            publish(<doubleQuotes46>Scanning workbench...<doubleQuotes46>);<newline46mondego>            Thread.sleep(1000);<newline46mondego>            publish(<doubleQuotes46>Finalizing...<doubleQuotes46>);<newline46mondego>            Thread.sleep(2000);<newline46mondego>            publish(<doubleQuotes46>Finished...Please wait<doubleQuotes46>);<newline46mondego>            Thread.sleep(1000);<newline46mondego>            parent.getLayout().show(parent.getMainFrame().getContentPane(), <doubleQuotes46>view.main<doubleQuotes46>);<newline46mondego>        }catch(Exception e){<newline46mondego><newline46mondego>        }<newline46mondego>        return null;<newline46mondego>    }<newline46mondego><newline46mondego>    protected void process(List<String> item) {<newline46mondego>        parent.getLoadingLable().setText(item.get(0));<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"6899splitHere46","12868736splitHere46","f(0) = 1<newline46mondego>f(1) = 2<newline46mondego>f(2) = 5 * f(1) - 2 * f(0) = 5 * 2 - 2 * 1 = 10 - 2 = 8<newline46mondego>f(3) = 5 * f(2) - 2 * f(1) = 5 * 8 - 2 * 2 = 40 - 4 = 36<newline46mondego>f(4) = 5 * f(3) - 2 * f(2) = 5 * 36 - 2 * 8 = 180 - 16 = 164<newline46mondego>"
"6900splitHere46","12868788splitHere46","StateListDrawable drawable = new StateListDrawable();<newline46mondego>drawable.addState(new int[]{android.R.attr.state_focused}, mFocusedDrawable);<newline46mondego>drawable.addState(new int[]{android.R.attr.state_enabled, android.R.attr.state_pressed}, mEnabledPressedDrawable);<newline46mondego>drawable.addState(new int[0], mDefaultDrawable);<newline46mondego>"
"6901splitHere46","12868805splitHere46","private class FontSizeAction extends HTMLEditorKit.FontSizeAction {<newline46mondego>    private int size;<newline46mondego><newline46mondego>    public FontSizeAction(int size) {<newline46mondego>        super(<doubleQuotes46>font-size-<doubleQuotes46> + size, size);<newline46mondego>        this.size = size;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void actionPerformed(ActionEvent ae) {<newline46mondego>        JEditorPane editor = getEditor(ae);<newline46mondego>        if (size > 0) {<newline46mondego>           MutableAttributeSet attr = new SimpleAttributeSet();<newline46mondego>           attr.addAttribute(StyleConstants.FontSize, size + <doubleQuotes46>pt<doubleQuotes46>);<newline46mondego>           setCharacterAttributes(editor, attr, false);<newline46mondego>        } else UIManager.getLookAndFeel().provideErrorFeedback(editor);   <newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6902splitHere46","12869262splitHere46","public class TestCheckWord {<newline46mondego>    static String words = <doubleQuotes46>admin,administrator,babo,sir,melon<doubleQuotes46>;<newline46mondego>    public static void main (String args[]){        <newline46mondego>        System.out.println(checkWord(<doubleQuotes46>Hello melon<doubleQuotes46>));<newline46mondego>        System.out.println(checkWord(<doubleQuotes46>Hello sir<doubleQuotes46>));<newline46mondego>        System.out.println(checkWord(<doubleQuotes46>Hello you<doubleQuotes46>));<newline46mondego>    }<newline46mondego>    public static boolean checkWord(String input) {<newline46mondego>        String wordArray[] = words.split(<doubleQuotes46>,<doubleQuotes46>);<newline46mondego>        for(int i=0; i<wordArray.length; i++){<newline46mondego>            if(input.indexOf(wordArray[i])>-1)<newline46mondego>                return true;            <newline46mondego>        }<newline46mondego>        return false;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6903splitHere46","12869262splitHere46","import java.util.Arrays;<newline46mondego>import java.util.HashSet;<newline46mondego>import java.util.Set;<newline46mondego>public class TestCheckWord2 {<newline46mondego>    public static void main (String args[]){        <newline46mondego>        System.out.println(checkWord(<doubleQuotes46>babo<doubleQuotes46>));<newline46mondego>        System.out.println(checkWord(<doubleQuotes46>bobo<doubleQuotes46>));      <newline46mondego>    }<newline46mondego>    private static String[] WORDS =  {<doubleQuotes46>admin<doubleQuotes46>, <doubleQuotes46>babo<doubleQuotes46>, <doubleQuotes46>melon<doubleQuotes46>, <doubleQuotes46>sir<doubleQuotes46>, <doubleQuotes46>administrator<doubleQuotes46>};<newline46mondego>    private static Set<String> mySet = new HashSet<String>(Arrays.asList(WORDS));<newline46mondego>    public static boolean checkWord(String input) { <newline46mondego>        return mySet.contains(input);<newline46mondego>    }   <newline46mondego>}<newline46mondego>"
"6904splitHere46","12869292splitHere46","int SubjectId;<newline46mondego>"
"6905splitHere46","12869292splitHere46","private int id;<newline46mondego>"
"6906splitHere46","12869308splitHere46","import java.util.ArrayList;<newline46mondego>import java.util.List;<newline46mondego><newline46mondego>import org.junit.Test;<newline46mondego><newline46mondego>public class XmlTest {<newline46mondego><newline46mondego>    @Test<newline46mondego>    public void test() {<newline46mondego>        XMLFirstSubclass url = new XMLFirstSubclass(<doubleQuotes46>url<doubleQuotes46>);<newline46mondego>        XMLSecondSubclass xmlSecondSubclassInstance = new XMLSecondSubclass(<newline46mondego>                <doubleQuotes46>loc<doubleQuotes46>).add(<doubleQuotes46>http://goout.cz<doubleQuotes46>).appendTo(url);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>abstract class XML {<newline46mondego><newline46mondego>    private final List<String> texts = new ArrayList<String>();<newline46mondego><newline46mondego>    private final List<XML> nodes = new ArrayList<XML>();<newline46mondego><newline46mondego>    private final String nodeName;<newline46mondego><newline46mondego>    protected XML(String nodeName) {<newline46mondego>        this.nodeName = nodeName;<newline46mondego>    }<newline46mondego><newline46mondego>    @SuppressWarnings(<doubleQuotes46>unchecked<doubleQuotes46>)<newline46mondego>    public <R extends XML> R add(String text) {<newline46mondego>        texts.add(text);<newline46mondego>        return (R) this;<newline46mondego>    }<newline46mondego><newline46mondego>    @SuppressWarnings(<doubleQuotes46>unchecked<doubleQuotes46>)<newline46mondego>    public <R extends XML, T extends XML> R add(T node) {<newline46mondego>        nodes.add(node);<newline46mondego>        return (R) this;<newline46mondego>    }<newline46mondego><newline46mondego>    @SuppressWarnings(<doubleQuotes46>unchecked<doubleQuotes46>)<newline46mondego>    public <R extends XML, T extends XML> R appendTo(T node) {<newline46mondego>        node.add(this);<newline46mondego>        return (R) this;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class XMLFirstSubclass extends XML {<newline46mondego>    public XMLFirstSubclass(String nodeName) {<newline46mondego>        super(nodeName);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class XMLSecondSubclass extends XML {<newline46mondego>    public XMLSecondSubclass(String nodeName) {<newline46mondego>        super(nodeName);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6907splitHere46","12869308splitHere46","public class XMLFirstSubclass extends XML<OtherXMLSubclass> { ... }<newline46mondego>"
"6908splitHere46","12869308splitHere46","public class XMLFirstSubclass extends XML<XMLFirstSubclass> { ... }<newline46mondego>"
"6909splitHere46","12869308splitHere46","public class XMLFirstSubclass extends XML { ... }<newline46mondego>"
"6910splitHere46","12869308splitHere46","class XMLSecondSubclass extends XML<XMLFirstSubclass> {<newline46mondego>    ... <newline46mondego>}<newline46mondego>"
"6911splitHere46","12869335splitHere46","C = A.times(B);"
"6912splitHere46","12869335splitHere46","C"
"6913splitHere46","12869484splitHere46","SOAPMessage.writeTo"
"6914splitHere46","12869484splitHere46","writeTo"
"6915splitHere46","12869484splitHere46","SOAPMessage"
"6916splitHere46","12869484splitHere46","MessageFactory"
"6917splitHere46","12869484splitHere46","createMessage"
"6918splitHere46","12869484splitHere46","ObjectInputStream"
"6919splitHere46","12869484splitHere46","ByteArrayOutputStream"
"6920splitHere46","12869484splitHere46","CipherOutputStream"
"6921splitHere46","12869484splitHere46","sm.writeTo(cipherOutputStream)"
"6922splitHere46","12869484splitHere46","ByteArrayInputStream"
"6923splitHere46","12869484splitHere46","CipherInputStream"
"6924splitHere46","12869484splitHere46","CipherInputStream"
"6925splitHere46","12869484splitHere46","MessageFactory"
"6926splitHere46","12869484splitHere46","byte[]"
"6927splitHere46","12869484splitHere46","SOAPMessage"
"6928splitHere46","12869484splitHere46","MessageFactory"
"6929splitHere46","12869484splitHere46","SOAPMessage.writeTo"
"6930splitHere46","12869484splitHere46","CipherInputStream"
"6931splitHere46","12869484splitHere46","CipherOutputStream"
"6932splitHere46","12869484splitHere46","Cipher"
"6933splitHere46","12869552splitHere46","ActionListener"
"6934splitHere46","12869552splitHere46","MyButton"
"6935splitHere46","12869552splitHere46","MyButton button = (MyButton) event.getSource();<newline46mondego>int x = button.getXPos();<newline46mondego>int y = button.getYPos();<newline46mondego>"
"6936splitHere46","12869552splitHere46","MyButton"
"6937splitHere46","12869552splitHere46","public class MyButton extends JButton {<newline46mondego><newline46mondego>    private int xPos;<newline46mondego>    private int yPos;<newline46mondego><newline46mondego>    // ...<newline46mondego><newline46mondego>    public int getXPos() {<newline46mondego>        return xPos;<newline46mondego>    }<newline46mondego><newline46mondego>    public int getYPos() {<newline46mondego>        return yPos;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6938splitHere46","12869552splitHere46","MyButton"
"6939splitHere46","12869552splitHere46","MyButton myButton = new MyButton();<newline46mondego>// ...<newline46mondego>myButton.addActionListener(new ActionListener() {<newline46mondego>    public void actionPerformed(ActionEvent e) {<newline46mondego>        MyButton button = (MyButton) event.getSource();<newline46mondego>        int xPos = button.getXPos();<newline46mondego>        int yPos = button.getYPos();<newline46mondego>        // Do something with x and y<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"6940splitHere46","12869774splitHere46","numbers()"
"6941splitHere46","12869774splitHere46","numbers();"
"6942splitHere46","12869774splitHere46","main"
"6943splitHere46","12869774splitHere46","public static void main(String[] args) {<newline46mondego>    {1,2,3};<newline46mondego>}<newline46mondego>"
"6944splitHere46","12869774splitHere46","public static void main(String[] args){<newline46mondego>    int[] result = numbers();<newline46mondego>    for (int i=0; i<result.length; i++) {<newline46mondego>        System.out.print(i+<doubleQuotes46> <doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6945splitHere46","12869933splitHere46","GroovyShell"
"6946splitHere46","12869956splitHere46","for (int s=0; s < 2; s++){<newline46mondego>        states[s] = sc.next();<newline46mondego>        for(int c=0; c < 3; c++) {<newline46mondego>            votes[s][c] = sc.nextInt();<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"6947splitHere46","12869956splitHere46","int TotalSum = 0;<newline46mondego>int colSum[] = new int[]{0,0,0};<newline46mondego>"
"6948splitHere46","12869956splitHere46","for(int c=0; c < 3; c++) {<newline46mondego>       colSum[c]+=votes[s][c]; // <-- new line to do the column sum<newline46mondego>       fmt = new Formatter();<newline46mondego>       fmt.format(<doubleQuotes46>%12d<doubleQuotes46>, votes[s][c]);<newline46mondego>       System.out.print(fmt);<newline46mondego>   }<newline46mondego>"
"6949splitHere46","12869956splitHere46","fmt2.format(<doubleQuotes46>%20s%12s%12s%12s%21s<doubleQuotes46>, <doubleQuotes46>Total<doubleQuotes46>, colSum[0], colSum[1], colSum[2], TotalSum);<newline46mondego>    System.out.print( fmt2 );<newline46mondego>"
"6950splitHere46","12870049splitHere46","precedence"
"6951splitHere46","12870049splitHere46","exact-match"
"6952splitHere46","12870049splitHere46","var-args"
"6953splitHere46","12870049splitHere46","boxing"
"6954splitHere46","12870049splitHere46","type-casting"
"6955splitHere46","12870049splitHere46","var-args"
"6956splitHere46","12870049splitHere46","exact-match"
"6957splitHere46","12870049splitHere46","argument"
"6958splitHere46","12870049splitHere46","good-enough"
"6959splitHere46","12870049splitHere46","exact-match"
"6960splitHere46","12870049splitHere46","null"
"6961splitHere46","12870049splitHere46","null"
"6962splitHere46","12870049splitHere46","var-args"
"6963splitHere46","12870049splitHere46","value of reference"
"6964splitHere46","12870049splitHere46","exact match"
"6965splitHere46","12870049splitHere46","typecast"
"6966splitHere46","12870049splitHere46","String"
"6967splitHere46","12870049splitHere46","var-args"
"6968splitHere46","12870049splitHere46","null, null"
"6969splitHere46","12870049splitHere46","two"
"6970splitHere46","12870049splitHere46","var-args"
"6971splitHere46","12870049splitHere46","value of reference"
"6972splitHere46","12870067splitHere46",".class"
"6973splitHere46","12870067splitHere46","boolean b;<newline46mondego>Class c = b.getClass();   // compile-time error<newline46mondego><newline46mondego>Class c = boolean.class;  // correct<newline46mondego>"
"6974splitHere46","12870091splitHere46","if"
"6975splitHere46","12870091splitHere46","if(rightChild == 1)"
"6976splitHere46","12870091splitHere46","tree.right = stack.pop();"
"6977splitHere46","12870091splitHere46","tree.right"
"6978splitHere46","12870173splitHere46","boolean equals(Object o){<newline46mondego>   if(! o instanceof Particle) return false;<newline46mondego>   if(o.getPoint().equals(this.getPoint())) return true;<newline46mondego>"
"6979splitHere46","12870173splitHere46","boolean equals(Object o){<newline46mondego>       if(! o instanceof Point) return false;<newline46mondego>       if(o.getXCoordinate.equals(this.getXCoordinate()) <newline46mondego>&& o.getYCoordinate.equals(this.getYCoordinate())) return true;<newline46mondego>"
"6980splitHere46","12870173splitHere46","getXCoordinate"
"6981splitHere46","12870173splitHere46","getYCoordinate"
"6982splitHere46","12870204splitHere46","JSONArray"
"6983splitHere46","12870204splitHere46","["
"6984splitHere46","12870204splitHere46","]"
"6985splitHere46","12870204splitHere46","[1, 2, 3, 4]<newline46mondego>"
"6986splitHere46","12870204splitHere46","[{}, {}, {}]<newline46mondego>"
"6987splitHere46","12870204splitHere46","{"
"6988splitHere46","12870204splitHere46","}"
"6989splitHere46","12870204splitHere46","{<newline46mondego>    <doubleQuotes46>name<doubleQuotes46>: <doubleQuotes46>My Object!<doubleQuotes46><newline46mondego>}<newline46mondego>"
"6990splitHere46","12870204splitHere46","{object}"
"6991splitHere46","12870204splitHere46","[array]"
"6992splitHere46","12870204splitHere46","JSONObject"
"6993splitHere46","12870204splitHere46","JSONObject"
"6994splitHere46","12870204splitHere46","["
"6995splitHere46","12870204splitHere46","]"
"6996splitHere46","12870204splitHere46","[<newline46mondego>    {<newline46mondego>        <doubleQuotes46>ipinfo<doubleQuotes46>: {<newline46mondego>            <doubleQuotes46>ip_address<doubleQuotes46>: <doubleQuotes46>4.2.2.2<doubleQuotes46>,<newline46mondego>            <doubleQuotes46>ip_type<doubleQuotes46>: <doubleQuotes46>Mapped<doubleQuotes46>,<newline46mondego>            <doubleQuotes46>Location<doubleQuotes46>: {<newline46mondego>                <doubleQuotes46>continent<doubleQuotes46>: <doubleQuotes46>north america<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>latitude<doubleQuotes46>: 33.499,<newline46mondego>                <doubleQuotes46>longitude<doubleQuotes46>: -117.662,<newline46mondego>                <doubleQuotes46>CountryData<doubleQuotes46>: {<newline46mondego>                    <doubleQuotes46>country<doubleQuotes46>: <doubleQuotes46>united states<doubleQuotes46>,<newline46mondego>                    <doubleQuotes46>country_code<doubleQuotes46>: <doubleQuotes46>us<doubleQuotes46><newline46mondego>                },<newline46mondego>                <doubleQuotes46>region<doubleQuotes46>: <doubleQuotes46>southwest<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>StateData<doubleQuotes46>: {<newline46mondego>                    <doubleQuotes46>state<doubleQuotes46>: <doubleQuotes46>california<doubleQuotes46>,<newline46mondego>                    <doubleQuotes46>state_code<doubleQuotes46>: <doubleQuotes46>ca<doubleQuotes46><newline46mondego>                },<newline46mondego>                <doubleQuotes46>CityData<doubleQuotes46>: {<newline46mondego>                    <doubleQuotes46>city<doubleQuotes46>: <doubleQuotes46>san juan capistrano<doubleQuotes46>,<newline46mondego>                    <doubleQuotes46>postal_code<doubleQuotes46>: <doubleQuotes46>92675<doubleQuotes46>,<newline46mondego>                    <doubleQuotes46>time_zone<doubleQuotes46>: -8<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>]<newline46mondego>"
"6997splitHere46","12870204splitHere46","// OLD CODE<newline46mondego>//JSONArray jsonArray = new JSONArray(builder.toString());<newline46mondego>//for (int i = 0; i < jsonArray.length(); i++) {<newline46mondego>//    JSONObject jsonObject = jsonArray.getJSONObject(i);<newline46mondego>//}<newline46mondego>// END OLD CODE<newline46mondego>JSONObject jsonObject = new JSONObject(builder.toString());<newline46mondego>"
"6998splitHere46","12870338splitHere46","FileReader fr = new FileReader(<doubleQuotes46>input.txt<doubleQuotes46>);<newline46mondego>BufferedReader br = new BufferedReader(fr);<newline46mondego>"
"6999splitHere46","12870338splitHere46","FileWriter fw = new FileWriter(<doubleQuotes46>output.txt<doubleQuotes46>);<newline46mondego>BufferedWriter bw = new BufferedWriter(fw);<newline46mondego>"
"7000splitHere46","12870338splitHere46","while loop"
"7001splitHere46","12870338splitHere46","String lineString = null;<newline46mondego>while((lineString= br.readLine())!= null){<newline46mondego>      //....<newline46mondego> }<newline46mondego>"
"7002splitHere46","12870338splitHere46","while loop"
"7003splitHere46","12870338splitHere46","Pattern pattern = <newline46mondego>Pattern.compile(<doubleQuotes46>\\[  [0-6]\\]  (0.0- 1.0 sec)  0.00 KBytes  ([0-9]*.[0-9][0-9] Kbits/sec)<doubleQuotes46>);<newline46mondego>Matcher matcher = pattern.matcher(lineString);<newline46mondego>if(matcher .matches()){<newline46mondego>   //....<newline46mondego>}<newline46mondego>"
"7004splitHere46","12870338splitHere46","bw.write(lineString);<newline46mondego>"
"7005splitHere46","12870338splitHere46","bw.close();<newline46mondego>    fw.close();<newline46mondego>    br.close();<newline46mondego>    fr.close();<newline46mondego>"
"7006splitHere46","12870338splitHere46","String regex = <doubleQuotes46>\\[  [0-6]\\]  (0.0- 1.0 sec)  0.00 KBytes  ([0-9]*.[0-9][0-9] Kbits/sec)<doubleQuotes46>;<newline46mondego>    FileReader fr = new FileReader(<doubleQuotes46>input.txt<doubleQuotes46>);<newline46mondego>    BufferedReader br = new BufferedReader(fr);<newline46mondego><newline46mondego>    FileWriter fw = new FileWriter(<doubleQuotes46>output.txt<doubleQuotes46>);<newline46mondego>    BufferedWriter bw = new BufferedWriter(fw);<newline46mondego><newline46mondego>    String lineString = null;<newline46mondego>    while((lineString= br.readLine())!= null && <newline46mondego>                  !lineString.equals(<doubleQuotes46>Starting Test 2: Iperf TCP East....<doubleQuotes46>)){<newline46mondego>        if(lineString.matches(regex)){<newline46mondego>            bw.write(lineString);<newline46mondego>        }<newline46mondego>    }<newline46mondego>    bw.close();<newline46mondego>    fw.close();<newline46mondego>    br.close();<newline46mondego>    fr.close();<newline46mondego>"
"7007splitHere46","12870338splitHere46","FileReader fr = new FileReader(<doubleQuotes46>input.txt<doubleQuotes46>);<newline46mondego> BufferedReader br = new BufferedReader(fr);<newline46mondego> FileWriter fw = new FileWriter(<doubleQuotes46>output.txt<doubleQuotes46>);<newline46mondego><newline46mondego> BufferedWriter bw = new BufferedWriter(fw);<newline46mondego><newline46mondego> Pattern pattern = <newline46mondego>    Pattern.compile(<doubleQuotes46>\\[  [0-6]\\]  (0.0- 1.0 sec)  0.00 KBytes  ([0-9]*.[0-9][0-9] Kbits/sec)<doubleQuotes46>);<newline46mondego><newline46mondego>    String lineString = null;<newline46mondego>    while((lineString= br.readLine())!= null && !lineString.equals(<doubleQuotes46>Starting Test 2: Iperf TCP East....<doubleQuotes46>)){<newline46mondego>        Matcher matcher = pattern.matcher(lineString);<newline46mondego>        if(matcher.matches()){<newline46mondego>            bw.write(lineString);<newline46mondego>        }<newline46mondego>    }<newline46mondego>    bw.close();<newline46mondego>    fw.close();<newline46mondego>    br.close();<newline46mondego>    fr.close();<newline46mondego>"
"7008splitHere46","12870450splitHere46","StrangeDialog dialog = new StrangeDialog(null);"
"7009splitHere46","12870450splitHere46","final StrangeDialog dialog = new StrangeDialog(null);<newline46mondego>SwingUtilities.invokeLater(new Runnable() { public void run() { dialog.setVisible(true); } });<newline46mondego>"
"7010splitHere46","12870469splitHere46","int sum =0;"
"7011splitHere46","12870469splitHere46","for"
"7012splitHere46","12870469splitHere46","marks[j][i]"
"7013splitHere46","12870469splitHere46","marks[i][j]"
"7014splitHere46","12870469splitHere46","sum = sum + makrs[j][i];)"
"7015splitHere46","12870469splitHere46","makrs"
"7016splitHere46","12870469splitHere46","marks"
"7017splitHere46","12870469splitHere46","int [] [] marks = {{1,2,3,4,5}, {6,7,8,9}, {10,11,12}};         <newline46mondego><newline46mondego>int sum = 0;<newline46mondego>for(int i = 0; i<marks.length; i++){<newline46mondego>    for(int j = 0; j <marks[i].length; j++){<newline46mondego>        sum = sum + marks[i][j];<newline46mondego>    }<newline46mondego>}<newline46mondego>System.out.println(sum);<newline46mondego>"
"7018splitHere46","12870543splitHere46","import javax.jws.WebService;<newline46mondego>import javax.jws.WebMethod;<newline46mondego>import javax.jws.WebParam;<newline46mondego>import javax.jws.soap.SOAPBinding;<newline46mondego>import javax.jws.soap.SOAPBinding.Style;<newline46mondego><newline46mondego>@WebService<newline46mondego>@SOAPBinding(style = Style.RPC) //this annotation stipulates the style of your ws, document or rpc based. rpc is more straightforward and simpler. And old.<newline46mondego>public interface MyService{<newline46mondego>@WebMethod String getString();<newline46mondego><newline46mondego>}<newline46mondego>"
"7019splitHere46","12870543splitHere46","@WebService(endpointInterface = <doubleQuotes46>com.yours.wsinterface<doubleQuotes46>) //this binds the SEI to the SIB<newline46mondego>public class MyServiceImpl implements MyService {<newline46mondego>public String getResult() { return <doubleQuotes46>result<doubleQuotes46>; }<newline46mondego> }<newline46mondego>"
"7020splitHere46","12870543splitHere46","Endpoint"
"7021splitHere46","12870543splitHere46","public class MyServiceEndpoint{<newline46mondego><newline46mondego>public static void main(String[] params){<newline46mondego>  Endpoint endPoint =  EndPoint.create(new MyServiceImpl());<newline46mondego>  endPoint.publish(<doubleQuotes46>http://localhost:9001/myService<doubleQuotes46>); //supply your desired url to the publish method to actually expose the service.<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"7022splitHere46","12870643splitHere46","public static Map<String,String> parse(JSONObject json , Map<String,String> out) throws JSONException{<newline46mondego>    Iterator<String> keys = json.keys();<newline46mondego>    while(keys.hasNext()){<newline46mondego>        String key = keys.next();<newline46mondego>        String val = null;<newline46mondego>        try{<newline46mondego>             JSONObject value = json.getJSONObject(key);<newline46mondego>             parse(value,out);<newline46mondego>        }catch(Exception e){<newline46mondego>            val = json.getString(key);<newline46mondego>        }<newline46mondego><newline46mondego>        if(val != null){<newline46mondego>            out.put(key,val);<newline46mondego>        }<newline46mondego>    }<newline46mondego>    return out;<newline46mondego>}<newline46mondego><newline46mondego> public static void main(String[] args) throws JSONException {<newline46mondego><newline46mondego>    String json = <doubleQuotes46>{'ipinfo': {'ip_address': '131.208.128.15','ip_type': 'Mapped','Location': {'continent': 'north america','latitude': 30.1,'longitude': -81.714,'CountryData': {'country': 'united states','country_code': 'us'},'region': 'southeast','StateData': {'state': 'florida','state_code': 'fl'},'CityData': {'city': 'fleming island','postal_code': '32003','time_zone': -5}}}}<doubleQuotes46>;<newline46mondego><newline46mondego>    JSONObject object = new JSONObject(json);<newline46mondego><newline46mondego>    JSONObject info = object.getJSONObject(<doubleQuotes46>ipinfo<doubleQuotes46>);<newline46mondego><newline46mondego>    Map<String,String> out = new HashMap<String, String>();<newline46mondego><newline46mondego>    parse(info,out);<newline46mondego><newline46mondego>    String latitude = out.get(<doubleQuotes46>latitude<doubleQuotes46>);<newline46mondego>    String longitude = out.get(<doubleQuotes46>longitude<doubleQuotes46>);<newline46mondego>    String city = out.get(<doubleQuotes46>city<doubleQuotes46>);<newline46mondego>    String state = out.get(<doubleQuotes46>state<doubleQuotes46>);<newline46mondego>    String country = out.get(<doubleQuotes46>country<doubleQuotes46>);<newline46mondego>    String postal = out.get(<doubleQuotes46>postal_code<doubleQuotes46>);<newline46mondego><newline46mondego>    System.out.println(<doubleQuotes46>Latitude : <doubleQuotes46> + latitude + <doubleQuotes46> LongiTude : <doubleQuotes46> + longitude + <doubleQuotes46> City : <doubleQuotes46>+city + <doubleQuotes46> State : <doubleQuotes46>+ state + <doubleQuotes46> Country : <doubleQuotes46>+country+<doubleQuotes46> postal <doubleQuotes46>+postal);<newline46mondego><newline46mondego>    System.out.println(<doubleQuotes46>ALL VALUE <doubleQuotes46> + out);<newline46mondego><newline46mondego>}<newline46mondego>"
"7023splitHere46","12870643splitHere46","Latitude : 30.1 LongiTude : -81.714 City : fleming island State : florida Country : united states postal 32003<newline46mondego>ALL VALUE {region=southeast, ip_type=Mapped, state_code=fl, state=florida, country_code=us, city=fleming island, country=united states, time_zone=-5, ip_address=131.208.128.15, postal_code=32003, continent=north america, longitude=-81.714, latitude=30.1}<newline46mondego>"
"7024splitHere46","12870706splitHere46","System.out.println(<doubleQuotes46>Enter month);<newline46mondego>    Scanner sc= new Scanner(System.in);<newline46mondego>    String month = sc.next();<newline46mondego>    if(<doubleQuotes46>December<doubleQuotes46>.equals(month) || <newline46mondego>        <doubleQuotes46>January<doubleQuotes46>.equals(month) ||<newline46mondego>         <doubleQuotes46>February<doubleQuotes46>.equals(month)){<newline46mondego>        System.out.println(<doubleQuotes46>Winter<doubleQuotes46>);<newline46mondego>    }else if(......){<newline46mondego>        System.out.println(<doubleQuotes46>Spring<doubleQuotes46>);<newline46mondego>    }else if(.....){<newline46mondego>        System.out.println(<doubleQuotes46>Summer<doubleQuotes46>);<newline46mondego>    }else if(.....){<newline46mondego>        System.out.println(<doubleQuotes46>Fall<doubleQuotes46>);<newline46mondego>    }else{<newline46mondego>         System.out.println(<doubleQuotes46>Invalid<doubleQuotes46>);<newline46mondego>    }<newline46mondego>"
"7025splitHere46","12870732splitHere46",".next()"
"7026splitHere46","12870732splitHere46","String"
"7027splitHere46","12870732splitHere46",".length() == 1"
"7028splitHere46","12870732splitHere46","yourString.charAt(0)"
"7029splitHere46","12870737splitHere46","matchedSubstring"
"7030splitHere46","12870737splitHere46","RE regex = new RE(<doubleQuotes46>a.+b<doubleQuotes46>);<newline46mondego>r.match(<doubleQuotes46>kkkkacccb789<doubleQuotes46>);<newline46mondego>String matchedSubstring = r.getParen(0);<newline46mondego>"
"7031splitHere46","12870766splitHere46","do"
"7032splitHere46","12870766splitHere46","int numAttempts = 0;<newline46mondego>"
"7033splitHere46","12870766splitHere46","do"
"7034splitHere46","12870766splitHere46","numAttempts++;<newline46mondego>"
"7035splitHere46","12870766splitHere46","while (inputNumber != randomNumber && numAttempts < 7);<newline46mondego>"
"7036splitHere46","12870766splitHere46","int numAttempts = 0;<newline46mondego>       do {<newline46mondego>            System.out.print(<doubleQuotes46>Please enter a number: <doubleQuotes46>);<newline46mondego>            inputNumber = scan.nextInt();<newline46mondego><newline46mondego>            if (inputNumber > randomNumber)<newline46mondego>                        System.out.println(<doubleQuotes46>That's too high!<doubleQuotes46>);<newline46mondego>            if (inputNumber < randomNumber)<newline46mondego>                        System.out.println(<doubleQuotes46>That's too low!<doubleQuotes46>);<newline46mondego>   //       else { <newline46mondego>   //       guessingLimit--;<newline46mondego>   //       System.out.println(<doubleQuotes46>Too bad! The number was <doubleQuotes46> +randomNumber+ <doubleQuotes46>!<doubleQuotes46>); //Trying to have it print this timeout after 7 incorrect attempts<newline46mondego>   //       break;<newline46mondego>   //       }<newline46mondego>          numAttempts++;<newline46mondego>        } while (inputNumber != randomNumber && numAttempts < 7);<newline46mondego><newline46mondego>        if(inputNumber == randomNumber){<newline46mondego>            System.out.println(<doubleQuotes46>That's right!<doubleQuotes46>); <newline46mondego>        }else{<newline46mondego>            System.out.println(<doubleQuotes46>Incorrect 7 attempts<doubleQuotes46>); <newline46mondego>        }<newline46mondego>"
"7037splitHere46","12870782splitHere46","parseByte"
"7038splitHere46","12870782splitHere46","buffer[i / 2] = Byte.parseByte(hexString.substring(i, 2),16);<newline46mondego>"
"7039splitHere46","12870782splitHere46","if ((hexString.length()) % 2 > 0)<newline46mondego>          throw new NumberFormatException(<doubleQuotes46>Input string was not in a correct format.<doubleQuotes46>);<newline46mondego>       int[] buffer = new int[hexString.length() / 2];<newline46mondego>          int i = 2;<newline46mondego>          while (i < hexString.length())<newline46mondego>          {<newline46mondego>              buffer[i / 2] = Integer.parseInt(hexString.substring(i, i + 2),16);<newline46mondego>              i += 2;<newline46mondego>          }<newline46mondego>"
"7040splitHere46","12870782splitHere46","byte[] buffer = new byte[hexString.length() / 2];<newline46mondego>          int i = 2;<newline46mondego>          while (i < hexString.length())<newline46mondego>          {<newline46mondego>              buffer[i / 2] = (byte)Integer.parseInt(hexString.substring(i, i + 2),16);<newline46mondego>              i += 2;<newline46mondego>          }<newline46mondego>"
"7041splitHere46","12870807splitHere46","java.util.Random#nextGaussian()"
"7042splitHere46","12870822splitHere46","CREATE<newline46mondego>[DEFINER = { user | CURRENT_USER }]<newline46mondego>TRIGGER trigger_name trigger_time trigger_event<newline46mondego>ON tbl_name FOR EACH ROW trigger_body<newline46mondego>"
"7043splitHere46","12870901splitHere46","close"
"7044splitHere46","12870901splitHere46","PrintWriter"
"7045splitHere46","12870901splitHere46","Socket"
"7046splitHere46","12870901splitHere46","Server"
"7047splitHere46","12870901splitHere46","connectionSocket"
"7048splitHere46","12870901splitHere46","ServerSocket"
"7049splitHere46","12870901splitHere46","connectionSocket"
"7050splitHere46","12870921splitHere46","JComboBox<ItemClass> jc = new JComboBox<ItemClass>();<newline46mondego>    jc.addItem(item1);<newline46mondego>    jc.addItem(item2);<newline46mondego>    jc.addItem(item3);<newline46mondego>"
"7051splitHere46","12870921splitHere46","jc.getSelectedItem().getKey"
"7052splitHere46","12870921splitHere46","toString()"
"7053splitHere46","12870921splitHere46","jc.getSelectedIndex()"
"7054splitHere46","12870921splitHere46","0 1 2"
"7055splitHere46","12870921splitHere46","<doubleQuotes46>a<doubleQuotes46> <doubleQuotes46>b<doubleQuotes46> <doubleQuotes46>c<doubleQuotes46>"
"7056splitHere46","12871024splitHere46","<service ref=<doubleQuotes46>myModelInterpreterService<doubleQuotes46> interface=<doubleQuotes46>*.IModelInterpreter<doubleQuotes46>><newline46mondego>  <service-properties><newline46mondego>    <beans:entry key=<doubleQuotes46>myId<doubleQuotes46> value=<doubleQuotes46>myModelInterpreter<doubleQuotes46>/><newline46mondego>  </service-properties><newline46mondego></service><newline46mondego>"
"7057splitHere46","12871024splitHere46","<reference id=<doubleQuotes46>myModelInterpreterService<doubleQuotes46> interface=<doubleQuotes46>com.xyz.IModelInterpreter<doubleQuotes46><newline46mondego>  filter=<doubleQuotes46>(myId=myModelInterpreter)<doubleQuotes46>/><newline46mondego>"
"7058splitHere46","12871123splitHere46","String a = <doubleQuotes46>a<doubleQuotes46>; <newline46mondego>String b = <doubleQuotes46>a<doubleQuotes46>;<newline46mondego><newline46mondego>// a==a is true<newline46mondego>// a==b is false but<newline46mondego>// a.equals(b) is true<newline46mondego>"
"7059splitHere46","12871123splitHere46","Integer.valueOf"
"7060splitHere46","12871123splitHere46","valueOf(String)"
"7061splitHere46","12871123splitHere46","=="
"7062splitHere46","12871123splitHere46",".equals"
"7063splitHere46","12871123splitHere46","=="
"7064splitHere46","12871146splitHere46","javax.el.ListELResolver"
"7065splitHere46","12871146splitHere46","java.util.List"
"7066splitHere46","12871146splitHere46","getSize()"
"7067splitHere46","12871146splitHere46","${scheme.getSize()}"
"7068splitHere46","12871146splitHere46","<jsp:getProperty/>"
"7069splitHere46","12871146splitHere46","List<T>"
"7070splitHere46","12871146splitHere46","customer.beans.CustomerScheme"
"7071splitHere46","12871146splitHere46","ArrayList<T>"
"7072splitHere46","12871146splitHere46","public class CustomerScheme{<newline46mondego>  private List<Customer> list=new ArrayList<Customer>();<newline46mondego>  public int getSize(){<newline46mondego>         return list.size();<newline46mondego>  }<newline46mondego>  ..<newline46mondego>}<newline46mondego>"
"7073splitHere46","12871248splitHere46","import com.googlecode.javacpp.*;<newline46mondego>import com.googlecode.javacpp.annotation.*;<newline46mondego><newline46mondego>@Platform(include={<doubleQuotes46><thrust/host_vector.h><doubleQuotes46>, <doubleQuotes46><thrust/device_vector.h><doubleQuotes46>, <doubleQuotes46><thrust/generate.h><doubleQuotes46>, <doubleQuotes46><thrust/sort.h><doubleQuotes46>,<newline46mondego>                   <doubleQuotes46><thrust/copy.h><doubleQuotes46>, <doubleQuotes46><thrust/reduce.h><doubleQuotes46>, <doubleQuotes46><thrust/functional.h><doubleQuotes46>, <doubleQuotes46><algorithm><doubleQuotes46>, <doubleQuotes46><cstdlib><doubleQuotes46>})<newline46mondego>@Namespace(<doubleQuotes46>thrust<doubleQuotes46>)<newline46mondego>public class ThrustTest {<newline46mondego>    static { Loader.load(); }<newline46mondego><newline46mondego>    public static class IntGenerator extends FunctionPointer {<newline46mondego>        static { Loader.load(); }<newline46mondego>        protected IntGenerator() { allocate(); }<newline46mondego>        private native void allocate();<newline46mondego>        public native int call();<newline46mondego>    }<newline46mondego><newline46mondego>    @Name(<doubleQuotes46>plus<int><doubleQuotes46>)<newline46mondego>    public static class IntPlus extends Pointer {<newline46mondego>        static { Loader.load(); }<newline46mondego>        public IntPlus() { allocate(); }<newline46mondego>        private native void allocate();<newline46mondego>        public native @Name(<doubleQuotes46>operator()<doubleQuotes46>) int call(int x, int y);<newline46mondego>    }<newline46mondego><newline46mondego>    @Name(<doubleQuotes46>host_vector<int><doubleQuotes46>)<newline46mondego>    public static class IntHostVector extends Pointer {<newline46mondego>        static { Loader.load(); }<newline46mondego>        public IntHostVector() { allocate(0); }<newline46mondego>        public IntHostVector(long n) { allocate(n); }<newline46mondego>        public IntHostVector(IntDeviceVector v) { allocate(v); }<newline46mondego>        private native void allocate(long n);<newline46mondego>        private native void allocate(@ByRef IntDeviceVector v);<newline46mondego><newline46mondego>        public IntPointer begin() { return data(); }<newline46mondego>        public IntPointer end() { return data().position((int)size()); }<newline46mondego><newline46mondego>        public native IntPointer data();<newline46mondego>        public native long size();<newline46mondego>        public native void resize(long n);<newline46mondego>    }<newline46mondego><newline46mondego>    @Name(<doubleQuotes46>device_ptr<int><doubleQuotes46>)<newline46mondego>    public static class IntDevicePointer extends Pointer {<newline46mondego>        static { Loader.load(); }<newline46mondego>        public IntDevicePointer() { allocate(null); }<newline46mondego>        public IntDevicePointer(IntPointer ptr) { allocate(ptr); }<newline46mondego>        private native void allocate(IntPointer ptr);<newline46mondego><newline46mondego>        public native IntPointer get();<newline46mondego>    }<newline46mondego><newline46mondego>    @Name(<doubleQuotes46>device_vector<int><doubleQuotes46>)<newline46mondego>    public static class IntDeviceVector extends Pointer {<newline46mondego>        static { Loader.load(); }<newline46mondego>        public IntDeviceVector() { allocate(0); }<newline46mondego>        public IntDeviceVector(long n) { allocate(n); }<newline46mondego>        public IntDeviceVector(IntHostVector v) { allocate(v); }<newline46mondego>        private native void allocate(long n);<newline46mondego>        private native void allocate(@ByRef IntHostVector v);<newline46mondego><newline46mondego>        public IntDevicePointer begin() { return data(); }<newline46mondego>        public IntDevicePointer end() { return new IntDevicePointer(data().get().position((int)size())); }<newline46mondego><newline46mondego>        public native @ByVal IntDevicePointer data();<newline46mondego>        public native long size();<newline46mondego>        public native void resize(long n);<newline46mondego>    }<newline46mondego><newline46mondego>    public static native @MemberGetter @Namespace IntGenerator rand();<newline46mondego>    public static native void copy(@ByVal IntDevicePointer first, @ByVal IntDevicePointer last, IntPointer result);<newline46mondego>    public static native void generate(IntPointer first, IntPointer last, IntGenerator gen);<newline46mondego>    public static native void sort(@ByVal IntDevicePointer first, @ByVal IntDevicePointer last);<newline46mondego>    public static native int reduce(@ByVal IntDevicePointer first, @ByVal IntDevicePointer last, int init, @ByVal IntPlus binary_op);<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        // generate 32M random numbers serially<newline46mondego>        IntHostVector h_vec = new IntHostVector(32 << 20);<newline46mondego>        generate(h_vec.begin(), h_vec.end(), rand());<newline46mondego><newline46mondego>        // transfer data to the device<newline46mondego>        IntDeviceVector d_vec = new IntDeviceVector(h_vec);<newline46mondego><newline46mondego>        // sort data on the device (846M keys per second on GeForce GTX 480)<newline46mondego>        sort(d_vec.begin(), d_vec.end());<newline46mondego><newline46mondego>        // transfer data back to host<newline46mondego>        copy(d_vec.begin(), d_vec.end(), h_vec.begin());<newline46mondego><newline46mondego>        // compute sum on device<newline46mondego>        int x = reduce(d_vec.begin(), d_vec.end(), 0, new IntPlus());<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7074splitHere46","12871248splitHere46","-properties"
"7075splitHere46","12871248splitHere46","$ javac -cp javacpp.jar ThrustTest.java<newline46mondego>$ java -jar javacpp.jar ThrustTest -properties linux-x86_64-cuda<newline46mondego>$ java  -cp javacpp.jar ThrustTest<newline46mondego>"
"7076splitHere46","12871299splitHere46","IN"
"7077splitHere46","12871299splitHere46","Resource result = ofy().load().type(Resource.class).filter(<doubleQuotes46>key IN <doubleQuotes46>, keyPath).first().get();<newline46mondego>"
"7078splitHere46","12871391splitHere46","std::swap(a, b);<newline46mondego>"
"7079splitHere46","12871596splitHere46","DynamicWebProject"
"7080splitHere46","12871596splitHere46","WSDL"
"7081splitHere46","12871596splitHere46","Java Bean Skelleton"
"7082splitHere46","12871596splitHere46","Client"
"7083splitHere46","12871596splitHere46","WSDL2Java"
"7084splitHere46","12871596splitHere46","Java Bean Skelleton"
"7085splitHere46","12871705splitHere46","<%@ include %>"
"7086splitHere46","12871705splitHere46","<jsp:include page=<doubleQuotes46>...<doubleQuotes46>/>"
"7087splitHere46","12871705splitHere46","foo"
"7088splitHere46","12871706splitHere46","String ss = <doubleQuotes46>\\<doubleQuotes46> + StringUtils.join(myList.iterator(), <doubleQuotes46>\\-\\<doubleQuotes46>) + <doubleQuotes46>\\<doubleQuotes46>;<newline46mondego>"
"7089splitHere46","12871821splitHere46","TemplateArgOne"
"7090splitHere46","12871821splitHere46","@GenerateFrom(EndlessArray.class)<newline46mondego>public class EndlessArray {<newline46mondego>    TemplateArgOne[] values;<newline46mondego>    int size = 0;<newline46mondego>    int capacity;<newline46mondego>    public EndlessArray() {<newline46mondego>        capacity = 10;<newline46mondego>        values = new TemplateArgOne[capacity];<newline46mondego>    }<newline46mondego>    public void reserve(int newcapacity ) {<newline46mondego>        if( newcapacity > capacity ) {<newline46mondego>            TemplateArgOne[] newvalues = new TemplateArgOne[newcapacity];<newline46mondego>            for( int i = 0; i < size; i++ ) {<newline46mondego>                newvalues[i] = values[i];<newline46mondego>            }<newline46mondego>            values = newvalues;<newline46mondego>            capacity = newcapacity;<newline46mondego>        }<newline46mondego>    }<newline46mondego>    public void add( TemplateArgOne value ) {<newline46mondego>        if( size >= capacity - 1 ) {<newline46mondego>            reserve( capacity * 2);<newline46mondego>        }<newline46mondego>        values[size] = value;<newline46mondego>    }<newline46mondego>    public void set( int i, TemplateArgOne value ) {<newline46mondego>        values[i] = value;<newline46mondego>    }<newline46mondego>    public TemplateArgOne get( int i ) {<newline46mondego>        return values[i];<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7091splitHere46","12871821splitHere46","public class TemplateArgOne {<newline46mondego>}<newline46mondego>"
"7092splitHere46","12871821splitHere46","TemplateArgOne"
"7093splitHere46","12871821splitHere46","@GenerateFrom(root.javalanguage.realtemplates.EndlessArray.class)<newline46mondego>@GenerateArg(from=TemplateArgOne.class,to=double.class)<newline46mondego>public class EndlessArrayDouble {<newline46mondego><newline46mondego>}<newline46mondego>"
"7094splitHere46","12871821splitHere46","EndlessArrayDouble"
"7095splitHere46","12871821splitHere46","public static void main(String[] args ) throws Exception {<newline46mondego>    new RealTemplateGenerator().go(<doubleQuotes46>/data/dev/machinelearning/MlPrototyping<doubleQuotes46>, EndlessArrayDouble.class);<newline46mondego>}<newline46mondego>"
"7096splitHere46","12871821splitHere46","package root.javalanguage.realtemplates;<newline46mondego><newline46mondego>import root.javalanguage.realtemplates.RealTemplateGenerator.*;<newline46mondego><newline46mondego>@GenerateArg(from=TemplateArgOne.class,to=double.class)<newline46mondego>@GenerateFrom(root.javalanguage.realtemplates.EndlessArray.class)<newline46mondego>public class EndlessArrayDouble {<newline46mondego>    double[] values;<newline46mondego>    int size = 0;<newline46mondego>    int capacity;<newline46mondego>    public EndlessArrayDouble() {<newline46mondego>        capacity = 10;<newline46mondego>        values = new double[capacity];<newline46mondego>    }<newline46mondego>    public void reserve(int newcapacity ) {<newline46mondego>        if( newcapacity > capacity ) {<newline46mondego>            double[] newvalues = new double[newcapacity];<newline46mondego>            for( int i = 0; i < size; i++ ) {<newline46mondego>                newvalues[i] = values[i];<newline46mondego>            }<newline46mondego>            values = newvalues;<newline46mondego>            capacity = newcapacity;<newline46mondego>        }<newline46mondego>    }<newline46mondego>    public void add( double value ) {<newline46mondego>        if( size >= capacity - 1 ) {<newline46mondego>            reserve( capacity * 2);<newline46mondego>        }<newline46mondego>        values[size] = value;<newline46mondego>    }<newline46mondego>    public void set( int i, double value ) {<newline46mondego>        values[i] = value;<newline46mondego>    }<newline46mondego>    public double get( int i ) {<newline46mondego>        return values[i];<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7097splitHere46","12871821splitHere46","//Copyright Hugh Perkins 2012, hughperkins -at- gmail<newline46mondego>//<newline46mondego>//This Source Code Form is subject to the terms of the Mozilla Public License, <newline46mondego>//v. 2.0. If a copy of the MPL was not distributed with this file, You can <newline46mondego>//obtain one at http://mozilla.org/MPL/2.0/.<newline46mondego><newline46mondego>package root.javalanguage.realtemplates;<newline46mondego><newline46mondego>import java.lang.annotation.*;<newline46mondego>import java.util.*;<newline46mondego><newline46mondego>public class RealTemplateGenerator {<newline46mondego>    @Target(ElementType.TYPE)<newline46mondego>    @Retention(RetentionPolicy.SOURCE)<newline46mondego>    public @interface GenerateFrom {<newline46mondego>        Class<?> value();<newline46mondego>    }<newline46mondego>    @Target(ElementType.TYPE)<newline46mondego>    @Retention(RetentionPolicy.SOURCE)<newline46mondego>    public @interface GenerateArg {<newline46mondego>        Class<?> from();<newline46mondego>        Class<?> to();<newline46mondego>    }<newline46mondego>public final static BufferedReader newBufferedReader(String filepath ) throws Exception {<newline46mondego>    FileInputStream fileInputStream = new FileInputStream( filepath );<newline46mondego>    InputStreamReader inputStreamReader = new InputStreamReader(fileInputStream);<newline46mondego>    BufferedReader bufferedReader = new BufferedReader(inputStreamReader);<newline46mondego>    return bufferedReader;<newline46mondego>}<newline46mondego><newline46mondego>public final static BufferedWriter newBufferedWriter( String filepath ) throws Exception {<newline46mondego>    FileOutputStream fileOutputStream = new FileOutputStream(filepath);<newline46mondego>    OutputStreamWriter outputStreamWriter = new OutputStreamWriter(fileOutputStream);<newline46mondego>    BufferedWriter bufferedWriter = new BufferedWriter(outputStreamWriter);<newline46mondego>    return bufferedWriter;<newline46mondego>}<newline46mondego><newline46mondego>public final static ArrayList<String> readFileAsLines(String filepath ) throws Exception {<newline46mondego>    ArrayList<String> lines = new ArrayList<String>(40000);<newline46mondego><newline46mondego>    BufferedReader bufferedReader = newBufferedReader(filepath);<newline46mondego><newline46mondego>    String line = bufferedReader.readLine();<newline46mondego>    int numlines = 0;<newline46mondego>    while( line != null ) {<newline46mondego>        lines.add(line.substring(0, line.length() ));<newline46mondego>        line = bufferedReader.readLine();<newline46mondego>        numlines++;<newline46mondego>    }<newline46mondego>    bufferedReader.close();<newline46mondego>    return lines;<newline46mondego>}<newline46mondego><newline46mondego>public final static void writeFileFromLines( String filepath, ArrayList<String> lines ) throws Exception {<newline46mondego>    BufferedWriter bufferedWriter = newBufferedWriter(filepath);<newline46mondego>    for( String line : lines ) {<newline46mondego>        bufferedWriter.write(line + <doubleQuotes46>\n<doubleQuotes46>);<newline46mondego>    }<newline46mondego>    bufferedWriter.close();<newline46mondego>}<newline46mondego><newline46mondego>    void go( String sourcedirectory, Class<?> targetclass ) throws Exception {<newline46mondego>        String targetclassfilepath = sourcedirectory + <doubleQuotes46>/<doubleQuotes46> + targetclass.getCanonicalName().replace(<doubleQuotes46>.<doubleQuotes46>,<doubleQuotes46>/<doubleQuotes46>) + <doubleQuotes46>.java<doubleQuotes46>;<newline46mondego>        ArrayList<String> initialLines = FileHelper.readFileAsLines(targetclassfilepath);<newline46mondego>        String fromclassname = <doubleQuotes46><doubleQuotes46>;<newline46mondego>        HashMap<String,String> argOldToNew = new HashMap<String, String>();<newline46mondego>        ArrayList<String> generatelines = new ArrayList<String>();<newline46mondego>        for( String line : initialLines ) {<newline46mondego>            if( line.startsWith(<doubleQuotes46>@GenerateFrom<doubleQuotes46>)){<newline46mondego>                fromclassname = line.split(<doubleQuotes46>\\(<doubleQuotes46>)[1].split(<doubleQuotes46>\\.class<doubleQuotes46>)[0];<newline46mondego>            }<newline46mondego>            if( line.startsWith(<doubleQuotes46>@GenerateArg<doubleQuotes46>)) {<newline46mondego>                String fromclass= line.split(<doubleQuotes46>from=<doubleQuotes46>)[1].split(<doubleQuotes46>\\.<doubleQuotes46>)[0];<newline46mondego>                String toclass = line.split(<doubleQuotes46>to=<doubleQuotes46>)[1].split(<doubleQuotes46>\\.<doubleQuotes46>)[0];<newline46mondego>                argOldToNew.put(fromclass,toclass);<newline46mondego>                generatelines.add(line);<newline46mondego>            }   <newline46mondego>        }<newline46mondego>        Class<?> targettype = this.getClass().forName(fromclassname); <newline46mondego>        String fromclassfilepath = sourcedirectory + <doubleQuotes46>/<doubleQuotes46> + targettype.getCanonicalName().replace(<doubleQuotes46>.<doubleQuotes46>,<doubleQuotes46>/<doubleQuotes46>) + <doubleQuotes46>.java<doubleQuotes46>;<newline46mondego>        ArrayList<String> templateLines = FileHelper.readFileAsLines(fromclassfilepath );<newline46mondego>        ArrayList<String> generatedLines = new ArrayList<String>();<newline46mondego>        for( int i = 0; i < templateLines.size(); i++ ){<newline46mondego>            String line = templateLines.get(i);<newline46mondego>            if( !line.startsWith(<doubleQuotes46>@GenerateFrom<doubleQuotes46>) && !line.startsWith(<doubleQuotes46>@GenerateArg<doubleQuotes46>)) {<newline46mondego>                for( String oldarg : argOldToNew.keySet() ) {<newline46mondego>                    line = line.replace(oldarg, argOldToNew.get(oldarg));<newline46mondego>                }<newline46mondego>                line = line.replace(targettype.getSimpleName(), targetclass.getSimpleName());<newline46mondego>            } else if( line.startsWith(<doubleQuotes46>@GenerateFrom<doubleQuotes46>) ) {<newline46mondego>                for( String generateline : generatelines ) {<newline46mondego>                    generatedLines.add(generateline);<newline46mondego>                }<newline46mondego>            }<newline46mondego>            generatedLines.add(line);<newline46mondego>        }<newline46mondego>        boolean isModified = false;<newline46mondego>        if( initialLines.size() != generatedLines.size() ) {<newline46mondego>            isModified = true;<newline46mondego>        } else {<newline46mondego>            for(int i = 0; i < initialLines.size(); i++ ) {<newline46mondego>                if( !initialLines.get(i).equals(generatedLines.get(i))) {<newline46mondego>                    isModified = true;<newline46mondego>                    break;<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego>        if( isModified ) {<newline46mondego>            FileHelper.writeFileFromLines(targetclassfilepath, generatedLines);<newline46mondego>            System.out.println(<doubleQuotes46>Generated <doubleQuotes46> + targetclassfilepath );<newline46mondego>        } else {<newline46mondego>            System.out.println(<doubleQuotes46>No change to <doubleQuotes46> + targetclassfilepath );         <newline46mondego>        }<newline46mondego>    }<newline46mondego>    public static void main(String[] args ) throws Exception {<newline46mondego>        new RealTemplateGenerator().go(<doubleQuotes46>/data/dev/machinelearning/MlPrototyping<doubleQuotes46>, EndlessArrayDouble.class);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7098splitHere46","12871840splitHere46","LoginModule"
"7099splitHere46","12871840splitHere46","ClientLoginModule"
"7100splitHere46","12871845splitHere46","@RequestMapping(<doubleQuotes46>/table<doubleQuotes46>)<newline46mondego>public ModelAndView renderTable() {<newline46mondego>   List<People> people = peopleService.findAllPeople();<newline46mondego>   return new ModelAndView(<doubleQuotes46>/people<doubleQuotes46>, <doubleQuotes46>people<doubleQuotes46>, people);<newline46mondego>}<newline46mondego>"
"7101splitHere46","12871845splitHere46","<body><newline46mondego>    ...<newline46mondego>    /* Content of div will be populated via ajax*/<newline46mondego>    <div id=<doubleQuotes46>myTableContainer<doubleQuotes46> /><newline46mondego>    ...<newline46mondego></body><newline46mondego>"
"7102splitHere46","12871845splitHere46","$(function() {<newline46mondego><newline46mondego>  var myTableContainer = $(<doubleQuotes46>#myTableContainer<doubleQuotes46>);<newline46mondego><newline46mondego>  var renderTable = function(container) { <newline46mondego>    $.get(<doubleQuotes46>/table<doubleQuotes46>, function(data) {<newline46mondego>      container.empty().html(data);<newline46mondego>    }<newline46mondego>  };<newline46mondego><newline46mondego>  /* This is called on document ready */<newline46mondego>  renderTable(myTableContainer);<newline46mondego><newline46mondego>  /* Use the same renderTable function when the refresh button is clicked */<newline46mondego>  $(<doubleQuotes46>#refreshButton<doubleQuotes46>).click(function() {<newline46mondego>      renderTable(myTableContainer);<newline46mondego>  });<newline46mondego>}<newline46mondego>"
"7103splitHere46","12871951splitHere46","public String writer(){<newline46mondego>    setT(stringbean.getS());<newline46mondego>    return t;<newline46mondego>}<newline46mondego>"
"7104splitHere46","12871951splitHere46","<h:outputText value=<doubleQuotes46>#{writeBean.writer()}<doubleQuotes46> /><newline46mondego>"
"7105splitHere46","12872018splitHere46","isPresent()"
"7106splitHere46","12872018splitHere46","getFromLocation(double latitude, double longitude, int maxResults)"
"7107splitHere46","12872018splitHere46","public class AndroidFromLocation extends Activity {<newline46mondego><newline46mondego>double LATITUDE = 37.42233;<newline46mondego>double LONGITUDE = -122.083;<newline46mondego><newline46mondego>   /** Called when the activity is first created. */<newline46mondego>   @Override<newline46mondego>   public void onCreate(Bundle savedInstanceState) {<newline46mondego>       super.onCreate(savedInstanceState);<newline46mondego>       setContentView(R.layout.main);<newline46mondego>       TextView myLatitude = (TextView)findViewById(R.id.mylatitude);<newline46mondego>       TextView myLongitude = (TextView)findViewById(R.id.mylongitude);<newline46mondego>       TextView myAddress = (TextView)findViewById(R.id.myaddress);<newline46mondego><newline46mondego>       myLatitude.setText(<doubleQuotes46>Latitude: <doubleQuotes46> + String.valueOf(LATITUDE));<newline46mondego>       myLongitude.setText(<doubleQuotes46>Longitude: <doubleQuotes46> + String.valueOf(LONGITUDE));<newline46mondego><newline46mondego>       Geocoder geocoder = new Geocoder(this, Locale.ENGLISH);<newline46mondego><newline46mondego>       try {<newline46mondego>  List<Address> addresses = geocoder.getFromLocation(LATITUDE, LONGITUDE, 1);<newline46mondego><newline46mondego>  if(addresses != null) {<newline46mondego>   Address returnedAddress = addresses.get(0);<newline46mondego>   StringBuilder strReturnedAddress = new StringBuilder(<doubleQuotes46>Address:\n<doubleQuotes46>);<newline46mondego>   for(int i=0; i<returnedAddress.getMaxAddressLineIndex(); i++) {<newline46mondego>    strReturnedAddress.append(returnedAddress.getAddressLine(i)).append(<doubleQuotes46>\n<doubleQuotes46>);<newline46mondego>   }<newline46mondego>   myAddress.setText(strReturnedAddress.toString());<newline46mondego>  }<newline46mondego>  else{<newline46mondego>   myAddress.setText(<doubleQuotes46>No Address returned!<doubleQuotes46>);<newline46mondego>  }<newline46mondego> } catch (IOException e) {<newline46mondego>  // TODO Auto-generated catch block<newline46mondego>  e.printStackTrace();<newline46mondego>  myAddress.setText(<doubleQuotes46>Canont get Address!<doubleQuotes46>);<newline46mondego> }<newline46mondego><newline46mondego>   }<newline46mondego>}<newline46mondego>"
"7108splitHere46","12872058splitHere46","public boolean isValid(){<newline46mondego>    return (sideA>0)&&(sideB>0)&&(sideC>0)&&(sideA+sideB>sideC)&&(sideA+sideC>sideB)&&(sideC+sideB>sideA);<newline46mondego>}<newline46mondego>"
"7109splitHere46","12872078splitHere46","public static void main(String[] args) <newline46mondego>{<newline46mondego>    String exp = <doubleQuotes46>15+20+(3.84*25)*(78/3.8)<doubleQuotes46>;<newline46mondego>    String regex = <doubleQuotes46>(\\d+\\.\\d+)|(\\d+)|([+-/*///^])|([/(/)])<doubleQuotes46>;<newline46mondego><newline46mondego>    Matcher m = Pattern.compile(regex).matcher(exp);<newline46mondego><newline46mondego>    LinkedList list = new LinkedList();<newline46mondego><newline46mondego>    while (m.find()) {<newline46mondego>        list.add(m.group());<newline46mondego>    }<newline46mondego><newline46mondego>    System.out.println(list);<newline46mondego>}<newline46mondego>"
"7110splitHere46","12872135splitHere46","public  class SimpleWrapper{<newline46mondego>    String otherText;<newline46mondego>    public SimpleWrapper(){}<newline46mondego><newline46mondego>    public setOtherText(String otherText){<newline46mondego>     this.otherText=otherText;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public String toString(){<newline46mondego>        return otherText;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7111splitHere46","12872323splitHere46","first code"
"7112splitHere46","12872323splitHere46","for-loop"
"7113splitHere46","12872323splitHere46","while"
"7114splitHere46","12872323splitHere46","sort"
"7115splitHere46","12872323splitHere46","for(int in = out+1; in < n; n++) {<newline46mondego>        if(a[in] < a[out])<newline46mondego>            smaller++;<newline46mondego>    }<newline46mondego>"
"7116splitHere46","12872323splitHere46","n++"
"7117splitHere46","12872323splitHere46","in++"
"7118splitHere46","12872323splitHere46","in++"
"7119splitHere46","12872323splitHere46","swap"
"7120splitHere46","12872323splitHere46","swap"
"7121splitHere46","12872323splitHere46","indices"
"7122splitHere46","12872323splitHere46","swap(a[out], a[smaller]);  // Called with element `a[out]`<newline46mondego><newline46mondego>private void swap (int one, int two) {<newline46mondego><newline46mondego>    int temp=a[one];    // This is equivalent to a[a[out]]<newline46mondego>    a[one]=a[two];<newline46mondego>    a[two]=temp;<newline46mondego>}<newline46mondego>"
"7123splitHere46","12872323splitHere46","swap(out, smaller);"
"7124splitHere46","12872323splitHere46","while"
"7125splitHere46","12872323splitHere46","sort"
"7126splitHere46","12872323splitHere46","smaller = 0;"
"7127splitHere46","12872705splitHere46",";"
"7128splitHere46","12872705splitHere46","CLASSPATH"
"7129splitHere46","12872705splitHere46","C:\Program Files\Apache Software Foundation\Tomcat 7.0\lib\servlet-api.jar;C:\Program Files\Java\jdk1.7.0_07\lib\mysql-connector-java-5.1.22-bin.jar;<newline46mondego>"
"7130splitHere46","12872705splitHere46","mysql"
"7131splitHere46","12872705splitHere46","-cp"
"7132splitHere46","12872705splitHere46","CLASSPATH"
"7133splitHere46","12872705splitHere46","Eclipse"
"7134splitHere46","12872705splitHere46","jar"
"7135splitHere46","12872804splitHere46","@Override<newline46mondego>    public View getView(final int position, final View convertView, final ViewGroup parent) {<newline46mondego>//     >>>    >>>                 ^^^^^^  This is your posotion = index<newline46mondego><newline46mondego>        View row = convertView;<newline46mondego>        Your_Holder holder = null;<newline46mondego>        if(row == null)<newline46mondego>        {<newline46mondego>            LayoutInflater inflater = ((Activity)context).getLayoutInflater();<newline46mondego>            row = inflater.inflate(resId, parent, false);<newline46mondego>            holder = new Your_Holder();<newline46mondego><newline46mondego>            ....<newline46mondego>            ....<newline46mondego>            holder.yourImageView = (ImageView) row.findViewById(R.id.yourImageID);<newline46mondego>            ....<newline46mondego>            ....<newline46mondego><newline46mondego>            row.setTag(holder);<newline46mondego>        }<newline46mondego>        else{<newline46mondego>            holder = (Your_Holder)row.getTag();<newline46mondego>        }<newline46mondego><newline46mondego>   //    Set here your images click event<newline46mondego>        holder.yourImageView.setOnClickListener(new OnClickListener() {<newline46mondego>            @Override<newline46mondego>            public void onClick(View v) {<newline46mondego><newline46mondego>                System.out.println(<doubleQuotes46>Position = <doubleQuotes46> + position)<newline46mondego><newline46mondego>            }<newline46mondego>        });<newline46mondego><newline46mondego>    }<newline46mondego>"
"7136splitHere46","12872821splitHere46","public static  void main(String[] args)<newline46mondego>"
"7137splitHere46","12872821splitHere46","public static void main(String[] args) {<newline46mondego><newline46mondego>        SwingUtilities.invokeLater(new Runnable() {<newline46mondego><newline46mondego>                    @Override<newline46mondego>                    public void run() {<newline46mondego>                        Buttons buttonwindow = new Buttons();<newline46mondego>                    }<newline46mondego>                }<newline46mondego>            );           <newline46mondego>    }<newline46mondego>"
"7138splitHere46","12872821splitHere46","if (e.getSource() == leftButton)  {<newline46mondego>    ((FlowLayout)buttonPanel.getLayout()).setAlignment(FlowLayout.LEFT); //1<newline46mondego>    buttonPanel.revalidate(); //2<newline46mondego>}<newline46mondego>else if (e.getSource() == colorButton) {<newline46mondego>    buttonPanel.setBackground(color.BLUE); <newline46mondego>} <newline46mondego>else {<newline46mondego>    ((FlowLayout)buttonPanel.getLayout()).setAlignment(FlowLayout.CENTER);<newline46mondego>    buttonPanel.revalidate();<newline46mondego>}<newline46mondego>"
"7139splitHere46","12873199splitHere46","def workOutNotes (numEuros):<newline46mondego>    left = numEuros<newline46mondego>    //                               for 164:      numXXs   left<newline46mondego>    num50s = int (left / 50); left = left % 50; //      3     14<newline46mondego>    num20s = int (left / 20); left = left % 20; //      0     14<newline46mondego>    num10s = int (left / 10); left = left % 10; //      1      4<newline46mondego>    num5s  = int (left /  5); left = left %  5; //      0      4<newline46mondego>    num2s  = int (left /  2); left = left %  2; //      2      0<newline46mondego>    num1s  = left;                              //      0<newline46mondego>"
"7140splitHere46","12873203splitHere46","Redirect"
"7141splitHere46","12873203splitHere46","forward"
"7142splitHere46","12873203splitHere46","Filter"
"7143splitHere46","12873324splitHere46","List<Object>"
"7144splitHere46","12873324splitHere46","List<Object[]>"
"7145splitHere46","12873324splitHere46","List<My> myList = new ArrayList<My>();<newline46mondego>    for (Object[] row : cr.list()) {<newline46mondego>         My m = new My();<newline46mondego>         m.setQwerty((String) row[0]);<newline46mondego>         // set the rest of the properties<newline46mondego>         myList.add(m);<newline46mondego>    }<newline46mondego>"
"7146splitHere46","12873324splitHere46","list()"
"7147splitHere46","12873324splitHere46","Object"
"7148splitHere46","12873324splitHere46","My"
"7149splitHere46","12873405splitHere46","<project name=<doubleQuotes46>importer<doubleQuotes46> basedir=<doubleQuotes46>..<doubleQuotes46> default=<doubleQuotes46>build<doubleQuotes46>><newline46mondego>    <import file=<doubleQuotes46>imported.xml<doubleQuotes46>/><newline46mondego><newline46mondego>    <target name=<doubleQuotes46>build<doubleQuotes46>><newline46mondego>        <!-- Do some stuff... --><newline46mondego><newline46mondego>        <property name=<doubleQuotes46>isRunningFromImporter<doubleQuotes46> value=<doubleQuotes46>true<doubleQuotes46>/><newline46mondego>        <antcall target=<doubleQuotes46>run-now<doubleQuotes46>/><newline46mondego>    </target><newline46mondego></project><newline46mondego><newline46mondego><project name=<doubleQuotes46>importer<doubleQuotes46> basedir=<doubleQuotes46>..<doubleQuotes46>><newline46mondego>    <!-- Most of file omitted for brevity --><newline46mondego><newline46mondego>    <target name=<doubleQuotes46>run-now<doubleQuotes46>><newline46mondego><newline46mondego>        <echo>${isRunningFromImporter}</echo><newline46mondego>    </target><newline46mondego></project><newline46mondego>"
"7150splitHere46","12873405splitHere46","<not-equals arg1=<doubleQuotes46>${isRunningFromImporter}<doubleQuotes46> arg2=<doubleQuotes46>true<doubleQuotes46>/>"
"7151splitHere46","12873405splitHere46","<not><equals ...>"
"7152splitHere46","12873476splitHere46","public static Date getSleepingTimes(Date wakingTime) {<newline46mondego><newline46mondego>    Calendar calendar = Calendar.getInstance();<newline46mondego>    calendar.setTime( wakingTime );<newline46mondego>    calendar.add(Calendar.HOUR,-7);<newline46mondego>    calendar.add(Calendar.MINUTE,-30);<newline46mondego><newline46mondego>    return calendar.getTime();<newline46mondego><newline46mondego>}<newline46mondego>"
"7153splitHere46","12873476splitHere46","public static Date getSleepingTimes(Date wakingTime, int hoursToSleep, int minutesToSleep) {<newline46mondego><newline46mondego>    Calendar calendar = Calendar.getInstance();<newline46mondego>    calendar.setTime( wakingTime );<newline46mondego>    calendar.add(Calendar.HOUR,-hoursToSleep);<newline46mondego>    calendar.add(Calendar.MINUTE,-minutesToSleep);<newline46mondego><newline46mondego>    return calendar.getTime();<newline46mondego><newline46mondego>}<newline46mondego>"
"7154splitHere46","12873476splitHere46","getSleepingTime(wakingTime, 7, 30);<newline46mondego>"
"7155splitHere46","12873494splitHere46","@Test<newline46mondego>public void deveExcluirPorId() throws QualityException {<newline46mondego>    usuarioService.excluir(ID);<newline46mondego>    verify(usuariosRepositoryMock, times(1)).delete(ID);<newline46mondego>    verifyNoMoreInteractions(usuariosRepositoryMock);<newline46mondego>}<newline46mondego>"
"7156splitHere46","12873514splitHere46","public static catia.Application createApplication() {<newline46mondego>    return COM4J.createInstance( org.huys.catia.Application.class, <doubleQuotes46>{87fd6f40-e252-11d5-8040-0010b5fa1031}<doubleQuotes46> );<newline46mondego>}<newline46mondego>"
"7157splitHere46","12873526splitHere46","<s:Label color=<doubleQuotes46>#1021C7<doubleQuotes46> text=<doubleQuotes46>Welcome to iCalculate (4)<doubleQuotes46> textAlign=<doubleQuotes46>center<doubleQuotes46><newline46mondego>         verticalAlign=<doubleQuotes46>middle<doubleQuotes46> click=<doubleQuotes46>navigator.pushView(views.CompanyDetail)<doubleQuotes46>/><newline46mondego>    <s:HGroup><newline46mondego>     <s:TextInput id=<doubleQuotes46>searchInput<doubleQuotes46>/> <newline46mondego>     <s:Button label=<doubleQuotes46>Search<doubleQuotes46>/><newline46mondego>    </s:HGroup><newline46mondego><s:List id=<doubleQuotes46>calcList<doubleQuotes46> alternatingItemColors=<doubleQuotes46>[#e5e4e4,#ffffff]<doubleQuotes46><newline46mondego>        width=<doubleQuotes46>100%<doubleQuotes46><newline46mondego>        height=<doubleQuotes46>90%<doubleQuotes46><newline46mondego>        labelField=<doubleQuotes46>name<doubleQuotes46><newline46mondego>        change=<doubleQuotes46>calcList_changeHandler(event)<doubleQuotes46>><newline46mondego>.... <newline46mondego>"
"7158splitHere46","12873658splitHere46","for(int i = 0; i< args.length && i < 2; i++)<newline46mondego>{<newline46mondego>  System.out.println(args[i]);<newline46mondego>}<newline46mondego>System.out.println(<doubleQuotes46>Length is <doubleQuotes46> + args.length);<newline46mondego>"
"7159splitHere46","12873704splitHere46","word.length"
"7160splitHere46","12873704splitHere46","tv"
"7161splitHere46","12873704splitHere46","Arrays#toString"
"7162splitHere46","12873704splitHere46","String[] word = { <doubleQuotes46>Pretty<doubleQuotes46>, <doubleQuotes46>Cool<doubleQuotes46>, <doubleQuotes46>Weird<doubleQuotes46> };<newline46mondego><newline46mondego>// Prints [Pretty, Cool, Weird]<newline46mondego>tv.setText(Arrays.toString(word));   <newline46mondego><newline46mondego>// Prints Pretty, Cool, Weird<newline46mondego>tv.setText(Arrays.toString(word).replaceAll(<doubleQuotes46>\\[|\\]<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>));<newline46mondego>"
"7163splitHere46","12873779splitHere46","java -jar myjar.jar"
"7164splitHere46","12873779splitHere46","lib"
"7165splitHere46","12873779splitHere46","lib"
"7166splitHere46","12873779splitHere46","java"
"7167splitHere46","12873779splitHere46","java"
"7168splitHere46","12873779splitHere46","lib"
"7169splitHere46","12873779splitHere46","tmp"
"7170splitHere46","12873779splitHere46","tmp/myjar.jar<newline46mondego>tmp/lib/commons-httpclient-3.1.jar<newline46mondego>"
"7171splitHere46","12873779splitHere46","java -jar tmp/myjar.jar"
"7172splitHere46","12873876splitHere46",".*"
"7173splitHere46","12873876splitHere46",".*?"
"7174splitHere46","12873876splitHere46","href="
"7175splitHere46","12873899splitHere46","SwingUtilities.invokeLater(Runnable)"
"7176splitHere46","12873912splitHere46","public void exit()<newline46mondego>{<newline46mondego>   Platform.runLater( new Runnable(){@Override public void run(){<newline46mondego>      System.err.println( <doubleQuotes46>exit/runLater/run<doubleQuotes46> );<newline46mondego>      webEngine.getLoadWorker().cancel();<newline46mondego>      Platform.exit();<newline46mondego>      SwingUtilities.invokeLater( new Runnable(){ @Override public void run() {<newline46mondego>         System.err.println( <doubleQuotes46>exit/invokeLater/run<doubleQuotes46> );<newline46mondego>         frame.dispose(); }});<newline46mondego>      }});<newline46mondego>}<newline46mondego>"
"7177splitHere46","12874035splitHere46","case"
"7178splitHere46","12874059splitHere46","v.neighbors"
"7179splitHere46","12874059splitHere46","new ArrayList()"
"7180splitHere46","12874059splitHere46","vertices.get()"
"7181splitHere46","12874059splitHere46","neighbors"
"7182splitHere46","12874059splitHere46","v"
"7183splitHere46","12874059splitHere46","neighbors"
"7184splitHere46","12874059splitHere46","vertices.get(from)"
"7185splitHere46","12874059splitHere46","v.neighbors"
"7186splitHere46","12874059splitHere46","neighbors"
"7187splitHere46","12874059splitHere46","v.neighbors.add()"
"7188splitHere46","12874059splitHere46","neighbors"
"7189splitHere46","12874059splitHere46","VertexI"
"7190splitHere46","12874059splitHere46","new ArrayList()"
"7191splitHere46","12874059splitHere46","null"
"7192splitHere46","12874059splitHere46","if (v != null && v.neighbors != null) {<newline46mondego>    v.neighbors.add(new vertexWeight (to, 1));<newline46mondego>}<newline46mondego>"
"7193splitHere46","12874059splitHere46","v"
"7194splitHere46","12874059splitHere46","neighbors"
"7195splitHere46","12874059splitHere46","new ArrayList()"
"7196splitHere46","12874123splitHere46","JSR 172"
"7197splitHere46","12874123splitHere46","SAX"
"7198splitHere46","12874123splitHere46","DOM"
"7199splitHere46","12874123splitHere46","kxml2"
"7200splitHere46","12874244splitHere46","if ((i + 1) < tokens.length && !(tokens[i+1].isEmpty()))<newline46mondego>"
"7201splitHere46","12874414splitHere46","byte"
"7202splitHere46","12874414splitHere46","UNUM8"
"7203splitHere46","12874414splitHere46","base+0x0: 0x1A<newline46mondego>base+0x1: 0x10<newline46mondego>"
"7204splitHere46","12874414splitHere46","base+0x0: 0x1A 0x00 0x00 0x00<newline46mondego>base+0x4: 0x10 0x00 0x00 0x00<newline46mondego>"
"7205splitHere46","12874414splitHere46","base"
"7206splitHere46","12874414splitHere46","byte[]"
"7207splitHere46","12874414splitHere46","UNUM8*"
"7208splitHere46","12874414splitHere46","Memory"
"7209splitHere46","12874432splitHere46","emp_id"
"7210splitHere46","12874432splitHere46","private Employee emp;<newline46mondego>   public Employee getEmpid() {<newline46mondego>        return this.emp;<newline46mondego>   }<newline46mondego><newline46mondego>   public void setEmployee(Employee employee) {<newline46mondego>       this.employee= employee;<newline46mondego>   }<newline46mondego>"
"7211splitHere46","12874432splitHere46","Task.hbm"
"7212splitHere46","12874432splitHere46","<many-to-one <newline46mondego>          name=<doubleQuotes46>employee<doubleQuotes46> <newline46mondego>          class=<doubleQuotes46>Employee<doubleQuotes46> <newline46mondego>          column=<doubleQuotes46>EMPID<doubleQuotes46>/><newline46mondego>"
"7213splitHere46","12874432splitHere46","addTask"
"7214splitHere46","12874432splitHere46","Employee"
"7215splitHere46","12874432splitHere46","public void addTask(Task task) {<newline46mondego>   task.setEmployee(this);//<--This will set employee as parent in your task class <newline46mondego>          this.tasks.add(task);<newline46mondego>}<newline46mondego>"
"7216splitHere46","12874432splitHere46","doSubmitAction"
"7217splitHere46","12874432splitHere46","Employee"
"7218splitHere46","12874432splitHere46","tasks"
"7219splitHere46","12874505splitHere46","DocumentFilter"
"7220splitHere46","12874505splitHere46","DocumentListener"
"7221splitHere46","12874505splitHere46","JFormattedTextField"
"7222splitHere46","12874530splitHere46","// [some code that is about to set the property on thirdLevelObject<newline46mondego>Runnable deferredSetter = new Runnable() {<newline46mondego>    public void run() {<newline46mondego>         thirdLevelObject.setFoo(/* wherever the value for foo comes from later */);<newline46mondego>    }<newline46mondego>} <newline46mondego>"
"7223splitHere46","12874530splitHere46","Runnable"
"7224splitHere46","12874720splitHere46","Run As > Java Application"
"7225splitHere46","12874720splitHere46","Project > Clean"
"7226splitHere46","12874764splitHere46","non duplicates"
"7227splitHere46","12874764splitHere46","public static void main(String[] args) throws InterruptedException {<newline46mondego>    List<Integer> list = new ArrayList<Integer>();<newline46mondego><newline46mondego>    for (int i = 0; i < 3; i++) { //Add some duplicates<newline46mondego>        list.add(new Integer(4));<newline46mondego>        list.add(new Integer(5));<newline46mondego>        list.add(new Integer(6));<newline46mondego>    }<newline46mondego>    List<Integer> newList = new ArrayList<Integer>();<newline46mondego>    for (Integer first : list) {<newline46mondego>        boolean contains = false;//if this flag is false after iteration then item will be added<newline46mondego><newline46mondego>        for (Integer copy : newList)<newline46mondego>            if (first.equals(copy)) {// You will have to specify your condition here<newline46mondego>                contains = true;<newline46mondego>                break;<newline46mondego>            }<newline46mondego>        if(!contains)<newline46mondego>            newList.add(first);//add item if it was not present<newline46mondego>    }<newline46mondego>    System.out.println(list);<newline46mondego>    System.out.println(newList);<newline46mondego><newline46mondego>}<newline46mondego>"
"7228splitHere46","12874764splitHere46","[4, 5, 6, 4, 5, 6, 4, 5, 6] <-- List with duplicates<newline46mondego>[4, 5, 6] <-- List with no duplicates<newline46mondego>"
"7229splitHere46","12874805splitHere46","Arrays.sort(graph, new Comparator<Integer[]>() {<newline46mondego>             @Override<newline46mondego>             public int compare(final Integer[] entry1, final Integer[] entry2) {<newline46mondego>              // DO SORTING STUFF HERE<newline46mondego>            } });<newline46mondego>"
"7230splitHere46","12874811splitHere46","next"
"7231splitHere46","12874811splitHere46","if(scan.hasNext())<newline46mondego> scan.next();<newline46mondego>"
"7232splitHere46","12874811splitHere46","private static int posNum(Scanner scan) {<newline46mondego>    int input = 0;<newline46mondego>    boolean error = false;<newline46mondego>    if (scan.hasNext()) {<newline46mondego>        if (scan.hasNextInt()) {<newline46mondego>            input = scan.nextInt();<newline46mondego>            error = input <= 0;<newline46mondego>        } else {<newline46mondego>            scan.next();<newline46mondego>            error = true;<newline46mondego>        }<newline46mondego>    }<newline46mondego>    while (error) {<newline46mondego>        System.out.print(<doubleQuotes46>Invalid input. Please reenter: <doubleQuotes46>);<newline46mondego>        if (scan.hasNextInt()) {<newline46mondego>            input = scan.nextInt();<newline46mondego>            error = input <= 0;<newline46mondego>        } else {<newline46mondego>            if (scan.hasNext())<newline46mondego>                scan.next();<newline46mondego>            error = true;<newline46mondego>        }<newline46mondego>    }<newline46mondego>    return input;<newline46mondego>}<newline46mondego>"
"7233splitHere46","12874811splitHere46","Scanner scan = new Scanner(System.in);<newline46mondego>    int i = posNum(scan);<newline46mondego>    System.out.println(i);<newline46mondego>    int j = posNum(scan);<newline46mondego>    System.out.println(j);<newline46mondego>"
"7234splitHere46","12874933splitHere46","JPanel"
"7235splitHere46","12874933splitHere46","JFrame"
"7236splitHere46","12874933splitHere46","public Gui(String title) {<newline46mondego>   super(title);<newline46mondego>   JPanel pane = new JPanel();<newline46mondego>   setBounds(100, 100, 500, 500);<newline46mondego>   setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>   Container con = this.getContentPane();<newline46mondego>   pane.setBackground(new Color(0, 0, 0));<newline46mondego>   con.add(pane);<newline46mondego>   setVisible(true);<newline46mondego>}<newline46mondego>"
"7237splitHere46","12874946splitHere46","new int[]"
"7238splitHere46","12874946splitHere46","arr"
"7239splitHere46","12874946splitHere46","return new int[] {arr[0]+1,arr[1]+1,arr[2]+1,arr[3]+1};<newline46mondego>"
"7240splitHere46","12875186splitHere46","public abstract class CallNode {<newline46mondego>    public abstract CallNode hasMissingCall();<newline46mondego><newline46mondego>    public abstract int getId();<newline46mondego>}<newline46mondego>"
"7241splitHere46","12875186splitHere46","public class Call extends CallNode {<newline46mondego>    public int id;<newline46mondego><newline46mondego>    // Simplification of method<newline46mondego>    public CallNode hasMissingCall() {  <newline46mondego>        if (true)<newline46mondego>            return this;<newline46mondego>        // ...<newline46mondego>    }<newline46mondego>    public int getId()<newline46mondego>    {<newline46mondego>         return this.id;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7242splitHere46","12875227splitHere46","json.put(<doubleQuotes46>X<doubleQuotes46>, new JSONArray(Arrays.asList(X)));<newline46mondego>"
"7243splitHere46","12875295splitHere46","Element root = DocumentHelper.createElement(<doubleQuotes46>my-stuff<doubleQuotes46>)<newline46mondego>Document dom = DocumentHelper.createDocument(root);<newline46mondego>root.addElement(<doubleQuotes46>box<doubleQuotes46>).setText(<doubleQuotes46>tissue<doubleQuotes46>);<newline46mondego>System.out.println(dom.asXml());<newline46mondego>"
"7244splitHere46","12875322splitHere46","null"
"7245splitHere46","12875322splitHere46","getView"
"7246splitHere46","12875322splitHere46","convertView"
"7247splitHere46","12875322splitHere46","null"
"7248splitHere46","12875322splitHere46","getView"
"7249splitHere46","12875322splitHere46","@Override<newline46mondego>public View getView(int position, View convertView, ViewGroup parent) {<newline46mondego>    View view = null;<newline46mondego>    ViewHolder holder;<newline46mondego>    if (convertView == null) {<newline46mondego>        LayoutInflater inflater = this._context.getLayoutInflater();<newline46mondego>        view = inflater.inflate(R.layout.contact_list_item, parent, false);<newline46mondego>        holder = new ViewHolder();<newline46mondego>        viewHolder.display_name = (TextView) view<newline46mondego>                .findViewById(R.id.txtDisplayName);<newline46mondego>        viewHolder.number = (TextView) view.findViewById(R.id.txtNumber);<newline46mondego>        viewHolder.number_type = (TextView) view<newline46mondego>                .findViewById(R.id.txtNumberType);            <newline46mondego>        view.setTag(viewHolder);<newline46mondego>    } else {<newline46mondego>        view = convertView;<newline46mondego>        holder = (ViewHolder) view.getTag();<newline46mondego>    }        <newline46mondego>    holder.setContact(_contacts.get(position));<newline46mondego>    return view;<newline46mondego>}<newline46mondego>"
"7250splitHere46","12875370splitHere46","BufferedImage"
"7251splitHere46","12875370splitHere46","Graphics2D"
"7252splitHere46","12875370splitHere46","Graphics2D g2 = image.createGraphics();<newline46mondego>for (BufferedImage img : images) {<newline46mondego>  g2.drawImage(img, x, y, null);<newline46mondego>}<newline46mondego>"
"7253splitHere46","12875370splitHere46","ImageIO.write(image, <doubleQuotes46>jpg<doubleQuotes46>, file);<newline46mondego>"
"7254splitHere46","12875384splitHere46","Thread"
"7255splitHere46","12875384splitHere46","Thread"
"7256splitHere46","12875384splitHere46","File"
"7257splitHere46","12875384splitHere46","Thread"
"7258splitHere46","12875384splitHere46","Runnable"
"7259splitHere46","12875384splitHere46","java.util.concurrent"
"7260splitHere46","12875384splitHere46","Semaphore"
"7261splitHere46","12875384splitHere46","Object"
"7262splitHere46","12875384splitHere46","volatile"
"7263splitHere46","12875384splitHere46","AtomicLong"
"7264splitHere46","12875390splitHere46","super.paint(g);<newline46mondego>"
"7265splitHere46","12875390splitHere46","paint"
"7266splitHere46","12875390splitHere46","paintComponent"
"7267splitHere46","12875390splitHere46","JFrame"
"7268splitHere46","12875390splitHere46","JComponent"
"7269splitHere46","12875390splitHere46","JComponent"
"7270splitHere46","12875408splitHere46","int i = 100;<newline46mondego>for (int j = 0; j < i; j++)<newline46mondego>           System.out.print(<doubleQuotes46>*<doubleQuotes46>);<newline46mondego>"
"7271splitHere46","12875408splitHere46","****  <newline46mondego> ***  <newline46mondego>  **<newline46mondego>   *  <newline46mondego>"
"7272splitHere46","12875408splitHere46","spaces"
"7273splitHere46","12875408splitHere46","characters"
"7274splitHere46","12875408splitHere46","Spaces"
"7275splitHere46","12875408splitHere46","*'s"
"7276splitHere46","12875408splitHere46","max"
"7277splitHere46","12875408splitHere46","i"
"7278splitHere46","12875408splitHere46","i"
"7279splitHere46","12875408splitHere46","spaces"
"7280splitHere46","12875408splitHere46","n - i"
"7281splitHere46","12875408splitHere46","stars"
"7282splitHere46","12875408splitHere46","two"
"7283splitHere46","12875475splitHere46","setIcon(Icon)"
"7284splitHere46","12875475splitHere46","setDisabledIcon(Icon)"
"7285splitHere46","12875475splitHere46","setPressedIcon(Icon)"
"7286splitHere46","12875475splitHere46","setRolloverIcon(Icon)"
"7287splitHere46","12875475splitHere46","setSelectedIcon(Icon)"
"7288splitHere46","12875475splitHere46","MediaTracker"
"7289splitHere46","12875475splitHere46","ImageObserver"
"7290splitHere46","12875475splitHere46","import java.awt.*;<newline46mondego>import java.awt.image.BufferedImage;<newline46mondego>import java.net.URL;<newline46mondego>import javax.swing.*;<newline46mondego><newline46mondego>public class ImageSwapOnButton {<newline46mondego><newline46mondego>    public static void main( String[] args ) throws Exception {<newline46mondego>        URL url = new URL(<doubleQuotes46>http://1point1c.org/gif/thum/plnttm.gif<doubleQuotes46>);<newline46mondego><newline46mondego>        Image image = Toolkit.getDefaultToolkit().createImage(url);<newline46mondego>        ImageIcon spinIcon = new ImageIcon(image);<newline46mondego>        JOptionPane.showMessageDialog(null, new JLabel(spinIcon));<newline46mondego><newline46mondego>        // create a static version of this icon<newline46mondego>        BufferedImage bi = new BufferedImage(150,150,BufferedImage.TYPE_INT_ARGB);<newline46mondego>        Graphics g = bi.getGraphics();<newline46mondego>        g.drawImage(image,0,0,null);<newline46mondego>        g.dispose();<newline46mondego>        ImageIcon staticIcon = new ImageIcon(bi);<newline46mondego><newline46mondego>        JButton button = new JButton(staticIcon);<newline46mondego>        button.setRolloverIcon(spinIcon);<newline46mondego>        JOptionPane.showMessageDialog(null, button);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7291splitHere46","12875478splitHere46","testString = <doubleQuotes46>example<doubleQuotes46>; //from within MainActivity class<newline46mondego>"
"7292splitHere46","12875478splitHere46","MainActivity.testString = <doubleQuotes46>example<doubleQuotes46>; //from any other class<newline46mondego>"
"7293splitHere46","12875478splitHere46","String value = MainActivity.testString;<newline46mondego>"
"7294splitHere46","12875522splitHere46","JTable"
"7295splitHere46","12875522splitHere46","tableChanged(...)"
"7296splitHere46","12875522splitHere46","scrollPane"
"7297splitHere46","12875522splitHere46","CustomTable"
"7298splitHere46","12875522splitHere46","JTable"
"7299splitHere46","12875522splitHere46","super()"
"7300splitHere46","12875522splitHere46","JTable"
"7301splitHere46","12875522splitHere46","tableChanged"
"7302splitHere46","12875522splitHere46","tableChanged"
"7303splitHere46","12875522splitHere46","scrollPane"
"7304splitHere46","12875522splitHere46","super()"
"7305splitHere46","12875522splitHere46","this.scrollPane = scrollPane"
"7306splitHere46","12875522splitHere46","scrollPane"
"7307splitHere46","12875522splitHere46","CustomTable.java"
"7308splitHere46","12875522splitHere46","public class CustomTable extends JTable {<newline46mondego><newline46mondego>    // No more scroll pane; only observers<newline46mondego>    private List<ChangeListener> listeners = [];<newline46mondego><newline46mondego>    // no more scroll pagne<newline46mondego>    public CustomTable(){<newline46mondego>        super();<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void tableChanged(TableModelEvent e) {<newline46mondego>        super.tableChanged(e);<newline46mondego>        this.fireChangeEvent();<newline46mondego>    }<newline46mondego><newline46mondego>    /* new methods */<newline46mondego><newline46mondego>    public void addChangeListener(ChangeListener listener) {<newline46mondego>        listeners.add(listener);<newline46mondego>    }<newline46mondego><newline46mondego>    public void removeChangeListener(ChangeListener listener) {<newline46mondego>        // ...<newline46mondego>    }<newline46mondego><newline46mondego>    private void fireChangeEvent() {<newline46mondego>        for(String l : listeners ){<newline46mondego>            l.onChange();<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7309splitHere46","12875522splitHere46","CustomScrollPane.java"
"7310splitHere46","12875522splitHere46","class CustomScrollPane implements ChangeListener{<newline46mondego>   private CustomTable table<newline46mondego><newline46mondego>   public CustomScrollPane(/*...*/){<newline46mondego>       table = new CustomTable();<newline46mondego>       table.addChangeListener(this);<newline46mondego>       //...<newline46mondego>   }<newline46mondego><newline46mondego>   public void scrollToBottom(){<newline46mondego>      //...<newline46mondego>   }<newline46mondego><newline46mondego>   /* new methods */<newline46mondego><newline46mondego>  @Override<newline46mondego>  public void onChange() {<newline46mondego>      scrollToBottom();<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"7311splitHere46","12875558splitHere46","1"
"7312splitHere46","12875558splitHere46","return (l.value == l.next.value) ? (1 + fn(l.next)) : fn(l.next);<newline46mondego>"
"7313splitHere46","12875558splitHere46","l.next"
"7314splitHere46","12875558splitHere46","null"
"7315splitHere46","12875558splitHere46","int fn(Node l) {<newline46mondego>   if (l == null || l.next == null)<newline46mondego>       return 0;<newline46mondego>   return (l.value == l.next.value ? 1 : 0) + fn(l.next);<newline46mondego>}<newline46mondego>"
"7316splitHere46","12875677splitHere46","JTextFields"
"7317splitHere46","12875677splitHere46","ActionListener"
"7318splitHere46","12875677splitHere46","jButton1"
"7319splitHere46","12875677splitHere46","DefaultTableModel"
"7320splitHere46","12875677splitHere46","DefaultTableModel model = new DefaultTableModel(data, columns);<newline46mondego>"
"7321splitHere46","12875677splitHere46","actionPerformed"
"7322splitHere46","12875677splitHere46","ActionListener"
"7323splitHere46","12875677splitHere46","String nextRowId = Integer.toString(model.getRowCount());<newline46mondego>model.addRow(new Object[] { <newline46mondego>              nextRowId, <newline46mondego>              jTextField1.getText(), <newline46mondego>              jTextField2.getText(), <newline46mondego>              jTextField3.getText() });<newline46mondego>"
"7324splitHere46","12875677splitHere46","JTable"
"7325splitHere46","12875677splitHere46","JScrollPane"
"7326splitHere46","12875727splitHere46","com.invient.vaadin.charts.InvientCharts.PointClickListener"
"7327splitHere46","12875727splitHere46","chart.addListener(new PointClickListener() {<newline46mondego>    @Override<newline46mondego>    public void pointClick(PointClickEvent pointClickEvent) {<newline46mondego>        Item item = pointItems.get(pointClickEvent.getPoint());<newline46mondego><newline46mondego>        Window popupWindow = new Window();<newline46mondego>        // Add stuff to your window<newline46mondego>        getWindow().addWindow(popupWindow);<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"7328splitHere46","12875727splitHere46","Map<Point, Item> pointItems = new HashMap<Point, Item>();<newline46mondego>"
"7329splitHere46","12875751splitHere46","rb_string"
"7330splitHere46","12875751splitHere46","char*"
"7331splitHere46","12875751splitHere46","rb_string"
"7332splitHere46","12875920splitHere46","public class ServletContextClass implements ServletContextListener<newline46mondego>    {<newline46mondego>           public static Connection con;<newline46mondego><newline46mondego>    public void contextInitialized(ServletContextEvent arg0) <newline46mondego>    {<newline46mondego>        con.getInstance ();     <newline46mondego>    }//end contextInitialized method<newline46mondego><newline46mondego><newline46mondego>    public void contextDestroyed(ServletContextEvent arg0) <newline46mondego>    {<newline46mondego>        con.close ();       <newline46mondego>    }//end constextDestroyed method<newline46mondego><newline46mondego>}<newline46mondego>"
"7333splitHere46","12875920splitHere46","<listener><newline46mondego>    <listener-class>com.nameofpackage.ServletContextClass</listener-class><newline46mondego></listener><newline46mondego>"
"7334splitHere46","12876006splitHere46","import java.io.File;<newline46mondego><newline46mondego>public class PathTest {<newline46mondego><newline46mondego>    public static void main(String[] args) throws Exception {<newline46mondego>        File file = new File(<doubleQuotes46>DoesNotExist.txt<doubleQuotes46>);<newline46mondego>        System.out.println(file.getAbsolutePath());<newline46mondego>        System.out.println(file.exists());<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7335splitHere46","12876006splitHere46","I:\projects\eclipse\Test\DoesNotExist.txt<newline46mondego>false<newline46mondego>"
"7336splitHere46","12876034splitHere46","String"
"7337splitHere46","12876034splitHere46","Country"
"7338splitHere46","12876034splitHere46","@Component<newline46mondego>public class CountryEditor extends PropertyEditorSupport {<newline46mondego><newline46mondego>    private @Autowired CountryService countryService;<newline46mondego><newline46mondego>    // Converts a String to a Country (when submitting form)<newline46mondego>    @Override<newline46mondego>    public void setAsText(String text) {<newline46mondego>        Country c = this.countryService.findById(Long.valueOf(text));<newline46mondego><newline46mondego>        this.setValue(c);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"7339splitHere46","12876034splitHere46","...<newline46mondego>public class MyController {<newline46mondego><newline46mondego>    private @Autowired CountryEditor countryEditor;<newline46mondego><newline46mondego>    @InitBinder<newline46mondego>    public void initBinder(WebDataBinder binder) {<newline46mondego>        binder.registerCustomEditor(Country.class, this.countryEditor);<newline46mondego>    }<newline46mondego><newline46mondego>    ...<newline46mondego><newline46mondego>}<newline46mondego>"
"7340splitHere46","12876226splitHere46","spring transaction"
"7341splitHere46","12876226splitHere46","Spring"
"7342splitHere46","12876226splitHere46","transaction"
"7343splitHere46","12876226splitHere46","Spring"
"7344splitHere46","12876226splitHere46","tx:advice XML"
"7345splitHere46","12876226splitHere46","configuration"
"7346splitHere46","12876226splitHere46","aop"
"7347splitHere46","12876226splitHere46","configuration"
"7348splitHere46","12876226splitHere46","method"
"7349splitHere46","12876226splitHere46","transaction"
"7350splitHere46","12876226splitHere46","transaction"
"7351splitHere46","12876226splitHere46","save"
"7352splitHere46","12876226splitHere46","modify"
"7353splitHere46","12876226splitHere46","savePizza()"
"7354splitHere46","12876226splitHere46","saveColdDrink()"
"7355splitHere46","12876226splitHere46","modifyOrder()"
"7356splitHere46","12876226splitHere46","modifyBill()."
"7357splitHere46","12876226splitHere46","advice"
"7358splitHere46","12876226splitHere46","xml"
"7359splitHere46","12876226splitHere46","<tx:advice id=<doubleQuotes46>txAdvice<doubleQuotes46> ><newline46mondego>  <tx:attributes><newline46mondego>    <tx:method name=<doubleQuotes46>save*<doubleQuotes46> propagation=<doubleQuotes46>REQUIRED<doubleQuotes46>/><newline46mondego>    <tx:method name=<doubleQuotes46>modify*<doubleQuotes46> propagation=<doubleQuotes46>REQUIRED<doubleQuotes46>/><newline46mondego>  </tx:attributes><newline46mondego></tx:advice> <newline46mondego>"
"7360splitHere46","12876226splitHere46","advice"
"7361splitHere46","12876226splitHere46","transaction"
"7362splitHere46","12876226splitHere46","save"
"7363splitHere46","12876226splitHere46","modify"
"7364splitHere46","12876226splitHere46","beans"
"7365splitHere46","12876226splitHere46","pointcut"
"7366splitHere46","12876226splitHere46","aop-config"
"7367splitHere46","12876226splitHere46","classes"
"7368splitHere46","12876226splitHere46","com.mytransaction.service"
"7369splitHere46","12876226splitHere46","<aop:config><newline46mondego>  <aop:pointcut id=<doubleQuotes46>allServices<doubleQuotes46><newline46mondego>    expression=<doubleQuotes46>execution(*com.mytransaction.service.*.*(..))<doubleQuotes46>/><newline46mondego>  <aop:advisor advice-ref=<doubleQuotes46>txAdvice<doubleQuotes46> pointcut-ref=<doubleQuotes46>allServices<doubleQuotes46>/><newline46mondego></aop:config><newline46mondego>"
"7370splitHere46","12876226splitHere46","<tx:advice>"
"7371splitHere46","12876226splitHere46","pointcut"
"7372splitHere46","12876226splitHere46","<aop-config>"
"7373splitHere46","12876226splitHere46","<aop:advisor advice-ref=<doubleQuotes46>txAdvice<doubleQuotes46> pointcut-ref=<doubleQuotes46>allServices<doubleQuotes46>/>"
"7374splitHere46","12876246splitHere46","String[] strings = new String[klein];<newline46mondego>"
"7375splitHere46","12876246splitHere46","contains"
"7376splitHere46","12876246splitHere46","Arrays.asList(strings).contains(waar)<newline46mondego>"
"7377splitHere46","12876246splitHere46","ArrayList"
"7378splitHere46","12876246splitHere46","String"
"7379splitHere46","12876246splitHere46","waar"
"7380splitHere46","12876246splitHere46","convert"
"7381splitHere46","12876246splitHere46","true"
"7382splitHere46","12876246splitHere46","value"
"7383splitHere46","12876246splitHere46","convert"
"7384splitHere46","12876246splitHere46","index"
"7385splitHere46","12876246splitHere46","public void convert(String value) {<newline46mondego><newline46mondego>    for (int i = 0; i < strings.length; i++) {<newline46mondego>        if (strings[i].equals(value)) {<newline46mondego><newline46mondego>            System.out.println(<doubleQuotes46>Value: <doubleQuotes46> + strings[i]);<newline46mondego>            System.out.println(<doubleQuotes46>Index: <doubleQuotes46> + i);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"7386splitHere46","12876248splitHere46","LN"
"7387splitHere46","12876248splitHere46","public static LN copySwap (LN list, int i1, int i2) {<newline46mondego>    if (list == null) {<newline46mondego>        return null;<newline46mondego>    }<newline46mondego>    return new LN(list.value == i1 ? i2 : list.value, copySwap(list.next, i1, i2));<newline46mondego>}<newline46mondego>"
"7388splitHere46","12876277splitHere46","package com.sockets.exam1;<newline46mondego><newline46mondego>import java.io.BufferedReader;<newline46mondego>import java.io.IOException;<newline46mondego>import java.io.InputStreamReader;<newline46mondego>import java.io.PrintWriter;<newline46mondego>import java.net.ServerSocket;<newline46mondego>import java.net.Socket;<newline46mondego><newline46mondego>public class ServerCode {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        try {<newline46mondego>            ServerSocket server = new ServerSocket(11111);<newline46mondego>            while (true) {                                              <newline46mondego>                new ThreadSocket(server.accept());<newline46mondego>            }<newline46mondego>        } catch (Exception e) {<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>class ThreadSocket extends Thread{<newline46mondego>    private Socket insocket;    <newline46mondego>    ThreadSocket(Socket insocket){<newline46mondego>        this.insocket = insocket;<newline46mondego>        this.start();<newline46mondego>    }       <newline46mondego>    @Override<newline46mondego>    public void run() {     <newline46mondego>        try {<newline46mondego>            System.out.println(<doubleQuotes46>procesing request<doubleQuotes46>);<newline46mondego>            BufferedReader in = new BufferedReader(new InputStreamReader(<newline46mondego>                    insocket.getInputStream()));<newline46mondego>            PrintWriter out = new PrintWriter(insocket.getOutputStream(),<newline46mondego>                    true);<newline46mondego>            String instring = in.readLine();<newline46mondego>            out.println(<doubleQuotes46>The server got this: <doubleQuotes46> + instring.toUpperCase());<newline46mondego>            insocket.close();<newline46mondego>        } catch (IOException e) {<newline46mondego>            e.printStackTrace();<newline46mondego>        }       <newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7389splitHere46","12876279splitHere46","public Media(java.lang.String source)<newline46mondego>"
"7390splitHere46","12876303splitHere46","Channel"
"7391splitHere46","12876303splitHere46","ChannelBuffers"
"7392splitHere46","12876303splitHere46","ByteOrder"
"7393splitHere46","12876303splitHere46","ChannelBufferFactory"
"7394splitHere46","12876309splitHere46","new Node<E>"
"7395splitHere46","12876309splitHere46","new Node<String>()"
"7396splitHere46","12876309splitHere46","new Node<Integer>()"
"7397splitHere46","12876356splitHere46","JComboBox"
"7398splitHere46","12876356splitHere46","Set"
"7399splitHere46","12876356splitHere46","JComboBox()"
"7400splitHere46","12876356splitHere46","JComboBox"
"7401splitHere46","12876356splitHere46","protected void loadColors() throws IOException {<newline46mondego>   Map<String, String> colorsHexMap = new TreeMap<String, String>();<newline46mondego>   BufferedReader input = new BufferedReader(new FileReader(<doubleQuotes46>colors.txt<doubleQuotes46>));<newline46mondego>   ...<newline46mondego><newline46mondego>   Set<String> keySet = colorsHexMap.keySet();<newline46mondego>   String[] keyArray = keySet.toArray(new String[keySet.size()]);<newline46mondego>   ComboBoxModel<String> model = new DefaultComboBoxModel<>(keyArray);<newline46mondego>   CBColor.setModel(model);<newline46mondego>}<newline46mondego>"
"7402splitHere46","12876356splitHere46","TreeMap"
"7403splitHere46","12876356splitHere46","String bgColor = colorsHexMap.get(CBColor.getSelectedItem());<newline46mondego>TAText.setBackground(Color.decode(bgColor));<newline46mondego>"
"7404splitHere46","12876463splitHere46","chooseAlphaBetaMove"
"7405splitHere46","12876476splitHere46","private static long Raju_Iterative(int n)<newline46mondego>{        <newline46mondego>    if (n < 0)<newline46mondego>        return 0L;<newline46mondego>    long a = 1L;<newline46mondego>    long b = 1L;<newline46mondego>    for(int i = 0; i < n-1; i++) {<newline46mondego>        long c = a+b+1;<newline46mondego>        a = b;<newline46mondego>        b = c;<newline46mondego>    }<newline46mondego>    return b;<newline46mondego>}<newline46mondego>"
"7406splitHere46","12876542splitHere46","main"
"7407splitHere46","12876542splitHere46","import static java.lang.System.in;<newline46mondego>import static java.lang.System.out;<newline46mondego><newline46mondego>import java.util.LinkedHashMap;<newline46mondego>import java.util.Map;<newline46mondego>import java.util.Map.Entry;<newline46mondego>import java.util.Scanner;<newline46mondego><newline46mondego>public class Music {<newline46mondego><newline46mondego>    private static final String DEFAULT_MUSIC = <doubleQuotes46>Country<doubleQuotes46>;<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        Map<Integer, String> musicOptions = new LinkedHashMap<Integer, String>();<newline46mondego>        musicOptions.put(1, DEFAULT_MUSIC);<newline46mondego>        musicOptions.put(2, <doubleQuotes46>Rock<doubleQuotes46>);<newline46mondego>        musicOptions.put(3, <doubleQuotes46>Heavy Metal<doubleQuotes46>);<newline46mondego>        musicOptions.put(4, <doubleQuotes46>Folk<doubleQuotes46>);<newline46mondego><newline46mondego>        out.println(<doubleQuotes46>What's your favorite kind music?: <doubleQuotes46>);<newline46mondego>        for (Entry<Integer, String> option : musicOptions.entrySet()) {<newline46mondego>            Integer choice = option.getKey();<newline46mondego>            String music = option.getValue();<newline46mondego><newline46mondego>            out.printf(<doubleQuotes46>%d. %s\n<doubleQuotes46>, choice, music);<newline46mondego>        }<newline46mondego><newline46mondego>        final int choice = new Scanner(in).nextInt();<newline46mondego>        String music = musicOptions.get(choice);<newline46mondego>        if (music == null) {<newline46mondego>            music = DEFAULT_MUSIC;<newline46mondego>        }<newline46mondego><newline46mondego>        out.println(music);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"7408splitHere46","12876581splitHere46","DefaultMutableTreeNode newChild = new DefaultMutableTreeNode(<doubleQuotes46>Node <doubleQuotes46> + (root.getChildCount() + 1));<newline46mondego>dm.insertNodeInto(newChild, root, root.getChildCount());<newline46mondego>tree.expandPath(new TreePath(dm.getPathToRoot(newChild.getParent())));<newline46mondego>"
"7409splitHere46","12876643splitHere46","HibernateLoopDataSource(Session hibernate, <newline46mondego>                        Class<?> typeOfClass, <newline46mondego>                        AppliedCriteria appliedCriteria){<newline46mondego>    this.hibernate = hibernate;<newline46mondego>    this.typeOfClass = typeOfClass;<newline46mondego>    // you should have this.appliedCriteria = appliedCriteria here<newline46mondego>}<newline46mondego>"
"7410splitHere46","12876814splitHere46","import java.lang.reflect.*;<newline46mondego>import java.io.*;<newline46mondego>import java.util.*;<newline46mondego>import com.google.gson.*;<newline46mondego>import com.google.gson.reflect.*;<newline46mondego><newline46mondego>public class tweetfeedreader {<newline46mondego>  public static void main(String args[]) throws IOException {<newline46mondego>    Gson gson = new Gson();<newline46mondego>    BufferedReader bufferedReader = new BufferedReader(new FileReader(<newline46mondego>            <doubleQuotes46>jsonfile.json<doubleQuotes46>));<newline46mondego>    String line;<newline46mondego>    StringBuilder sb = new StringBuilder();<newline46mondego>    while ((line = bufferedReader.readLine()) != null) sb.append(line);<newline46mondego>    Type tweetCollection = new TypeToken<Collection<tweet>>(){}.getType();<newline46mondego>    Collection<tweet> tweets = gson.fromJson(line, tweetCollection);<newline46mondego>    for (final tweet t : tweets) System.out.println(t.text);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"7411splitHere46","12876826splitHere46","a.equals(b) && !b.equals(a)"
"7412splitHere46","12876826splitHere46","java.util.Date d1 = java.sql.Date.valueOf(<doubleQuotes46>2012-01-01<doubleQuotes46>);<newline46mondego>java.util.Date d2 = new java.util.Date(d1.getTime());<newline46mondego>java.util.Date d3 = new java.sql.Timestamp(d1.getTime());<newline46mondego><newline46mondego>System.out.println(d1.equals(d2)); // true<newline46mondego>System.out.println(d2.equals(d1)); // true<newline46mondego>System.out.println(d1.equals(d3)); // true<newline46mondego>System.out.println(d3.equals(d1)); // false<newline46mondego>System.out.println(d2.equals(d3)); // true<newline46mondego>System.out.println(d3.equals(d2)); // false<newline46mondego>"
"7413splitHere46","12876900splitHere46","while (marbles > 1)"
"7414splitHere46","12876900splitHere46","marbles"
"7415splitHere46","12876900splitHere46","while (tiles.getMarbles() > 1)<newline46mondego>"
"7416splitHere46","12876900splitHere46","do {<newline46mondego>  if (... && marbles > 1 ) {}<newline46mondego>  ...<newline46mondego>} while(marbles > 1)<newline46mondego>"
"7417splitHere46","12876900splitHere46","while (tiles.getMarbles() > 0 ) {<newline46mondego>  // additional condition on marbles not required.<newline46mondego>  if (...) {}<newline46mondego>}<newline46mondego>"
"7418splitHere46","12876900splitHere46","interface Movable {<newline46mondego>   public int move();<newline46mondego>}<newline46mondego><newline46mondego>class SmartPlayer implements Movable {<newline46mondego>   public int move() {...}<newline46mondego>}<newline46mondego><newline46mondego>Movable m = new SmartPlayer();<newline46mondego>m.move();<newline46mondego>"
"7419splitHere46","12876912splitHere46","tabs.revalidate();<newline46mondego>tabs.repaint();<newline46mondego>"
"7420splitHere46","12876912splitHere46","public static void main(String[] args) {<newline46mondego> System.out.println(SwingUtilities.isEventDispatchThread()); // 1<newline46mondego> SwingUtilities.invokeLater(new Runnable() {<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void run() {<newline46mondego>            System.out.println(SwingUtilities.isEventDispatchThread()); //2<newline46mondego>            EBLFWE window = new EBLFWE();<newline46mondego>            window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>            window.setExtendedState( window.getExtendedState()|JFrame.MAXIMIZED_BOTH );<newline46mondego>            window.setSize(1024, 728);<newline46mondego>            window.setVisible(true);<newline46mondego>        }<newline46mondego>    });<newline46mondego>"
"7421splitHere46","12876912splitHere46","System.out.println(SwingUtilities.isEventDispatchThread());<newline46mondego>"
"7422splitHere46","12877075splitHere46","1"
"7423splitHere46","12877075splitHere46","maxOccurs"
"7424splitHere46","12877075splitHere46","minOccurs"
"7425splitHere46","12877075splitHere46","sequence"
"7426splitHere46","12877075splitHere46","choice"
"7427splitHere46","12877108splitHere46","static"
"7428splitHere46","12877108splitHere46","static"
"7429splitHere46","12877108splitHere46","MyClass.methodName()"
"7430splitHere46","12877108splitHere46","Integer nullInt = null;<newline46mondego>nullInt.parseInt(<doubleQuotes46>5<doubleQuotes46>);<newline46mondego>"
"7431splitHere46","12877108splitHere46","static"
"7432splitHere46","12877108splitHere46","Integer.parseInt"
"7433splitHere46","12877108splitHere46","static"
"7434splitHere46","12877170splitHere46","folder.listFiles()"
"7435splitHere46","12877170splitHere46","List"
"7436splitHere46","12877170splitHere46","50.png"
"7437splitHere46","12877170splitHere46","100000.png"
"7438splitHere46","12877170splitHere46","String filename = file.getName();<newline46mondego>String[] parts = filename.split(<doubleQuotes46>\\.<doubleQuotes46>);<newline46mondego>counter = Integer.parseInt(parts[0]);<newline46mondego>"
"7439splitHere46","12877200splitHere46","startActivity(Intent)"
"7440splitHere46","12877200splitHere46","startActivity(Intent)"
"7441splitHere46","12877200splitHere46","startActivityForResult(Intent, int)"
"7442splitHere46","12877200splitHere46","startActivityForResult(Intent, int)"
"7443splitHere46","12877200splitHere46","int"
"7444splitHere46","12877200splitHere46","onActivityResult(Intent, int, options)"
"7445splitHere46","12877207splitHere46","ObjectOutputStream.writeUnshared"
"7446splitHere46","12877207splitHere46","ObjectOutputStream"
"7447splitHere46","12877207splitHere46","writeObject"
"7448splitHere46","12877207splitHere46","ObjectInputStream.readUnshared"
"7449splitHere46","12877395splitHere46","java.lang"
"7450splitHere46","12877395splitHere46","package com.foo.bar;<newline46mondego><newline46mondego>import java.util.Scanner;<newline46mondego><newline46mondego>public class Dice {<newline46mondego>    ...<newline46mondego>"
"7451splitHere46","12877579splitHere46","EditText"
"7452splitHere46","12877579splitHere46","SharedPreferences"
"7453splitHere46","12877579splitHere46","onRegistered()"
"7454splitHere46","12877833splitHere46","pom.xml"
"7455splitHere46","12877833splitHere46","stax:stax-ri:jar:1.0"
"7456splitHere46","12877833splitHere46","clover:clover:jar:1.3-rc4"
"7457splitHere46","12877853splitHere46","OnClickListener"
"7458splitHere46","12877853splitHere46","public interface MyClickListener extends OnClickListener {}<newline46mondego><newline46mondego>public class MyClickClass implements OnClickListener {}<newline46mondego>"
"7459splitHere46","12877853splitHere46","public class MyClickClass implements OnClickListener {<newline46mondego>    @Override<newline46mondego>    public void onClick(View v) {<newline46mondego>        Log.v(<doubleQuotes46>MyClickClass<doubleQuotes46>, <doubleQuotes46>b1 clicked!<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7460splitHere46","12877853splitHere46","b1.setOnClickListener(new MyClickClass());"
"7461splitHere46","12877946splitHere46","//first declare the dialog so its accessible globally through out the class<newline46mondego>public class ListPlaces extends ListActivity {<newline46mondego> ProgressDialog dialog;<newline46mondego>"
"7462splitHere46","12877946splitHere46","if(dialog == null){<newline46mondego>            dialog = ProgressDialog.show(this,<doubleQuotes46><doubleQuotes46>,<doubleQuotes46>Retrieving listings please wait...<doubleQuotes46>);<newline46mondego>            //display progress dialog while querying server for values<newline46mondego>            dialog.setCancelable(true);<newline46mondego>            dialog.show();<newline46mondego>        } <newline46mondego>"
"7463splitHere46","12877946splitHere46","dialog.hide();<newline46mondego>"
"7464splitHere46","12878000splitHere46","<doubleQuotes46>hh:mm:ss<doubleQuotes46>.split(<doubleQuotes46>:<doubleQuotes46>).length<newline46mondego>"
"7465splitHere46","12878000splitHere46","split"
"7466splitHere46","12878006splitHere46","short"
"7467splitHere46","12878006splitHere46","@XStreamAsAttribute"
"7468splitHere46","12878006splitHere46","public class Title<newline46mondego>{<newline46mondego>  @XStreamAlias(<doubleQuotes46>short<doubleQuotes46>)<newline46mondego>  @XStreamAsAttribute<newline46mondego>  public String Short;<newline46mondego>}<newline46mondego>"
"7469splitHere46","12878006splitHere46","xstream.processAnnotations(Title.class)"
"7470splitHere46","12878006splitHere46","fromXML"
"7471splitHere46","12878006splitHere46","autocomplete_item"
"7472splitHere46","12878006splitHere46","@XStreamImplicit"
"7473splitHere46","12878006splitHere46","public class AutoCompleteList<newline46mondego>{<newline46mondego>  public String url_template;<newline46mondego><newline46mondego>  @XStreamImplicit(itemFieldName=<doubleQuotes46>autocomplete_item<doubleQuotes46>)<newline46mondego>  public List<AutocompleteItem> autocomplete_item;<newline46mondego>}<newline46mondego>"
"7474splitHere46","12878006splitHere46","xstream.processAnnotations(AutoCompleteList.class)"
"7475splitHere46","12878006splitHere46","fromXML"
"7476splitHere46","12878014splitHere46","DefaultHttpClient httpClient = new DefaultHttpClient();<newline46mondego>HttpPost postRequest = new HttpPost(<doubleQuotes46>http://localhost:8080/TESTINGrestful/rest/polls/comment<doubleQuotes46>);<newline46mondego>StringEntity input = new StringEntity(<doubleQuotes46><Comment>...</Comment><doubleQuotes46>);<newline46mondego>input.setContentType(<doubleQuotes46>text/xml<doubleQuotes46>);<newline46mondego>postRequest.setEntity(input);<newline46mondego>HttpResponse response = httpClient.execute(postRequest);<newline46mondego>"
"7477splitHere46","12878047splitHere46","super"
"7478splitHere46","12878047splitHere46","class A { <newline46mondego>  public int x;<newline46mondego>  A () { <newline46mondego>     x = 1;<newline46mondego>  }<newline46mondego>}<newline46mondego>class B extends A { <newline46mondego>  B() { <newline46mondego>  }<newline46mondego>}<newline46mondego>"
"7479splitHere46","12878047splitHere46","B"
"7480splitHere46","12878047splitHere46","super()"
"7481splitHere46","12878047splitHere46","x=1"
"7482splitHere46","12878098splitHere46","Army"
"7483splitHere46","12878098splitHere46","public static Object[] soldiers = new Object[] {};<newline46mondego>"
"7484splitHere46","12878098splitHere46","soldiers"
"7485splitHere46","12878098splitHere46","soldiers[soldiers.length] = new Soldier(this);<newline46mondego>"
"7486splitHere46","12878098splitHere46","soldiers.length"
"7487splitHere46","12878098splitHere46","0"
"7488splitHere46","12878098splitHere46","soldiers.length-1"
"7489splitHere46","12878098splitHere46","soldiers"
"7490splitHere46","12878098splitHere46","ArrayList"
"7491splitHere46","12878098splitHere46","ArrayList"
"7492splitHere46","12878098splitHere46","ArrayList.add()"
"7493splitHere46","12878127splitHere46","Interval"
"7494splitHere46","12878127splitHere46","import static org.joda.time.DateTimeConstants.NOVEMBER;<newline46mondego>import static org.joda.time.DateTimeConstants.WEDNESDAY;<newline46mondego>import static org.joda.time.DateTimeFieldType.dayOfMonth;<newline46mondego>import static org.joda.time.DateTimeFieldType.dayOfWeek;<newline46mondego>import static org.joda.time.DateTimeFieldType.hourOfDay;<newline46mondego>import static org.joda.time.DateTimeFieldType.monthOfYear;<newline46mondego>import static org.joda.time.Duration.standardDays;<newline46mondego>import static org.joda.time.Duration.standardHours;<newline46mondego><newline46mondego>import org.joda.time.Duration;<newline46mondego>import org.joda.time.Partial;<newline46mondego><newline46mondego>public class Periods {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego><newline46mondego>        // <doubleQuotes46>1 hour<doubleQuotes46> (all/any 1 hour period)<newline46mondego>        Duration d1 = standardHours(1);<newline46mondego>        Partial p1 = new Partial();<newline46mondego><newline46mondego>        // <doubleQuotes46>1 hour, starting 1pm<doubleQuotes46> (all/any 1 hour periods that start at 1pm)<newline46mondego>        Duration d2 = standardHours(1);<newline46mondego>        Partial p2 = new Partial().withField(hourOfDay(), 13);<newline46mondego><newline46mondego>        // <doubleQuotes46>1 hour, starting 1pm, on Wednesdays<doubleQuotes46> (all/any 1 hour periods that start at 1pm on Eednesdays)<newline46mondego>        Duration d3 = standardHours(1);<newline46mondego>        Partial p4 = new Partial().withField(hourOfDay(), 13).withField(hourOfDay(), 1).withField(dayOfWeek(), WEDNESDAY);<newline46mondego><newline46mondego>        // <doubleQuotes46>1 hour, starting 1pm, on Wednesday in November<doubleQuotes46><newline46mondego>        Duration d4 = standardHours(1);<newline46mondego>        Partial p3 = new Partial().withField(hourOfDay(), 13).withField(hourOfDay(), 1).withField(dayOfWeek(), WEDNESDAY).withField(monthOfYear(), NOVEMBER);<newline46mondego><newline46mondego>        // <doubleQuotes46>1 week, starting the first week in November<doubleQuotes46><newline46mondego>        Duration d5 = standardDays(7);<newline46mondego>        Partial p5 = new Partial().withField(dayOfMonth(), 1).withField(monthOfYear(), NOVEMBER);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"7495splitHere46","12878285splitHere46","Exception in thread <doubleQuotes46>AWT-EventQueue-0<doubleQuotes46> java.lang.IndexOutOfBoundsException<newline46mondego>at TestClass$1.getValueAt(TestClass.java:36)<newline46mondego>at javax.swing.JTable.getValueAt(JTable.java:2686)<newline46mondego>at javax.swing.JTable.prepareRenderer(JTable.java:5703)<newline46mondego>at javax.swing.plaf.basic.BasicTableUI.paintCell(BasicTableUI.java:2072)<newline46mondego>at javax.swing.plaf.basic.BasicTableUI.paintCells(BasicTableUI.java:1974)<newline46mondego>at javax.swing.plaf.basic.BasicTableUI.paint(BasicTableUI.java:1770)<newline46mondego>at javax.swing.plaf.ComponentUI.update(ComponentUI.java:143)<newline46mondego>at javax.swing.JComponent.paintComponent(JComponent.java:752)<newline46mondego>at javax.swing.JComponent.paint(JComponent.java:1029)<newline46mondego>at javax.swing.JComponent.paintChildren(JComponent.java:862)<newline46mondego>at javax.swing.JComponent.paint(JComponent.java:1038)<newline46mondego>at javax.swing.JViewport.paint(JViewport.java:747)<newline46mondego>at javax.swing.JComponent.paintChildren(JComponent.java:862)<newline46mondego>at javax.swing.JComponent.paint(JComponent.java:1038)<newline46mondego>at javax.swing.JComponent.paintChildren(JComponent.java:862)<newline46mondego>at javax.swing.JComponent.paint(JComponent.java:1038)<newline46mondego>at javax.swing.JComponent.paintChildren(JComponent.java:862)<newline46mondego>at javax.swing.JComponent.paint(JComponent.java:1038)<newline46mondego>at javax.swing.JLayeredPane.paint(JLayeredPane.java:567)<newline46mondego>at javax.swing.JComponent.paintChildren(JComponent.java:862)<newline46mondego>at javax.swing.JComponent.paintToOffscreen(JComponent.java:5131)<newline46mondego>at javax.swing.RepaintManager$PaintManager.paintDoubleBuffered(RepaintManager.java:1491)<newline46mondego>at javax.swing.RepaintManager$PaintManager.paint(RepaintManager.java:1422)<newline46mondego>at javax.swing.RepaintManager.paint(RepaintManager.java:1225)<newline46mondego>at javax.swing.JComponent.paint(JComponent.java:1015)<newline46mondego>at java.awt.GraphicsCallback$PaintCallback.run(GraphicsCallback.java:21)<newline46mondego>at sun.awt.SunGraphicsCallback.runOneComponent(SunGraphicsCallback.java:60)<newline46mondego>at sun.awt.SunGraphicsCallback.runComponents(SunGraphicsCallback.java:97)<newline46mondego>at java.awt.Container.paint(Container.java:1778)<newline46mondego>at java.awt.Window.paint(Window.java:3379)<newline46mondego>"
"7496splitHere46","12878356splitHere46","randNumAscii >= 65 && randNumAscii <= 90 || randNumAscii >= 97 && randNumAscii <= 122"
"7497splitHere46","12878364splitHere46","RMI"
"7498splitHere46","12878364splitHere46","192.168.0.110"
"7499splitHere46","12878364splitHere46","at java.rmi.Naming.rebind(Naming.java:177)<newline46mondego>"
"7500splitHere46","12878364splitHere46","Naming.rebind()"
"7501splitHere46","12878379splitHere46","TokenParser"
"7502splitHere46","12878379splitHere46","ThingBuilder"
"7503splitHere46","12878379splitHere46","TokenParser"
"7504splitHere46","12878379splitHere46","TokenParser"
"7505splitHere46","12878379splitHere46","ThingBuilder"
"7506splitHere46","12878379splitHere46","public interface TokenParser<T> {<newline46mondego>      public T parse(String token);<newline46mondego>  }<newline46mondego>"
"7507splitHere46","12878379splitHere46","public interface RowBuilder<R><newline46mondego>      public R buildRow(List<String> tokens);<newline46mondego>  }<newline46mondego>"
"7508splitHere46","12878379splitHere46","public class GenericRowBuilder<R> implements RowBuilder<R> {<newline46mondego>      public GenericRowBuilder(Class<R> clazz, TokenParser<?>[] parsers) {<newline46mondego>          // Extract the return types of the reified parse objects' `parse` <newline46mondego>          // methods, and use this to locate a matching `Constructor<R>` in <newline46mondego>          // `clazz`.  If there isn't one, throw an exception.<newline46mondego>          this.clazz = clazz;<newline46mondego>          this.parsers = parsers;<newline46mondego>      }<newline46mondego>      public R parse(List<String> tokens) {<newline46mondego>          // Check number of tokens matches number of parsers.<newline46mondego>          // Parse each token with corresponding parsers.<newline46mondego>          // Use the `Constructor<R>` found above to create the instance of `R`<newline46mondego>      }<newline46mondego>  }<newline46mondego>"
"7509splitHere46","12878379splitHere46","RowBuilder<MyRow> rb = new GenericRowBuilder<MyRow>(MyRow.class,<newline46mondego>      new TokenParser<?>[]{<newline46mondego>          new IntTokenParser(), new FloatTokenParser(), new CustomTokenParser});<newline46mondego>"
"7510splitHere46","12878379splitHere46","R"
"7511splitHere46","12878456splitHere46","patientReference = (Patient) (TreatmentRoomQueue.peekFront());<newline46mondego>"
"7512splitHere46","12878456splitHere46","TreatmentRoomQueue"
"7513splitHere46","12878456splitHere46","Patient"
"7514splitHere46","12878456splitHere46","peekFront()"
"7515splitHere46","12878456splitHere46","Patient"
"7516splitHere46","12878456splitHere46","private Node peekFront()<newline46mondego>"
"7517splitHere46","12878456splitHere46","public ClassType peekFront()<newline46mondego>{<newline46mondego>    return frontQueueNodeRef.classTypeObjectRef;<newline46mondego>}<newline46mondego>"
"7518splitHere46","12878456splitHere46","classTypeObjectRef"
"7519splitHere46","12878456splitHere46","private"
"7520splitHere46","12878456splitHere46","public"
"7521splitHere46","12878456splitHere46","peekFront"
"7522splitHere46","12878627splitHere46","public class DoubleArrayWritable implements Writable {<newline46mondego>    private double[] data;<newline46mondego><newline46mondego>    public DoubleArrayWritable() {<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    public DoubleArrayWritable(double[] data) {<newline46mondego>        this.data = data;<newline46mondego>    }<newline46mondego><newline46mondego>    public double[] getData() {<newline46mondego>        return data;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setData(double[] data) {<newline46mondego>        this.data = data;<newline46mondego>    }<newline46mondego><newline46mondego>    public void write(DataOutput out) throws IOException {<newline46mondego>        int length = 0;<newline46mondego>        if(data != null) {<newline46mondego>            length = data.length;<newline46mondego>        }<newline46mondego><newline46mondego>        out.writeInt(length);<newline46mondego><newline46mondego>        for(int i = 0; i < length; i++) {<newline46mondego>            out.writeDouble(data[i]);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public void readFields(DataInput in) throws IOException {<newline46mondego>        int length = in.readInt();<newline46mondego><newline46mondego>        data = new double[length];<newline46mondego><newline46mondego>        for(int i = 0; i < length; i++) {<newline46mondego>            data[i] = in.readDouble();<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7523splitHere46","12878645splitHere46","int totalSeconds;<newline46mondego>...<newline46mondego>int seconds = totalSeconds % 60;<newline46mondego>int minutes = (totalSeconds / 60) % 60;<newline46mondego>int hours = (totalSeconds / 3600);<newline46mondego>"
"7524splitHere46","12878774splitHere46","public class JsonDateDeserializer implements JsonDeserializer<Date> {<newline46mondego>   public Date deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {<newline46mondego>      String s = json.getAsJsonPrimitive().getAsString();<newline46mondego>      long l = Long.parseLong(s.substring(6, s.length() - 2));<newline46mondego>      Date d = new Date(l);<newline46mondego>      return d; <newline46mondego>   } <newline46mondego>}<newline46mondego>"
"7525splitHere46","12878774splitHere46","Gson gson = new GsonBuilder().registerTypeAdapter(Date.class, new JsonDateDeserializer()).create();<newline46mondego>"
"7526splitHere46","12878852splitHere46","String lastKey = null;<newline46mondego>for (String str : array) {<newline46mondego>   String[] parts = str.split(<doubleQuotes46> <doubleQuotes46>);<newline46mondego>   if (parts[0].equals(lastKey)) {<newline46mondego>       System.out.print(<doubleQuotes46> <doubleQuotes46>);<newline46mondego>   } else if (lastKey != null) {<newline46mondego>       System.out.println();<newline46mondego>   }<newline46mondego>   System.out.print(parts[1]);<newline46mondego>   lastKey = parts[0];<newline46mondego>}<newline46mondego>System.out.println();<newline46mondego>"
"7527splitHere46","12878887splitHere46","kind of error"
"7528splitHere46","12878887splitHere46","Notebook[] labComputers = new Notebook[10];<newline46mondego>"
"7529splitHere46","12878887splitHere46","labComputers[0]  = new Notebook(); // Fine<newline46mondego>labComputers[1]  = new Computer(); // Compilation error <newline46mondego>"
"7530splitHere46","12878887splitHere46","Computer[] notebooks = new Notebook[10];<newline46mondego>notebooks[0] = new Notebook();<newline46mondego>notebooks[1] = new Computer(); // <--- ArrayStoreException<newline46mondego>"
"7531splitHere46","12878887splitHere46","covarant"
"7532splitHere46","12878887splitHere46","reified"
"7533splitHere46","12878887splitHere46","Sub"
"7534splitHere46","12878887splitHere46","Super"
"7535splitHere46","12878887splitHere46","Sub[]"
"7536splitHere46","12878887splitHere46","Super[]"
"7537splitHere46","12878988splitHere46","IOUtils"
"7538splitHere46","12878988splitHere46","HttpEntity"
"7539splitHere46","12878988splitHere46","DefaultHttpClient httpClient = new DefaultHttpClient();<newline46mondego>HttpPost postRequest = new HttpPost(<doubleQuotes46>http://search.twitter.com/search.atom?q=elkstein&count=5<doubleQuotes46>);<newline46mondego>HttpResponse response = httpClient.execute(postRequest);<newline46mondego><newline46mondego>HttpEntity entity = response.getEntity();<newline46mondego>String body = IOUtils.toString(entity.getContent(), <doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>"
"7540splitHere46","12879004splitHere46","next()"
"7541splitHere46","12879004splitHere46","getText()"
"7542splitHere46","12879004splitHere46","getElementText()"
"7543splitHere46","12879025splitHere46","import java.awt.BorderLayout;<newline46mondego>import java.awt.Component;<newline46mondego>import java.awt.Container;<newline46mondego>import java.awt.Dimension;<newline46mondego>import java.util.LinkedList;<newline46mondego><newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JScrollPane;<newline46mondego>import javax.swing.JTextArea;<newline46mondego><newline46mondego>import org.jdesktop.swingx.MultiSplitPane;<newline46mondego>import org.jdesktop.swingx.MultiSplitLayout.*;<newline46mondego><newline46mondego>@SuppressWarnings(<doubleQuotes46>serial<doubleQuotes46>)<newline46mondego>class MultiSplitPaneTest extends JFrame {<newline46mondego>    private final static String sampleText;<newline46mondego><newline46mondego>    static {<newline46mondego>        String text = <doubleQuotes46>I'm working on a text editor in which the user is free to divide the editor window vertically or horizontally any number of times (ie, into any number of panes).\n<doubleQuotes46>;<newline46mondego>        StringBuilder sb = new StringBuilder();<newline46mondego>        for (int i = 0; i < 10; i++) {<newline46mondego>            sb.append(text);<newline46mondego>        }<newline46mondego>        sampleText = sb.toString();<newline46mondego>    }<newline46mondego><newline46mondego>    private class MyScrollPane extends JScrollPane {<newline46mondego>        public MyScrollPane(final Component view) {<newline46mondego>            super(view);<newline46mondego>        }<newline46mondego>        @Override<newline46mondego>        public Dimension getPreferredSize() {<newline46mondego>            return new Dimension(1440, 900);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public MultiSplitPaneTest() {<newline46mondego>        // The application opens with a window containing a single pane (a single text area).<newline46mondego><newline46mondego>        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego><newline46mondego>        Container cp = getContentPane();<newline46mondego>        cp.setLayout(new BorderLayout());<newline46mondego><newline46mondego>        JTextArea ta1 = new JTextArea();<newline46mondego>        ta1.setText(<doubleQuotes46>TEXT AREA 1\n<doubleQuotes46> + sampleText);<newline46mondego><newline46mondego>        MyScrollPane sp1 = new MyScrollPane(ta1);<newline46mondego>        sp1.setViewportView(ta1);<newline46mondego><newline46mondego>        cp.add(sp1, BorderLayout.CENTER);<newline46mondego><newline46mondego>        pack();<newline46mondego>        setLocationRelativeTo(null);<newline46mondego>        setVisible(true);<newline46mondego><newline46mondego>        // -------------------------------------------------<newline46mondego><newline46mondego>        // Let's say the user splits the window horizontally, creating a second pane.<newline46mondego>        // We'll simulate that with the following code.<newline46mondego><newline46mondego>        JTextArea ta2 = new JTextArea();<newline46mondego>        ta2.setText(<doubleQuotes46>TEXT AREA 2\n<doubleQuotes46> + sampleText);<newline46mondego><newline46mondego>        MyScrollPane sp2 = new MyScrollPane(ta2);<newline46mondego>        sp2.setViewportView(ta2);<newline46mondego><newline46mondego>        Leaf leaf1 = new Leaf(<doubleQuotes46>1<doubleQuotes46>);<newline46mondego>        Leaf leaf2 = new Leaf(<doubleQuotes46>2<doubleQuotes46>);<newline46mondego><newline46mondego>        LinkedList<Node> rootChildren = new LinkedList<>();<newline46mondego>        rootChildren.add(leaf1);<newline46mondego>        rootChildren.add(new Divider());<newline46mondego>        rootChildren.add(leaf2);<newline46mondego><newline46mondego>        Split root = new Split();<newline46mondego>        root.setRowLayout(true);<newline46mondego>        root.setChildren(rootChildren);<newline46mondego><newline46mondego>        MultiSplitPane multiSplitPane = new MultiSplitPane();<newline46mondego>        multiSplitPane.getMultiSplitLayout().setModel(root);<newline46mondego><newline46mondego>        multiSplitPane.add(sp1, <doubleQuotes46>1<doubleQuotes46>);<newline46mondego>        multiSplitPane.add(sp2, <doubleQuotes46>2<doubleQuotes46>);<newline46mondego><newline46mondego>        cp.remove(sp1);<newline46mondego>        cp.add(multiSplitPane, BorderLayout.CENTER);<newline46mondego><newline46mondego>        // --------------------------------------------------<newline46mondego><newline46mondego>        // Let's say the user splits the window horizontally again, creating a new pane on the very left.<newline46mondego><newline46mondego>        JTextArea ta3 = new JTextArea();<newline46mondego>        ta3.setText(<doubleQuotes46>TEXT AREA 3\n<doubleQuotes46> + sampleText);<newline46mondego><newline46mondego>        MyScrollPane sp3 = new MyScrollPane(ta3);<newline46mondego>        sp3.setViewportView(ta3);<newline46mondego><newline46mondego>        Leaf leaf3 = new Leaf(<doubleQuotes46>3<doubleQuotes46>);<newline46mondego><newline46mondego>        rootChildren.add(0, leaf3);<newline46mondego>        rootChildren.add(1, new Divider());<newline46mondego><newline46mondego>        root.setChildren(rootChildren);<newline46mondego><newline46mondego>        multiSplitPane.add(sp3, <doubleQuotes46>3<doubleQuotes46>);<newline46mondego><newline46mondego>        multiSplitPane.revalidate();<newline46mondego><newline46mondego>        // --------------------------------------------------<newline46mondego><newline46mondego>        // Let's say the user decides to remove the center pane (that is, the first pane that we started with).<newline46mondego><newline46mondego>        rootChildren.remove(2); // Remove leaf1.<newline46mondego>        rootChildren.remove(2); // Remove the divider following leaf1.<newline46mondego><newline46mondego>        root.setChildren(rootChildren);<newline46mondego><newline46mondego>        multiSplitPane.remove(sp1);<newline46mondego><newline46mondego>        multiSplitPane.revalidate();<newline46mondego><newline46mondego>        // --------------------------------------------------<newline46mondego><newline46mondego>        // Let's say the user creates another pane, this time splitting the pane on the right vertically.<newline46mondego><newline46mondego>        rootChildren.remove(leaf2);<newline46mondego><newline46mondego>        JTextArea ta4 = new JTextArea();<newline46mondego>        ta4.setText(<doubleQuotes46>TEXT AREA 4\n<doubleQuotes46> + sampleText);<newline46mondego><newline46mondego>        MyScrollPane sp4 = new MyScrollPane(ta4);<newline46mondego>        sp4.setViewportView(ta4);<newline46mondego><newline46mondego>        Leaf leaf4 = new Leaf(<doubleQuotes46>4<doubleQuotes46>);<newline46mondego><newline46mondego>        LinkedList<Node> branchChildren = new LinkedList<>();<newline46mondego>        branchChildren.add(leaf2);<newline46mondego>        branchChildren.add(new Divider());<newline46mondego>        branchChildren.add(leaf4);<newline46mondego><newline46mondego>        Split branch = new Split();<newline46mondego>        branch.setRowLayout(false);<newline46mondego>        branch.setChildren(branchChildren);<newline46mondego><newline46mondego>        rootChildren.add(branch);<newline46mondego><newline46mondego>        root.setChildren(rootChildren);<newline46mondego><newline46mondego>        multiSplitPane.add(sp4, <doubleQuotes46>4<doubleQuotes46>);<newline46mondego><newline46mondego>        multiSplitPane.revalidate();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7544splitHere46","12879068splitHere46","System.out.print();<newline46mondego>"
"7545splitHere46","12879068splitHere46","println();"
"7546splitHere46","12879305splitHere46","readLine"
"7547splitHere46","12879305splitHere46","out.print(<doubleQuotes46>TIME<doubleQuotes46>);"
"7548splitHere46","12879305splitHere46","out.println(<doubleQuotes46>TIME<doubleQuotes46>);"
"7549splitHere46","12879305splitHere46","ClientWorker"
"7550splitHere46","12879327splitHere46","intent = new Intent(Intent.ACTION_VIEW, Uri.parse(<doubleQuotes46>http://images.google.com/search?num=10&hl=en&site=&tbm=isch&source=hp‌​&biw=1366&bih=667&q=cars&oq=cars&gs_l=img.3..0l10.748.1058.0.1306.4.4.0.0.0.0.165‌​.209.2j1.3.0...0.0...1ac.1.8RNsNEqlcZc<doubleQuotes46>));"
"7551splitHere46","12879327splitHere46","q='Your_search_text'"
"7552splitHere46","12879355splitHere46","Address"
"7553splitHere46","12879355splitHere46","Room"
"7554splitHere46","12879355splitHere46","address_id"
"7555splitHere46","12879355splitHere46","customerEmailAddress"
"7556splitHere46","12879355splitHere46","rooms"
"7557splitHere46","12879355splitHere46","Address"
"7558splitHere46","12879355splitHere46","One-To-Many"
"7559splitHere46","12879355splitHere46","cascade"
"7560splitHere46","12879355splitHere46","All"
"7561splitHere46","12879355splitHere46","address"
"7562splitHere46","12879355splitHere46","Room"
"7563splitHere46","12879355splitHere46","Many-To-One"
"7564splitHere46","12879355splitHere46","addRoom"
"7565splitHere46","12879355splitHere46","Address"
"7566splitHere46","12879355splitHere46","public void addRoom(Room room){<newline46mondego>       if(this.rooms == null){<newline46mondego>           this.rooms = new ArrayList<Room>();<newline46mondego>       }<newline46mondego>       room.setAddress(this);<newline46mondego>       this.rooms.add(room);<newline46mondego>  } <newline46mondego>"
"7567splitHere46","12879355splitHere46","Address"
"7568splitHere46","12879355splitHere46","room"
"7569splitHere46","12879355splitHere46","room"
"7570splitHere46","12879355splitHere46","address"
"7571splitHere46","12879372splitHere46","0 2<newline46mondego>1 3<newline46mondego>"
"7572splitHere46","12879372splitHere46","0 3<newline46mondego>1 2<newline46mondego>"
"7573splitHere46","12879447splitHere46","show()"
"7574splitHere46","12879447splitHere46","setVisible()"
"7575splitHere46","12879511splitHere46","@Stateless<newline46mondego>public class MyAccountsBean {<newline46mondego><newline46mondego>    @EJB SomeOtherBeanClass someOtherBean;<newline46mondego>    @Resource UserTransaction jtaTx;<newline46mondego>    @PersistenceContext(unitName=<doubleQuotes46>AccountsPU<doubleQuotes46>) EntityManager em;<newline46mondego>    @Resource QueueConnectionFactory accountsJMSfactory;<newline46mondego>    @Resource Queue accountPaymentDestinationQueue;<newline46mondego><newline46mondego>    public List<Account> processAccounts(DepartmentId id) {<newline46mondego>        // Use all of above instance variables with no additional setup.<newline46mondego>        // They automatically partake in a (server coordinated) JTA transaction<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7576splitHere46","12879511splitHere46","@EJB MyAccountsBean accountsBean;    <newline46mondego>"
"7577splitHere46","12879525splitHere46","SamplesPerPixel"
"7578splitHere46","12879525splitHere46","SamplesPerPixel"
"7579splitHere46","12879525splitHere46","SamplesPerPixel"
"7580splitHere46","12879574splitHere46","<doubleQuotes46>\n(?=\\d+\\n)<doubleQuotes46><newline46mondego>"
"7581splitHere46","12879574splitHere46","public static void main(String[] args) {<newline46mondego>    String input = <doubleQuotes46>6\n0 1 1 0 0\n1 1 1 1 0\n0 0 0 1 0\n4\n1 1 0 1 0\n0 0 0 1 0\n1 1 0 1 0\n0 1 1 0 0<doubleQuotes46>;<newline46mondego>    String[] parts = input.split(<doubleQuotes46>\n(?=\\d+\\n)<doubleQuotes46>);<newline46mondego>    System.out.println(Arrays.toString(parts));<newline46mondego>}<newline46mondego>"
"7582splitHere46","12879574splitHere46","[6<newline46mondego>0 1 1 0 0<newline46mondego>1 1 1 1 0<newline46mondego>0 0 0 1 0, 4<newline46mondego>1 1 0 1 0<newline46mondego>0 0 0 1 0<newline46mondego>1 1 0 1 0<newline46mondego>0 1 1 0 0]<newline46mondego>"
"7583splitHere46","12879583splitHere46","<newline46mondego><newline46mondego>    public class ImageFileFilter implements FileFilter<newline46mondego>    {<newline46mondego>      private final String[] okFileExtensions = <newline46mondego>        new String[] {<doubleQuotes46>jpg<doubleQuotes46>, <doubleQuotes46>png<doubleQuotes46>, <doubleQuotes46>gif<doubleQuotes46>};<newline46mondego><newline46mondego>      public boolean accept(File file)<newline46mondego>      {<newline46mondego>        for (String extension : okFileExtensions)<newline46mondego>        {<newline46mondego>          if (file.getName().toLowerCase().endsWith(extension))<newline46mondego>          {<newline46mondego>            return true;<newline46mondego>          }<newline46mondego>        }<newline46mondego>        return false;<newline46mondego>      }<newline46mondego>    }<newline46mondego><newline46mondego>"
"7584splitHere46","12879583splitHere46","<newline46mondego><newline46mondego><newline46mondego>     public class FileFilterTest {<newline46mondego>        public static void main(String[] args) {<newline46mondego>            File dir = new File(<doubleQuotes46>D:\\dev\\css-templates\\cms-admin<doubleQuotes46>);<newline46mondego>            BlockingQueue blockingQueue = new ArrayBlockingQueue(5);<newline46mondego>            FileCrawler fileCrawler = new FileCrawler(blockingQueue,<newline46mondego>                    new ImageFileFilter(), dir);<newline46mondego>            new Thread(fileCrawler).start();<newline46mondego><newline46mondego>            FileIndexer indexer = new FileIndexer(blockingQueue);<newline46mondego>            new Thread(indexer).start();<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>"
"7585splitHere46","12879583splitHere46","<newline46mondego><newline46mondego><newline46mondego>     public class FileCrawler implements Runnable {<newline46mondego>            private final BlockingQueue fileQueue;<newline46mondego>            private ConcurrentSkipListSet indexedFiles = new ConcurrentSkipListSet();<newline46mondego>            private final FileFilter fileFilter;<newline46mondego>            private final File root;<newline46mondego>            private final ExecutorService exec = Executors.newCachedThreadPool();<newline46mondego><newline46mondego>            public FileCrawler(BlockingQueue fileQueue,<newline46mondego>                               final FileFilter fileFilter,<newline46mondego>                               File root) {<newline46mondego>                this.fileQueue = fileQueue;<newline46mondego>                this.root = root;<newline46mondego>                this.fileFilter = new FileFilter() {<newline46mondego>                    public boolean accept(File f) {<newline46mondego>                        return f.isDirectory() || fileFilter.accept(f);<newline46mondego>                    }<newline46mondego>                };<newline46mondego>            }<newline46mondego><newline46mondego>            public void run() {<newline46mondego><newline46mondego>                    submitCrawlTask(root);<newline46mondego><newline46mondego>            }<newline46mondego><newline46mondego>            private void submitCrawlTask(File f) {<newline46mondego>                CrawlTask crawlTask = new CrawlTask(f);<newline46mondego>                exec.execute(crawlTask);<newline46mondego>            }<newline46mondego><newline46mondego>            private class CrawlTask implements Runnable {<newline46mondego>                private final File file;<newline46mondego><newline46mondego>                CrawlTask(File file ) {<newline46mondego><newline46mondego>                    this.file= file;<newline46mondego>                }<newline46mondego><newline46mondego>             public void run() {        <newline46mondego>                 if(Thread.currentThread().isInterrupted())<newline46mondego>                return;<newline46mondego><newline46mondego>                    File[] entries = file.listFiles(fileFilter);<newline46mondego><newline46mondego>                    if (entries != null) {<newline46mondego>                        for (File entry : entries)<newline46mondego>                            if (entry.isDirectory())<newline46mondego>                                submitCrawlTask(entry);<newline46mondego>                            else if (entry !=null && !indexedFiles.contains(entry)){<newline46mondego>                                indexedFiles.add(entry);<newline46mondego>                                try {<newline46mondego>                                    fileQueue.put(entry);<newline46mondego>                                } catch (InterruptedException e) {<newline46mondego>                                        Thread.currentThread().interrupt();<newline46mondego>                                }<newline46mondego>                            }<newline46mondego>                    }<newline46mondego>                }<newline46mondego>        }<newline46mondego>       }<newline46mondego><newline46mondego>"
"7586splitHere46","12879583splitHere46","<newline46mondego><newline46mondego>        public class FileIndexer implements Runnable {<newline46mondego>        private final BlockingQueue queue;<newline46mondego><newline46mondego>        public FileIndexer(BlockingQueue queue) {<newline46mondego>            this.queue = queue;<newline46mondego>        }<newline46mondego><newline46mondego>        public void run() { <newline46mondego>            try {<newline46mondego>                while (true) {<newline46mondego>                    indexFile(queue.take());<newline46mondego>                }<newline46mondego>            } catch (InterruptedException e) {<newline46mondego>                System.out.println(<doubleQuotes46>Indexer Interrupted<doubleQuotes46>);<newline46mondego>                Thread.currentThread().interrupt();<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        public void indexFile(File file) {<newline46mondego>            // do something with the file...<newline46mondego>            System.out.println(<doubleQuotes46>Indexing File : <doubleQuotes46> + file.getAbsolutePath() + <doubleQuotes46> <doubleQuotes46> + file.getName());<newline46mondego>        };<newline46mondego>    }<newline46mondego><newline46mondego>"
"7587splitHere46","12879689splitHere46","String"
"7588splitHere46","12879689splitHere46","<"
"7589splitHere46","12879689splitHere46","if (Integer.parseInt(myArray[0]) < Integer.parseInt(myArray[1])) {<newline46mondego>        System.out.println(<doubleQuotes46>Minimum number is : <doubleQuotes46> + myArray[0]);<newline46mondego>    } else {<newline46mondego>        System.out.println(<doubleQuotes46>Minimum number is : <doubleQuotes46> + myArray[1]);<newline46mondego>    }<newline46mondego>"
"7590splitHere46","12879711splitHere46","uptime"
"7591splitHere46","12879764splitHere46","public BufferedImage scale(BufferedImage img, int targetWidth, int targetHeight) {<newline46mondego><newline46mondego>    int type = (img.getTransparency() == Transparency.OPAQUE) ? BufferedImage.TYPE_INT_RGB : BufferedImage.TYPE_INT_ARGB;<newline46mondego>    BufferedImage ret = img;<newline46mondego>    BufferedImage scratchImage = null;<newline46mondego>    Graphics2D g2 = null;<newline46mondego><newline46mondego>    int w = img.getWidth();<newline46mondego>    int h = img.getHeight();<newline46mondego><newline46mondego>    int prevW = w;<newline46mondego>    int prevH = h;<newline46mondego><newline46mondego>    do {<newline46mondego>        if (w > targetWidth) {<newline46mondego>            w /= 2;<newline46mondego>            w = (w < targetWidth) ? targetWidth : w;<newline46mondego>        }<newline46mondego><newline46mondego>        if (h > targetHeight) {<newline46mondego>            h /= 2;<newline46mondego>            h = (h < targetHeight) ? targetHeight : h;<newline46mondego>        }<newline46mondego><newline46mondego>        if (scratchImage == null) {<newline46mondego>            scratchImage = new BufferedImage(w, h, type);<newline46mondego>            g2 = scratchImage.createGraphics();<newline46mondego>        }<newline46mondego><newline46mondego>        g2.setRenderingHint(RenderingHints.KEY_INTERPOLATION,<newline46mondego>                RenderingHints.VALUE_INTERPOLATION_BILINEAR);<newline46mondego>        g2.drawImage(ret, 0, 0, w, h, 0, 0, prevW, prevH, null);<newline46mondego><newline46mondego>        prevW = w;<newline46mondego>        prevH = h;<newline46mondego>        ret = scratchImage;<newline46mondego>    } while (w != targetWidth || h != targetHeight);<newline46mondego><newline46mondego>    if (g2 != null) {<newline46mondego>        g2.dispose();<newline46mondego>    }<newline46mondego><newline46mondego>    if (targetWidth != ret.getWidth() || targetHeight != ret.getHeight()) {<newline46mondego>        scratchImage = new BufferedImage(targetWidth, targetHeight, type);<newline46mondego>        g2 = scratchImage.createGraphics();<newline46mondego>        g2.drawImage(ret, 0, 0, null);<newline46mondego>        g2.dispose();<newline46mondego>        ret = scratchImage;<newline46mondego>    }<newline46mondego><newline46mondego>    return ret;<newline46mondego><newline46mondego>}<newline46mondego>"
"7592splitHere46","12879764splitHere46","image"
"7593splitHere46","12879764splitHere46","ByteArrayOutputStream os = new ByteArrayOutputStream();<newline46mondego>ImageWriter writer = (ImageWriter) ImageIO.getImageWritersByFormatName(<doubleQuotes46>jpeg<doubleQuotes46>).next();<newline46mondego><newline46mondego>ImageWriteParam param = writer.getDefaultWriteParam();<newline46mondego>param.setCompressionMode(ImageWriteParam.MODE_EXPLICIT);<newline46mondego>param.setCompressionQuality(0.2f); // Change this, float between 0.0 and 1.0<newline46mondego><newline46mondego>writer.setOutput(ImageIO.createImageOutputStream(os));<newline46mondego>writer.write(null, new IIOImage(image, null, null), param);<newline46mondego>writer.dispose();<newline46mondego>"
"7594splitHere46","12879764splitHere46","os"
"7595splitHere46","12879764splitHere46","ByteArrayOutputStream"
"7596splitHere46","12879764splitHere46","String base64 = Base64.encode(os.toByteArray());<newline46mondego>"
"7597splitHere46","12879814splitHere46","Comparator"
"7598splitHere46","12879814splitHere46","Experiment"
"7599splitHere46","12879814splitHere46","HashMap"
"7600splitHere46","12879860splitHere46","nextInt()"
"7601splitHere46","12879860splitHere46","nextInt(100)<newline46mondego>"
"7602splitHere46","12879860splitHere46","public static int genRandom(){<newline46mondego>  return new Random().nextInt(100);// or may be cache random instance<newline46mondego>}<newline46mondego>"
"7603splitHere46","12879941splitHere46","ASTRewriter"
"7604splitHere46","12879941splitHere46","// get the ast rewriter<newline46mondego>final ASTRewrite rewriter = ASTRewrite.create(ast);<newline46mondego>// get the current document source<newline46mondego>final Document document = new Document(unit.getSource());<newline46mondego>// compute the edits you have made to the compilation unit<newline46mondego>final TextEdit edits = rewriter.rewriteAST();<newline46mondego>// apply the edits to the document<newline46mondego>edits.apply(document);<newline46mondego>// get the new source<newline46mondego>String newSource = document.get();<newline46mondego>// now write this source to some other file.<newline46mondego>"
"7605splitHere46","12879941splitHere46","File file = new File(destFile);<newline46mondego>FileUtils.writeStringToFile(File file, String newSource) <newline46mondego>"
"7606splitHere46","12879943splitHere46","Platform.runLater(java.lang.Runnable runnable)"
"7607splitHere46","12879943splitHere46","new Thread(task).start();"
"7608splitHere46","12879943splitHere46","Task task = new Task<Void>() {<newline46mondego>    @Override public Void run() {<newline46mondego>        static final int max = 1000000;<newline46mondego>        for (int i=1; i<=max; i++) {<newline46mondego>            updateProgress(i, max);<newline46mondego>        }<newline46mondego>        return null;<newline46mondego>    }<newline46mondego>};<newline46mondego>ProgressBar bar = new ProgressBar();<newline46mondego>bar.progressProperty().bind(task.progressProperty());<newline46mondego>new Thread(task).start();<newline46mondego>"
"7609splitHere46","12879943splitHere46","task.stateProperty().addListener(new ChangeListener<Worker.State>() {<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void changed(ObservableValue<? extends State> observable,<newline46mondego>                State oldValue, Worker.State newState) {<newline46mondego>            if(newState==Worker.State.SUCCEEDED){<newline46mondego>                //doSomething()<newline46mondego>            }<newline46mondego>        }<newline46mondego>    });<newline46mondego>"
"7610splitHere46","12879991splitHere46","Widen"
"7611splitHere46","12879991splitHere46","Box"
"7612splitHere46","12879991splitHere46","boxing and widening"
"7613splitHere46","12879991splitHere46","Object"
"7614splitHere46","12879991splitHere46","Object"
"7615splitHere46","12879991splitHere46","Integer"
"7616splitHere46","12879991splitHere46","Object"
"7617splitHere46","12879991splitHere46","int"
"7618splitHere46","12879991splitHere46","Number"
"7619splitHere46","12879991splitHere46","Integer"
"7620splitHere46","12879991splitHere46","public static void test(Integer...i)<newline46mondego><newline46mondego>public static void test(Float...f)<newline46mondego>"
"7621splitHere46","12879991splitHere46","smallest"
"7622splitHere46","12879991splitHere46","int"
"7623splitHere46","12879991splitHere46","Object"
"7624splitHere46","12879991splitHere46","Integer"
"7625splitHere46","12879991splitHere46","int"
"7626splitHere46","12879991splitHere46","Long"
"7627splitHere46","12879991splitHere46","Widened"
"7628splitHere46","12879991splitHere46","Boxed"
"7629splitHere46","12879991splitHere46","Long"
"7630splitHere46","12879991splitHere46","Integer"
"7631splitHere46","12879991splitHere46","var-args"
"7632splitHere46","12879991splitHere46","public static void test(int...i)<newline46mondego>public static void test(float...f)<newline46mondego>"
"7633splitHere46","12879991splitHere46","test(1, 2)"
"7634splitHere46","12879991splitHere46","rule 1"
"7635splitHere46","12879991splitHere46","var-args"
"7636splitHere46","12879991splitHere46","public static void test(int i)<newline46mondego>public static void test(float f)<newline46mondego>"
"7637splitHere46","12879991splitHere46","test(1)"
"7638splitHere46","12879991splitHere46","int"
"7639splitHere46","12879991splitHere46","JLS - Method Invocation Conversion"
"7640splitHere46","12880056splitHere46","char[][] array = new char[outerArraySize][];<newline46mondego>for (int i = 0; i < outerArraySize; i++) {<newline46mondego>    array[i] = new char[innerArraySize[i]];<newline46mondego>}<newline46mondego>"
"7641splitHere46","12880142splitHere46","import java.lang.Math;<newline46mondego><newline46mondego>public class Homework2 {<newline46mondego>public static void main(String[] args){<newline46mondego><newline46mondego>    int d1 = (int) (Math.random()*(10-3+1)+3);<newline46mondego>    int d2 = (int) (Math.random()*(10-3+1)+3);<newline46mondego><newline46mondego>    double doubMatrix1[][] = new double[d1][d2];<newline46mondego>    double doubMatrix2[][];<newline46mondego>    double doubMatrix3[][];<newline46mondego><newline46mondego><newline46mondego>}<newline46mondego>}<newline46mondego>"
"7642splitHere46","12880245splitHere46","int"
"7643splitHere46","12880245splitHere46","T = int"
"7644splitHere46","12880245splitHere46","public int maxSum() {<newline46mondego>    /* case 1 */<newline46mondego>    if(left == null && right == null)<newline46mondego>        return data;<newline46mondego><newline46mondego>    /* case 2 */<newline46mondego>    if(right == null)<newline46mondego>        return data + left.maxSum();<newline46mondego>    else if(left == null)<newline46mondego>        return data + right.maxSum();<newline46mondego><newline46mondego>    /* case 3 */<newline46mondego>    return Math.max(data + left.maxSum(), data + right.maxSum());<newline46mondego>}<newline46mondego>"
"7645splitHere46","12880280splitHere46","Dialect dialect= Dialect.getDialect();<newline46mondego>       //<-- compare against the expected dailect classes<newline46mondego>       if(dialect instanceof OracleDialect){  <newline46mondego>           //your database is oracle<newline46mondego>       }else if(dialect instanceof HSQLDialect){<newline46mondego>        //<-- compare against the expected dailect classes<newline46mondego>           //your database is HSQL<newline46mondego>       }<newline46mondego>"
"7646splitHere46","12880282splitHere46","Options = null;<newline46mondego>Labels = null;<newline46mondego>"
"7647splitHere46","12880303splitHere46","wait_delay"
"7648splitHere46","12880303splitHere46","critical_requests"
"7649splitHere46","12880303splitHere46","ActionListener"
"7650splitHere46","12880303splitHere46","Timer"
"7651splitHere46","12880303splitHere46","Timer"
"7652splitHere46","12880303splitHere46","Timer"
"7653splitHere46","12880303splitHere46","wait_delay"
"7654splitHere46","12880303splitHere46","Timer"
"7655splitHere46","12880303splitHere46","Timer"
"7656splitHere46","12880303splitHere46","setRepeats( false )"
"7657splitHere46","12880303splitHere46","Timer"
"7658splitHere46","12880303splitHere46","critical_requests"
"7659splitHere46","12880303splitHere46","ActionListener"
"7660splitHere46","12880303splitHere46","final int[] critical_requests = new int[]{ 0 };<newline46mondego>final Outputstream out = ...;<newline46mondego>ActionListener task_performer = new ActionListener() {<newline46mondego>        public void actionPerformed(ActionEvent evt) {<newline46mondego>            critical_requests[0] = critical_requests[0] + 1;<newline46mondego>            try {<newline46mondego>                out.write(<doubleQuotes46>Critical Section request:\t<doubleQuotes46> + (critical_requests[0]) + <doubleQuotes46>\n<doubleQuotes46>);<newline46mondego>                ((Timer)evt.getSource()).setDelay( 10 + (rand.nextInt() % 10) );<newline46mondego>            } catch (IOException e) {<newline46mondego>                System.out.println(e.getMessage());<newline46mondego>                System.exit(-1);<newline46mondego>            }<newline46mondego>        }<newline46mondego>};<newline46mondego>Timer the_one_and_only_timer = new Timer( wait_delay, task_performer );<newline46mondego>"
"7661splitHere46","12880395splitHere46","_06"
"7662splitHere46","12880448splitHere46","this(a, a+10)"
"7663splitHere46","12880448splitHere46","this()"
"7664splitHere46","12880448splitHere46","super()"
"7665splitHere46","12880448splitHere46","static double calculateArgument(double val) {<newline46mondego>    return val + 10; // or some really complex logic<newline46mondego>}<newline46mondego><newline46mondego>Foo(double a) {<newline46mondego>    this(a, calculateArgument(a));<newline46mondego>}<newline46mondego><newline46mondego>Foo(double a, double b) {<newline46mondego>    mA = a;<newline46mondego>    mB = b;<newline46mondego>}<newline46mondego>"
"7666splitHere46","12880509splitHere46","throw InvalidValueException;<newline46mondego>"
"7667splitHere46","12880509splitHere46","throw new InvalidValueException();<newline46mondego>"
"7668splitHere46","12880509splitHere46","Exception"
"7669splitHere46","12880509splitHere46","catch"
"7670splitHere46","12880509splitHere46","try<newline46mondego>{<newline46mondego>   if (!(side1 + side2 > side3) && (side2 + side3 > side1) && <newline46mondego>        (side1 + side3 > side2))<newline46mondego><newline46mondego>       message = <doubleQuotes46>Invalid Triangle<doubleQuotes46>;<newline46mondego><newline46mondego>} catch (InvalidValueException e) {<newline46mondego>    message = <doubleQuotes46>Invalid Traingle<doubleQuotes46>;<newline46mondego>}<newline46mondego>"
"7671splitHere46","12880509splitHere46","try block"
"7672splitHere46","12880509splitHere46","catch block"
"7673splitHere46","12880509splitHere46","throw"
"7674splitHere46","12880509splitHere46","catch"
"7675splitHere46","12880509splitHere46","public Triangle2(int a,int b,int c) throws InvalidValueException<newline46mondego><newline46mondego>      if (!(side1 + side2 > side3) && (side2 + side3 > side1) && <newline46mondego>            (side1 + side3 > side2))<newline46mondego><newline46mondego>           throw new InvalidValueException(<doubleQuotes46>Invalid Value<doubleQuotes46>)<newline46mondego>}<newline46mondego>"
"7676splitHere46","12880509splitHere46","main"
"7677splitHere46","12880509splitHere46","try-catch"
"7678splitHere46","12880509splitHere46","public static void main(String[] args) {<newline46mondego>    Triangle triangle = null;<newline46mondego>    try {<newline46mondego>         triangle = new Triangle(2, 3, 4);<newline46mondego>    } catch (InvalidValueException e) {<newline46mondego>        e.printStackTrace();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7679splitHere46","12880592splitHere46","JasperReportBuilder rep = report()<newline46mondego>   .setDataSource(query, conn.getConnection())<newline46mondego>   .setParameter(JRParameter.REPORT_LOCALE, res.getLocale());<newline46mondego>   .setTemplate(Templates.reportTemplate.setLocale(res.getLocale()));<newline46mondego>"
"7680splitHere46","12880592splitHere46","TextColumnBuilder<Date> column = col.column(title,  name,  type.dateType());<newline46mondego>if (res.getLocale().equals(<doubleQuotes46>EN<doubleQuotes46>) {<newline46mondego>  column.setPattern(<doubleQuotes46>dd.MM.yyyy);<newline46mondego>}<newline46mondego>else if (res.getLocale().equals(<doubleQuotes46>US<doubleQuotes46>) {<newline46mondego>  column.setPattern(<doubleQuotes46>MM/dd/yyyy);<newline46mondego>}<newline46mondego>else ....<newline46mondego>rep.addColumn(column);<newline46mondego>"
"7681splitHere46","12880641splitHere46","List<String> list = new ArrayList<String>();<newline46mondego>list.add(<doubleQuotes46>ABCD<doubleQuotes46>);<newline46mondego>list.set(0, list.get(0) + <doubleQuotes46> <doubleQuotes46>);<newline46mondego>System.out.print(list.get(0).equals(<doubleQuotes46>ABCD <doubleQuotes46>));<newline46mondego>"
"7682splitHere46","12880641splitHere46","true<newline46mondego>"
"7683splitHere46","12880695splitHere46","types"
"7684splitHere46","12880695splitHere46","gson, jackson,flexjson etc.."
"7685splitHere46","12880695splitHere46","JsonElement jElement = new JsonParser().parse(jsonString);<newline46mondego>JsonObject  jObject = jElement.getAsJsonObject();<newline46mondego>jObject = jObject.getAsJsonObject(<doubleQuotes46>types<doubleQuotes46>);<newline46mondego>"
"7686splitHere46","12880695splitHere46","public class Type {<newline46mondego>  private int id;<newline46mondego>  private String name;<newline46mondego>  ...<newline46mondego>}<newline46mondego><newline46mondego>gson.fromJson(jsonString, Type.class);<newline46mondego>"
"7687splitHere46","12880874splitHere46","public enum Contents {<newline46mondego>  VarA { public String get(Database d) { return d.getVarA(); } },<newline46mondego>  VarB { public String get(Database d) { return d.getVarB(); } },<newline46mondego>  VarC { public String get(Database d) { return d.getVarC(); } };<newline46mondego>  public String get(Database d) { return <doubleQuotes46><doubleQuotes46>; }<newline46mondego>}<newline46mondego>"
"7688splitHere46","12880874splitHere46","public List<String> switchIT(Database db, Contents[] select) {<newline46mondego>  List<String> results = new ArrayList<String>();<newline46mondego>  for (Contents s : select) results.add(s.get(db));<newline46mondego>  return results;<newline46mondego>}<newline46mondego>"
"7689splitHere46","12880874splitHere46","get"
"7690splitHere46","12880874splitHere46","public enum Contents {      <newline46mondego>  VarA, VarB, VarC;<newline46mondego><newline46mondego>  private final Method getter;<newline46mondego><newline46mondego>  private Contents() {<newline46mondego>    try {<newline46mondego>      this.getter = Database.class.getMethod(<doubleQuotes46>get<doubleQuotes46>+name());<newline46mondego>    } catch (Exception e) { throw new RuntimeException(e); }<newline46mondego>  }<newline46mondego>  public String get(Database d) {<newline46mondego>    try {<newline46mondego>      return (String) getter.invoke(d); <newline46mondego>    } catch (Exception e) { throw new RuntimeException(e); }<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"7691splitHere46","12880990splitHere46","java.util.ArrayList"
"7692splitHere46","12880993splitHere46","double ret = BitConverter.ToDouble(TEMP_BYTE_ARRAY, CURRENT_POSITION); <newline46mondego>"
"7693splitHere46","12880993splitHere46","MemoryStream memStream = new MemoryStream(TEMP_BYTE_ARRAY);<newline46mondego>BinaryReader reader = new BinaryReader(memStream);<newline46mondego><newline46mondego>//read data<newline46mondego>double a = reader.ReadDouble();<newline46mondego>int b = reader.ReadInt();<newline46mondego>string c = reader.ReadString();<newline46mondego>"
"7694splitHere46","12881054splitHere46","<parents><newline46mondego>  <moms><newline46mondego>    <mom>A</mom><newline46mondego>    <mom>B</mom><newline46mondego>  </moms><newline46mondego>  <dads><newline46mondego>    <dad>C</dad><newline46mondego>  </dads><newline46mondego></parents><newline46mondego>"
"7695splitHere46","12881054splitHere46","InputStream is = new FileInputStream(<doubleQuotes46>...<doubleQuotes46>);<newline46mondego>XMLInputFactory xif = XMLInputFactory.newFactory();<newline46mondego>XMLStreamReader xsr = xif.createXMLStreamReader(is);<newline46mondego>while (xsr.hasNext()) {<newline46mondego>  if (xsr.next() == XMLStreamConstants.START_ELEMENT<newline46mondego>      && xsr.getLocalName().equals(<doubleQuotes46>dad<doubleQuotes46>)) {<newline46mondego><newline46mondego>    if (xsr.next() == XMLStreamConstants.CHARACTERS)<newline46mondego>      System.out.println(xsr.getText());<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"7696splitHere46","12881064splitHere46","table.setRowHeight(row, tmp.getIconHeight());<newline46mondego>"
"7697splitHere46","12881153splitHere46","wordsHashTable"
"7698splitHere46","12881153splitHere46","private Hashtable <String,Integer> wordsHashTable = new Hashtable<>();<newline46mondego>"
"7699splitHere46","12881153splitHere46","Hashtable"
"7700splitHere46","12881153splitHere46","java.util.HashMap"
"7701splitHere46","12881237splitHere46","ajaxWriter.close();<newline46mondego>"
"7702splitHere46","12881449splitHere46","Drawer"
"7703splitHere46","12881449splitHere46","JFrame"
"7704splitHere46","12881449splitHere46","Drawer drawer = new Drawer();<newline46mondego>con.add(drawer);<newline46mondego>"
"7705splitHere46","12881449splitHere46","paintComponent"
"7706splitHere46","12881449splitHere46","repaint()"
"7707splitHere46","12881449splitHere46","Drawer"
"7708splitHere46","12881449splitHere46","pane"
"7709splitHere46","12881449splitHere46","JPanel"
"7710splitHere46","12881587splitHere46","package"
"7711splitHere46","12881587splitHere46","import"
"7712splitHere46","12881587splitHere46","import textar.*;<newline46mondego>"
"7713splitHere46","12881587splitHere46","import textar.*;<newline46mondego><newline46mondego>public class Main {<newline46mondego><newline46mondego>   public Main() {                   <newline46mondego>    //creating object for textarea InternalFrame<newline46mondego>    textarea objtxta=new textarea();<newline46mondego>    addFrame(objtxta);<newline46mondego>   }<newline46mondego>   ...<newline46mondego>"
"7714splitHere46","12881587splitHere46","JScrollPane"
"7715splitHere46","12881587splitHere46","textarea"
"7716splitHere46","12881587splitHere46","JScrollPane scrollPane = new JScrollPane(txtaMessage,<newline46mondego>                JScrollPane.VERTICAL_SCROLLBAR_ALWAYS,<newline46mondego>                JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);<newline46mondego>"
"7717splitHere46","12881788splitHere46","File"
"7718splitHere46","12881788splitHere46","URL"
"7719splitHere46","12881788splitHere46","InputStream"
"7720splitHere46","12881788splitHere46","URL"
"7721splitHere46","12881788splitHere46","InputStream"
"7722splitHere46","12881788splitHere46","InputStreamReader"
"7723splitHere46","12881788splitHere46","BufferedReader"
"7724splitHere46","12881822splitHere46","/**<newline46mondego> * The observer<newline46mondego> */<newline46mondego>public interface AsyncWorkDoneListener{<newline46mondego><newline46mondego>    /**<newline46mondego>     * This method will be called when the async-thread is<newline46mondego>     *  done.<newline46mondego>     */<newline46mondego>    public void done(Object unit);<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>/**<newline46mondego> * The worker (which does the asyc-work on another thread).<newline46mondego> */<newline46mondego>public class AsyncWorker{<newline46mondego><newline46mondego>    private AsyncWorkDoneListener listener;<newline46mondego><newline46mondego>    /**<newline46mondego>     * Set (you might want to maintain a list here) the current<newline46mondego>     *  listener for this <doubleQuotes46>AsyncWorker<doubleQuotes46>.<newline46mondego>     */<newline46mondego>    public void setListener(AsyncWorkDoneListener listener){<newline46mondego>        this.listener = listener;<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * Will do the async-work<newline46mondego>     */<newline46mondego>    public void doWork(){<newline46mondego>        // Do the work in another thread...<newline46mondego>        // When done, notify the registered listener with the<newline46mondego>        //  result of the async work:<newline46mondego>        this.listener.done(the_object_containing_the_result);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>/**<newline46mondego> * The application<newline46mondego> */<newline46mondego>public class App implements AsyncWorkDoneListener{<newline46mondego><newline46mondego>    public void someMethod(){<newline46mondego>        // Work on something asynchronously:<newline46mondego>        mAsyncWorker.setListener(this);<newline46mondego>        mAsyncWorker.doWork();<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void done(Object unit){<newline46mondego>        // The asyc work has finished, do something with<newline46mondego>        //  the result in <doubleQuotes46>unit<doubleQuotes46>.<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7725splitHere46","12881885splitHere46","java.lang.Class"
"7726splitHere46","12881885splitHere46","public <U extends T> SomeContainer<U> subset(Class<U> c){<newline46mondego>    SomeContainer<U> output = new SomeContainer<U>();<newline46mondego>    for (T val : this) {<newline46mondego>        if (c.isInstance(val)) {<newline46mondego>            output.add(c.cast(val));<newline46mondego>        }<newline46mondego>    }<newline46mondego>    return output;<newline46mondego>}<newline46mondego>"
"7727splitHere46","12881898splitHere46","User"
"7728splitHere46","12881898splitHere46","UserType"
"7729splitHere46","12881898splitHere46","User"
"7730splitHere46","12881898splitHere46","UserType"
"7731splitHere46","12881898splitHere46","UserService"
"7732splitHere46","12881898splitHere46","setUserType(User user, int typeId)"
"7733splitHere46","12881904splitHere46","java.exe"
"7734splitHere46","12881904splitHere46","javaw.exe"
"7735splitHere46","12881904splitHere46","<doubleQuotes46>Path\To\JRE\Bin\java(w).exe<doubleQuotes46> <doubleQuotes46>%1<doubleQuotes46><newline46mondego>"
"7736splitHere46","12881904splitHere46","jarfile"
"7737splitHere46","12881904splitHere46","java.exe"
"7738splitHere46","12881904splitHere46","javaw.exe"
"7739splitHere46","12881904splitHere46","jarfix.bat"
"7740splitHere46","12881904splitHere46","reg query <doubleQuotes46>HKEY_LOCAL_MACHINE\SOFTWARE\JavaSoft\Java Runtime Environment<doubleQuotes46> /v <doubleQuotes46>CurrentVersion<doubleQuotes46> 1>nul<newline46mondego>if errorlevel 1 goto :error<newline46mondego><newline46mondego>@FOR /F <doubleQuotes46>tokens=2* <doubleQuotes46> %%A IN ('reg query <doubleQuotes46>HKEY_LOCAL_MACHINE\SOFTWARE\JavaSoft\Java Runtime Environment<doubleQuotes46> /v <doubleQuotes46>CurrentVersion<doubleQuotes46>') DO @SET JAVAVERSION=%%B<newline46mondego><newline46mondego>reg query <doubleQuotes46>HKEY_LOCAL_MACHINE\SOFTWARE\JavaSoft\Java Runtime Environment\%JAVAVERSION%<doubleQuotes46> /v <doubleQuotes46>JavaHome<doubleQuotes46> 1>nul<newline46mondego>reg query <doubleQuotes46>HKEY_CURRENT_USER\SOFTWARE\Classes\Applications\java.exe<doubleQuotes46> 1>nul<newline46mondego>reg query <doubleQuotes46>HKEY_CURRENT_USER\SOFTWARE\Classes\Applications\javaw.exe<doubleQuotes46> 1>nul<newline46mondego>if errorlevel 1 goto :error<newline46mondego><newline46mondego>@FOR /F <doubleQuotes46>tokens=2* <doubleQuotes46> %%A IN ('reg query <doubleQuotes46>HKEY_LOCAL_MACHINE\SOFTWARE\JavaSoft\Java Runtime Environment\%JAVAVERSION%<doubleQuotes46> /v <doubleQuotes46>JavaHome<doubleQuotes46>') DO @SET JAVAHOME=%%B<newline46mondego>@FOR /F <doubleQuotes46>tokens=2* <doubleQuotes46> %%A IN ('reg query <doubleQuotes46>HKEY_LOCAL_MACHINE\SOFTWARE\Classes\jarfile\shell\open\command<doubleQuotes46> /v <doubleQuotes46><doubleQuotes46>') DO @SET JAVACOMMAND=%%B<newline46mondego>@FOR /F <doubleQuotes46>tokens=2* <doubleQuotes46> %%A IN ('reg query <doubleQuotes46>HKEY_CURRENT_USER\Software\Classes\Applications\java.exe\shell\open\command<doubleQuotes46> /v <doubleQuotes46><doubleQuotes46>') DO @SET JAVACOMMAND2=%%B<newline46mondego><newline46mondego>reg add <doubleQuotes46>HKEY_LOCAL_MACHINE\SOFTWARE\Classes\jarfile\shell\open\command<doubleQuotes46> /f /v <doubleQuotes46><doubleQuotes46> /t REG_SZ /d <doubleQuotes46>\<doubleQuotes46>%JAVAHOME%\bin\javaw.exe\<doubleQuotes46> -jar \<doubleQuotes46>%%1\<doubleQuotes46> %%*<doubleQuotes46><newline46mondego>reg add <doubleQuotes46>HKEY_CURRENT_USER\Software\Classes\Applications\java.exe\shell\open\command<doubleQuotes46> /f /v <doubleQuotes46><doubleQuotes46> /t REG_SZ /d <doubleQuotes46>\<doubleQuotes46>%JAVAHOME%\bin\java.exe\<doubleQuotes46> -jar \<doubleQuotes46>%%1\<doubleQuotes46> %%*<doubleQuotes46><newline46mondego>reg add <doubleQuotes46>HKEY_CURRENT_USER\Software\Classes\Applications\javaw.exe\shell\open\command<doubleQuotes46> /f /v <doubleQuotes46><doubleQuotes46> /t REG_SZ /d <doubleQuotes46>\<doubleQuotes46>%JAVAHOME%\bin\javaw.exe\<doubleQuotes46> -jar \<doubleQuotes46>%%1\<doubleQuotes46> %%*<doubleQuotes46><newline46mondego>"
"7741splitHere46","12881904splitHere46","NET SESSION >nul 2>&1<newline46mondego>if %errorlevel% == 0 (<newline46mondego>    echo  User successfully detected as an administrator!<newline46mondego>) else (<newline46mondego>    echo User doesn't have administrator privileges!<newline46mondego>    exit /b 1<newline46mondego>)<newline46mondego>"
"7742splitHere46","12881941splitHere46","Pattern.compile(<doubleQuotes46>\\(\\s*\\w+\\s*\\)<doubleQuotes46>).matcher(input);<newline46mondego>"
"7743splitHere46","12882073splitHere46","Collar c"
"7744splitHere46","12882073splitHere46","transient"
"7745splitHere46","12882073splitHere46","readObject"
"7746splitHere46","12882073splitHere46","c"
"7747splitHere46","12882073splitHere46","c.size = is.readInt();<-- NullPointerException Here<newline46mondego>"
"7748splitHere46","12882073splitHere46","C"
"7749splitHere46","12882073splitHere46","c = new Collar();<newline46mondego>c.size = is.readInt();<newline46mondego>"
"7750splitHere46","12882073splitHere46","private void writeObject(ObjectOutputStream stream) throws IOException {<newline46mondego>    stream.defaultWriteObject();<newline46mondego>    stream.writeInt(c.size);<newline46mondego>}<newline46mondego><newline46mondego>private void readObject(ObjectInputStream stream) throws IOException,<newline46mondego>        ClassNotFoundException {<newline46mondego>    stream.defaultReadObject();<newline46mondego>    c = new Collar();<newline46mondego>    c.size = stream.readInt();<newline46mondego>}<newline46mondego>"
"7751splitHere46","12882135splitHere46","public class PermGenError {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        main(new String[] { (args[0] + args[0]).intern() });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7752splitHere46","12882135splitHere46","whatever -XX:PermSize=8M -XX:MaxPermSize=8M<newline46mondego>"
"7753splitHere46","12882197splitHere46","<h1>Fashion #Helmet #Woman #Scifi <a href=<doubleQuotes46>http://bit.ly/P1omax<doubleQuotes46>> <img src=<doubleQuotes46>http://24.media.tumblr.com/tumblr_mbv08xkdzy1qfzis2o1_1280.gif<doubleQuotes46> alt=<doubleQuotes46>t<doubleQuotes46> title=<doubleQuotes46><doubleQuotes46> /> </a> Rob Goodwin</h1><newline46mondego>"
"7754splitHere46","12882230splitHere46","\n"
"7755splitHere46","12882230splitHere46","<doubleQuotes46>a\\na<doubleQuotes46>"
"7756splitHere46","12882230splitHere46","\n"
"7757splitHere46","12882230splitHere46","System.out.println(<doubleQuotes46>a\\na<doubleQuotes46>); // Prints a\na<newline46mondego>"
"7758splitHere46","12882230splitHere46","Apache Commons"
"7759splitHere46","12882230splitHere46","StringEscapeUtils#escapeJava"
"7760splitHere46","12882230splitHere46","escape sequences"
"7761splitHere46","12882230splitHere46","String str = <doubleQuotes46>a\nb\r\t<doubleQuotes46>;<newline46mondego>String result = StringEscapeUtils.escapeJava(str); // Takes `\n` as `\\n`<newline46mondego>System.out.println(result);<newline46mondego>"
"7762splitHere46","12882230splitHere46","a\nb\r\t"
"7763splitHere46","12882255splitHere46","public void test(int n) {<newline46mondego>  if (n == 0) return;<newline46mondego>  for (int i = 0; i < 4; i++) test(n-1);<newline46mondego>}<newline46mondego>"
"7764splitHere46","12882255splitHere46","static int runs;<newline46mondego>static void test(int n) {<newline46mondego>  runs++;<newline46mondego>  if (n == 0) return;<newline46mondego>  for (int i = 0; i < 4; i++) test(n-1);<newline46mondego>}<newline46mondego>public static void main(String[] args) {<newline46mondego>  for (int n = 1; n <= 5; n++) {<newline46mondego>    runs = 0;<newline46mondego>    test(n);<newline46mondego>    System.out.format(<doubleQuotes46>%d: %d %d\n<doubleQuotes46>, n, 1<<(2*n), runs);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"7765splitHere46","12882255splitHere46","1: 4 5<newline46mondego>2: 16 21<newline46mondego>3: 64 85<newline46mondego>4: 256 341<newline46mondego>5: 1024 1365<newline46mondego>"
"7766splitHere46","12882307splitHere46","String[] arr = <doubleQuotes46>a b c d<doubleQuotes46>.split(<doubleQuotes46> <doubleQuotes46>);<newline46mondego>"
"7767splitHere46","12882307splitHere46","String#split"
"7768splitHere46","12882307splitHere46","split"
"7769splitHere46","12882307splitHere46","regular expression"
"7770splitHere46","12882307splitHere46","Regex"
"7771splitHere46","12882420splitHere46","short x = 3901;<newline46mondego>short y = 5921;<newline46mondego>byte h = 2;<newline46mondego>"
"7772splitHere46","12882420splitHere46","int"
"7773splitHere46","12882454splitHere46","for (int i = 0 ; i < 10 ; i++) {<newline46mondego>    System.out.print(<doubleQuotes46>Enter a weight: <doubleQuotes46>);<newline46mondego>    // record users input<newline46mondego>}<newline46mondego>"
"7774splitHere46","12882454splitHere46","int min = weights[0];<newline46mondego>int max = weights[0];<newline46mondego>double avg = 0;<newline46mondego><newline46mondego>for (int weight : weights) {<newline46mondego>    if (weight < min)<newline46mondego>        min = weight;<newline46mondego>    if (weight > max)<newline46mondego>        max = weight;<newline46mondego>    avg += weight;<newline46mondego>}<newline46mondego><newline46mondego>avg /= weights.length;<newline46mondego>"
"7775splitHere46","12882454splitHere46","Scanner in = new Scanner(System.in);<newline46mondego>int[] weights = new int[10];<newline46mondego>for (int i = 0 ; i < 10 ; i++) {<newline46mondego>    System.out.print(<doubleQuotes46>Enter a weight between 20 and 100: <doubleQuotes46>);<newline46mondego>    weights[i] = in.nextInt();<newline46mondego>}<newline46mondego>in.close();<newline46mondego><newline46mondego>int min = weights[0];<newline46mondego>int max = weights[0];<newline46mondego>double avg = 0;<newline46mondego><newline46mondego>for (int weight : weights) {<newline46mondego>    if (weight < min)<newline46mondego>        min = weight;<newline46mondego>    if (weight > max)<newline46mondego>        max = weight;<newline46mondego>    avg += weight;<newline46mondego>}<newline46mondego><newline46mondego>avg /= weights.length;<newline46mondego><newline46mondego>System.out.println(<doubleQuotes46>Min: <doubleQuotes46> + min);<newline46mondego>System.out.println(<doubleQuotes46>Max: <doubleQuotes46> + max);<newline46mondego>System.out.println(<doubleQuotes46>Average: <doubleQuotes46> + avg);<newline46mondego>"
"7776splitHere46","12882587splitHere46","EditText"
"7777splitHere46","12882587splitHere46","EditText"
"7778splitHere46","12882587splitHere46","final int f = -1; // or other invalid value<newline46mondego>if (from.getText().toString().length() > 0)<newline46mondego>    f = Integer.parseInt(from.getText().toString());<newline46mondego>"
"7779splitHere46","12882587splitHere46","EditText"
"7780splitHere46","12882652splitHere46","PizzaTestDrive"
"7781splitHere46","12882652splitHere46","ChicagoPizzaStore"
"7782splitHere46","12882836splitHere46","artifactId"
"7783splitHere46","12882836splitHere46","groupId"
"7784splitHere46","12882836splitHere46","version"
"7785splitHere46","12882836splitHere46","mvn install"
"7786splitHere46","12882836splitHere46","<dependecy/>"
"7787splitHere46","12882857splitHere46","JPanel Table = new JPanel();<newline46mondego>    Table.setLayout(new GridLayout(8, 1));<newline46mondego>"
"7788splitHere46","12882857splitHere46","Table"
"7789splitHere46","12882857splitHere46","Table.setLayout(new GridLayout(0, 1));<newline46mondego>"
"7790splitHere46","12882857splitHere46","GridLayout"
"7791splitHere46","12882857splitHere46","public GridLayout(int rows, int cols)<newline46mondego>"
"7792splitHere46","12882932splitHere46","import java.sql.Connection;<newline46mondego>import java.sql.PreparedStatement;<newline46mondego>import java.sql.SQLException;<newline46mondego><newline46mondego>import org.springframework.jdbc.core.JdbcTemplate;<newline46mondego>import org.springframework.jdbc.core.PreparedStatementCreator;<newline46mondego>import org.springframework.jdbc.support.GeneratedKeyHolder;<newline46mondego>import org.springframework.jdbc.support.KeyHolder;<newline46mondego>"
"7793splitHere46","12882932splitHere46","final String INSERT_SQL = <doubleQuotes46>insert into my_test (name) values(?)<doubleQuotes46>;<newline46mondego>final String name = <doubleQuotes46>Rob<doubleQuotes46>;<newline46mondego>KeyHolder keyHolder = new GeneratedKeyHolder();<newline46mondego>jdbcTemplate.update(<newline46mondego>    new PreparedStatementCreator() {<newline46mondego>        public PreparedStatement createPreparedStatement(Connection connection) throws SQLException {<newline46mondego>            PreparedStatement ps =<newline46mondego>                connection.prepareStatement(INSERT_SQL, new String[] {<doubleQuotes46>id<doubleQuotes46>});<newline46mondego>            ps.setString(1, name);<newline46mondego>            return ps;<newline46mondego>        }<newline46mondego>    },<newline46mondego>    keyHolder);<newline46mondego>// keyHolder.getKey() now contains the generated key<newline46mondego>"
"7794splitHere46","12882941splitHere46","while(true){<newline46mondego>}<newline46mondego>"
"7795splitHere46","12883033splitHere46","org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter"
"7796splitHere46","12883033splitHere46","org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices#setCookie"
"7797splitHere46","12883148splitHere46","android:layout_width=<doubleQuotes46>wrap_content<doubleQuotes46>"
"7798splitHere46","12883148splitHere46","android:layout_width=<doubleQuotes46>match_parent<doubleQuotes46>"
"7799splitHere46","12883148splitHere46","android:layout_height=<doubleQuotes46>0dp<doubleQuotes46>"
"7800splitHere46","12883148splitHere46","android:layout_weight=<doubleQuotes46>1<doubleQuotes46>"
"7801splitHere46","12883188splitHere46","public class Singleton {<newline46mondego>    public Enclosing getInstance() {<newline46mondego>        return SingletonHolder.INSTANCE;<newline46mondego>    }<newline46mondego><newline46mondego>    static enum SingletonHolder {<newline46mondego>        INSTANCE;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7802splitHere46","12883208splitHere46","COALESCE"
"7803splitHere46","12883208splitHere46","SELECT COALESCE(names,' '),...<newline46mondego>"
"7804splitHere46","12883294splitHere46","<!-- Jersey JAVA REST implementation --><newline46mondego><servlet><newline46mondego><servlet-name>Jersey</servlet-name><newline46mondego>    <servlet-class><newline46mondego>        com.sun.jersey.spi.container.servlet.ServletContainer<newline46mondego>    </servlet-class><newline46mondego>    <init-param><newline46mondego>        <param-name>com.sun.jersey.config.property.packages</param-name><newline46mondego>        <param-value>org.foobar.rest.services;org.codehaus.jackson.jaxrs</param-value>    <!--  use jackson for JSON --><newline46mondego>    </init-param><newline46mondego>    <load-on-startup>1</load-on-startup><newline46mondego></servlet><newline46mondego><servlet-mapping><newline46mondego>    <servlet-name>Jersey</servlet-name><newline46mondego>    <url-pattern>/rest/*</url-pattern><newline46mondego></servlet-mapping><newline46mondego>"
"7805splitHere46","12883294splitHere46","jackson-core-asl-1.9.10.jar<newline46mondego>jackson-core-lgpl-1.9.10.jar<newline46mondego>jackson-jaxrs-1.9.10.jar<newline46mondego>jackson-mapper-asl-1.9.10.jar<newline46mondego>jackson-mapper-lgpl-1.9.10.jar<newline46mondego>jackson-mrbean-1.9.10.jar<newline46mondego>jackson-smile-1.9.10.jar<newline46mondego>jackson-xc-1.9.10.jar<newline46mondego>"
"7806splitHere46","12883332splitHere46","Arrays.asList()"
"7807splitHere46","12883332splitHere46","Arrays"
"7808splitHere46","12883332splitHere46","List"
"7809splitHere46","12883332splitHere46","String"
"7810splitHere46","12883332splitHere46","List<String> list = Arrays.asList(logsSplitFromUrdu);<newline46mondego>"
"7811splitHere46","12883332splitHere46","ArrayList<String>"
"7812splitHere46","12883332splitHere46","List<String>"
"7813splitHere46","12883332splitHere46","ArrayList<String> arraylist = new ArrayList<String>(list);<newline46mondego>"
"7814splitHere46","12883459splitHere46","COALESCE"
"7815splitHere46","12883459splitHere46","PreparedStatement ps = con.prepareStatement(<doubleQuotes46><newline46mondego>                                select * <newline46mondego>                                from PhoneData <newline46mondego>                                where upper(rtrim(COALESCE(names,''))) || <newline46mondego>                                      upper(rtrim(COALESCE(middleName,''))) ||  <newline46mondego>                                      upper(rtrim(COALESCE(lastName,''))) = ?<doubleQuotes46>);<newline46mondego>"
"7816splitHere46","12883547splitHere46","${userrole.yourAttribute}<newline46mondego>"
"7817splitHere46","12883547splitHere46","${}"
"7818splitHere46","12883606splitHere46","onCreate()"
"7819splitHere46","12883606splitHere46","i"
"7820splitHere46","12883606splitHere46","1"
"7821splitHere46","12883606splitHere46","Intent"
"7822splitHere46","12883606splitHere46","Activity"
"7823splitHere46","12883666splitHere46","bool matchesAlmost(String str1, String str2) {<newline46mondego>    if (str1.length != str2.length)<newline46mondego>        return false;<newline46mondego>    int same = 0;<newline46mondego>    for (int i = 0; i < str1.length; ++i) {<newline46mondego>        if (str1.charAt(i) == str2.charAt(i))<newline46mondego>            same++;<newline46mondego>    }<newline46mondego>    return same == str1.length - 1;<newline46mondego>}<newline46mondego>"
"7824splitHere46","12883679splitHere46","(?i)"
"7825splitHere46","12883679splitHere46","case-insensitive"
"7826splitHere46","12883679splitHere46","(?i)"
"7827splitHere46","12883679splitHere46","after each character"
"7828splitHere46","12883679splitHere46","also before the first character"
"7829splitHere46","12883679splitHere46","</code>"
"7830splitHere46","12883684splitHere46","equals"
"7831splitHere46","12883684splitHere46","hashCode"
"7832splitHere46","12883684splitHere46","hashCode"
"7833splitHere46","12883684splitHere46","equals"
"7834splitHere46","12883684splitHere46","hashCode"
"7835splitHere46","12883712splitHere46","null"
"7836splitHere46","12883712splitHere46","System.gc()"
"7837splitHere46","12883712splitHere46","gc()"
"7838splitHere46","12883712splitHere46","PlayerView"
"7839splitHere46","12883712splitHere46","PlayerView"
"7840splitHere46","12883712splitHere46","PlayerView"
"7841splitHere46","12883712splitHere46","Player"
"7842splitHere46","12883712splitHere46","null"
"7843splitHere46","12883712splitHere46","PlayerView"
"7844splitHere46","12883724splitHere46","Run"
"7845splitHere46","12883724splitHere46","Run Configurations"
"7846splitHere46","12883724splitHere46","Arguments"
"7847splitHere46","12883724splitHere46","Working directory"
"7848splitHere46","12883724splitHere46","Other"
"7849splitHere46","12883724splitHere46","System.getProperty(<doubleQuotes46>user.dir<doubleQuotes46>) <newline46mondego>"
"7850splitHere46","12883724splitHere46","File"
"7851splitHere46","12883724splitHere46","new File(parent, file)<newline46mondego>"
"7852splitHere46","12883773splitHere46","javafx.scene.control.ListView"
"7853splitHere46","12883773splitHere46","TilePane"
"7854splitHere46","12883800splitHere46","String"
"7855splitHere46","12883800splitHere46","String sa1 = <doubleQuotes46>a<doubleQuotes46>+ <doubleQuotes46>b<doubleQuotes46>;<newline46mondego><newline46mondego>final String sb1 = <doubleQuotes46>a<doubleQuotes46>;<newline46mondego>final String sb2 = <doubleQuotes46>b<doubleQuotes46>;<newline46mondego>String sb3 = sb1 + sb2;<newline46mondego><newline46mondego>String sc1 = <doubleQuotes46>a<doubleQuotes46>;<newline46mondego>String sc2 = <doubleQuotes46>b<doubleQuotes46>;<newline46mondego>String sc3 = <doubleQuotes46>a<doubleQuotes46> + <doubleQuotes46>b<doubleQuotes46>;<newline46mondego>String sc4 = sc1 + sc2;<newline46mondego>"
"7856splitHere46","12883800splitHere46","Code:<newline46mondego>   0:   ldc #2; //String ab<newline46mondego>   2:   astore_0<newline46mondego>   3:   ldc #2; //String ab<newline46mondego>   5:   astore_3<newline46mondego>   6:   ldc #3; //String a<newline46mondego>   8:   astore  4<newline46mondego>   10:  ldc #4; //String b<newline46mondego>   12:  astore  5<newline46mondego>   14:  ldc #2; //String ab<newline46mondego>   16:  astore  6<newline46mondego>   18:  new #5; //class java/lang/StringBuilder<newline46mondego>   21:  dup<newline46mondego>   22:  invokespecial   #6; //Method java/lang/StringBuilder.<doubleQuotes46><init><doubleQuotes46>:()V<newline46mondego>   25:  aload   4<newline46mondego>   27:  invokevirtual   #7; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;<newline46mondego>   30:  aload   5<newline46mondego>   32:  invokevirtual   #7; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;<newline46mondego>   35:  invokevirtual   #8; //Method java/lang/StringBuilder.toString:()Ljava/lang/String;<newline46mondego>   38:  astore  7<newline46mondego>   40:  return<newline46mondego>"
"7857splitHere46","12883800splitHere46","sc4 = new StringBuilder().append(sc1).append(sc2).toString()"
"7858splitHere46","12883893splitHere46","public interface Doubler<T> {<newline46mondego>    T doubled(T arg);<newline46mondego>}<newline46mondego>"
"7859splitHere46","12883893splitHere46","Doubler"
"7860splitHere46","12883893splitHere46","Class<T>"
"7861splitHere46","12883910splitHere46",","
"7862splitHere46","12883910splitHere46","JFormattedTextField"
"7863splitHere46","12883910splitHere46","String[] numbers = textField.getText().split(<doubleQuotes46>,<doubleQuotes46>);<newline46mondego>int x = Integer.parseInt(numbers[0]);<newline46mondego>int y = Integer.parseInt(numbers[1]);<newline46mondego>"
"7864splitHere46","12883925splitHere46","onClick1()"
"7865splitHere46","12883925splitHere46","onClick2()"
"7866splitHere46","12883925splitHere46","Anonymous Inner class"
"7867splitHere46","12883925splitHere46","onClick()"
"7868splitHere46","12883925splitHere46","OnClickListener"
"7869splitHere46","12883925splitHere46","b1.setOnClickListener(new OnClickListener() {<newline46mondego><newline46mondego>            public void onClick(View v) {<newline46mondego><newline46mondego>                          tv1.clearComposingText();<newline46mondego>                          a=Integer.parseInt(t1.getText().toString());<newline46mondego>                          tv1.setText(S1+=a);<newline46mondego><newline46mondego><newline46mondego>            }<newline46mondego>        });<newline46mondego><newline46mondego><newline46mondego>b2.setOnClickListener(new OnClickListener() {<newline46mondego><newline46mondego>            public void onClick(View v) {<newline46mondego><newline46mondego>                     tv2.clearComposingText();<newline46mondego>                         b=Integer.parseInt(t2.getText().toString());<newline46mondego>                         tv2.setText(S2+=b);<newline46mondego><newline46mondego>            }<newline46mondego>        });<newline46mondego>"
"7870splitHere46","12884116splitHere46","int[]"
"7871splitHere46","12884116splitHere46","//work out what to draw"
"7872splitHere46","12884116splitHere46","paintComponent(Graphics)"
"7873splitHere46","12884136splitHere46","corePanel"
"7874splitHere46","12884136splitHere46","electivePanel"
"7875splitHere46","12884136splitHere46","addcorePanel"
"7876splitHere46","12884136splitHere46","JButton"
"7877splitHere46","12884136splitHere46","corePanel"
"7878splitHere46","12884136splitHere46","public void addcorePanel(Course createcourse)<newline46mondego>{<newline46mondego>    JButton corePanel = new JButton();<newline46mondego>    JLabel ccLabel = new JLabel(<doubleQuotes46>Code: <doubleQuotes46>);<newline46mondego>    JLabel titleLabel = new JLabel(<doubleQuotes46>Title: <doubleQuotes46>);<newline46mondego>    JLabel cpLabel = new JLabel(<doubleQuotes46>Credit Points: <doubleQuotes46>);<newline46mondego>    JLabel prLabel = new JLabel(<doubleQuotes46>Prereqs: <doubleQuotes46>);<newline46mondego><newline46mondego>// ....<newline46mondego><newline46mondego>// ....<newline46mondego>}<newline46mondego>"
"7879splitHere46","12884136splitHere46","JLabels"
"7880splitHere46","12884136splitHere46","JButtons"
"7881splitHere46","12884142splitHere46","JDialog"
"7882splitHere46","12884142splitHere46","JDialog"
"7883splitHere46","12884142splitHere46","void start() { // sample game<newline46mondego>    MyDialog dialog7 = new MyDialog(null);<newline46mondego>    MyDialog dialog6 = new MyDialog(dialog7);<newline46mondego>    MyDialog dialog5 = new MyDialog(dialog6);<newline46mondego>    MyDialog dialog4 = new MyDialog(dialog5);<newline46mondego>    MyDialog dialog3 = new MyDialog(dialog4);<newline46mondego>    MyDialog dialog2 = new MyDialog(dialog3);<newline46mondego>    MyDialog dialog1 = new MyDialog(dialog2);<newline46mondego><newline46mondego>    dialog1.setVisible(true);<newline46mondego>}<newline46mondego>"
"7884splitHere46","12884220splitHere46","import stringInstrumentPackage.StringInstrument;<newline46mondego>"
"7885splitHere46","12884228splitHere46","ImageLoader.stop()"
"7886splitHere46","12884266splitHere46","System.in"
"7887splitHere46","12884266splitHere46","int"
"7888splitHere46","12884266splitHere46","main"
"7889splitHere46","12884479splitHere46","setLocalInfileInputStream"
"7890splitHere46","12884479splitHere46","LOAD DATA INTO"
"7891splitHere46","12884479splitHere46","public final void readFile(final String path)<newline46mondego>        throws IOException, SQLException, InterruptedException {<newline46mondego>    File file = new File(path);<newline46mondego><newline46mondego>    final Connection connection = getSqlDataSource().getConnection();<newline46mondego>    Statement statement = SqlDataSource.getInternalStatement(connection.createStatement());<newline46mondego><newline46mondego>    try{<newline46mondego>        Scanner fileScanner = new Scanner(file);<newline46mondego>        fileScanner.useDelimiter(Pattern.compile(<doubleQuotes46>^$<doubleQuotes46>, Pattern.MULTILINE));<newline46mondego><newline46mondego>        while(fileScanner.hasNext()){<newline46mondego>            String line;<newline46mondego>            while ((line = fileScanner.nextLine()).isEmpty());<newline46mondego><newline46mondego>            InputStream is = new ByteArrayInputStream(fileScanner.next().getBytes(<doubleQuotes46>UTF-8<doubleQuotes46>));<newline46mondego>            String [] tableName = line.split(getSeparator());<newline46mondego>            setTable((tableName[0]+<doubleQuotes46>_<doubleQuotes46>+tableName[1]).replace('-', '_'));<newline46mondego><newline46mondego>            String sql = <doubleQuotes46>LOAD DATA LOCAL INFILE '<doubleQuotes46> + SingleCsvImportBean.getOsDependantFileName(file) + <doubleQuotes46>' <doubleQuotes46> <newline46mondego>                    + <doubleQuotes46>INTO TABLE <doubleQuotes46> + SqlUtils.escape(getTable()) <newline46mondego>                    + <doubleQuotes46>FIELDS TERMINATED BY '<doubleQuotes46> + getSeparator() <newline46mondego>                    + <doubleQuotes46>' ESCAPED BY '' LINES TERMINATED BY '<doubleQuotes46> + getLinefeed() + <doubleQuotes46>' <doubleQuotes46>;<newline46mondego>            sql += <doubleQuotes46>(<doubleQuotes46> + implodeStringArray(getFields(), <doubleQuotes46>, <doubleQuotes46>) + <doubleQuotes46>)<doubleQuotes46>;       <newline46mondego>            sql += getSetClause();<newline46mondego><newline46mondego>            ((com.mysql.jdbc.Statement) statement).setLocalInfileInputStream(is);<newline46mondego>            statement.execute(sql);         <newline46mondego>        }<newline46mondego>    }finally{<newline46mondego>        statement.close();<newline46mondego>        connection.close();<newline46mondego>    }   <newline46mondego>}<newline46mondego>"
"7892splitHere46","12884510splitHere46","volatile"
"7893splitHere46","12884510splitHere46","Boolean"
"7894splitHere46","12884510splitHere46","condition"
"7895splitHere46","12884510splitHere46","volatile Boolean condition = false;<newline46mondego>"
"7896splitHere46","12884510splitHere46","java.util.concurrent.atomic.AtomicBoolean"
"7897splitHere46","12884510splitHere46","AtomicBoolean condition = new AtomicBoolean(false);<newline46mondego>    (new Thread(new MyRunnable(condition))).start();<newline46mondego>    ...<newline46mondego>    public MyRunnable(AtomicBoolean condition2) {<newline46mondego>        this.condition = condition2;<newline46mondego>    }<newline46mondego>    ...<newline46mondego>    public void run() {<newline46mondego>    while (true) {<newline46mondego>        if (condition.get() == true) {<newline46mondego>            System.out.println(<doubleQuotes46>second<doubleQuotes46>);<newline46mondego>            break;<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7898splitHere46","12884591splitHere46","<h:dataTable value=<doubleQuotes46>#{bean.getModel(user)}<doubleQuotes46>><newline46mondego>"
"7899splitHere46","12884591splitHere46","public List<Item> getModel(User user) {<newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"7900splitHere46","12884624splitHere46","PendingIntent"
"7901splitHere46","12884629splitHere46","<doubleQuotes46>a [b c] d [e f g]<doubleQuotes46>.split(<doubleQuotes46>\\s+(?![^\\[]*\\])<doubleQuotes46>);<newline46mondego>"
"7902splitHere46","12884629splitHere46","<doubleQuotes46>[a b [c d] e] f g<doubleQuotes46><newline46mondego>"
"7903splitHere46","12884697splitHere46","myJTable.putClientProperty(<doubleQuotes46>terminateEditOnFocusLost<doubleQuotes46>, Boolean.TRUE)"
"7904splitHere46","12884697splitHere46","stopCellEditing()"
"7905splitHere46","12884697splitHere46","public boolean stopCellEditing()"
"7906splitHere46","12884697splitHere46","myJTable.getCellEditor().stopCellEditing();"
"7907splitHere46","12884697splitHere46","myJTable.getCellEditor(row, col).stopCellEditing();"
"7908splitHere46","12884778splitHere46","GL11.glClear(GL11.GL_COLOR_BUFFER_BIT);"
"7909splitHere46","12884778splitHere46","// render OpenGL here"
"7910splitHere46","12884778splitHere46","org.lwjgl.opengl.GL11"
"7911splitHere46","12884950splitHere46","a"
"7912splitHere46","12884950splitHere46","b"
"7913splitHere46","12884950splitHere46","any"
"7914splitHere46","12884950splitHere46","Immutable"
"7915splitHere46","12884950splitHere46","String"
"7916splitHere46","12884950splitHere46","String s = <doubleQuotes46>a<doubleQuotes46>;<newline46mondego>String s1 = s; // Both `s` and `s1` points to `<doubleQuotes46>a<doubleQuotes46>`<newline46mondego><newline46mondego>s1 = <doubleQuotes46>b<doubleQuotes46>;  // Only s1 will point to <doubleQuotes46>b<doubleQuotes46>. `s` still points to <doubleQuotes46>a<doubleQuotes46>.<newline46mondego>"
"7917splitHere46","12884950splitHere46","Strings"
"7918splitHere46","12884950splitHere46","new object"
"7919splitHere46","12884950splitHere46","mutable object"
"7920splitHere46","12884950splitHere46","Set<String> set = new HashSet<String>();<newline46mondego>Set<String> set3 = new HashSet<String>(); // A different set object<newline46mondego>Set<String> set2 = set;   // Point to the same set object as <doubleQuotes46>set<doubleQuotes46><newline46mondego><newline46mondego>set2.clear();  // Will clear the actual object. Pointed by <doubleQuotes46>set<doubleQuotes46><newline46mondego>// And thus both the reference pointing to that object, will see the change.<newline46mondego><newline46mondego>set3 = set; // Change reference `set3` to point to the `Set object` pointed by `set`<newline46mondego><newline46mondego>set3.add(<doubleQuotes46>a<doubleQuotes46>);  // Will change `set` also.<newline46mondego>"
"7921splitHere46","12884950splitHere46","Set<String> set1 = new HashSet<String>();<newline46mondego>Set<String> set3 = new HashSet<String>(set1);<newline46mondego>"
"7922splitHere46","12885123splitHere46","public int recur(int count) {<newline46mondego>   if (count < 10) {<newline46mondego>       return count + recur(count++);<newline46mondego>   }<newline46mondego>   return count;<newline46mondego>}<newline46mondego><newline46mondego>System.out.println(recur(0));  // Invoke first time<newline46mondego>"
"7923splitHere46","12885131splitHere46","local"
"7924splitHere46","12885131splitHere46","DrawLightning"
"7925splitHere46","12885215splitHere46","BinaryTree"
"7926splitHere46","12885215splitHere46","mirror"
"7927splitHere46","12885215splitHere46","BinaryTree<T>"
"7928splitHere46","12885215splitHere46","ConstTree<T>"
"7929splitHere46","12885215splitHere46","mirrorImage()"
"7930splitHere46","12885227splitHere46","user.dir"
"7931splitHere46","12885248splitHere46","UnknownHostException"
"7932splitHere46","12885248splitHere46","SSLException"
"7933splitHere46","12885416splitHere46","savedPixel = savedPixel & 0x00FFFFFF;<newline46mondego>savedPixel = savedPixel | (desiredAlpha << 24);<newline46mondego>"
"7934splitHere46","12885458splitHere46","public static double[][] addMatrices(double doubMatrix1[][], <newline46mondego>                                     double doubMatrix2[][]){<newline46mondego><newline46mondego>for(int i = 0; i< doubMatrix1.length;i++)<newline46mondego>    for(int j = 0; j< doubMatrix1[i].length;j++ )<newline46mondego>    {<newline46mondego>        if(doubMatrix1[i][j] == doubMatrix2[i][j])<newline46mondego>        {<newline46mondego>            double[][] tempArray = new double[i][j];<newline46mondego><newline46mondego>        }<newline46mondego>        else<newline46mondego>        {<newline46mondego>            return tempArray[0][0]; <newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>return tempArray;<newline46mondego>}<newline46mondego>"
"7935splitHere46","12885458splitHere46","array of array"
"7936splitHere46","12885458splitHere46","tempArray"
"7937splitHere46","12885458splitHere46","if"
"7938splitHere46","12885458splitHere46","if"
"7939splitHere46","12885458splitHere46","tempArray = new double[0][0];<newline46mondego>"
"7940splitHere46","12885458splitHere46","tempArray"
"7941splitHere46","12885458splitHere46","addMatrix"
"7942splitHere46","12885770splitHere46","main"
"7943splitHere46","12885770splitHere46","public static void main(String[] args) throws IOException {<newline46mondego>    StringBuilder text = new StringBuilder();<newline46mondego>    // StringBuilder google<newline46mondego>    // google end of file check java<newline46mondego><newline46mondego>    InputStream in = new FileInputStream(<doubleQuotes46>charfile.txt<doubleQuotes46>);<newline46mondego>    Reader r = new InputStreamReader(in, <doubleQuotes46>US-ASCII<doubleQuotes46>);<newline46mondego>    int intch;<newline46mondego>    {<newline46mondego>        while ((intch = r.read()) != -1) {<newline46mondego>            char ch = (char) intch;<newline46mondego>            // ...<newline46mondego>            text.append(ch); <newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7944splitHere46","12885770splitHere46","InputStream in = new FileInputStream(<doubleQuotes46>charfile.txt<doubleQuotes46>);<newline46mondego>Reader r = new InputStreamReader(in, <doubleQuotes46>US-ASCII<doubleQuotes46>);<newline46mondego>"
"7945splitHere46","12885889splitHere46","java.exe"
"7946splitHere46","12885889splitHere46","java.exe"
"7947splitHere46","12885889splitHere46","java"
"7948splitHere46","12885889splitHere46","/home/../jdk.../bin/java"
"7949splitHere46","12885911splitHere46","<doubleQuotes46>{a}/{b}<doubleQuotes46>"
"7950splitHere46","12885911splitHere46","<doubleQuotes46>{c}/{d}<doubleQuotes46>"
"7951splitHere46","12885911splitHere46","<doubleQuotes46>{username}/{password}<doubleQuotes46>"
"7952splitHere46","12885911splitHere46","<doubleQuotes46>{from}/{to}<doubleQuotes46>"
"7953splitHere46","12885911splitHere46","<doubleQuotes46>{from}/{to}<doubleQuotes46>"
"7954splitHere46","12885911splitHere46","<doubleQuotes46>{from: [0-9]+}/{to: [0-9]+}<doubleQuotes46>"
"7955splitHere46","12885911splitHere46","login/{username}/{password}"
"7956splitHere46","12885911splitHere46","ranges/{from}/{to}"
"7957splitHere46","12885943splitHere46","Manifest-Version: 1.0<newline46mondego>  Main-Class: MyMainClass<newline46mondego>"
"7958splitHere46","12885943splitHere46","jar cvfm myapp.jar myManifest *.class<newline46mondego>"
"7959splitHere46","12885943splitHere46","java -cp myjar.jar com.myco.myproj.MyMainClass<newline46mondego>"
"7960splitHere46","12885943splitHere46","MyClass"
"7961splitHere46","12885943splitHere46","MyClass"
"7962splitHere46","12885943splitHere46","main"
"7963splitHere46","12886051splitHere46","matrix[n][k] = n!/(k! * (n-k)!)<newline46mondego>"
"7964splitHere46","12886051splitHere46","(x+y)^2 = 1* x^2 + 2xy + 1*y^2<newline46mondego>(x+y)^3 = 1*x^3 + 3*xy^2 + 3yx^2 + 1*y^3<newline46mondego>"
"7965splitHere46","12886209splitHere46","=="
"7966splitHere46","12886209splitHere46","identity"
"7967splitHere46","12886209splitHere46","reference"
"7968splitHere46","12886209splitHere46","String"
"7969splitHere46","12886209splitHere46","equals"
"7970splitHere46","12886209splitHere46","if(x.equals(<doubleQuotes46>S<doubleQuotes46>))<newline46mondego>"
"7971splitHere46","12886302splitHere46","get"
"7972splitHere46","12886302splitHere46","Object"
"7973splitHere46","12886311splitHere46","org.apache.commons.collections.set.UnmodifiableSet"
"7974splitHere46","12886311splitHere46","java.util.Set"
"7975splitHere46","12886322splitHere46","Random random = new Random();<newline46mondego>    for(int i=0; i < 3; i++){<newline46mondego>        int randomNumber = random.nextInt(10);<newline46mondego>        System.out.print(randomNumber);<newline46mondego>    }<newline46mondego>        System.out.println();<newline46mondego>"
"7976splitHere46","12886322splitHere46","print"
"7977splitHere46","12886322splitHere46","String newConcatNumString = <doubleQuotes46><doubleQuotes46>;<newline46mondego>    Random random = new Random();<newline46mondego>    for(int i=0; i < 3; i++){<newline46mondego>       newConcatNumString  = newConcatNumString +random.nextInt(10);<newline46mondego>    }<newline46mondego>    System.out.println(newConcatNumString);<newline46mondego>"
"7978splitHere46","12886322splitHere46","int concatenatedValue = Integer.parseInt(newConcatNumString);<newline46mondego>"
"7979splitHere46","12886322splitHere46","Random"
"7980splitHere46","12886322splitHere46","for(int i=0; i < 3; i++){<newline46mondego>        int lotteryNumberDigit = (int)(Math.random()*10);<newline46mondego>        System.out.print(lotteryNumberDigit);<newline46mondego>    }<newline46mondego>    System.out.println();<newline46mondego>"
"7981splitHere46","12886322splitHere46","int[]"
"7982splitHere46","12886322splitHere46","int[] generatedNumbers = new int[3];<newline46mondego>    for(int i=0; i < 3; i++){<newline46mondego>        int lotteryNumberDigit = (int)(Math.random()*10);<newline46mondego>                    generatedNumbers[i] = lotteryNumberDigit;<newline46mondego>        System.out.print(lotteryNumberDigit);<newline46mondego>    }<newline46mondego>    System.out.println();<newline46mondego>"
"7983splitHere46","12886322splitHere46","generatedNumbers"
"7984splitHere46","12886322splitHere46","System.out.println(<doubleQuotes46>Please enter your three numbers, one digit at a time): <doubleQuotes46>);<newline46mondego>  for(int i=0; i<3; i++){<newline46mondego>    int userInput = input.next();<newline46mondego>    if(userInput == generatedNumbers[i]){<newline46mondego>        System.out.println(<doubleQuotes46>Your digit <doubleQuotes46>+i+<doubleQuotes46> is correct<doubleQuotes46>);<newline46mondego>    }else{<newline46mondego>        System.out.println(<doubleQuotes46>Your digit <doubleQuotes46>+i+<doubleQuotes46> is incorrect<doubleQuotes46>);<newline46mondego>    }<newline46mondego>  }<newline46mondego>"
"7985splitHere46","12886322splitHere46","if (userInput.equals(allNumbersWinner)) {<newline46mondego>         System.out.println(<doubleQuotes46>Winner: <doubleQuotes46> + allNumbersWinner );<newline46mondego>         System.out.println(<doubleQuotes46>Congratulations, both pairs matched.<doubleQuotes46>);<newline46mondego>    }else if(userInput.substring(0,2).equals(firstTwoWinner )) {<newline46mondego>        System.out.println(<doubleQuotes46>Winner: <doubleQuotes46> + allNumbersWinner);<newline46mondego>        System.out.println(<doubleQuotes46>Congratulations, the front pair matched.<doubleQuotes46>);<newline46mondego>    }else if (userInput.substring(1,3).equals(lastTwoWinner)) {<newline46mondego>         System.out.println(<doubleQuotes46>Winner: <doubleQuotes46> + allNumbersWinner );<newline46mondego>         System.out.println(<doubleQuotes46>Congratulations, the end pair matched.<doubleQuotes46>);<newline46mondego>    }else {<newline46mondego>         System.out.println(<doubleQuotes46>Winner: <doubleQuotes46> + allNumbersWinner );<newline46mondego>         System.out.println(<doubleQuotes46>Sorry, no matches. You only had one chance out of 100 to win anyway.<doubleQuotes46>);<newline46mondego>    }<newline46mondego>"
"7986splitHere46","12886330splitHere46","link"
"7987splitHere46","12886330splitHere46","LinkedList<Integer>"
"7988splitHere46","12886330splitHere46","LinkedList<Integer> l = new LinkedList<Integer>();<newline46mondego>l.add(Integer.valueOf(2));<newline46mondego>l.add(Integer.valueOf(0));<newline46mondego>l.add(Integer.valueOf(3));<newline46mondego>for(int j=0;j<p.length;j++)<newline46mondego>//it will be the same LinkedList<Integer> l per all the instances in the array<newline46mondego>    p[j] = new link(l);<newline46mondego>"
"7989splitHere46","12886330splitHere46","link"
"7990splitHere46","12886330splitHere46","list"
"7991splitHere46","12886330splitHere46","LinkedList<Integer> l"
"7992splitHere46","12886330splitHere46","link"
"7993splitHere46","12886330splitHere46","link[] p"
"7994splitHere46","12886347splitHere46","// in Graph<newline46mondego>public Graph deepCopy () {<newline46mondego>  Graph g = new Graph();<newline46mondego>  g.nodes = new ArrayList<Node>();<newline46mondego>  Map<Node, Node> isomorphism = new IdentityHashMap<Node, Node>();<newline46mondego>  for (Node n : nodes) { <newline46mondego>    g.nodes.add(n.deepCopy(isomorphism));<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>// in Node<newline46mondego>public Node deepCopy(Map<Node, Node> isomorphism) {<newline46mondego>    Node copy = isomorphism.get(this);<newline46mondego>    if (copy == null) {<newline46mondego>        copy = new Node();<newline46mondego>        isomorphism.put(this, copy);<newline46mondego>        for (Node connection: connections) {<newline46mondego>            copy.connections.add(connection.deepCopy(isomorphism));<newline46mondego>        }<newline46mondego>    }<newline46mondego>    return copy;<newline46mondego>}<newline46mondego>"
"7995splitHere46","12886354splitHere46","JPanel"
"7996splitHere46","12886354splitHere46","JTextField"
"7997splitHere46","12886354splitHere46","JPanel"
"7998splitHere46","12886354splitHere46","JPanel"
"7999splitHere46","12886365splitHere46","<super-source>"
"8000splitHere46","12886365splitHere46","package my.library;<newline46mondego><newline46mondego>public class EnvironmentFlags {<newline46mondego>  public static final boolean IS_GWT      = false;<newline46mondego>  public static final boolean IS_DEV_MODE = false;<newline46mondego>}<newline46mondego>"
"8001splitHere46","12886365splitHere46","package my.library;<newline46mondego><newline46mondego>import com.google.gwt.core.client.GWT;<newline46mondego><newline46mondego>public class EnvironmentFlags {<newline46mondego>  public static final boolean IS_GWT      = true;<newline46mondego>  public static final boolean IS_DEV_MODE = !GWT.isProdMode();<newline46mondego>}<newline46mondego>"
"8002splitHere46","12886365splitHere46","<module><newline46mondego>  <source       path='lib'   /><newline46mondego>  <super-source path='super' /><newline46mondego></module><newline46mondego>"
"8003splitHere46","12886365splitHere46","if (EnvironmentFlags.IS_GWT) {<newline46mondego>  // Do GWT stuff<newline46mondego>} else {<newline46mondego>  // Do plain-old Java stuff<newline46mondego>}<newline46mondego>"
"8004splitHere46","12886418splitHere46",">>"
"8005splitHere46","12886418splitHere46","num >> n"
"8006splitHere46","12886418splitHere46","num"
"8007splitHere46","12886418splitHere46","n"
"8008splitHere46","12886418splitHere46","System.out.println(4 >> 2); // Prints <doubleQuotes46>1<doubleQuotes46><newline46mondego>"
"8009splitHere46","12886418splitHere46","1"
"8010splitHere46","12886418splitHere46","0100"
"8011splitHere46","12886418splitHere46","0001"
"8012splitHere46","12886418splitHere46","0xAARRGGBB<newline46mondego>"
"8013splitHere46","12886418splitHere46","AA"
"8014splitHere46","12886418splitHere46","RR"
"8015splitHere46","12886418splitHere46","&"
"8016splitHere46","12886418splitHere46","AND"
"8017splitHere46","12886418splitHere46","RR"
"8018splitHere46","12886418splitHere46","A=255"
"8019splitHere46","12886418splitHere46","R=127"
"8020splitHere46","12886418splitHere46","G=0"
"8021splitHere46","12886418splitHere46","B=127"
"8022splitHere46","12886418splitHere46","0xAARRGGBB<newline46mondego>0xFF7F007F<newline46mondego>"
"8023splitHere46","12886418splitHere46","RR"
"8024splitHere46","12886418splitHere46","RR"
"8025splitHere46","12886418splitHere46","int pixel"
"8026splitHere46","12886418splitHere46","int pixel = 0xFF7F007F;<newline46mondego>"
"8027splitHere46","12886418splitHere46","int"
"8028splitHere46","12886418splitHere46","RR"
"8029splitHere46","12886418splitHere46","0x0000AARR<newline46mondego>0x0000FF7F<newline46mondego>"
"8030splitHere46","12886418splitHere46","int intermediate = pixel >> 16;<newline46mondego>"
"8031splitHere46","12886418splitHere46","16"
"8032splitHere46","12886418splitHere46",">>"
"8033splitHere46","12886418splitHere46","AA"
"8034splitHere46","12886418splitHere46","RR"
"8035splitHere46","12886418splitHere46","&"
"8036splitHere46","12886418splitHere46","0xFF"
"8037splitHere46","12886418splitHere46","F"
"8038splitHere46","12886418splitHere46","1111"
"8039splitHere46","12886418splitHere46","int red = intermediate & 0xFF"
"8040splitHere46","12886418splitHere46","0000 0000 0000 0000 1111 1111 0111 1111 (0x00007F7F)<newline46mondego>& 0000 0000 0000 0000 0000 0000 1111 1111 (0x000000FF)<newline46mondego>= 0000 0000 0000 0000 0000 0000 0111 1111 (0x0000007F)<newline46mondego>"
"8041splitHere46","12886418splitHere46","&"
"8042splitHere46","12886418splitHere46","red = 0x7F"
"8043splitHere46","12886418splitHere46","red = 127"
"8044splitHere46","12886418splitHere46","y"
"8045splitHere46","12886418splitHere46","x"
"8046splitHere46","12886418splitHere46","x"
"8047splitHere46","12886418splitHere46","y"
"8048splitHere46","12886418splitHere46","pixel"
"8049splitHere46","12886418splitHere46","y"
"8050splitHere46","12886418splitHere46","x"
"8051splitHere46","12886418splitHere46","x * y"
"8052splitHere46","12886418splitHere46","pixels"
"8053splitHere46","12886418splitHere46","getRGB"
"8054splitHere46","12886418splitHere46","0 1 2<newline46mondego>3 4 5<newline46mondego>6 7 8<newline46mondego>"
"8055splitHere46","12886418splitHere46","(0, 0)"
"8056splitHere46","12886418splitHere46","pixel[0]"
"8057splitHere46","12886418splitHere46","(1, 1)"
"8058splitHere46","12886418splitHere46","pixel[4]"
"8059splitHere46","12886418splitHere46","(1, 2)"
"8060splitHere46","12886418splitHere46","pixel[7]"
"8061splitHere46","12886418splitHere46","Coord. -> Index<newline46mondego>---------------<newline46mondego>(0, 0) -> 0<newline46mondego>(1, 0) -> 1<newline46mondego>(2, 0) -> 2<newline46mondego>(0, 1) -> 3<newline46mondego>(1, 1) -> 4<newline46mondego>(2, 1) -> 5<newline46mondego>(0, 2) -> 6<newline46mondego>(1, 2) -> 7<newline46mondego>(2, 2) -> 8<newline46mondego>"
"8062splitHere46","12886418splitHere46","(x, y)"
"8063splitHere46","12886418splitHere46","x * y"
"8064splitHere46","12886418splitHere46","Coord. -> Index<newline46mondego>-------------------<newline46mondego>(0, 0) -> 0 * 0 = 0<newline46mondego>(1, 0) -> 1 * 0 = 0<newline46mondego>(2, 0) -> 2 * 0 = 0<newline46mondego>(0, 1) -> 0 * 1 = 0<newline46mondego>(1, 1) -> 1 * 1 = 1<newline46mondego>(2, 1) -> 2 * 1 = 2<newline46mondego>(0, 2) -> 0 * 2 = 0<newline46mondego>(1, 2) -> 1 * 2 = 2<newline46mondego>(2, 2) -> 2 * 2 = 4<newline46mondego>"
"8065splitHere46","12886418splitHere46","x * y"
"8066splitHere46","12886418splitHere46","getRGB"
"8067splitHere46","12886418splitHere46","x = y * w"
"8068splitHere46","12886418splitHere46","w"
"8069splitHere46","12886418splitHere46","Coord. -> Index<newline46mondego>-----------------------<newline46mondego>(0, 0) -> 0 + 0 * 3 = 0<newline46mondego>(1, 0) -> 1 + 0 * 3 = 1<newline46mondego>(2, 0) -> 2 + 0 * 3 = 2<newline46mondego>(0, 1) -> 0 + 1 * 3 = 3<newline46mondego>(1, 1) -> 1 + 1 * 3 = 4<newline46mondego>(2, 1) -> 2 + 1 * 3 = 5<newline46mondego>(0, 2) -> 0 + 2 * 3 = 6<newline46mondego>(1, 2) -> 1 + 2 * 3 = 7<newline46mondego>(2, 2) -> 2 + 2 * 3 = 8<newline46mondego>"
"8070splitHere46","12886418splitHere46","y * w"
"8071splitHere46","12886418splitHere46","y * w"
"8072splitHere46","12886418splitHere46","y"
"8073splitHere46","12886418splitHere46","x"
"8074splitHere46","12886418splitHere46","y"
"8075splitHere46","12886418splitHere46","x"
"8076splitHere46","12886418splitHere46","x"
"8077splitHere46","12886418splitHere46","x"
"8078splitHere46","12886418splitHere46","y * w + x"
"8079splitHere46","12886418splitHere46","x"
"8080splitHere46","12886418splitHere46","y"
"8081splitHere46","12886418splitHere46","0"
"8082splitHere46","12886418splitHere46","3"
"8083splitHere46","12886418splitHere46","6"
"8084splitHere46","12886418splitHere46","1"
"8085splitHere46","12886418splitHere46","4"
"8086splitHere46","12886418splitHere46","7"
"8087splitHere46","12886418splitHere46","2"
"8088splitHere46","12886418splitHere46","5"
"8089splitHere46","12886418splitHere46","8"
"8090splitHere46","12886451splitHere46","onPreExecute()"
"8091splitHere46","12886451splitHere46","onProgressUpdate(Progress... values)"
"8092splitHere46","12886451splitHere46","onPostExecute(Result result)"
"8093splitHere46","12886451splitHere46","doInBackground(Params... params)"
"8094splitHere46","12886451splitHere46","publishProgress(Progress... values)"
"8095splitHere46","12886451splitHere46","doInBackground(Params... params)"
"8096splitHere46","12886451splitHere46","onProgressUpdate(Progress... values)"
"8097splitHere46","12886453splitHere46","PropertyChangeListener"
"8098splitHere46","12886453splitHere46","propertyChange(PropertyChangeEvent e)"
"8099splitHere46","12886523splitHere46","SomeClass.someStaticField = someValue;"
"8100splitHere46","12886713splitHere46","int firstIndex = 1;<newline46mondego>int lastIndex = sorted.length;<newline46mondego>"
"8101splitHere46","12886713splitHere46","int firstIndex = 0;<newline46mondego>int lastIndex = sorted.length - 1;<newline46mondego>"
"8102splitHere46","12886713splitHere46","lastIndex"
"8103splitHere46","12886713splitHere46","middleIndex - 1"
"8104splitHere46","12886713splitHere46","middleIndex + 1"
"8105splitHere46","12886784splitHere46","+"
"8106splitHere46","12886784splitHere46","System.out.println()"
"8107splitHere46","12886879splitHere46","ArrayList<Fragment>"
"8108splitHere46","12886879splitHere46",".get(i)"
"8109splitHere46","12886879splitHere46","Class clazz = Class.forName(<doubleQuotes46>DummySection<doubleQuotes46> + i + <doubleQuotes46>Fragment<doubleQuotes46>); // Use <doubleQuotes46>, not '<newline46mondego>Fragment frag = (Fragment) clazz.newInstance();<newline46mondego>"
"8110splitHere46","12886911splitHere46","LayoutManager"
"8111splitHere46","12886911splitHere46","Container"
"8112splitHere46","12886911splitHere46","Frame"
"8113splitHere46","12886911splitHere46","Panel"
"8114splitHere46","12886911splitHere46","Applet"
"8115splitHere46","12886911splitHere46","Container"
"8116splitHere46","12886911splitHere46","LayoutManager"
"8117splitHere46","12886911splitHere46","Container"
"8118splitHere46","12886911splitHere46","LayoutManager"
"8119splitHere46","12886911splitHere46","public class MyGUI {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        Frame f = new Frame(<doubleQuotes46>Layout Example<doubleQuotes46>);<newline46mondego>        Panel mainPanel = new Panel(new BorderLayout());<newline46mondego>        f.add(mainPanel);<newline46mondego><newline46mondego>        Panel toolBar = new Panel(new FlowLayout());<newline46mondego>        toolBar.add(new Button(<doubleQuotes46>Button 1<doubleQuotes46>));<newline46mondego>        toolBar.add(new Button(<doubleQuotes46>Button 2<doubleQuotes46>));<newline46mondego>        mainPanel.add(tollBar.NORTH);<newline46mondego><newline46mondego>        Panel statusBar = new Panel(new FlowLayout());<newline46mondego>        statusBar.add(new Label(<doubleQuotes46>Status<doubleQuotes46>));<newline46mondego>        mainPanel.add(statusBar);<newline46mondego><newline46mondego>        f.pack();<newline46mondego>        f.show();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8120splitHere46","12886911splitHere46","Panel"
"8121splitHere46","12886911splitHere46","LayoutManager"
"8122splitHere46","12886911splitHere46","Panel"
"8123splitHere46","12886911splitHere46","LayoutManager"
"8124splitHere46","12886911splitHere46","Frame"
"8125splitHere46","12886911splitHere46","JFrame"
"8126splitHere46","12886911splitHere46","Panel"
"8127splitHere46","12886911splitHere46","JPanel"
"8128splitHere46","12886911splitHere46","Button"
"8129splitHere46","12886911splitHere46","JButton"
"8130splitHere46","12886911splitHere46","Label"
"8131splitHere46","12886911splitHere46","JLabel"
"8132splitHere46","12886946splitHere46","String[] strs = ... ;<newline46mondego>for (String str : strs) {<newline46mondego>    // Do something with str<newline46mondego>}<newline46mondego>"
"8133splitHere46","12886946splitHere46","Collection"
"8134splitHere46","12886946splitHere46","Collection<String> strs = ... ;<newline46mondego>for (String str : strs) {<newline46mondego>    // Do something with str<newline46mondego>}<newline46mondego>"
"8135splitHere46","12886946splitHere46","Iterator"
"8136splitHere46","12886983splitHere46","for (int i = 0; i < aryList.size(); i++) {<newline46mondego>    if (aryList.get(i)>number) {<newline46mondego>       break;<newline46mondego>    }<newline46mondego>  loc++;<newline46mondego>}<newline46mondego>"
"8137splitHere46","12887046splitHere46","public void executeSQLUpdate(String sql, List<Object> arguments) {<newline46mondego>    Connection con = null;<newline46mondego>    PreparedStatement pstmt = null;<newline46mondego>    try {<newline46mondego>        con = getConnection(); //a method that returns a java.sql.Connection to your database<newline46mondego>        pstmt = con.prepareStatement(sql);<newline46mondego>        if (arguments != null) {<newline46mondego>            int i = 1;<newline46mondego>            for(Object o : arguments) {<newline46mondego>                pstmt.setObject(i++, o);<newline46mondego>            }<newline46mondego>        }<newline46mondego>        //method to execute insert, update, delete statements...<newline46mondego>        pstmt.executeUpdate();<newline46mondego>    } catch(SQLException e) {<newline46mondego>        //handle the error...<newline46mondego>    } finally {<newline46mondego>        //closing the resources (always in finally block, not in the try!)<newline46mondego>        try {<newline46mondego>            if (pstmt != null) {<newline46mondego>                pstmt.close();<newline46mondego>            }<newline46mondego>            if (con != null) {<newline46mondego>                con.close();<newline46mondego>            }<newline46mondego>        } catch (SQLException e) {<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>//calling the method to execute a sql insert statement<newline46mondego>public void yourMethodToData(List<Object> arguments) {<newline46mondego>    String sql = <doubleQuotes46>INSERT INTO YOUR TABLE VALUES(?)<doubleQuotes46>;<newline46mondego>    executeSQLUpdate(sql, arguments);<newline46mondego>}<newline46mondego>"
"8138splitHere46","12887046splitHere46","Vector"
"8139splitHere46","12887046splitHere46","List"
"8140splitHere46","12887046splitHere46","Vector"
"8141splitHere46","12887046splitHere46","Vector"
"8142splitHere46","12887046splitHere46","List<Object>"
"8143splitHere46","12887046splitHere46","ArrayList<Object>"
"8144splitHere46","12887120splitHere46","String query = <doubleQuotes46>//*[@name= 'Critic User']<doubleQuotes46><newline46mondego>XPathExpression<Element> xpe = XPathFactory.instance().compile(Filters.element(), query);<newline46mondego>for (Element urle : xpe.evaluate(mydoc) {<newline46mondego>    System.out.printf(<doubleQuotes46>This Element has name '%s' and text '%s'\n<doubleQuotes46>,<newline46mondego>          urle.getName(), urle.getValue());<newline46mondego>}<newline46mondego>"
"8145splitHere46","12887136splitHere46","File"
"8146splitHere46","12887136splitHere46","listFiles"
"8147splitHere46","12887136splitHere46","// assuming myDir is the File object that represents the directory<newline46mondego>File[] dirContent = myDir.listFiles();<newline46mondego>for (File f : dirContent)<newline46mondego>{<newline46mondego>    if (!f.isDirectory())<newline46mondego>    {<newline46mondego>        // process file.<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8148splitHere46","12887136splitHere46","File#listFiles(FileFilter)"
"8149splitHere46","12887136splitHere46","// assuming myDir is the File object that represents the directory<newline46mondego>File[] dirContent = myDir.listFiles(new FileFilter() {<newline46mondego>    @Override boolean accept(File pathname)<newline46mondego>    {<newline46mondego>        return !pathname.isDirectory();<newline46mondego>    }<newline46mondego>});<newline46mondego>for (File f : dirContent)<newline46mondego>{<newline46mondego>    // process file.<newline46mondego>}<newline46mondego>"
"8150splitHere46","12887167splitHere46","Thread"
"8151splitHere46","12887167splitHere46","Runnable"
"8152splitHere46","12887167splitHere46","Runnable"
"8153splitHere46","12887167splitHere46","run"
"8154splitHere46","12887167splitHere46","// Inside you thread...<newline46mondego>// Some block action...<newline46mondego><newline46mondego>SwingUtilities.invokeLater(new Runnable() {<newline46mondego>    public void run() {<newline46mondego>        // Executing within the EDT...<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"8155splitHere46","12887167splitHere46","SwingWorker"
"8156splitHere46","12887167splitHere46","Thread"
"8157splitHere46","12887167splitHere46","done"
"8158splitHere46","12887344splitHere46","public class Base {<newline46mondego>    private BaseObjectDependency base_object_dependency;<newline46mondego><newline46mondego>    public BaseObjectDependency getBase_object_dependency() {<newline46mondego>        return base_object_dependency;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8159splitHere46","12887344splitHere46","public class Child extends Base {<newline46mondego>    private ChildObjectDependency child_object_dependency;<newline46mondego><newline46mondego>    public void myMethod() {<newline46mondego>        BaseObjectDependency obj = getBase_object_dependency();<newline46mondego>        //do something here<newline46mondego>    }<newline46mondego><newline46mondego>    public ChildObjectDependency getChild_object_dependency() {<newline46mondego>        return child_object_dependency;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8160splitHere46","12887344splitHere46","public class BaseObjectDependency { }<newline46mondego><newline46mondego>public class ChildObjectDependency { }<newline46mondego>"
"8161splitHere46","12887344splitHere46","import org.mockito.Mock;<newline46mondego><newline46mondego>public class MockBase {<newline46mondego>    @Mock protected BaseObjectDependency base_test_dependency_mock;<newline46mondego>}<newline46mondego>"
"8162splitHere46","12887344splitHere46","import org.mockito.InjectMocks;<newline46mondego>import org.mockito.Mock;<newline46mondego>import org.mockito.MockitoAnnotations;<newline46mondego>import org.testng.annotations.BeforeClass;<newline46mondego>import org.testng.annotations.Test;<newline46mondego><newline46mondego>import static org.testng.Assert.assertEquals;<newline46mondego>import static org.testng.Assert.assertNotNull;<newline46mondego><newline46mondego>public class ChildTest extends MockBase {<newline46mondego>    @InjectMocks private Child child;<newline46mondego><newline46mondego>    @Mock private ChildObjectDependency child_test_dependency_mock;<newline46mondego><newline46mondego><newline46mondego>    @BeforeClass<newline46mondego>    public void setUp() {<newline46mondego>        MockitoAnnotations.initMocks(this);<newline46mondego>    }<newline46mondego><newline46mondego>    @Test<newline46mondego>    public void check_that_mocks_are_correctly_injected() {<newline46mondego>        assertNotNull(child.getBase_object_dependency());<newline46mondego>        assertEquals(base_test_dependency_mock, child.getBase_object_dependency());<newline46mondego><newline46mondego>        assertNotNull(child.getChild_object_dependency());<newline46mondego>        assertEquals(child_test_dependency_mock, child.getChild_object_dependency());<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8163splitHere46","12887344splitHere46","getBase_object_dependency()"
"8164splitHere46","12887426splitHere46","DateFormat"
"8165splitHere46","12887426splitHere46","iterate"
"8166splitHere46","12887426splitHere46","//use the date format patter as desired <newline46mondego><% java.text.DateFormat formatter= new java.text.SimpleDateFormat(<doubleQuotes46>mm/dd/yyyy)<doubleQuotes46>);%><newline46mondego>"
"8167splitHere46","12887426splitHere46","formatter.format(Parent_Engagement_Name);<newline46mondego>"
"8168splitHere46","12887426splitHere46","<s:iterator value=<doubleQuotes46>parentEngagementOfList<doubleQuotes46>><newline46mondego>        <s:property value=<doubleQuotes46>Parent_Engagement_Name<doubleQuotes46>/><newline46mondego>        <s:set name=<doubleQuotes46>myenv<doubleQuotes46> value=<doubleQuotes46>%{Parent_Engagement_Name}<doubleQuotes46>/><newline46mondego>        <s:set name=<doubleQuotes46>num<doubleQuotes46> value=<doubleQuotes46>%{formatter.format(Parent_Engagement_Date)}<doubleQuotes46>/><newline46mondego>           <li><a href=<doubleQuotes46><doubleQuotes46>><s:property value=<doubleQuotes46>%{myenv}<doubleQuotes46>/></a></li><newline46mondego>           <li><a href=<doubleQuotes46><doubleQuotes46>><s:date value=<doubleQuotes46>%{num}<doubleQuotes46>/></a></li><newline46mondego>           <p>This is inside iterator </p><newline46mondego><newline46mondego><newline46mondego></s:iterator><newline46mondego>"
"8169splitHere46","12887480splitHere46","Object"
"8170splitHere46","12887480splitHere46","Object"
"8171splitHere46","12887480splitHere46","Integer"
"8172splitHere46","12887480splitHere46","Integer aInteger = (Integer)aThing;<newline46mondego>//it could maybe work<newline46mondego>aInteger.intValue();<newline46mondego>"
"8173splitHere46","12887480splitHere46","class Animal {<newline46mondego>    public void move() {<newline46mondego>        System.out.println(<doubleQuotes46>I'm an animal and I can move.<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class Cat extends Animal {<newline46mondego>    //this means a Cat would change the move behavior from the Animal instance<newline46mondego>    @Override<newline46mondego>    public void move() {<newline46mondego>        System.out.println(<doubleQuotes46>I'm a cat and I can move.<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class Dog extends Animal {<newline46mondego>    //this means a Cat would change the move behavior from the Animal instance<newline46mondego>    @Override<newline46mondego>    public void move() {<newline46mondego>        System.out.println(<doubleQuotes46>I'm a dog and I like to run.<doubleQuotes46>);<newline46mondego>    }<newline46mondego>    public void bark() {<newline46mondego>        System.out.println(<doubleQuotes46>I can bark!<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public class AnimalTest {<newline46mondego>    public static void main(String[] args) {<newline46mondego>         //it will take the behavior of the Animal class reference<newline46mondego>         Animal animal = new Animal();<newline46mondego>         //it will take the behavior of the Cat class reference<newline46mondego>         Animal cat = new Cat();<newline46mondego>         //it will take the behavior of the Dog class reference<newline46mondego>         Animal dog = new Dog();<newline46mondego>         //this will invoke the Animal#move method<newline46mondego>         animal.move();<newline46mondego>         //this will invoke the Cat#move method because it was overriden in the Cat class<newline46mondego>         cat.move();<newline46mondego>         //this will invoke the Dog#move method because it was overriden in the Dog class<newline46mondego>         dog.move();<newline46mondego>         //this line won't compile if uncommented because not all animals can bark.<newline46mondego>         //dog.bark();<newline46mondego>         //if you want to make the dog barks, then you should use the downcasting<newline46mondego>         ((Dog)dog).bark();<newline46mondego>         //note that this will only work for Dog class reference, not for any other class<newline46mondego>         //uncomment this line and the code will compile but throw a ClassCastException<newline46mondego>         //((Dog)cat).bark();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8174splitHere46","12887511splitHere46","frame.pack();<newline46mondego>frame.setVisible(true);<newline46mondego>"
"8175splitHere46","12887533splitHere46","Upload"
"8176splitHere46","12887533splitHere46","TransferManager"
"8177splitHere46","12887533splitHere46","upload(...)"
"8178splitHere46","12887554splitHere46","else if ((now >= (1000 * 60 * 60 * 48) && (now < (1000 * 60 * 60 * 24 * 30))))<newline46mondego>"
"8179splitHere46","12887688splitHere46","public static final FileFilter DIRS = new FileFilter() {<newline46mondego><newline46mondego>  public boolean accept(File file) {<newline46mondego>    return file.isDirectory();<newline46mondego>  }<newline46mondego><newline46mondego>};<newline46mondego><newline46mondego>public static final FileFilter FILES = new FileFilter() {<newline46mondego><newline46mondego>  public boolean accept(File file) {<newline46mondego>    return file.isFile();<newline46mondego>  }<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>public void walkTree(File start) throws IOException {<newline46mondego><newline46mondego>  File[] dirs = start.listFiles(DIRS);<newline46mondego>  File[] files = start.listFiles(FILES);<newline46mondego><newline46mondego>  for (File file : files) {<newline46mondego>    if (file.canRead()) {<newline46mondego>      if (readAndCheck(file, <doubleQuotes46>string<doubleQuotes46>)) {<newline46mondego>        // Do Whatever<newline46mondego>      }<newline46mondego>    }<newline46mondego>  }<newline46mondego><newline46mondego>  for (File dir : dirs) {<newline46mondego>    walkTree(dir);<newline46mondego>  }<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>public boolean readAndCheck(File file, String string) throws IOException {<newline46mondego><newline46mondego>  BufferedReader br = null;<newline46mondego>  StringBuilder total = new StringBuilder();<newline46mondego><newline46mondego>  try {<newline46mondego><newline46mondego>    // If line separators matter in your pattern, consider reading every character<newline46mondego>    br = new BufferedReader(new FileReader(file));<newline46mondego>    String line;<newline46mondego>    while ((line = br.readLine()) != null) {<newline46mondego>      total.append(line);<newline46mondego>    }<newline46mondego><newline46mondego>  } finally {<newline46mondego>    if (br != null) {<newline46mondego>      br.close();<newline46mondego>    }<newline46mondego>  }<newline46mondego><newline46mondego>  return total.toString().contains(string);<newline46mondego><newline46mondego>}<newline46mondego>"
"8180splitHere46","12887746splitHere46","RowMapper"
"8181splitHere46","12887746splitHere46","new RowMapper() { ... }<newline46mondego>"
"8182splitHere46","12887746splitHere46","()"
"8183splitHere46","12887751splitHere46","EUR'>([^<]*)<<newline46mondego>"
"8184splitHere46","12887865splitHere46","for (String element : list) {<newline46mondego>    System.out.println(element);<newline46mondego>}<newline46mondego>"
"8185splitHere46","12887875splitHere46","c = 'E'<newline46mondego><newline46mondego>return reverseString(<doubleQuotes46>LLO<doubleQuotes46>) + E<newline46mondego>"
"8186splitHere46","12887875splitHere46","return S = 'O'<newline46mondego>"
"8187splitHere46","12887882splitHere46","SortedMap<String, List<Task>> taskMap = new ConcurrentSkipListMap<String, List<Task>>();<newline46mondego>taskMap.put(task.getPerson().getName(), task);<newline46mondego>"
"8188splitHere46","12888023splitHere46","public class MazeSolver {<newline46mondego><newline46mondego>    final static int TRIED = 2;<newline46mondego>    final static int PATH = 3;<newline46mondego><newline46mondego>    // @formatter:off<newline46mondego>    private static int[][] GRID = { <newline46mondego>        { 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1 },<newline46mondego>        { 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1 },<newline46mondego>        { 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0 },<newline46mondego>        { 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1 },<newline46mondego>        { 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1 },<newline46mondego>        { 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1 },<newline46mondego>        { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },<newline46mondego>        { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 } <newline46mondego>    };<newline46mondego>    // @formatter:off<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        MazeSolver maze = new MazeSolver(GRID);<newline46mondego>        boolean solved = maze.solve();<newline46mondego>        System.out.println(<doubleQuotes46>Solved: <doubleQuotes46> + solved);<newline46mondego>        System.out.println(maze.toString());<newline46mondego>    }<newline46mondego><newline46mondego>    private int[][] grid;<newline46mondego>    private int height;<newline46mondego>    private int width;<newline46mondego><newline46mondego>    private int[][] map;<newline46mondego><newline46mondego>    public MazeSolver(int[][] grid) {<newline46mondego>        this.grid = grid;<newline46mondego>        this.height = grid.length;<newline46mondego>        this.width = grid[0].length;<newline46mondego><newline46mondego>        this.map = new int[height][width];<newline46mondego>    }<newline46mondego><newline46mondego>    public boolean solve() {<newline46mondego>        return traverse(0,0);<newline46mondego>    }<newline46mondego><newline46mondego>    private boolean traverse(int i, int j) {<newline46mondego>        if (!isValid(i,j)) {<newline46mondego>            return false;<newline46mondego>        }<newline46mondego><newline46mondego>        if ( isEnd(i, j) ) {<newline46mondego>            map[i][j] = PATH;<newline46mondego>            return true;<newline46mondego>        } else {<newline46mondego>            map[i][j] = TRIED;<newline46mondego>        }<newline46mondego><newline46mondego>        // North<newline46mondego>        if (traverse(i - 1, j)) {<newline46mondego>            map[i-1][j] = PATH;<newline46mondego>            return true;<newline46mondego>        }<newline46mondego>        // East<newline46mondego>        if (traverse(i, j + 1)) {<newline46mondego>            map[i][j + 1] = PATH;<newline46mondego>            return true;<newline46mondego>        }<newline46mondego>        // South<newline46mondego>        if (traverse(i + 1, j)) {<newline46mondego>            map[i + 1][j] = PATH;<newline46mondego>            return true;<newline46mondego>        }<newline46mondego>        // West<newline46mondego>        if (traverse(i, j - 1)) {<newline46mondego>            map[i][j - 1] = PATH;<newline46mondego>            return true;<newline46mondego>        }<newline46mondego><newline46mondego>        return false;<newline46mondego>    }<newline46mondego><newline46mondego>    private boolean isEnd(int i, int j) {<newline46mondego>        return i == height - 1 && j == width - 1;<newline46mondego>    }<newline46mondego><newline46mondego>    private boolean isValid(int i, int j) {<newline46mondego>        if (inRange(i, j) && isOpen(i, j) && !isTried(i, j)) {<newline46mondego>            return true;<newline46mondego>        }<newline46mondego><newline46mondego>        return false;<newline46mondego>    }<newline46mondego><newline46mondego>    private boolean isOpen(int i, int j) {<newline46mondego>        return grid[i][j] == 1;<newline46mondego>    }<newline46mondego><newline46mondego>    private boolean isTried(int i, int j) {<newline46mondego>        return map[i][j] == TRIED;<newline46mondego>    }<newline46mondego><newline46mondego>    private boolean inRange(int i, int j) {<newline46mondego>        return inHeight(i) && inWidth(j);<newline46mondego>    }<newline46mondego><newline46mondego>    private boolean inHeight(int i) {<newline46mondego>        return i >= 0 && i < height;<newline46mondego>    }<newline46mondego><newline46mondego>    private boolean inWidth(int j) {<newline46mondego>        return j >= 0 && j < width;<newline46mondego>    }<newline46mondego><newline46mondego>    public String toString() {<newline46mondego>        String s = <doubleQuotes46><doubleQuotes46>;<newline46mondego>        for (int[] row : map) {<newline46mondego>            s += Arrays.toString(row) + <doubleQuotes46>\n<doubleQuotes46>;<newline46mondego>        }<newline46mondego><newline46mondego>        return s;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"8189splitHere46","12888154splitHere46","FindAdjacent(x, y)<newline46mondego>       if (matrix[x-1][y-1] == matrix[x][y])<newline46mondego>            return 1 + FindAdjacent(x-1,y-1);<newline46mondego>       .. Repeat for all 7 other adjacent locations (-1, +0) (+0, -1) (+1, -1) (-1, +1) (+1, +1) (+1, 0) (0, +1)<newline46mondego>       else return 1;<newline46mondego>"
"8190splitHere46","12888154splitHere46",">= k"
"8191splitHere46","12888360splitHere46","(r, theta)"
"8192splitHere46","12888360splitHere46","theta"
"8193splitHere46","12888360splitHere46","theta"
"8194splitHere46","12888399splitHere46","Dog"
"8195splitHere46","12888399splitHere46","public void addPuppy(Puppy puppy){<newline46mondego>           if (this.puppies == null){<newline46mondego>               this.puppies = new HashSet<Puppy>();<newline46mondego>           }<newline46mondego>           puppy.setDog(this); // <--This will set dog as parent in puppy class<newline46mondego>           this.puppies.add(puppy);<newline46mondego>    }<newline46mondego>"
"8196splitHere46","12888399splitHere46","Cascade"
"8197splitHere46","12888399splitHere46","ALL"
"8198splitHere46","12888399splitHere46","puppies"
"8199splitHere46","12888399splitHere46","Dog"
"8200splitHere46","12888399splitHere46","dog"
"8201splitHere46","12888399splitHere46","puppy/puppies"
"8202splitHere46","12888399splitHere46","Dog dog = ....getDog object/create new dog object<newline46mondego>       Puppy puppy = new Puppy();<newline46mondego>       // set puppy attributes.<newline46mondego>       dog.addPuppy(puppy);<newline46mondego>       //call save method for dog<newline46mondego>       dogDao.save(dog);<newline46mondego>"
"8203splitHere46","12888405splitHere46","extension 2.5.29.15"
"8204splitHere46","12888405splitHere46","KeyUsage"
"8205splitHere46","12888405splitHere46","X509V3CertificateGenerator"
"8206splitHere46","12888405splitHere46","addExtension()"
"8207splitHere46","12888405splitHere46","X509ExtensionsGenerator.addExtension()"
"8208splitHere46","12888405splitHere46","certGen.addExtension(X509Extensions.KeyUsage, true, new BasicConstraints(false));<newline46mondego>certGen.addExtension(X509Extensions.KeyUsage, true, new KeyUsage(KeyUsage.digitalSignature | KeyUsage.keyEncipherment));<newline46mondego>"
"8209splitHere46","12888423splitHere46","String"
"8210splitHere46","12888423splitHere46","String"
"8211splitHere46","12888423splitHere46",".equals()"
"8212splitHere46","12888423splitHere46",".equalsIgnoreCase()"
"8213splitHere46","12888423splitHere46","=="
"8214splitHere46","12888423splitHere46","Strings/objects"
"8215splitHere46","12888465splitHere46","export LD_LIBRARY_PATH=/usr/lib/jvm/java-7-oracle/lib/amd64:/usr/lib/jvm/java-7-oracle/jre/lib/amd64/server<newline46mondego>"
"8216splitHere46","12888465splitHere46","sudo R CMD javareconf<newline46mondego>"
"8217splitHere46","12888494splitHere46","WebDriver"
"8218splitHere46","12888494splitHere46","jQuery"
"8219splitHere46","12888494splitHere46","Page Object"
"8220splitHere46","12888494splitHere46","Groovy"
"8221splitHere46","12888494splitHere46","Spock"
"8222splitHere46","12888494splitHere46","JUnit"
"8223splitHere46","12888494splitHere46","TestNG"
"8224splitHere46","12888494splitHere46","Browser.drive {<newline46mondego>  // Load the page<newline46mondego>  go <doubleQuotes46>http://myapp.com<doubleQuotes46><newline46mondego><newline46mondego>  // $(<doubleQuotes46>a<doubleQuotes46>) returns all hyperlinks on the page, similar to jQuery<newline46mondego>  $(<doubleQuotes46>a<doubleQuotes46>).each { a -><newline46mondego>     // Display the required link properties and attributes<newline46mondego>     println <doubleQuotes46><doubleQuotes46><doubleQuotes46><newline46mondego>        The link to '${a.@href}' with text '${a.text()}' is at location (${a.x}, ${a.y}),<newline46mondego>        with a height of ${a.height}px and a width of ${a.width}px.<newline46mondego>     <doubleQuotes46><doubleQuotes46><doubleQuotes46><newline46mondego>  }<newline46mondego>}<newline46mondego>"
"8225splitHere46","12888786splitHere46","RssParser"
"8226splitHere46","12888786splitHere46","RssParser.getDate()"
"8227splitHere46","12888786splitHere46","RssParser"
"8228splitHere46","12888786splitHere46","RssParser.getDate()"
"8229splitHere46","12888786splitHere46","DateParser"
"8230splitHere46","12888786splitHere46","@Override    <newline46mondego>protected Date getDate(String dateString, int rssType)<newline46mondego>{<newline46mondego>     return DateParser.getDate(dateString, rssType);<newline46mondego>}<newline46mondego>"
"8231splitHere46","12888786splitHere46","RssParser"
"8232splitHere46","12888846splitHere46","sqljdbc4.jar"
"8233splitHere46","12888846splitHere46","WebContent/WEB-INF/lib"
"8234splitHere46","12888846splitHere46","pom.xml"
"8235splitHere46","12888876splitHere46","while((line = reader.readLine()) != null)<newline46mondego>"
"8236splitHere46","12888946splitHere46","for (die2 = 0; die2 <= 6 && die2 != 0; die2++)<newline46mondego>    for (die1 = 0; die1 <= 6 && die1 != 0; die1++)<newline46mondego>        // Do something<newline46mondego>"
"8237splitHere46","12888946splitHere46","die2 = 0;<newline46mondego>while (die2 <= 6 && die2 != 0) {<newline46mondego>    die1 = 0;<newline46mondego>    while (die1 <= 6 && die1 != 0) {<newline46mondego>        // Do something<newline46mondego>        die1++;<newline46mondego>    }<newline46mondego>    die2++;<newline46mondego>}<newline46mondego>"
"8238splitHere46","12888946splitHere46","die2"
"8239splitHere46","12888946splitHere46","die2"
"8240splitHere46","12888946splitHere46","for (die2 = 1; die2 <= 6; die2++)<newline46mondego>    for (die1 = 1; die1 <= 6; die1++)<newline46mondego>        // Do something<newline46mondego>"
"8241splitHere46","12888946splitHere46","die2"
"8242splitHere46","12888946splitHere46","die1"
"8243splitHere46","12888946splitHere46","continue"
"8244splitHere46","12888983splitHere46","<%@ page isELIgnored=<doubleQuotes46>false<doubleQuotes46> %>"
"8245splitHere46","12889054splitHere46","Filter"
"8246splitHere46","12889054splitHere46","ServletRequest"
"8247splitHere46","12889054splitHere46","doFilter"
"8248splitHere46","12889054splitHere46","service"
"8249splitHere46","12889054splitHere46","doGet"
"8250splitHere46","12889054splitHere46","doPost"
"8251splitHere46","12889054splitHere46","HTTPServlet"
"8252splitHere46","12889054splitHere46","doFilter"
"8253splitHere46","12889054splitHere46","ServletRequest.getParameter"
"8254splitHere46","12889054splitHere46","null"
"8255splitHere46","12889054splitHere46","FilterChain.doFilter"
"8256splitHere46","12889054splitHere46","public void doFilter(ServletRequest req, ServletResponse resp,<newline46mondego>                     FilterChain chain)<newline46mondego>{<newline46mondego>    // ...<newline46mondego><newline46mondego>    if (req.getParameter(MY_PARAMNAME) != null)<newline46mondego>        chain.doFilter(req, resp);<newline46mondego>    // otherwise don't call doFilter<newline46mondego><newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"8257splitHere46","12889054splitHere46","<param-name>required_parameter_name</param-name><newline46mondego><param-value>csrf-token</param-value><newline46mondego>"
"8258splitHere46","12889054splitHere46","init"
"8259splitHere46","12889054splitHere46","public void init(FilterConfig filterConfig)<newline46mondego>{<newline46mondego>    // ...<newline46mondego><newline46mondego>    // use this value in your doFilter method, in place of MY_PARAMNAME, above<newline46mondego>    this.requiredParameterName =<newline46mondego>        filterConfig.getInitParameter(<doubleQuotes46>required_parameter_name<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"8260splitHere46","12889069splitHere46","CommandLink"
"8261splitHere46","12889069splitHere46","jquery.js.jsf?ln=primefaces"
"8262splitHere46","12889069splitHere46","CommandLink"
"8263splitHere46","12889069splitHere46","false"
"8264splitHere46","12889255splitHere46","<servlet-mapping>"
"8265splitHere46","12889255splitHere46","web.xml"
"8266splitHere46","12889255splitHere46","<servlet><newline46mondego> <servlet-name>MyServlet</servlet-name><newline46mondego> <servlet-class>coreservlets.ShowParameters</servlet-class><newline46mondego> </servlet><newline46mondego><newline46mondego> <servlet-mapping><newline46mondego> <servlet-name>MyServlet</servlet-name><newline46mondego> <url-pattern>/show</url-pattern><newline46mondego> </servlet-mapping><newline46mondego>"
"8267splitHere46","12889255splitHere46","<form action=<doubleQuotes46>show<doubleQuotes46>>"
"8268splitHere46","12889283splitHere46","String windowsPath = <doubleQuotes46>\\Users\\FunkyGuy\\My Documents\\Hello.txt<doubleQuotes46>;<newline46mondego>"
"8269splitHere46","12889312splitHere46","DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();<newline46mondego>DocumentBuilder db = dbf.newDocumentBuilder();<newline46mondego>Document doc = db.parse(f);<newline46mondego>Element root = doc.getDocumentElement();<newline46mondego>NodeList nodeList = doc.getElementsByTagName(<doubleQuotes46>player<doubleQuotes46>);<newline46mondego>for (int i = 0; i < nodeList.getLength(); i++) {<newline46mondego>  Node node = nodeList.item(i);<newline46mondego>  // do your stuff<newline46mondego>}<newline46mondego>"
"8270splitHere46","12889312splitHere46","DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();<newline46mondego>DocumentBuilder builder = factory.newDocumentBuilder();<newline46mondego>Document doc = builder.parse(<uri_as_string>);<newline46mondego>XPathFactory xPathfactory = XPathFactory.newInstance();<newline46mondego>XPath xpath = xPathfactory.newXPath();<newline46mondego>XPathExpression expr = xpath.compile(<doubleQuotes46>/GameWorld/player<doubleQuotes46>);<newline46mondego>NodeList nl = (NodeList) expr.evaluate(doc, XPathConstants.NODESET);<newline46mondego>"
"8271splitHere46","12889331splitHere46","i"
"8272splitHere46","12889331splitHere46","chunkdata.length"
"8273splitHere46","12889331splitHere46","i"
"8274splitHere46","12889331splitHere46","start"
"8275splitHere46","12889331splitHere46","counter"
"8276splitHere46","12889331splitHere46","int counter = 0;<newline46mondego>   for(int i=start;i<chunkdata.length;i++){<newline46mondego>      file[i]=chunkdata[counter]; //Data loss here?<newline46mondego>      counter++;<newline46mondego>   }<newline46mondego>"
"8277splitHere46","12889331splitHere46","int counter = 0;<newline46mondego>   for(int i=start;counter<chunkdata.length;i++){<newline46mondego>       file[i]=chunkdata[counter]; //Data loss here?<newline46mondego>       counter++;<newline46mondego>   }<newline46mondego>"
"8278splitHere46","12889331splitHere46","for(int i=start,counter = 0;counter<chunkdata.length;i++,counter++){<newline46mondego>       file[i]=chunkdata[counter]; //Data loss here?<newline46mondego>   }<newline46mondego>"
"8279splitHere46","12889336splitHere46","ArrayList"
"8280splitHere46","12889336splitHere46","Arrays.sort"
"8281splitHere46","12889336splitHere46","Collections.sort"
"8282splitHere46","12889480splitHere46","public class PrinterService {<newline46mondego><newline46mondego>    public PrintService getCheckPrintService(String printerName) {<newline46mondego>        PrintService ps = null;<newline46mondego>        DocFlavor doc_flavor = DocFlavor.STRING.TEXT_PLAIN;<newline46mondego>        PrintRequestAttributeSet attr_set =<newline46mondego>                new HashPrintRequestAttributeSet();<newline46mondego><newline46mondego>        attr_set.add(new Copies(1));           <newline46mondego>        attr_set.add(Sides.ONE_SIDED);<newline46mondego>        PrintService[] service = PrintServiceLookup.lookupPrintServices(doc_flavor, attr_set);<newline46mondego><newline46mondego>        for (int i = 0; i < service.length; i++) {<newline46mondego>            System.out.println(service[i].getName());<newline46mondego>            if (service[i].getName().equals(printerName)) {<newline46mondego>                ps = service[i];<newline46mondego>            }<newline46mondego>        }<newline46mondego>        return ps;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8283splitHere46","12889480splitHere46","public class HelloWorldPrinter implements Printable {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public int print(Graphics graphics, PageFormat pageFormat, int pageIndex) throws PrinterException {<newline46mondego>        if (pageIndex > 0) { /* We have only one page, and 'page' is zero-based */<newline46mondego>            return NO_SUCH_PAGE;<newline46mondego>        }<newline46mondego><newline46mondego>        Graphics2D g2d = (Graphics2D) graphics;<newline46mondego>        g2d.translate(pageFormat.getImageableX(), pageFormat.getImageableY());<newline46mondego><newline46mondego>        String mText = <doubleQuotes46>SHOP MA;<doubleQuotes46><newline46mondego>                + <doubleQuotes46>Pannampitiya;<doubleQuotes46><newline46mondego>                + <doubleQuotes46>----------------------------;<doubleQuotes46><newline46mondego>                + <doubleQuotes46>09-10-2012 harsha  no: 001 ;<doubleQuotes46><newline46mondego>                + <doubleQuotes46>No  Item  Qty  Price  Amount ;<doubleQuotes46><newline46mondego>                + <doubleQuotes46>----------------------------;<doubleQuotes46><newline46mondego>                + <doubleQuotes46>1 Bread 1 50.00  50.00 ;<doubleQuotes46><newline46mondego>                + <doubleQuotes46>----------------------------;<doubleQuotes46>;<newline46mondego><newline46mondego>        //Prepare the rendering<newline46mondego>        String[] bill = mText.split(<doubleQuotes46>;<doubleQuotes46>);<newline46mondego>        int y = 15;<newline46mondego>        Font f = new Font(Font.SANS_SERIF, Font.PLAIN, 8);<newline46mondego>        graphics.setFont(f);<newline46mondego>        for (int i = 0; i < bill.length; i++) {<newline46mondego>            graphics.drawString(bill[i], 5, y);<newline46mondego>            y = y + 15;<newline46mondego>        }<newline46mondego><newline46mondego>        /* tell the caller that this page is part of the printed document */<newline46mondego>        return PAGE_EXISTS;<newline46mondego>    }<newline46mondego><newline46mondego>    public void pp() throws PrinterException {<newline46mondego>        PrinterService ps = new PrinterService();<newline46mondego>        //get the printer service by printer name<newline46mondego>        PrintService pss = ps.getCheckPrintService(<doubleQuotes46>Deskjet-1000-J110-series-2<doubleQuotes46>);<newline46mondego><newline46mondego>        PrinterJob job = PrinterJob.getPrinterJob();<newline46mondego>        job.setPrintService(pss);<newline46mondego>        job.setPrintable(this);<newline46mondego><newline46mondego>        try {<newline46mondego>            job.print();<newline46mondego>        } catch (PrinterException ex) {<newline46mondego>            ex.printStackTrace();<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        HelloWorldPrinter hwp = new HelloWorldPrinter();<newline46mondego>        try {<newline46mondego>            hwp.pp();<newline46mondego>        } catch (Exception e) {<newline46mondego>            e.printStackTrace();<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8284splitHere46","12889493splitHere46","System.out.println(<doubleQuotes46>Test<doubleQuotes46>)<newline46mondego>"
"8285splitHere46","12889660splitHere46",".bak"
"8286splitHere46","12889660splitHere46",".bak"
"8287splitHere46","12889660splitHere46",".bak"
"8288splitHere46","12889699splitHere46","ClassA"
"8289splitHere46","12889699splitHere46","CGLibProxy"
"8290splitHere46","12889699splitHere46","net.sf.cglib.proxy.Enhancer"
"8291splitHere46","12889699splitHere46","import net.sf.cglib.proxy.Enhancer;<newline46mondego><newline46mondego>public class CGLibProxyMain {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        Enhancer enhancer = new Enhancer();<newline46mondego>        enhancer.setSuperclass(ClassA.class);<newline46mondego>        enhancer.setCallback(new CGLibProxy());<newline46mondego>        ClassA a = (ClassA) enhancer.create(new Class[] {ClassB.class}, new Object[] {new ClassB()});<newline46mondego>        System.out.println(a.printB());;<newline46mondego>        System.out.println(a.otherMethod());<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8292splitHere46","12889764splitHere46","Calendar cal = Calendar.getInstance(); // creates calendar<newline46mondego>cal.setTime(new Date()); // sets calendar time/date=====> you can set your own date here<newline46mondego>cal.add(Calendar.HOUR_OF_DAY, 5); // adds one hour<newline46mondego>cal.add(Calendar.MINUTE, 30); // adds one Minute<newline46mondego>cal.getTime(); // returns new date object, one hour in the future<newline46mondego>"
"8293splitHere46","12889788splitHere46","getScheme()"
"8294splitHere46","12889788splitHere46","<doubleQuotes46>http://<doubleQuotes46>"
"8295splitHere46","12889855splitHere46","@Inject"
"8296splitHere46","12889855splitHere46","@Inject"
"8297splitHere46","12889868splitHere46","Collator coll = Collator.getInstance(locale);<newline46mondego>coll.setStrength(Collator.PRIMARY) // thanks to @BheshGurung for reminding me<newline46mondego>Collections.sort(words, coll);<newline46mondego>"
"8298splitHere46","12889868splitHere46","Collections.sort(...)"
"8299splitHere46","12889917splitHere46","ByteBuffer"
"8300splitHere46","12889917splitHere46","position"
"8301splitHere46","12889917splitHere46","limit"
"8302splitHere46","12889917splitHere46","ByteBuffer.flip()"
"8303splitHere46","12889917splitHere46","ByteBuffer.array()"
"8304splitHere46","12889917splitHere46","bufferLen"
"8305splitHere46","12889917splitHere46","String"
"8306splitHere46","12889917splitHere46","String"
"8307splitHere46","12889917splitHere46","writeBuffer.put(inputLine.getBytes()); <newline46mondego>writeBuffer.flip();                       // <--here<newline46mondego>client.write(writeBuffer);<newline46mondego>...<newline46mondego>writeBuffer.clear();                      // <-- should be clear() instead of flip()<newline46mondego>Thread.sleep(300);<newline46mondego>"
"8308splitHere46","12889917splitHere46","// readBuffer.flip();                      // <-- remove this line<newline46mondego>int i=ClientNIO.client.read(readBuffer); <newline46mondego>if(i>0) { <newline46mondego>    readBuffer.flip();                     // <-- move it here<newline46mondego>    byte[] b=readBuffer.array(); <newline46mondego>    System.out.println(<doubleQuotes46>Receiving data: <doubleQuotes46>+new String(b)); <newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"8309splitHere46","12889968splitHere46","69[0,{<doubleQuotes46>dabcdefghij<doubleQuotes46>:{},<doubleQuotes46>abcdefg<doubleQuotes46>:<doubleQuotes46>20<doubleQuotes46>,<doubleQuotes46>abcdefghijklmn<doubleQuotes46>:<doubleQuotes46>10, AB-11111<doubleQuotes46>}]"
"8310splitHere46","12890019splitHere46","Document doc = // ... eg. parse File / String here or connect to a website<newline46mondego>Node value;<newline46mondego><newline46mondego>for( Element element : doc.select(<doubleQuotes46>strong ~ *<doubleQuotes46>) )<newline46mondego>{<newline46mondego>    // element.previousSibling() is possible too<newline46mondego>    value = element.nextSibling();<newline46mondego>    System.out.println(value);<newline46mondego>}<newline46mondego>"
"8311splitHere46","12890019splitHere46","static title 1: value 1 <newline46mondego> static title 2: value 2 <newline46mondego> static title 3: value 3 <newline46mondego> static title 4: value 4 <newline46mondego>"
"8312splitHere46","12890183splitHere46","toString"
"8313splitHere46","12890183splitHere46","toString"
"8314splitHere46","12890183splitHere46","String password = new String(passwordField.getPassword());<newline46mondego>"
"8315splitHere46","12890330splitHere46","count"
"8316splitHere46","12890414splitHere46","ResultSet"
"8317splitHere46","12890414splitHere46","ResultSet"
"8318splitHere46","12890414splitHere46","ResultSet"
"8319splitHere46","12890693splitHere46","Image"
"8320splitHere46","12890693splitHere46","Image"
"8321splitHere46","12890693splitHere46","writer.setStrictImageSequence(true)"
"8322splitHere46","12890693splitHere46","ColumnText"
"8323splitHere46","12890693splitHere46","PdfPTable"
"8324splitHere46","12890693splitHere46","Image"
"8325splitHere46","12890693splitHere46","Image"
"8326splitHere46","12890693splitHere46","Image"
"8327splitHere46","12890693splitHere46","Image"
"8328splitHere46","12890693splitHere46","Chunk"
"8329splitHere46","12890693splitHere46","Image"
"8330splitHere46","12890693splitHere46","ColumnText"
"8331splitHere46","12890700splitHere46","public void appendFileInTarArchive(String tarPath, String tarFileName, String file2WriteName, String file2WriteContent) throws AuthenticationException, IOException {<newline46mondego>    if (tarPath == null || tarFileName == null || tarFileName.isEmpty()) {<newline46mondego>        LOG.warn(<doubleQuotes46>The path or the name of the tar archive is null or empty.<doubleQuotes46>);<newline46mondego>        return;<newline46mondego>    }<newline46mondego>    final File tarFile = new File(tarPath, tarFileName);<newline46mondego>    final File fileToAdd = new File(tarPath, file2WriteName);<newline46mondego>    FileUtils.write(fileToAdd, file2WriteContent);<newline46mondego><newline46mondego>    if (file2WriteName == null || file2WriteName.isEmpty()) {<newline46mondego>        LOG.warn(<doubleQuotes46>The name of the file to append in the archive is null or empty.<doubleQuotes46>);<newline46mondego>        return;<newline46mondego>    }<newline46mondego><newline46mondego>    ArchiveStreamFactory asf = new ArchiveStreamFactory();<newline46mondego><newline46mondego>    File tempFile = new File(tarPath, <doubleQuotes46>tmpTar.tar<doubleQuotes46>);<newline46mondego>    tempFile.createNewFile();<newline46mondego><newline46mondego>    try {<newline46mondego>        FileInputStream fis = new FileInputStream(tarFile);<newline46mondego>        ArchiveInputStream ais = asf.createArchiveInputStream(ArchiveStreamFactory.TAR, fis);<newline46mondego><newline46mondego>        FileOutputStream fos = new FileOutputStream(tempFile);<newline46mondego>        ArchiveOutputStream aos = asf.createArchiveOutputStream(ArchiveStreamFactory.TAR, fos);<newline46mondego><newline46mondego>        // copy the existing entries    <newline46mondego>        ArchiveEntry nextEntry;<newline46mondego>        while ((nextEntry = ais.getNextEntry()) != null) {<newline46mondego>            aos.putArchiveEntry(nextEntry);<newline46mondego>            IOUtils.copy(ais, aos);<newline46mondego>            aos.closeArchiveEntry();<newline46mondego>        }<newline46mondego><newline46mondego>        // create the new entry<newline46mondego>        TarArchiveEntry entry = new TarArchiveEntry(file2WriteName);<newline46mondego>        entry.setSize(fileToAdd.length());<newline46mondego>        aos.putArchiveEntry(entry);<newline46mondego>        IOUtils.copy(new FileInputStream(fileToAdd), aos);<newline46mondego>        aos.closeArchiveEntry();<newline46mondego><newline46mondego>        aos.finish();<newline46mondego><newline46mondego>        ais.close();<newline46mondego>        aos.close();<newline46mondego><newline46mondego>        // copies the new file over the old<newline46mondego>        tarFile.delete();<newline46mondego>        tempFile.renameTo(tarFile);<newline46mondego><newline46mondego>    } catch (ArchiveException e) {<newline46mondego>        LOG.error(e.getMessage(), e);<newline46mondego>    } catch (IOException e) {<newline46mondego>        LOG.error(e.getMessage(), e);<newline46mondego>    } finally {<newline46mondego>        FileUtils.deleteQuietly(fileToAdd);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8332splitHere46","12890872splitHere46","private static char getHighLow(Scanner inScanner) {<newline46mondego>    System.out.print(<doubleQuotes46>High, low or sevens (H/L/S):<doubleQuotes46>);<newline46mondego>    String entered = inScanner.nextLine();<newline46mondego>    System.out.print(entered);<newline46mondego>    if(entered.equals(<doubleQuotes46>H<doubleQuotes46>) || entered.equals(<doubleQuotes46>h<doubleQuotes46>)){<newline46mondego>        return 'h';<newline46mondego>    }<newline46mondego>    else if (entered.equals(<doubleQuotes46>L<doubleQuotes46>) || entered.equals(<doubleQuotes46>l<doubleQuotes46>)){<newline46mondego>        return 'l';<newline46mondego>    }<newline46mondego>    else if(entered.equals(<doubleQuotes46>S<doubleQuotes46>) || entered.equals(<doubleQuotes46>s<doubleQuotes46>)){<newline46mondego>        return 's';<newline46mondego>    }<newline46mondego>    else {<newline46mondego>        System.out.println(<doubleQuotes46>Invalid entry. Please try again using H/L/S!<doubleQuotes46>);<newline46mondego>        return getHighLow(inScanner);<newline46mondego>    }   <newline46mondego>}<newline46mondego>"
"8333splitHere46","12891086splitHere46","super();"
"8334splitHere46","12891086splitHere46","B() {<newline46mondego>        super();<newline46mondego>        System.out.println(<doubleQuotes46>B<doubleQuotes46>);<newline46mondego>    }<newline46mondego>"
"8335splitHere46","12891086splitHere46","B() {<newline46mondego>        System.out.println(<doubleQuotes46>B<doubleQuotes46>);<newline46mondego>    }<newline46mondego>"
"8336splitHere46","12891111splitHere46",".equals()"
"8337splitHere46","12891111splitHere46","=="
"8338splitHere46","12891111splitHere46","=="
"8339splitHere46","12891111splitHere46","!="
"8340splitHere46","12891271splitHere46","AplotDatasetData"
"8341splitHere46","12891271splitHere46","ModelProvider"
"8342splitHere46","12891271splitHere46","APlotDataModel"
"8343splitHere46","12891271splitHere46","List"
"8344splitHere46","12891271splitHere46","List"
"8345splitHere46","12891271splitHere46","indexOf(Object)"
"8346splitHere46","12891271splitHere46","AplotDatasetData selected = ...<newline46mondego>int index = AplotDataModel.getInstance().getIndexOf(selected);<newline46mondego>"
"8347splitHere46","12891271splitHere46","public int getIndexOf(APlotDatasetData object)<newline46mondego>{<newline46mondego>    return LIST_HOLDING_YOUR_DATA.indexOf(object);<newline46mondego>}<newline46mondego>"
"8348splitHere46","12891409splitHere46","UserType"
"8349splitHere46","12891409splitHere46","bid"
"8350splitHere46","12891409splitHere46","A"
"8351splitHere46","12891409splitHere46","UserType"
"8352splitHere46","12891409splitHere46","nullSafeGet()"
"8353splitHere46","12891409splitHere46","nullSafeSet()"
"8354splitHere46","12891409splitHere46","UserType"
"8355splitHere46","12891409splitHere46","B"
"8356splitHere46","12891583splitHere46","authentication-success-handler-ref"
"8357splitHere46","12891583splitHere46","<form-login>"
"8358splitHere46","12891583splitHere46","onAuthenticationSuccess"
"8359splitHere46","12891677splitHere46","@Override<newline46mondego>public View getView(int position, View convertView, ViewGroup parent) {<newline46mondego>View view = super.getView(position, convertView, parent);<newline46mondego>TextView text = (TextView) view.findViewById(R.id.spinner);<newline46mondego>text.setTextColor(Color.RED);<newline46mondego>return view;<newline46mondego>}<newline46mondego>"
"8360splitHere46","12891800splitHere46","List"
"8361splitHere46","12891800splitHere46","set"
"8362splitHere46","12891800splitHere46","HashMap<Integer, Object>"
"8363splitHere46","12891800splitHere46","ArrayList"
"8364splitHere46","12891854splitHere46","<servlet-class>com.sun.jersey.spi.spring.container.servlet.SpringServlet</servlet-class><newline46mondego>"
"8365splitHere46","12891919splitHere46","<servlet-class>com.sun.jersey.spi.spring.container.servlet.SpringServlet</servlet-class><newline46mondego>"
"8366splitHere46","12891925splitHere46","ActionContext.getContext().setLocale(locale)"
"8367splitHere46","12891925splitHere46","session.put(I18nInterceptor.DEFAULT_SESSION_ATTRIBUTE, locale)"
"8368splitHere46","12892040splitHere46","@Singleton"
"8369splitHere46","12892040splitHere46","LockType.WRITE"
"8370splitHere46","12892040splitHere46","@ConcurrencyManagement(CONTAINER)"
"8371splitHere46","12892040splitHere46","@Lock(LockType.WRITE)"
"8372splitHere46","12892040splitHere46","REQUIRED"
"8373splitHere46","12892040splitHere46","Stateless Bean A ----->                          ---> Read/Write <newline46mondego>Stateless Bean B ----->  |C|B| Singleton --> |A| ---> Read/Write<newline46mondego>Stateless Bean C ----->                          ---> Read/Write<newline46mondego>"
"8374splitHere46","12892040splitHere46","@Lock(LockType.WRITE)"
"8375splitHere46","12892040splitHere46","@Lock(LockType.READ)"
"8376splitHere46","12892132splitHere46","entityManager.clear();"
"8377splitHere46","12892132splitHere46","entityManager.getCache().evictAll();"
"8378splitHere46","12892132splitHere46","entityManagerFactory.getCache.evictAll();"
"8379splitHere46","12892132splitHere46","HashMap props = new HashMap();<newline46mondego>// Semantically, refresh already bypasses the second level cache, no hint required. <newline46mondego>// But this hint says to then store the refreshed value back in the second level cache:<newline46mondego>props.put(<doubleQuotes46>javax.persistence.cache.storeMode<doubleQuotes46>, CacheStoreMode.REFRESH);<newline46mondego>em.refresh(ent, props);<newline46mondego>"
"8380splitHere46","12892136splitHere46","WeakReference"
"8381splitHere46","12892136splitHere46","WeakReference"
"8382splitHere46","12892136splitHere46","public class CustomTextField {<newline46mondego>    // Only necessary if multiple threads can create UI elements<newline46mondego>    private static final Object lock = new Object();<newline46mondego>    private static WeakReference<Image> keypadRef;<newline46mondego><newline46mondego>    private final Image keypad;<newline46mondego><newline46mondego>    public CustomTextField() {<newline46mondego>        this.keypad = loadKeypad();<newline46mondego>    }<newline46mondego><newline46mondego>    private static Image loadKeypad() {<newline46mondego>        Image keypad = null;<newline46mondego>        // Same comment as above: you don't need the lock if the UI elements are<newline46mondego>        // not created in multiple threads.<newline46mondego>        synchronized (lock) {<newline46mondego>            if (keypadRef != null) {<newline46mondego>                keypad = keypadRef.get();<newline46mondego>            }<newline46mondego>            // Either there was no existing reference, or it referenced a GCed<newline46mondego>            // object.<newline46mondego>            if (keypad == null) {<newline46mondego>                keypad = new Image();<newline46mondego>                keypadRef = new WeakReference(keypad);<newline46mondego>            }<newline46mondego>        }<newline46mondego>        return keypad;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8383splitHere46","12892206splitHere46","XPath xpath = XPathFactory.newInstance().newXPath();<newline46mondego>XPathExpression xpr = xpath.compile(<doubleQuotes46>//Parent/name-of-item/name-of-item<doubleQuotes46>);<newline46mondego>System.out.println(xpr.evaluate(configurationDocument, XPathConstants.STRING));<newline46mondego>"
"8384splitHere46","12892237splitHere46","..new ImageIcon(<doubleQuotes46>path upto image<doubleQuotes46>); <newline46mondego>"
"8385splitHere46","12892237splitHere46","URL"
"8386splitHere46","12892237splitHere46","String"
"8387splitHere46","12892237splitHere46","File"
"8388splitHere46","12892244splitHere46","public class TestJdom<newline46mondego>{<newline46mondego>  public static void main(String[] args) throws JDOMException, IOException {<newline46mondego>    String xmlString = <doubleQuotes46><test><tag xml:lang=\<doubleQuotes46>123\<doubleQuotes46>></tag></test><doubleQuotes46>;<newline46mondego>    SAXBuilder builder = new SAXBuilder();<newline46mondego><newline46mondego>    StringReader stringReader = new StringReader(new String(xmlString<newline46mondego>        .getBytes()));<newline46mondego><newline46mondego>    Document doc = builder.build(stringReader);<newline46mondego>    List<?> attrs = doc.getRootElement().getChild(<doubleQuotes46>tag<doubleQuotes46>).getAttributes();<newline46mondego>    System.out.println(attrs);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"8389splitHere46","12892337splitHere46","public int searchPageNumber()<newline46mondego>{<newline46mondego>    XController xController = OODocument.getCurrentDocument().getXFrame().getController();<newline46mondego><newline46mondego>    XTextViewCursorSupplier supTextViewCursor =<newline46mondego>                (XTextViewCursorSupplier) UnoRuntime.queryInterface(<newline46mondego>                    XTextViewCursorSupplier.class, xController);<newline46mondego><newline46mondego>    XTextViewCursor curTextView = supTextViewCursor.getViewCursor();<newline46mondego><newline46mondego>    // gets the page cursor and assigns the text view cursor to the page<newline46mondego>    XPageCursor curPage =<newline46mondego>                (XPageCursor) UnoRuntime.queryInterface(<newline46mondego>                    XPageCursor.class, curTextView);<newline46mondego>    System.out.println(<doubleQuotes46>The current page number is <doubleQuotes46> + curPage.getPage());<newline46mondego><newline46mondego>    // gets the model<newline46mondego>    XModel model = xController.getModel();<newline46mondego>    // assigns model to the document<newline46mondego>    XTextDocument xTextDocument = (XTextDocument) UnoRuntime.queryInterface(XTextDocument.class, model);<newline46mondego>    // Xsearchable so we can search the text<newline46mondego>    XSearchable xSearchable = (XSearchable) UnoRuntime.queryInterface(XSearchable.class, xTextDocument); <newline46mondego>    XSearchDescriptor xsd = (XSearchDescriptor) xSearchable.createSearchDescriptor(); <newline46mondego><newline46mondego>    xsd.setSearchString(<doubleQuotes46>zzzzz<doubleQuotes46>);<newline46mondego><newline46mondego>    XInterface xfi = (XInterface) xSearchable.findFirst(xsd); <newline46mondego>    if (xfi != null) { <newline46mondego>        XTextRange xStart = (com.sun.star.text.XTextRange) UnoRuntime.queryInterface( <newline46mondego>                com.sun.star.text.XTextRange.class, xfi); <newline46mondego><newline46mondego>        curTextView.gotoRange(xStart, false); <newline46mondego>    } <newline46mondego><newline46mondego>    System.out.println(<doubleQuotes46>current page = <doubleQuotes46> + curPage.getPage());<newline46mondego>    return curPage.getPage();<newline46mondego>}<newline46mondego>"
"8390splitHere46","12892346splitHere46","public class TestTableColumns {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        new TestTableColumns();<newline46mondego>    }<newline46mondego><newline46mondego>    public TestTableColumns() {<newline46mondego>        EventQueue.invokeLater(new Runnable() {<newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                try {<newline46mondego>                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());<newline46mondego>                } catch (ClassNotFoundException ex) {<newline46mondego>                } catch (InstantiationException ex) {<newline46mondego>                } catch (IllegalAccessException ex) {<newline46mondego>                } catch (UnsupportedLookAndFeelException ex) {<newline46mondego>                }<newline46mondego><newline46mondego>                DefaultTableModel model =new DefaultTableModel(<newline46mondego>                                new Object[][] {<newline46mondego>                                    {<doubleQuotes46>1<doubleQuotes46>, <doubleQuotes46>2<doubleQuotes46>},<newline46mondego>                                    {<doubleQuotes46>11<doubleQuotes46>, <doubleQuotes46>21<doubleQuotes46>},<newline46mondego>                                    {<doubleQuotes46>12<doubleQuotes46>, <doubleQuotes46>22<doubleQuotes46>},<newline46mondego>                                    {<doubleQuotes46>13<doubleQuotes46>, <doubleQuotes46>23<doubleQuotes46>},<newline46mondego>                                    {<doubleQuotes46>14<doubleQuotes46>, <doubleQuotes46>24<doubleQuotes46>},<newline46mondego>                                    {<doubleQuotes46>15<doubleQuotes46>, <doubleQuotes46>25<doubleQuotes46>},<newline46mondego>                                    {<doubleQuotes46>16<doubleQuotes46>, <doubleQuotes46>26<doubleQuotes46>},<newline46mondego>                                    {<doubleQuotes46>17<doubleQuotes46>, <doubleQuotes46>27<doubleQuotes46>},<newline46mondego>                                    {<doubleQuotes46>18<doubleQuotes46>, <doubleQuotes46>28<doubleQuotes46>}}, <newline46mondego>                                new Object[] {<newline46mondego>                                    <doubleQuotes46>Small<doubleQuotes46>, <doubleQuotes46>Big<doubleQuotes46>});<newline46mondego><newline46mondego>                JTable table = new JTable(model);<newline46mondego>                table.setShowHorizontalLines(true);<newline46mondego>                table.setShowVerticalLines(true);<newline46mondego>                table.setShowGrid(true);<newline46mondego>                table.setGridColor(Color.DARK_GRAY);<newline46mondego>                table.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);<newline46mondego>                table.getColumn(<doubleQuotes46>Small<doubleQuotes46>).setPreferredWidth(100);<newline46mondego>                table.getColumn(<doubleQuotes46>Small<doubleQuotes46>).setWidth(12);<newline46mondego>                table.getColumn(<doubleQuotes46>Big<doubleQuotes46>).setPreferredWidth(400);<newline46mondego>                table.getColumn(<doubleQuotes46>Big<doubleQuotes46>).setWidth(100);<newline46mondego><newline46mondego>                JFrame frame = new JFrame();<newline46mondego>                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>                frame.setLayout(new BorderLayout());<newline46mondego>                frame.add(new JScrollPane(table));<newline46mondego>                frame.pack();<newline46mondego>                frame.setLocationRelativeTo(null);<newline46mondego>                frame.setVisible(true);<newline46mondego>            }            <newline46mondego>        });<newline46mondego>    }    <newline46mondego>}<newline46mondego>"
"8391splitHere46","12892346splitHere46","JTable"
"8392splitHere46","12892361splitHere46","public int searchPageNumber()<newline46mondego>{<newline46mondego>    XController xController = OODocument.getCurrentDocument().getXFrame().getController();<newline46mondego><newline46mondego>    XTextViewCursorSupplier supTextViewCursor =<newline46mondego>                (XTextViewCursorSupplier) UnoRuntime.queryInterface(<newline46mondego>                    XTextViewCursorSupplier.class, xController);<newline46mondego><newline46mondego>    XTextViewCursor curTextView = supTextViewCursor.getViewCursor();<newline46mondego><newline46mondego>    // gets the page cursor and assigns the text view cursor to the page<newline46mondego>    XPageCursor curPage =<newline46mondego>                (XPageCursor) UnoRuntime.queryInterface(<newline46mondego>                    XPageCursor.class, curTextView);<newline46mondego>    System.out.println(<doubleQuotes46>The current page number is <doubleQuotes46> + curPage.getPage());<newline46mondego><newline46mondego>    // gets the model<newline46mondego>    XModel model = xController.getModel();<newline46mondego>    // assigns model to the document<newline46mondego>    XTextDocument xTextDocument = (XTextDocument) UnoRuntime.queryInterface(XTextDocument.class, model);<newline46mondego>    // Xsearchable so we can search the text<newline46mondego>    XSearchable xSearchable = (XSearchable) UnoRuntime.queryInterface(XSearchable.class, xTextDocument); <newline46mondego>    XSearchDescriptor xsd = (XSearchDescriptor) xSearchable.createSearchDescriptor(); <newline46mondego><newline46mondego>    xsd.setSearchString(<doubleQuotes46>zzzzz<doubleQuotes46>);<newline46mondego><newline46mondego>    XInterface xfi = (XInterface) xSearchable.findFirst(xsd); <newline46mondego>    if (xfi != null) { <newline46mondego>        XTextRange xStart = (com.sun.star.text.XTextRange) UnoRuntime.queryInterface( <newline46mondego>                com.sun.star.text.XTextRange.class, xfi); <newline46mondego><newline46mondego>        curTextView.gotoRange(xStart, false); <newline46mondego>    } <newline46mondego><newline46mondego>    System.out.println(<doubleQuotes46>current page = <doubleQuotes46> + curPage.getPage());<newline46mondego>    return curPage.getPage();<newline46mondego>}<newline46mondego>"
"8393splitHere46","12892690splitHere46","LayerDrawable"
"8394splitHere46","12892737splitHere46","command=<doubleQuotes46>diff <doubleQuotes46>+mp.get(<doubleQuotes46>directory<doubleQuotes46>)+<doubleQuotes46>/<doubleQuotes46>+fileName+<doubleQuotes46> <doubleQuotes46>+mp.get(<doubleQuotes46>outdir<doubleQuotes46>)+<doubleQuotes46>/<doubleQuotes46>+fileName;<newline46mondego>p= Runtime.getRuntime().exec(command);<newline46mondego>p.waitFor();<newline46mondego>int exitStatus = p.exitValue()<newline46mondego>"
"8395splitHere46","12892737splitHere46","InputStream"
"8396splitHere46","12892740splitHere46","setModal(true)"
"8397splitHere46","12892740splitHere46","setVisible(true)"
"8398splitHere46","12892740splitHere46","public static MyOption showMyDialog() {<newline46mondego>    final JDialog myDialog = new JDialog();<newline46mondego>    myDialog.add(myPanel);<newline46mondego>    myDialog.setModal(true);<newline46mondego>    myDialog.setVisible(true); // blocker since the dialog is modal<newline46mondego><newline46mondego>    return myPanel.getSelectedOption();<newline46mondego>}<newline46mondego>"
"8399splitHere46","12892865splitHere46","inline valType roll<newline46mondego>(<newline46mondego>    detail::tquat<valType> const & q<newline46mondego>)<newline46mondego>{<newline46mondego>    return atan2(valType(2) * (q.x * q.y + q.w * q.z), q.w * q.w + q.x * q.x - q.y * q.y - q.z * q.z);<newline46mondego>}<newline46mondego><newline46mondego>template <typename valType> <newline46mondego>inline valType pitch<newline46mondego>(<newline46mondego>    detail::tquat<valType> const & q<newline46mondego>)<newline46mondego>{<newline46mondego>    return atan2(valType(2) * (q.y * q.z + q.w * q.x), q.w * q.w - q.x * q.x - q.y * q.y + q.z * q.z);<newline46mondego>}<newline46mondego><newline46mondego>template <typename valType> <newline46mondego>inline valType yaw<newline46mondego>(<newline46mondego>    detail::tquat<valType> const & q<newline46mondego>)<newline46mondego>{<newline46mondego>    return asin(valType(-2) * (q.x * q.z - q.w * q.y));<newline46mondego>}<newline46mondego>"
"8400splitHere46","12892865splitHere46","float roll = atan2(valType(2) * (q.x * q.y + q.w * q.z), q.w * q.w + q.x * q.x - q.y * q.y - q.z * q.z);<newline46mondego>float pitch = atan2(valType(2) * (q.y * q.z + q.w * q.x), q.w * q.w - q.x * q.x - q.y * q.y + q.z * q.z);<newline46mondego>float yaw = asin(valType(-2) * (q.x * q.z - q.w * q.y));<newline46mondego>vec3 EulerAngles = vec3(pitch, yaw, roll);<newline46mondego>"
"8401splitHere46","12892914splitHere46","SELECT<newline46mondego>    1<newline46mondego>FROM<newline46mondego>    TABLE<newline46mondego>;<newline46mondego>"
"8402splitHere46","12893004splitHere46","export JAVA_HOME=/usr/java/jdk1.6.0_33<newline46mondego>export PATH=$PATH:$JAVA_HOME/bin<newline46mondego>"
"8403splitHere46","12893111splitHere46","if(!processOn){<newline46mondego>    processOn = true;<newline46mondego>    new Thread(){<newline46mondego>        public void run(){<newline46mondego>            processData();<newline46mondego>        }<newline46mondego>    }.start();<newline46mondego>}<newline46mondego>response.send();<newline46mondego>"
"8404splitHere46","12893124splitHere46","<doubleQuotes46>15-9-2012 15-10-2012<doubleQuotes46>.replaceFirst(<doubleQuotes46> <doubleQuotes46>, <doubleQuotes46>@<doubleQuotes46>);<newline46mondego>"
"8405splitHere46","12893124splitHere46","public List<String> formatDate(List<String> strings) {<newline46mondego>    List<String> records = new ArrayList<String>();<newline46mondego><newline46mondego>    for (String s : strings) {<newline46mondego>        records.add(s.replaceFirst(<doubleQuotes46> <doubleQuotes46>, <doubleQuotes46>@<doubleQuotes46>));<newline46mondego>    }<newline46mondego>    return records;<newline46mondego>}<newline46mondego>"
"8406splitHere46","12893131splitHere46","Generic Type"
"8407splitHere46","12893131splitHere46","Mixer"
"8408splitHere46","12893131splitHere46","public <C extends Cat> Mixer<? super Dog> useMe(A a, C c)<newline46mondego>"
"8409splitHere46","12893131splitHere46","Mixer<? super Dog>"
"8410splitHere46","12893131splitHere46","Mixer"
"8411splitHere46","12893131splitHere46","Dog"
"8412splitHere46","12893131splitHere46","super-type"
"8413splitHere46","12893131splitHere46","Animal"
"8414splitHere46","12893131splitHere46","//return new Mixer<Object>();//KO<newline46mondego>    return new Mixer<Animal>(); //OK<newline46mondego>"
"8415splitHere46","12893131splitHere46","return"
"8416splitHere46","12893131splitHere46","Animal"
"8417splitHere46","12893131splitHere46","Object"
"8418splitHere46","12893131splitHere46","super-type"
"8419splitHere46","12893131splitHere46","Dog"
"8420splitHere46","12893131splitHere46","first one"
"8421splitHere46","12893131splitHere46","public class Mixer<A extends Animal><newline46mondego>"
"8422splitHere46","12893131splitHere46","bound"
"8423splitHere46","12893131splitHere46","type"
"8424splitHere46","12893131splitHere46","Mixer"
"8425splitHere46","12893131splitHere46","Animal"
"8426splitHere46","12893131splitHere46","subtype"
"8427splitHere46","12893131splitHere46","Object"
"8428splitHere46","12893131splitHere46","Animal"
"8429splitHere46","12893131splitHere46","new Mixer<Object>();<newline46mondego>"
"8430splitHere46","12893131splitHere46","new Mixer<Animal>(); // OR<newline46mondego>new Mixer<Dog>();  // Dog extends Animal  // OR<newline46mondego>new Mixer<Cat>();  // Cat extends Animal<newline46mondego><newline46mondego>// **** But NOT like this ******<newline46mondego>new Mixer<Object>();  // Object does not extend Animal<newline46mondego>"
"8431splitHere46","12893202splitHere46","/**<newline46mondego>   * List directory contents for a resource folder. Not recursive.<newline46mondego>   * This is basically a brute-force implementation.<newline46mondego>   * Works for regular files and also JARs.<newline46mondego>   * <newline46mondego>   * @author Greg Briggs<newline46mondego>   * @param clazz Any java class that lives in the same place as the resources you want.<newline46mondego>   * @param path Should end with <doubleQuotes46>/<doubleQuotes46>, but not start with one.<newline46mondego>   * @return Just the name of each member item, not the full paths.<newline46mondego>   * @throws URISyntaxException <newline46mondego>   * @throws IOException <newline46mondego>   */<newline46mondego>  String[] getResourceListing(Class clazz, String path) throws URISyntaxException, IOException {<newline46mondego>      URL dirURL = clazz.getClassLoader().getResource(path);<newline46mondego>      if (dirURL != null && dirURL.getProtocol().equals(<doubleQuotes46>file<doubleQuotes46>)) {<newline46mondego>        /* A file path: easy enough */<newline46mondego>        return new File(dirURL.toURI()).list();<newline46mondego>      } <newline46mondego><newline46mondego>      if (dirURL == null) {<newline46mondego>        /* <newline46mondego>         * In case of a jar file, we can't actually find a directory.<newline46mondego>         * Have to assume the same jar as clazz.<newline46mondego>         */<newline46mondego>        String me = clazz.getName().replace(<doubleQuotes46>.<doubleQuotes46>, <doubleQuotes46>/<doubleQuotes46>)+<doubleQuotes46>.class<doubleQuotes46>;<newline46mondego>        dirURL = clazz.getClassLoader().getResource(me);<newline46mondego>      }<newline46mondego><newline46mondego>      if (dirURL.getProtocol().equals(<doubleQuotes46>jar<doubleQuotes46>)) {<newline46mondego>        /* A JAR path */<newline46mondego>        String jarPath = dirURL.getPath().substring(5, dirURL.getPath().indexOf(<doubleQuotes46>!<doubleQuotes46>)); //strip out only the JAR file<newline46mondego>        JarFile jar = new JarFile(URLDecoder.decode(jarPath, <doubleQuotes46>UTF-8<doubleQuotes46>));<newline46mondego>        Enumeration<JarEntry> entries = jar.entries(); //gives ALL entries in jar<newline46mondego>        Set<String> result = new HashSet<String>(); //avoid duplicates in case it is a subdirectory<newline46mondego>        while(entries.hasMoreElements()) {<newline46mondego>          String name = entries.nextElement().getName();<newline46mondego>          if (name.startsWith(path)) { //filter according to the path<newline46mondego>            String entry = name.substring(path.length());<newline46mondego>            int checkSubdir = entry.indexOf(<doubleQuotes46>/<doubleQuotes46>);<newline46mondego>            if (checkSubdir >= 0) {<newline46mondego>              // if it is a subdirectory, we just return the directory name<newline46mondego>              entry = entry.substring(0, checkSubdir);<newline46mondego>            }<newline46mondego>            result.add(entry);<newline46mondego>          }<newline46mondego>        }<newline46mondego>        return result.toArray(new String[result.size()]);<newline46mondego>      } <newline46mondego><newline46mondego>      throw new UnsupportedOperationException(<doubleQuotes46>Cannot list files for URL <doubleQuotes46>+dirURL);<newline46mondego>  }<newline46mondego>"
"8432splitHere46","12893221splitHere46","if( dataLength ) ...<newline46mondego><newline46mondego>int readBytes = 0;<newline46mondego><newline46mondego>while( readBytes < dataLength )<newline46mondego>{<newline46mondego>   readBytes += in.read( data, readBytes, dataLength-readBytes);<newline46mondego>}<newline46mondego><newline46mondego>if( dataLength ) ...<newline46mondego>"
"8433splitHere46","12893424splitHere46","String str = <doubleQuotes46>GET /common/data/register/ HTTP/1.1\<doubleQuotes46> 200 254614 <doubleQuotes46> +<newline46mondego>            <doubleQuotes46>https://www.test.com/hiii/ Mozilla/5.0 <doubleQuotes46> +<newline46mondego>            <doubleQuotes46>(Windows NT 6.1; WOW64; rv:10.0.8) <doubleQuotes46> +<newline46mondego>            <doubleQuotes46>Gecko/20100101 Firefox/ <doubleQuotes46>;<newline46mondego><newline46mondego>    Pattern pattern = Pattern.compile(<doubleQuotes46>HTTP/\\d.\\d\<doubleQuotes46>\\s(\\d{3})<doubleQuotes46>);<newline46mondego>    Matcher match = pattern.matcher(str);<newline46mondego><newline46mondego>    while (match.find()) {<newline46mondego>        System.out.println(match.group(1));  // Prints 200<newline46mondego>    }<newline46mondego>"
"8434splitHere46","12893424splitHere46","HTTP/\\d.\\d\<doubleQuotes46>"
"8435splitHere46","12893424splitHere46","HTTP/1.1<doubleQuotes46>"
"8436splitHere46","12893424splitHere46","\\d.\\d"
"8437splitHere46","12893424splitHere46","(\\d{3})"
"8438splitHere46","12893588splitHere46","Icon"
"8439splitHere46","12893588splitHere46","JFrame"
"8440splitHere46","12893588splitHere46","op-Level Container"
"8441splitHere46","12893588splitHere46","Native OS"
"8442splitHere46","12893588splitHere46","fill"
"8443splitHere46","12893588splitHere46","smaller"
"8444splitHere46","12893588splitHere46","only part of"
"8445splitHere46","12893588splitHere46","Icon"
"8446splitHere46","12893588splitHere46","WinXP == 16 x 16"
"8447splitHere46","12893588splitHere46","Win7"
"8448splitHere46","12893588splitHere46","16 x 16"
"8449splitHere46","12893588splitHere46","32 x 32"
"8450splitHere46","12893588splitHere46","Top-Level Container"
"8451splitHere46","12893588splitHere46","Native OS"
"8452splitHere46","12893588splitHere46","Substance L&F"
"8453splitHere46","12893588splitHere46","JFrame"
"8454splitHere46","12893588splitHere46","JSR296 in Netbeans"
"8455splitHere46","12893588splitHere46","Icon"
"8456splitHere46","12893588splitHere46","Top-Level Containers"
"8457splitHere46","12893588splitHere46","RootPane"
"8458splitHere46","12893588splitHere46","Borders"
"8459splitHere46","12893588splitHere46","ContentPane"
"8460splitHere46","12893661splitHere46","boolean connection = checkNetworkConnection();<newline46mondego>    if(!connection){<newline46mondego>        createAlertDialog();<newline46mondego>    }<newline46mondego>    else{<newline46mondego>        whenConnectionActive();<newline46mondego>    }   <newline46mondego>"
"8461splitHere46","12893661splitHere46","public void createAlertDialog(){    <newline46mondego>    final Dialog dialog = new Dialog(this);<newline46mondego>    dialog.setContentView(R.layout.custom_dialog);<newline46mondego>    dialog.setTitle(<doubleQuotes46>Message<doubleQuotes46>);<newline46mondego>    Button continueButton = (Button) dialog.findViewById(R.id.dialogContinueButton);<newline46mondego>    TextView tw = (TextView) dialog.findViewById(R.id.dialogText);<newline46mondego>    Button finishButton = (Button) dialog.findViewById(R.id.dialogFinishButton);<newline46mondego><newline46mondego>    tw.setText(<doubleQuotes46>Message<doubleQuotes46>);<newline46mondego>    continueButton.setOnClickListener(new OnClickListener(){<newline46mondego>        public void onClick(View v) {<newline46mondego>            dialog.dismiss();<newline46mondego>            boolean connection = checkNetworkConnection();<newline46mondego>            if(!connection){<newline46mondego>                dialog.show();<newline46mondego>            }<newline46mondego>            else{<newline46mondego>               prepareConnection();<newline46mondego>            }<newline46mondego>        }   <newline46mondego>    });<newline46mondego>"
"8462splitHere46","12893720splitHere46","return new Object[][] {new Object[]{}, new Object[]{}};<newline46mondego>"
"8463splitHere46","12893742splitHere46","JScrollPane"
"8464splitHere46","12893742splitHere46","JPanel"
"8465splitHere46","12893742splitHere46","JScrollPane"
"8466splitHere46","12893742splitHere46","Icons"
"8467splitHere46","12893742splitHere46","JFrame#pack()"
"8468splitHere46","12893742splitHere46","add"
"8469splitHere46","12893742splitHere46","modify"
"8470splitHere46","12893742splitHere46","remove"
"8471splitHere46","12893742splitHere46","JScrollPane"
"8472splitHere46","12893742splitHere46","Top-Level Containers"
"8473splitHere46","12893888splitHere46","process"
"8474splitHere46","12893888splitHere46","done"
"8475splitHere46","12893888splitHere46","process"
"8476splitHere46","12893888splitHere46","protected void process(List<V> chunks)<newline46mondego>"
"8477splitHere46","12893888splitHere46","protected void process(List<String> chunks)<newline46mondego>"
"8478splitHere46","12893888splitHere46","done"
"8479splitHere46","12893888splitHere46","protected void done()<newline46mondego>"
"8480splitHere46","12893961splitHere46","while(shouldRun){doSomethingOrWait()};"
"8481splitHere46","12893961splitHere46","ShutDownHook"
"8482splitHere46","12894136splitHere46","int selection = 5; //row we want to select<newline46mondego>tableViewer.setSelection(new StructuredSelection(tableViewer.getElementAt(selection)),true);<newline46mondego>"
"8483splitHere46","12894225splitHere46","xy"
"8484splitHere46","12894225splitHere46","ImageView"
"8485splitHere46","12894225splitHere46","git"
"8486splitHere46","12894311splitHere46",".<newline46mondego>\--- jcifs-1.3.17.jar<newline46mondego>\--- testapp<newline46mondego>     \--- myJavaApp.java  <newline46mondego>"
"8487splitHere46","12894311splitHere46","javac -cp jcifs-1.3.17.jar testapp/myJavaApp.java<newline46mondego>"
"8488splitHere46","12894311splitHere46","java -cp .:jcifs-1.3.17.jar testapp.myJavaApp<newline46mondego>"
"8489splitHere46","12894311splitHere46","java -cp .;jcifs-1.3.17.jar testapp.myJavaApp<newline46mondego>"
"8490splitHere46","12894311splitHere46","jcifs.util.transport.TransportExceptionjava<newline46mondego>java.net.NoRouteToHostException: No route to host<newline46mondego>"
"8491splitHere46","12894311splitHere46",".<newline46mondego>\--- jcifs-1.3.17.jar<newline46mondego>\--- myJavaApp.java <newline46mondego>"
"8492splitHere46","12894311splitHere46","javac -cp jcifs-1.3.17.jar myJavaApp.java<newline46mondego>"
"8493splitHere46","12894311splitHere46","java -cp .:jcifs-1.3.17.jar myJavaApp<newline46mondego>"
"8494splitHere46","12894311splitHere46","java -cp .;jcifs-1.3.17.jar myJavaApp<newline46mondego>"
"8495splitHere46","12894311splitHere46","C:\netp><doubleQuotes46>C:\Program Files\Java\jdk1.6.0_25\bin\javac.exe<doubleQuotes46> -cp jcifs-krb5-1.3.17.jar netp.java<newline46mondego>"
"8496splitHere46","12894311splitHere46","C:\netp><doubleQuotes46>C:\Program Files\Java\jdk1.6.0_25\bin\java.exe<doubleQuotes46> -cp .;jcifs-krb5-1.3.17.jar netp<newline46mondego>"
"8497splitHere46","12894311splitHere46","START<newline46mondego>END<newline46mondego>"
"8498splitHere46","12894334splitHere46","keytool -list -keystore .keystore<newline46mondego>"
"8499splitHere46","12894334splitHere46","keytool -list -keystore .keystore -alias foo<newline46mondego>"
"8500splitHere46","12894490splitHere46","String keystorePath = <doubleQuotes46>local.keystore<doubleQuotes46>;<newline46mondego>System.setProperty(<doubleQuotes46>javax.net.ssl.trustStore<doubleQuotes46>, keystorePath);<newline46mondego>"
"8501splitHere46","12894490splitHere46","local.keystore"
"8502splitHere46","12894495splitHere46","true == 1<newline46mondego>"
"8503splitHere46","12894495splitHere46","false == 0<newline46mondego>true != 0<newline46mondego>"
"8504splitHere46","12894532splitHere46","int"
"8505splitHere46","12894532splitHere46","javac"
"8506splitHere46","12894568splitHere46","outToClient.flush();<newline46mondego>outToClient.close(); //is closing the socket implicitly<newline46mondego>bis.close();<newline46mondego>fis.close();<newline46mondego>"
"8507splitHere46","12894583splitHere46","switch (name) {<newline46mondego>     case <doubleQuotes46>GoodVar<doubleQuotes46>:<newline46mondego>         GoodVar = value;<newline46mondego>         break;<newline46mondego>     case <doubleQuotes46>BadVar<doubleQuotes46>:<newline46mondego>         BadVar = value;<newline46mondego>         break;<newline46mondego>     default:<newline46mondego>         throw new IllegalArgumentException(<doubleQuotes46>Invalid name: <doubleQuotes46> + name);<newline46mondego> }<newline46mondego>"
"8508splitHere46","12894583splitHere46","Field f = getClass().getField(name);<newline46mondego>if (f!=null){<newline46mondego> f.setAccessible(true);<newline46mondego> f.setInt(this, value);<newline46mondego>}else<newline46mondego>  throw new IllegalArgumentException(<doubleQuotes46>Invalid name: <doubleQuotes46> + name);  <newline46mondego>"
"8509splitHere46","12894612splitHere46","<iframe>"
"8510splitHere46","12894612splitHere46","Flash"
"8511splitHere46","12894612splitHere46","Silverlight"
"8512splitHere46","12894645splitHere46","final JEditorPane htmlTextPane = newJEditorPane(); <newline46mondego>"
"8513splitHere46","12894645splitHere46","final JEditorPane htmlTextPane = new JEditorPane(); <newline46mondego>"
"8514splitHere46","12894741splitHere46","private YourService proxy;<newline46mondego><newline46mondego>public YourServiceWrapper() {<newline46mondego>    try {<newline46mondego>        final String username = <doubleQuotes46>username<doubleQuotes46>;<newline46mondego>        final String password = <doubleQuotes46>password<doubleQuotes46>;<newline46mondego>        Authenticator.setDefault(new Authenticator() {<newline46mondego>            @Override<newline46mondego>            protected PasswordAuthentication getPasswordAuthentication() {<newline46mondego>                return new PasswordAuthentication(<newline46mondego>                        username,<newline46mondego>                        password.toCharArray());<newline46mondego>            }<newline46mondego>        });<newline46mondego>        URL url = new URL(<doubleQuotes46>http://yourserviceurl/YourService?WSDL<doubleQuotes46>);<newline46mondego>        QName qname = new QName(<doubleQuotes46>http://targetnamespace/of/your/wsdl<doubleQuotes46>, <doubleQuotes46>YourServiceNameInWsdl<doubleQuotes46>);<newline46mondego>        Service service = Service.create(url, qname);<newline46mondego>        proxy = service.getPort(YourService.class);<newline46mondego>        Map<String, Object> requestContext = ((BindingProvider) proxy).getRequestContext();<newline46mondego>        requestContext.put(BindingProvider.ENDPOINT_ADDRESS_PROPERTY, url.toString());<newline46mondego>        requestContext.put(BindingProvider.USERNAME_PROPERTY, username);<newline46mondego>        requestContext.put(BindingProvider.PASSWORD_PROPERTY, password);<newline46mondego>        Map<String, List<String>> headers = new HashMap<String, List<String>>();<newline46mondego>        requestContext.put(MessageContext.HTTP_REQUEST_HEADERS, headers);<newline46mondego>    } catch (Exception e) {<newline46mondego>        LOGGER.error(<doubleQuotes46>Error occurred in web service client initialization<doubleQuotes46>, e);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8515splitHere46","12894741splitHere46","?WSDL"
"8516splitHere46","12894741splitHere46","WSDL"
"8517splitHere46","12894741splitHere46","WSDL"
"8518splitHere46","12894741splitHere46","proxy.whatEverMethod();<newline46mondego>"
"8519splitHere46","12895033splitHere46","Collection<? extends Dog>"
"8520splitHere46","12895033splitHere46","? extends Dog"
"8521splitHere46","12895033splitHere46","? extends Dog"
"8522splitHere46","12895033splitHere46","null"
"8523splitHere46","12895033splitHere46","clear()"
"8524splitHere46","12895033splitHere46","remove(Object)"
"8525splitHere46","12895033splitHere46","Collection<? super Dog>"
"8526splitHere46","12895033splitHere46","? super Dog"
"8527splitHere46","12895033splitHere46","Dog"
"8528splitHere46","12895033splitHere46","Collection<Object>"
"8529splitHere46","12895033splitHere46","String"
"8530splitHere46","12895033splitHere46","for (Dog d : collection) { ... } // does not compile<newline46mondego>"
"8531splitHere46","12895033splitHere46","for (Object o : collection) { ... }<newline46mondego>"
"8532splitHere46","12895033splitHere46","class G<T> { ... }<newline46mondego>"
"8533splitHere46","12895033splitHere46","G<? extends Something> g;<newline46mondego>"
"8534splitHere46","12895033splitHere46","T"
"8535splitHere46","12895033splitHere46","T"
"8536splitHere46","12895033splitHere46","Something"
"8537splitHere46","12895033splitHere46","G<? super Something> g;<newline46mondego>"
"8538splitHere46","12895033splitHere46","Something"
"8539splitHere46","12895033splitHere46","T"
"8540splitHere46","12895033splitHere46","T"
"8541splitHere46","12895033splitHere46","Object"
"8542splitHere46","12895115splitHere46","for-loop"
"8543splitHere46","12895115splitHere46","for-loop"
"8544splitHere46","12895115splitHere46","scope"
"8545splitHere46","12895115splitHere46","Vector  cellStoreVector  = (Vector) dataHolder.elementAt(i);<newline46mondego>"
"8546splitHere46","12895115splitHere46","JSP"
"8547splitHere46","12895115splitHere46","class"
"8548splitHere46","12895115splitHere46","public"
"8549splitHere46","12895115splitHere46","instance"
"8550splitHere46","12895115splitHere46","class name"
"8551splitHere46","12895115splitHere46","static"
"8552splitHere46","12895115splitHere46","public class Dog {<newline46mondego><newline46mondego>    // Private Instance variable<newline46mondego>    private int instanceVar; // Defaulted to 0<newline46mondego><newline46mondego>    // Private Static variable<newline46mondego>    // Common for all instances<newline46mondego>    private static String name = <doubleQuotes46>rohit<doubleQuotes46>;<newline46mondego><newline46mondego><newline46mondego>    // Public accessor<newline46mondego>    public int getInstanceVar() {<newline46mondego>        return this.instanceVar;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setInstanceVar(int instanceVar) {<newline46mondego>        this.instanceVar = instanceVar;<newline46mondego>    }<newline46mondego><newline46mondego>    // Static public accessor for static variable<newline46mondego>    public static String getName() {<newline46mondego>        return name;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>class Test {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        // Access static method through class name<newline46mondego>        System.out.println(Dog.getName()); <newline46mondego><newline46mondego>        Dog dog = new Dog();<newline46mondego><newline46mondego>        // Set instance variable through public accessor, on a particular instance<newline46mondego>        dog.setInstanceVar(10);<newline46mondego><newline46mondego>        // Get instance variable value and asssign to local variable x<newline46mondego>        // x is local variable in `main`<newline46mondego>        int x = dog.getInstanceVar(); <newline46mondego><newline46mondego>        showX(); <newline46mondego>    }<newline46mondego><newline46mondego>    public static void showX() {<newline46mondego><newline46mondego>        // x not visible here.<newline46mondego>        System.out.println(x);  // Will not compile<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8553splitHere46","12895209splitHere46","ExtendedWatchEventModifier.FILE_TREE"
"8554splitHere46","12895209splitHere46","ExtendedWatchEventModifier"
"8555splitHere46","12895297splitHere46","double power = Math.pow(Double.parseDouble(args[0]),2.0);<newline46mondego>"
"8556splitHere46","12895330splitHere46","@ContextConfiguration(locations = <doubleQuotes46>classpath:/META-INF/spring-test/tests-context.xml<doubleQuotes46>) <newline46mondego>@RunWith(SpringJUnit4ClassRunner.class) <newline46mondego>@TestExecutionListeners(TransactionContextTestExecutionListener.class) <newline46mondego>@Transactional <newline46mondego>public class BaseQueryBuilderTest {<newline46mondego>    @Autowired<newline46mondego>    private ApplicationContext applicationContext;<newline46mondego>    protected Context context;<newline46mondego><newline46mondego>    @Before<newline46mondego>    public void setUp() {<newline46mondego>        context = applicationContext.getBean(Context.class);<newline46mondego>    }<newline46mondego>} <newline46mondego>"
"8557splitHere46","12895330splitHere46","public class SelectQueryBuilderTest extends BaseQueryBuilderTest {<newline46mondego>    @Test<newline46mondego>    public void test() {<newline46mondego>        // Use context<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8558splitHere46","12895434splitHere46","="
"8559splitHere46","12895434splitHere46","void SetVar(Integer value) {<newline46mondego>        this.A = value;<newline46mondego>}<newline46mondego>"
"8560splitHere46","12895434splitHere46","A"
"8561splitHere46","12895434splitHere46","A"
"8562splitHere46","12895434splitHere46","passed-by-value"
"8563splitHere46","12895494splitHere46","get"
"8564splitHere46","12895494splitHere46","read-only"
"8565splitHere46","12895494splitHere46","setID"
"8566splitHere46","12895494splitHere46","setCardID"
"8567splitHere46","12895494splitHere46","self.myCardID"
"8568splitHere46","12895494splitHere46","getID"
"8569splitHere46","12895601splitHere46","th.interrupt()"
"8570splitHere46","12895601splitHere46","DoSomeWork()"
"8571splitHere46","12895607splitHere46","set"
"8572splitHere46","12895607splitHere46","add"
"8573splitHere46","12895607splitHere46","ArrayList<String> my =  new ArrayList<String>();<newline46mondego>my.add(<doubleQuotes46>Bernard<doubleQuotes46>);<newline46mondego>my.add(<doubleQuotes46>Grey<doubleQuotes46>);<newline46mondego>"
"8574splitHere46","12895646splitHere46","list.add(status);<newline46mondego>list.add(<doubleQuotes46>Q<doubleQuotes46>);<newline46mondego>list.add(<doubleQuotes46>P<doubleQuotes46>);<newline46mondego>list.add(<doubleQuotes46>F<doubleQuotes46>);<newline46mondego>list.add(<doubleQuotes46>I<doubleQuotes46>);<newline46mondego>list.add(<doubleQuotes46>C<doubleQuotes46>);<newline46mondego>int position = -1;<newline46mondego>    for(i=0;i<list.size();i++){<newline46mondego>        if(list.get(i).equals(status)) {<newline46mondego>                position = i;<newline46mondego>        }<newline46mondego>   }<newline46mondego>if(position>0)<newline46mondego>   list.removeAt(position);<newline46mondego>"
"8575splitHere46","12895646splitHere46","if(position>0)<newline46mondego>       list.removeAt(position);<newline46mondego>"
"8576splitHere46","12895750splitHere46","Field fA = Test.class.getDeclaredField(<doubleQuotes46>A<doubleQuotes46>);<newline46mondego>"
"8577splitHere46","12895830splitHere46","dfoA9\n"
"8578splitHere46","12896085splitHere46","@RunWith(Cucumber.class)<newline46mondego>@Cucumber.Options(glue = { <doubleQuotes46>com.example.stepdefspackage<doubleQuotes46> })<newline46mondego>public class Run{<newline46mondego><newline46mondego>}<newline46mondego>"
"8579splitHere46","12896109splitHere46","<com.myview.DrawingPanel android:id=<doubleQuotes46>@+id/drawingview<doubleQuotes46> <newline46mondego>        android:layout_width=<doubleQuotes46>fill_parent<doubleQuotes46> <newline46mondego>        android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46> ><newline46mondego>"
"8580splitHere46","12896109splitHere46","public void onCreate(Bundle savedInstanceState) {<newline46mondego>      super.onCreate(savedInstanceState);<newline46mondego>      setContentView(R.layout.activity_make); <newline46mondego>      drawingPanel = (DrawingPanel) findViewById(R.id.drawingview);<newline46mondego><newline46mondego>}<newline46mondego>"
"8581splitHere46","12896135splitHere46","public String readFileToString(String pathToFile) throws Exception{<newline46mondego>    StringBuilder strFile = new StringBuilder();<newline46mondego>    BufferedReader reader = new BufferedReader(new FileReader(pathToFile));<newline46mondego>    char[] buffer = new char[512];<newline46mondego>    int num = 0;<newline46mondego>    while((num = reader.read(buffer)) != -1){<newline46mondego>        String current = String.valueOf(buffer, 0, num);<newline46mondego>        strFile.append(current);<newline46mondego>        buffer = new char[512];<newline46mondego>    }<newline46mondego>    reader.close();<newline46mondego>    return strFile.toString();<newline46mondego>}<newline46mondego>"
"8582splitHere46","12896175splitHere46","Swing Action"
"8583splitHere46","12896175splitHere46","JButton"
"8584splitHere46","12896175splitHere46","ActionListener][4]"
"8585splitHere46","12896175splitHere46","Swing Timer"
"8586splitHere46","12896175splitHere46","isEnable"
"8587splitHere46","12896314splitHere46","import java.io.*;  <newline46mondego>public class TestExec {  <newline46mondego>    public static void main(String[] args) {  <newline46mondego>        try {  <newline46mondego>            Process p = Runtime.getRuntime().exec(<doubleQuotes46>cmd /C dir<doubleQuotes46>);  <newline46mondego>            BufferedReader in = new BufferedReader(  <newline46mondego>                                new InputStreamReader(p.getInputStream()));  <newline46mondego>            String line = null;  <newline46mondego>            while ((line = in.readLine()) != null) {  <newline46mondego>                System.out.println(line);  <newline46mondego>            }  <newline46mondego>        } catch (IOException e) {  <newline46mondego>            e.printStackTrace();  <newline46mondego>        }  <newline46mondego>    }  <newline46mondego>}  <newline46mondego>"
"8588splitHere46","12896368splitHere46","SimpleDateFormat"
"8589splitHere46","12896368splitHere46","java.util.Date"
"8590splitHere46","12896368splitHere46","Date date = new SimpleDateFormat(<doubleQuotes46>dd-MMM-yyyy HH:mm.<doubleQuotes46>, Locale.ENGLISH).parse(dateVal);<newline46mondego>"
"8591splitHere46","12896368splitHere46","java.sql.Date"
"8592splitHere46","12896368splitHere46","statement.setDate(1, new java.sql.Date(date.getTime()));<newline46mondego>"
"8593splitHere46","12896368splitHere46","java.sql.Date"
"8594splitHere46","12896368splitHere46","DATETIME"
"8595splitHere46","12896368splitHere46","TIMESTAMP"
"8596splitHere46","12896368splitHere46","DATE"
"8597splitHere46","12896368splitHere46","setTimestamp()"
"8598splitHere46","12896368splitHere46","java.sql.Timestamp"
"8599splitHere46","12896449splitHere46","Q.isEmpty()"
"8600splitHere46","12896449splitHere46","size"
"8601splitHere46","12896449splitHere46","removeMin"
"8602splitHere46","12896449splitHere46","size--;"
"8603splitHere46","12896449splitHere46","else"
"8604splitHere46","12896449splitHere46","SLPQueue.removeMin"
"8605splitHere46","12896457splitHere46","OR"
"8606splitHere46","12896457splitHere46","where name like 'happy%' or name like '%appy' or name like '%ppy%'"
"8607splitHere46","12896491splitHere46","matches"
"8608splitHere46","12896491splitHere46","find"
"8609splitHere46","12896491splitHere46","find"
"8610splitHere46","12896491splitHere46","matches"
"8611splitHere46","12896491splitHere46","Pattern p = Pattern.compile(<doubleQuotes46>[0-9]*<doubleQuotes46>);<newline46mondego>Matcher m123abc = p.matcher(<doubleQuotes46>123 abc<doubleQuotes46>);<newline46mondego>System.out.println(m123abc.matches());  // prints false<newline46mondego>System.out.println(m123abc.find());     // prints true<newline46mondego>"
"8612splitHere46","12896500splitHere46","class Structure<newline46mondego>{<newline46mondego>    String name;<newline46mondego>    Integer value;<newline46mondego>    Structure child;<newline46mondego>    // or <newline46mondego>    Set<Structure> children;<newline46mondego>}<newline46mondego>"
"8613splitHere46","12896586splitHere46","Job.start()"
"8614splitHere46","12896586splitHere46","run()"
"8615splitHere46","12896586splitHere46","public abstract class Job implements Runnable {<newline46mondego>    protected Integer jobId;<newline46mondego><newline46mondego>    public void start(Integer jobId) {<newline46mondego>        this.jobId = jobId;<newline46mondego>        try {<newline46mondego>            new Thread(this).start();<newline46mondego>        } catch (Exception e) {<newline46mondego>            e.getMessage();<newline46mondego>        }       <newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public class Test extends Job {<newline46mondego>    @Override<newline46mondego>    public void run() {<newline46mondego>        System.out.println(jobId);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8616splitHere46","12896632splitHere46","@Audited"
"8617splitHere46","12896632splitHere46","TicketHistory"
"8618splitHere46","12896688splitHere46","GridLayout"
"8619splitHere46","12896688splitHere46","fills"
"8620splitHere46","12896688splitHere46","schrinks"
"8621splitHere46","12896688splitHere46",".... 10, 10)"
"8622splitHere46","12896688splitHere46","pnlTop.setLayout(new GridLayout(3, 4, 10, 10));"
"8623splitHere46","12896688splitHere46","GridBagLayout"
"8624splitHere46","12896688splitHere46","SpringLayout"
"8625splitHere46","12896840splitHere46","bolean works=true;<newline46mondego>  for(Future<Boolean> future : futures){<newline46mondego>        future.get();<newline46mondego>        if (future.isDone()) {<newline46mondego>            System.out.println(<doubleQuotes46>true<doubleQuotes46>);<newline46mondego>        }<newline46mondego>        else{<newline46mondego>            System.out.println(<doubleQuotes46>false<doubleQuotes46>);works=false;<newline46mondego>        }<newline46mondego>    }<newline46mondego>if(works)System.out.println(<doubleQuotes46>yea it works<doubleQuotes46>)<newline46mondego>"
"8626splitHere46","12896958splitHere46","Refresh"
"8627splitHere46","12896958splitHere46","Clean"
"8628splitHere46","12897147splitHere46","Calendar cal = Calendar.getInstance();<newline46mondego> cal.setTime(startdate);<newline46mondego> cal.get(Calendar.DAY_OF_MONTH);<newline46mondego>"
"8629splitHere46","12897175splitHere46","UncaughtExceptionHandler"
"8630splitHere46","12897175splitHere46","ExecutorService.submit(Callable)"
"8631splitHere46","12897175splitHere46","Future.get()"
"8632splitHere46","12897175splitHere46","ExecutorService"
"8633splitHere46","12897175splitHere46","ExecutorService threadPool = Executors.newSingleThreadScheduledExecutor();<newline46mondego>Future<Void> future = threadPool.submit(new Callable<Void>() {<newline46mondego>      public Void call() throws Exception {<newline46mondego>         // can throw OhNoException here<newline46mondego>         return null;<newline46mondego>     }<newline46mondego>});<newline46mondego>// you need to shut down the pool after submitting the last task<newline46mondego>threadPool.shutdown();<newline46mondego>// this can throw ExecutionException<newline46mondego>try {<newline46mondego>   // this waits for your background task to finish, it throws if the task threw<newline46mondego>   future.get();<newline46mondego>} catch (ExecutionException e) {<newline46mondego>    // this is the exception thrown by the call() which could be a OhNoException<newline46mondego>    Throwable cause = e.getCause();<newline46mondego>     if (cause instanceof OhNoException) {<newline46mondego>        throw (OhNoException)cause;<newline46mondego>     } else if (cause instanceof RuntimeException) {<newline46mondego>        throw (RuntimeException)cause;<newline46mondego>     }<newline46mondego>}<newline46mondego>"
"8634splitHere46","12897175splitHere46","UncaughtExceptionHandler"
"8635splitHere46","12897175splitHere46","Thread thread = new Thread(...);<newline46mondego> final AtomicReference throwableReference = new AtomicReference<Throwable>();<newline46mondego> thread.setUncaughtExceptionHandler(new UncaughtExceptionHandler() {<newline46mondego>     public void uncaughtException(Thread t, Throwable e) {<newline46mondego>         throwableReference.set(e);<newline46mondego>     }<newline46mondego> });<newline46mondego> thread.start();<newline46mondego> thread.join();<newline46mondego> Throwable throwable = throwableReference.get();<newline46mondego> if (throwable != null) {<newline46mondego>     if (throwable instanceof OhNoException) {<newline46mondego>        throw (OhNoException)throwable;<newline46mondego>     } else if (throwable instanceof RuntimeException) {<newline46mondego>        throw (RuntimeException)throwable;<newline46mondego>     }<newline46mondego> }<newline46mondego>"
"8636splitHere46","12897425splitHere46","Logics logics = new Logics(this); <newline46mondego>"
"8637splitHere46","12897546splitHere46","public void doBackup(View view) throws IOException{<newline46mondego>    final ProgressDialog pd = new ProgressDialog(this);<newline46mondego>    pd.setProgressStyle(ProgressDialog.STYLE_SPINNER);<newline46mondego>    pd.setMessage(<doubleQuotes46>Running backup. Do not unplug drive<doubleQuotes46>);<newline46mondego>    pd.setIndeterminate(true);<newline46mondego>    pd.setCancelable(false);<newline46mondego>    pd.show();<newline46mondego>    Thread mThread = new Thread() {<newline46mondego>    @Override<newline46mondego>    public void run() {<newline46mondego>     File source = new File(<doubleQuotes46>/mnt/extSdCard/DirectEnquiries<doubleQuotes46>); <newline46mondego>    File dest = new File(<doubleQuotes46>/mnt/UsbDriveA/Backup<doubleQuotes46>);<newline46mondego>    copyDirectory(source, dest);<newline46mondego>    pd.dismiss();<newline46mondego>    }<newline46mondego>    };<newline46mondego>    mThread.start();<newline46mondego><newline46mondego>}<newline46mondego>"
"8638splitHere46","12897547splitHere46","Illegal key size"
"8639splitHere46","12897547splitHere46","lib/security"
"8640splitHere46","12897565splitHere46","table.putClientProperty(<doubleQuotes46>terminateEditOnFocusLost<doubleQuotes46>, Boolean.TRUE);<newline46mondego>"
"8641splitHere46","12897565splitHere46","if (table.isEditing()) {<newline46mondego>    boolean stopped = table.getCellEditor().stopCellEditing();<newline46mondego>    if (!stopped) {<newline46mondego>        // here goes error handling and/or cancelling the edit<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8642splitHere46","12897632splitHere46","{<newline46mondego>    <doubleQuotes46>str1<doubleQuotes46>: <doubleQuotes46>test one<doubleQuotes46>,<newline46mondego>    <doubleQuotes46>str2<doubleQuotes46>: <doubleQuotes46>two test<doubleQuotes46><newline46mondego>}<newline46mondego>"
"8643splitHere46","12897632splitHere46","@RequestMapping(value = <doubleQuotes46>/Test<doubleQuotes46>, method = RequestMethod.PSOT)<newline46mondego>public boolean getTest(String str1, String str2)<newline46mondego>"
"8644splitHere46","12897632splitHere46","@JsonArg"
"8645splitHere46","12897632splitHere46","public boolean getTest(@JsonArg(<doubleQuotes46>/str1<doubleQuotes46>) String str1, @JsonArg(<doubleQuotes46>/str2<doubleQuotes46>) String str2)<newline46mondego>"
"8646splitHere46","12897632splitHere46","import java.io.IOException;<newline46mondego><newline46mondego>import javax.servlet.http.HttpServletRequest;<newline46mondego><newline46mondego>import org.apache.commons.io.IOUtils;<newline46mondego>import org.springframework.core.MethodParameter;<newline46mondego>import org.springframework.http.server.ServletServerHttpRequest;<newline46mondego>import org.springframework.web.bind.support.WebDataBinderFactory;<newline46mondego>import org.springframework.web.context.request.NativeWebRequest;<newline46mondego>import org.springframework.web.method.support.HandlerMethodArgumentResolver;<newline46mondego>import org.springframework.web.method.support.ModelAndViewContainer;<newline46mondego><newline46mondego>import com.jayway.jsonpath.JsonPath;<newline46mondego><newline46mondego>public class JsonPathArgumentResolver implements HandlerMethodArgumentResolver{<newline46mondego><newline46mondego>    private static final String JSONBODYATTRIBUTE = <doubleQuotes46>JSON_REQUEST_BODY<doubleQuotes46>;<newline46mondego>    @Override<newline46mondego>    public boolean supportsParameter(MethodParameter parameter) {<newline46mondego>        return parameter.hasParameterAnnotation(JsonArg.class);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Object resolveArgument(MethodParameter parameter, ModelAndViewContainer mavContainer, NativeWebRequest webRequest, WebDataBinderFactory binderFactory) throws Exception {<newline46mondego>        String body = getRequestBody(webRequest);<newline46mondego>        String val = JsonPath.read(body, parameter.getMethodAnnotation(JsonArg.class).value());<newline46mondego>        return val;<newline46mondego>    }<newline46mondego><newline46mondego>    private String getRequestBody(NativeWebRequest webRequest){<newline46mondego>        HttpServletRequest servletRequest = webRequest.getNativeRequest(HttpServletRequest.class);<newline46mondego>        String jsonBody = (String) servletRequest.getAttribute(JSONBODYATTRIBUTE);<newline46mondego>        if (jsonBody==null){<newline46mondego>            try {<newline46mondego>                String body = IOUtils.toString(servletRequest.getInputStream());<newline46mondego>                servletRequest.setAttribute(JSONBODYATTRIBUTE, body);<newline46mondego>                return body;<newline46mondego>            } catch (IOException e) {<newline46mondego>                throw new RuntimeException(e);<newline46mondego>            }<newline46mondego>        }<newline46mondego>        return <doubleQuotes46><doubleQuotes46>;<newline46mondego><newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8647splitHere46","12897772splitHere46","@Id<newline46mondego> @GeneratedValue(strategy = GenerationType.TABLE)<newline46mondego> private Integer id;<newline46mondego><newline46mondego> @Version<newline46mondego> @Column(name = <doubleQuotes46>opt_lock<doubleQuotes46>)<newline46mondego> private Integer version;<newline46mondego><newline46mondego> @OneToMany(orphanRemoval = false)<newline46mondego> @OrderColumn(name = <doubleQuotes46>order_jueces<doubleQuotes46>)<newline46mondego> private List<Juez> rol;<newline46mondego>"
"8648splitHere46","12897920splitHere46","-classpath nameOfJar.jar<newline46mondego>"
"8649splitHere46","12898038splitHere46","CascadeType"
"8650splitHere46","12898038splitHere46","JPA"
"8651splitHere46","12898038splitHere46","public class MyEntity {<newline46mondego>    @OneToOne(cascade=CascadeType.PERSIST) <or> @OneToOne(cascade=CascadeType.ALL) <-- for all operation<newline46mondego>    @JoinColumn(name = <doubleQuotes46>YOUR-ID<doubleQuotes46>)<newline46mondego>    private MyOtherEntity myOtherEntity ;<newline46mondego>}<newline46mondego>"
"8652splitHere46","12898038splitHere46","public class MyEntity {<newline46mondego>    @OneToOne(cascade=CascadeType.PERSIST) <or> @OneToOne(cascade=CascadeType.ALL) <-- for all operation<newline46mondego>    @JoinColumn(name = <doubleQuotes46>YOUR-ID<doubleQuotes46>)<newline46mondego>    private MyEntity myEntity ;<newline46mondego>}<newline46mondego>"
"8653splitHere46","12898288splitHere46",".*?"
"8654splitHere46","12898288splitHere46","id"
"8655splitHere46","12898288splitHere46",".*?"
"8656splitHere46","12898288splitHere46","digits"
"8657splitHere46","12898288splitHere46","\\d"
"8658splitHere46","12898288splitHere46","id"
"8659splitHere46","12898288splitHere46","// To consider special characters as literals<newline46mondego>String str = Pattern.quote(<doubleQuotes46>group.php?id=<doubleQuotes46>) + <doubleQuotes46>(\\d*)<doubleQuotes46>;<newline46mondego><newline46mondego>Pattern script1 = Pattern.compile(str);<newline46mondego>// Your matcher line<newline46mondego>while (mscript1.find()) {<newline46mondego>    content += mscript1.group(1) + <doubleQuotes46>\n<doubleQuotes46>;   // Capture group 1 contains your id<newline46mondego>}<newline46mondego>"
"8660splitHere46","12898299splitHere46","package-info.java"
"8661splitHere46","12898299splitHere46","/**<newline46mondego> * Javadoc<newline46mondego> */<newline46mondego>package my.cool.package123;<newline46mondego>"
"8662splitHere46","12898489splitHere46","&&"
"8663splitHere46","12898489splitHere46","while (choice != 'H' && choice != 'h' && choice != 'L' && ...<newline46mondego>"
"8664splitHere46","12898489splitHere46","choice"
"8665splitHere46","12898489splitHere46","choice = choiceString.charAt(0);"
"8666splitHere46","12898489splitHere46","choiceString"
"8667splitHere46","12898498splitHere46","void setup() {<newline46mondego>     int i = 0;<newline46mondego>     int sum = 0;<newline46mondego>     int counter = 0;<newline46mondego><newline46mondego>     while (sum < 1768) {<newline46mondego>         sum += i;<newline46mondego>         i += 2;<newline46mondego>         counter++;<newline46mondego>     }<newline46mondego><newline46mondego>     System.out.println(counter);<newline46mondego> }<newline46mondego>"
"8668splitHere46","12898498splitHere46","i += 2"
"8669splitHere46","12898498splitHere46","i < 200"
"8670splitHere46","12898498splitHere46","while"
"8671splitHere46","12898498splitHere46","while (sum < 1768 && i < 200)<newline46mondego>"
"8672splitHere46","12898498splitHere46","counter"
"8673splitHere46","12898498splitHere46","i / 2"
"8674splitHere46","12898580splitHere46","connections = ((connections << 1) | (connections >> 3)) & 0x0f;<newline46mondego>"
"8675splitHere46","12898676splitHere46","int getTotal() {<newline46mondego>    return total;<newline46mondego>}<newline46mondego>"
"8676splitHere46","12898676splitHere46","Factory"
"8677splitHere46","12898676splitHere46","createXXX"
"8678splitHere46","12898676splitHere46","makeXXX"
"8679splitHere46","12898676splitHere46","generateXXX"
"8680splitHere46","12898676splitHere46","get"
"8681splitHere46","12898676splitHere46","set"
"8682splitHere46","12898794splitHere46","\u00a0"
"8683splitHere46","12898794splitHere46","PdfFileSpecification"
"8684splitHere46","12898794splitHere46","setUnicodeFileName()"
"8685splitHere46","12898794splitHere46","true"
"8686splitHere46","12898794splitHere46","null"
"8687splitHere46","12898794splitHere46","Rectangle"
"8688splitHere46","12898794splitHere46","writer.addFileAttachment(fs);"
"8689splitHere46","12898794splitHere46","fs"
"8690splitHere46","12898794splitHere46","FileSpecification"
"8691splitHere46","12898823splitHere46","<emma enabled=<doubleQuotes46>${emma.enabled}<doubleQuotes46> ><newline46mondego>"
"8692splitHere46","12898823splitHere46","<property name=<doubleQuotes46>report.html.out.encoding<doubleQuotes46> value=<doubleQuotes46>UTF-8<doubleQuotes46> /><newline46mondego>"
"8693splitHere46","12898833splitHere46","import java.util.Random;<newline46mondego>import java.util.Scanner;<newline46mondego><newline46mondego>public class Main {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        int nRolls = 100, nDice = 6; // default values<newline46mondego><newline46mondego>        Scanner in = new Scanner(System.in);<newline46mondego>        System.out.print(<doubleQuotes46>Number of throws: <doubleQuotes46>);<newline46mondego>        nRolls = in.nextInt();<newline46mondego>        System.out.print(<doubleQuotes46>Number of sides on the dices: <doubleQuotes46>);<newline46mondego>        nDice = in.nextInt();<newline46mondego><newline46mondego>        int minSum = 2, maxSum = 2 * nDice;<newline46mondego>        int[] hist = new int[maxSum - minSum + 1];<newline46mondego><newline46mondego>        Random rand = new Random();<newline46mondego>        for (int iter = 1; iter <= nRolls; iter++) {<newline46mondego>            int throw1 = 1 + rand.nextInt(nDice), throw2 = 1 + rand.nextInt(nDice);<newline46mondego>            int sum = throw1 + throw2;<newline46mondego>            hist[sum - minSum]++;<newline46mondego>        }<newline46mondego><newline46mondego>        System.out.println(<doubleQuotes46>Number of rolls: <doubleQuotes46> + nRolls);<newline46mondego>        System.out.println(<doubleQuotes46>Number of sides of the dice: <doubleQuotes46> + nDice);<newline46mondego>        System.out.println(<doubleQuotes46>Sum of Dice         Percentage<doubleQuotes46>);<newline46mondego>        for (int i = 0; i < hist.length; i++) {<newline46mondego>            System.out.println(String.format(<doubleQuotes46>   %2d                 %5.2f%%<doubleQuotes46>, i + minSum, hist[i] * 100.0 / nRolls));<newline46mondego>            // System.out.println(<doubleQuotes46>   <doubleQuotes46> + (i+minSum) + <doubleQuotes46>             <doubleQuotes46> + (hist[i]*100.0/nRolls);<newline46mondego>        }<newline46mondego><newline46mondego>        in.close();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8694splitHere46","12898833splitHere46","2*nDice - 1"
"8695splitHere46","12898833splitHere46","1"
"8696splitHere46","12898833splitHere46","hist[0]"
"8697splitHere46","12898833splitHere46","hist[1]"
"8698splitHere46","12898833splitHere46","String.format"
"8699splitHere46","12898833splitHere46","System.out.println(<doubleQuotes46>   <doubleQuotes46> + (i+minSum) + <doubleQuotes46>             <doubleQuotes46> + (hist[i]*100.0/nRolls);<newline46mondego>"
"8700splitHere46","12898908splitHere46","Quat4D"
"8701splitHere46","12898979splitHere46","public class Prices {<newline46mondego>    Integer price_1;<newline46mondego>    Integer price_2;<newline46mondego><newline46mondego>    public List<Integer> getAllPrices() {<newline46mondego>        List<Integer> allPrices = new ArrayList<Integer>();<newline46mondego>        allPricess.add(price_1);<newline46mondego>        allPrices.add(price_2);<newline46mondego>        return allPrices;<newline46mondego>    }<newline46mondego>    public Integer getPrice(int priceNumber) {<newline46mondego>        if (priceNumber == 1) {<newline46mondego>            return price_1;<newline46mondego>        }<newline46mondego>        // etc...<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8702splitHere46","12899240splitHere46","String"
"8703splitHere46","12899240splitHere46","String"
"8704splitHere46","12899240splitHere46","HashMap<String,YourObject>"
"8705splitHere46","12899291splitHere46","NullPointerException"
"8706splitHere46","12899291splitHere46","import java.util.*;<newline46mondego><newline46mondego>public class Test {<newline46mondego>    private static final Map<String, Integer> map<newline46mondego>        = new HashMap<String, Integer>();<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        getInt(<doubleQuotes46>Foo<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    public static int getInt(String name) {<newline46mondego>        Integer i = map.get(name);<newline46mondego>        return i;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8707splitHere46","12899291splitHere46","c:\Users\Jon\Test>java Test<newline46mondego>Exception in thread <doubleQuotes46>main<doubleQuotes46> java.lang.NullPointerException<newline46mondego>        at Test.getInt(Test.java:13)<newline46mondego>        at Test.main(Test.java:8)<newline46mondego>"
"8708splitHere46","12899400splitHere46","Edible"
"8709splitHere46","12899400splitHere46","Colorful"
"8710splitHere46","12899400splitHere46","if(x instanceof Colorful){<newline46mondego>        clist.add((Colorful)x);<newline46mondego>}<newline46mondego>"
"8711splitHere46","12899400splitHere46","WildCard"
"8712splitHere46","12899400splitHere46","private ArrayList<? extends Colorful> clist;<newline46mondego>"
"8713splitHere46","12899400splitHere46","ArrayList"
"8714splitHere46","12899400splitHere46","subtype"
"8715splitHere46","12899400splitHere46","Colorful"
"8716splitHere46","12899400splitHere46","typecasting"
"8717splitHere46","12899400splitHere46","instance variable"
"8718splitHere46","12899432splitHere46","@Component"
"8719splitHere46","12899432splitHere46","@Qualifier"
"8720splitHere46","12899432splitHere46","@Autowired"
"8721splitHere46","12899432splitHere46","name"
"8722splitHere46","12899432splitHere46","interface IA<newline46mondego>{<newline46mondego>  public void someFunction();<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>class B implements IA<newline46mondego>{<newline46mondego>  public void someFunction()<newline46mondego>  {<newline46mondego>    //busy code block<newline46mondego>  }<newline46mondego>  public void someBfunc()<newline46mondego>  {<newline46mondego>     //doing b things<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>class C implements IA<newline46mondego>{<newline46mondego>  public void someFunction()<newline46mondego>  {<newline46mondego>    //busy code block<newline46mondego>  }<newline46mondego>  public void someCfunc()<newline46mondego>  {<newline46mondego>     //doing C things<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>class MyRunner<newline46mondego>{<newline46mondego>     @Autowire<newline46mondego>     @Qualifier(<doubleQuotes46>b<doubleQuotes46>) <newline46mondego>     IA worker;<newline46mondego><newline46mondego>     ....<newline46mondego>     worker.someFunction();<newline46mondego>}<newline46mondego>"
"8723splitHere46","12899432splitHere46","<bean id=<doubleQuotes46>b<doubleQuotes46> class=<doubleQuotes46>B<doubleQuotes46> /><newline46mondego><bean id=<doubleQuotes46>c<doubleQuotes46> class=<doubleQuotes46>C<doubleQuotes46> /><newline46mondego><bean id=<doubleQuotes46>runner<doubleQuotes46> class=<doubleQuotes46>MyRunner<doubleQuotes46> /><newline46mondego>"
"8724splitHere46","12899432splitHere46","@Component"
"8725splitHere46","12899432splitHere46","interface IA<newline46mondego>{<newline46mondego>  public void someFunction();<newline46mondego>}<newline46mondego><newline46mondego>@Component(value=<doubleQuotes46>b<doubleQuotes46>)<newline46mondego>class B implements IA<newline46mondego>{<newline46mondego>  public void someFunction()<newline46mondego>  {<newline46mondego>    //busy code block<newline46mondego>  }<newline46mondego>  public void someBfunc()<newline46mondego>  {<newline46mondego>     //doing b things<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>@Component(value=<doubleQuotes46>c<doubleQuotes46>)<newline46mondego>class C implements IA<newline46mondego>{<newline46mondego>  public void someFunction()<newline46mondego>  {<newline46mondego>    //busy code block<newline46mondego>  }<newline46mondego>  public void someCfunc()<newline46mondego>  {<newline46mondego>     //doing C things<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>@Component    <newline46mondego>class MyRunner<newline46mondego>{<newline46mondego>     @Autowire<newline46mondego>     @Qualifier(<doubleQuotes46>b<doubleQuotes46>) <newline46mondego>     IA worker;<newline46mondego><newline46mondego>     ....<newline46mondego>     worker.someFunction();<newline46mondego>}<newline46mondego>"
"8726splitHere46","12899432splitHere46","worker"
"8727splitHere46","12899432splitHere46","MyRunner"
"8728splitHere46","12899432splitHere46","B"
"8729splitHere46","12899617splitHere46","private List<SelectItem> domains = new ArrayList<SelectItem>();<newline46mondego>//for each domain<newline46mondego>domains.add(<doubleQuotes46>com<doubleQuotes46>,firstFromDomainSelection);<newline46mondego>domains.add(<doubleQuotes46>net<doubleQuotes46>,secondFromDomainSelection);<newline46mondego><newline46mondego><f:selectItems value=<doubleQuotes46>#{Bean.domains}<doubleQuotes46> /><newline46mondego>"
"8730splitHere46","12899617splitHere46","getDomains"
"8731splitHere46","12899617splitHere46",".war"
"8732splitHere46","12899617splitHere46","getDomains()"
"8733splitHere46","12899617splitHere46","private List<SelectItem> domains;<newline46mondego>private Configuration config = new PropertiesConfiguration(<doubleQuotes46>prop.properties<doubleQuotes46>); // with accessors<newline46mondego><newline46mondego>public List<SelectItem> getDomains(){<newline46mondego>  domains = new ArrayList<SelectItem>();<newline46mondego>  String[]  domainSelection = getConfig().getStringArray(<doubleQuotes46>domain<doubleQuotes46>);<newline46mondego>  for(String domain : domainSelection ){<newline46mondego>     //Define desired logic for the value if its the same (.com) pass the same as value<newline46mondego>     domains.add( new SelectItem(domain ,domain)); // SelectItem(value, label);<newline46mondego>  }<newline46mondego>  return domains;<newline46mondego>}<newline46mondego>"
"8734splitHere46","12899659splitHere46","compileClojure.dependsOn(compileJava)"
"8735splitHere46","12899659splitHere46","gradle tasks"
"8736splitHere46","12899708splitHere46","StudentRecord obj;<newline46mondego>Field field = obj.getClass().getField(<doubleQuotes46>firstName<doubleQuotes46>); // or StudentRecord.class.getField()<newline46mondego>CobolString cs = (CobolString)field.get(obj);<newline46mondego>cs.setValue(<doubleQuotes46>John<doubleQuotes46>);<newline46mondego>"
"8737splitHere46","12899708splitHere46","private"
"8738splitHere46","12899708splitHere46","Field.get()"
"8739splitHere46","12899708splitHere46","field.setAccessible(true);<newline46mondego>"
"8740splitHere46","12899733splitHere46","Dialog"
"8741splitHere46","12899733splitHere46","Browser"
"8742splitHere46","12899733splitHere46","public class BrowserDialog extends Dialog {<newline46mondego><newline46mondego>    private String browserString;<newline46mondego><newline46mondego>    protected BrowserDialog(Shell parentShell, String browserString) {<newline46mondego>        super(parentShell);<newline46mondego>        this.browserString = browserString;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected Control createDialogArea(Composite parent) {<newline46mondego>        Composite composite = (Composite) super.createDialogArea(parent);<newline46mondego><newline46mondego>        GridLayout layout = new GridLayout(1, false);<newline46mondego>        composite.setLayout(layout);<newline46mondego><newline46mondego>        GridData data = new GridData(SWT.FILL, SWT.FILL, true, true);<newline46mondego>        data.widthHint = 400;<newline46mondego>        data.heightHint = 400;<newline46mondego>        composite.setLayoutData(data);<newline46mondego><newline46mondego><newline46mondego>        Browser browser = new Browser(composite, SWT.NONE);<newline46mondego>        browser.setText(browserString);<newline46mondego>        browser.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true));<newline46mondego><newline46mondego>        return composite;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void createButtonsForButtonBar(Composite parent) {<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void configureShell(Shell newShell) {<newline46mondego>        super.configureShell(newShell);<newline46mondego>        newShell.setText(<doubleQuotes46>About<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void okPressed() {<newline46mondego>        close();<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args)<newline46mondego>    {<newline46mondego>        final Display display = new Display();<newline46mondego>        Shell shell = new Shell(display);<newline46mondego><newline46mondego>        Color gray = display.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND);<newline46mondego><newline46mondego>        String hex = String.format(<doubleQuotes46>#%02x%02x%02x<doubleQuotes46>, gray.getRed(), gray.getGreen(), gray.getBlue());<newline46mondego><newline46mondego>        new BrowserDialog(shell, <doubleQuotes46><body bgcolor='<doubleQuotes46> + hex + <doubleQuotes46>'><h2>TEXT</h2></body><doubleQuotes46>).open();<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"8743splitHere46","12899733splitHere46","createButtonsForButtonBar(Composite parent)"
"8744splitHere46","12899733splitHere46","@Override<newline46mondego>protected void createButtonsForButtonBar(Composite parent) {<newline46mondego>    createButton(parent, Dialog.OK, <doubleQuotes46>OK<doubleQuotes46>, true);<newline46mondego>    createButton(parent, Dialog.CANCEL, <doubleQuotes46>Cancel<doubleQuotes46>, false);<newline46mondego>}<newline46mondego>"
"8745splitHere46","12899896splitHere46","set"
"8746splitHere46","12899896splitHere46","add"
"8747splitHere46","12899896splitHere46","date.set(Calendar.DAY_OF_WEEK_IN_MONTH, 3);"
"8748splitHere46","12899896splitHere46","date.add(Calendar.MONTH, 1);"
"8749splitHere46","12899896splitHere46","final Calendar date = Calendar.getInstance();<newline46mondego>date.set(2012, Calendar.SEPTEMBER, 17);<newline46mondego><newline46mondego>int prevDayOfWeekInMonth = date.get(Calendar.DAY_OF_WEEK_IN_MONTH);<newline46mondego>int prevDayOfWeek = date.get(Calendar.DAY_OF_WEEK);<newline46mondego><newline46mondego>date.add(Calendar.MONTH, 1);<newline46mondego>date.set(Calendar.DAY_OF_WEEK, prevDayOfWeek);<newline46mondego>date.set(Calendar.DAY_OF_WEEK_IN_MONTH, prevDayOfWeekInMonth);<newline46mondego>"
"8750splitHere46","12899911splitHere46","//initialise doubles with default 0 value when string is empty<newline46mondego>double pvDbl = getDouble(pv);<newline46mondego>double fvDbl = getDouble(fv);<newline46mondego>//etc<newline46mondego>"
"8751splitHere46","12899911splitHere46","getDouble"
"8752splitHere46","12899911splitHere46","private static double getDouble(EditText et) {<newline46mondego>    if(et.getText().length() == 0) {<newline46mondego>        return 0;<newline46mondego>    }<newline46mondego>    try {<newline46mondego>        return Double.parseDouble(et.getText().toString());<newline46mondego>    } catch (NumberFormatException e) {<newline46mondego>        return 0; //default value for invalid entries?<newline46mondego>                  //Or maybe show an error message?<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8753splitHere46","12899911splitHere46","switch"
"8754splitHere46","12899911splitHere46","if"
"8755splitHere46","12899911splitHere46","if (pvDbl == 0 ) {<newline46mondego>    //formula for pv null<newline46mondego>} else if (fvDbl == 0) {<newline46mondego>    //formula for fv null<newline46mondego>} //etc. <newline46mondego>"
"8756splitHere46","12899911splitHere46","0"
"8757splitHere46","12899911splitHere46","<doubleQuotes46><doubleQuotes46>"
"8758splitHere46","12899911splitHere46","<doubleQuotes46>0<doubleQuotes46>"
"8759splitHere46","12899971splitHere46","StringBuilder"
"8760splitHere46","12900033splitHere46","drawingpanel"
"8761splitHere46","12900033splitHere46","paint"
"8762splitHere46","12900033splitHere46","dot"
"8763splitHere46","12900033splitHere46","null"
"8764splitHere46","12900033splitHere46","drawingpanel"
"8765splitHere46","12900033splitHere46","drawingpanel"
"8766splitHere46","12900033splitHere46","drawingpanel"
"8767splitHere46","12900033splitHere46","Panel drawingpanel = new Panel() {<newline46mondego>        public void paint(Graphics g) {<newline46mondego>            if (dot == null) {<newline46mondego>                return;<newline46mondego>            }<newline46mondego>            g.drawOval(dot.leftOf(), dot.topOf(), dot.widthOf(), dot.heightOf());<newline46mondego>            g.fillOval(dot.leftOf(), dot.topOf(), dot.widthOf(), dot.heightOf());<newline46mondego>        };<newline46mondego>    };<newline46mondego>"
"8768splitHere46","12900033splitHere46","Bounce"
"8769splitHere46","12900033splitHere46","paint()"
"8770splitHere46","12900033splitHere46","Runnable"
"8771splitHere46","12900033splitHere46","implements"
"8772splitHere46","12900033splitHere46","volatile boolean running = false;<newline46mondego>    private Thread animationThread;<newline46mondego>"
"8773splitHere46","12900033splitHere46","public void run() {<newline46mondego>        while (running) {<newline46mondego>            if (!showtails) {<newline46mondego>                dot.setColor(drawingpanel.getBackground());<newline46mondego>            }<newline46mondego>            update();// check if speed, size, or shape changed<newline46mondego>            draw();// draw next dot based on move(), or initial condition<newline46mondego>            pause();<newline46mondego>            move();// calculate and prepare the coordinates for the next<newline46mondego>                   // iteration to be drawn<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public void draw() {<newline46mondego>        drawingpanel.repaint();<newline46mondego>    }<newline46mondego><newline46mondego>    public void pause() {<newline46mondego>        try {<newline46mondego>            Thread.sleep(500);<newline46mondego>        } catch (InterruptedException e) {<newline46mondego>            e.printStackTrace();<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public void move() {<newline46mondego>        dot.left--;<newline46mondego>        dot.top--;<newline46mondego>    }<newline46mondego>"
"8774splitHere46","12900033splitHere46","public void actionPerformed(ActionEvent e) {<newline46mondego>        Object source = e.getSource();<newline46mondego><newline46mondego>        if (source == this.runbutton) {<newline46mondego>            running = !running;<newline46mondego>            if (animationThread == null) {<newline46mondego>                animationThread = new Thread(this); <newline46mondego>            }<newline46mondego><newline46mondego>            if (running) {<newline46mondego>                dot = new CircDot(100, 100, sizebar.getValue(), Color.RED);<newline46mondego>                animationThread.start();<newline46mondego>            }<newline46mondego>        } else<newline46mondego>            ...<newline46mondego>    }<newline46mondego>"
"8775splitHere46","12900033splitHere46","run()"
"8776splitHere46","12900033splitHere46","running"
"8777splitHere46","12900033splitHere46","run()"
"8778splitHere46","12900033splitHere46","while"
"8779splitHere46","12900033splitHere46","running"
"8780splitHere46","12900033splitHere46","false"
"8781splitHere46","12900033splitHere46","repaint()"
"8782splitHere46","12900033splitHere46","drawingpanel"
"8783splitHere46","12900033splitHere46","paint"
"8784splitHere46","12900033splitHere46","Thread.sleep(500)"
"8785splitHere46","12900033splitHere46","top"
"8786splitHere46","12900033splitHere46","left"
"8787splitHere46","12900033splitHere46","running"
"8788splitHere46","12900033splitHere46","volatile"
"8789splitHere46","12900091splitHere46","<xjc:superClass>"
"8790splitHere46","12900133splitHere46","Customer"
"8791splitHere46","12900133splitHere46","Loan"
"8792splitHere46","12900133splitHere46","Customer"
"8793splitHere46","12900133splitHere46","Branch"
"8794splitHere46","12900133splitHere46","Bank"
"8795splitHere46","12900133splitHere46","class Branch extends Bank"
"8796splitHere46","12900133splitHere46","Loan"
"8797splitHere46","12900133splitHere46","Customer"
"8798splitHere46","12900133splitHere46","class Loan extends Customer"
"8799splitHere46","12900133splitHere46","Customer"
"8800splitHere46","12900133splitHere46","Loan"
"8801splitHere46","12900133splitHere46","Customer"
"8802splitHere46","12900133splitHere46","Loan"
"8803splitHere46","12900133splitHere46","Loan"
"8804splitHere46","12900133splitHere46","List"
"8805splitHere46","12900133splitHere46","Loan"
"8806splitHere46","12900133splitHere46","Customer"
"8807splitHere46","12900137splitHere46","PersistentLayoutImpl"
"8808splitHere46","12900137splitHere46","AbstractLayout"
"8809splitHere46","12900304splitHere46","java.lang.Class"
"8810splitHere46","12900304splitHere46","java.lang.Class"
"8811splitHere46","12900304splitHere46","BasicFileAttributes"
"8812splitHere46","12900304splitHere46","File"
"8813splitHere46","12900339splitHere46","setVertexFillPaintTransformer"
"8814splitHere46","12900339splitHere46","BasicVisualizationServer"
"8815splitHere46","12900339splitHere46","DefaultModalGraphMouse"
"8816splitHere46","12900339splitHere46","import java.awt.BasicStroke;<newline46mondego>import java.awt.Color;<newline46mondego>import java.awt.Dimension;<newline46mondego>import java.awt.Paint;<newline46mondego><newline46mondego>import javax.swing.JFrame;<newline46mondego><newline46mondego>import org.apache.commons.collections15.Transformer;<newline46mondego>import org.apache.commons.collections15.functors.ConstantTransformer;<newline46mondego><newline46mondego>import edu.uci.ics.jung.algorithms.layout.FRLayout;<newline46mondego>import edu.uci.ics.jung.algorithms.layout.Layout;<newline46mondego>import edu.uci.ics.jung.graph.Graph;<newline46mondego>import edu.uci.ics.jung.visualization.VisualizationViewer;<newline46mondego>import edu.uci.ics.jung.visualization.control.DefaultModalGraphMouse;<newline46mondego>import edu.uci.ics.jung.visualization.decorators.ToStringLabeller;<newline46mondego>import edu.uci.ics.jung.visualization.picking.PickedInfo;<newline46mondego>import edu.uci.ics.jung.visualization.renderers.DefaultVertexLabelRenderer;<newline46mondego>import edu.uci.ics.jung.visualization.renderers.Renderer.VertexLabel.Position;<newline46mondego><newline46mondego>public class Design {<newline46mondego>     public Graph<Integer, String> g;<newline46mondego>    public Design() {     <newline46mondego><newline46mondego>         this.g = ProjectTools.readNet(<doubleQuotes46>SmallTown.net<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    private static class VertexPaintTransformer implements Transformer<Integer,Paint> {<newline46mondego><newline46mondego>        private final PickedInfo<Integer> pi;<newline46mondego><newline46mondego>        VertexPaintTransformer ( PickedInfo<Integer> pi ) { <newline46mondego>            super();<newline46mondego>            if (pi == null)<newline46mondego>                throw new IllegalArgumentException(<doubleQuotes46>PickedInfo instance must be non-null<doubleQuotes46>);<newline46mondego>            this.pi = pi;<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public Paint transform(Integer i) {<newline46mondego>            Color p = null;<newline46mondego>            //Edit here to set the colours as reqired by your solution<newline46mondego>            if ( i % 2 == 0)<newline46mondego>                p = Color.GREEN;<newline46mondego>            else<newline46mondego>                p =  Color.RED;<newline46mondego>            //Remove if a selected colour is not required<newline46mondego>            if ( pi.isPicked(i)){<newline46mondego>                p = Color.yellow;<newline46mondego>            }<newline46mondego>            return p;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public static <Paint> void main(String[] args) {<newline46mondego>        Design sgv = new Design(); <newline46mondego>        Layout<Integer, String> layout = new FRLayout(sgv.g);<newline46mondego>        layout.setSize(new Dimension(800,800));  <newline46mondego>        VisualizationViewer<Integer, String> vv = new VisualizationViewer<Integer, String>(layout);<newline46mondego><newline46mondego>        Transformer<Integer,Paint> vertexPaint = new Transformer<Integer,Paint>() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public Paint transform(Integer i) {<newline46mondego>                if ( i % 2 == 0)<newline46mondego>                    return (Paint) Color.GREEN;<newline46mondego>                else<newline46mondego>                    return  (Paint) Color.RED;<newline46mondego>            }<newline46mondego>        };  <newline46mondego><newline46mondego>        vv.setPreferredSize(new Dimension(850,850));<newline46mondego>        vv.getRenderContext().setVertexLabelRenderer(new DefaultVertexLabelRenderer(Color.green));<newline46mondego>        vv.getRenderContext().setEdgeDrawPaintTransformer(new ConstantTransformer(Color.white));<newline46mondego>        vv.getRenderContext().setEdgeStrokeTransformer(new ConstantTransformer(new BasicStroke(2.5f)));<newline46mondego><newline46mondego>        vv.getRenderContext().setVertexFillPaintTransformer(new VertexPaintTransformer(vv.getPickedVertexState()));<newline46mondego><newline46mondego>        DefaultModalGraphMouse graphMouse = new DefaultModalGraphMouse();<newline46mondego>        graphMouse.setMode(edu.uci.ics.jung.visualization.control.ModalGraphMouse.Mode.PICKING);<newline46mondego>        vv.setGraphMouse(graphMouse);<newline46mondego><newline46mondego>        vv.setBackground(Color.gray);<newline46mondego>        vv.getRenderContext().setVertexLabelTransformer(new ToStringLabeller<Integer>());<newline46mondego>        vv.getRenderer().getVertexLabelRenderer().setPosition(Position.CNTR);<newline46mondego><newline46mondego><newline46mondego>        JFrame frame = new JFrame(<doubleQuotes46>Projet Algo<doubleQuotes46>);<newline46mondego>        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        frame.getContentPane().add(vv); <newline46mondego>        frame.pack();<newline46mondego>        frame.setVisible(true);       <newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8817splitHere46","12900339splitHere46","Transformer"
"8818splitHere46","12900339splitHere46","VertexPaintTransformer"
"8819splitHere46","12900339splitHere46","setVertexFillPaintTransformer"
"8820splitHere46","12900339splitHere46","BasicVisualizationServer"
"8821splitHere46","12900339splitHere46","VisualizationViewer"
"8822splitHere46","12900339splitHere46","GraphMouse"
"8823splitHere46","12900339splitHere46","ProjectTools#readNet()"
"8824splitHere46","12900339splitHere46","VertexPaintTransformer#transform()"
"8825splitHere46","12900476splitHere46","enqueue"
"8826splitHere46","12900476splitHere46","public void enqueue(T element) {<newline46mondego>    if (front == (rear + 1) % queue.length) {<newline46mondego>        expandCapacity();<newline46mondego>    }<newline46mondego>    queue[rear] = element;<newline46mondego>    rear = (rear + 1) % queue.length;<newline46mondego>}<newline46mondego>"
"8827splitHere46","12900476splitHere46","expandCapacity"
"8828splitHere46","12900476splitHere46","rear"
"8829splitHere46","12900476splitHere46","rear = queue.length - 1;<newline46mondego>"
"8830splitHere46","12900484splitHere46","<web-app xmlns=<doubleQuotes46>http://caucho.com/ns/resin<doubleQuotes46><newline46mondego>         xmlns:resin=<doubleQuotes46>urn:java:com.caucho.resin<doubleQuotes46>><newline46mondego><newline46mondego>  <!-- pass through all actual files to the standard dispatch --><newline46mondego>  <resin:Dispatch regexp=<doubleQuotes46>\.<doubleQuotes46>><newline46mondego>    <resin:IfFileExists/><newline46mondego>  </resin:Dispatch><newline46mondego><newline46mondego>  <!-- pass through all php files to the standard dispatch --><newline46mondego>  <resin:Dispatch regexp=<doubleQuotes46>\.php<doubleQuotes46>/><newline46mondego><newline46mondego>  <!-- rewrite everything else to be /index.php/foo... --><newline46mondego>  <resin:Forward regexp=<doubleQuotes46>^<doubleQuotes46> target=<doubleQuotes46>/index.php<doubleQuotes46>/><newline46mondego><newline46mondego></web-app><newline46mondego>"
"8831splitHere46","12900632splitHere46","ArrayList"
"8832splitHere46","12900632splitHere46","int max = 1;<newline46mondego>PhoneRecord[] records = new PhoneRecord[max];<newline46mondego>int numRecords = 0;<newline46mondego><newline46mondego>void addRecord(PhoneRecord rec) {<newline46mondego>    records[numRecords++] = rec;<newline46mondego>    if(numRecords == max) {<newline46mondego>        /* out of space, double the array size */<newline46mondego>        max *= 2;<newline46mondego>        records = Arrays.copyOf(records, max);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8833splitHere46","12900725splitHere46","$1"
"8834splitHere46","12900766splitHere46","List"
"8835splitHere46","12900766splitHere46","Set<String>"
"8836splitHere46","12900766splitHere46","StringBuilder"
"8837splitHere46","12900766splitHere46","String"
"8838splitHere46","12900766splitHere46","static List<StringBuilder> removeDuplication(List<StringBuilder> directCallList) {<newline46mondego>    HashSet<String> set = new HashSet<String>();<newline46mondego>    List<StringBuilder> returnList = new ArrayList<StringBuilder>();<newline46mondego>    for(StringBuilder builder : directCallList) {<newline46mondego>        if(set.add(builder.toString())<newline46mondego>            returnList.add(builder);<newline46mondego>    }   <newline46mondego>    return returnList;<newline46mondego>} <newline46mondego>"
"8839splitHere46","12900814splitHere46","ScrollPane sp = new ScrollPane();<newline46mondego>    sp.setStyle(<doubleQuotes46>-fx-background-color:transparent;<doubleQuotes46>);<newline46mondego>"
"8840splitHere46","12900832splitHere46","@Override<newline46mondego>public boolean setAttribute(String name, Object value) {<newline46mondego>    log.debug(<doubleQuotes46>setAttribute - name: {} value: {}<doubleQuotes46>, name, value);<newline46mondego>    boolean result = true;<newline46mondego>    ownerMessage.addEvent(Type.CLIENT_UPDATE_ATTRIBUTE, name, null);<newline46mondego>    if (value == null && super.removeAttribute(name)) {<newline46mondego>        // Setting a null value removes the attribute<newline46mondego>        modified = true;<newline46mondego>        syncEvents.add(new SharedObjectEvent(Type.CLIENT_DELETE_DATA, name, null));<newline46mondego>        deleteStats.incrementAndGet();<newline46mondego>    } else if (value != null && super.setAttribute(name, value)) {<newline46mondego>        // only sync if the attribute changed<newline46mondego>        modified = true;<newline46mondego>        syncEvents.add(new SharedObjectEvent(Type.CLIENT_UPDATE_DATA, name, value));<newline46mondego>        changeStats.incrementAndGet();<newline46mondego>    } else {<newline46mondego>        result = false;<newline46mondego>    }<newline46mondego>    notifyModified();<newline46mondego>    return result;<newline46mondego>}<newline46mondego>"
"8841splitHere46","12900832splitHere46","/**<newline46mondego> * Set an attribute on this object.<newline46mondego> *<newline46mondego> * @param name  the name of the attribute to change<newline46mondego> * @param value the new value of the attribute<newline46mondego> * @return true if the attribute value was added or changed, otherwise false<newline46mondego> */<newline46mondego>public boolean setAttribute(String name, Object value) {<newline46mondego>    if (name != null) {<newline46mondego>        if (value != null) {<newline46mondego>            // update with new value<newline46mondego>            Object previous = attributes.put(name, value);<newline46mondego>            // previous will be null if the attribute didn't exist<newline46mondego>            return (previous == null || !value.equals(previous));<newline46mondego>        }<newline46mondego>    }<newline46mondego>    return false;<newline46mondego>}<newline46mondego>"
"8842splitHere46","12900832splitHere46","return (previous == null || !value.equals(previous));<newline46mondego>"
"8843splitHere46","12900832splitHere46","HashMap<String, Object> game = (HashMap<String, Object>)this.gamesSO.getMapAttribute(Integer.toString(game_id));<newline46mondego>"
"8844splitHere46","12900832splitHere46","System.out.println(this.gamesSO.getMapAttribute(Integer.toString(game_id)));<newline46mondego>"
"8845splitHere46","12900832splitHere46","HashMap<String, MyPlayerBean><newline46mondego>"
"8846splitHere46","12900879splitHere46","TableView"
"8847splitHere46","12900879splitHere46","CellFactory"
"8848splitHere46","12900984splitHere46","Interval newInterval = new Interval(oldInterval.getStart().minusDays(1), oldInterval.getEnd().plusDays(1)); <newline46mondego>"
"8849splitHere46","12901033splitHere46","main()"
"8850splitHere46","12901033splitHere46","exe"
"8851splitHere46","12901033splitHere46","jar"
"8852splitHere46","12901033splitHere46","main()"
"8853splitHere46","12901159splitHere46","void callback(int val) {<newline46mondego>    JNIEnv * g_env;<newline46mondego>    // double check it's all ok<newline46mondego>    int getEnvStat = g_vm->GetEnv((void **)&g_env, JNI_VERSION_1_6);<newline46mondego>    if (getEnvStat == JNI_EDETACHED) {<newline46mondego>        std::cout << <doubleQuotes46>GetEnv: not attached<doubleQuotes46> << std::endl;<newline46mondego>        if (g_vm->AttachCurrentThread((void **) &g_env, NULL) != 0) {<newline46mondego>            std::cout << <doubleQuotes46>Failed to attach<doubleQuotes46> << std::endl;<newline46mondego>        }<newline46mondego>    } else if (getEnvStat == JNI_OK) {<newline46mondego>        //<newline46mondego>    } else if (getEnvStat == JNI_EVERSION) {<newline46mondego>        std::cout << <doubleQuotes46>GetEnv: version not supported<doubleQuotes46> << std::endl;<newline46mondego>    }<newline46mondego><newline46mondego>    g_env->CallVoidMethod(g_obj, g_mid, val);<newline46mondego><newline46mondego>    if (g_env->ExceptionCheck()) {<newline46mondego>        g_env->ExceptionDescribe();<newline46mondego>    }<newline46mondego><newline46mondego>    g_vm->DetachCurrentThread();<newline46mondego>}<newline46mondego>"
"8854splitHere46","12901214splitHere46","public static void main(String[] args) {<newline46mondego>        Integer[] a = new Integer[] { 1, 0, 0, 1, 0, 0 };<newline46mondego>        List<Integer> a1 = Arrays.asList(a);<newline46mondego>        Integer[] b = new Integer[] { 0, 1, 1, 0, 0, 0 };<newline46mondego>        List<Integer> a2 = Arrays.asList(b);<newline46mondego>        List<Integer> a3 = new ArrayList();<newline46mondego>        for (int i = 0; i < a1.size(); i++) {<newline46mondego>            a3.add(a1.get(i) | a2.get(i));<newline46mondego>            System.out.print(a3.get(i));<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"8855splitHere46","12901214splitHere46","111100<newline46mondego>"
"8856splitHere46","12901236splitHere46","oehmiche"
"8857splitHere46","12901236splitHere46","<prefer-application-resources><newline46mondego>    <resource-name>javax.faces.*</resource-name><newline46mondego>    <resource-name>com.sun.faces.*</resource-name><newline46mondego>    <resource-name>com.bea.faces.*</resource-name><newline46mondego>    <resource-name>META-INF/services/javax.servlet.ServletContainerInitializer</resource-name><newline46mondego>    <resource-name>META-INF/services/com.sun.faces.spi.FacesConfigResourceProvider</resource-name><newline46mondego></prefer-application-resources><newline46mondego>"
"8858splitHere46","12901251splitHere46","class t {<newline46mondego>public static void main(String[] args) {<newline46mondego>System.out.println(DialogError.getErrorCode());<newline46mondego>}<newline46mondego>}<newline46mondego><newline46mondego>class DialogError {<newline46mondego>int getErrorCode() {<newline46mondego>return 10;<newline46mondego>}}<newline46mondego>"
"8859splitHere46","12901251splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego><RulePack xmlns=<doubleQuotes46>xmlns://www.fortifysoftware.com/schema/rules<doubleQuotes46>><newline46mondego>  <RulePackID>FFFFFFFF-FFFF-FFFF-FFFF-FFFFFFFFFFFF</RulePackID><newline46mondego>  <SKU>SKU-8F66A5A4-CFDA-419B-97D8-4BF26B78EED9</SKU><newline46mondego>  <Name><![CDATA[my test ruleset]]></Name><newline46mondego>  <Version>1.0</Version><newline46mondego>  <Description><![CDATA[Rule to identify an instance of getErrorCode]]></Description><newline46mondego>  <Rules version=<doubleQuotes46>3.10<doubleQuotes46>><newline46mondego>    <RuleDefinitions><newline46mondego>      <SemanticRule formatVersion=<doubleQuotes46>3.10<doubleQuotes46> language=<doubleQuotes46>java<doubleQuotes46>><newline46mondego>        <MetaInfo><newline46mondego>          <Group name=<doubleQuotes46>Accuracy<doubleQuotes46>>5.0</Group><newline46mondego>          <Group name=<doubleQuotes46>Impact<doubleQuotes46>>5.0</Group><newline46mondego>          <Group name=<doubleQuotes46>RemediationEffort<doubleQuotes46>>5.0</Group><newline46mondego>          <Group name=<doubleQuotes46>Probability<doubleQuotes46>>5.0</Group><newline46mondego>        </MetaInfo><newline46mondego>        <Label>label lololololol</Label><newline46mondego>        <RuleID>01239X14-ASDF-41AA-BDFA-DF134asdf79A</RuleID><newline46mondego>        <Notes><![CDATA[Checks if DialogError class if found yo]]></Notes><newline46mondego>        <VulnKingdom>Security Features</VulnKingdom><newline46mondego>        <VulnCategory>Function is evil</VulnCategory><newline46mondego>        <VulnSubcategory>Some ol category</VulnSubcategory><newline46mondego>        <DefaultSeverity>3.0</DefaultSeverity><newline46mondego>        <Description formatVersion=<doubleQuotes46>3.2<doubleQuotes46>><newline46mondego>          <Abstract><![CDATA[YO FIRING YO]]></Abstract><newline46mondego>          <Explanation><![CDATA[YOYOYOYOYO]]></Explanation><newline46mondego>          <Recommendations><![CDATA[YOYOYOYOY]]></Recommendations><newline46mondego>          <References><newline46mondego>            <Reference><newline46mondego>              <Title><![CDATA[YO]]></Title><newline46mondego>              <Source><![CDATA[YOYOYOYOYOYO]]></Source><newline46mondego>            </Reference><newline46mondego>          </References><newline46mondego>        </Description><newline46mondego>        <Type>default</Type><newline46mondego>        <FunctionIdentifier><newline46mondego>          <ClassName><newline46mondego>            <Value>DialogError</Value><newline46mondego>          </ClassName><newline46mondego>          <FunctionName><newline46mondego>            <Value>getErrorCode</Value><newline46mondego>          </FunctionName><newline46mondego>          <ApplyTo implements=<doubleQuotes46>true<doubleQuotes46> overrides=<doubleQuotes46>true<doubleQuotes46> extends=<doubleQuotes46>true<doubleQuotes46>/><newline46mondego>        </FunctionIdentifier><newline46mondego>      </SemanticRule><newline46mondego>    </RuleDefinitions><newline46mondego>  </Rules><newline46mondego></RulePack><newline46mondego>"
"8860splitHere46","12901285splitHere46","Class.newInstance"
"8861splitHere46","12901285splitHere46","new T(...)"
"8862splitHere46","12901336splitHere46","public void packetReceived(IBroadcastStream broadcastStream,<newline46mondego>  IStreamPacket streampacket) {<newline46mondego><newline46mondego>}<newline46mondego>"
"8863splitHere46","12901336splitHere46","IoBuffer data = streampacket.getData().asReadOnlyBuffer();<newline46mondego><newline46mondego>        if (data.limit() == 0) {<newline46mondego>            return;<newline46mondego>        }<newline46mondego><newline46mondego>        if (startTimeStamp == -1) {<newline46mondego>            // That will be not bigger then long value<newline46mondego>            startTimeStamp = streampacket.getTimestamp();<newline46mondego>        }<newline46mondego><newline46mondego>        timeStamp -= startTimeStamp;<newline46mondego><newline46mondego>        ITag tag = new Tag();<newline46mondego>        tag.setDataType(streampacket.getDataType());<newline46mondego><newline46mondego>        // log.debug(<doubleQuotes46>data.limit() :: <doubleQuotes46>+data.limit());<newline46mondego>        tag.setBodySize(data.limit());<newline46mondego>        tag.setTimestamp(timeStamp);<newline46mondego>        tag.setBody(data);<newline46mondego><newline46mondego>        writer.writeTag(tag);<newline46mondego>"
"8864splitHere46","12901336splitHere46","protected ITagWriter writer = null;<newline46mondego><newline46mondego>private void init() throws IOException {<newline46mondego>    file = new File(OmFileHelper.getStreamsSubDir(this.scope.getName()), this.streamName + <doubleQuotes46>.flv<doubleQuotes46>);<newline46mondego><newline46mondego>    IStreamableFileFactory factory = (IStreamableFileFactory) ScopeUtils<newline46mondego>            .getScopeService(this.scope, IStreamableFileFactory.class,<newline46mondego>                    StreamableFileFactory.class);<newline46mondego><newline46mondego>    if (!this.file.isFile()) {<newline46mondego>        // Maybe the (previously existing) file has been deleted<newline46mondego>        this.file.createNewFile();<newline46mondego><newline46mondego>    } else if (!file.canWrite()) {<newline46mondego>        throw new IOException(<doubleQuotes46>The file is read-only<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    IStreamableFileService service = factory.getService(this.file);<newline46mondego>    IStreamableFile flv = service.getStreamableFile(this.file);<newline46mondego>    this.writer = flv.getWriter();<newline46mondego><newline46mondego>}<newline46mondego>"
"8865splitHere46","12901463splitHere46","//Worker.java<newline46mondego>import java.util.Scanner;<newline46mondego><newline46mondego>/**<newline46mondego> * a generic worker<newline46mondego> */<newline46mondego>public class Worker {<newline46mondego>    public final double bonus = 100;<newline46mondego>    protected String name, workerID;<newline46mondego>    protected double hourlyRate, totalHoursWorked, tax, grossSalary, netSalary;<newline46mondego><newline46mondego><newline46mondego>    public void addWeekly(double hoursWorked) {<newline46mondego>        this.totalHoursWorked = this.totalHoursWorked + hoursWorked;<newline46mondego>    }<newline46mondego><newline46mondego>    public double gross() {<newline46mondego>        grossSalary = (totalHoursWorked * hourlyRate);<newline46mondego>        if (totalHoursWorked >= 150) {<newline46mondego>            grossSalary = grossSalary + 100;<newline46mondego>        }<newline46mondego>        return grossSalary;<newline46mondego>    }<newline46mondego><newline46mondego>    public double netAndTax() {<newline46mondego>        netSalary = grossSalary;<newline46mondego>        if (grossSalary > 500) {<newline46mondego>            tax = (grossSalary - 500) * 0.3;<newline46mondego>            netSalary = (grossSalary - tax);<newline46mondego><newline46mondego>        }<newline46mondego>        return netSalary;<newline46mondego>    }<newline46mondego><newline46mondego>    public String getName() {<newline46mondego>        return this.name;<newline46mondego>    }<newline46mondego><newline46mondego>    public String getWorkerID() {<newline46mondego>        return this.workerID;<newline46mondego>    }<newline46mondego><newline46mondego>    public double getHourlyRate() {<newline46mondego>        return this.hourlyRate;<newline46mondego>    }<newline46mondego><newline46mondego>    public double getTotalHours() {<newline46mondego>        return totalHoursWorked;<newline46mondego>    }<newline46mondego><newline46mondego>    public double getGrossSalary() {<newline46mondego>        return grossSalary;<newline46mondego>    }<newline46mondego><newline46mondego>    public void addToGross(double amt) {<newline46mondego>        grossSalary = grossSalary + amt;<newline46mondego>    }<newline46mondego><newline46mondego>    public void displaySalary() {<newline46mondego>        System.out.print(<doubleQuotes46>Name: <doubleQuotes46> + getName() + <doubleQuotes46>\nID :<doubleQuotes46> + getWorkerID()<newline46mondego>                + <doubleQuotes46>\nHourly Rate: <doubleQuotes46> + getHourlyRate() + <doubleQuotes46>\nTotalHours Worked<doubleQuotes46><newline46mondego>                + getTotalHours() + <doubleQuotes46>\nGross pay<doubleQuotes46> + getGrossSalary() + <doubleQuotes46>\nTax: <doubleQuotes46><newline46mondego>                + netAndTax() + <doubleQuotes46>\nNet Pay: <doubleQuotes46> + netAndTax());<newline46mondego>    }<newline46mondego><newline46mondego>    public void readFromInput(Scanner input) {<newline46mondego>        name = input.nextLine();<newline46mondego>        System.out.print(<doubleQuotes46>  <doubleQuotes46>);<newline46mondego>        this.workerID= input.nextLine();<newline46mondego>        System.out.print(<doubleQuotes46>  <doubleQuotes46>);<newline46mondego>        this.totalHoursWorked = input.nextDouble();<newline46mondego>        System.out.println();<newline46mondego>    }<newline46mondego><newline46mondego>} // Worker<newline46mondego><newline46mondego>//MachineWorker.java<newline46mondego>import java.util.Scanner;<newline46mondego>public class MachineWorker extends Worker {<newline46mondego><newline46mondego>    private double targetAmount;<newline46mondego>    private double totalPieces, productivityBonus;<newline46mondego><newline46mondego>    public void addWeekly(double hoursWorked, double weeklyAmount) {<newline46mondego>        totalHoursWorked = hoursWorked + totalHoursWorked;<newline46mondego>        totalPieces = weeklyAmount + totalPieces;<newline46mondego>    }<newline46mondego><newline46mondego>    public double productivityBonus() {<newline46mondego>        productivityBonus = 100 + (totalPieces - targetAmount);<newline46mondego>        return productivityBonus;<newline46mondego>    }<newline46mondego><newline46mondego>    public double gross() {<newline46mondego>        grossSalary = (totalHoursWorked * hourlyRate) + productivityBonus;<newline46mondego>        if (totalHoursWorked >= 150) {<newline46mondego>            grossSalary = grossSalary + bonus;<newline46mondego>        }<newline46mondego>        return grossSalary;<newline46mondego>    }<newline46mondego><newline46mondego>    public void addToGross(double amt) {<newline46mondego>        amt = productivityBonus;<newline46mondego>        grossSalary = grossSalary + amt;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void displaySalary() {<newline46mondego>        super.displaySalary();<newline46mondego>        System.out.println(<doubleQuotes46>Productivity Bonus  <doubleQuotes46> + productivityBonus);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void readFromInput(Scanner input) {<newline46mondego>        super.readFromInput(input);<newline46mondego>        this.totalPieces = input.nextDouble();<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>//Polymorphism PolyWorker.java<newline46mondego><newline46mondego>import java.util.*;<newline46mondego><newline46mondego>public class PolyWorkers {<newline46mondego>    public static void main(String args[]) {<newline46mondego>        Scanner input = new Scanner(System.in);<newline46mondego>        Worker[] workers = new Worker[5];<newline46mondego><newline46mondego>        char option = '0';<newline46mondego>        String choice;<newline46mondego><newline46mondego>        for (int i = 0; i < 5; i++) {<newline46mondego><newline46mondego>            System.out.print(<doubleQuotes46>\tType of object <doubleQuotes46> + (i + 1) + <doubleQuotes46> [W/M]: <doubleQuotes46>);<newline46mondego>            choice = input.nextLine();<newline46mondego><newline46mondego>            if (choice.length() == 1) {<newline46mondego>                option = choice.toLowerCase().charAt(0); // pick the first character<newline46mondego>                switch (option) {<newline46mondego>                case 'w': {<newline46mondego>                    workers[i] = new Worker();<newline46mondego>                    System.out.println(<doubleQuotes46>\n\tEnter name, ID and hours:   <doubleQuotes46>);<newline46mondego>                }<newline46mondego>                    break;<newline46mondego>                case 'm': {<newline46mondego>                    System.out.print(<doubleQuotes46>\n\tEnter name, ID, hours and pieces: <doubleQuotes46>);<newline46mondego>                }<newline46mondego>                    break;<newline46mondego>                } // switch<newline46mondego>                workers[i].readFromInput(input);<newline46mondego>            }<newline46mondego><newline46mondego>            workers[i].displaySalary();<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8866splitHere46","12901466splitHere46","xs:anyAttribute"
"8867splitHere46","12901466splitHere46","@XmlAnyAttribute"
"8868splitHere46","12901466splitHere46","QName"
"8869splitHere46","12901466splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46> standalone=<doubleQuotes46>no<doubleQuotes46>?><newline46mondego><mapExample><newline46mondego>  <map France=<doubleQuotes46>Paris<doubleQuotes46> Japan=<doubleQuotes46>Tokyo<doubleQuotes46>/><newline46mondego></mapExample><newline46mondego>"
"8870splitHere46","12901466splitHere46","import java.util.ArrayList;<newline46mondego>import java.util.HashMap;<newline46mondego>import java.util.List;<newline46mondego>import java.util.Map;<newline46mondego><newline46mondego>import javax.xml.bind.JAXBContext;<newline46mondego>import javax.xml.bind.Marshaller;<newline46mondego>import javax.xml.bind.annotation.XmlAttribute;<newline46mondego>import javax.xml.bind.annotation.XmlElement;<newline46mondego>import javax.xml.bind.annotation.XmlRootElement;<newline46mondego>import javax.xml.bind.annotation.adapters.XmlAdapter;<newline46mondego>import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;<newline46mondego>import javax.xml.transform.TransformerFactory;<newline46mondego>import javax.xml.transform.dom.DOMResult;<newline46mondego>import javax.xml.transform.dom.DOMSource;<newline46mondego>import javax.xml.transform.stream.StreamResult;<newline46mondego>import javax.xml.xpath.XPath;<newline46mondego>import javax.xml.xpath.XPathConstants;<newline46mondego>import javax.xml.xpath.XPathExpression;<newline46mondego>import javax.xml.xpath.XPathFactory;<newline46mondego><newline46mondego>import org.w3c.dom.Document;<newline46mondego>import org.w3c.dom.Element;<newline46mondego>import org.w3c.dom.Node;<newline46mondego>import org.w3c.dom.NodeList;<newline46mondego><newline46mondego>@XmlRootElement<newline46mondego>class MapExample {<newline46mondego>  @XmlJavaTypeAdapter(MapXmlAdapter.class)<newline46mondego>  @XmlElement(name=<doubleQuotes46>map<doubleQuotes46>)<newline46mondego>  private Map<String, String> data = new HashMap<>();<newline46mondego><newline46mondego>  public static void main(String[] args) throws Exception {<newline46mondego>    MapExample example = new MapExample();<newline46mondego>    example.data.put(<doubleQuotes46>France<doubleQuotes46>, <doubleQuotes46>Paris<doubleQuotes46>);<newline46mondego>    example.data.put(<doubleQuotes46>Japan<doubleQuotes46>, <doubleQuotes46>Tokyo<doubleQuotes46>);<newline46mondego><newline46mondego>    JAXBContext context = JAXBContext.newInstance(MapExample.class);<newline46mondego>    Marshaller marshaller = context.createMarshaller();<newline46mondego>    DOMResult result = new DOMResult();<newline46mondego>    marshaller.marshal(example, result);<newline46mondego><newline46mondego>    XPathFactory factory = XPathFactory.newInstance();<newline46mondego>    XPath xpath = factory.newXPath();<newline46mondego><newline46mondego>    Document document = (Document)result.getNode();<newline46mondego>    XPathExpression expression = xpath.compile(<doubleQuotes46>//map/entry<doubleQuotes46>);<newline46mondego>    NodeList nodes = (NodeList)expression.evaluate(document, XPathConstants.NODESET);<newline46mondego><newline46mondego>    expression = xpath.compile(<doubleQuotes46>//map<doubleQuotes46>);<newline46mondego>    Node oldMap = (Node)expression.evaluate(document, XPathConstants.NODE);    <newline46mondego>    Element newMap = document.createElement(<doubleQuotes46>map<doubleQuotes46>);<newline46mondego><newline46mondego>    for (int index = 0; index < nodes.getLength(); index++) {<newline46mondego>      Element element = (Element)nodes.item(index);<newline46mondego>      newMap.setAttribute(element.getAttribute(<doubleQuotes46>key<doubleQuotes46>), <newline46mondego>          element.getAttribute(<doubleQuotes46>value<doubleQuotes46>));<newline46mondego>    }<newline46mondego><newline46mondego>    expression = xpath.compile(<doubleQuotes46>//map/..<doubleQuotes46>);<newline46mondego>    Node parent = (Node)expression.evaluate(document, XPathConstants.NODE);    <newline46mondego>    parent.replaceChild(newMap, oldMap);<newline46mondego><newline46mondego>    TransformerFactory.newInstance().newTransformer().<newline46mondego>      transform(new DOMSource(document), new StreamResult(System.out));<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>class MapXmlAdapter extends XmlAdapter<MyMap, Map<String, String>> {<newline46mondego>  @Override<newline46mondego>  public Map<String, String> unmarshal(MyMap value) throws Exception {<newline46mondego>    throw new UnsupportedOperationException();<newline46mondego>  }<newline46mondego><newline46mondego>  @Override<newline46mondego>  public MyMap marshal(Map<String, String> value) throws Exception {<newline46mondego>    MyMap map = new MyMap();<newline46mondego>    map.entries = new ArrayList<MyEntry>();<newline46mondego>    for (String key : value.keySet()) {<newline46mondego>      MyEntry entry = new MyEntry();<newline46mondego>      entry.key = key;<newline46mondego>      entry.value = value.get(key);<newline46mondego>      map.entries.add(entry);<newline46mondego>    }<newline46mondego>    return map;<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>class MyMap {<newline46mondego>  @XmlElement(name=<doubleQuotes46>entry<doubleQuotes46>)<newline46mondego>  public List<MyEntry> entries;<newline46mondego>}<newline46mondego><newline46mondego>class MyEntry {<newline46mondego>  @XmlAttribute<newline46mondego>  public String key;<newline46mondego><newline46mondego>  @XmlAttribute<newline46mondego>  public String value;<newline46mondego>}<newline46mondego>"
"8871splitHere46","12901591splitHere46","Ant 1.6.5"
"8872splitHere46","12901591splitHere46","Netbeans Tools > Options > Miscellaneous > Ant"
"8873splitHere46","12901591splitHere46","Ant Home"
"8874splitHere46","12901591splitHere46","Ant 1.6.5 folder"
"8875splitHere46","12901591splitHere46","Help -> Help Contents"
"8876splitHere46","12901591splitHere46","Switching Ant Version"
"8877splitHere46","12901630splitHere46","Object aThing = new Integer(25);<newline46mondego>"
"8878splitHere46","12901630splitHere46","aThing"
"8879splitHere46","12901630splitHere46","Integer object"
"8880splitHere46","12901630splitHere46","Integer"
"8881splitHere46","12901630splitHere46","integer"
"8882splitHere46","12901630splitHere46","Integer"
"8883splitHere46","12901630splitHere46","Integer intRef = (Integer)aThing; // Ok, `aThing` points to an Integer object<newline46mondego>"
"8884splitHere46","12901630splitHere46","String"
"8885splitHere46","12901630splitHere46","ClassCastException"
"8886splitHere46","12901630splitHere46","Integer"
"8887splitHere46","12901630splitHere46","Integer"
"8888splitHere46","12901630splitHere46","// Exception. A String reference cannot point to `Integer` object<newline46mondego>String strRef = (String)aThing; <newline46mondego>"
"8889splitHere46","12901856splitHere46","com.sun.faces.config.ConfigureListener"
"8890splitHere46","12901886splitHere46","MDTable"
"8891splitHere46","12901886splitHere46","add( aTable );<newline46mondego>validate();<newline46mondego>...<newline46mondego>"
"8892splitHere46","12901886splitHere46","paint"
"8893splitHere46","12901886splitHere46","paint"
"8894splitHere46","12901934splitHere46","public class TimepickerActivity extends Activity implements TimePickerDialog.OnTimeSetListener {<newline46mondego><newline46mondego>    private static final int SUB_HOUR = -7;<newline46mondego>    private static final int SUB_MINUTE = -30;<newline46mondego><newline46mondego>    [...]<newline46mondego><newline46mondego>public void onTimeSet(TimePicker view, int selectedHour,<newline46mondego>        int selectedMinute) {<newline46mondego><newline46mondego>    // Gets current time<newline46mondego>    Calendar c = Calendar.getInstance();<newline46mondego><newline46mondego>    // Assign hour set in the picker<newline46mondego>    c.set(Calendar.HOUR, selectedHour)<newline46mondego>    c.set(Calendar.MINUTE, selectedMinute);<newline46mondego><newline46mondego>    // Have Calendar calculate the substraction of hours and minutes<newline46mondego>    c.add(Calendar.HOUR, SUB_HOUR);<newline46mondego>    c.add(Calendar.MINUTE, SUB_MINUTE);<newline46mondego><newline46mondego>    // Get the hour and the minute calculated<newline46mondego>    hour = c.get(Calendar.HOUR);<newline46mondego>    minute = c.get(Calendar.MINUTE);<newline46mondego>    [...]<newline46mondego>"
"8895splitHere46","12901934splitHere46","hour = selectedHour;<newline46mondego>    minute = selectedMinute;<newline46mondego>"
"8896splitHere46","12901943splitHere46","Queue<T>"
"8897splitHere46","12901943splitHere46","T"
"8898splitHere46","12901943splitHere46","Job"
"8899splitHere46","12901943splitHere46","Job"
"8900splitHere46","12901943splitHere46","Queue<String>"
"8901splitHere46","12901943splitHere46","PrintQueue"
"8902splitHere46","12901943splitHere46","public class PrintQueue {<newline46mondego>    private final Queue<Job> queue;<newline46mondego><newline46mondego>    public PrintQueue() {<newline46mondego>        queue = new Queue<Job>();<newline46mondego>    }<newline46mondego><newline46mondego>    public void lpr(String owner, int jobID) {<newline46mondego>        queue.enqueue(new Job(owner, jobID));<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8903splitHere46","12901943splitHere46","Queue"
"8904splitHere46","12901952splitHere46","javax.comm"
"8905splitHere46","12902187splitHere46","-Djava.net.preferIPv4Stack=true"
"8906splitHere46","12902261splitHere46","glReadPixel"
"8907splitHere46","12902301splitHere46","private static String filePath = CommonClass.ReadPropertiesFile(<doubleQuotes46>LogFilepath<doubleQuotes46>);<newline46mondego>public static void WriteLog(String LogLine) {<newline46mondego>    ...<newline46mondego>"
"8908splitHere46","12902370splitHere46","// Hook up the end of list1 to the original second element of list2<newline46mondego>list1.tail.next = list2.head.next;<newline46mondego>// Set the second element of list2 to be the first element of list1<newline46mondego>list2.head.next = list1.head;<newline46mondego>"
"8909splitHere46","12902370splitHere46","list1"
"8910splitHere46","12902370splitHere46","list1"
"8911splitHere46","12902465splitHere46","theMap.removeAllMapMarkers();"
"8912splitHere46","12902465splitHere46","List<Double> latArrayList = new ArrayList<Double> ();<newline46mondego>latArrayList.add(125.87); //or whatever<newline46mondego><newline46mondego>for(int i = 0; i < latArrayList.size(); i++){<newline46mondego>    theMap.addMapMarker(new MapMarkerDot(latArrayList.get(i), longArrayList.get(i)));<newline46mondego>}<newline46mondego>"
"8913splitHere46","12902511splitHere46","if(frame1.Visible)"
"8914splitHere46","12902511splitHere46","frame1.show()"
"8915splitHere46","12902511splitHere46","frame1"
"8916splitHere46","12902511splitHere46","if (frame1.Visible == true) {<newline46mondego>        frame1.hide();<newline46mondego>        frame2.show();<newline46mondego>    }<newline46mondego>"
"8917splitHere46","12902511splitHere46","== true"
"8918splitHere46","12902511splitHere46","== false"
"8919splitHere46","12902516splitHere46","Image"
"8920splitHere46","12902516splitHere46","currentImage"
"8921splitHere46","12902516splitHere46","if (keyCode == e.VK_DOWN) {<newline46mondego>   setYDirection(+1);<newline46mondego>   currentImage = Pik2; // the ready image<newline46mondego>}   <newline46mondego>"
"8922splitHere46","12902516splitHere46","paintComponent"
"8923splitHere46","12902516splitHere46","g.drawImage(currentImage, x, y, this);<newline46mondego>"
"8924splitHere46","12902770splitHere46","GridBagConsraints#anchor"
"8925splitHere46","12902770splitHere46","GridBagConstraints#gridwidth"
"8926splitHere46","12902770splitHere46","GridBagConstraints#gridheight"
"8927splitHere46","12902770splitHere46","public class TestLayout09 {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        new TestLayout09();<newline46mondego>    }<newline46mondego><newline46mondego>    public TestLayout09() {<newline46mondego>        EventQueue.invokeLater(new Runnable() {<newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                try {<newline46mondego>                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());<newline46mondego>                } catch (ClassNotFoundException ex) {<newline46mondego>                } catch (InstantiationException ex) {<newline46mondego>                } catch (IllegalAccessException ex) {<newline46mondego>                } catch (UnsupportedLookAndFeelException ex) {<newline46mondego>                }<newline46mondego><newline46mondego>                JFrame frame = new JFrame();<newline46mondego>                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>                frame.setLayout(new BorderLayout());<newline46mondego>                frame.add(new LayoutPane());<newline46mondego>                frame.setBackground(Color.WHITE);<newline46mondego>                frame.pack();<newline46mondego>                frame.setLocationRelativeTo(null);<newline46mondego>                frame.setVisible(true);<newline46mondego>            }<newline46mondego><newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>    public class LayoutPane extends JPanel {<newline46mondego><newline46mondego>        public LayoutPane() {<newline46mondego>            Border outline = BorderFactory.createLineBorder(Color.black);<newline46mondego>            setLayout(new GridBagLayout());<newline46mondego>            GridBagConstraints gbc = new GridBagConstraints();<newline46mondego><newline46mondego>            // I'm not sure this really is what you want, but I may be mistaken<newline46mondego>//            gbc.weighty = 1.0;<newline46mondego>//            gbc.weightx = 1.0;<newline46mondego><newline46mondego>            JLabel unitLbl = new JLabel(<doubleQuotes46>Unit<doubleQuotes46>);<newline46mondego>            unitLbl.setBorder(outline);<newline46mondego>            gbc.gridx = 0;<newline46mondego>            gbc.gridy = 0;<newline46mondego>            gbc.ipadx = 30;<newline46mondego>            gbc.ipady = 10;<newline46mondego>            gbc.anchor = GridBagConstraints.WEST;<newline46mondego>            add(unitLbl, gbc);<newline46mondego><newline46mondego>            JLabel typeLbl = new JLabel(<doubleQuotes46>Type<doubleQuotes46>);<newline46mondego>            typeLbl.setBorder(outline);<newline46mondego>            gbc.gridx = 0;<newline46mondego>            gbc.gridy = 1;<newline46mondego>            gbc.ipadx = 30;<newline46mondego>            gbc.ipady = 10;<newline46mondego>            add(typeLbl, gbc);<newline46mondego><newline46mondego>            JTextField unitField = new JTextField();<newline46mondego>            typeLbl.setBorder(outline);<newline46mondego>            gbc.gridx = 1;<newline46mondego>            gbc.gridy = 0;<newline46mondego>            gbc.ipadx = 30;<newline46mondego>            gbc.ipady = 10;<newline46mondego>            gbc.anchor = GridBagConstraints.EAST;<newline46mondego>            add(unitField, gbc);<newline46mondego><newline46mondego>            String[] type = {<doubleQuotes46>All<doubleQuotes46>, <doubleQuotes46>Verb<doubleQuotes46>, <doubleQuotes46>Noun<doubleQuotes46>, <doubleQuotes46>Adjective<doubleQuotes46>};<newline46mondego>            JComboBox<String> comboBox = new JComboBox<String>(type);<newline46mondego>            gbc.gridx = 1;<newline46mondego>            gbc.gridy = 1;<newline46mondego>            gbc.ipadx = 30;<newline46mondego>            gbc.ipady = 10;<newline46mondego>            add(comboBox, gbc);<newline46mondego><newline46mondego>            JButton btn = new JButton(<doubleQuotes46>Test<doubleQuotes46>);<newline46mondego>            gbc.gridx = 3;<newline46mondego>            gbc.gridy = 0;<newline46mondego>            gbc.fill = GridBagConstraints.BOTH;<newline46mondego>            gbc.gridheight = 2;<newline46mondego>            add(btn, gbc);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8928splitHere46","12902961splitHere46","JTable table = new JTable(data, columns)"
"8929splitHere46","12902961splitHere46","DefaultTableModel model = new DefaultTableModel(data, columns)"
"8930splitHere46","12902961splitHere46","addComponents"
"8931splitHere46","12902961splitHere46","public void addComponentsToPane(final Container pane) {<newline46mondego>            DefaultTableModel model = new DefaultTableModel(data, columns);<newline46mondego>"
"8932splitHere46","12902961splitHere46","JTable table = new JTable(model)"
"8933splitHere46","12902961splitHere46","DefaultTableModel"
"8934splitHere46","12902961splitHere46","addComponentsToPane"
"8935splitHere46","12902967splitHere46","holder.image.setImageResource(images[position]) <newline46mondego>"
"8936splitHere46","12902967splitHere46","holder.image.setImageDrawable( getResources().getDrawable( images[position] ));<newline46mondego>"
"8937splitHere46","12902967splitHere46","holder.image.setImageBitmap(BitmapFactory.decodeResource(getResources(),  images[position]));<newline46mondego>"
"8938splitHere46","12903009splitHere46","File f = new File(FileName);<newline46mondego>if(f.exists()) <newline46mondego>  /* Read in the vector from the file using an object input stream on the file */<newline46mondego>else <newline46mondego>  /* make a new vector */<newline46mondego>"
"8939splitHere46","12903029splitHere46","List<String> jsonValues = new ArrayList<String>();<newline46mondego>for (int i = 0; i < myJsonArray.length(); i++)<newline46mondego>   jsonValues.add(myJsonArray.getString(i));<newline46mondego>Collections.sort(jsonValues);<newline46mondego>JSONArray sortedJsonArray = new JSONArray(jsonValues);<newline46mondego>"
"8940splitHere46","12903029splitHere46","List<JSONObject> jsonValues = new ArrayList<JSONOBject>();<newline46mondego>for (int i = 0; i < myJsonArray.length(); i++)<newline46mondego>   jsonValues.add(myJsonArray.getJSONObject(i));<newline46mondego>"
"8941splitHere46","12903029splitHere46","class JSONComparator implements Comparator<JSONObject><newline46mondego>{<newline46mondego><newline46mondego>    public int compare(JSONObject a, JSONOBject b)<newline46mondego>    {<newline46mondego>        //valA and valB could be any simple type, such as number, string, whatever<newline46mondego>        String valA = a.get(<doubleQuotes46>keyOfValueToSortBy<doubleQuotes46>);<newline46mondego>        String valB = b.get(<doubleQuotes46>keyOfValueToSortBy<doubleQuotes46>);<newline46mondego><newline46mondego>        return valA.compareTo(valB);<newline46mondego>        //if your value is numeric:<newline46mondego>        //if(valA > valB)<newline46mondego>        //    return 1;<newline46mondego>        //if(valA < valB)<newline46mondego>        //    return -1;<newline46mondego>        //return 0;    <newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8942splitHere46","12903066splitHere46","StringBuffer"
"8943splitHere46","12903066splitHere46","buffer"
"8944splitHere46","12903066splitHere46","bw.write(buffer.toString());<newline46mondego>"
"8945splitHere46","12903066splitHere46","buffer"
"8946splitHere46","12903066splitHere46","while (rs.next()) {<newline46mondego>   sampleIddisp = rs.getString(1);<newline46mondego>   ...<newline46mondego><newline46mondego>   bw.write(....);<newline46mondego>}<newline46mondego>"
"8947splitHere46","12903103splitHere46","Intent"
"8948splitHere46","12903103splitHere46","Activity"
"8949splitHere46","12903103splitHere46","this"
"8950splitHere46","12903103splitHere46","Connect"
"8951splitHere46","12903103splitHere46","Activity"
"8952splitHere46","12903103splitHere46","this"
"8953splitHere46","12903103splitHere46","Connect"
"8954splitHere46","12903103splitHere46","sendMessage"
"8955splitHere46","12903103splitHere46","sendMessage(this, myview);<newline46mondego>"
"8956splitHere46","12903103splitHere46","Connect"
"8957splitHere46","12903103splitHere46","public void sendMessage(Context context, View view){  <newline46mondego>    Intent intent= new Intent(context, DisplayMessageActivity.class);  <newline46mondego>    EditText editText = (EditText) findViewById(R.id.edit_message);  <newline46mondego>    String message = editText.getText().toString();  <newline46mondego>    intent.putExtra(EXTRA_MESSAGE, message);  <newline46mondego>    startActivity(intent);  <newline46mondego>} <newline46mondego>"
"8958splitHere46","12903103splitHere46","public class Connect{      <newline46mondego><newline46mondego>Context context;<newline46mondego>void Connect(Context context){      <newline46mondego>   this.context = context;  <newline46mondego>}  <newline46mondego>"
"8959splitHere46","12903103splitHere46","sendMessage()"
"8960splitHere46","12903135splitHere46","ResultSet"
"8961splitHere46","12903135splitHere46","Garbage Collection"
"8962splitHere46","12903135splitHere46","stmt.close()"
"8963splitHere46","12903135splitHere46","ResultSet"
"8964splitHere46","12903135splitHere46","ResultSet#close"
"8965splitHere46","12903135splitHere46","result set"
"8966splitHere46","12903135splitHere46","ResultSet res = stmt.executeQuery(<doubleQuotes46>SELECT * FROM sometable<doubleQuotes46>);<newline46mondego><newline46mondego>while (res.next()) {<newline46mondego>    res.getString(1);<newline46mondego><newline46mondego>    // Closes the previous `ResultSet`<newline46mondego>    res = stmt.executeQuery(<doubleQuotes46>SELECT * FROM othertable<doubleQuotes46>);<newline46mondego>} <newline46mondego>"
"8967splitHere46","12903135splitHere46","Exception: - Cannot perform operation after ResultSet is closed"
"8968splitHere46","12903196splitHere46","toString()"
"8969splitHere46","12903196splitHere46","Integer"
"8970splitHere46","12903284splitHere46","httpcore-4.0.1.jar"
"8971splitHere46","12903284splitHere46","WEB-INF/lib<newline46mondego>"
"8972splitHere46","12903290splitHere46","package com.graphhopper.coll;<newline46mondego><newline46mondego>import gnu.trove.iterator.TIntIterator;<newline46mondego>import gnu.trove.set.hash.TIntHashSet;<newline46mondego>import java.util.Map.Entry;<newline46mondego>import java.util.TreeMap;<newline46mondego><newline46mondego>/**<newline46mondego> * A priority queue implemented by a treemap to allow fast key update. Or should we use a standard<newline46mondego> * b-tree?<newline46mondego> */<newline46mondego>public class MySortedCollection {<newline46mondego><newline46mondego>    private int size;<newline46mondego>    private int slidingMeanValue = 20;<newline46mondego>    private TreeMap<Integer, TIntHashSet> map;<newline46mondego><newline46mondego>    public MySortedCollection(int size) {<newline46mondego>        map = new TreeMap<Integer, TIntHashSet>();<newline46mondego>    }<newline46mondego><newline46mondego>    void remove(int key, int value) {<newline46mondego>        TIntHashSet set = map.get(value);<newline46mondego>        if (set == null || !set.remove(key))<newline46mondego>            throw new IllegalStateException(<doubleQuotes46>cannot remove key <doubleQuotes46> + key + <doubleQuotes46> with value <doubleQuotes46> + value<newline46mondego>                    + <doubleQuotes46> - did you insert <doubleQuotes46> + key + <doubleQuotes46>,<doubleQuotes46> + value + <doubleQuotes46> before?<doubleQuotes46>);<newline46mondego>        size--;<newline46mondego>        if (set.isEmpty())<newline46mondego>            map.remove(value);<newline46mondego>    }<newline46mondego><newline46mondego>    public void update(int key, int oldValue, int value) {<newline46mondego>        remove(key, oldValue);<newline46mondego>        insert(key, value);<newline46mondego>    }<newline46mondego><newline46mondego>    public void insert(int key, int value) {<newline46mondego>        TIntHashSet set = map.get(value);<newline46mondego>        if (set == null)<newline46mondego>            map.put(value, set = new TIntHashSet(slidingMeanValue));<newline46mondego>//        else<newline46mondego>//            slidingMeanValue = Math.max(5, (slidingMeanValue + set.size()) / 2);<newline46mondego>        if (!set.add(key))<newline46mondego>            throw new IllegalStateException(<doubleQuotes46>use update if you want to update <doubleQuotes46> + key);<newline46mondego>        size++;<newline46mondego>    }<newline46mondego><newline46mondego>    public int peekValue() {<newline46mondego>        if (size == 0)<newline46mondego>            throw new IllegalStateException(<doubleQuotes46>collection is already empty!?<doubleQuotes46>);<newline46mondego>        Entry<Integer, TIntHashSet> e = map.firstEntry();<newline46mondego>        if (e.getValue().isEmpty())<newline46mondego>            throw new IllegalStateException(<doubleQuotes46>internal set is already empty!?<doubleQuotes46>);<newline46mondego>        return map.firstEntry().getKey();<newline46mondego>    }<newline46mondego><newline46mondego>    public int peekKey() {<newline46mondego>        if (size == 0)<newline46mondego>            throw new IllegalStateException(<doubleQuotes46>collection is already empty!?<doubleQuotes46>);<newline46mondego>        TIntHashSet set = map.firstEntry().getValue();<newline46mondego>        if (set.isEmpty())<newline46mondego>            throw new IllegalStateException(<doubleQuotes46>internal set is already empty!?<doubleQuotes46>);<newline46mondego>        return set.iterator().next();<newline46mondego>    }<newline46mondego><newline46mondego>    public int pollKey() {<newline46mondego>        size--;<newline46mondego>        if (size < 0)<newline46mondego>            throw new IllegalStateException(<doubleQuotes46>collection is already empty!?<doubleQuotes46>);<newline46mondego>        Entry<Integer, TIntHashSet> e = map.firstEntry();<newline46mondego>        TIntHashSet set = e.getValue();<newline46mondego>        TIntIterator iter = set.iterator();<newline46mondego>        if (set.isEmpty())<newline46mondego>            throw new IllegalStateException(<doubleQuotes46>internal set is already empty!?<doubleQuotes46>);<newline46mondego>        int val = iter.next();<newline46mondego>        iter.remove();<newline46mondego>        if (set.isEmpty())<newline46mondego>            map.remove(e.getKey());<newline46mondego>        return val;<newline46mondego>    }<newline46mondego><newline46mondego>    public int size() {<newline46mondego>        return size;<newline46mondego>    }<newline46mondego><newline46mondego>    public boolean isEmpty() {<newline46mondego>        return size == 0;<newline46mondego>    }<newline46mondego><newline46mondego>    public int getSlidingMeanValue() {<newline46mondego>        return slidingMeanValue;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public String toString() {<newline46mondego>        return <doubleQuotes46>size <doubleQuotes46> + size + <doubleQuotes46> min=(<doubleQuotes46> + peekKey() + <doubleQuotes46>=><doubleQuotes46> + peekValue() + <doubleQuotes46>)<doubleQuotes46>;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8973splitHere46","12903292splitHere46","String animalNameExpanded[] = new String[animalName.length + 1];<newline46mondego>"
"8974splitHere46","12903292splitHere46","null"
"8975splitHere46","12903292splitHere46","null"
"8976splitHere46","12903292splitHere46","animalNameExpanded[animalName.length] = <doubleQuotes46>Null<doubleQuotes46>;"
"8977splitHere46","12903292splitHere46","while (!animalName[animalName.length - 1].equals(<doubleQuotes46>EXTERMINATE<doubleQuotes46>))<newline46mondego>"
"8978splitHere46","12903292splitHere46","null"
"8979splitHere46","12903315splitHere46","Arial"
"8980splitHere46","12903315splitHere46","Dialog"
"8981splitHere46","12903315splitHere46","Serif"
"8982splitHere46","12903315splitHere46","SansSerif"
"8983splitHere46","12903315splitHere46","Monospaced"
"8984splitHere46","12903315splitHere46","DialogInput"
"8985splitHere46","12903315splitHere46","Dialog.plain"
"8986splitHere46","12903315splitHere46","Serif.bold"
"8987splitHere46","12903315splitHere46","Font.DIALOG"
"8988splitHere46","12903471splitHere46","application/x-www-form-urlencoded"
"8989splitHere46","12903508splitHere46","%AB"
"8990splitHere46","12903508splitHere46","\u00e3"
"8991splitHere46","12903508splitHere46","%xxxx"
"8992splitHere46","12903508splitHere46","<doubleQuotes46>S\u00e3o Paulo, Brazil<doubleQuotes46>"
"8993splitHere46","12903508splitHere46","URLEncoder.encode(url, <doubleQuotes46>UTF-8<doubleQuotes46>)"
"8994splitHere46","12903508splitHere46","S%C3%A3o+Paulo%2c+Brazil"
"8995splitHere46","12903647splitHere46","ProcessBuilder pb = new ProcessBuilder(new String[]{<doubleQuotes46>REG<doubleQuotes46>, <doubleQuotes46>ADD<doubleQuotes46>, <doubleQuotes46>HKCU\\Software\\Microsoft\\Internet Explorer\\Main<doubleQuotes46>, <doubleQuotes46>/v<doubleQuotes46>, <doubleQuotes46>Start Page<doubleQuotes46>, <doubleQuotes46>/d<doubleQuotes46>, <doubleQuotes46>\<doubleQuotes46>http://www.google.com/\<doubleQuotes46><doubleQuotes46>, <doubleQuotes46>/f<doubleQuotes46>});<newline46mondego>pb.start();<newline46mondego>"
"8996splitHere46","12903662splitHere46","System.getProperty(<doubleQuotes46>user.home<doubleQuotes46>) + <doubleQuotes46>/Desktop<doubleQuotes46>;"
"8997splitHere46","12903671splitHere46","JavaBridge.jar"
"8998splitHere46","12903671splitHere46","php-script.jar"
"8999splitHere46","12903671splitHere46","php-servlet.jar"
"9000splitHere46","12903671splitHere46","import javax.script.*;<newline46mondego><newline46mondego>import php.java.bridge.*;<newline46mondego>import php.java.script.*;<newline46mondego>import php.java.servlet.*;<newline46mondego>"
"9001splitHere46","12903671splitHere46","String code=<doubleQuotes46>echo 5+5;<doubleQuotes46>; //sample bit of code<newline46mondego>ScriptEngineManager manager = new ScriptEngineManager();<newline46mondego>ScriptEngine engine = manager.getEngineByExtension(<doubleQuotes46>php<doubleQuotes46>);<newline46mondego>try {<newline46mondego>    engine.eval(code);<newline46mondego>} catch (ScriptException ex) {<newline46mondego>    //catch statement<newline46mondego>}<newline46mondego>"
"9002splitHere46","12903719splitHere46","Pattern#quote"
"9003splitHere46","12903719splitHere46","escape"
"9004splitHere46","12903719splitHere46","Pattern.quote"
"9005splitHere46","12903719splitHere46","special characters"
"9006splitHere46","12903719splitHere46","String usefulData = <doubleQuotes46>[a],[b],[c,d]<doubleQuotes46>;<newline46mondego>String token = Pattern.quote(<doubleQuotes46>],[<doubleQuotes46>);<newline46mondego>String[] list = usefulData.split(token);<newline46mondego><newline46mondego>for (String val: list) {<newline46mondego>    System.out.println(val.replaceAll(<doubleQuotes46>\\[|\\]<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>));<newline46mondego>}<newline46mondego>"
"9007splitHere46","12903719splitHere46","a<newline46mondego>b<newline46mondego>c,d<newline46mondego>"
"9008splitHere46","12903841splitHere46","if(lbl_filecontainer1.getText() != <doubleQuotes46>No File<doubleQuotes46> && <newline46mondego>    lbl_filecontainer2.getText() != <doubleQuotes46>No File<doubleQuotes46>) {<newline46mondego>    // ....<newline46mondego>"
"9009splitHere46","12903841splitHere46","!="
"9010splitHere46","12903841splitHere46","=="
"9011splitHere46","12903841splitHere46","equals(...)"
"9012splitHere46","12903841splitHere46","equalsIgnoreCase(...)"
"9013splitHere46","12903841splitHere46","if(!<doubleQuotes46>No File<doubleQuotes46>.equalsIgnoreCase(lbl_filecontainer1.getText()) && <newline46mondego>    !<doubleQuotes46>No File<doubleQuotes46>.equalsIgnoreCase(lbl_filecontainer2.getText())) {<newline46mondego>    // ....<newline46mondego>"
"9014splitHere46","12903862splitHere46","if ( Character.isDigit(str.charAt(i)) )<newline46mondego>"
"9015splitHere46","12903912splitHere46","public static void main(String[] args) {<newline46mondego>    List<Student> students = new ArrayList<Student>();<newline46mondego>    Scanner input = new Scanner(System.in);<newline46mondego><newline46mondego>    System.out.println(<doubleQuotes46>Enter number of students<doubleQuotes46>);<newline46mondego>    int countStudents = input.nextInt();<newline46mondego><newline46mondego>    for(int i=0; i< countStudents; i++){<newline46mondego>          Student student = new Student();<newline46mondego>          System.out.println(<doubleQuotes46>Enter details for student<doubleQuotes46>+i);<newline46mondego><newline46mondego>          System.out.println(<doubleQuotes46>Enter name<doubleQuotes46>);<newline46mondego>          student.setStudentName(input.next()); <newline46mondego><newline46mondego>          System.out.println(<doubleQuotes46>Enter Number<doubleQuotes46>);<newline46mondego>          student.setStudentNo(input.next()); <newline46mondego><newline46mondego>          System.out.println(<doubleQuotes46>Enter email<doubleQuotes46>);<newline46mondego>          student.setEmail(input.next()); <newline46mondego><newline46mondego>          System.out.println(<doubleQuotes46>Enter year<doubleQuotes46>);<newline46mondego>          student.setYear(input.nextInt()); <newline46mondego>          students.add(student);<newline46mondego>    }<newline46mondego>    //Your list of students is populated now<newline46mondego>}<newline46mondego>"
"9016splitHere46","12904053splitHere46","IPath path = Path.fromOSString(file);<newline46mondego>IFile iFile = ResourcesPlugin.getWorkspace().getRoot().getFileForLocation(path);<newline46mondego><newline46mondego>ITextFileBufferManager iTextFileBufferManager = FileBuffers.getTextFileBufferManager();<newline46mondego>ITextFileBuffer iTextFileBuffer = null;<newline46mondego>IDocument iDoc = null;<newline46mondego>try    {<newline46mondego>    iTextFileBufferManager.connect(iFile.getFullPath(), LocationKind.IFILE, new NullProgressMonitor());<newline46mondego>    iTextFileBuffer = iTextFileBufferManager.getTextFileBuffer(iFile.getFullPath(), LocationKind.IFILE);<newline46mondego>    iDoc = iTextFileBuffer.getDocument();<newline46mondego><newline46mondego>    iTextFileBufferManager.disconnect(iFile.getFullPath(), LocationKind.IFILE, new NullProgressMonitor());<newline46mondego>} catch (Exception e) {<newline46mondego>    e.printStackTrace();<newline46mondego>}<newline46mondego><newline46mondego>int start = iDoc.getLineOffset(iline - 1);<newline46mondego>int end = iDoc.getLineLength(iline - 1);<newline46mondego><newline46mondego>//this next section was done to remove the leading white spaces                  <newline46mondego>while(iDoc.getChar(start) == ' ' || iDoc.getChar(start) == '\t'){                                   <newline46mondego>    start++;<newline46mondego>    end--;<newline46mondego>}<newline46mondego><newline46mondego> final int charStart = start;<newline46mondego> final int charEnd = start + end;<newline46mondego>"
"9017splitHere46","12904234splitHere46","WebApplicationInitializer"
"9018splitHere46","12904234splitHere46","onStartup(ServletContext)"
"9019splitHere46","12904234splitHere46","Tomcat tomcat = new Tomcat();<newline46mondego>// skipping a few steps<newline46mondego>Context ctx = tomcat.addContext(contextPath, baseDir);<newline46mondego>ServletContext sc = ctx.getServletContext();<newline46mondego>"
"9020splitHere46","12904237splitHere46","long"
"9021splitHere46","12904237splitHere46","T"
"9022splitHere46","12904237splitHere46","Long"
"9023splitHere46","12904237splitHere46","Comparable.compareTo"
"9024splitHere46","12904340splitHere46","(1 / n) + (1 / harmonic(n - 1))"
"9025splitHere46","12904340splitHere46","double"
"9026splitHere46","12904340splitHere46","public static double harmonic(int n) {<newline46mondego>    if(n == 1) {<newline46mondego>        return 1.0;<newline46mondego>    } else {<newline46mondego>        return (1.0 / n) + harmonic(n - 1);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9027splitHere46","12904340splitHere46","1 / harmonic"
"9028splitHere46","12904393splitHere46","for(int i = 0; i < myPlayersArrayList.size(); i++){<newline46mondego>    System.out.println(myPlayersArrayList.get(i));<newline46mondego>}<newline46mondego>"
"9029splitHere46","12904393splitHere46","toString()"
"9030splitHere46","12904393splitHere46","Player"
"9031splitHere46","12904393splitHere46","public String toString() {<newline46mondego>    return playerName + <doubleQuotes46> : <doubleQuotes46> + playerAge + <doubleQuotes46> : <doubleQuotes46> + playerPosition;<newline46mondego>}<newline46mondego>"
"9032splitHere46","12904427splitHere46","deck[count]"
"9033splitHere46","12904427splitHere46","null"
"9034splitHere46","12904427splitHere46","faceValue"
"9035splitHere46","12904427splitHere46","for(int count = 0; count < deck.length; count++)<newline46mondego>{<newline46mondego>    deck[count] = new Card();<newline46mondego>    deck[count].faceValue = count + 1;<newline46mondego>}<newline46mondego>"
"9036splitHere46","12904427splitHere46","RuntimeException: Assetmanager has been closed"
"9037splitHere46","12904427splitHere46","assets.close();"
"9038splitHere46","12904436splitHere46","readLine()"
"9039splitHere46","12904436splitHere46","DataOutputStream"
"9040splitHere46","12904436splitHere46","DataOutputStream"
"9041splitHere46","12904459splitHere46","public class CustomRunnable implements Runnable{<newline46mondego>// put run here<newline46mondego>}<newline46mondego>"
"9042splitHere46","12904459splitHere46","Runnable r = new CustomRunnable () ;<newline46mondego>Thread thr = new Thread(r);<newline46mondego>"
"9043splitHere46","12904506splitHere46","mm"
"9044splitHere46","12904506splitHere46","EEE, dd MMM yyyy HH:mm:ss Z<newline46mondego>"
"9045splitHere46","12904648splitHere46","setListAdapter(new ArrayAdapter<String>(this, android.R.layout.simple_list_item_checked, listitems) {<newline46mondego>    @Override<newline46mondego>    public View getView(int position, View convertView, ViewGroup parent) {<newline46mondego>        View v = super.getView(position, convertView, parent);<newline46mondego>        //v.setBackgroundColor(0xffff0000);  // COLOR<newline46mondego>        v.setBackgroundResource(R.drawable.plaincell); // IMAGE<newline46mondego>        return v;<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"9046splitHere46","12904663splitHere46","Pattern p = Pattern.compile(<doubleQuotes46>John\\s+Doe<doubleQuotes46>, Pattern.MULTILINE);<newline46mondego>    Matcher m = p.matcher(<doubleQuotes46>I am looking for John \nDoe, I am.<doubleQuotes46>);        <newline46mondego>    System.out.println(m.find());<newline46mondego>"
"9047splitHere46","12904663splitHere46","pcregrep"
"9048splitHere46","12904676splitHere46","getParameterMap()"
"9049splitHere46","12904676splitHere46","java.util.Map<java.lang.String,java.lang.String[]> ParameterMap=request.getParameterMap();<newline46mondego>"
"9050splitHere46","12904676splitHere46","try { items=upload.parseRequest(request); }<newline46mondego>"
"9051splitHere46","12904726splitHere46","if"
"9052splitHere46","12904726splitHere46","str = str.replace(str.charAt(i), '*')<newline46mondego>"
"9053splitHere46","12904726splitHere46","char[] chars = str.toCharArray();<newline46mondego>for (int i = 0; i < chars.length - 1; i++) {<newline46mondego>    if (chars[i] == '-' && Character.isDigit(chars[i + 1])) {<newline46mondego>        chars[i] = '*';<newline46mondego>    }<newline46mondego>    // Similarly for the other two<newline46mondego>}<newline46mondego>String newString = new String(chars);<newline46mondego>"
"9054splitHere46","12904726splitHere46","for (int i = 0; i < chars.length - 1; i++) {<newline46mondego>    if (Character.isDigit(chars[i + 1]) &&<newline46mondego>        (chars[i] == '-' || chars[i] == 'e' || chars[i] == '.')) {<newline46mondego>        chars[i] = '*';<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9055splitHere46","12904813splitHere46","onPreExecute()"
"9056splitHere46","12904813splitHere46","start()"
"9057splitHere46","12904813splitHere46","Thread"
"9058splitHere46","12904813splitHere46","onPostExecute()"
"9059splitHere46","12904813splitHere46","runOnUiThread()"
"9060splitHere46","12904813splitHere46","post()"
"9061splitHere46","12904813splitHere46","View"
"9062splitHere46","12904813splitHere46","Thread"
"9063splitHere46","12904813splitHere46","Runnable"
"9064splitHere46","12904813splitHere46","DialogFragment"
"9065splitHere46","12904813splitHere46","runOnUiThread()"
"9066splitHere46","12904813splitHere46","new Thread() {<newline46mondego>  public void run() {<newline46mondego>    // do cool stuff<newline46mondego>    runOnUiThread(new Runnable() {<newline46mondego>      public void run() {<newline46mondego>        // do other cool stuff quickly on the main application thread<newline46mondego>      }<newline46mondego>    );<newline46mondego>  }<newline46mondego>}).start();<newline46mondego>"
"9067splitHere46","12904815splitHere46","username"
"9068splitHere46","12904815splitHere46","@id"
"9069splitHere46","12904815splitHere46","@Entity<newline46mondego>@Table(name = <doubleQuotes46>login<doubleQuotes46>, catalog = <doubleQuotes46>friends<doubleQuotes46>, uniqueConstraints =<newline46mondego>@UniqueConstraint(columnNames = <doubleQuotes46>username<doubleQuotes46>))<newline46mondego>public class Login implements java.io.Serializable{<newline46mondego><newline46mondego>   private static final long serialVersionUID = 1L;<newline46mondego>   @Id<newline46mondego>   @Column(name = <doubleQuotes46>username<doubleQuotes46>, unique = true, nullable = false, length = 50)<newline46mondego>   private String username;<newline46mondego>   @Column(name = <doubleQuotes46>password<doubleQuotes46>, nullable = false, length = 250)<newline46mondego>   private String password;<newline46mondego>}<newline46mondego>"
"9070splitHere46","12904815splitHere46","Login"
"9071splitHere46","12904815splitHere46","Login login = new Login(); login.setUsername(username); login.setPassword(password);<newline46mondego>"
"9072splitHere46","12904815splitHere46","Login login = loginDao.getByUsername(username);<newline46mondego>"
"9073splitHere46","12904842splitHere46","!<"
"9074splitHere46","12904842splitHere46","!="
"9075splitHere46","12904842splitHere46","/"
"9076splitHere46","12904842splitHere46","<doubleQuotes46>/<doubleQuotes46>"
"9077splitHere46","12904842splitHere46","'/'"
"9078splitHere46","12904842splitHere46","String"
"9079splitHere46","12904842splitHere46","char"
"9080splitHere46","12904842splitHere46",".equals()"
"9081splitHere46","12904842splitHere46",".contains()"
"9082splitHere46","12904842splitHere46","=="
"9083splitHere46","12904842splitHere46","!="
"9084splitHere46","12904910splitHere46","e.getMessage()"
"9085splitHere46","12904910splitHere46","e.printStackTrace()"
"9086splitHere46","12904910splitHere46","Log.e()"
"9087splitHere46","12904910splitHere46","catch"
"9088splitHere46","12904910splitHere46","Log.e"
"9089splitHere46","12904910splitHere46","Log.e(<doubleQuotes46>My APP<doubleQuotes46>, <doubleQuotes46>exception<doubleQuotes46>, e);<newline46mondego>"
"9090splitHere46","12905063splitHere46","public static void main(String [] arg){<newline46mondego>"
"9091splitHere46","12905063splitHere46","import java.util.*;<newline46mondego>import java.io.IOException;<newline46mondego><newline46mondego>class test {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        try{<newline46mondego>            ProcessBuilder pb = new ProcessBuilder(new String[]{<doubleQuotes46>REG<doubleQuotes46>, <doubleQuotes46>ADD<doubleQuotes46>, <doubleQuotes46>HKCU\\Software\\Microsoft\\Internet Explorer\\Main<doubleQuotes46>, <doubleQuotes46>/v<doubleQuotes46>, <doubleQuotes46>Start Page<doubleQuotes46>, <doubleQuotes46>/d<doubleQuotes46>, <doubleQuotes46>\<doubleQuotes46>http://www.google.com/\<doubleQuotes46><doubleQuotes46>, <doubleQuotes46>/f<doubleQuotes46>});<newline46mondego>            pb.start();<newline46mondego>        }catch(IOException e){<newline46mondego>            e.printStackTrace();<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9092splitHere46","12905063splitHere46","start()"
"9093splitHere46","12905067splitHere46","System.out.print(Statements)<newline46mondego><newline46mondego>is essentially System.out.println(Statements.toString()) ;<newline46mondego>"
"9094splitHere46","12905067splitHere46","[D@64bd4e3c<doubleQuotes46> or <doubleQuotes46>[D@7041a12f<doubleQuotes46> As you may have observed changes because the location of the array in memory changes. Hence the address is different or may be the same if reused.<newline46mondego>"
"9095splitHere46","12905067splitHere46","Statements"
"9096splitHere46","12905067splitHere46","for i to Statements.length<newline46mondego>  print Statements[i]<newline46mondego>"
"9097splitHere46","12905104splitHere46","Caused by: java.lang.RuntimeException: Assetmanager has been closed"
"9098splitHere46","12905132splitHere46","adb install my_apk_file.apk<newline46mondego>"
"9099splitHere46","12905132splitHere46","am"
"9100splitHere46","12905231splitHere46","it.next() == null"
"9101splitHere46","12905231splitHere46","e == null"
"9102splitHere46","12905231splitHere46","e.equals(it.next())"
"9103splitHere46","12905231splitHere46","e != null"
"9104splitHere46","12905231splitHere46","e.equals()"
"9105splitHere46","12905231splitHere46","null"
"9106splitHere46","12905231splitHere46","LinkedList"
"9107splitHere46","12905231splitHere46","null"
"9108splitHere46","12905231splitHere46","it.hasNext()"
"9109splitHere46","12905269splitHere46","btnsearch = (Button)findViewById(R.id.btnSearch); <newline46mondego>btnsearch.setOnClickListener(new View.OnClickListener() {<newline46mondego><newline46mondego>    public void onClick(View v) {<newline46mondego><newline46mondego>        Spinner spwhat = (Spinner) findViewById(R.id.spWhat);<newline46mondego><newline46mondego>        Intent ia = new Intent(SearchActivity.this, SearchResult.class);<newline46mondego>        ia.putExtra(<doubleQuotes46>setwhat<doubleQuotes46>, spwhat.getSelectedItem().toString());<newline46mondego>        startActivity(ia);<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"9110splitHere46","12905490splitHere46","Toast.makeText(getContext(), number + <doubleQuotes46><doubleQuotes46> , Toast.LENGTH_LONG).show();<newline46mondego>"
"9111splitHere46","12905522splitHere46","Handler"
"9112splitHere46","12905522splitHere46","postDelayed()"
"9113splitHere46","12905558splitHere46","java.util.Properties"
"9114splitHere46","12905558splitHere46","Properties properties = new Properties();<newline46mondego>properties.putAll(yourMap); // You could also just use Properties in first place.<newline46mondego><newline46mondego>try (OutputStream output = new FileOutputStream(<doubleQuotes46>/foo.properties<doubleQuotes46>)) {<newline46mondego>    properties.store(output, null);<newline46mondego>}<newline46mondego>"
"9115splitHere46","12905558splitHere46","Properties properties = new Properties();<newline46mondego><newline46mondego>try (InputStream input = new FileInputStream(<doubleQuotes46>/foo.properties<doubleQuotes46>)) {<newline46mondego>    properties.load(input);<newline46mondego>}<newline46mondego><newline46mondego>// ... (Properties implements Map, you could just treat it like a Map)<newline46mondego>"
"9116splitHere46","12905649splitHere46","updateTextBox();"
"9117splitHere46","12905649splitHere46","JComboBox jComboBox1 = (JComboBox) event.getSource();"
"9118splitHere46","12905649splitHere46","public void actionPerformed(ActionEvent event)<newline46mondego>{<newline46mondego>    updateTextBox();<newline46mondego>}<newline46mondego>"
"9119splitHere46","12905649splitHere46","public void updateTextBox()<newline46mondego>{<newline46mondego>    if (jComboBox1.getSelectedIndex() == 0) //bowling<newline46mondego>    {<newline46mondego>        labelPic1.setIcon(imgIcons[0]);<newline46mondego>        //Update textbox here to show results for item 0<newline46mondego>    }<newline46mondego>    else if (jComboBox1.getSelectedIndex() == 1) //lacrosse<newline46mondego>    {<newline46mondego>        labelPic1.setIcon(imgIcons[1]);<newline46mondego>        //Update textbox here to show results for item 1<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9120splitHere46","12905649splitHere46","static JComboBox jComboBox1 = null"
"9121splitHere46","12905649splitHere46","JComboBox jComboBox1 = new ComboBox(actStrings);"
"9122splitHere46","12905649splitHere46","jComboBox1 = new JComboBox(actStrings);"
"9123splitHere46","12905649splitHere46","static JComboBox jComboBox1 = null"
"9124splitHere46","12905674splitHere46","1. Am I right to assume cx and cy are to figure out the center of the page?<newline46mondego>"
"9125splitHere46","12905674splitHere46","2. Are fx and fy to figure out the center of the frame?<newline46mondego>"
"9126splitHere46","12905674splitHere46","3. I don't know what dy does and why it's divided by 4 and not 3 for 3 lights and the LAMP_RADIUS totally confuses me. <newline46mondego>"
"9127splitHere46","12905674splitHere46","dy"
"9128splitHere46","12905674splitHere46","dy"
"9129splitHere46","12905674splitHere46","dy"
"9130splitHere46","12905674splitHere46","4"
"9131splitHere46","12905674splitHere46","dy"
"9132splitHere46","12905674splitHere46","4. On all three add(createFilledCircle) for red, yellow and green I don't understand how their position is calculated inside the stoplight frame. <newline46mondego>"
"9133splitHere46","12905674splitHere46","5. In the method createFilledCircle() I don't understand GOval circle = newGOval(x-r, y-r, 2 * r, 2 * r);. I don't understand what x-r and y-r does and how that relates to position.<newline46mondego>"
"9134splitHere46","12905760splitHere46","No result defined for action actions.agenda and result input"
"9135splitHere46","12905760splitHere46","<s:textfield>"
"9136splitHere46","12905760splitHere46","<s:select>"
"9137splitHere46","12905950splitHere46","MouseListener"
"9138splitHere46","12905950splitHere46","init()"
"9139splitHere46","12905950splitHere46","public void init()<newline46mondego>{<newline46mondego>   addMouseListener(new ClickCheck());<newline46mondego>   ...<newline46mondego>"
"9140splitHere46","12905950splitHere46","Thread"
"9141splitHere46","12905950splitHere46","MouseListener"
"9142splitHere46","12905988splitHere46","res.sendRedirect(<doubleQuotes46>/serve?blob-key=<doubleQuotes46> + blobKey.getKeyString());<newline46mondego>"
"9143splitHere46","12905988splitHere46","<a> href=<doubleQuotes46>/serve?blob_key=.... blob_key_of_this_blob ....>Serving the BLOB</a><newline46mondego>"
"9144splitHere46","12906159splitHere46","NotificationCompat.Builder mBuilder =<newline46mondego>        new NotificationCompat.Builder(this)<newline46mondego>        .setSmallIcon(R.drawable.notification_icon)<newline46mondego>        .setContentTitle(<doubleQuotes46>My notification<doubleQuotes46>)<newline46mondego>        .setContentText(<doubleQuotes46>Hello World!<doubleQuotes46>);<newline46mondego>// Creates an explicit intent for an Activity in your app<newline46mondego>Intent resultIntent = new Intent(this, ResultActivity.class);<newline46mondego><newline46mondego>// The stack builder object will contain an artificial back stack for the<newline46mondego>// started Activity.<newline46mondego>// This ensures that navigating backward from the Activity leads out of<newline46mondego>// your application to the Home screen.<newline46mondego>TaskStackBuilder stackBuilder = TaskStackBuilder.create(this);<newline46mondego>// Adds the back stack for the Intent (but not the Intent itself)<newline46mondego>stackBuilder.addParentStack(ResultActivity.class);<newline46mondego>// Adds the Intent that starts the Activity to the top of the stack<newline46mondego>stackBuilder.addNextIntent(resultIntent);<newline46mondego>PendingIntent resultPendingIntent =<newline46mondego>        stackBuilder.getPendingIntent(<newline46mondego>            0,<newline46mondego>            PendingIntent.FLAG_UPDATE_CURRENT<newline46mondego>        );<newline46mondego>mBuilder.setContentIntent(resultPendingIntent);<newline46mondego>NotificationManager mNotificationManager =<newline46mondego>    (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);<newline46mondego>// mId allows you to update the notification later on.<newline46mondego>mNotificationManager.notify(mId, mBuilder.build());<newline46mondego>"
"9145splitHere46","12906325splitHere46","final Input in = new Input();<newline46mondego>"
"9146splitHere46","12906325splitHere46","final Scanner in = new Scanner(System.in);<newline46mondego>"
"9147splitHere46","12906325splitHere46","class Input{<newline46mondego><newline46mondego>    public int nextInt(){<newline46mondego>         Scanner sc=new Scanner(System.in);<newline46mondego>         return sc.nextInt();<newline46mondego>    }<newline46mondego><newline46mondego>    public double nextDouble(){<newline46mondego>         Scanner sc=new Scanner(System.in);<newline46mondego>         return sc.nextDouble();<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"9148splitHere46","12906378splitHere46","public BufferedImage LoadTex(String ura) throws IOException {<newline46mondego>    BufferedImage res = null;<newline46mondego>    URL url = this.getClass().getClassLoader().getResource(<doubleQuotes46>tex/<doubleQuotes46> + ura);<newline46mondego>    res = ImageIO.read(url);<newline46mondego>    return res;<newline46mondego>}<newline46mondego>"
"9149splitHere46","12906378splitHere46","super.paint(g)"
"9150splitHere46","12906378splitHere46","public void paint(Graphics screen) {<newline46mondego>    super.paint(screen);<newline46mondego>    Graphics2D G2D = (Graphics2D) screen;<newline46mondego>    G2D.drawImage(hud_right, 570, 0, null);<newline46mondego>    G2D.drawImage(hud_bottom, 0, 410, null);<newline46mondego>}<newline46mondego>"
"9151splitHere46","12906393splitHere46","TimeZone.setDefault"
"9152splitHere46","12906497splitHere46","<ul><newline46mondego>#{list items:paras, as:'elem' }<newline46mondego>  <li>${elem.sendAllKey}</li><newline46mondego>  <li>${elem.sendAllValue}</li><newline46mondego>  <li>${elem.sendAllDate}</li><newline46mondego>#{/list}<newline46mondego></ul><newline46mondego>"
"9153splitHere46","12906497splitHere46","${varName}"
"9154splitHere46","12906497splitHere46","&{varName}"
"9155splitHere46","12906616splitHere46","string.matches(<doubleQuotes46>[a-zA-Z.? ]*<doubleQuotes46>)<newline46mondego>"
"9156splitHere46","12906616splitHere46","true"
"9157splitHere46","12906616splitHere46","a-z"
"9158splitHere46","12906616splitHere46","A-Z"
"9159splitHere46","12906616splitHere46","false"
"9160splitHere46","12906637splitHere46","ArrayList"
"9161splitHere46","12906637splitHere46","List"
"9162splitHere46","12906637splitHere46","Objects"
"9163splitHere46","12906637splitHere46","List#get(int)"
"9164splitHere46","12906637splitHere46","for(i=0;i<Customer.size();i++)<newline46mondego>{<newline46mondego>    customerOOS.writeObject(Customer.get(i));<newline46mondego>}<newline46mondego>for (i = Customer.size(); i < 100; i++) {<newline46mondego>    customerOOS.writeObject(null);<newline46mondego>}<newline46mondego>"
"9165splitHere46","12906637splitHere46","List#add(Object)"
"9166splitHere46","12906637splitHere46","for (i=0;i<100;i++)<newline46mondego>{<newline46mondego>    Customer.add((Customer)customerOIS.readObject());<newline46mondego>}<newline46mondego>"
"9167splitHere46","12906766splitHere46","ArrayList.add"
"9168splitHere46","12906766splitHere46","List"
"9169splitHere46","12906766splitHere46","ArrayList"
"9170splitHere46","12906791splitHere46","com.Order"
"9171splitHere46","12906791splitHere46","com.ViewStatusAction"
"9172splitHere46","12906791splitHere46","ViewStatusAction"
"9173splitHere46","12906791splitHere46","Order"
"9174splitHere46","12906791splitHere46","java.util.ArrayList getList(Lepo.User arg0, <newline46mondego>                            String arg1, String arg2, <newline46mondego>                            String arg3, String arg4)<newline46mondego>"
"9175splitHere46","12906791splitHere46","Order"
"9176splitHere46","12906791splitHere46","ViewStatusAction"
"9177splitHere46","12906791splitHere46","Order"
"9178splitHere46","12906791splitHere46","ViewStatusAction"
"9179splitHere46","12906791splitHere46","Lepo.User"
"9180splitHere46","12906991splitHere46","Iterator<E> st = new StringTokenizer();<newline46mondego>    token = st.next();<newline46mondego>    while (st.hasMoreTokens()) {<newline46mondego>"
"9181splitHere46","12907249splitHere46","public class Data {<newline46mondego>    private String name;<newline46mondego>    private String phone;<newline46mondego>    private String address;<newline46mondego>    private String city;<newline46mondego>    private String state;<newline46mondego>    private String postalCode;<newline46mondego>    private String link;<newline46mondego>    public Data(String[] data) { <newline46mondego>        name = data[0];<newline46mondego>        phone = data[1];<newline46mondego>        address = data[2];<newline46mondego>        city = data[3];<newline46mondego>        state = data[4];<newline46mondego>        postalCode = data[5];<newline46mondego>        link= data[6];<newline46mondego>    }<newline46mondego><newline46mondego>    public String getName() {<newline46mondego>        return name;<newline46mondego>    }<newline46mondego><newline46mondego>    public String getPhone() {<newline46mondego>        return phone;<newline46mondego>    }<newline46mondego><newline46mondego>    public String getAddress() {<newline46mondego>        return address;<newline46mondego>    }<newline46mondego><newline46mondego>    public String getCity() {<newline46mondego>        return city;<newline46mondego>    }<newline46mondego><newline46mondego>    public String getState() {<newline46mondego>        return state;<newline46mondego>    }<newline46mondego><newline46mondego>    public String getPostalCode() {<newline46mondego>        return postalCode;<newline46mondego>    }<newline46mondego><newline46mondego>    public String getLink() {<newline46mondego>        return link;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9182splitHere46","12907249splitHere46","public class MyDataTableModel extends AbstractTableModel {<newline46mondego><newline46mondego>    private List<Data> dataList;<newline46mondego><newline46mondego>    public MyDataTableModel() {<newline46mondego>        dataList = new ArrayList<Data>(25);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public int getRowCount() {<newline46mondego>        return dataList.size();<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public int getColumnCount() {<newline46mondego>        return 7;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public String getColumnName(int column) {<newline46mondego>        String name = <doubleQuotes46>??<doubleQuotes46>;<newline46mondego>        switch (column) {<newline46mondego>            case 0:<newline46mondego>                name = <doubleQuotes46>Name<doubleQuotes46>;<newline46mondego>                break;<newline46mondego>            case 1:<newline46mondego>                name = <doubleQuotes46>Phone<doubleQuotes46>;<newline46mondego>                break;<newline46mondego>            case 2:<newline46mondego>                name = <doubleQuotes46>Address<doubleQuotes46>;<newline46mondego>                break;<newline46mondego>            case 3:<newline46mondego>                name = <doubleQuotes46>City<doubleQuotes46>;<newline46mondego>                break;<newline46mondego>            case 4:<newline46mondego>                name = <doubleQuotes46>State<doubleQuotes46>;<newline46mondego>                break;<newline46mondego>            case 5:<newline46mondego>                name = <doubleQuotes46>Postal Code<doubleQuotes46>;<newline46mondego>                break;<newline46mondego>            case 6:<newline46mondego>                name = <doubleQuotes46>Link<doubleQuotes46>;<newline46mondego>                break;<newline46mondego>        }<newline46mondego>        return super.getColumnName(column);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Object getValueAt(int rowIndex, int columnIndex) {<newline46mondego>        Object value = null;<newline46mondego>        Data data = dataList.get(rowIndex);<newline46mondego>        switch (columnIndex) {<newline46mondego>            case 0:<newline46mondego>                value = data.getName();<newline46mondego>                break;<newline46mondego>            // Other case statements per column...<newline46mondego>        }<newline46mondego>        return value;<newline46mondego>    }<newline46mondego><newline46mondego>    public void add(Data data) {<newline46mondego>        dataList.add(data);<newline46mondego>        int index = dataList.size() - 1;<newline46mondego>        fireTableRowsInserted(index, index);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9183splitHere46","12907249splitHere46","Data"
"9184splitHere46","12907249splitHere46","add"
"9185splitHere46","12907269splitHere46","...<newline46mondego>finally {<newline46mondego>if (connection != null) {<newline46mondego>    try {<newline46mondego>        connection.close();<newline46mondego>        logger.debug(<doubleQuotes46>Connection broken.<doubleQuotes46>);<newline46mondego>        Thread.sleep(1000);<newline46mondego>    } catch (SQLException e) {<newline46mondego>        logger.debug(e.getMessage());<newline46mondego>        e.printStackTrace();<newline46mondego>        fail(<doubleQuotes46>The connection could not be closed.<doubleQuotes46>);<newline46mondego>    } catch (InterruptedException e) {<newline46mondego>        logger.debug(e.getMessage());<newline46mondego>        e.printStackTrace();<newline46mondego><newline46mondego>    }<newline46mondego>...<newline46mondego>"
"9186splitHere46","12907382splitHere46","null"
"9187splitHere46","12907382splitHere46","new"
"9188splitHere46","12907510splitHere46","java -cp .:scala-library.jar Test<newline46mondego>"
"9189splitHere46","12907603splitHere46","where"
"9190splitHere46","12907603splitHere46","insert"
"9191splitHere46","12907603splitHere46","Where"
"9192splitHere46","12907603splitHere46","select"
"9193splitHere46","12907603splitHere46","update"
"9194splitHere46","12907603splitHere46","delete"
"9195splitHere46","12907603splitHere46","insert"
"9196splitHere46","12907603splitHere46","where"
"9197splitHere46","12907603splitHere46","insert"
"9198splitHere46","12907603splitHere46","where"
"9199splitHere46","12907771splitHere46","MQ2009 = Mq timeout happened for {0}<newline46mondego>"
"9200splitHere46","12907771splitHere46","<fmt:message key=<doubleQuotes46>MQ2009<doubleQuotes46> var=<doubleQuotes46>val<doubleQuotes46> ><newline46mondego>   <fmt:param value=<doubleQuotes46>${valueComingFromSomeParameter}<doubleQuotes46>/><newline46mondego></fmt:message><newline46mondego>"
"9201splitHere46","12907771splitHere46","<c:out value=<doubleQuotes46>${val}<doubleQuotes46>/><newline46mondego>"
"9202splitHere46","12907790splitHere46","(?<!<font color='black'>)AVG(?!</font>)<newline46mondego>"
"9203splitHere46","12908007splitHere46","String s1 = <doubleQuotes46>Abcd<doubleQuotes46>; String s2 = s1.substring(3)"
"9204splitHere46","12908007splitHere46","s1.size()"
"9205splitHere46","12908007splitHere46","s1.value.length"
"9206splitHere46","12908007splitHere46","String snippet = new String(reallyLongString.substring(x,y))"
"9207splitHere46","12908082splitHere46","equals(Object)"
"9208splitHere46","12908082splitHere46","java.lang.Object"
"9209splitHere46","12908082splitHere46","equals(Bigram)"
"9210splitHere46","12908082splitHere46","public boolean equals(Bigram b) {<newline46mondego>    return b.first == first && b.second == second;<newline46mondego>}<newline46mondego><newline46mondego>@Override public boolean equals(Object o) {<newline46mondego>    if (!(o instanceof Bigram)) return false;<newline46mondego>    return equals((Bigram)o);<newline46mondego>}<newline46mondego>"
"9211splitHere46","12908279splitHere46","public class MyReciever extends BroadcastReceiver{<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void onReceive(Context context, Intent intent) <newline46mondego>{<newline46mondego>        Log.d(<doubleQuotes46>BOOT COMPLETE<doubleQuotes46>,<doubleQuotes46>SERVICE CALLED>>>>>>>>>>>><doubleQuotes46>);<newline46mondego>        //use your code here to print notifications<newline46mondego><newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9212splitHere46","12908279splitHere46","<uses-permission android:name=<doubleQuotes46>android.permission.RECEIVE_BOOT_COMPLETED<doubleQuotes46>/><newline46mondego>"
"9213splitHere46","12908279splitHere46","<receiver android:name=<doubleQuotes46>.MyReciever<doubleQuotes46> <newline46mondego>             android:enabled=<doubleQuotes46>true<doubleQuotes46> <newline46mondego>             android:exported=<doubleQuotes46>false<doubleQuotes46>><newline46mondego>            <intent-filter><newline46mondego>                <action android:name=<doubleQuotes46>android.intent.action.BOOT_COMPLETED<doubleQuotes46>/><newline46mondego>            </intent-filter><newline46mondego>        </receiver><newline46mondego>"
"9214splitHere46","12908353splitHere46","{<doubleQuotes46>cmd<doubleQuotes46>, <doubleQuotes46>/c<doubleQuotes46>, <doubleQuotes46>start<doubleQuotes46>, <doubleQuotes46>MSACCESS<doubleQuotes46>, <doubleQuotes46>D:\\My<doubleQuotes46>, <doubleQuotes46>Documents\\Database.accdb<doubleQuotes46>}"
"9215splitHere46","12908353splitHere46","String[] command = {<doubleQuotes46>cmd<doubleQuotes46>, <doubleQuotes46>/c<doubleQuotes46>, <doubleQuotes46>start<doubleQuotes46>, <doubleQuotes46>MSACCESS<doubleQuotes46>, <doubleQuotes46>D:\\My Documents\\Database.accdb<doubleQuotes46>};<newline46mondego>"
"9216splitHere46","12908366splitHere46","AndroidApplicationConfiguration Configuration = new  AndroidApplicationConfiguration();<newline46mondego>Configuration.stencil = 8;  //stencil buffer size<newline46mondego>initialize(new Game(), Configuration);   //pass it as parameter  <newline46mondego>"
"9217splitHere46","12908366splitHere46","LwjglApplicationConfiguration Configuration = new  LwjglApplicationConfiguration();<newline46mondego>Configuration.stencil = 8;<newline46mondego>new LwjglApplication(new Game(), Configuration);<newline46mondego>"
"9218splitHere46","12908389splitHere46","public class ClassA {<newline46mondego>    ClassB instanceOfB;<newline46mondego>    //getters and setters...<newline46mondego>}<newline46mondego><newline46mondego>public class ClassB {<newline46mondego>    ClassA instanceOfA;<newline46mondego>    //getters and setters...<newline46mondego>}<newline46mondego><newline46mondego>public class MyJAXWS {<newline46mondego><newline46mondego>    @WebMethod<newline46mondego>    public ClassA getClassA() {<newline46mondego>         ClassA classA = new ClassA();<newline46mondego>         ClassB classB = new ClassB();<newline46mondego>         classB.setInstanceOfA(classA);<newline46mondego>         classA.setInstanceOfB(classB);<newline46mondego>         return classA; //boom! circular reference problems!<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9219splitHere46","12908389splitHere46","List"
"9220splitHere46","12908389splitHere46","Set"
"9221splitHere46","12908389splitHere46","Map"
"9222splitHere46","12908389splitHere46","public class ClassC {<newline46mondego><newline46mondego>    List<ClassA> lstClassA; //good!<newline46mondego>    ArrayList<ClassB> alstClassB; //not very flexible with other languages =\<newline46mondego>}<newline46mondego>"
"9223splitHere46","12908389splitHere46","public class ClassD {<newline46mondego>    private int intValue;<newline46mondego>    //naive business logic method<newline46mondego>    //won't be generated in the WSDL for the clients/consumers of the Web Services<newline46mondego>    public void printIntValue() {<newline46mondego>        //pretty simple implementation<newline46mondego>        System.out.println(this.intValue);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9224splitHere46","12908477splitHere46","Timer"
"9225splitHere46","12908477splitHere46","TimerTask"
"9226splitHere46","12908477splitHere46","n"
"9227splitHere46","12908477splitHere46","TimerTask"
"9228splitHere46","12908477splitHere46","public void run()"
"9229splitHere46","12908477splitHere46","timer.schedule()"
"9230splitHere46","12908477splitHere46","Hello World"
"9231splitHere46","12908477splitHere46","class SayHello extends TimerTask {<newline46mondego>    public void run() {<newline46mondego>       System.out.println(<doubleQuotes46>Hello World!<doubleQuotes46>); <newline46mondego>    }<newline46mondego> }<newline46mondego><newline46mondego> // And From your main() method or any other method<newline46mondego> Timer timer = new Timer();<newline46mondego> timer.schedule(new SayHello(), 0, 5000);<newline46mondego>"
"9232splitHere46","12908478splitHere46","import sys<newline46mondego><newline46mondego>oldcount = 99999999<newline46mondego>lst = []<newline46mondego><newline46mondego>def recurse (str, amt, count):<newline46mondego>    global oldcount<newline46mondego>    global lst<newline46mondego>    if amt < 0: return<newline46mondego>    if count > oldcount: return<newline46mondego>    if amt == 0:<newline46mondego>        if count < oldcount:<newline46mondego>            print <doubleQuotes46>=====<doubleQuotes46><newline46mondego>            lst = []<newline46mondego>            oldcount = count<newline46mondego>        if count == oldcount:<newline46mondego>            lst.append (str)<newline46mondego>        return<newline46mondego>    recurse (<doubleQuotes46>%s 19<doubleQuotes46> % str, amt - 19, count + 1)<newline46mondego>    recurse (<doubleQuotes46>%s 13<doubleQuotes46> % str, amt - 13, count + 1)<newline46mondego>    recurse (<doubleQuotes46>%s  7<doubleQuotes46> % str, amt -  7, count + 1)<newline46mondego>    recurse (<doubleQuotes46>%s  1<doubleQuotes46> % str, amt -  1, count + 1)<newline46mondego><newline46mondego>recurse (<doubleQuotes46><doubleQuotes46>, int (sys.argv[1]), 0)<newline46mondego>#for seq in lst: print seq<newline46mondego>print <doubleQuotes46>%d permutations<doubleQuotes46> % len (lst)<newline46mondego>"
"9233splitHere46","12908478splitHere46","{1, 7, 13, 19}"
"9234splitHere46","12908478splitHere46","1"
"9235splitHere46","12908478splitHere46","1"
"9236splitHere46","12908478splitHere46","7"
"9237splitHere46","12908478splitHere46","1"
"9238splitHere46","12908478splitHere46","1"
"9239splitHere46","12908478splitHere46","7"
"9240splitHere46","12908478splitHere46","13"
"9241splitHere46","12908478splitHere46","7"
"9242splitHere46","12908478splitHere46","20"
"9243splitHere46","12908478splitHere46","13/1"
"9244splitHere46","12908478splitHere46","7/1"
"9245splitHere46","12908478splitHere46","1"
"9246splitHere46","12908478splitHere46","1"
"9247splitHere46","12908478splitHere46","13"
"9248splitHere46","12908478splitHere46","13"
"9249splitHere46","12908478splitHere46","7/7"
"9250splitHere46","12908478splitHere46","13/1"
"9251splitHere46","12908478splitHere46","1"
"9252splitHere46","12908478splitHere46","19"
"9253splitHere46","12908478splitHere46","19/1"
"9254splitHere46","12908478splitHere46","13/7"
"9255splitHere46","12908478splitHere46","19/19"
"9256splitHere46","12908478splitHere46","19"
"9257splitHere46","12908478splitHere46","1"
"9258splitHere46","12908478splitHere46","7"
"9259splitHere46","12908478splitHere46","7/7"
"9260splitHere46","12908478splitHere46","13/1"
"9261splitHere46","12908478splitHere46","7/7/7"
"9262splitHere46","12908478splitHere46","19/1/1"
"9263splitHere46","12908478splitHere46","13/7"
"9264splitHere46","12908478splitHere46","19/1"
"9265splitHere46","12908478splitHere46","Value  Count  Possibilities<newline46mondego>    1      1  1<newline46mondego>    2      2  1x2<newline46mondego>    3      3  1x3<newline46mondego>    4      4  1x4<newline46mondego>    5      5  1x5<newline46mondego>    6      6  1x6<newline46mondego>    7      1  7<newline46mondego>    8      2  7,1<newline46mondego>    9      3  7,1x2<newline46mondego>    :<newline46mondego>   12      6  7,1x5<newline46mondego>   13      1  13<newline46mondego>   14      2  13,1 or 7x2<newline46mondego>   15      2  13,1x2 or 7x2,1<newline46mondego>    :<newline46mondego>   18      6  13,1X5 or 7x2,1x4<newline46mondego>   19      1  19<newline46mondego>   20      2  19,1 or 13,7<newline46mondego>   21      3  19,1x2 or 13,7,1 or 7x3<newline46mondego>    :<newline46mondego>"
"9266splitHere46","12908495splitHere46","slider"
"9267splitHere46","12908495splitHere46","slider"
"9268splitHere46","12908495splitHere46","add(carSlider);<newline46mondego>"
"9269splitHere46","12908730splitHere46","order by"
"9270splitHere46","12908730splitHere46","where"
"9271splitHere46","12908730splitHere46","date"
"9272splitHere46","12908730splitHere46","DATE"
"9273splitHere46","12908730splitHere46","SELECT * FROM cost_info where `date` > ? and `date` < ?  order by `date`<newline46mondego>"
"9274splitHere46","12908730splitHere46","executeQuery()"
"9275splitHere46","12908730splitHere46","executeQuery(String)"
"9276splitHere46","12908730splitHere46","?"
"9277splitHere46","12908730splitHere46","rs = preparedStatement.executeQuery(/* empty */);<newline46mondego>"
"9278splitHere46","12908783splitHere46","SortedMap"
"9279splitHere46","12908783splitHere46","SortedMap<K,V> subMap(K fromKey, K toKey)"
"9280splitHere46","12908783splitHere46","SortedMap<K,V> headMap(K toKey) ..."
"9281splitHere46","12908783splitHere46","Treemap"
"9282splitHere46","12908783splitHere46","TreeSet"
"9283splitHere46","12908783splitHere46","checkedSortedMap"
"9284splitHere46","12908783splitHere46","Collections.checkedXXX()"
"9285splitHere46","12908783splitHere46","put(A, value)"
"9286splitHere46","12908783splitHere46","put(A, othervalue)"
"9287splitHere46","12908783splitHere46","Collections.synchronizedSortedMap(sortedMap)"
"9288splitHere46","12908800splitHere46","select e1 from Emp e1,Emp e2 where e1.sal = e2.sal and e2.eid =: a;<newline46mondego>"
"9289splitHere46","12908835splitHere46","def text = <doubleQuotes46>My name [name], my city [cIty], my country [countrY].<doubleQuotes46><newline46mondego>text.findAll(/\[(.*?)\]/).each{text = text.replace(it, it.toLowerCase())}<newline46mondego><newline46mondego>assert text == <doubleQuotes46>My name [name], my city [city], my country [country].<doubleQuotes46>    <newline46mondego>"
"9290splitHere46","12908876splitHere46","exec()"
"9291splitHere46","12908947splitHere46","554 Invalid HELO format"
"9292splitHere46","12909114splitHere46","d"
"9293splitHere46","12909125splitHere46","Quartz is quite flexible, and contains multiple usage paradigms that can be used     separately or together, in order to achieve your desired behavior, and enable you to write your code in the manner that seems most 'natural' to your project.<newline46mondego><newline46mondego>Quartz is very light-weight, and requires very little setup/configuration - it can actually be used 'out-of-the-box' if your needs are relatively basic.<newline46mondego><newline46mondego>Quartz is fault-tolerant, and can persist ('remember') your scheduled jobs between system restarts.<newline46mondego>"
"9294splitHere46","12909125splitHere46","Timers have no persistence mechanism.<newline46mondego><newline46mondego>Timers have inflexible scheduling (only able to set start-time & repeat interval, nothing based on dates, time of day, etc.)<newline46mondego><newline46mondego>Timers don't utilize a thread-pool (one thread per timer)<newline46mondego><newline46mondego>Timers have no real management schemes - you'd have to write your own mechanism for being able to remember, organize and retrieve your tasks by name, etc.<newline46mondego>"
"9295splitHere46","12909131splitHere46","id"
"9296splitHere46","12909131splitHere46","subjectId"
"9297splitHere46","12909240splitHere46","Session (HttpSession)"
"9298splitHere46","12909255splitHere46","public class Engine {<newline46mondego>  public void doActionOnEngine() {}<newline46mondego>  public void doOtherActionOnEngine() {}<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>public class Car {<newline46mondego>  private Engine engine;<newline46mondego><newline46mondego>  // the setter is used for dependency injection<newline46mondego>  public void setEngine(Engine engine) {<newline46mondego>    this.engine = engine;<newline46mondego>  }<newline46mondego><newline46mondego>  // notice that there is no getter for engine<newline46mondego><newline46mondego>  public void doActionOnCar() {<newline46mondego>    engine.doActionOnEngine();<newline46mondego>  }<newline46mondego><newline46mondego>  public void doOtherActionOnCar() {<newline46mondego>    engine.doActionOnEngine();<newline46mondego>    engine.doOtherActionOnEngine(),<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"9299splitHere46","12909358splitHere46","equals"
"9300splitHere46","12909358splitHere46","hashCode"
"9301splitHere46","12909358splitHere46","public class MyObject {<newline46mondego>private String name;<newline46mondego><newline46mondego>//getter and setters<newline46mondego><newline46mondego><newline46mondego>public int hashCode() {<newline46mondego>   int hashCode = //Do some object specifc stuff to gen hashCode<newline46mondego>   return int;<newline46mondego>}<newline46mondego><newline46mondego>public boolean equals(Object obj) {<newline46mondego>   if(this==obj) return true;<newline46mondego>   if(obj instanceOf MyObject) {<newline46mondego>       if(this.name.equals((MyObject)obj.getName())) {<newline46mondego>           return true;<newline46mondego>       }<newline46mondego>   return false;<newline46mondego>}<newline46mondego>}<newline46mondego>}<newline46mondego>"
"9302splitHere46","12909465splitHere46","if( Long.parseLong((String) item) > Long.parseLong((String) queArray[j]) )<newline46mondego>"
"9303splitHere46","12909465splitHere46","if ((Long) item) > (Long) queArray[j]) )<newline46mondego>"
"9304splitHere46","12909465splitHere46","public void insert(Object item)<newline46mondego>"
"9305splitHere46","12909465splitHere46","public void insert(Long item)<newline46mondego>"
"9306splitHere46","12909465splitHere46","PriorityQ"
"9307splitHere46","12909465splitHere46","PriorityQ<T>"
"9308splitHere46","12909465splitHere46","setComparator(Comparator comparator)"
"9309splitHere46","12909465splitHere46","public void insert(T item)<newline46mondego> ...<newline46mondego><newline46mondego> if ((comparator.compare(item, queArray[j])>0) {<newline46mondego>"
"9310splitHere46","12909465splitHere46","T[]"
"9311splitHere46","12909484splitHere46","getGenericListing"
"9312splitHere46","12909484splitHere46","public <T> List<T> getGenericListing(Class<T> clazz) {<newline46mondego>    //Other logic comes before...<newline46mondego>    Query qry = entityManager.createNativeQuery(sql, clazz);<newline46mondego>    return (List<T>) qry.getResultList(); //Returns an untyped list, part of JPA spec<newline46mondego>}<newline46mondego>"
"9313splitHere46","12909499splitHere46","for (int s = 0; s < objWidth; s++){<newline46mondego>  int x1 = cos(angle)*s<newline46mondego>  int y1 = sin(angle)*s<newline46mondego><newline46mondego>  int x2 = s * cos(angle) - objHeight * sin(angle)<newline46mondego>  int y2 = s * sin(angle) + objHeight * cos(angle) <newline46mondego><newline46mondego>//the rest of code<newline46mondego>}<newline46mondego>"
"9314splitHere46","12909505splitHere46","public Customer getCustomer(Long customerIdFromCustomerListPage)<newline46mondego>    throws Exception {<newline46mondego><newline46mondego>      Session session = HibernateUtil.getSessionFactory().openSession();<newline46mondego>      Customer customer = (Customer )session.get(Customer.class, customerIdFromCustomerListPage); <newline46mondego>      return customer ;<newline46mondego><newline46mondego>}<newline46mondego>"
"9315splitHere46","12909567splitHere46","exp = (int)Math.pow(expBase, i);<newline46mondego>hashedConfig = hashedConfig + (ASCIIChar * exp);<newline46mondego>"
"9316splitHere46","12909567splitHere46","Math.abs"
"9317splitHere46","12909582splitHere46","class XMLParsingSAX extends DefaultHandler {<newline46mondego><newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        new XMLParsingSAX().parseDocument();<newline46mondego>    }<newline46mondego><newline46mondego>    private void parseDocument() {<newline46mondego><newline46mondego>        // get a factory<newline46mondego>        SAXParserFactory spf = SAXParserFactory.newInstance();<newline46mondego>        try {<newline46mondego><newline46mondego>            // get a new instance of parser<newline46mondego>            SAXParser sp = spf.newSAXParser();<newline46mondego><newline46mondego>            // parse the file and also register this class for call backs<newline46mondego>            sp.parse(<doubleQuotes46>NewFile.xml<doubleQuotes46>, this);<newline46mondego><newline46mondego>        } catch (SAXException se) {<newline46mondego>            se.printStackTrace();<newline46mondego>        } catch (ParserConfigurationException pce) {<newline46mondego>            pce.printStackTrace();<newline46mondego>        } catch (IOException ie) {<newline46mondego>            ie.printStackTrace();<newline46mondego>        }<newline46mondego><newline46mondego>        System.out.println(states.toString());<newline46mondego>        System.out.println(states.get(0).getPoints().toString());<newline46mondego>        System.out.println(states.get(1).getPoints().toString());<newline46mondego>    }<newline46mondego><newline46mondego>    Points tempPoint;<newline46mondego>    String tempVal1;<newline46mondego>    String tempVal2;<newline46mondego><newline46mondego>    States tempState;<newline46mondego><newline46mondego>    public void startElement(String uri, String localName, String qName,<newline46mondego>            Attributes attributes) throws SAXException {<newline46mondego>        // reset<newline46mondego>        tempVal1 = <doubleQuotes46><doubleQuotes46>;<newline46mondego>        tempVal2 = <doubleQuotes46><doubleQuotes46>;<newline46mondego>        System.out.println(<doubleQuotes46>localName: <doubleQuotes46> + localName + <doubleQuotes46> qName: <doubleQuotes46> + qName<newline46mondego>                + <doubleQuotes46> name: <doubleQuotes46> + attributes.getValue(0));<newline46mondego>        if (qName.equalsIgnoreCase(<doubleQuotes46>state<doubleQuotes46>)) {<newline46mondego>            // create a new instance of state<newline46mondego>            tempState = new States();<newline46mondego>            points = new ArrayList<Points>();<newline46mondego>            tempState.setStateName(attributes.getValue(0));<newline46mondego>            tempState.setColor(Integer.parseInt(attributes.getValue(1)));<newline46mondego>            tempVal1 = attributes.getValue(0);<newline46mondego>            tempVal2 = attributes.getValue(1);<newline46mondego>            System.out.println(<doubleQuotes46>localName: <doubleQuotes46> + localName + <doubleQuotes46> qName: <doubleQuotes46><newline46mondego>                    + qName + <doubleQuotes46> name: <doubleQuotes46> + attributes.getValue(0) + <doubleQuotes46> color: <doubleQuotes46><newline46mondego>                    + attributes.getValue(1));<newline46mondego><newline46mondego>        } else if (qName.equalsIgnoreCase(<doubleQuotes46>point<doubleQuotes46>)) {<newline46mondego>            // create a new instance of point<newline46mondego>            tempPoint = new Points();<newline46mondego>            tempVal1 = attributes.getValue(0);<newline46mondego>            tempVal2 = attributes.getValue(1);<newline46mondego>            System.out.println(<doubleQuotes46>localName: <doubleQuotes46> + localName + <doubleQuotes46> qName: <doubleQuotes46><newline46mondego>                    + qName + <doubleQuotes46> lat: <doubleQuotes46> + attributes.getValue(0) + <doubleQuotes46> lng: <doubleQuotes46><newline46mondego>                    + attributes.getValue(1));<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    public void endElement(String uri, String localName, String qName)<newline46mondego>            throws SAXException {<newline46mondego>        System.out.println(<doubleQuotes46>localName: <doubleQuotes46> + localName + <doubleQuotes46> qName<doubleQuotes46> + qName);<newline46mondego>        if (qName.equalsIgnoreCase(<doubleQuotes46>state<doubleQuotes46>)) {<newline46mondego>            // add it to the list<newline46mondego>//            tempState.setStateName(tempVal1); // getting Exception<newline46mondego>//            tempState.setColor(Integer.parseInt(tempVal2));// getting Exception<newline46mondego>            states.add(tempState);<newline46mondego><newline46mondego>        } else if (qName.equalsIgnoreCase(<doubleQuotes46>point<doubleQuotes46>)) {<newline46mondego>            // add it to the list<newline46mondego>            tempPoint.setLatitude(Long.parseLong(tempVal1));// getting Exception<newline46mondego>            tempPoint.setLongitude(Long.parseLong(tempVal2));// getting Exception<newline46mondego>            points.add(tempPoint);<newline46mondego><newline46mondego>        }<newline46mondego>        tempState.setPoints(points);// getting Exception        <newline46mondego>        System.out.println(<doubleQuotes46><doubleQuotes46> + states.size());<newline46mondego>        System.out.println(<doubleQuotes46><doubleQuotes46> + points.size());<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>       ArrayList<States> states = new ArrayList<States>();<newline46mondego>       ArrayList<Points> points = new ArrayList<Points>();<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego><newline46mondego> class States {<newline46mondego>    private String stateName;<newline46mondego>    private int color;<newline46mondego>    private ArrayList<Points> points;<newline46mondego><newline46mondego>    public String getStateName() {<newline46mondego>        return stateName;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setStateName(String stateName) {<newline46mondego>        this.stateName = stateName;<newline46mondego>    }<newline46mondego><newline46mondego>    public int getColor() {<newline46mondego>        return color;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setColor(int color) {<newline46mondego>        this.color = color;<newline46mondego>    }<newline46mondego><newline46mondego>    public ArrayList<Points> getPoints() {<newline46mondego>        return points;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setPoints(ArrayList<Points> points) {<newline46mondego>        this.points = points;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public String toString() {<newline46mondego>        return <doubleQuotes46>States [stateName=<doubleQuotes46> + stateName + <doubleQuotes46>, color=<doubleQuotes46> + color + <doubleQuotes46>]<doubleQuotes46>;<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>}<newline46mondego><newline46mondego><newline46mondego> class Points {<newline46mondego><newline46mondego>        private long latitude;<newline46mondego>        private long longitude;<newline46mondego><newline46mondego>        public long getLatitude() {<newline46mondego>            return latitude;<newline46mondego>        }<newline46mondego><newline46mondego>    public void setLatitude(long latitude) {<newline46mondego>        this.latitude = latitude;<newline46mondego>    }<newline46mondego><newline46mondego>    public long getLongitude() {<newline46mondego>        return longitude;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setLongitude(long longitude) {<newline46mondego>        this.longitude = longitude;<newline46mondego>    }<newline46mondego><newline46mondego>    public String getPointsDetails() {<newline46mondego>        String result = latitude + <doubleQuotes46>: <doubleQuotes46> + longitude;<newline46mondego>        return result;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public String toString() {<newline46mondego>        return <doubleQuotes46>Points [latitude=<doubleQuotes46> + latitude + <doubleQuotes46>, longitude=<doubleQuotes46> + longitude<newline46mondego>                + <doubleQuotes46>]<doubleQuotes46>;<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>    }<newline46mondego>"
"9318splitHere46","12909639splitHere46","String.replaceAll(regexp, replaceChar)<newline46mondego>"
"9319splitHere46","12909650splitHere46","start r=relationship(*) delete r;<newline46mondego>"
"9320splitHere46","12909650splitHere46","start n=node(*),m=node(*) create unique n-[r:RELTYPE]-m;<newline46mondego>"
"9321splitHere46","12909804splitHere46","com.hello"
"9322splitHere46","12909804splitHere46","F:\workspace\helloWorld\bin"
"9323splitHere46","12909804splitHere46","java -cp F:\workspace\helloWorld\bin com.hello.HelloWorld<newline46mondego>"
"9324splitHere46","12909804splitHere46","F:\workspace\helloWorld\bin"
"9325splitHere46","12909804splitHere46","java com.hello.HelloWorld<newline46mondego>"
"9326splitHere46","12909804splitHere46","CLASSPATH"
"9327splitHere46","12909901splitHere46","O(n)"
"9328splitHere46","12909901splitHere46","equals"
"9329splitHere46","12909901splitHere46","String"
"9330splitHere46","12909901splitHere46","hashCode"
"9331splitHere46","12909901splitHere46","hashSet.contains"
"9332splitHere46","12909901splitHere46","O(1)"
"9333splitHere46","12909953splitHere46","newImage"
"9334splitHere46","12909953splitHere46","BufferedImage image = ImageIO.read(imageFile);<newline46mondego>BufferedImage newImage = new BufferedImage(newWidth, newHeight, image.getType());<newline46mondego>Graphics2D g2 = newImage.createGraphics();<newline46mondego>g2.drawImage(image, 0, 0, newWidth, newHeight, null);<newline46mondego>g2.dispose();<newline46mondego>"
"9335splitHere46","12909990splitHere46","glVertexPointer"
"9336splitHere46","12909990splitHere46","glVertexPointer"
"9337splitHere46","12909990splitHere46","glDrawArrays"
"9338splitHere46","12909990splitHere46","glVertexPointer(3, GL_FLOAT, 0, 0L);<newline46mondego>"
"9339splitHere46","12909990splitHere46","verticesPerObject"
"9340splitHere46","12910023splitHere46","static { System.out.print(<doubleQuotes46>a<doubleQuotes46>); }<newline46mondego>"
"9341splitHere46","12910023splitHere46","{ System.out.print(<doubleQuotes46>b<doubleQuotes46>); }<newline46mondego>"
"9342splitHere46","12910367splitHere46","Pattern"
"9343splitHere46","12910367splitHere46","Matcher"
"9344splitHere46","12910367splitHere46","String s = <doubleQuotes46>10 50 u E2U+pstn:tel \<doubleQuotes46>!^(.*)$!tel:\\\\1;spn=42180;mcc=234;mnc=33!\<doubleQuotes46><doubleQuotes46>;<newline46mondego>Pattern p = Pattern.compile(<doubleQuotes46>^.*spn=([0-9]+);mcc=([0-9]*);mnc=([0-9]*)!.*$<doubleQuotes46>);<newline46mondego>Matcher matcher = p.matcher(s);<newline46mondego>matcher.matches(); // true<newline46mondego>String spn = matcher.group(1); // 42180<newline46mondego>String mcc = matcher.group(2); // 234<newline46mondego>String mnc = matcher.group(3); // 33<newline46mondego>"
"9345splitHere46","12910367splitHere46","Pattern p =<newline46mondego>  Pattern.compile(<doubleQuotes46>^.*spn=(?<spn>[0-9]+);mcc=(?<mcc>[0-9]*);mnc=(?<mnc>[0-9]*)!.*$<doubleQuotes46>);<newline46mondego>Matcher matcher = p.matcher(s);<newline46mondego>matcher.matches(); // true<newline46mondego>String spn = matcher.group(<doubleQuotes46>spn<doubleQuotes46>);<newline46mondego>String mcc = matcher.group(<doubleQuotes46>mcc<doubleQuotes46>);<newline46mondego>String mnc = matcher.group(<doubleQuotes46>mnc<doubleQuotes46>);<newline46mondego>"
"9346splitHere46","12910508splitHere46","result"
"9347splitHere46","12910508splitHere46","getObject(...)"
"9348splitHere46","12910508splitHere46","getInt()"
"9349splitHere46","12910508splitHere46","result.getInt(<doubleQuotes46>PaketBiljetter<doubleQuotes46>)<newline46mondego>"
"9350splitHere46","12910707splitHere46","public class TestCheckboxes {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        new TestCheckboxes();<newline46mondego>    }<newline46mondego><newline46mondego>    public TestCheckboxes() {<newline46mondego>        EventQueue.invokeLater(new Runnable() {<newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                try {<newline46mondego>                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());<newline46mondego>                } catch (ClassNotFoundException ex) {<newline46mondego>                } catch (InstantiationException ex) {<newline46mondego>                } catch (IllegalAccessException ex) {<newline46mondego>                } catch (UnsupportedLookAndFeelException ex) {<newline46mondego>                }<newline46mondego><newline46mondego>                JFrame frame = new JFrame();<newline46mondego>                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>                frame.setLayout(new BorderLayout());<newline46mondego>                frame.add(new CheckBoxPane());<newline46mondego>                frame.setSize(400, 400);<newline46mondego>                frame.setLocationRelativeTo(null);<newline46mondego>                frame.setVisible(true);<newline46mondego>            }<newline46mondego><newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>    public class CheckBoxPane extends JPanel {<newline46mondego><newline46mondego>        private JPanel content;<newline46mondego><newline46mondego>        public CheckBoxPane() {<newline46mondego>            setLayout(new GridBagLayout());<newline46mondego>            GridBagConstraints gbc = new GridBagConstraints();<newline46mondego>            gbc.gridx = 0;<newline46mondego>            gbc.gridy = 0;<newline46mondego>            gbc.weightx = 1;<newline46mondego>            gbc.weighty = 1;<newline46mondego>            gbc.anchor = GridBagConstraints.CENTER;<newline46mondego>            content = new JPanel(new GridBagLayout());<newline46mondego>            add(content, gbc);<newline46mondego><newline46mondego>            JButton more = new JButton(<doubleQuotes46>More<doubleQuotes46>);<newline46mondego>            more.addActionListener(new ActionListener() {<newline46mondego>                @Override<newline46mondego>                public void actionPerformed(ActionEvent e) {<newline46mondego>                    GridBagConstraints gbc = new GridBagConstraints();<newline46mondego>                    gbc.gridx = 0;<newline46mondego>                    gbc.gridy = 0;<newline46mondego><newline46mondego>                    content.removeAll();<newline46mondego>                    int count = 10 + (int) Math.round(Math.random() * 90);<newline46mondego>                    System.out.println(count);<newline46mondego>                    for (int index = 0; index < count; index++) {<newline46mondego>                        gbc.gridx++;<newline46mondego>                        if (index % 8 == 0) {<newline46mondego>                            gbc.gridx = 0;<newline46mondego>                            gbc.gridy++;<newline46mondego>                        }<newline46mondego>                        content.add(new JCheckBox(Integer.toString(index)), gbc);<newline46mondego>                    }<newline46mondego><newline46mondego>                    content.revalidate();<newline46mondego>                    repaint();<newline46mondego><newline46mondego>                }<newline46mondego><newline46mondego>            });<newline46mondego><newline46mondego>            gbc.gridy++;<newline46mondego>            gbc.weightx = 0;<newline46mondego>            gbc.weighty = 0;<newline46mondego><newline46mondego>            add(more, gbc);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9351splitHere46","12910725splitHere46","MigLayout layout = new MigLayout(<doubleQuotes46>wrap 2, debug, flowy<doubleQuotes46>);<newline46mondego>JComponent content = new JPanel(layout);<newline46mondego>content.add(new JButton(<doubleQuotes46>A<doubleQuotes46>));<newline46mondego>content.add(new JButton(<doubleQuotes46>B<doubleQuotes46>));<newline46mondego>content.add(new JButton(<doubleQuotes46>C<doubleQuotes46>));<newline46mondego>"
"9352splitHere46","12910745splitHere46","int i = 1234567890;     <newline46mondego> float f = i;    <newline46mondego> System.out.println(i - f);<newline46mondego> System.out.println((int)f);<newline46mondego> System.out.println(f);<newline46mondego> System.out.println(i-(int)f);<newline46mondego>"
"9353splitHere46","12910745splitHere46","0.0<newline46mondego><newline46mondego>1234567936<newline46mondego><newline46mondego>1.23456794E9<newline46mondego><newline46mondego>-46<newline46mondego>"
"9354splitHere46","12910897splitHere46","name()"
"9355splitHere46","12910897splitHere46","@Override public String toString() {<newline46mondego>  return this.name() + <doubleQuotes46>_RANK<doubleQuotes46>;<newline46mondego>}<newline46mondego>"
"9356splitHere46","12910921splitHere46","public void invokeByName(String methName) {<newline46mondego>  try { getClass().getDeclaredMethod(methName).invoke(this); } <newline46mondego>  catch (RuntimeException e) { throw e; }<newline46mondego>  catch (Exception e) { throw new RuntimeException(e); }<newline46mondego>}<newline46mondego>"
"9357splitHere46","12911000splitHere46","ps -fe"
"9358splitHere46","12911000splitHere46","ps"
"9359splitHere46","12911018splitHere46","new Locale(<doubleQuotes46>zh<doubleQuotes46>, <doubleQuotes46>cn<doubleQuotes46>).getDisplayName();<newline46mondego>--> Chinese (China)<newline46mondego>"
"9360splitHere46","12911022splitHere46","textPane.getMargin()/setMargin()"
"9361splitHere46","12911037splitHere46","Helios - http://download.eclipse.org/releases/helios"
"9362splitHere46","12911037splitHere46","Web, XML, and Java EE Development->Eclipse Java EE Developer Tools AND JST Web UI"
"9363splitHere46","12911048splitHere46","org.artofsolving.jodconverter.office.OfficeException: failed to start and connect"
"9364splitHere46","12911048splitHere46","soffice -headless -accept=<doubleQuotes46>socket,host=127.0.0.1,port=8100;urp;<doubleQuotes46> -nofirststartwizard"
"9365splitHere46","12911134splitHere46","org.apache.commons.codec.binary"
"9366splitHere46","12911134splitHere46","String CSVContent = <doubleQuotes46>/* CSV data */<doubleQuotes46>;<newline46mondego>/**<newline46mondego> *  Decode the bytes using UTF8.  <newline46mondego> */<newline46mondego>String decodedStr = StringUtils.newStringUtf8(CSVContent.getBytes(<doubleQuotes46>UTF-8<doubleQuotes46>));<newline46mondego>/**<newline46mondego> *  Convert the decoded string to Byte array to write to the stream  <newline46mondego> */<newline46mondego>Byte [] content = StringUtils.getBytesIso8859_1(decodedStr);<newline46mondego>"
"9367splitHere46","12911134splitHere46","<dependency><newline46mondego>     <groupId>commons-codec</groupId><newline46mondego>     <artifactId>commons-codec</artifactId><newline46mondego>     <version>1.6</version><newline46mondego></dependency><newline46mondego>"
"9368splitHere46","12911134splitHere46","content = CSVContent.getBytes(<doubleQuotes46>ISO-8859-1<doubleQuotes46>);<newline46mondego>"
"9369splitHere46","12911242splitHere46","System.currentTimeMillis"
"9370splitHere46","12911242splitHere46","System.nanotime"
"9371splitHere46","12911242splitHere46","nanoTime"
"9372splitHere46","12911242splitHere46","private static long lastNanos;<newline46mondego>public static synchronized String uniqueId() {<newline46mondego>  for (;/*ever*/;) {<newline46mondego>    final long n = System.nanoTime();<newline46mondego>    if (n == lastNanos) continue;<newline46mondego>    lastNanos = n;<newline46mondego>    return <doubleQuotes46><doubleQuotes46> + System.currentTimeMillis() + n;<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"9373splitHere46","12911285splitHere46","System.arraycopy(digestedPassword, 11, resultBytes,0,digestedPassword.length); <newline46mondego>"
"9374splitHere46","12911285splitHere46","digestedPassword.length"
"9375splitHere46","12911285splitHere46","digestedPassword"
"9376splitHere46","12911285splitHere46","System.arraycopy(digestedPassword, 11, resultBytes,0,digestedPassword.length-11); <newline46mondego>"
"9377splitHere46","12911370splitHere46",";; 1. Refactored `java-get-package' into its own `defun'<newline46mondego>;; 2. Refactored `java-package-directory' into its own `defun'<newline46mondego>;; 3. Broke out `defun's outside of `java-mode-hook'<newline46mondego>;; 4. Use (let ((default-directory ...) ...) instead of (cd ...) (...)<newline46mondego>;; 5. Broke out keystroke assignments into `my-java-mode-hook'<newline46mondego><newline46mondego>(defun java-get-package ()<newline46mondego>  <doubleQuotes46>Get package definition before point<doubleQuotes46><newline46mondego>  (interactive)<newline46mondego>  (save-excursion<newline46mondego>    (save-match-data  ;; Added; you want this too<newline46mondego>      (goto-char (point-min))<newline46mondego>      (when (re-search-forward <doubleQuotes46>^\\s *package\\s +\\(.*\\);<doubleQuotes46><newline46mondego>                               (point-max) t)<newline46mondego>        (match-string 1)) )) )<newline46mondego><newline46mondego>(defun java-package-directory (package)<newline46mondego>  <doubleQuotes46>Get package directory of PACKAGE in current buffer<doubleQuotes46><newline46mondego>  (let ((directory (file-name-directory (buffer-file-name)))<newline46mondego>        sub-dirs)<newline46mondego>    (if directory<newline46mondego>        (setq directory (file-truename directory))<newline46mondego>      (error <doubleQuotes46>Current buffer is not visiting a file<doubleQuotes46>))<newline46mondego>    (save-match-data<newline46mondego>      (setq sub-dirs (reverse (split-string package <doubleQuotes46>\\.<doubleQuotes46>)))<newline46mondego>      (while sub-dirs<newline46mondego>        (if (string-match (concat <doubleQuotes46>^\\(.*/\\)<doubleQuotes46><newline46mondego>                                  (regexp-quote (car sub-dirs)) <doubleQuotes46>/$<doubleQuotes46>)<newline46mondego>                          directory)<newline46mondego>            (setq directory (match-string 1 directory)<newline46mondego>                  sub-dirs (cdr sub-dirs))<newline46mondego>          (error <doubleQuotes46>Package does not match directory structure<doubleQuotes46>) ) ) )<newline46mondego>    directory) )<newline46mondego><newline46mondego>(defun java-compile-current-file ()<newline46mondego> <doubleQuotes46>Compiles the current file with javac<doubleQuotes46><newline46mondego> (interactive)<newline46mondego> (let* ((package (java-get-package))<newline46mondego>        (default-directory (java-package-directory package)) )<newline46mondego>   (compile<newline46mondego>    (concat <doubleQuotes46>javac -Xlint:all <doubleQuotes46> ; Removed too noisy -Werror<newline46mondego>        (if package (concat package <doubleQuotes46>/<doubleQuotes46>) <doubleQuotes46><doubleQuotes46>)<newline46mondego>        (file-name-nondirectory (buffer-file-name)) ) ) ))<newline46mondego><newline46mondego>(defun java-run-current-file ()<newline46mondego> <doubleQuotes46>Runs the java program the current file corresponds to<doubleQuotes46><newline46mondego> (interactive)<newline46mondego> (let* ((package (java-get-package))<newline46mondego>        (default-directory (java-package-directory package)) )<newline46mondego>   (shell-command<newline46mondego>    (concat <doubleQuotes46>java <doubleQuotes46><newline46mondego>        (if package (concat package <doubleQuotes46>.<doubleQuotes46>) <doubleQuotes46><doubleQuotes46>)<newline46mondego>        (file-name-sans-extension<newline46mondego>         (file-name-nondirectory (buffer-file-name)) ) )) ))<newline46mondego><newline46mondego>(defun my-java-mode-hook () <doubleQuotes46>Stuff to run when entering Java mode<doubleQuotes46><newline46mondego>    (local-set-key [(f7)] 'java-run-current-file)<newline46mondego>    (local-set-key [(f8)] 'java-compile-current-file) )<newline46mondego><newline46mondego>(add-hook 'java-mode-hook #'my-java-mode-hook)<newline46mondego>"
"9378splitHere46","12911427splitHere46","retainAll"
"9379splitHere46","12911427splitHere46","map1.keySet().retainAll(map2.keySet());<newline46mondego>map1.keySet().retainAll(map3.keySet()); //etc<newline46mondego>"
"9380splitHere46","12911427splitHere46","map1"
"9381splitHere46","12911620splitHere46","IllegalStateException"
"9382splitHere46","12911620splitHere46","matcher.group()"
"9383splitHere46","12911620splitHere46","- matcher.matches() //Or<newline46mondego> - matcher.find()<newline46mondego>"
"9384splitHere46","12911620splitHere46","Matcher matcher = pattern.matcher();  <newline46mondego>"
"9385splitHere46","12911620splitHere46","matcher"
"9386splitHere46","12911620splitHere46","if (matcher.matches()) {<newline46mondego>    // Then use `matcher.group()`<newline46mondego>}<newline46mondego>"
"9387splitHere46","12911620splitHere46","if"
"9388splitHere46","12911620splitHere46","false"
"9389splitHere46","12911620splitHere46","matcher.group()"
"9390splitHere46","12911620splitHere46","IllegalStateException"
"9391splitHere46","12911620splitHere46","Matcher"
"9392splitHere46","12911620splitHere46","null"
"9393splitHere46","12911620splitHere46","matcher.group()"
"9394splitHere46","12911620splitHere46","// Suppose this returned the matched string<newline46mondego>Matcher matcher = pattern.matcher(s);  <newline46mondego><newline46mondego>// Need to check whether there was actually a match<newline46mondego>if (matcher != null) {  // Prints only the first match<newline46mondego><newline46mondego>    System.out.println(matcher.group());<newline46mondego>}<newline46mondego>"
"9395splitHere46","12911620splitHere46","null"
"9396splitHere46","12911620splitHere46","Matcher"
"9397splitHere46","12911620splitHere46","matcher.find()"
"9398splitHere46","12911620splitHere46","match"
"9399splitHere46","12911620splitHere46","Matcher"
"9400splitHere46","12911620splitHere46","matching"
"9401splitHere46","12911620splitHere46","Pattern"
"9402splitHere46","12911620splitHere46","pattern"
"9403splitHere46","12911620splitHere46","Pattern.matcher()"
"9404splitHere46","12911620splitHere46","match"
"9405splitHere46","12911620splitHere46","match"
"9406splitHere46","12911620splitHere46","matching"
"9407splitHere46","12911620splitHere46","Matcher"
"9408splitHere46","12911620splitHere46","Matcher matcher = pattern.matcher(s);<newline46mondego><newline46mondego>   // Finds all the matches until found by moving the `matcher` forward<newline46mondego>while(matcher.find()) {<newline46mondego>    System.out.println(matcher.group());<newline46mondego>}<newline46mondego>"
"9409splitHere46","12911620splitHere46","matcher"
"9410splitHere46","12911620splitHere46","Matcher"
"9411splitHere46","12911625splitHere46","<http-conf:conduit name=<doubleQuotes46>*.http-conduit<doubleQuotes46>><newline46mondego>    <http-conf:client ConnectionTimeout=<doubleQuotes46>your connection timeout<doubleQuotes46> ReceiveTimeout=<doubleQuotes46>your receive timeout<doubleQuotes46>/><newline46mondego></http-conf:conduit><newline46mondego>"
"9412splitHere46","12911625splitHere46","import org.apache.cxf.endpoint.Client;<newline46mondego>  import org.apache.cxf.frontend.ClientProxy;<newline46mondego>  import org.apache.cxf.transport.http.HTTPConduit;<newline46mondego>  import org.apache.cxf.transports.http.configuration.HTTPClientPolicy;<newline46mondego>  ...<newline46mondego><newline46mondego>  URL wsdl = getClass().getResource(<doubleQuotes46>wsdl/greeting.wsdl<doubleQuotes46>);<newline46mondego>  SOAPService service = new SOAPService(wsdl, serviceName);<newline46mondego>  Greeter greeter = service.getPort(portName, Greeter.class);<newline46mondego><newline46mondego>  // Okay, are you sick of configuration files ?<newline46mondego>  // This will show you how to configure the http conduit dynamically<newline46mondego>  Client client = ClientProxy.getClient(greeter);<newline46mondego>  HTTPConduit http = (HTTPConduit) client.getConduit();<newline46mondego><newline46mondego>  HTTPClientPolicy httpClientPolicy = new HTTPClientPolicy();<newline46mondego><newline46mondego>  httpClientPolicy.setConnectionTimeout(your connection timeout); <newline46mondego>  httpClientPolicy.setAllowChunking(false);<newline46mondego>  httpClientPolicy.setReceiveTimeout(your receive timeout);<newline46mondego><newline46mondego>  http.setClient(httpClientPolicy);<newline46mondego><newline46mondego>  ...<newline46mondego>  greeter.sayHi(<doubleQuotes46>Hello<doubleQuotes46>);<newline46mondego>"
"9413splitHere46","12911625splitHere46","java.lang.ClassCastException"
"9414splitHere46","12911625splitHere46","com.sun.xml.ws.client.sei.SEIStub"
"9415splitHere46","12911692splitHere46","@org.springframework.data.mongodb.core.mapping.Document<newline46mondego>public class BasicDocument extends BasicDBObject {<newline46mondego><newline46mondego>}<newline46mondego>"
"9416splitHere46","12911692splitHere46","BasicDocument doc = new BasicDocument();<newline46mondego>doc.put(<doubleQuotes46>key<doubleQuotes46>, <doubleQuotes46>value<doubleQuotes46>);<newline46mondego>"
"9417splitHere46","12911802splitHere46","TreeCellRenderer"
"9418splitHere46","12911802splitHere46","JPanel"
"9419splitHere46","12911803splitHere46","10^8^(1/4)"
"9420splitHere46","12911803splitHere46","only upper case letters could be used."
"9421splitHere46","12911803splitHere46","(char) 32"
"9422splitHere46","12911803splitHere46","(char) 255"
"9423splitHere46","12911803splitHere46","static final char[] ENCODE = new char[100];<newline46mondego><newline46mondego>static {<newline46mondego>    int x = 0;<newline46mondego>    for (char i = ' ' + 1; i < 256 && x < 100; i++)<newline46mondego>        if (!Character.isLowerCase(i) && !Character.isWhitespace(i))<newline46mondego>            ENCODE[x++] = i;<newline46mondego>    assert x == ENCODE.length;<newline46mondego>}<newline46mondego><newline46mondego>public static char[] encode(int n) {<newline46mondego>    assert n >= 0 && n < 100000000;<newline46mondego>    char[] ret = new char[4];<newline46mondego>    for (int i = ret.length - 1; i >= 0; i--) {<newline46mondego>        ret[i] = ENCODE[n % 100];<newline46mondego>        n /= 100;<newline46mondego>    }<newline46mondego>    return ret;<newline46mondego>}<newline46mondego><newline46mondego>public static int decode(char[] chars) {<newline46mondego>    int n = 0;<newline46mondego>    for (char ch : chars) {<newline46mondego>        int x = Arrays.binarySearch(ENCODE, ch);<newline46mondego>        assert x >= 0;<newline46mondego>        n = n * 100 + x;<newline46mondego>    }<newline46mondego>    return n;<newline46mondego>}<newline46mondego><newline46mondego>public static void main(String... args) {<newline46mondego>    char[] chars = encode(12345678);<newline46mondego>    System.out.println(<doubleQuotes46>Encoded: <doubleQuotes46> + new String(chars));<newline46mondego>    int n = decode(chars);<newline46mondego>    System.out.println(<doubleQuotes46>Dencoded: <doubleQuotes46> + n);<newline46mondego>}<newline46mondego>"
"9424splitHere46","12911803splitHere46","Encoded: -CY<newline46mondego>Dencoded: 12345678<newline46mondego>"
"9425splitHere46","12911836splitHere46","DayOfWeek.length // no function!<newline46mondego>"
"9426splitHere46","12911836splitHere46","DayOfWeek[i] // operator []<newline46mondego>"
"9427splitHere46","12911898splitHere46","'\b'"
"9428splitHere46","12911898splitHere46","'\t'"
"9429splitHere46","12911898splitHere46","'\n'"
"9430splitHere46","12911898splitHere46","'\f'"
"9431splitHere46","12911898splitHere46","'\r'"
"9432splitHere46","12911898splitHere46","while (ch == ' ' || ch == '\b' || ch == '\t' || ch == '\n' || ch == '\f' || ch == '\r')<newline46mondego>// skip blanks and all esc. seq. with value < ' ' (others, like '\'' might need to be treated)          <newline46mondego>nextCh();<newline46mondego>"
"9433splitHere46","12911898splitHere46","<doubleQuotes46> '\\n' <doubleQuotes46>"
"9434splitHere46","12912055splitHere46","@XmlElementWrapper(name=<doubleQuotes46>orders<doubleQuotes46>)<newline46mondego>  @XmlElement(name=<doubleQuotes46>order<doubleQuotes46>, type=OrderJaxbDao.class)<newline46mondego>  public List<Order> getOrders() { return orders; };<newline46mondego>"
"9435splitHere46","12912055splitHere46","/**<newline46mondego> * Copyright (C) 2011-2012 BITPlan GmbH<newline46mondego> * <newline46mondego> * http://www.bitplan.com<newline46mondego> * <newline46mondego> * generated: 2012-10-16 12:20 with smartGENERATOR<newline46mondego> */<newline46mondego>package com.bitplan.testentity.jaxb;<newline46mondego>import javax.xml.bind.annotation.XmlRootElement;<newline46mondego>import javax.xml.bind.annotation.XmlElement;<newline46mondego>import com.bitplan.testentity.Customer;<newline46mondego><newline46mondego>import java.util.List;<newline46mondego>import com.bitplan.testentity.Order;<newline46mondego>import javax.xml.bind.annotation.XmlElementWrapper;<newline46mondego>import java.util.ArrayList;<newline46mondego><newline46mondego>/**<newline46mondego> * JaxB Data access object for Customer<newline46mondego> * Entity: Customer for container testentity<newline46mondego> * Table: Customer<newline46mondego> */<newline46mondego>@XmlRootElement(name=<doubleQuotes46>Customer<doubleQuotes46>)<newline46mondego>public class CustomerJaxbDao implements Customer {<newline46mondego>  /**<newline46mondego>   * name<newline46mondego>   */<newline46mondego>  private String name;<newline46mondego><newline46mondego>  /**<newline46mondego>   * id<newline46mondego>   */<newline46mondego>  private long id;<newline46mondego><newline46mondego>  /**<newline46mondego>   * orders<newline46mondego>   */<newline46mondego>  private List<Order> orders=new ArrayList<Order>();<newline46mondego><newline46mondego>  /**<newline46mondego>   * getter for name<newline46mondego>   * @return name<newline46mondego>   */<newline46mondego>  @XmlElement(name=<doubleQuotes46>name<doubleQuotes46>)  <newline46mondego>  public String getName() { return name; };<newline46mondego><newline46mondego>  /**<newline46mondego>   * setter for name<newline46mondego>   * @param pname - new value for name<newline46mondego>   */<newline46mondego>  public void setName(String pname) { name=pname; };<newline46mondego><newline46mondego>  /**<newline46mondego>   * getter for id<newline46mondego>   * @return id<newline46mondego>   */<newline46mondego>  @XmlElement(name=<doubleQuotes46>id<doubleQuotes46>)  <newline46mondego>  public long getId() { return id; };<newline46mondego><newline46mondego>  /**<newline46mondego>   * setter for id<newline46mondego>   * @param pid - new value for id<newline46mondego>   */<newline46mondego>  public void setId(long pid) { id=pid; };<newline46mondego><newline46mondego>  /**<newline46mondego>   * getter for orders<newline46mondego>   * @return orders<newline46mondego>   */<newline46mondego>  @XmlElementWrapper(name=<doubleQuotes46>orders<doubleQuotes46>)<newline46mondego>  @XmlElement(name=<doubleQuotes46>order<doubleQuotes46>, type=OrderJaxbDao.class)<newline46mondego>  public List<Order> getOrders() { return orders; };<newline46mondego><newline46mondego>  /**<newline46mondego>   * setter for orders<newline46mondego>   * @param porders - new value for orders<newline46mondego>   */<newline46mondego>  public void setOrders(List<Order> porders) { orders=porders; };<newline46mondego><newline46mondego><newline46mondego>} // CustomerJaxbDao<newline46mondego>"
"9436splitHere46","12912107splitHere46","use=<doubleQuotes46>encoded<doubleQuotes46>"
"9437splitHere46","12912166splitHere46","finish()"
"9438splitHere46","12912166splitHere46","finish()"
"9439splitHere46","12912166splitHere46","onDestory()"
"9440splitHere46","12912166splitHere46","onStop()"
"9441splitHere46","12912166splitHere46","onDestory()"
"9442splitHere46","12912180splitHere46","length-1"
"9443splitHere46","12912180splitHere46","ArrayOutOfBoundsException"
"9444splitHere46","12912180splitHere46","length"
"9445splitHere46","12912180splitHere46","coordinates[0][coordinates[0].length] = values[i]; <newline46mondego>"
"9446splitHere46","12912180splitHere46","coordinates[0][(int)Math.round(i/2.0)] = values[i]; <newline46mondego>"
"9447splitHere46","12912180splitHere46","coordinates[1]..."
"9448splitHere46","12912180splitHere46","(int)Math.round(i/2.0)<newline46mondego>"
"9449splitHere46","12912180splitHere46","i>>1<newline46mondego>"
"9450splitHere46","12912180splitHere46","coordinates[0][i>>1] = values[i]; <newline46mondego>"
"9451splitHere46","12912180splitHere46","coordinates[0][i/2] = values[i]; <newline46mondego>"
"9452splitHere46","12912190splitHere46","prevRespondentId = recordDataList.get(0).getRespondentId(); //Initialize to first or default value probably -1?<newline46mondego><newline46mondego>    for (RecordData recordData : recordDataList) {<newline46mondego>                if (recordData.getRespondentId() != prevRespondentId) {<newline46mondego>                rowDataNumber++;<newline46mondego>            }<newline46mondego>            prevRespondentId = recordData.getRespondentId();<newline46mondego>        }<newline46mondego>"
"9453splitHere46","12912411splitHere46","$EXEC -home <doubleQuotes46>$JAVA_HOME<doubleQuotes46>  -cp $CLASS_PATH -user $USER -outfile $LOG_OUT -errfile $LOG_ERR -pidfile $PID $1 $CLASS -Xmx30M -Djava.rmi.server.hostname=123.234.12.34 -Dcom.sun.management.jmxremote.authenticate=true -Dcom.sun.management.jmxremote.password.file=/fullpath/jmxremote.password -Dcom.sun.management.jmxremote.access.file=/fullpath/jmxremote.access -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=1234<newline46mondego>"
"9454splitHere46","12912411splitHere46","$EXEC -home <doubleQuotes46>$JAVA_HOME<doubleQuotes46>  -cp $CLASS_PATH -user $USER -outfile $LOG_OUT -errfile $LOG_ERR -pidfile $PID -Xmx30M -Djava.rmi.server.hostname=123.234.12.34 -Dcom.sun.management.jmxremote.authenticate=true -Dcom.sun.management.jmxremote.password.file=/fullpath/jmxremote.password -Dcom.sun.management.jmxremote.access.file=/fullpath/jmxremote.access -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=1234 $1 $CLASS <newline46mondego>"
"9455splitHere46","12912411splitHere46","$CLASS"
"9456splitHere46","12912420splitHere46","File => Settings... => Inspections => Serialization issues =>  Serializable class without 'serialVersionUID'"
"9457splitHere46","12912420splitHere46","{ }"
"9458splitHere46","12912493splitHere46","max_connections"
"9459splitHere46","12912493splitHere46","ps ax | grep postgres:<newline46mondego>....<newline46mondego>20528 ?        Ss     0:00 postgres: username dbname clienraddress(48679) idle<newline46mondego>"
"9460splitHere46","12912797splitHere46","\s"
"9461splitHere46","12912797splitHere46","+"
"9462splitHere46","12912797splitHere46","<doubleQuotes46>(\\d+)\\s+(\\d+)\\s+(1$)<doubleQuotes46><newline46mondego>"
"9463splitHere46","12912797splitHere46","*"
"9464splitHere46","12912797splitHere46","+"
"9465splitHere46","12912804splitHere46","this.getClass().isAssignableFrom(o.getClass());<newline46mondego>"
"9466splitHere46","12912804splitHere46","this"
"9467splitHere46","12912804splitHere46","o"
"9468splitHere46","12912817splitHere46","File | Invalidate Caches"
"9469splitHere46","12912922splitHere46","Try this <newline46mondego>select es.p_id,es.weekenddate-( CASE <newline46mondego>                             WHEN SUN != 0 THEN 0 <newline46mondego>                             WHEN SAT != 0 THEN 1 <newline46mondego>                             WHEN FRI != 0 THEN 2 <newline46mondego>                             WHEN THR != 0 THEN 3 <newline46mondego>                             WHEN WED != 0 THEN 4 <newline46mondego>                             WHEN TUE != 0 THEN 5 <newline46mondego>                             ELSE 6 <newline46mondego>                           END )  from(<newline46mondego>select p_id,max(weekenddate)dt from effort_sheet group by p_id<newline46mondego>  )inner,effort_sheet es<newline46mondego>where inner.p_id =es.p_id<newline46mondego>AND inner.dt=es.weekenddate;<newline46mondego>"
"9470splitHere46","12913099splitHere46","// an action method in your backing bean.<newline46mondego>// This will call your search method and set the values behid your dataTable<newline46mondego>public void searchStudents(String pattern) {<newline46mondego>    setStudentsList(findStudent(pattern));<newline46mondego>}<newline46mondego>"
"9471splitHere46","12913099splitHere46","<p:commandButton update=<doubleQuotes46>resultsTable<doubleQuotes46> action=#{studentProvider.findStudent(pattern)}<doubleQuotes46><newline46mondego>"
"9472splitHere46","12913104splitHere46","for (int i = 0; i < recordDataList.size() - 1; i++) {<newline46mondego>    RecordData recordData = recordDataList.get(i);<newline46mondego>    RecordData nextRecordData = recordDataList.get(i + 1);<newline46mondego>"
"9473splitHere46","12913104splitHere46","for (int i = 1; i < recordDataList.size(); i++) {<newline46mondego>    RecordData recordData = recordDataList.get(i - 1);<newline46mondego>    RecordData nextRecordData = recordDataList.get(i);<newline46mondego>"
"9474splitHere46","12913121splitHere46","import java.awt.event.KeyEvent;<newline46mondego><newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JMenu;<newline46mondego>import javax.swing.JMenuBar;<newline46mondego>import javax.swing.JMenuItem;<newline46mondego>import javax.swing.KeyStroke;<newline46mondego>import javax.swing.SwingUtilities;<newline46mondego>import javax.swing.UIManager;<newline46mondego>import javax.swing.UnsupportedLookAndFeelException;<newline46mondego><newline46mondego>public class TestMenu {<newline46mondego><newline46mondego>    protected void initUI() {<newline46mondego>        JFrame frame = new JFrame(TestMenu.class.getSimpleName());<newline46mondego>        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        JMenuBar bar = new JMenuBar();<newline46mondego>        JMenu topMenu = new JMenu(<doubleQuotes46>Top Menu<doubleQuotes46>);<newline46mondego>        JMenu subMenu = new JMenu(<doubleQuotes46>Sub menu<doubleQuotes46>) {<newline46mondego>            private KeyStroke accelerator;<newline46mondego><newline46mondego>            @Override<newline46mondego>            public KeyStroke getAccelerator() {<newline46mondego>                return accelerator;<newline46mondego>            }<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void setAccelerator(KeyStroke keyStroke) {<newline46mondego>                KeyStroke oldAccelerator = accelerator;<newline46mondego>                this.accelerator = keyStroke;<newline46mondego>                repaint();<newline46mondego>                revalidate();<newline46mondego>                firePropertyChange(<doubleQuotes46>accelerator<doubleQuotes46>, oldAccelerator, accelerator);<newline46mondego>            }<newline46mondego>        };<newline46mondego>        subMenu.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_F4, KeyEvent.CTRL_MASK));<newline46mondego>        JMenuItem item1 = new JMenuItem(<doubleQuotes46>Item 1<doubleQuotes46>);<newline46mondego>        JMenuItem item2 = new JMenuItem(<doubleQuotes46>Item 2<doubleQuotes46>);<newline46mondego>        subMenu.add(item1);<newline46mondego>        subMenu.addSeparator();<newline46mondego>        subMenu.add(item2);<newline46mondego>        topMenu.add(subMenu);<newline46mondego>        bar.add(topMenu);<newline46mondego>        frame.setJMenuBar(bar);<newline46mondego>        frame.setSize(400, 300);<newline46mondego>        frame.setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        SwingUtilities.invokeLater(new Runnable() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                try {<newline46mondego>                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());<newline46mondego>                } catch (ClassNotFoundException e) {<newline46mondego>                    // TODO Auto-generated catch block<newline46mondego>                    e.printStackTrace();<newline46mondego>                } catch (InstantiationException e) {<newline46mondego>                    // TODO Auto-generated catch block<newline46mondego>                    e.printStackTrace();<newline46mondego>                } catch (IllegalAccessException e) {<newline46mondego>                    // TODO Auto-generated catch block<newline46mondego>                    e.printStackTrace();<newline46mondego>                } catch (UnsupportedLookAndFeelException e) {<newline46mondego>                    // TODO Auto-generated catch block<newline46mondego>                    e.printStackTrace();<newline46mondego>                }<newline46mondego>                new TestMenu().initUI();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"9475splitHere46","12913155splitHere46","double intimacy = Math.pow(0.5, time / halfLife);<newline46mondego>"
"9476splitHere46","12913155splitHere46","double alpha = 1.0/28;<newline46mondego><newline46mondego>score = (contacted ? 1 : 0) * alpha + score * (1 - alpha); <newline46mondego>"
"9477splitHere46","12913155splitHere46","contacted, prev score, score<newline46mondego>TRUE        40%     42%<newline46mondego>FALSE       42%     41%<newline46mondego>FALSE       41%     39%<newline46mondego>FALSE       39%     38%<newline46mondego>FALSE       38%     36%<newline46mondego>FALSE       36%     35%<newline46mondego>"
"9478splitHere46","12913155splitHere46","double score = 0;<newline46mondego>double alpha = 1.0 / 28;<newline46mondego>boolean contacted = true;<newline46mondego>for (int i = 0; i < 200; i++) {<newline46mondego>    score = (contacted ? 1 : 0) * alpha + score * (1 - alpha);<newline46mondego>    System.out.printf(<doubleQuotes46>%.3f%n<doubleQuotes46>, score);<newline46mondego>}    <newline46mondego>"
"9479splitHere46","12913155splitHere46","0.036<newline46mondego>0.070<newline46mondego>0.103<newline46mondego>... deleted ...<newline46mondego>0.999<newline46mondego>0.999<newline46mondego>0.999<newline46mondego>"
"9480splitHere46","12913155splitHere46","1"
"9481splitHere46","12913163splitHere46","InputStream stream = LocaleManager.class.getClassLoader().getResourceAsStream(path);<newline46mondego>ResourceBundle bundle = new PropertyResourceBundle(new InputStreamReader(stream, <doubleQuotes46>UTF-8<doubleQuotes46>));<newline46mondego><newline46mondego>//get internationalized version for <doubleQuotes46>Swimming<doubleQuotes46><newline46mondego>String str = _(<doubleQuotes46>Swimming<doubleQuotes46>);<newline46mondego><newline46mondego>//create and configure JLabel<newline46mondego>JLabel label = new JLabel();<newline46mondego>label.setVisible(true);<newline46mondego>label.setBackground(Color.yellow);<newline46mondego>label.setOpaque(true);<newline46mondego><newline46mondego>//this line was the issue<newline46mondego>label.setFont(new Font(<doubleQuotes46>Verdana<doubleQuotes46>, Font.PLAIN, 14));<newline46mondego><newline46mondego>//setting text which results in squares<newline46mondego>label.setText(str);<newline46mondego>"
"9482splitHere46","12913171splitHere46","JAX-WS"
"9483splitHere46","12913171splitHere46","SOAPHandler<SOAPMessageContext>"
"9484splitHere46","12913171splitHere46","handleMessage(SAOPMessageContext messageContext)"
"9485splitHere46","12913171splitHere46","handleMessage"
"9486splitHere46","12913188splitHere46","META-INF"
"9487splitHere46","12913188splitHere46","docroot/WEB-INF/ext-impl/src"
"9488splitHere46","12913188splitHere46","ext-spring.xml"
"9489splitHere46","12913188splitHere46","docroot/WEB-INF/ext-impl/src/META-INF"
"9490splitHere46","12913188splitHere46","portal-spring.xml"
"9491splitHere46","12913188splitHere46","portal-impl/src/META-INF/portal-spring.xml"
"9492splitHere46","12913188splitHere46","portal-spring.xml"
"9493splitHere46","12913188splitHere46","ext-spring.xml"
"9494splitHere46","12913188splitHere46","ext-spring.xml"
"9495splitHere46","12913188splitHere46","class"
"9496splitHere46","12913380splitHere46","UCMSMailImpl"
"9497splitHere46","12913380splitHere46","MailSender"
"9498splitHere46","12913380splitHere46","public class UCMSMailImpl implements MailSender {<newline46mondego><newline46mondego>    private JavaMailSenderImpl javaMailImpl;<newline46mondego>    private ConfigDAO configDAO;<newline46mondego><newline46mondego>    // do your property initialization<newline46mondego>    // ...<newline46mondego><newline46mondego>    // implement interface methods<newline46mondego><newline46mondego>    void send(SimpleMailMessage simpleMessage) throws MailException {<newline46mondego>        this.javaMailImpl.send(simpleMessage);<newline46mondego>    }<newline46mondego><newline46mondego>    void send(SimpleMailMessage[] simpleMessages) throws MailException {<newline46mondego>        this.javaMailImpl.send(simpleMEssages);<newline46mondego>    }<newline46mondego>"
"9499splitHere46","12913380splitHere46","public class MyUCMSMailImpl extends UCMSMailImpl implements MailSender {<newline46mondego><newline46mondego>    void send(SimpleMailMessage simpleMessage) throws MailException {<newline46mondego>        this.getgetJavaMailImpl().send(simpleMessage);<newline46mondego>    }<newline46mondego><newline46mondego>    void send(SimpleMailMessage[] simpleMessages) throws MailException {<newline46mondego>        this.getgetJavaMailImpl().send(simpleMEssages);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"9500splitHere46","12913380splitHere46","<bean id=<doubleQuotes46>mailSender<doubleQuotes46> class=<doubleQuotes46>your.package.MyUCMSMailImpl<doubleQuotes46> scope=<doubleQuotes46>prototype<doubleQuotes46> init-method=<doubleQuotes46>configuredProperties<doubleQuotes46>><newline46mondego>    <property name=<doubleQuotes46>javaMailImpl<doubleQuotes46> ref=<doubleQuotes46>javaMailImpl<doubleQuotes46>></property><newline46mondego></bean><newline46mondego>"
"9501splitHere46","12913719splitHere46","<jxb:bindings <newline46mondego>    xmlns:xs=<doubleQuotes46>http://www.w3.org/2001/XMLSchema<doubleQuotes46><newline46mondego>    xmlns:jxb=<doubleQuotes46>http://java.sun.com/xml/ns/jaxb<doubleQuotes46><newline46mondego>    version=<doubleQuotes46>2.1<doubleQuotes46>><newline46mondego><newline46mondego>    <jxb:bindings schemaLocation=<doubleQuotes46>yourSchema.xsd<doubleQuotes46>><newline46mondego>        <jxb:bindings node=<doubleQuotes46>//xs:complexType[@name='existing_type']<doubleQuotes46>><newline46mondego>            <jxb:class ref=<doubleQuotes46>com.existing.Existing<doubleQuotes46>/><newline46mondego>        </jxb:bindings><newline46mondego>    </jxb:bindings><newline46mondego></jxb:bindings><newline46mondego>"
"9502splitHere46","12913719splitHere46","xjc -d outputDir -b binding.xjb yourSchema.xsd<newline46mondego>"
"9503splitHere46","12913765splitHere46","public class ClassUtils {<newline46mondego>  public static boolean isAvailable(String className) {<newline46mondego>    boolean isFound = false;<newline46mondego>    try {<newline46mondego>       Class.forName(className, false, null);<newline46mondego>       isFound = true;<newline46mondego>    }<newline46mondego>    catch (ClassNotFoundException e) {<newline46mondego>       isFound = false;<newline46mondego>    }<newline46mondego>    return isFound;<newline46mondego>  }<newline46mondego><newline46mondego>  public static boolean isJava3dAvailable() {<newline46mondego>   return isAvailable(<doubleQuotes46>javax.media.j3d.View<doubleQuotes46>);<newline46mondego>  }<newline46mondego><newline46mondego>  public static void  main(String args[]) {<newline46mondego>    System.out.println (<doubleQuotes46>JAI <doubleQuotes46> +<newline46mondego>       (ClassUtils.isAvailable(<doubleQuotes46>javax.media.jai.ImageJAI<doubleQuotes46>)?<doubleQuotes46>present<doubleQuotes46>:<doubleQuotes46>missing<doubleQuotes46>));<newline46mondego>    System.out.println (<doubleQuotes46>Java3d <doubleQuotes46> +<newline46mondego>       (ClassUtils.isJava3dAvailable()?<doubleQuotes46>present<doubleQuotes46>:<doubleQuotes46>missing<doubleQuotes46>));<newline46mondego>  }<newline46mondego><newline46mondego>}<newline46mondego>"
"9504splitHere46","12913767splitHere46","static"
"9505splitHere46","12913767splitHere46","public static class Class2 {<newline46mondego>    public void newMethod(){<newline46mondego>        System.out.println(<doubleQuotes46>Second class<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9506splitHere46","12913767splitHere46","Class2"
"9507splitHere46","12913767splitHere46","Class1 outer = new Class1();<newline46mondego>Class2 myObject = outer.new Class2();<newline46mondego>"
"9508splitHere46","12913767splitHere46","Class2 myObject = new Class1().new Class2();<newline46mondego>"
"9509splitHere46","12913841splitHere46","public void upload(FileUploadEvent event) {<newline46mondego>    // Now, store on disk or in DB immediately. Do not assign to a property.<newline46mondego>}<newline46mondego><newline46mondego>public void save() {<newline46mondego>    // Later, during submitting the form, just access them from there.<newline46mondego>}<newline46mondego>"
"9510splitHere46","12913865splitHere46","final Map<Integer, FileDesc> history = new HashMap<>();<newline46mondego>final Set<File> files = new HashSet<>();<newline46mondego>history.put(-1, new FileDesc(basePath, false));<newline46mondego>for (String line : inputLines) {<newline46mondego>  final int indent = indentSize(line);<newline46mondego>  final String fileName = fileName(line);<newline46mondego>  final FileDesc <newline46mondego>    parent = history.get(indent-1),<newline46mondego>    previous = history.get(indent),<newline46mondego>    current = new FileDesc(new File(parent.f, fileName), true);<newline46mondego>  parent.isFile = false;<newline46mondego>  if (previous != null && previous.isFile) files.add(previous.f);<newline46mondego>  history.put(indent, current);<newline46mondego>}<newline46mondego>for (FileDesc desc : history.values())<newline46mondego>  if (desc.isFile) files.add(desc.f);<newline46mondego>"
"9511splitHere46","12913865splitHere46","class FileDesc {<newline46mondego>  final File f;<newline46mondego>  boolean isFile;<newline46mondego>  FileDesc(File f, boolean isFile) { this.f = f; this.isFile = isFile; }<newline46mondego>}<newline46mondego>"
"9512splitHere46","12913967splitHere46","[Ljava.lang.Object;@1ba9f7"
"9513splitHere46","12913967splitHere46","Arrays.asList(mylist)"
"9514splitHere46","12913967splitHere46","for (Object obj: myArray)<newline46mondego>{ <newline46mondego>   System.out.println(obj);<newline46mondego>}<newline46mondego>"
"9515splitHere46","12914170splitHere46","import java.io.BufferedReader;<newline46mondego>import java.io.FileInputStream;<newline46mondego>import java.io.FileNotFoundException;<newline46mondego>import java.io.IOException;<newline46mondego>import java.io.InputStream;<newline46mondego>import java.io.InputStreamReader;<newline46mondego>import java.io.OutputStream;<newline46mondego>import java.net.ServerSocket;<newline46mondego>import java.net.Socket;<newline46mondego>import java.util.StringTokenizer;<newline46mondego><newline46mondego>public class httpServer {<newline46mondego>  public static void main(String args[]) {<newline46mondego>    int port;<newline46mondego>    ServerSocket server_socket;<newline46mondego>    try {<newline46mondego>      port = Integer.parseInt(args[0]);<newline46mondego>    } catch (Exception e) {<newline46mondego>      port = 1500;<newline46mondego>    }<newline46mondego>    try {<newline46mondego><newline46mondego>      server_socket = new ServerSocket(port);<newline46mondego>      System.out.println(<doubleQuotes46>httpServer running on port <doubleQuotes46><newline46mondego>          + server_socket.getLocalPort());<newline46mondego><newline46mondego>      // server infinite loop<newline46mondego>      while (true) {<newline46mondego>        Socket socket = server_socket.accept();<newline46mondego>        System.out.println(<doubleQuotes46>New connection accepted <doubleQuotes46><newline46mondego>            + socket.getInetAddress() + <doubleQuotes46>:<doubleQuotes46> + socket.getPort());<newline46mondego><newline46mondego>        // Construct handler to process the HTTP request message.<newline46mondego>        try {<newline46mondego>          httpRequestHandler request = new httpRequestHandler(socket);<newline46mondego>          // Create a new thread to process the request.<newline46mondego>          Thread thread = new Thread(request);<newline46mondego><newline46mondego>          // Start the thread.<newline46mondego>          thread.start();<newline46mondego>        } catch (Exception e) {<newline46mondego>          System.out.println(e);<newline46mondego>        }<newline46mondego>      }<newline46mondego>    } catch (IOException e) {<newline46mondego>      System.out.println(e);<newline46mondego>    }<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>class httpRequestHandler implements Runnable {<newline46mondego>  final static String CRLF = <doubleQuotes46>\r\n<doubleQuotes46>;<newline46mondego><newline46mondego>  Socket socket;<newline46mondego><newline46mondego>  InputStream input;<newline46mondego><newline46mondego>  OutputStream output;<newline46mondego><newline46mondego>  BufferedReader br;<newline46mondego><newline46mondego>  public httpRequestHandler(Socket socket) throws Exception {<newline46mondego>    this.socket = socket;<newline46mondego>    this.input = socket.getInputStream();<newline46mondego>    this.output = socket.getOutputStream();<newline46mondego>    this.br = new BufferedReader(new InputStreamReader(socket<newline46mondego>        .getInputStream()));<newline46mondego>  }<newline46mondego><newline46mondego>  public void run() {<newline46mondego>    try {<newline46mondego>      processRequest();<newline46mondego>    } catch (Exception e) {<newline46mondego>      System.out.println(e);<newline46mondego>    }<newline46mondego>  }<newline46mondego><newline46mondego>  private void processRequest() throws Exception {<newline46mondego>    while (true) {<newline46mondego><newline46mondego>      String headerLine = br.readLine();<newline46mondego>      System.out.println(headerLine);<newline46mondego>      if (headerLine.equals(CRLF) || headerLine.equals(<doubleQuotes46><doubleQuotes46>))<newline46mondego>        break;<newline46mondego><newline46mondego>      StringTokenizer s = new StringTokenizer(headerLine);<newline46mondego>      String temp = s.nextToken();<newline46mondego><newline46mondego>      if (temp.equals(<doubleQuotes46>GET<doubleQuotes46>)) {<newline46mondego><newline46mondego>        String fileName = s.nextToken();<newline46mondego>        fileName = <doubleQuotes46>.<doubleQuotes46> + fileName;<newline46mondego><newline46mondego>        FileInputStream fis = null;<newline46mondego>        boolean fileExists = true;<newline46mondego>        try {<newline46mondego>          fis = new FileInputStream(fileName);<newline46mondego>        } catch (FileNotFoundException e) {<newline46mondego>          fileExists = false;<newline46mondego>        }<newline46mondego>        String serverLine = <doubleQuotes46>Server: Simple Java Http Server<doubleQuotes46>;<newline46mondego>        String statusLine = null;<newline46mondego>        String contentTypeLine = null;<newline46mondego>        String entityBody = null;<newline46mondego>        String contentLengthLine = <doubleQuotes46>error<doubleQuotes46>;<newline46mondego>        if (fileExists) {<newline46mondego>          statusLine = <doubleQuotes46>HTTP/1.0 200 OK<doubleQuotes46> + CRLF;<newline46mondego>          contentTypeLine = <doubleQuotes46>Content-type: <doubleQuotes46> + contentType(fileName)<newline46mondego>              + CRLF;<newline46mondego>          contentLengthLine = <doubleQuotes46>Content-Length: <doubleQuotes46><newline46mondego>              + (new Integer(fis.available())).toString() + CRLF;<newline46mondego>        } else {<newline46mondego>          statusLine = <doubleQuotes46>HTTP/1.0 404 Not Found<doubleQuotes46> + CRLF;<newline46mondego>          contentTypeLine = <doubleQuotes46>text/html<doubleQuotes46>;<newline46mondego>          entityBody = <doubleQuotes46><HTML><doubleQuotes46><newline46mondego>              + <doubleQuotes46><HEAD><TITLE>404 Not Found</TITLE></HEAD><doubleQuotes46><newline46mondego>              + <doubleQuotes46><BODY>404 Not Found<doubleQuotes46><newline46mondego>              + <doubleQuotes46><newline46mondego>usage:http://yourHostName:port/<doubleQuotes46><newline46mondego>              + <doubleQuotes46>fileName.html</BODY></HTML><doubleQuotes46>;<newline46mondego>        }<newline46mondego><newline46mondego>        // Send the status line.<newline46mondego>        output.write(statusLine.getBytes());<newline46mondego>        System.out.println(statusLine);<newline46mondego><newline46mondego>        // Send the server line.<newline46mondego>        output.write(serverLine.getBytes());<newline46mondego>        System.out.println(serverLine);<newline46mondego><newline46mondego>        // Send the content type line.<newline46mondego>        output.write(contentTypeLine.getBytes());<newline46mondego>        System.out.println(contentTypeLine);<newline46mondego><newline46mondego>        // Send the Content-Length<newline46mondego>        output.write(contentLengthLine.getBytes());<newline46mondego>        System.out.println(contentLengthLine);<newline46mondego><newline46mondego>        // Send a blank line to indicate the end of the header lines.<newline46mondego>        output.write(CRLF.getBytes());<newline46mondego>        System.out.println(CRLF);<newline46mondego><newline46mondego>        // Send the entity body.<newline46mondego>        if (fileExists) {<newline46mondego>          sendBytes(fis, output);<newline46mondego>          fis.close();<newline46mondego>        } else {<newline46mondego>          output.write(entityBody.getBytes());<newline46mondego>        }<newline46mondego><newline46mondego>      }<newline46mondego>    }<newline46mondego><newline46mondego>    try {<newline46mondego>      output.close();<newline46mondego>      br.close();<newline46mondego>      socket.close();<newline46mondego>    } catch (Exception e) {<newline46mondego>    }<newline46mondego>  }<newline46mondego><newline46mondego>  private static void sendBytes(FileInputStream fis, OutputStream os)<newline46mondego>      throws Exception {<newline46mondego><newline46mondego>    byte[] buffer = new byte[1024];<newline46mondego>    int bytes = 0;<newline46mondego><newline46mondego>    while ((bytes = fis.read(buffer)) != -1) {<newline46mondego>      os.write(buffer, 0, bytes);<newline46mondego>    }<newline46mondego>  }<newline46mondego><newline46mondego>  private static String contentType(String fileName) {<newline46mondego>    if (fileName.endsWith(<doubleQuotes46>.htm<doubleQuotes46>) || fileName.endsWith(<doubleQuotes46>.html<doubleQuotes46>)<newline46mondego>        || fileName.endsWith(<doubleQuotes46>.txt<doubleQuotes46>)) {<newline46mondego>      return <doubleQuotes46>text/html<doubleQuotes46>;<newline46mondego>    } else if (fileName.endsWith(<doubleQuotes46>.jpg<doubleQuotes46>) || fileName.endsWith(<doubleQuotes46>.jpeg<doubleQuotes46>)) {<newline46mondego>      return <doubleQuotes46>image/jpeg<doubleQuotes46>;<newline46mondego>    } else if (fileName.endsWith(<doubleQuotes46>.gif<doubleQuotes46>)) {<newline46mondego>      return <doubleQuotes46>image/gif<doubleQuotes46>;<newline46mondego>    } else {<newline46mondego>      return <doubleQuotes46>application/octet-stream<doubleQuotes46>;<newline46mondego>    }<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"9516splitHere46","12914217splitHere46","Long"
"9517splitHere46","12914217splitHere46","id"
"9518splitHere46","12914217splitHere46","long"
"9519splitHere46","12914217splitHere46","public static Result show(Long id) {<newline46mondego>    return ok(<doubleQuotes46>hello <doubleQuotes46> + id);<newline46mondego>}<newline46mondego>"
"9520splitHere46","12914222splitHere46","package org.openqa.selenium;<newline46mondego><newline46mondego>    public enum UnexpectedAlertBehaviour {<newline46mondego><newline46mondego>      ACCEPT (<doubleQuotes46>accept<doubleQuotes46>),<newline46mondego>      DISMISS (<doubleQuotes46>dismiss<doubleQuotes46>),<newline46mondego>      IGNORE (<doubleQuotes46>ignore<doubleQuotes46>)<newline46mondego>      ;<newline46mondego><newline46mondego>      private String text;<newline46mondego><newline46mondego>      private UnexpectedAlertBehaviour(String text) {<newline46mondego>        this.text = text;<newline46mondego>      }<newline46mondego><newline46mondego>      @Override<newline46mondego>      public String toString() {<newline46mondego>        return String.valueOf(text);<newline46mondego>      }<newline46mondego><newline46mondego>      public static UnexpectedAlertBehaviour fromString(String text) {<newline46mondego>        if (text != null) {<newline46mondego>          for (UnexpectedAlertBehaviour b : UnexpectedAlertBehaviour.values()) {<newline46mondego>            if (text.equalsIgnoreCase(b.text)) {<newline46mondego>              return b;<newline46mondego>            }<newline46mondego>          }<newline46mondego>        }<newline46mondego>        return null;<newline46mondego>      }<newline46mondego>    }<newline46mondego>"
"9521splitHere46","12914222splitHere46","try{<newline46mondego>alert.accept();<newline46mondego>}<newline46mondego><newline46mondego>catch(org.openqa.selenium.UnexpectedAlertBehaviour){<newline46mondego>///...blablabla<newline46mondego>}<newline46mondego>"
"9522splitHere46","12914329splitHere46","AlgorithmIdentifier signatureAlgorithm = new DefaultSignatureAlgorithmIdentifierFinder()<newline46mondego>        .find(<doubleQuotes46>SHA1WITHRSA<doubleQuotes46>);<newline46mondego>AlgorithmIdentifier digestAlgorithm = new DefaultDigestAlgorithmIdentifierFinder().find(<doubleQuotes46>SHA-1<doubleQuotes46>);<newline46mondego>ContentSigner signer = new BcRSAContentSignerBuilder(signatureAlgorithm, digestAlgorithm).build(keyParam);<newline46mondego>SubjectPublicKeyInfo publicKeyInfo = new SubjectPublicKeyInfo(signatureAlgorithm, pair.getPublic().getEncoded());<newline46mondego>"
"9523splitHere46","12914329splitHere46","String principal = <doubleQuotes46>CN=company1, OU=company1, O=company1, C=GB<doubleQuotes46>;<newline46mondego>AsymmetricKeyParameter privateKey = PrivateKeyFactory.createKey(pair.getPrivate().getEncoded());<newline46mondego>AlgorithmIdentifier signatureAlgorithm = new DefaultSignatureAlgorithmIdentifierFinder()<newline46mondego>        .find(<doubleQuotes46>SHA1WITHRSA<doubleQuotes46>);<newline46mondego>AlgorithmIdentifier digestAlgorithm = new DefaultDigestAlgorithmIdentifierFinder().find(<doubleQuotes46>SHA-1<doubleQuotes46>);<newline46mondego>ContentSigner signer = new BcRSAContentSignerBuilder(signatureAlgorithm, digestAlgorithm).build(privateKey);<newline46mondego><newline46mondego>PKCS10CertificationRequestBuilder csrBuilder = new JcaPKCS10CertificationRequestBuilder(new X500Name(<newline46mondego>        principal), pair.getPublic());<newline46mondego>ExtensionsGenerator extensionsGenerator = new ExtensionsGenerator();<newline46mondego>extensionsGenerator.addExtension(X509Extension.basicConstraints, true, new BasicConstraints(true));<newline46mondego>extensionsGenerator.addExtension(X509Extension.keyUsage, true, new KeyUsage(KeyUsage.keyCertSign<newline46mondego>        | KeyUsage.cRLSign));<newline46mondego>csrBuilder.addAttribute(PKCSObjectIdentifiers.pkcs_9_at_extensionRequest, extensionsGenerator.generate());<newline46mondego>csr = csrBuilder.build(signer);<newline46mondego>"
"9524splitHere46","12914347splitHere46","fileChooser.rescanCurrentDirectory();<newline46mondego>"
"9525splitHere46","12914469splitHere46","<? extends Foo<?>>"
"9526splitHere46","12914469splitHere46","interface Foo<T> {     <newline46mondego>    void frob(Message<T, ? extends Foo<?>> message); <newline46mondego>} <newline46mondego>"
"9527splitHere46","12914560splitHere46","Class clazz = getType();<newline46mondego>A instance = clazz.newInstance();<newline46mondego>"
"9528splitHere46","12914560splitHere46","public Class<? extends A> getType(){...}<newline46mondego>"
"9529splitHere46","12914560splitHere46","Class<? extends A> clazz = getType();<newline46mondego>A instance = clazz.newInstance();<newline46mondego>"
"9530splitHere46","12914732splitHere46","globalBindings"
"9531splitHere46","12914732splitHere46","<xs:element name=<doubleQuotes46>globalBindings<doubleQuotes46>><newline46mondego>    <xs:annotation><newline46mondego>      <xs:documentation>Customization values defined in global scope.</xs:documentation><newline46mondego>    </xs:annotation><newline46mondego>    <xs:complexType><newline46mondego>      <xs:sequence minOccurs=<doubleQuotes46>0<doubleQuotes46>><newline46mondego>        <xs:element ref=<doubleQuotes46>jaxb:javaType<doubleQuotes46> minOccurs=<doubleQuotes46>0<doubleQuotes46> maxOccurs=<doubleQuotes46>unbounded<doubleQuotes46> /><newline46mondego>        <xs:element ref=<doubleQuotes46>jaxb:serializable<doubleQuotes46> minOccurs=<doubleQuotes46>0<doubleQuotes46> /><newline46mondego>        <xs:any namespace=<doubleQuotes46>##other<doubleQuotes46> processContents=<doubleQuotes46>lax<doubleQuotes46>><newline46mondego>          <xs:annotation><newline46mondego>            <xs:documentation>allows extension binding declarations to be specified.</xs:documentation><newline46mondego>          </xs:annotation><newline46mondego>        </xs:any><newline46mondego>      </xs:sequence><newline46mondego>      ...<newline46mondego>    </xs:complexType><newline46mondego>"
"9532splitHere46","12914732splitHere46","<xs:element name=<doubleQuotes46>globalBindings<doubleQuotes46>><newline46mondego>    <xs:annotation><newline46mondego>      <xs:documentation>Customization values defined in global scope.</xs:documentation><newline46mondego>    </xs:annotation><newline46mondego>    <xs:complexType><newline46mondego>      <xs:sequence minOccurs=<doubleQuotes46>0<doubleQuotes46>><newline46mondego>        <xs:element ref=<doubleQuotes46>jaxb:javaType<doubleQuotes46> minOccurs=<doubleQuotes46>0<doubleQuotes46> maxOccurs=<doubleQuotes46>unbounded<doubleQuotes46> /><newline46mondego>        <xs:element ref=<doubleQuotes46>jaxb:serializable<doubleQuotes46> minOccurs=<doubleQuotes46>0<doubleQuotes46> /><newline46mondego>        <xs:any namespace=<doubleQuotes46>##other<doubleQuotes46> processContents=<doubleQuotes46>lax<doubleQuotes46> minOccurs=<doubleQuotes46>0<doubleQuotes46> maxOccurs=<doubleQuotes46>unbounded<doubleQuotes46>><newline46mondego>          <xs:annotation><newline46mondego>            <xs:documentation>allows extension binding declarations to be specified.</xs:documentation><newline46mondego>          </xs:annotation><newline46mondego>        </xs:any><newline46mondego>      </xs:sequence><newline46mondego>      ...<newline46mondego>    </xs:complexType><newline46mondego>"
"9533splitHere46","12914732splitHere46","minOccurs=<doubleQuotes46>0<doubleQuotes46> maxOccurs=<doubleQuotes46>unbounded<doubleQuotes46>"
"9534splitHere46","12914732splitHere46","<xs:any />"
"9535splitHere46","12914732splitHere46","globalBindings"
"9536splitHere46","12914750splitHere46","XmlAdapter"
"9537splitHere46","12914750splitHere46","XmlAdapter"
"9538splitHere46","12914750splitHere46","String"
"9539splitHere46","12914750splitHere46","package forum12914382;<newline46mondego><newline46mondego>import javax.xml.bind.annotation.XmlAttribute;<newline46mondego>import javax.xml.bind.annotation.adapters.XmlAdapter;<newline46mondego><newline46mondego>public class MyFieldAdapter extends XmlAdapter<MyFieldAdapter.AdaptedMyField, String> {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public String unmarshal(AdaptedMyField v) throws Exception {<newline46mondego>        return v.value;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public AdaptedMyField marshal(String v) throws Exception {<newline46mondego>        AdaptedMyField amf = new AdaptedMyField();<newline46mondego>        amf.value = v;<newline46mondego>        return amf;<newline46mondego>    }<newline46mondego><newline46mondego>    public static class AdaptedMyField {<newline46mondego><newline46mondego>        @XmlAttribute<newline46mondego>        public String value;<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"9540splitHere46","12914750splitHere46","package forum12914382;<newline46mondego><newline46mondego>import javax.xml.bind.annotation.*;<newline46mondego>import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;<newline46mondego><newline46mondego>@XmlRootElement(name=<doubleQuotes46>Example<doubleQuotes46>)<newline46mondego>@XmlAccessorType(XmlAccessType.FIELD)<newline46mondego>class Example{<newline46mondego><newline46mondego>    @XmlJavaTypeAdapter(MyFieldAdapter.class)<newline46mondego>    String myField;<newline46mondego><newline46mondego>}<newline46mondego>"
"9541splitHere46","12914750splitHere46","package forum12914382;<newline46mondego><newline46mondego>import java.io.File;<newline46mondego>import javax.xml.bind.*;<newline46mondego><newline46mondego>public class Demo {<newline46mondego><newline46mondego>    public static void main(String[] args) throws Exception {<newline46mondego>        JAXBContext jc = JAXBContext.newInstance(Example.class);<newline46mondego><newline46mondego>        Unmarshaller unmarshaller = jc.createUnmarshaller();<newline46mondego>        File xml = new File(<doubleQuotes46>src/forum12914382/input.xml<doubleQuotes46>);<newline46mondego>        Example example = (Example) unmarshaller.unmarshal(xml);<newline46mondego><newline46mondego>        Marshaller marshaller = jc.createMarshaller();<newline46mondego>        marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);<newline46mondego>        marshaller.marshal(example, System.out);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"9542splitHere46","12914750splitHere46","<Example><newline46mondego>  <myField value=<doubleQuotes46>someValue<doubleQuotes46> /><newline46mondego></Example><newline46mondego>"
"9543splitHere46","12914979splitHere46","printDateTime(Object, Locale)"
"9544splitHere46","12914979splitHere46","} else if (arg instanceof Date) {<newline46mondego>    // Note that the following method uses an instance of the<newline46mondego>    // default time zone (TimeZone.getDefaultRef().<newline46mondego>    cal = Calendar.getInstance(l);<newline46mondego>    cal.setTime((Date)arg);<newline46mondego>    } else if (arg instanceof Calendar) {<newline46mondego>    cal = (Calendar) ((Calendar)arg).clone();<newline46mondego>    cal.setLenient(true);<newline46mondego>    } else {<newline46mondego>"
"9545splitHere46","12914979splitHere46","String.format"
"9546splitHere46","12914979splitHere46","Calendar.getInstance(Locale)"
"9547splitHere46","12914979splitHere46","Calendar"
"9548splitHere46","12915084splitHere46","#Some bad passwords<newline46mondego>username.bob=password<newline46mondego>username.scott=tiger<newline46mondego>username.admin=admin<newline46mondego>"
"9549splitHere46","12915084splitHere46","String password = config.getProperty(<doubleQuotes46>username.<doubleQuotes46> + usr.toString());<newline46mondego>if (password != null && password.equals(pwd.toString())) {<newline46mondego>  new DocMenu();<newline46mondego>  lgFrame.dispose();<newline46mondego>} else {<newline46mondego>  JOptionPane.showMessageDialog(lgFrame, <doubleQuotes46>Wrong credentials try again<doubleQuotes46>, <doubleQuotes46>Oops<doubleQuotes46>, JOptionPane.ERROR_MESSAGE);<newline46mondego>}<newline46mondego>"
"9550splitHere46","12915205splitHere46","CardLayout"
"9551splitHere46","12915205splitHere46","public void show(Container parent,       String name)"
"9552splitHere46","12915205splitHere46","cardView.show(cardPanel, <doubleQuotes46>New<doubleQuotes46>);"
"9553splitHere46","12915205splitHere46","(insted of cardView.show(newPanel, <doubleQuotes46>New<doubleQuotes46>);)"
"9554splitHere46","12915205splitHere46","newPanel as Container"
"9555splitHere46","12915205splitHere46","String"
"9556splitHere46","12915752splitHere46","MSH|^~\&|||||20121011140541.133+0200||MFN^M01|1|T|2.3<newline46mondego>MFI|Partners|^Sap|UIZ|||NE<newline46mondego>MFE|MUP|||0000040001<newline46mondego>ZBP|0000040001|100|Something||||3000|Bern||||<newline46mondego>MFE|MUP|||0000040002<newline46mondego>ZBP|0000040002|100|Otherthing||||8000|Zurich||||<newline46mondego>"
"9557splitHere46","12916072splitHere46","tail -f <logfile>"
"9558splitHere46","12916072splitHere46","ssh"
"9559splitHere46","12916072splitHere46","ProcessBuilder"
"9560splitHere46","12916072splitHere46","rsync"
"9561splitHere46","12916072splitHere46","rsync"
"9562splitHere46","12916072splitHere46","ssh"
"9563splitHere46","12916072splitHere46","rsync"
"9564splitHere46","12916107splitHere46","public class A|bc"
"9565splitHere46","12916107splitHere46","Abc"
"9566splitHere46","12916153splitHere46","ObjectInputStream"
"9567splitHere46","12916153splitHere46","at java.io.ObjectInputStream.<init>(ObjectInputStream.java:279)<newline46mondego>"
"9568splitHere46","12916153splitHere46","ObjectOutputStream"
"9569splitHere46","12916194splitHere46","for(int i=1; i <= 10; i++) {<newline46mondego>    Department department = new Department(<doubleQuotes46>Test Department<doubleQuotes46>);<newline46mondego>    Employee e = new Employee(<doubleQuotes46>EMP<doubleQuotes46> + i, department);<newline46mondego>    em.persist(e);<newline46mondego>}<newline46mondego>"
"9570splitHere46","12916294splitHere46","HttpURLConnection"
"9571splitHere46","12916294splitHere46","String uri =<newline46mondego>    <doubleQuotes46>http://localhost:8080/CustomerService/rest/customers/1<doubleQuotes46>;<newline46mondego>URL url = new URL(uri);<newline46mondego>HttpURLConnection connection =<newline46mondego>    (HttpURLConnection) url.openConnection();<newline46mondego>connection.setRequestMethod(<doubleQuotes46>GET<doubleQuotes46>);<newline46mondego>connection.setRequestProperty(<doubleQuotes46>Accept<doubleQuotes46>, <doubleQuotes46>application/xml<doubleQuotes46>);<newline46mondego><newline46mondego>JAXBContext jc = JAXBContext.newInstance(Customer.class);<newline46mondego>InputStream xml = connection.getInputStream();<newline46mondego>Customer customer =<newline46mondego>    (Customer) jc.createUnmarshaller().unmarshal(xml);<newline46mondego><newline46mondego>connection.disconnect();<newline46mondego>"
"9572splitHere46","12916316splitHere46","int connectiontimeout = 1000; //1 second<newline46mondego>int sockettimeout = 1000;<newline46mondego><newline46mondego>HttpParams httpparameters = new BasicHttpParams();<newline46mondego><newline46mondego>HttpConnectionParams.setConnectionTimeout(httpparameters, connectiontimeout);<newline46mondego>HttpConnectionParams.setSoTimeout(httpparameters, sockettimeout);<newline46mondego><newline46mondego>HttpClient httpclient = new DefaultHttpClient(httpparameters);<newline46mondego>"
"9573splitHere46","12916377splitHere46","java.sql.Date d= new java.sql.Date(format.parse(source).getTime());<newline46mondego>"
"9574splitHere46","12916377splitHere46","java.sql.Date d=(Date) format.parse(source);<newline46mondego>"
"9575splitHere46","12916377splitHere46","java.util.Date"
"9576splitHere46","12916377splitHere46","java.sql.Date"
"9577splitHere46","12916452splitHere46","input.legnth()"
"9578splitHere46","12916452splitHere46","while(!stack.empty()) {<newline46mondego>        String char1 = stack.pop();<newline46mondego>        String char2 = queue.dequeue();<newline46mondego>        if (!(char1.equalsIgnoreCase(char2))) {<newline46mondego>            diff++;<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"9579splitHere46","12916513splitHere46","JFrame frame = new JFrame();<newline46mondego>frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>frame.setBounds(0, 0, 1024, 768);<newline46mondego><newline46mondego>JDialog paletteWindow = new JDialog(frame, false);<newline46mondego>paletteWindow.setDefaultCloseOperation(JDialog.DO_NOTHING_ON_CLOSE);<newline46mondego>paletteWindow.setResizable(false);<newline46mondego>paletteWindow.setFocusableWindowState(false);<newline46mondego>paletteWindow.setBounds(1024, 0, 320, 768);<newline46mondego><newline46mondego>JTable grid = new JTable(new DefaultTableModel(new String[] {<doubleQuotes46>Name<doubleQuotes46>, <doubleQuotes46>Value<doubleQuotes46>}, 5)) {<newline46mondego>    private KeyEventDispatcher dispatcher;<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Component getEditorComponent() {<newline46mondego>        final Component c = super.getEditorComponent();<newline46mondego>        if (dispatcher == null) {<newline46mondego>            dispatcher = new KeyEventDispatcher() {<newline46mondego>                public boolean dispatchKeyEvent(KeyEvent e) {<newline46mondego>                    e.setSource(c);<newline46mondego>                    for (KeyListener keyListener : c.getKeyListeners()) {<newline46mondego>                        if (e.getID() == KeyEvent.KEY_PRESSED) {<newline46mondego>                            keyListener.keyPressed(e);<newline46mondego>                        } else if (e.getID() == KeyEvent.KEY_RELEASED) {<newline46mondego>                            keyListener.keyReleased(e);<newline46mondego>                        } else if (e.getID() == KeyEvent.KEY_TYPED) {<newline46mondego>                            keyListener.keyTyped(e);<newline46mondego>                        }<newline46mondego>                    }<newline46mondego>                    return false;<newline46mondego>                }<newline46mondego>            };<newline46mondego>            KeyboardFocusManager.getCurrentKeyboardFocusManager().addKeyEventDispatcher(dispatcher);<newline46mondego>        }<newline46mondego>        return c;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void removeEditor() {<newline46mondego>        if (dispatcher != null) {<newline46mondego>            KeyboardFocusManager.getCurrentKeyboardFocusManager().removeKeyEventDispatcher(dispatcher);<newline46mondego>            dispatcher = null;<newline46mondego>        }<newline46mondego>        super.removeEditor();<newline46mondego>    }<newline46mondego>};<newline46mondego>paletteWindow.getContentPane().add(new JScrollPane(grid));<newline46mondego><newline46mondego>frame.setVisible(true);<newline46mondego>paletteWindow.setVisible(true);<newline46mondego>"
"9580splitHere46","12916623splitHere46","scrollPane.getVerticalScrollBar().addAdjustmentListener(new AdjustmentListener() {<newline46mondego>    @Override<newline46mondego>    public void adjustmentValueChanged(AdjustmentEvent ae) {<newline46mondego>        int extent = scrollPane.getVerticalScrollBar().getModel().getExtent();<newline46mondego>        System.out.println(<doubleQuotes46>Value: <doubleQuotes46> + (scrollPane.getVerticalScrollBar().getValue()+extent) + <doubleQuotes46> Max: <doubleQuotes46> + scrollPane.getVerticalScrollBar().getMaximum());<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9581splitHere46","12916623splitHere46","scrollPane.getVerticalScrollBar().addAdjustmentListener(new AdjustmentListener() {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void adjustmentValueChanged(AdjustmentEvent event) {<newline46mondego>        JScrollBar scrollBar = (JScrollBar) event.getAdjustable();<newline46mondego>        int extent = scrollBar.getModel().getExtent();<newline46mondego>        System.out.println(<doubleQuotes46>1. Value: <doubleQuotes46> + (scrollBar.getValue() + extent) + <doubleQuotes46> Max: <doubleQuotes46> + scrollBar.getMaximum());<newline46mondego><newline46mondego>    }<newline46mondego>});<newline46mondego>"
"9582splitHere46","12916623splitHere46","scrollPane.getVerticalScrollBar().getModel().addChangeListener(new ChangeListener() {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void stateChanged(ChangeEvent event) {<newline46mondego>        BoundedRangeModel model = (BoundedRangeModel) event.getSource();<newline46mondego>        int extent = model.getExtent();<newline46mondego>        int maximum = model.getMaximum();<newline46mondego>        int value = model.getValue();<newline46mondego><newline46mondego>        System.out.println(<doubleQuotes46>2. Value: <doubleQuotes46> + (value + extent) + <doubleQuotes46> Max: <doubleQuotes46> + maximum);<newline46mondego><newline46mondego>    }<newline46mondego>});<newline46mondego>"
"9583splitHere46","12916624splitHere46","future.cancel(true);"
"9584splitHere46","12916624splitHere46","volatile boolean shutdown"
"9585splitHere46","12916624splitHere46","ThreadHandler"
"9586splitHere46","12916624splitHere46","Thread.currentThread().isInterrupted()"
"9587splitHere46","12916624splitHere46","InterruptedException"
"9588splitHere46","12916625splitHere46","ArrayList<String>.toArray()"
"9589splitHere46","12916625splitHere46","NullPointerException"
"9590splitHere46","12916625splitHere46","currentRoutine"
"9591splitHere46","12916625splitHere46","currentRoutine.Names"
"9592splitHere46","12916625splitHere46","null"
"9593splitHere46","12916625splitHere46","routineArrayList"
"9594splitHere46","12916625splitHere46","Names"
"9595splitHere46","12916678splitHere46","filteredValue=<doubleQuotes46>#{testBean.filteredList}<doubleQuotes46><newline46mondego>"
"9596splitHere46","12916723splitHere46","instanceof"
"9597splitHere46","12916723splitHere46","// in one class<newline46mondego>ClassA classA = new ClassA(); // package1.ClassA<newline46mondego>another.test(classA);<newline46mondego><newline46mondego>// calls in another class<newline46mondego>public void test(Object o) {<newline46mondego>   if (o instanceof ClassA) // package2.ClassA => false <newline46mondego>"
"9598splitHere46","12916723splitHere46","o.getClass().getName()"
"9599splitHere46","12916723splitHere46","instanceof"
"9600splitHere46","12916723splitHere46","null"
"9601splitHere46","12916723splitHere46","null instanceof ClassB"
"9602splitHere46","12916723splitHere46","null"
"9603splitHere46","12916762splitHere46","timeout"
"9604splitHere46","12916762splitHere46","urlconn.setConnectTimeout(10000);<newline46mondego>  urlconn.setReadTimeout(10000);<newline46mondego>"
"9605splitHere46","12916762splitHere46","http"
"9606splitHere46","12916762splitHere46","html"
"9607splitHere46","12916762splitHere46","usage/need"
"9608splitHere46","12917016splitHere46","File.listFiles()"
"9609splitHere46","12917016splitHere46","File"
"9610splitHere46","12917016splitHere46","WatchService"
"9611splitHere46","12917186splitHere46","countTokens"
"9612splitHere46","12917186splitHere46","String[] array = new String[(string.countTokens)]; // Incorrect<newline46mondego>String[] array = new String[(string.countTokens())]; // Correct<newline46mondego>"
"9613splitHere46","12917186splitHere46","+"
"9614splitHere46","12917186splitHere46","s123+12"
"9615splitHere46","12917186splitHere46","ID s123 worked 12 hours this week"
"9616splitHere46","12917186splitHere46","Scanner input = new Scanner(System.in);<newline46mondego><newline46mondego>System.out.println(<doubleQuotes46>\n<doubleQuotes46>);<newline46mondego>System.out.print(<doubleQuotes46>Please Enter ID and hours-worked in a given week: <doubleQuotes46>);<newline46mondego>String enteredString = input.nextLine();<newline46mondego><newline46mondego>while (!enteredString.isEmpty()) {<newline46mondego>    StringTokenizer stringtok = new StringTokenizer(enteredString, <doubleQuotes46>+<doubleQuotes46>);<newline46mondego>    String id = stringtok.nextToken();<newline46mondego>    Double hours = Double.parseDouble(stringtok.nextToken());<newline46mondego><newline46mondego>    for (int i = 0; i < 5; i++) {<newline46mondego>        if (worklist[i].getWorkerID().equals(id)) {<newline46mondego>            worklist[i].addWeekly(hours);<newline46mondego>            break;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    System.out.println(<doubleQuotes46>\n<doubleQuotes46>);<newline46mondego>    System.out.print(<doubleQuotes46>Please Enter ID and hours-worked in a given week: <doubleQuotes46>);<newline46mondego>    enteredString = input.nextLine();<newline46mondego>}<newline46mondego><newline46mondego>for (int i = 0; i < 5; i++) {<newline46mondego>    worklist[i].gross();<newline46mondego>    worklist[i].netAndTax();<newline46mondego>    worklist[i].displaySalary();<newline46mondego>}<newline46mondego>"
"9617splitHere46","12917253splitHere46","^"
"9618splitHere46","12917253splitHere46","$"
"9619splitHere46","12917253splitHere46","."
"9620splitHere46","12917253splitHere46","[^@]"
"9621splitHere46","12917253splitHere46","@"
"9622splitHere46","12917253splitHere46","string.replaceAll(<doubleQuotes46>@[^@]*@<doubleQuotes46>, <doubleQuotes46>kicked<doubleQuotes46>);<newline46mondego>"
"9623splitHere46","12917253splitHere46","he@ll@o"
"9624splitHere46","12917253splitHere46","hekikkedo"
"9625splitHere46","12917253splitHere46","\b"
"9626splitHere46","12917253splitHere46","string.replaceAll(<doubleQuotes46>\\b@[^@]*@\\b<doubleQuotes46>, <doubleQuotes46>kicked<doubleQuotes46>);<newline46mondego>"
"9627splitHere46","12917280splitHere46","Arrays"
"9628splitHere46","12917280splitHere46","Object.toString()"
"9629splitHere46","12917280splitHere46","System.out.println(java.util.Arrays.toString(totals)); <newline46mondego>"
"9630splitHere46","12917284splitHere46","public class test<newline46mondego>{<newline46mondego>    public static void main(String[] args)<newline46mondego>    {<newline46mondego>        System.out.println(<doubleQuotes46>Hello World!<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9631splitHere46","12917284splitHere46","cd C:\Users\Aimad\Desktop<newline46mondego>java test<newline46mondego>"
"9632splitHere46","12917338splitHere46","private Long version;"
"9633splitHere46","12917418splitHere46","public void testEntityObject()<newline46mondego>{<newline46mondego>    System.out.println(<doubleQuotes46>Let's try our Entity Object...<doubleQuotes46>);<newline46mondego><newline46mondego>    try<newline46mondego>    {<newline46mondego>        EntityDefImpl entity = TesteEOImpl.getDefinitionObject();<newline46mondego>        TesteEOImpl ti = (TesteEOImpl)entity.createInstance2(getDBTransaction(), null);<newline46mondego>        ti.setId(new BigDecimal(123));<newline46mondego>        ti.setNome(<doubleQuotes46>Entity Object test...<doubleQuotes46>);<newline46mondego><newline46mondego>        getDBTransaction().commit();<newline46mondego><newline46mondego>        System.out.println(<doubleQuotes46>Looks good :-)<doubleQuotes46>);<newline46mondego>    }<newline46mondego>    catch(Exception e) <newline46mondego>    {<newline46mondego>        System.out.println(<doubleQuotes46>It seems something went wrong :-(<doubleQuotes46>);<newline46mondego>        e.printStackTrace();<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public void testViewObject() {<newline46mondego>    System.out.println(<doubleQuotes46>Let's try our View Object...<doubleQuotes46>);<newline46mondego><newline46mondego>            ViewObjectImpl vo = this.getTeste1();<newline46mondego><newline46mondego>        try{<newline46mondego>            Row row = vo.createRow();<newline46mondego>            row.setAttribute(<doubleQuotes46>Id<doubleQuotes46>, 234);<newline46mondego>            row.setAttribute(<doubleQuotes46>Nome<doubleQuotes46>, <doubleQuotes46>VO test<doubleQuotes46>);<newline46mondego>            vo.insertRow(row);<newline46mondego>            getDBTransaction().commit();<newline46mondego>            System.out.println(<doubleQuotes46>Looks good :-)<doubleQuotes46>)<newline46mondego>        }<newline46mondego>        catch(Exception e) {<newline46mondego>            System.out.println(<doubleQuotes46>It seems something went wrong :-(<doubleQuotes46>);<newline46mondego>            e.printStackTrace();<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego>"
"9634splitHere46","12917418splitHere46","public String cb1_action() {<newline46mondego><newline46mondego>    try{<newline46mondego>    FacesContext fctx = FacesContext.getCurrentInstance(); <newline46mondego>    BindingContext bindingContext = BindingContext.getCurrent();<newline46mondego>    DCDataControl dc = bindingContext.findDataControl(<doubleQuotes46>AppModuleAMDataControl<doubleQuotes46>);<newline46mondego>    AppModuleAMImpl am = (AppModuleAMImpl)dc.getDataProvider();<newline46mondego><newline46mondego><newline46mondego>    am.criarTesteComEntityObject();<newline46mondego>    }<newline46mondego>    catch(Exception e) {<newline46mondego>        e.printStackTrace();<newline46mondego>    }<newline46mondego><newline46mondego>    return null;<newline46mondego>}<newline46mondego>"
"9635splitHere46","12917432splitHere46","MultiMap map = new MultiHashMap();    <newline46mondego>String[] elements = source.split(<doubleQuotes46>,<doubleQuotes46>);<newline46mondego><newline46mondego>// process the elements in groups of four<newline46mondego>for (int keyIndex = 0; keyIndex < elements.length; keyIndex += 4) {<newline46mondego>  String key = elements[keyIndex];<newline46mondego>  map.put(key, elements[keyIndex+1]);<newline46mondego>  map.put(key, elements[keyIndex+2]);<newline46mondego>  map.put(key, elements[keyIndex+3]);<newline46mondego>}<newline46mondego>"
"9636splitHere46","12917432splitHere46","MultiMap"
"9637splitHere46","12917440splitHere46","@Path"
"9638splitHere46","12917441splitHere46","public void onCreate(Bundle savedInstanceState) {<newline46mondego>    super.onCreate(savedInstanceState);<newline46mondego>    setContentView(R.layout.activity_checkout);<newline46mondego><newline46mondego>    pBar = (ProgressBar) findViewById(R.id.progressBar1);<newline46mondego>    pBar.setVisibility(View.INVISIBLE);<newline46mondego><newline46mondego>    Button submitButton = (Button) findViewById(R.id.btnSubmit);<newline46mondego>    submitButton.setOnClickListener(new OnClickListener() {<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void onClick(View v) {<newline46mondego><newline46mondego>            Thread t=new Thread(new Runnable(){<newline46mondego>               @Override<newline46mondego>               public void run(){<newline46mondego>                 try {<newline46mondego>                  Thread.sleep(3000);<newline46mondego>                 } catch (InterruptedException e) {<newline46mondego>                   e.printStackTrace();<newline46mondego>                 }<newline46mondego>                 performMyAppSpecificWorkHere();<newline46mondego>                 runOnUiThread(new Runnable() {<newline46mondego>                    @Override<newline46mondego>                    public void run() {<newline46mondego>                        pBar.setVisibility(View.INVISIBLE);<newline46mondego>                        CheckoutActivity.this.finish();<newline46mondego>                    }<newline46mondego>                 }<newline46mondego>               }<newline46mondego>            });<newline46mondego>            pBar.setVisibility(View.VISIBLE);<newline46mondego>            t.start();<newline46mondego>        }<newline46mondego>    });  <newline46mondego>}<newline46mondego>"
"9639splitHere46","12917453splitHere46","PanelClass"
"9640splitHere46","12917453splitHere46","btn = new JButton();"
"9641splitHere46","12917519splitHere46","public boolean containsIllegalChar(String testWord){<newline46mondego>boolean containsIllegalChar = false;<newline46mondego><newline46mondego>for(int count=0; count < testWord.length(); count++){<newline46mondego>     char testChar = testWord.charAt(count);<newline46mondego>     switch (testChar)<newline46mondego>     {<newline46mondego>     case ''': containsIllegalChar = true;<newline46mondego>     break;<newline46mondego>     case '<doubleQuotes46>': containsIllegalChar = true;<newline46mondego>     break;<newline46mondego>     case '$': containsIllegalChar = true;<newline46mondego>     break;<newline46mondego>     case ' ': containsIllegalChar = true;<newline46mondego>     break;<newline46mondego>     default: break;<newline46mondego>     }<newline46mondego>}<newline46mondego>return containsIllegalChar;<newline46mondego>}<newline46mondego>"
"9642splitHere46","12917519splitHere46","String lastWord = <doubleQuotes46><doubleQuotes46>;<newline46mondego>while((holder = reader.read()) != -1){  <newline46mondego>     lastWord = holder;<newline46mondego>     //YOUR PROCESSING<newline46mondego>}<newline46mondego>boolean testLastWord = containsIllegalCharLastWord(lastWord);<newline46mondego><newline46mondego>if(testLastWord){<newline46mondego>//Contains illegal char<newline46mondego>}<newline46mondego>else{<newline46mondego>//Does not contain<newline46mondego>}<newline46mondego>"
"9643splitHere46","12917519splitHere46","boolean validWord = (<doubleQuotes46>piz'za<doubleQuotes46>.matches(<doubleQuotes46>[^'\<doubleQuotes46>$ ]+<doubleQuotes46>)) ? true : false;<newline46mondego>System.out.println(validWord);<newline46mondego>"
"9644splitHere46","12917524splitHere46","bw.write(<doubleQuotes46>Hello Server!<doubleQuotes46>);<newline46mondego>bw.newLine();<newline46mondego>"
"9645splitHere46","12917527splitHere46","actionPerformed()"
"9646splitHere46","12917527splitHere46","Action"
"9647splitHere46","12917560splitHere46","private final BroadcastReceiver mHandleMessageReceiver =<newline46mondego>        new BroadcastReceiver() {<newline46mondego>    @Override<newline46mondego>    public void onReceive(Context context, Intent intent) {<newline46mondego>        mTextView.setText(<doubleQuotes46>Registration state is: <doubleQuotes46> + intent.getExtras().getString(<doubleQuotes46>REGISTRATION_STATE<doubleQuotes46>);<newline46mondego>    }<newline46mondego>};<newline46mondego>"
"9648splitHere46","12917596splitHere46","this"
"9649splitHere46","12917596splitHere46","static"
"9650splitHere46","12917597splitHere46","buffer.append(<doubleQuotes46><TD> <b><A href= ...title=\<doubleQuotes46><doubleQuotes46>+MCode.getMessage(sMillesime, true) +<doubleQuotes46>\<doubleQuotes46>><doubleQuotes46>)<newline46mondego>"
"9651splitHere46","12917598splitHere46","Comparator"
"9652splitHere46","12917598splitHere46","Comparator"
"9653splitHere46","12917598splitHere46","compare"
"9654splitHere46","12917598splitHere46","equals"
"9655splitHere46","12917598splitHere46","Object"
"9656splitHere46","12917598splitHere46","compare"
"9657splitHere46","12917598splitHere46","p1"
"9658splitHere46","12917598splitHere46","p2"
"9659splitHere46","12917598splitHere46","MyClass"
"9660splitHere46","12917598splitHere46","class MyComparator implements Comparator<MyClass> {<newline46mondego><newline46mondego>    public int compare(MyClass a, MyClass b) {<newline46mondego>        // TODO<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9661splitHere46","12917598splitHere46","MyClass"
"9662splitHere46","12917598splitHere46","java.util.Date"
"9663splitHere46","12917598splitHere46","compare"
"9664splitHere46","12917598splitHere46","public int compare(MyClass a, MyClass b) {<newline46mondego>    return a.getStartTime().compareTo(b.getStartTime());<newline46mondego>}<newline46mondego>"
"9665splitHere46","12917598splitHere46","MyClass"
"9666splitHere46","12917598splitHere46","Comparator<MyClass> comparator = new MyComparator();<newline46mondego>PriorityQueue<MyClass> arrival = new PriorityQueue<MyClass>(10, comparator);<newline46mondego>"
"9667splitHere46","12917930splitHere46","<bean id=<doubleQuotes46>transactionManagerOne<doubleQuotes46><newline46mondego>        class=<doubleQuotes46>org.springframework.orm.hibernate4.HibernateTransactionManager<doubleQuotes46><newline46mondego>        p:sessionFactory-ref=<doubleQuotes46>sessionFactoryOne<doubleQuotes46>><newline46mondego>        <qualifier value=<doubleQuotes46>One<doubleQuotes46> /><newline46mondego>    </bean><newline46mondego>"
"9668splitHere46","12917930splitHere46","<bean id=<doubleQuotes46>sessionFactoryOne<doubleQuotes46><newline46mondego>        class=<doubleQuotes46>org.springframework.orm.hibernate4.LocalSessionFactoryBean<doubleQuotes46><newline46mondego>        p:dataSource-ref=<doubleQuotes46>dataSourceOne<doubleQuotes46><newline46mondego>"
"9669splitHere46","12917930splitHere46","@Transactional(value = <doubleQuotes46>One<doubleQuotes46>)<newline46mondego>"
"9670splitHere46","12917945splitHere46","String expected = <doubleQuotes46><newline46mondego>"
"9671splitHere46","12917945splitHere46","blah<newline46mondego>blah<newline46mondego>blah<newline46mondego>blah<newline46mondego>blah<newline46mondego>"
"9672splitHere46","12917945splitHere46","String expected = <doubleQuotes46>blah\n<doubleQuotes46> + <newline46mondego> <doubleQuotes46>blah\n<doubleQuotes46> + <newline46mondego> <doubleQuotes46>blah\n<doubleQuotes46> + <newline46mondego> <doubleQuotes46>blah\n<doubleQuotes46> + <newline46mondego> <doubleQuotes46>blah<doubleQuotes46><newline46mondego>"
"9673splitHere46","12917970splitHere46","public class MySingleton {<newline46mondego><newline46mondego>  public static MySingleton getInstance(Context context) {<newline46mondego>    if (instance==null) {<newline46mondego>      // Make sure you don't leak an activity by always using the application<newline46mondego>      // context for singletons<newline46mondego>      instance = new MySingleton(context.getApplicationContext());<newline46mondego>    }<newline46mondego>    return instance;<newline46mondego>  }<newline46mondego><newline46mondego>  private static MySingleton instance = null;<newline46mondego><newline46mondego>  private MySingleton(Context context) {<newline46mondego>    // init your stuff here...<newline46mondego>  }<newline46mondego><newline46mondego>  private String id = null;<newline46mondego>  private String uniqueId= null;<newline46mondego>  private String token = null;<newline46mondego>  private String sessionId = null;<newline46mondego>}<newline46mondego>"
"9674splitHere46","12918188splitHere46","hg clone https://code.google.com/p/scalafx/<newline46mondego>cd scalafx<newline46mondego>export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.7.0_07.jdk/Contents/Home<newline46mondego>sbt clean compile package make-pom package-src<newline46mondego>"
"9675splitHere46","12918211splitHere46","while(in.hasNextLine() && !((input = in.nextLine()).equals(<doubleQuotes46><doubleQuotes46>))){<newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"9676splitHere46","12918260splitHere46","input.setImmediate(true);<newline46mondego>"
"9677splitHere46","12918260splitHere46","input.addValidator(DummyBeanValidator());<newline46mondego>"
"9678splitHere46","12918264splitHere46","int size = 4;<newline46mondego>int[][] matrix = new int[size][size];<newline46mondego>// . . .<newline46mondego>for (int i = 0; i < size; ++i) {<newline46mondego>    doSomethingWith(matrix[i][size - i - 1]);<newline46mondego>}<newline46mondego>"
"9679splitHere46","12918316splitHere46","<copy todir=<doubleQuotes46>${yourJarFolder}/folder<doubleQuotes46>><newline46mondego>    <fileset dir=<doubleQuotes46>${basedir}/folder<doubleQuotes46> includes=<doubleQuotes46>**<doubleQuotes46> /><newline46mondego></copy><newline46mondego>"
"9680splitHere46","12918425splitHere46","java.sql.Date"
"9681splitHere46","12918425splitHere46","Timestamp"
"9682splitHere46","12918466splitHere46","<LinearLayout<newline46mondego>android:id=<doubleQuotes46>@+id/yourcontainer<doubleQuotes46><newline46mondego>...><newline46mondego><newline46mondego>more objects<newline46mondego><newline46mondego></LinearLayout><newline46mondego>"
"9683splitHere46","12918466splitHere46","@Override<newline46mondego>protected void onDestroy() {<newline46mondego>    super.onDestroy();<newline46mondego>    unbindDrawables(findViewById(R.id.yourcontainer));<newline46mondego>}<newline46mondego><newline46mondego>private void unbindDrawables(View view) {<newline46mondego>    if (view == null)<newline46mondego>        return;<newline46mondego>    if (view.getBackground() != null)<newline46mondego>    view.getBackground().setCallback(null);<newline46mondego>    if (view instanceof ViewGroup) {<newline46mondego>    for (int i = 0; i < ((ViewGroup) view).getChildCount(); i++) {<newline46mondego>            unbindDrawables(((ViewGroup) view).getChildAt(i));<newline46mondego>    }<newline46mondego>    try {<newline46mondego>        ((ViewGroup) view).removeAllViews();<newline46mondego>    } catch (UnsupportedOperationException mayHappen) {<newline46mondego>        Log.e(<doubleQuotes46>Error:<doubleQuotes46>, mayHappen.getMessage());<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9684splitHere46","12918689splitHere46","for(int i=0; i<sc.length(); i++){"
"9685splitHere46","12918689splitHere46","for(int i=0; i<inputString.length(); i++){"
"9686splitHere46","12918689splitHere46","java.util.NoSuchElementException<newline46mondego>   java.lang.IllegalStateException<newline46mondego>"
"9687splitHere46","12918689splitHere46","IOException"
"9688splitHere46","12918689splitHere46","sc.nextLine()"
"9689splitHere46","12918689splitHere46","NoSuchElementException"
"9690splitHere46","12918689splitHere46","IllegalStateException"
"9691splitHere46","12918689splitHere46","IOException"
"9692splitHere46","12918871splitHere46","if (key.matches(<doubleQuotes46>[^1-9A-Z]<doubleQuotes46>))<newline46mondego>  throw new IllegalArgumentException(<doubleQuotes46>...<doubleQuotes46>);<newline46mondego>"
"9693splitHere46","12918871splitHere46","(int) key.charAt(0)"
"9694splitHere46","12918871splitHere46","public static final int VK_0 48 <newline46mondego>public static final int VK_1 49 <newline46mondego>...<newline46mondego>public static final int VK_9 57 <newline46mondego>public static final int VK_A 65 <newline46mondego>...<newline46mondego>"
"9695splitHere46","12918955splitHere46","for (String[] strs : list) {<newline46mondego>    System.out.println(Arrays.toString(strs));<newline46mondego>}<newline46mondego>"
"9696splitHere46","12918990splitHere46","boolean"
"9697splitHere46","12918990splitHere46","check"
"9698splitHere46","12918990splitHere46","hasElement()"
"9699splitHere46","12918990splitHere46","hasNext()"
"9700splitHere46","12918990splitHere46","iEmpty()"
"9701splitHere46","12918990splitHere46","public boolean checkFullDataset() {<newline46mondego>   if(name == null || surname() == null ...)<newline46mondego>     return false;<newline46mondego>    return true;<newline46mondego>}<newline46mondego>"
"9702splitHere46","12919211splitHere46","java.util.Date"
"9703splitHere46","12919211splitHere46","java.util.Calendar"
"9704splitHere46","12919314splitHere46","public boolean onTouch(MotionEvent ev) {<newline46mondego>     final int pointerCount = ev.getPointerCount();<newline46mondego>     for (int p = 0; p < pointerCount; p++) {<newline46mondego>         onTouch(ev.getPointerId(p), ev.getAction(), ev.getX(p), ev.getY(p));<newline46mondego>     }<newline46mondego>     return true;<newline46mondego> }<newline46mondego>"
"9705splitHere46","12919331splitHere46","getResources().getStringArray(R.array.string_array_name);<newline46mondego>"
"9706splitHere46","12919379splitHere46","public class BinarySafeCharacterEncodingFilter extends CharacterEncodingFilter {<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void doFilterInternal(HttpServletRequest request,<newline46mondego>            HttpServletResponse response, FilterChain filterChain)<newline46mondego>            throws ServletException, IOException {<newline46mondego><newline46mondego>        if(!<doubleQuotes46>image/gif<doubleQuotes46>.equals(response.getContentType())){<newline46mondego>            super.doFilterInternal(request, response, filterChain);<newline46mondego>        }<newline46mondego><newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"9707splitHere46","12919395splitHere46","(MM|dd|yyyy)[\\/-]?(?!\\1)(MM|dd|yyyy)[\\/-]?(?!\\1)(?!\\2)(MM|dd|yyyy)<newline46mondego>"
"9708splitHere46","12919395splitHere46","[...]"
"9709splitHere46","12919514splitHere46","relocation"
"9710splitHere46","12919514splitHere46","<project><newline46mondego>  <modelVersion>4.0.0</modelVersion><newline46mondego>  <groupId>zambia</groupId><newline46mondego>  <artifactId>zebra</artifactId><newline46mondego>  <version>????</version><newline46mondego>  <distributionManagement><newline46mondego>    <relocation><newline46mondego>      <groupId>africa</groupId><newline46mondego>    </relocation><newline46mondego>  </distributionManagement><newline46mondego></project><newline46mondego>"
"9711splitHere46","12919518splitHere46","from"
"9712splitHere46","12919518splitHere46","String sql = <doubleQuotes46>INSERT INTO MESSAGE(<doubleQuotes46><newline46mondego>               + <doubleQuotes46>`From`,<doubleQuotes46><newline46mondego>               + <doubleQuotes46>`To`,<doubleQuotes46><newline46mondego>               + <doubleQuotes46>Message,<doubleQuotes46><newline46mondego>               + <doubleQuotes46>Date,<doubleQuotes46><newline46mondego>               + <doubleQuotes46>`Read`) <doubleQuotes46><newline46mondego>               + <doubleQuotes46>VALUES(?,?,?,?,?)<doubleQuotes46>;<newline46mondego>"
"9713splitHere46","12919770splitHere46","Map"
"9714splitHere46","12919770splitHere46","HashMap"
"9715splitHere46","12919770splitHere46","List<Map.Entry<String, Integer>> entries = new ArrayList<Map.Entry<String, Integer>>(map.entrySet());<newline46mondego>Collections.sort(entries, new Comparator<Map.Entry<String, Integer>>() {<newline46mondego>  public int compare(<newline46mondego>      Map.Entry<String, Integer> entry1, Map.Entry<String, Integer> entry2) {<newline46mondego>    return entry1.getValue().compareTo(entry2.getValue());<newline46mondego>  }<newline46mondego>});<newline46mondego>"
"9716splitHere46","12919942splitHere46","WeakHashMap"
"9717splitHere46","12919942splitHere46","WeakHashSet"
"9718splitHere46","12919942splitHere46","WeakHashMap"
"9719splitHere46","12919942splitHere46","add"
"9720splitHere46","12919942splitHere46","intern"
"9721splitHere46","12919942splitHere46","WeakHashSet"
"9722splitHere46","12919942splitHere46","private static WeakHashSet stringPool = new WeakHashSet(30000); //30 thousand is the average number of Strings that the application keeps.<newline46mondego>"
"9723splitHere46","12919942splitHere46","public static String intern(String value) {<newline46mondego>    if(value == null) {<newline46mondego>        return null;<newline46mondego>    }<newline46mondego>    return (String) stringPool.add(value);<newline46mondego>}<newline46mondego>"
"9724splitHere46","12920363splitHere46","Map"
"9725splitHere46","12920363splitHere46","selectOneMenu"
"9726splitHere46","12920363splitHere46","value"
"9727splitHere46","12920363splitHere46","<option>"
"9728splitHere46","12920363splitHere46","<option value=<doubleQuotes46>someValue<doubleQuotes46>><newline46mondego>"
"9729splitHere46","12920363splitHere46","String[]"
"9730splitHere46","12920363splitHere46","Object#toString()"
"9731splitHere46","12920363splitHere46","String[]"
"9732splitHere46","12920363splitHere46","<option value=<doubleQuotes46>[Ljava.lang.String;@1860045<doubleQuotes46>><newline46mondego>"
"9733splitHere46","12920363splitHere46","String[]"
"9734splitHere46","12920363splitHere46","List<String>"
"9735splitHere46","12920363splitHere46","<h:selectOneMenu value=<doubleQuotes46>#{bean.name}<doubleQuotes46>><newline46mondego>    <f:selectItems value=<doubleQuotes46>#{bean.names}<doubleQuotes46> /><newline46mondego></h:selectOneMenu><newline46mondego>"
"9736splitHere46","12920363splitHere46","String[]"
"9737splitHere46","12920363splitHere46","Map"
"9738splitHere46","12920411splitHere46","<route><newline46mondego>    <from uri=<doubleQuotes46>sftp:(url)?sendEmptyMessageWhenIdle=true<doubleQuotes46> /><newline46mondego>    <choose><newline46mondego>        <when><newline46mondego>            <simple>${body} != null</simple><newline46mondego>            <process ref=<doubleQuotes46>(processor)<doubleQuotes46> /><newline46mondego>            <to uri=<doubleQuotes46>(endpoint)<doubleQuotes46> /><newline46mondego>        </when><newline46mondego>        <otherwise><newline46mondego>            <process ref=<doubleQuotes46>(shutdownProcessor)<doubleQuotes46> /><newline46mondego>        </otherwise><newline46mondego>    </choose><newline46mondego></route><newline46mondego>"
"9739splitHere46","12920411splitHere46","sendEmptyMessageWhenIdle=true"
"9740splitHere46","12920411splitHere46","shutdownProcessor"
"9741splitHere46","12920411splitHere46","public class ShutdownProcessor {<newline46mondego>    public void stop(final Exchange exchange) {<newline46mondego>        new Thread() {<newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                try {<newline46mondego>                    exchange.getContext().stop();<newline46mondego>                } catch (Exception e) {<newline46mondego>                    // log error<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }.start();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9742splitHere46","12920476splitHere46","myThreadClass(w[i])"
"9743splitHere46","12920476splitHere46","w"
"9744splitHere46","12920476splitHere46","myThreadClass(i)"
"9745splitHere46","12920516splitHere46","AsyncHttpClient"
"9746splitHere46","12920516splitHere46","Future<Response> r = new AsyncHttpClient().prepareGet(<newline46mondego>                <doubleQuotes46>http://google.com<doubleQuotes46>).execute();<newline46mondego>"
"9747splitHere46","12920516splitHere46","close()"
"9748splitHere46","12920516splitHere46","AsyncHttpClient"
"9749splitHere46","12920516splitHere46","AsyncHttpClient"
"9750splitHere46","12920516splitHere46","AsyncHttpClient"
"9751splitHere46","12920516splitHere46","URLConnection"
"9752splitHere46","12920516splitHere46","AsyncHttpClient"
"9753splitHere46","12920516splitHere46","AsyncHttpClient"
"9754splitHere46","12920796splitHere46","@Autowired"
"9755splitHere46","12920796splitHere46","public class SnippetService {<newline46mondego><newline46mondego>    private TestService testService;<newline46mondego><newline46mondego>    public Snippet getSnippet() {<newline46mondego>        return testService.getSnippet();<newline46mondego>    }<newline46mondego><newline46mondego>    public void setTestService(TestService testService) {<newline46mondego>      this.testService = testService;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9756splitHere46","12920796splitHere46","<bean class=<doubleQuotes46>mypackage.SnippetService<doubleQuotes46> autowire=<doubleQuotes46>byType<doubleQuotes46>/><newline46mondego>"
"9757splitHere46","12920796splitHere46","TestService"
"9758splitHere46","12920796splitHere46","@Autowired"
"9759splitHere46","12920796splitHere46","@Autowired"
"9760splitHere46","12920796splitHere46","@Resource"
"9761splitHere46","12920796splitHere46","@Inject"
"9762splitHere46","12920844splitHere46","StringBuilder str = new StringBuilder();<newline46mondego>for (int i = 0; i < 3; i++)<newline46mondego> for (int j = 0; j < 3; j++)<newline46mondego>   str.append(board[i][j]);<newline46mondego>"
"9763splitHere46","12920844splitHere46","StringBuilder"
"9764splitHere46","12920871splitHere46","xPosition / 2"
"9765splitHere46","12920871splitHere46","yPosition"
"9766splitHere46","12920871splitHere46","xPosition"
"9767splitHere46","12920871splitHere46","//use whatever size you want<newline46mondego>//this will make a triangle with the top at the clicked point<newline46mondego>int halfWidth = 50, height = 100; <newline46mondego>int[] xPoints = { xPosition - halfWidth, xPosition, xPosition + halfWidth };<newline46mondego>int[] yPoints = { yPosition + height, yPosition, yPosition + height };<newline46mondego>"
"9768splitHere46","12920871splitHere46","height"
"9769splitHere46","12920871splitHere46","Math.sqrt(3) * halfWidth"
"9770splitHere46","12920970splitHere46","<bean id=<doubleQuotes46>uniqueConsumerTarget<doubleQuotes46> scope=<doubleQuotes46>prototype<doubleQuotes46> lazy-init=<doubleQuotes46>true<doubleQuotes46>/><newline46mondego><newline46mondego><bean id=<doubleQuotes46>uniqueConsumer<doubleQuotes46> class=<doubleQuotes46>org.springframework.aop.framework.ProxyFactoryBean<doubleQuotes46>><newline46mondego>    <property name=<doubleQuotes46>targetSource<doubleQuotes46>><newline46mondego>        <bean class=<doubleQuotes46>org.springframework.aop.target.CommonsPoolTargetSource<doubleQuotes46>><newline46mondego>            <property name=<doubleQuotes46>targetClass<doubleQuotes46> value=<doubleQuotes46>com.example.UniqueConsumer<doubleQuotes46>/><newline46mondego>            <property name=<doubleQuotes46>targetBeanName<doubleQuotes46> value=<doubleQuotes46>uniqueConsumerTarget<doubleQuotes46>/><newline46mondego>            <property name=<doubleQuotes46>maxSize<doubleQuotes46> value=<doubleQuotes46>10<doubleQuotes46>/><newline46mondego>            <property name=<doubleQuotes46>maxWait<doubleQuotes46> value=<doubleQuotes46>5000<doubleQuotes46>/><newline46mondego>        </bean><newline46mondego>    </property><newline46mondego></bean><newline46mondego>"
"9771splitHere46","12920970splitHere46","<doubleQuotes46>uniqueConsumer<doubleQuotes46>"
"9772splitHere46","12920970splitHere46","<doubleQuotes46>maxSize<doubleQuotes46>"
"9773splitHere46","12920970splitHere46","<doubleQuotes46>maxWait<doubleQuotes46>"
"9774splitHere46","12921020splitHere46","JFrame"
"9775splitHere46","12921020splitHere46","JPanel"
"9776splitHere46","12921020splitHere46","ColorPanel"
"9777splitHere46","12921020splitHere46","drawDot(..)"
"9778splitHere46","12921020splitHere46","setBufferedImage(..)"
"9779splitHere46","12921020splitHere46","JFrame"
"9780splitHere46","12921020splitHere46","JPanel"
"9781splitHere46","12921020splitHere46","BufferedImage"
"9782splitHere46","12921020splitHere46","Image"
"9783splitHere46","12921020splitHere46","BufferedImage#setRGB(...)"
"9784splitHere46","12921020splitHere46","drawPoint(0,0)"
"9785splitHere46","12921020splitHere46","import java.awt.Dimension;<newline46mondego>import java.awt.Graphics;<newline46mondego>import java.awt.Graphics2D;<newline46mondego>import java.awt.event.ActionEvent;<newline46mondego>import java.awt.image.BufferedImage;<newline46mondego>import java.net.URL;<newline46mondego>import java.util.Random;<newline46mondego>import javax.imageio.ImageIO;<newline46mondego>import javax.swing.AbstractAction;<newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JPanel;<newline46mondego>import javax.swing.SwingUtilities;<newline46mondego>import javax.swing.Timer;<newline46mondego><newline46mondego>public class PixelDotOnImage {<newline46mondego><newline46mondego>    public PixelDotOnImage() throws Exception {<newline46mondego>        JFrame frame = new JFrame();<newline46mondego>        frame.setTitle(<doubleQuotes46>Random Pixel Dots On Image with Timer<doubleQuotes46>);<newline46mondego>        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        frame.setResizable(false);<newline46mondego><newline46mondego>        initComponents(frame);<newline46mondego><newline46mondego>        frame.pack();<newline46mondego>        frame.setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego><newline46mondego>        //create frame and components on EDT<newline46mondego>        SwingUtilities.invokeLater(new Runnable() {<newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                try {<newline46mondego>                    new PixelDotOnImage();<newline46mondego>                } catch (Exception ex) {<newline46mondego>                    ex.printStackTrace();<newline46mondego>                }<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>    private void initComponents(JFrame frame) throws Exception {<newline46mondego><newline46mondego>        final BufferedImage bi = ImageIO.read(new URL(<doubleQuotes46>http://2.bp.blogspot.com/_KI3IRH6RxSs/S-uuLsgGJ3I/AAAAAAAAA5E/AA5mWBMLIvo/s1600/mat-black-lg.jpg<doubleQuotes46>));<newline46mondego>        final ColorPanel cPanel = new ColorPanel(bi);<newline46mondego>        frame.add(cPanel);<newline46mondego><newline46mondego>        //create timer to color random pixels<newline46mondego>        Timer timer = new Timer(2000, new AbstractAction() {<newline46mondego>            int yMax = bi.getWidth(), xMax = bi.getHeight();<newline46mondego>            Random rand = new Random();<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void actionPerformed(ActionEvent ae) {<newline46mondego><newline46mondego>                int x = rand.nextInt(xMax);<newline46mondego>                int y = rand.nextInt(yMax);<newline46mondego><newline46mondego>                if (cPanel.drawDot(x, y)) {<newline46mondego>                    System.out.println(<doubleQuotes46>Drew white dot at: (<doubleQuotes46> + x + <doubleQuotes46>,<doubleQuotes46> + y + <doubleQuotes46>)<doubleQuotes46>);<newline46mondego>                } else {<newline46mondego>                    System.out.println(<doubleQuotes46>Cant draw white dot at: (<doubleQuotes46> + x + <doubleQuotes46>,<doubleQuotes46> + y + <doubleQuotes46>)<doubleQuotes46>);<newline46mondego>                }<newline46mondego><newline46mondego>            }<newline46mondego>        });<newline46mondego><newline46mondego>        timer.start();<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class ColorPanel extends JPanel {<newline46mondego><newline46mondego>    private BufferedImage bimg;<newline46mondego>    private Dimension dims;<newline46mondego><newline46mondego>    public ColorPanel(BufferedImage image) {<newline46mondego>        bimg = image;<newline46mondego>        dims = new Dimension(bimg.getWidth(), bimg.getHeight());<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void paintComponent(Graphics g) {<newline46mondego>        super.paintComponent(g);<newline46mondego>        Graphics2D g2d = (Graphics2D) g;<newline46mondego>        g2d.drawImage(bimg, 0, 0, null);<newline46mondego>    }<newline46mondego><newline46mondego>    //this method will allow the changing of image<newline46mondego>    public void setBufferedImage(BufferedImage newImg) {<newline46mondego>        bimg = newImg;<newline46mondego>    }<newline46mondego><newline46mondego>    //ths method will colour a pixel white<newline46mondego>    public boolean drawDot(int x, int y) {<newline46mondego><newline46mondego>        if (x > dims.getHeight() || y > dims.getWidth()) {<newline46mondego>            return false;<newline46mondego>        }<newline46mondego><newline46mondego>        bimg.setRGB(x, y,  0xFFFFFFFF);//white<newline46mondego><newline46mondego>        repaint();<newline46mondego>        return true;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Dimension getPreferredSize() {<newline46mondego>        return dims;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9786splitHere46","12921154splitHere46","adb logcat"
"9787splitHere46","12921162splitHere46","<field name=<doubleQuotes46>x2<doubleQuotes46>  ignore-annotations=<doubleQuotes46>true<doubleQuotes46>    >  <!-- XML is stronger --><newline46mondego>        <constraint annotation=<doubleQuotes46>javax.validation.constraints.Min<doubleQuotes46>><newline46mondego>             <element name=<doubleQuotes46>value<doubleQuotes46>>2</element><newline46mondego>        </constraint><newline46mondego>    </field><newline46mondego>"
"9788splitHere46","12921173splitHere46","String str = <doubleQuotes46>AE&E randomstr§%%%ing b45747bla & some text<doubleQuotes46>;<newline46mondego>Pattern pattern = Pattern.compile(<doubleQuotes46>[^\\w\\s\\d&]<doubleQuotes46>);<newline46mondego>Matcher matcher = pattern.matcher(str);<newline46mondego>str = StringUtils.normalizeSpace(matcher.replaceAll(<doubleQuotes46> <doubleQuotes46>));<newline46mondego>"
"9789splitHere46","12921256splitHere46","$"
"9790splitHere46","12921256splitHere46","\\$"
"9791splitHere46","12921282splitHere46","return"
"9792splitHere46","12921282splitHere46","finally"
"9793splitHere46","12921282splitHere46","finally {<newline46mondego>  System.out.println(<doubleQuotes46>hi<doubleQuotes46>);<newline46mondego>  return a;<newline46mondego>}<newline46mondego>"
"9794splitHere46","12921282splitHere46","return"
"9795splitHere46","12921313splitHere46","public void printTriangle(int n) {<newline46mondego>    if(n > 1) {<newline46mondego>        printTriangle(n - 1);<newline46mondego>    }<newline46mondego>    System.out.println(makeStars(n));<newline46mondego>}<newline46mondego>"
"9796splitHere46","12921490splitHere46","furtherSpecificProcessing()"
"9797splitHere46","12921528splitHere46","HEAD"
"9798splitHere46","12921528splitHere46","RANGE"
"9799splitHere46","12921528splitHere46","HEAD"
"9800splitHere46","12921528splitHere46","RANGE"
"9801splitHere46","12921528splitHere46","RANGE"
"9802splitHere46","12921690splitHere46","private static void printDigits(BigInteger num) {<newline46mondego>    BigInteger[] resultAndRemainder;<newline46mondego>    do {<newline46mondego>        resultAndRemainder = num.divideAndRemainder(BigInteger.TEN);<newline46mondego>        System.out.println(Math.abs(resultAndRemainder[1].intValue()));<newline46mondego>        num = resultAndRemainder[0];<newline46mondego>    } while (num.compareTo(BigInteger.ZERO) != 0);<newline46mondego>}<newline46mondego>"
"9803splitHere46","12922010splitHere46","FlowLayout"
"9804splitHere46","12922010splitHere46","JPanel"
"9805splitHere46","12922010splitHere46","setLayout(null)"
"9806splitHere46","12922205splitHere46","public class ResizeCrop {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        new ResizeCrop();<newline46mondego>    }<newline46mondego><newline46mondego>    public ResizeCrop() {<newline46mondego>        EventQueue.invokeLater(new Runnable() {<newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                try {<newline46mondego>                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());<newline46mondego>                } catch (ClassNotFoundException ex) {<newline46mondego>                } catch (InstantiationException ex) {<newline46mondego>                } catch (IllegalAccessException ex) {<newline46mondego>                } catch (UnsupportedLookAndFeelException ex) {<newline46mondego>                }<newline46mondego><newline46mondego>                JFrame frame = new JFrame();<newline46mondego>                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>                frame.setLayout(new BorderLayout());<newline46mondego>                frame.add(new CropPane());<newline46mondego>                frame.pack();<newline46mondego>                frame.setLocationRelativeTo(null);<newline46mondego>                frame.setVisible(true);<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>    public class CropPane extends JPanel {<newline46mondego><newline46mondego>        private BufferedImage background;<newline46mondego>        private Rectangle cropBounds;<newline46mondego><newline46mondego>        public CropPane() {<newline46mondego>            try {<newline46mondego>                background = ImageIO.read(new File(<doubleQuotes46>/Users/swhitehead/Dropbox/MT008.gif<doubleQuotes46>));<newline46mondego>            } catch (IOException exp) {<newline46mondego>                exp.printStackTrace();<newline46mondego>            }<newline46mondego><newline46mondego>            MouseHandler handler = new MouseHandler();<newline46mondego><newline46mondego>            addMouseListener(handler);<newline46mondego>            addMouseMotionListener(handler);<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public Dimension getPreferredSize() {<newline46mondego>            return new Dimension(background.getWidth(), background.getHeight());<newline46mondego>        }<newline46mondego><newline46mondego>        protected Rectangle getCropBounds() {<newline46mondego>            Rectangle actualBounds = null;<newline46mondego>            if (cropBounds != null) {<newline46mondego>                int x = cropBounds.x;<newline46mondego>                int y = cropBounds.y;<newline46mondego>                int width = cropBounds.width;<newline46mondego>                int height = cropBounds.height;<newline46mondego><newline46mondego>                if (width < 0) {<newline46mondego>                    x += width;<newline46mondego>                    width -= (width * 2);<newline46mondego>                }<newline46mondego>                if (height < 0) {<newline46mondego>                    y += height;<newline46mondego>                    height -= (height * 2);<newline46mondego>                }<newline46mondego><newline46mondego>                actualBounds = new Rectangle(x, y, width, height);<newline46mondego>                System.out.println(actualBounds);<newline46mondego>            }<newline46mondego>            return actualBounds;<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        protected void paintComponent(Graphics g) {<newline46mondego><newline46mondego>            super.paintComponent(g);<newline46mondego><newline46mondego>            Graphics2D g2d = (Graphics2D) g.create();<newline46mondego>            if (background != null) {<newline46mondego>                int x = (getWidth() - background.getWidth()) / 2;<newline46mondego>                int y = (getHeight() - background.getHeight()) / 2;<newline46mondego>                g2d.drawImage(background, x, y, this);<newline46mondego>            }<newline46mondego><newline46mondego>            Rectangle drawCrop = getCropBounds();<newline46mondego>            if (drawCrop != null) {<newline46mondego>                Color color = UIManager.getColor(<doubleQuotes46>List.selectionBackground<doubleQuotes46>);<newline46mondego>                g2d.setColor(color);<newline46mondego>                Composite composite = g2d.getComposite();<newline46mondego>                g2d.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, 0.5f));<newline46mondego>                g2d.fill(drawCrop);<newline46mondego>                g2d.setComposite(composite);<newline46mondego>                g2d.draw(drawCrop);<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        public class MouseHandler extends MouseAdapter {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void mouseReleased(MouseEvent e) {<newline46mondego>                cropBounds = null;<newline46mondego>                repaint();<newline46mondego>            }<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void mousePressed(MouseEvent e) {<newline46mondego>                cropBounds = new Rectangle();<newline46mondego>                cropBounds.setLocation(e.getPoint());<newline46mondego>                repaint();<newline46mondego>            }<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void mouseDragged(MouseEvent e) {<newline46mondego>                if (cropBounds != null) {<newline46mondego>                    Point p = e.getPoint();<newline46mondego>                    int width = p.x - cropBounds.x;<newline46mondego>                    int height = p.y - cropBounds.y;<newline46mondego>                    cropBounds.setSize(width, height);<newline46mondego>                    repaint();<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9807splitHere46","12922205splitHere46","paintComponent"
"9808splitHere46","12922205splitHere46","Rectangle drawCrop = getCropBounds();<newline46mondego>if (drawCrop != null) {<newline46mondego><newline46mondego>    Area area = new Area(new Rectangle(0, 0, getWidth() - 1, getHeight() - 1));<newline46mondego>    area.subtract(new Area(drawCrop));<newline46mondego><newline46mondego>    Color color = UIManager.getColor(<doubleQuotes46>List.selectionBackground<doubleQuotes46>);<newline46mondego>    g2d.setColor(color);<newline46mondego>    Composite composite = g2d.getComposite();<newline46mondego>    g2d.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, 0.5f));<newline46mondego>    g2d.fill(area);<newline46mondego>    g2d.setComposite(composite);<newline46mondego>    g2d.draw(area);<newline46mondego>}<newline46mondego>"
"9809splitHere46","12922205splitHere46","cropBounds"
"9810splitHere46","12922205splitHere46","getCropBounds"
"9811splitHere46","12922205splitHere46","mouseRelease"
"9812splitHere46","12922230splitHere46","transpose"
"9813splitHere46","12922230splitHere46","tempArray[i][j] = doubleMatrix2[j][i];<newline46mondego>"
"9814splitHere46","12922230splitHere46","tempArray[i][j] = tempArray[j][i];<newline46mondego>"
"9815splitHere46","12922230splitHere46","tempArray"
"9816splitHere46","12922230splitHere46","ArrayIndexOutOfBounds"
"9817splitHere46","12922230splitHere46","row != col"
"9818splitHere46","12922230splitHere46","doubleMatrix2"
"9819splitHere46","12922230splitHere46","doubMatrix2 =transposeMatrix(num1,num2);<newline46mondego>"
"9820splitHere46","12922230splitHere46","tempArray[][] = new double[num2][num1];<newline46mondego><newline46mondego>doubleMatrix[][] = new double[num1][num2];<newline46mondego>"
"9821splitHere46","12922230splitHere46","doubleMatrix[j][i]"
"9822splitHere46","12922230splitHere46","tempArray[i][j]"
"9823splitHere46","12922259splitHere46","Future"
"9824splitHere46","12922259splitHere46","RemoteIterator<E>"
"9825splitHere46","12922259splitHere46","next()"
"9826splitHere46","12922259splitHere46","RemoteIterator<Future<E>>"
"9827splitHere46","12922259splitHere46","Future<E>"
"9828splitHere46","12922259splitHere46","Future.get()"
"9829splitHere46","12922259splitHere46","IOException"
"9830splitHere46","12922259splitHere46","ExecutionException"
"9831splitHere46","12922259splitHere46","Future.get()"
"9832splitHere46","12922259splitHere46","getCause()"
"9833splitHere46","12922264splitHere46","srand(time(0)); // seed it using the current time<newline46mondego>"
"9834splitHere46","12922264splitHere46","new Random()"
"9835splitHere46","12922264splitHere46","Random rand = new Random(System.nanoTime());<newline46mondego>"
"9836splitHere46","12922302splitHere46","rs.next()"
"9837splitHere46","12922302splitHere46","r.next()"
"9838splitHere46","12922362splitHere46","writer.println(<doubleQuotes46>HTTP/1.1 200 OK<doubleQuotes46>);<newline46mondego>writer.println(<doubleQuotes46>Content-Type: text/html<doubleQuotes46>);          <newline46mondego>"
"9839splitHere46","12922362splitHere46","String line;                <newline46mondego>while ((line = in.readLine()) != null)<newline46mondego>{<newline46mondego>    writer.println(line);<newline46mondego>}<newline46mondego>in.close();<newline46mondego>"
"9840splitHere46","12922362splitHere46","InputStream"
"9841splitHere46","12922362splitHere46","OutputStream"
"9842splitHere46","12922362splitHere46","pathname = (filename == <doubleQuotes46>/<doubleQuotes46>) ? root + filename : root;<newline46mondego>"
"9843splitHere46","12922362splitHere46","=="
"9844splitHere46","12922362splitHere46","pathname = (filename.equals(<doubleQuotes46>/<doubleQuotes46>)) ? root + filename : root;<newline46mondego>"
"9845splitHere46","12922396splitHere46","class TestView extends View { <newline46mondego>    private Paint circle = new Paint();<newline46mondego>    private boolean isPop = false;<newline46mondego>    private Runnable everyThreeSeconds = new Runnable() {<newline46mondego>        public void run() {<newline46mondego>            // Do something spiffy like...<newline46mondego>            isPop = !isPop;<newline46mondego>            invalidate();<newline46mondego><newline46mondego>            // Don't forget to call you next three second interval!<newline46mondego>            postDelayed(everyThreeSeconds, 3000);<newline46mondego>        }<newline46mondego>    };<newline46mondego><newline46mondego>    public TestView(Context context) {<newline46mondego>        this(context, null);<newline46mondego>    }<newline46mondego><newline46mondego>    public TestView(Context context, AttributeSet attrs) {<newline46mondego>        super(context, attrs);<newline46mondego>        circle.setColor(Color.BLUE);<newline46mondego>        post(everyThreeSeconds);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void onDraw(Canvas canvas) {<newline46mondego>        super.onDraw(canvas);<newline46mondego>        canvas.drawColor(Color.RED);<newline46mondego><newline46mondego>        if (isPop){<newline46mondego>            canvas.drawCircle(100, 100, 40, circle);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9846splitHere46","12922492splitHere46","Iterator"
"9847splitHere46","12922502splitHere46","<h:outputScript><newline46mondego>   function getHtml(){<newline46mondego>        $('#next').click(function(){  <newline46mondego>           htmlString=$('#wrapper').html();<newline46mondego>           alert(htmlString);<newline46mondego>      command([{name:'param',value:htmlString}]); //This is important<newline46mondego>          });<newline46mondego>        }<newline46mondego></h:outputScript>   <newline46mondego>"
"9848splitHere46","12922502splitHere46","public void getjs(){<newline46mondego>  FacesContext context = FacesContext.getCurrentInstance();<newline46mondego>            Map<String, String> map = context.getExternalContext().getRequestParameterMap();<newline46mondego>           String value = (String) map.get(<doubleQuotes46>param<doubleQuotes46>);<newline46mondego><newline46mondego>          System.out.println(<doubleQuotes46>**************** The Javascirpt is <doubleQuotes46>+value);<newline46mondego>    }<newline46mondego>"
"9849splitHere46","12922542splitHere46","Object Punt = litr.next();<newline46mondego>   Punt.print();<newline46mondego>"
"9850splitHere46","12922542splitHere46","Punt"
"9851splitHere46","12922542splitHere46","print()"
"9852splitHere46","12922542splitHere46","Object"
"9853splitHere46","12922542splitHere46","ArrayList<YourClass> PuntenLijst<newline46mondego>"
"9854splitHere46","12922542splitHere46","Object Punt = litr.next();<newline46mondego>((YourClass)Punt).print();<newline46mondego>"
"9855splitHere46","12922542splitHere46","YourClass Punt = litr.next();<newline46mondego>   Punt.print();<newline46mondego>"
"9856splitHere46","12922792splitHere46","@Configuration"
"9857splitHere46","12922792splitHere46","main()"
"9858splitHere46","12922792splitHere46","ApplicationContext ctx = <newline46mondego>    new AnnotationConfigApplicationContext(MyServicesConfiguration.class);<newline46mondego>"
"9859splitHere46","12922792splitHere46","ApplicationLifecycle applicationLifecycle = <newline46mondego>    ctx.getBean(ApplicationLifecycle.class);<newline46mondego>"
"9860splitHere46","12922834splitHere46","put()"
"9861splitHere46","12922834splitHere46","myMap.put(key,newValue)"
"9862splitHere46","12922834splitHere46","Map"
"9863splitHere46","12922834splitHere46","Properties"
"9864splitHere46","12922932splitHere46","NullPointerException"
"9865splitHere46","12922932splitHere46","in"
"9866splitHere46","12922932splitHere46","main"
"9867splitHere46","12922932splitHere46","socket.getOutputStream()"
"9868splitHere46","12922932splitHere46","in"
"9869splitHere46","12922932splitHere46","out"
"9870splitHere46","12922990splitHere46","ImageView.setImageBitmap"
"9871splitHere46","12922990splitHere46","Bitmap"
"9872splitHere46","12922990splitHere46","String"
"9873splitHere46","12922990splitHere46","JSONObject"
"9874splitHere46","12922990splitHere46","Bitmap"
"9875splitHere46","12923037splitHere46","deleteNode"
"9876splitHere46","12923037splitHere46","front"
"9877splitHere46","12923037splitHere46","front"
"9878splitHere46","12923037splitHere46","deleteNode"
"9879splitHere46","12923037splitHere46","front"
"9880splitHere46","12923037splitHere46","front"
"9881splitHere46","12923037splitHere46","LinkedList"
"9882splitHere46","12923037splitHere46","front"
"9883splitHere46","12923037splitHere46","front"
"9884splitHere46","12923037splitHere46","front"
"9885splitHere46","12923037splitHere46","deleteNode"
"9886splitHere46","12923037splitHere46","front"
"9887splitHere46","12923037splitHere46","front"
"9888splitHere46","12923037splitHere46","while"
"9889splitHere46","12923096splitHere46","addKeyListener"
"9890splitHere46","12923116splitHere46","import javax.xml.parsers.DocumentBuilder;<newline46mondego>import javax.xml.parsers.DocumentBuilderFactory;<newline46mondego>import javax.xml.transform.TransformerFactory;<newline46mondego>import javax.xml.transform.dom.DOMSource;<newline46mondego>import javax.xml.transform.stream.StreamResult;<newline46mondego><newline46mondego>import org.w3c.dom.Document;<newline46mondego>import org.w3c.dom.Element;<newline46mondego><newline46mondego>public class Dom<newline46mondego>{<newline46mondego>   public static void main( String[] args ) throws Throwable<newline46mondego>   {<newline46mondego>      DocumentBuilderFactory dbf  = DocumentBuilderFactory.newInstance();<newline46mondego>      dbf.setNamespaceAware( true );<newline46mondego><newline46mondego>      DocumentBuilder db = dbf.newDocumentBuilder();<newline46mondego>      Document doc = db.newDocument();<newline46mondego><newline46mondego>      Element root = doc.createElement( <doubleQuotes46>root<doubleQuotes46> );<newline46mondego>      root.setAttribute( <doubleQuotes46>xmlns:m<doubleQuotes46> , <doubleQuotes46>http://www.lfinance.fr/blog-rachat-credits<doubleQuotes46> );<newline46mondego>      root.setAttribute( <doubleQuotes46>xmlns:rt<doubleQuotes46>, <doubleQuotes46>http://www.lfinance.fr/forum-rachat-credits<doubleQuotes46> );<newline46mondego>      doc.appendChild( root );<newline46mondego><newline46mondego>      Element elt = doc.createElement( <doubleQuotes46>simple<doubleQuotes46> );<newline46mondego>      elt.setAttribute( <doubleQuotes46>m:FC_TargetPath<doubleQuotes46>   , <doubleQuotes46>false<doubleQuotes46> );<newline46mondego>      elt.setAttribute( <doubleQuotes46>m:FC_KeepInContent<doubleQuotes46>, <doubleQuotes46>false<doubleQuotes46> );<newline46mondego>      elt.setAttribute( <doubleQuotes46>rt:filterable<doubleQuotes46>     , <doubleQuotes46>false<doubleQuotes46> );<newline46mondego><newline46mondego>      root.appendChild( doc.createTextNode( <doubleQuotes46>\n\t<doubleQuotes46> ));<newline46mondego>      root.appendChild( elt );<newline46mondego>      root.appendChild( doc.createTextNode( <doubleQuotes46>\n<doubleQuotes46> ));<newline46mondego>      TransformerFactory.newInstance().newTransformer().transform(<newline46mondego>         new DOMSource( doc ),<newline46mondego>         new StreamResult( System.out ));<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"9891splitHere46","12923116splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46> standalone=<doubleQuotes46>no<doubleQuotes46>?><newline46mondego><root<newline46mondego>    xmlns:m=<doubleQuotes46>http://www.lfinance.fr/blog-rachat-credits<doubleQuotes46><newline46mondego>    xmlns:rt=<doubleQuotes46>http://www.lfinance.fr/forum-rachat-credits<doubleQuotes46>><newline46mondego>    <simple<newline46mondego>        m:FC_KeepInContent=<doubleQuotes46>false<doubleQuotes46><newline46mondego>        m:FC_TargetPath=<doubleQuotes46>false<doubleQuotes46><newline46mondego>        rt:filterable=<doubleQuotes46>false<doubleQuotes46> /><newline46mondego></root><newline46mondego>"
"9892splitHere46","12923326splitHere46","foreach square:<newline46mondego>    if the square isn't part of a region:<newline46mondego>        create a new empty region list<newline46mondego>        add the square to it<newline46mondego>        recursivly add all neighboring squares to the region<newline46mondego>"
"9893splitHere46","12923372splitHere46","this"
"9894splitHere46","12923372splitHere46","context"
"9895splitHere46","12923579splitHere46","right"
"9896splitHere46","12923579splitHere46","left"
"9897splitHere46","12923579splitHere46","mergeSort()"
"9898splitHere46","12923579splitHere46","mergeSort(left);<newline46mondego>mergeSort(right);<newline46mondego>"
"9899splitHere46","12923579splitHere46","left = mergeSort(left);<newline46mondego>right = mergeSort(right);<newline46mondego>"
"9900splitHere46","12923629splitHere46","public void setPunt(int index){<newline46mondego>if(index >= 0 && index < PuntenLijst.size()){<newline46mondego>    PuntenLijst.get(index).setX(3);<newline46mondego>    .... setY(5);<newline46mondego>}<newline46mondego>"
"9901splitHere46","12923655splitHere46","FK_Phone_Person"
"9902splitHere46","12923655splitHere46","person_id"
"9903splitHere46","12923655splitHere46","Person"
"9904splitHere46","12923655splitHere46","person_id"
"9905splitHere46","12923655splitHere46","FK_Phone_Person"
"9906splitHere46","12923655splitHere46","person_id"
"9907splitHere46","12923655splitHere46","person"
"9908splitHere46","12923655splitHere46","person_id"
"9909splitHere46","12923666splitHere46","//This for loop will print out the cell array to the screen.//<newline46mondego>for (int i = 0; i < numRows; i++)<newline46mondego>{<newline46mondego>    for (int j = 0; j < numColumns; j++)<newline46mondego>    {<newline46mondego>        location[i][j].printCell();  // location[i][j] not instantiated<newline46mondego>    }<newline46mondego>    System.out.print(<doubleQuotes46>\n<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"9910splitHere46","12923666splitHere46","location[i][j].printCell();<newline46mondego>"
"9911splitHere46","12923666splitHere46","location[i][j] = new Cell();<newline46mondego>"
"9912splitHere46","12923711splitHere46","// In your fragment<newline46mondego><newline46mondego>public interface OnMyFragDismissListener(){<newline46mondego>     void onMyFragDismissed(MyObject obj);<newline46mondego>}    <newline46mondego><newline46mondego>// onCreate...<newline46mondego><newline46mondego>// someCode...<newline46mondego><newline46mondego>// However you have the user select the option<newline46mondego>@Override<newline46mondego>public void onDismiss(DialogInterface d){<newline46mondego>     if(getActivity() instanceof OnMyFragDismissListener)}<newline46mondego>        ((OnMyFragDismissListener)getActivity()).onMyFragDismissed(result); // result being the user choice<newline46mondego>     }<newline46mondego>}<newline46mondego>"
"9913splitHere46","12923711splitHere46","public class YourActivity extends Activity implements OnMyFragDismissListener {<newline46mondego><newline46mondego>   // code...<newline46mondego>    FragmentManager fragman = getFragmentManager();<newline46mondego>    FragClass frag = new FragClass();<newline46mondego>    frag.show(fm, <doubleQuotes46>fragment_sub_connections<doubleQuotes46>);<newline46mondego><newline46mondego><newline46mondego>  // code...<newline46mondego><newline46mondego>   @Override<newline46mondego>   public void onMyFragDismissed(MyObject obj){<newline46mondego>        // Fragment dismissed and object received!<newline46mondego>   }<newline46mondego><newline46mondego> }<newline46mondego>"
"9914splitHere46","12923718splitHere46","public void enumerate() {<newline46mondego>    System.out.println(<doubleQuotes46>enumerate: \<doubleQuotes46><doubleQuotes46> + regex + <doubleQuotes46>\<doubleQuotes46><doubleQuotes46>);<newline46mondego>    int level = 0;<newline46mondego>    String accumulated = <doubleQuotes46><doubleQuotes46>;<newline46mondego>    enumerate(level, accumulated, automaton.getInitialState());<newline46mondego>}<newline46mondego><newline46mondego>private void enumerate(int level, String accumulated, State state) {<newline46mondego>    List<Transition> transitions = state.getSortedTransitions(true);<newline46mondego>    if (state.isAccept()) {<newline46mondego>        System.out.println(accumulated);<newline46mondego>        return;<newline46mondego>    }<newline46mondego>    if (transitions.size() == 0) {<newline46mondego>        assert state.isAccept();<newline46mondego>        return;<newline46mondego>    }<newline46mondego>    int nroptions = state.isAccept() ? transitions.size() : transitions.size() - 1;<newline46mondego>    for (int option = 0; option <= nroptions; option++) {<newline46mondego>        // Moving on to next transition<newline46mondego>        Transition transition = transitions.get(option - (state.isAccept() ? 1 : 0));<newline46mondego>        for (char choice = transition.getMin(); choice <= transition.getMax(); choice++) {<newline46mondego>            enumerate(level + 1, accumulated + choice, transition.getDest());<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9915splitHere46","12923718splitHere46","@Test<newline46mondego>public void enumerateAllVariants() {<newline46mondego>    //String regex = <doubleQuotes46>[ab]{4,6}c<doubleQuotes46>;<newline46mondego>    String regex = <doubleQuotes46>34\\.25\\.14\\.(227|228|229|230|243|244|245|246)<doubleQuotes46>;<newline46mondego>    Xeger generator = new Xeger(regex);<newline46mondego>    generator.enumerate();<newline46mondego>}<newline46mondego>"
"9916splitHere46","12923718splitHere46","-------------------------------------------------------<newline46mondego> T E S T S<newline46mondego>-------------------------------------------------------<newline46mondego>Running nl.flotsam.xeger.XegerTest<newline46mondego>enumerate: <doubleQuotes46>34\.25\.14\.(227|228|229|230|243|244|245|246)<doubleQuotes46><newline46mondego>34.25.14.227<newline46mondego>34.25.14.228<newline46mondego>34.25.14.229<newline46mondego>34.25.14.243<newline46mondego>34.25.14.244<newline46mondego>34.25.14.245<newline46mondego>34.25.14.246<newline46mondego>34.25.14.230<newline46mondego>Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.114 sec<newline46mondego>"
"9917splitHere46","12923769splitHere46","int count = 1;<newline46mondego>while(read.hasNextLine()) {<newline46mondego>    String nextLine = read.nextLine();<newline46mondego>        System.out.println(account.toString(nextLine));<newline46mondego>    if(count %4==0) {<newline46mondego>        vector.addAccount(nextLine);<newline46mondego>    }<newline46mondego>    count++;<newline46mondego>} <newline46mondego>"
"9918splitHere46","12923769splitHere46","public String toString(String line) {<newline46mondego>   for(int i = 0; i < position; i++){<newline46mondego>      line = info[i]; <newline46mondego>      position++;<newline46mondego>   }<newline46mondego>   return info[2]+<doubleQuotes46>, <doubleQuotes46>+info[0]+<doubleQuotes46>, <doubleQuotes46>+info[1]+<doubleQuotes46>, <doubleQuotes46>+info[3];<newline46mondego>}<newline46mondego>"
"9919splitHere46","12923843splitHere46","SwingUtilities.invokeLater(new Runnable() {   <newline46mondego>    public void run() {<newline46mondego>        //HERE<newline46mondego>        //I have a loop that have to be looping at every 500 ms<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9920splitHere46","12923843splitHere46","// HERE<newline46mondego>// I have a loop that have to be looping at every 500 ms<newline46mondego>// and when something must be updated in the GUI:<newline46mondego>SwingUtilities.invokeLater(new Runnable() {   <newline46mondego>    public void run() {<newline46mondego>        // update the GUI as fast as possible<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"9921splitHere46","12923843splitHere46","while (true) {<newline46mondego>    Thread.sleep(500L);<newline46mondego>    String update = getUpdate();<newline46mondego>    SwingUtilities.invokeLater(new Runnable() {   <newline46mondego>        public void run() {<newline46mondego>            textArea.append(update);<newline46mondego>        }<newline46mondego>    });<newline46mondego>}<newline46mondego>"
"9922splitHere46","12923843splitHere46","SwingUtilities.invokeLater()"
"9923splitHere46","12923933splitHere46","super.execute[T, SQLiteJob[T]](job)<newline46mondego>"
"9924splitHere46","12923990splitHere46","compareTo"
"9925splitHere46","12923990splitHere46","Comparable.compareTo"
"9926splitHere46","12923990splitHere46","0"
"9927splitHere46","12923990splitHere46","Object.equals"
"9928splitHere46","12923990splitHere46","true"
"9929splitHere46","12923990splitHere46","Comparator.compareTo"
"9930splitHere46","12923990splitHere46","0"
"9931splitHere46","12923990splitHere46","p.getCode"
"9932splitHere46","12923990splitHere46","String"
"9933splitHere46","12923990splitHere46","str"
"9934splitHere46","12923990splitHere46","String"
"9935splitHere46","12923990splitHere46","String"
"9936splitHere46","12923990splitHere46","equals"
"9937splitHere46","12923990splitHere46","compareTo"
"9938splitHere46","12923990splitHere46","Comparator"
"9939splitHere46","12924028splitHere46","public void onMessage(Message msg){<newline46mondego>   ProjData pd = extractProjectData(msg);<newline46mondego>   if( projectLocked(pd) ) {<newline46mondego>     msg.setStringProperty(<doubleQuotes46>projectId<doubleQuotes46>,pd.getProjectId());<newline46mondego>     sendToOnHoldQueue(pd);<newline46mondego>   }else{<newline46mondego>    processProjectData(pd);<newline46mondego>   }<newline46mondego>}<newline46mondego><newline46mondego>// Say there is an event somewhere when the lock is released<newline46mondego>public void onProjectLockReleased(projectId){<newline46mondego>   // select messages waiting for this project via Jms selectors..<newline46mondego><newline46mondego>   // you may or may not want to lock the project here, while working of the <doubleQuotes46>on hold events<doubleQuotes46><newline46mondego>   MessageConsumer consumer = session.createConsumer(onHoldQueue,<doubleQuotes46>projectId='<doubleQuotes46>+projectId+<doubleQuotes46>'<doubleQuotes46>);<newline46mondego>   while(Messages msg  = consumer.receiveNoWait()){<newline46mondego>     processProjectData(pd); <newline46mondego>   }<newline46mondego>}<newline46mondego>"
"9940splitHere46","12924184splitHere46","body.equals(new String(body.getBytes(<doubleQuotes46>utf-8<doubleQuotes46>), <doubleQuotes46>utf-8<doubleQuotes46>));<newline46mondego>"
"9941splitHere46","12924258splitHere46","byte[] bytes = {0x0, 0x1};<newline46mondego>System.out.println(new BigInteger(1, bytes).bitLength());<newline46mondego>"
"9942splitHere46","12924258splitHere46","1<newline46mondego>"
"9943splitHere46","12924332splitHere46","Matrix"
"9944splitHere46","12924332splitHere46","mMatrix.setRotate()"
"9945splitHere46","12924332splitHere46","mMatrix.setTranslate()"
"9946splitHere46","12924332splitHere46","mMatrix.setScale()"
"9947splitHere46","12924332splitHere46",".rotate()"
"9948splitHere46","12924332splitHere46",".setRotate()"
"9949splitHere46","12924410splitHere46","for (Object x : puntenLijst){<newline46mondego>    ((MyObject)x).verschuif2(3, 3);<newline46mondego>}<newline46mondego>"
"9950splitHere46","12924410splitHere46","ArrayList"
"9951splitHere46","12924410splitHere46","ArrayList"
"9952splitHere46","12924410splitHere46","ArrayList<MyObject> puntenLijst<newline46mondego>"
"9953splitHere46","12924410splitHere46","for (MyObject x : puntenLijst){<newline46mondego>   x.verschuif2(3, 3);<newline46mondego>}<newline46mondego>"
"9954splitHere46","12924532splitHere46","static void capitalizer(String a,int b){<newline46mondego>    if(b==-1){<newline46mondego>        System.out.println(a); //CHANGE: printing in the stop clause<newline46mondego>    }else{<newline46mondego>        char[] achars = a.toCharArray();<newline46mondego>        achars[b] -= 32;<newline46mondego>        String caplet = new String(achars);<newline46mondego>        //CHANGE: not printing every iteration<newline46mondego>        capitalizer(caplet,b-1);<newline46mondego>        capitalizer(a,b-1);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9955splitHere46","12924532splitHere46","2^n"
"9956splitHere46","12924532splitHere46","2^n"
"9957splitHere46","12924532splitHere46","2^n"
"9958splitHere46","12924681splitHere46","-keepattributes Signature<newline46mondego>"
"9959splitHere46","12924724splitHere46","length"
"9960splitHere46","12924724splitHere46","breadth"
"9961splitHere46","12924724splitHere46","height"
"9962splitHere46","12924928splitHere46","PPath line = new PPath();<newline46mondego>line.moveTo(endX, endY);<newline46mondego>line.curveTo(endX + 60, endY, startX - 60, startY, startX, startY);<newline46mondego>"
"9963splitHere46","12924986splitHere46","String[] tokens=s.split(<doubleQuotes46>\\s+<doubleQuotes46>);<newline46mondego>"
"9964splitHere46","12924986splitHere46","<doubleQuotes46>\\s+<doubleQuotes46>"
"9965splitHere46","12925022splitHere46","for each firstName:<newline46mondego>     for each surName:<newline46mondego>         print firstName surName<newline46mondego>"
"9966splitHere46","12925022splitHere46","StringBuilder"
"9967splitHere46","12925022splitHere46","StringBuffer"
"9968splitHere46","12925171splitHere46","JFrame"
"9969splitHere46","12925171splitHere46","JPanel"
"9970splitHere46","12925171splitHere46","super.tableChanged"
"9971splitHere46","12925171splitHere46","tableChanged"
"9972splitHere46","12925171splitHere46","table = new JTable(data, colNames) {<newline46mondego>    private static final long serialVersionUID = 1L;<newline46mondego><newline46mondego>    public void tableChanged(TableModelEvent e) {<newline46mondego>        super.tableChanged(e);<newline46mondego>        int column = e.getColumn();<newline46mondego>        assert e.getFirstRow() == e.getLastRow() : <doubleQuotes46>more than 1 row have been changed!<doubleQuotes46>;<newline46mondego>        int row = e.getFirstRow();<newline46mondego>        if (scrollPane != null) {<newline46mondego>            //some codes<newline46mondego>        }<newline46mondego>    }<newline46mondego>};<newline46mondego>"
"9973splitHere46","12925204splitHere46","Class"
"9974splitHere46","12925204splitHere46","Class"
"9975splitHere46","12925204splitHere46","public static <T> T read(Integer id, Class<T> clazz) {<newline46mondego>    Session session = HibernateUtil.getSessionFactory().openSession();<newline46mondego>    T object = (T) session.get(clazz, id);<newline46mondego>    session.close();<newline46mondego>    return object;<newline46mondego>}<newline46mondego>"
"9976splitHere46","12925204splitHere46","PrdProduct product = MyClass.read(1, PrdProduct.class);<newline46mondego>"
"9977splitHere46","12925218splitHere46","public boolean checkRow(int rowNumber)<newline46mondego>{<newline46mondego>    ArrayList numbersSeen = new ArrayList();<newline46mondego><newline46mondego>    for(int i = 0; i < 9; i += 1)<newline46mondego>    {<newline46mondego>        if(sudokuArray[i][rowNumber] != -1 && numbersSeen.contains(sudokuArray[i][rowNumber]))<newline46mondego>        {<newline46mondego>            return true;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    return false;<newline46mondego>}<newline46mondego>"
"9978splitHere46","12925218splitHere46","rowNumber"
"9979splitHere46","12925218splitHere46","sudokuArray"
"9980splitHere46","12925218splitHere46","sudokuArray != -1"
"9981splitHere46","12925218splitHere46","ArrayList<Integer>"
"9982splitHere46","12925218splitHere46","int i = 0;"
"9983splitHere46","12925218splitHere46","Integer i2 = i;"
"9984splitHere46","12925218splitHere46","checkColumn"
"9985splitHere46","12925218splitHere46","check3X3area"
"9986splitHere46","12925340splitHere46","(^|\s)'|'(\s|$)<newline46mondego><newline46mondego>Pattern p = Pattern.compile(<doubleQuotes46>(^|\\s)'|'(\\s|$)<doubleQuotes46>);<newline46mondego>Matcher m = p.matcher(<doubleQuotes46>quick 'brown' fox jump's over 'the' lazy dog<doubleQuotes46>);<newline46mondego>int cnt = 0;<newline46mondego>while(m.find()) {<newline46mondego>    cnt++;<newline46mondego>}<newline46mondego>System.out.println(cnt);<newline46mondego>"
"9987splitHere46","12925340splitHere46","4"
"9988splitHere46","12925348splitHere46","config.common().objectClass(Timestamp.class).translate(new TSerializable());<newline46mondego>"
"9989splitHere46","12925348splitHere46","import java.sql.Timestamp;   <newline46mondego><newline46mondego>import com.db4o.Db4oEmbedded;   <newline46mondego>import com.db4o.ObjectContainer;   <newline46mondego>import com.db4o.ObjectSet;   <newline46mondego>import com.db4o.config.EmbeddedConfiguration;   <newline46mondego><newline46mondego>public class dbTest {   <newline46mondego><newline46mondego>  public static void listResults(ObjectSet<Timestamp> results) {   <newline46mondego><newline46mondego>    for (Timestamp o : results) {   <newline46mondego>      System.out.println(o);   <newline46mondego>    }   <newline46mondego>  }   <newline46mondego><newline46mondego>  public static void main(String[] args) {   <newline46mondego><newline46mondego>    EmbeddedConfiguration config = Db4oEmbedded.newConfiguration();   <newline46mondego>    config.common().objectClass(Timestamp.class).translate(new TSerializable());   <newline46mondego>    ObjectContainer container = Db4oEmbedded   <newline46mondego>        .openFile(config, <doubleQuotes46>timestamps.db4o<doubleQuotes46>);   <newline46mondego><newline46mondego>    try {   <newline46mondego><newline46mondego>      long now = System.currentTimeMillis();   <newline46mondego>      container.store(new Timestamp(now));   <newline46mondego><newline46mondego>      final ObjectSet<Timestamp> results = container.query(Timestamp.class);   <newline46mondego>      listResults(results);   <newline46mondego>    }   <newline46mondego>    finally {   <newline46mondego>      container.close();   <newline46mondego>    }   <newline46mondego>  }   <newline46mondego>}   <newline46mondego>"
"9990splitHere46","12925391splitHere46","public void run() {<newline46mondego><newline46mondego>   while (!Thread.isInterrupted()) {<newline46mondego>      doSomethinginTheLoop1();<newline46mondego>      blah...blah...blah<newline46mondego>      // if the loop is very long you might want to check isInterrupted <newline46mondego>      // multiple times for quicker termination response<newline46mondego>      doSomethingInTheLoop2();<newline46mondego>   }<newline46mondego><newline46mondego>   // now, here's a decision of what you do<newline46mondego>   // do you throw an InterruptedException or trust others to check interrupted flag.<newline46mondego>   // read Java COncurrency in Practice or similar...<newline46mondego>}<newline46mondego>"
"9991splitHere46","12925703splitHere46","input.next()<newline46mondego>"
"9992splitHere46","12925703splitHere46","for (i = 0; i < 2; i++) {<newline46mondego>   // existing input.next() statements in here<newline46mondego>  ...<newline46mondego><newline46mondego>   input.nextLine();<newline46mondego>}<newline46mondego>"
"9993splitHere46","12925703splitHere46","for"
"9994splitHere46","12925793splitHere46","private"
"9995splitHere46","12925888splitHere46","java.util.Map"
"9996splitHere46","12925894splitHere46","String splitString = <doubleQuotes46>/<doubleQuotes46>; // you can change it to %2F<newline46mondego>String s = <doubleQuotes46>http://www.myurl.com/barcodes/images/024543634737.jpg<doubleQuotes46>;<newline46mondego>int index = s.lastIndexOf(splitString);<newline46mondego>String result= null;<newline46mondego>if(index > -1){<newline46mondego>    result = s.substring(index+splitString.length());<newline46mondego>}<newline46mondego>"
"9997splitHere46","12926001splitHere46","Activity.runOnUiThread()"
"9998splitHere46","12926001splitHere46","Runnable"
"9999splitHere46","12926125splitHere46","public byte[] readBytes(InputStream inputStream, int length)<newline46mondego>        throws IOException {<newline46mondego>    byte[] data = new byte[length];<newline46mondego>    int len = inputStream.read(data);<newline46mondego>    if (len != length) {<newline46mondego>        throw new IOException(<doubleQuotes46>Read the end of stream.<doubleQuotes46>);<newline46mondego>    }<newline46mondego>    return data;<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>//Get Header data<newline46mondego>byte[] headerData = readBytes(inputStream, 9);<newline46mondego><newline46mondego>// I think header data need to parse again, its structure should look like the following format:<newline46mondego>// | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 |<newline46mondego>// |  Version  | Type  | other values  |<newline46mondego>// You can parse them to use headerData<newline46mondego><newline46mondego><newline46mondego>// #######################################<newline46mondego>// write bytes<newline46mondego>public class ByteWriter {<newline46mondego>    private final ByteArrayOutputStream outputStream = new ByteArrayOutputStream();<newline46mondego><newline46mondego>    public void writeBytes(byte[] data) {<newline46mondego>        try {<newline46mondego>            outputStream.write(data);<newline46mondego>        } catch (IOException ex) {<newline46mondego>            ex.printStackTrace();<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public byte[] getBytes() {<newline46mondego>        return outputStream.toByteArray();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"10000splitHere46","12926192splitHere46","Instrumentation.redefineClasses"
"10001splitHere46","12926192splitHere46","transform"
"10002splitHere46","12926192splitHere46","ClassFileTransformer.transform"
"10003splitHere46","12926279splitHere46","public void testHash()<newline46mondego>{<newline46mondego>    System.out.println(<doubleQuotes46>A:<doubleQuotes46> + ((int)'A'));<newline46mondego>    System.out.println(<doubleQuotes46>B:<doubleQuotes46> + ((int)'B'));<newline46mondego>    System.out.println(<doubleQuotes46>a:<doubleQuotes46> + ((int)'a'));<newline46mondego><newline46mondego>    System.out.println(hash(<doubleQuotes46>Aa<doubleQuotes46>.hashCode()));<newline46mondego>    System.out.println(hash(<doubleQuotes46>BB<doubleQuotes46>.hashCode()));<newline46mondego>    System.out.println(hash(<doubleQuotes46>Aa<doubleQuotes46>.hashCode()));<newline46mondego>    System.out.println(hash(<doubleQuotes46>BB<doubleQuotes46>.hashCode()));<newline46mondego><newline46mondego><newline46mondego>    System.out.println(hash(<doubleQuotes46>AaAa<doubleQuotes46>.hashCode()));<newline46mondego>    System.out.println(hash(<doubleQuotes46>BBBB<doubleQuotes46>.hashCode()));<newline46mondego>    System.out.println(hash(<doubleQuotes46>AaBB<doubleQuotes46>.hashCode()));<newline46mondego>    System.out.println(hash(<doubleQuotes46>BBAa<doubleQuotes46>.hashCode()));<newline46mondego><newline46mondego>}<newline46mondego>"
"10004splitHere46","12926279splitHere46","A:65<newline46mondego>B:66<newline46mondego>a:97<newline46mondego>2260<newline46mondego>2260<newline46mondego>2260<newline46mondego>2260<newline46mondego>2019172<newline46mondego>2019172<newline46mondego>2019172<newline46mondego>2019172<newline46mondego>"
"10005splitHere46","12926279splitHere46","@Test<newline46mondego>    public void testN() throws Exception {<newline46mondego>        List<String> l = HashCUtil.generateN(3);<newline46mondego>        for(int i = 0; i < l.size(); ++i){<newline46mondego>            System.out.println(l.get(i) + <doubleQuotes46>---<doubleQuotes46> + l.get(i).hashCode());<newline46mondego>        }<newline46mondego>    }<newline46mondego>AaAaAa---1952508096<newline46mondego>AaAaBB---1952508096<newline46mondego>AaBBAa---1952508096<newline46mondego>AaBBBB---1952508096<newline46mondego>BBAaAa---1952508096<newline46mondego>BBAaBB---1952508096<newline46mondego>BBBBAa---1952508096<newline46mondego>BBBBBB---1952508096<newline46mondego>"
"10006splitHere46","12926279splitHere46","public class HashCUtil {<newline46mondego><newline46mondego>    private static String[] base = new String[] {<doubleQuotes46>Aa<doubleQuotes46>, <doubleQuotes46>BB<doubleQuotes46>};<newline46mondego><newline46mondego>    public static List<String> generateN(int n)<newline46mondego>    {<newline46mondego>        if(n <= 0)<newline46mondego>        {<newline46mondego>            return null;<newline46mondego>        }<newline46mondego><newline46mondego>        List<String> list = generateOne(null);<newline46mondego>        for(int i = 1; i < n; ++i)<newline46mondego>        {<newline46mondego>            list = generateOne(list);<newline46mondego>        }<newline46mondego><newline46mondego>        return list;<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>    public static List<String> generateOne(List<String> strList)<newline46mondego>    {   <newline46mondego>        if((null == strList) || (0 == strList.size()))<newline46mondego>        {<newline46mondego>            strList = new ArrayList<String>();<newline46mondego>            for(int i = 0; i < base.length; ++i)<newline46mondego>            {<newline46mondego>                strList.add(base[i]);<newline46mondego>            }<newline46mondego><newline46mondego>            return strList;<newline46mondego>        }<newline46mondego><newline46mondego>        List<String> result = new ArrayList<String>();<newline46mondego><newline46mondego>        for(int i = 0; i < base.length; ++i)<newline46mondego>        {<newline46mondego>            for(String str: strList)<newline46mondego>            {   <newline46mondego>                result.add(base[i]  + str);<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        return result;      <newline46mondego>    }<newline46mondego>}<newline46mondego>"
"10007splitHere46","12926279splitHere46","public int hashCode() {<newline46mondego>    int h = hash;<newline46mondego>    if (h == 0) {<newline46mondego>        int off = offset;<newline46mondego>        char val[] = value;<newline46mondego>        int len = count;<newline46mondego><newline46mondego>            for (int i = 0; i < len; i++) {<newline46mondego>                h = 31*h + val[off++];<newline46mondego>            }<newline46mondego>            hash = h;<newline46mondego>        }<newline46mondego>        return h;<newline46mondego>    }<newline46mondego>"
"10008splitHere46","12926414splitHere46","JComponent#getGraphics"
"10009splitHere46","12926414splitHere46","public void run() {<newline46mondego>    while(true) {<newline46mondego>          gameUpdate(); <newline46mondego>          if(getGraphics() != null){<newline46mondego>              gameRender();   // render the game to a buffer<newline46mondego>              try {<newline46mondego>                  SwingUtilities.invokeAndWait(new Runnable() {<newline46mondego>                      public void run() {<newline46mondego>                          paintScreen();  // draw the buffer on-screen<newline46mondego>                      }<newline46mondego>                  });<newline46mondego>              } catch (Exception exp) {<newline46mondego>                  exp.printStackTrace(); // please clean this up<newline46mondego>              }<newline46mondego>          }<newline46mondego>          try {<newline46mondego>            Thread.sleep(28);<newline46mondego>          } catch (InterruptedException e) {}<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"10010splitHere46","12926414splitHere46","paintScreen()"
"10011splitHere46","12926414splitHere46","repaint"
"10012splitHere46","12926414splitHere46","paintScreen"
"10013splitHere46","12926414splitHere46","paintComponent"
"10014splitHere46","12926466splitHere46","Graphics2D g = imageBase.createGraphics();<newline46mondego>// color, font, etc settings<newline46mondego>g.drawString(<doubleQuotes46>title<doubleQuotes46>, 0, 0);<newline46mondego>g.dispose();<newline46mondego>"
"10015splitHere46","12926466splitHere46","g.drawString"
"10016splitHere46","12926484splitHere46","String sql =  <doubleQuotes46>update employer set employerid=IF(?=0,employerid,?),<doubleQuotes46>+<newline46mondego>              <doubleQuotes46>status=IFNULL(?,status), url=IFNULL(?,url) <doubleQuotes46> +<newline46mondego>              <doubleQuotes46>where id=?<doubleQuotes46>;<newline46mondego>"
"10017splitHere46","12926484splitHere46","0"
"10018splitHere46","12926484splitHere46","null"
"10019splitHere46","12926504splitHere46","public static void saveToSP(Context context, String key, String value) {<newline46mondego>    SharedPreferences saveData = context.getSharedPreferences(File, Context.MODE_PRIVATE);<newline46mondego>    SharedPreferences.Editor editor = saveData.edit();<newline46mondego>    editor.putString(key, value);<newline46mondego>    editor.commit();<newline46mondego>}<newline46mondego>"
"10020splitHere46","12926505splitHere46","String[] args"
"10021splitHere46","12926505splitHere46","validateInput()"
"10022splitHere46","12926505splitHere46","public static void main(String[] args) {<newline46mondego>    if (validateInput(args)) {<newline46mondego>        ...<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>private static boolean validateInput(String[] args) {<newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"10023splitHere46","12926654splitHere46","while (!connectionsList.isEmpty()) {<newline46mondego>  for(Connection connection : connectionsList) {<newline46mondego><newline46mondego>    if connection.getState() == READY_FOR_A {<newline46mondego>      connection.stepA();<newline46mondego>      //this method should return immediately and the connection<newline46mondego>      //should go into the waiting state for some time before going<newline46mondego>      //into the READY_FOR_B state<newline46mondego>    }<newline46mondego>    if connection.getState() == READY_FOR_B {<newline46mondego>      connection.stepB();<newline46mondego>      //same immediate return behavior as above<newline46mondego>    }<newline46mondego>    if connection.getState() == READY_FOR_C {<newline46mondego>      connection.stepC();<newline46mondego>      //same immediate return behavior as above<newline46mondego>    }<newline46mondego>    if connection.getState() == WAITING {<newline46mondego>      //Do nothing, skip over<newline46mondego>    }<newline46mondego>    if connection.getState() == FINISHED {<newline46mondego>      connectionsList.remove(connection);  <newline46mondego>    }<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"10024splitHere46","12926793splitHere46","static void toBinary(int a){<newline46mondego>    if(a!=0) {<newline46mondego>        toBinary(a/2);<newline46mondego>        System.out.print(a%2);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"10025splitHere46","12926793splitHere46","static String toBinary(int a){<newline46mondego>    if(a==0) {<newline46mondego>        return <doubleQuotes46><doubleQuotes46>;<newline46mondego>    }<newline46mondego>    else {<newline46mondego>        return toBinary(a/2) + (a%2);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public static void main(String[]args){<newline46mondego>    System.out.println(toBinary(24));<newline46mondego>}<newline46mondego>"
"10026splitHere46","12926829splitHere46","Vector"
"10027splitHere46","12926829splitHere46","Objects"
"10028splitHere46","12926829splitHere46","Vector#get"
"10029splitHere46","12926829splitHere46","Object"
"10030splitHere46","12926829splitHere46","PreparedStatement#setString"
"10031splitHere46","12926829splitHere46","String"
"10032splitHere46","12926829splitHere46","Vector"
"10033splitHere46","12926829splitHere46","String"
"10034splitHere46","12926829splitHere46","Vector<String> myVector = new Vector<String>(25);<newline46mondego>"
"10035splitHere46","12926829splitHere46","Vector"
"10036splitHere46","12926829splitHere46","String"
"10037splitHere46","12926829splitHere46","pst1.setString(1, (String)cellStoreVector.get(0));<newline46mondego>"
"10038splitHere46","12926829splitHere46","Vector"
"10039splitHere46","12926829splitHere46","String"
"10040splitHere46","12926829splitHere46","PreparedStatement"
"10041splitHere46","12926829splitHere46","pst1.setObject(1, cellStoreVector.get(0));<newline46mondego>"
"10042splitHere46","12927084splitHere46","NumberFormat"
"10043splitHere46","12927084splitHere46","DecimalFormat"
"10044splitHere46","12927084splitHere46","DecimalFormat dFormat = new DecimalFormat(<doubleQuotes46>#,##,####<doubleQuotes46>);<newline46mondego>String value = dFormat.format(100000);<newline46mondego>System.out.println(<doubleQuotes46>Formatted Value=<doubleQuotes46>+value);<newline46mondego>"
"10045splitHere46","12927086splitHere46","int i = 1;<newline46mondego>System.out.println((char)(i+'A'-1));<newline46mondego>"
"10046splitHere46","12927303splitHere46","public class Sample {<newline46mondego><newline46mondego>    public Sample(){}<newline46mondego>    public int kk;<newline46mondego>    public List<Map<String,String>> fields;<newline46mondego><newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        String s = <doubleQuotes46>[{\<doubleQuotes46>kk\<doubleQuotes46>:1, \<doubleQuotes46>fields\<doubleQuotes46>:[{\<doubleQuotes46>a\<doubleQuotes46>:\<doubleQuotes46>a1\<doubleQuotes46>}]}, {\<doubleQuotes46>kk\<doubleQuotes46>:5}, {\<doubleQuotes46>kk\<doubleQuotes46>:2}, {\<doubleQuotes46>kk\<doubleQuotes46>:8}, {\<doubleQuotes46>kk\<doubleQuotes46>:6, \<doubleQuotes46>fields\<doubleQuotes46>:[{\<doubleQuotes46>b\<doubleQuotes46>:\<doubleQuotes46>b1\<doubleQuotes46>}]}]<doubleQuotes46>;<newline46mondego>        Sample[] r = new Gson().fromJson(s, Sample[].class);<newline46mondego>        for(Sample t: r)<newline46mondego>            System.out.println(<doubleQuotes46>>> <doubleQuotes46> + t.kk + <doubleQuotes46> <doubleQuotes46> + t.fields);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"10047splitHere46","12927303splitHere46",">> 1 [{a=a1}]<newline46mondego>>> 5 null<newline46mondego>>> 2 null<newline46mondego>>> 8 null<newline46mondego>>> 6 [{b=b1}]<newline46mondego>"
"10048splitHere46","12927326splitHere46","/ValidationServlet"
"10049splitHere46","12927326splitHere46","ServletValidation"
"10050splitHere46","12927326splitHere46","login.jsp"
"10051splitHere46","12927326splitHere46","Request#getContextPath()"
"10052splitHere46","12927326splitHere46","<form action=<doubleQuotes46>${request.contextPath}/ValidationServlet<doubleQuotes46> ...><newline46mondego>    <!-- content... --><newline46mondego></form><newline46mondego>"
"10053splitHere46","12927326splitHere46","<% ... %>"
"10054splitHere46","12927326splitHere46","<form action=<doubleQuotes46><%=request.getContextPath()%>/ValidationServlet<doubleQuotes46> ...><newline46mondego>    <!-- content... --><newline46mondego></form><newline46mondego>"
"10055splitHere46","12927387splitHere46","private class MyPost extends AsyncTask<Void,Void,Void>{<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected Void doInBackground(Void... arg0) {<newline46mondego>        // TODO Auto-generated method stub<newline46mondego>        // Create a new HttpClient and Post Header<newline46mondego>        HttpClient httpclient = new DefaultHttpClient();<newline46mondego>        HttpPost httppost = new HttpPost(<doubleQuotes46>http://cdobiz.com/submit/<doubleQuotes46>);<newline46mondego><newline46mondego>        try {<newline46mondego>            // Add your data<newline46mondego><newline46mondego>            EditText txtName = (EditText)findViewById(R.id.txtBusinessName);<newline46mondego>            EditText txtDesc = (EditText)findViewById(R.id.txtDescription);<newline46mondego><newline46mondego>            List<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>(2);<newline46mondego>            nameValuePairs.add(new BasicNameValuePair(<doubleQuotes46>frmName<doubleQuotes46>,txtName.getText().toString() ));<newline46mondego>            nameValuePairs.add(new BasicNameValuePair(<doubleQuotes46>frmDesc<doubleQuotes46>, txtDesc.getText().toString()));<newline46mondego>            httppost.setEntity(new UrlEncodedFormEntity(nameValuePairs));<newline46mondego><newline46mondego>            // Execute HTTP Post Request<newline46mondego>            HttpResponse response = httpclient.execute(httppost);<newline46mondego>            Log.v(<doubleQuotes46>Post Status<doubleQuotes46>,<doubleQuotes46>Code: <doubleQuotes46>+response.getStatusLine().getStatusCode());<newline46mondego>        } catch (ClientProtocolException e) {<newline46mondego>            // TODO Auto-generated catch block<newline46mondego>        } catch (IOException e) {<newline46mondego>            // TODO Auto-generated catch block<newline46mondego>        }<newline46mondego>        return null;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"10056splitHere46","12927450splitHere46","File f = new File(Environment.getExternalStorageDirectory(),<doubleQuotes46>/Music/message\<doubleQuotes46>+ i +\<doubleQuotes46>.3gp\<doubleQuotes46><doubleQuotes46>) ;<newline46mondego>"
"10057splitHere46","12927463splitHere46","@SuppressWarnings(<doubleQuotes46>unchecked<doubleQuotes46>)"
"10058splitHere46","12927463splitHere46","Object"
"10059splitHere46","12927463splitHere46","// properties are not quoted for readability<newline46mondego>{ a: 2, b : {c:3} }<newline46mondego>"
"10060splitHere46","12927463splitHere46","map.get(<doubleQuotes46>a<doubleQuotes46>)<newline46mondego>"
"10061splitHere46","12927463splitHere46","@SupressWarnings"
"10062splitHere46","12927472splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>utf-8<doubleQuotes46>?><newline46mondego><main><newline46mondego>    <background><newline46mondego>        <defintion>This is a test</defintion><newline46mondego>    </background><newline46mondego></main><newline46mondego>"
"10063splitHere46","12927472splitHere46","InputStream is = getResources().openRawResource(R.raw.content);<newline46mondego>    DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();<newline46mondego><newline46mondego>        DocumentBuilder dBuilder;<newline46mondego>            try {<newline46mondego>                dBuilder = dbFactory.newDocumentBuilder();<newline46mondego>                try {<newline46mondego>                    Document doc = dBuilder.parse(is,<doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>                    NodeList nl = doc.getElementsByTagName(<doubleQuotes46>main<doubleQuotes46>);<newline46mondego><newline46mondego>                    System.out.println(<doubleQuotes46>NodeList NodeList<doubleQuotes46>+nl.getLength());<newline46mondego><newline46mondego>                } catch (SAXException e) {<newline46mondego>                    // TODO Auto-generated catch block<newline46mondego><newline46mondego>                    e.printStackTrace();<newline46mondego>                } catch (IOException e) {<newline46mondego>                    // TODO Auto-generated catch block<newline46mondego>                    e.printStackTrace();<newline46mondego>                } //Blows up right here.<newline46mondego>            } catch (ParserConfigurationException e) {<newline46mondego>                // TODO Auto-generated catch block<newline46mondego>                e.printStackTrace();<newline46mondego>            }<newline46mondego>"
"10064splitHere46","12927595splitHere46","final StringBuilder sb = new StringBuilder(<doubleQuotes46><doubleQuotes46>);<newline46mondego>while (rows.hasNext()) {<newline46mondego>    Row row = (Row) rows.next(); <newline46mondego>    // how to write to a semicolon delimited dat file here<newline46mondego>    Iterator<Cell> cells = row.cellIterator();<newline46mondego><newline46mondego>     while (cells.hasNext()) {<newline46mondego>        Cell cell = cells.next();<newline46mondego>        sb.append(cell.toString()).append(<doubleQuotes46>;<doubleQuotes46>);<newline46mondego>    }<newline46mondego>    sb.append(<doubleQuotes46>\n<doubleQuotes46>);<newline46mondego>}   <newline46mondego><newline46mondego>File file = new File(<doubleQuotes46>someFile.dat<doubleQuotes46>);<newline46mondego><newline46mondego>if (!file.exists()) {<newline46mondego>    file.createNewFile();<newline46mondego>}<newline46mondego><newline46mondego>FileWriter fw = new FileWriter(file.getAbsoluteFile());<newline46mondego>BufferedWriter bw = new BufferedWriter(fw);<newline46mondego>bw.write(sb.toString());<newline46mondego>bw.close();<newline46mondego>"
"10065splitHere46","12927635splitHere46","T"
"10066splitHere46","12927635splitHere46","Comparable"
"10067splitHere46","12927635splitHere46","PriorityQ"
"10068splitHere46","12927635splitHere46","class PriorityQ<T extends Comparable<T>><newline46mondego>"
"10069splitHere46","12927635splitHere46","queArray"
"10070splitHere46","12927635splitHere46","new"
"10071splitHere46","12927635splitHere46","T"
"10072splitHere46","12927635splitHere46","PriorityQ"
"10073splitHere46","12927635splitHere46","T"
"10074splitHere46","12927635splitHere46","queArray = new T[maxSize];  <newline46mondego>"
"10075splitHere46","12927635splitHere46","Comparable.compareTo"
"10076splitHere46","12927635splitHere46","if( item .compareTo(queArray[j]) > 0 )      // if new item larger,<newline46mondego>"
"10077splitHere46","12927674splitHere46","AjaxEventBehavior behavior = new AjaxEventBehavior(<doubleQuotes46>keyup<doubleQuotes46>) {<newline46mondego><newline46mondego>  @Override<newline46mondego>  protected void onEvent(AjaxRequestTarget target) {<newline46mondego>    System.out.println(<doubleQuotes46>Hello world!<doubleQuotes46>);<newline46mondego>  }<newline46mondego>  @Override<newline46mondego>  protected void updateAjaxAttributes(AjaxRequestAttributes attributes)<newline46mondego>    super.updateAjaxAttributes(attributes);<newline46mondego><newline46mondego>    attributes.setThrottlingSettings(new ThrottlingSettings(id, Duration.ONE_SECOND, true));<newline46mondego>  }<newline46mondego>"
"10078splitHere46","12927701splitHere46","SELECT"
"10079splitHere46","12927701splitHere46","find"
"10080splitHere46","12927701splitHere46","@TransactionAttribute(TransactionAttributeType.REQUIRES_NEW)"
"10081splitHere46","12927701splitHere46","find"
"10082splitHere46","12927714splitHere46","(https?[://.0-9-?a-z=_#!A-Z]*)<newline46mondego>"
"10083splitHere46","12927714splitHere46","["
"10084splitHere46","12927714splitHere46","]"
"10085splitHere46","12927714splitHere46","[aegl]+"
"10086splitHere46","12927714splitHere46","/"
"10087splitHere46","12927714splitHere46","Pattern.quote(<doubleQuotes46>+<doubleQuotes46>)"
"10088splitHere46","12927714splitHere46","\+"
"10089splitHere46","12927714splitHere46","+"
"10090splitHere46","12927714splitHere46","+"
"10091splitHere46","12927714splitHere46","\\"
"10092splitHere46","12927714splitHere46","Pattern pattern = Pattern.compile(<doubleQuotes46>(.*)(https?[:/.0-9-?a-z=_#!A-Z+]*)(.*)<doubleQuotes46>);<newline46mondego>Pattern pattern = Pattern.compile(<doubleQuotes46>(.*)(https?[:/.0-9-?a-z=_#!A-Z\\+]*)(.*)<doubleQuotes46>);<newline46mondego>"
"10093splitHere46","12927824splitHere46","final RepeatingView rv = new RepeatingView(<doubleQuotes46>rv<doubleQuotes46>);<newline46mondego>rv.add(new MyPanel(rv.newChildId()));<newline46mondego>...<newline46mondego>AjaxLink addPanelLink = new AjaxLink(<doubleQuotes46>addPanelLink<doubleQuotes46>) {<newline46mondego>     public void onSubmit(AjaxRequestTarget target) {<newline46mondego>         MyOtherPanel pnl = new MyOtherPanel(rv.newChildId())<newline46mondego>         rv.add(pnl);<newline46mondego>         target.prependJavaScript(String.format(<newline46mondego>                <doubleQuotes46>var item=document.createElement('%s');item.id='%s';var container = $('%s'); container.append(item,container.firstChild);<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>div<doubleQuotes46>,<newline46mondego>                pnl.getMarkupId(),<newline46mondego>                <doubleQuotes46>.dom_parent_div_id<doubleQuotes46>));<newline46mondego>         target.add(pnl);<newline46mondego>     }<newline46mondego>};<newline46mondego>"
"10094splitHere46","12927888splitHere46","//front.next = newNode;<newline46mondego>rear.next = newNode;<newline46mondego>rear = newNode;<newline46mondego>objectCount++;<newline46mondego>return true;<newline46mondego>"
"10095splitHere46","12928025splitHere46","if (isOperator())"
"10096splitHere46","12928084splitHere46","for(int i = 10; i >= 0; i--){<newline46mondego>    System.out.println(i);<newline46mondego>    System.out.println(10 - i);<newline46mondego>} <newline46mondego>"
"10097splitHere46","12928084splitHere46","for (int i = 0; i <= 10; i++) {<newline46mondego>    System.out.println(10 - i);<newline46mondego>    System.out.println(i);<newline46mondego>} <newline46mondego>"
"10098splitHere46","12928084splitHere46","char[]"
"10099splitHere46","12928084splitHere46","char[] forwardChars = new char[str.length()];<newline46mondego>char[] reverseChars = new char[str.length()];<newline46mondego>for (int i = 0; i < str.length(); i++) {<newline46mondego>    forwardChars[i] = str.charAt(i);<newline46mondego>    reverseChars[reverseChars.length - i - 1] = str.charAt(i);<newline46mondego>}<newline46mondego>String forwardString = new String(forwardChars);<newline46mondego>String reverseString = new String(reverseChars);<newline46mondego>"
"10100splitHere46","12928084splitHere46","forwardString"
"10101splitHere46","12928084splitHere46","str"
"10102splitHere46","12928141splitHere46","SQLServerTask"
"10103splitHere46","12928141splitHere46","buildSrc"
"10104splitHere46","12928141splitHere46","buildSrc"
"10105splitHere46","12928141splitHere46","dbhelpertasks.grovvy"
"10106splitHere46","12928141splitHere46","gradle"
"10107splitHere46","12928141splitHere46","buildSrc"
"10108splitHere46","12928141splitHere46",".gradle"
"10109splitHere46","12928141splitHere46","contentDbTask"
"10110splitHere46","12928141splitHere46","dbhelpertasks.gradle"
"10111splitHere46","12928141splitHere46","task getSiteParams(type: contentDbTask)"
"10112splitHere46","12928141splitHere46","dbhelpertasks.groovy"
"10113splitHere46","12928141splitHere46","build.gradle"
"10114splitHere46","12928153splitHere46","Fragment 32-bit:<newline46mondego> Include-Resource: x32/libjnotify.so=lib/libjnotify.so<newline46mondego><newline46mondego> Fragment 64-bit:<newline46mondego> Include-Resource: x64/libjnotify.so=lib/libjnotify.so<newline46mondego>"
"10115splitHere46","12928168splitHere46","String#split"
"10116splitHere46","12928168splitHere46","."
"10117splitHere46","12928168splitHere46","?"
"10118splitHere46","12928168splitHere46","testStr.split(<doubleQuotes46>[.?]<doubleQuotes46>);<newline46mondego>"
"10119splitHere46","12928168splitHere46","|"
"10120splitHere46","12928168splitHere46","testStr.split(<doubleQuotes46>\\.|\\?<doubleQuotes46>);<newline46mondego>"
"10121splitHere46","12928168splitHere46","testStr.split(<doubleQuotes46>(?<=[.?])<doubleQuotes46>)<newline46mondego>"
"10122splitHere46","12928357splitHere46","replaceAll"
"10123splitHere46","12928357splitHere46","(?i)"
"10124splitHere46","12928357splitHere46","case-insensitive"
"10125splitHere46","12928357splitHere46","String str = <doubleQuotes46>Software Industry. software Industry. SOFTWARE INDUSTRY. <doubleQuotes46>+<newline46mondego>                                                    <doubleQuotes46>software industry. <doubleQuotes46><newline46mondego>str = str.replaceAll(<doubleQuotes46>(?i)(software industry)<doubleQuotes46>, <doubleQuotes46>\\*$1\\*<doubleQuotes46>);<newline46mondego>"
"10126splitHere46","12928625splitHere46","mfuser"
"10127splitHere46","12928625splitHere46","sa"
"10128splitHere46","12928625splitHere46","mfuser"
"10129splitHere46","12928698splitHere46","String executeCmd = <doubleQuotes46>cmd /c net stop \<doubleQuotes46> + serviceName + <doubleQuotes46>\<doubleQuotes46>+<doubleQuotes46> >> <doubleQuotes46>+ fileName<doubleQuotes46>"
"10130splitHere46","12928722splitHere46","CLASSPATH"
"10131splitHere46","12928722splitHere46","WEB-INF/lib"
"10132splitHere46","12928722splitHere46","server/web"
"10133splitHere46","12928722splitHere46","CLASSPATH"
"10134splitHere46","12928789splitHere46","<s:property value=<doubleQuotes46>name<doubleQuotes46>/><newline46mondego>"
"10135splitHere46","12928789splitHere46","name"
"10136splitHere46","12928789splitHere46","name"
"10137splitHere46","12928789splitHere46","<s:property value=<doubleQuotes46>userName<doubleQuotes46>/>"
"10138splitHere46","12928789splitHere46","get+YourProperty()"
"10139splitHere46","12928789splitHere46","getName()"
"10140splitHere46","12928789splitHere46","helloAction"
"10141splitHere46","12928789splitHere46","http://yourIp:port/yourApplicationName/yourNameSpace/yourAction<newline46mondego>"
"10142splitHere46","12928789splitHere46","http://yourIp:8080/HelloWorldStruts/testNameSp/helloAction<newline46mondego>"
"10143splitHere46","12928908splitHere46","final String a=<doubleQuotes46>1<doubleQuotes46>;"
"10144splitHere46","12928933splitHere46","OozieClient wc = new OozieClient(<doubleQuotes46>http://something:1100/oozie<doubleQuotes46>);<newline46mondego><newline46mondego>Properties conf = wc.createConfiguration();<newline46mondego>Properties p = new Properties();<newline46mondego>FileInputStream fis = new FileInputStream(<doubleQuotes46>myfile.properties<doubleQuotes46>);<newline46mondego>p.load(fis);<newline46mondego>conf.putAll(p);<newline46mondego>fis.close(); // you still need to close the stream<newline46mondego>"
"10145splitHere46","12928933splitHere46","jobTracker=foo<newline46mondego>nameNode=bar<newline46mondego>"
"10146splitHere46","12928995splitHere46","Author: Jeff Gilfelt<newline46mondego><newline46mondego>The code in this project is licensed under the Apache Software License 2.0. <newline46mondego>Copyright (c) 2011 readyState Software Ltd.<newline46mondego>"
"10147splitHere46","12929010splitHere46","sequence.nextval"
"10148splitHere46","12929010splitHere46","INSERT INTO table_name( table_id, <<other columns>> )<newline46mondego>  VALUES( sequence_name.nextval, <<bind variables>> )<newline46mondego>"
"10149splitHere46","12929010splitHere46","INSERT INTO table_name( table_id, <<other columns>> )<newline46mondego>  SELECT sequence_name.nextval, <<other values>><newline46mondego>    FROM some_other_table<newline46mondego>"
"10150splitHere46","12929203splitHere46","SearchBox.java"
"10151splitHere46","12929486splitHere46","PortUnreachableException"
"10152splitHere46","12929486splitHere46","import java.io.*;<newline46mondego>import java.net.*;<newline46mondego><newline46mondego>class UDPClient<newline46mondego>{<newline46mondego>   public static void main(String args[]) throws Exception<newline46mondego>   {<newline46mondego>      while(true) {<newline46mondego>         try{<newline46mondego>         DatagramSocket clientSocket = new DatagramSocket();<newline46mondego>         InetAddress IPAddress = InetAddress.getByName(<doubleQuotes46>localhost<doubleQuotes46>);<newline46mondego>         byte[] sendData = new byte[100];<newline46mondego>         byte[] receiveData = new byte[100];<newline46mondego>         String sentence = <doubleQuotes46>Hello Server!<doubleQuotes46>;<newline46mondego>         sendData = sentence.getBytes();<newline46mondego>         DatagramPacket sendPacket = new DatagramPacket(sendData, sendData.length, IPAddress, 9876);<newline46mondego>         clientSocket.send(sendPacket);<newline46mondego>         DatagramPacket receivePacket = new DatagramPacket(receiveData, receiveData.length);<newline46mondego>         clientSocket.receive(receivePacket);<newline46mondego>         String modifiedSentence = new String(receivePacket.getData());<newline46mondego>         System.out.println(<doubleQuotes46>FROM SERVER:<doubleQuotes46> + modifiedSentence);<newline46mondego>         clientSocket.close();<newline46mondego>         }<newline46mondego>         catch (PortUnreachableException pe)<newline46mondego>         {<newline46mondego>           System.out.println(<doubleQuotes46>COULDN'T CONNECT TO SERVER:<doubleQuotes46> + pe.getMessage());<newline46mondego>         }<newline46mondego>         catch (Exception ex)<newline46mondego>         {<newline46mondego>           System.out.println(<doubleQuotes46>COULDN'T CONNECT TO SERVER:<doubleQuotes46> + ex.getMessage());<newline46mondego>         }<newline46mondego>         Thread.sleep(2000);<newline46mondego>      }<newline46mondego><newline46mondego>   }<newline46mondego>}<newline46mondego>"
"10153splitHere46","12929582splitHere46","ImageIcon"
"10154splitHere46","12929582splitHere46","Icon"
"10155splitHere46","12929582splitHere46","Null value"
"10156splitHere46","12929582splitHere46","Icon im1= new ImageIcon why???"
"10157splitHere46","12929582splitHere46","Java Object"
"10158splitHere46","12929582splitHere46","Icon"
"10159splitHere46","12929582splitHere46","instanceof"
"10160splitHere46","12929582splitHere46","ImageIcon"
"10161splitHere46","12929582splitHere46","import java.awt.BorderLayout;<newline46mondego>import java.awt.ComponentOrientation;<newline46mondego>import java.awt.Dimension;<newline46mondego>import java.awt.event.ActionEvent;<newline46mondego><newline46mondego>import javax.swing.AbstractAction;<newline46mondego>import javax.swing.Box;<newline46mondego>import javax.swing.Icon;<newline46mondego>import javax.swing.JButton;<newline46mondego>import javax.swing.JComboBox;<newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JLabel;<newline46mondego>import javax.swing.JMenu;<newline46mondego>import javax.swing.JMenuBar;<newline46mondego>import javax.swing.JMenuItem;<newline46mondego>import javax.swing.JPanel;<newline46mondego>import javax.swing.JSeparator;<newline46mondego>import javax.swing.JTextField;<newline46mondego>import javax.swing.JTextPane;<newline46mondego>import javax.swing.UIManager;<newline46mondego>import javax.swing.border.BevelBorder;<newline46mondego><newline46mondego>public class MenuExample extends JPanel {<newline46mondego><newline46mondego>    private static final long serialVersionUID = 1L;<newline46mondego>    private JTextPane pane;<newline46mondego>    private JMenuBar menuBar;<newline46mondego><newline46mondego>    public MenuExample() {<newline46mondego>        menuBar = new JMenuBar();<newline46mondego>        JMenu formatMenu = new JMenu(<doubleQuotes46>Justify<doubleQuotes46>);<newline46mondego>        formatMenu.setMnemonic('J');<newline46mondego>        formatMenu.setIcon(UIManager.getIcon(<doubleQuotes46>OptionPane.errorIcon<doubleQuotes46>));<newline46mondego>        MenuAction leftJustifyAction = new MenuAction(<doubleQuotes46>Left<doubleQuotes46>, UIManager.getIcon(<doubleQuotes46>OptionPane.errorIcon<doubleQuotes46>));<newline46mondego>        MenuAction rightJustifyAction = new MenuAction(<doubleQuotes46>Right<doubleQuotes46>, UIManager.getIcon(<doubleQuotes46>OptionPane.informationIcon<doubleQuotes46>));<newline46mondego>        MenuAction centerJustifyAction = new MenuAction(<doubleQuotes46>Center<doubleQuotes46>, UIManager.getIcon(<doubleQuotes46>OptionPane.warningIcon<doubleQuotes46>));<newline46mondego>        MenuAction fullJustifyAction = new MenuAction(<doubleQuotes46>Full<doubleQuotes46>, UIManager.getIcon(<doubleQuotes46>OptionPane.questionIcon<doubleQuotes46>));<newline46mondego>        JMenuItem item;<newline46mondego>        item = formatMenu.add(leftJustifyAction);<newline46mondego>        item.setMnemonic('L');<newline46mondego>        item = formatMenu.add(rightJustifyAction);<newline46mondego>        item.setMnemonic('R');<newline46mondego>        item = formatMenu.add(centerJustifyAction);<newline46mondego>        item.setMnemonic('C');<newline46mondego>        item = formatMenu.add(fullJustifyAction);<newline46mondego>        item.setMnemonic('F');<newline46mondego>        menuBar.add(formatMenu);<newline46mondego>        menuBar.add(createMenu(<doubleQuotes46>Menu 1<doubleQuotes46>));<newline46mondego>        menuBar.add(createMenu(<doubleQuotes46>Menu 2<doubleQuotes46>));<newline46mondego>        menuBar.add(createMenu(<doubleQuotes46>Menu 3<doubleQuotes46>));<newline46mondego>        menuBar.add(Box.createHorizontalGlue());<newline46mondego>        menuBar.add(new JSeparator());<newline46mondego>        menuBar.add(new JButton(<doubleQuotes46>   Seach ....  <doubleQuotes46>));<newline46mondego>        menuBar.add(new JLabel());<newline46mondego>        menuBar.add(new JTextField(<doubleQuotes46>   Seach ....  <doubleQuotes46>));<newline46mondego>        menuBar.add(new JComboBox(new Object[]{<doubleQuotes46>height<doubleQuotes46>, <doubleQuotes46>length<doubleQuotes46>, <doubleQuotes46>volume<doubleQuotes46>}));<newline46mondego>        menuBar.add(createMenu(<doubleQuotes46>About<doubleQuotes46>));<newline46mondego>        menuBar.setBorder(new BevelBorder(BevelBorder.RAISED));<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    private JMenu createMenu(String title) {<newline46mondego>        JMenu m = new JMenu(title);<newline46mondego>        m.add(<doubleQuotes46>Menu item #1 in <doubleQuotes46> + title);<newline46mondego>        m.add(<doubleQuotes46>Menu item #2 in <doubleQuotes46> + title);<newline46mondego>        m.add(<doubleQuotes46>Menu item #3 in <doubleQuotes46> + title);<newline46mondego>        if (title.equals(<doubleQuotes46>About<doubleQuotes46>)) {<newline46mondego>            m.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);<newline46mondego>        }<newline46mondego>        return m;<newline46mondego>    }<newline46mondego><newline46mondego>    class MenuAction extends AbstractAction {<newline46mondego><newline46mondego>        public MenuAction(String text, Icon icon) {<newline46mondego>            super(text, icon);<newline46mondego>        }<newline46mondego><newline46mondego>        public void actionPerformed(ActionEvent e) {<newline46mondego>            try {<newline46mondego>                pane.getStyledDocument().insertString(0,<newline46mondego>                        <doubleQuotes46>Action [<doubleQuotes46> + e.getActionCommand() + <doubleQuotes46>] performed!\n<doubleQuotes46>,<newline46mondego>                        null);<newline46mondego>            } catch (Exception ex) {<newline46mondego>                ex.printStackTrace();<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String s[]) {<newline46mondego>        MenuExample example = new MenuExample();<newline46mondego>        example.pane = new JTextPane();<newline46mondego>        example.pane.setPreferredSize(new Dimension(250, 250));<newline46mondego>        example.pane.setBorder(new BevelBorder(BevelBorder.LOWERED));<newline46mondego>        JFrame frame = new JFrame(<doubleQuotes46>Menu Example<doubleQuotes46>);<newline46mondego>        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        frame.setJMenuBar(example.menuBar);<newline46mondego>        frame.getContentPane().add(example.pane, BorderLayout.CENTER);<newline46mondego>        frame.pack();<newline46mondego>        frame.setVisible(true);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"10162splitHere46","12929600splitHere46","ClassA.java"
"10163splitHere46","12929600splitHere46","./a/sub"
"10164splitHere46","12929600splitHere46","ClassB.java"
"10165splitHere46","12929600splitHere46","./b"
"10166splitHere46","12929600splitHere46","ClassA.java"
"10167splitHere46","12929600splitHere46","package a.sub;"
"10168splitHere46","12929600splitHere46","package b;"
"10169splitHere46","12929600splitHere46","public"
"10170splitHere46","12929600splitHere46","public class ClassA"
"10171splitHere46","12929600splitHere46","import b.*;"
"10172splitHere46","12929600splitHere46","import b.ClassB;"
"10173splitHere46","12929600splitHere46","ClassB"
"10174splitHere46","12929600splitHere46","ClassA"
"10175splitHere46","12929600splitHere46","./b/ClassB.class"
"10176splitHere46","12929609splitHere46","codebase"
"10177splitHere46","12929609splitHere46","jnlp"
"10178splitHere46","12929609splitHere46","<security><newline46mondego>    <all-permissions /><newline46mondego></security><newline46mondego>"
"10179splitHere46","12929609splitHere46","Properties"
"10180splitHere46","12929609splitHere46","Application -> Web start"
"10181splitHere46","12929620splitHere46","ProcessBuilder"
"10182splitHere46","12929653splitHere46","List<Map<String, String>> data = ...<newline46mondego>for(int i = 0; i < data.size(); i++) {<newline46mondego>    // i is the index.<newline46mondego>    data.get(i).put(key, value);<newline46mondego>}<newline46mondego>"
"10183splitHere46","12929672splitHere46","#{(controllerBean.getBean('userProfileBean', component)).street}<newline46mondego>    change to<newline46mondego>    #{controllerBean.getBean('userProfileBean', component).street}<newline46mondego>"
"10184splitHere46","12929672splitHere46","jboss-el"
"10185splitHere46","12929672splitHere46","@ManagedBean(name=<doubleQuotes46>BeanOne<doubleQuotes46>)<newline46mondego>@RequestScoped<newline46mondego>public class BeanOne {<newline46mondego>    private Data data;<newline46mondego><newline46mondego>    public Data getBean(String title) {<newline46mondego>        data = new Data(title);<newline46mondego>        return data;<newline46mondego>    }<newline46mondego>    public void show() {<newline46mondego>        System.out.println(<doubleQuotes46>User Input ==><doubleQuotes46> + data.getInput());<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"10186splitHere46","12929672splitHere46","public class Data {<newline46mondego>    private String title;<newline46mondego>    private String input;<newline46mondego><newline46mondego>    public Data(String title) {<newline46mondego>        this.title = title;<newline46mondego>    }<newline46mondego><newline46mondego>    public String getInput() {<newline46mondego>        return input;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setInput(String input) {<newline46mondego>        this.input = input;<newline46mondego>    }<newline46mondego><newline46mondego>    public String getTitle() {<newline46mondego>        return title;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setTitle(String title) {<newline46mondego>        this.title = title;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"10187splitHere46","12929672splitHere46","<h:form><newline46mondego>    <h:inputText value=<doubleQuotes46>#{BeanOne.getBean('Test').input}<doubleQuotes46>/><br/><newline46mondego>    <h:commandButton value=<doubleQuotes46>Show<doubleQuotes46> action=<doubleQuotes46>#{BeanOne.show}<doubleQuotes46>/><newline46mondego></h:form><newline46mondego>"
"10188splitHere46","12929672splitHere46","<context-param>     <newline46mondego>    <param-name>com.sun.faces.expressionFactory</param-name><newline46mondego>    <param-value>org.jboss.el.ExpressionFactoryImpl</param-value>   <newline46mondego></context-param><newline46mondego>"
"10189splitHere46","12929757splitHere46","public static void main(String[] args) {<newline46mondego>    Display display = new Display();<newline46mondego>    Shell shell = new Shell(display);<newline46mondego>    shell.setLayout(new GridLayout(1, false));<newline46mondego><newline46mondego>    Group outerGroup = new Group(shell, SWT.NONE);<newline46mondego><newline46mondego>    // Tell the group to stretch in all directions<newline46mondego>    outerGroup.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true));<newline46mondego>    outerGroup.setLayout(new GridLayout(2, true));<newline46mondego>    outerGroup.setText(<doubleQuotes46>Group<doubleQuotes46>);<newline46mondego><newline46mondego>    Button left = new Button(outerGroup, SWT.PUSH);<newline46mondego>    left.setText(<doubleQuotes46>Left<doubleQuotes46>);<newline46mondego><newline46mondego>    // Tell the button to stretch in all directions<newline46mondego>    left.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true));<newline46mondego><newline46mondego>    Button right = new Button(outerGroup, SWT.PUSH);<newline46mondego>    right.setText(<doubleQuotes46>Right<doubleQuotes46>);<newline46mondego><newline46mondego>    // Tell the button to stretch in all directions<newline46mondego>    right.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true));<newline46mondego><newline46mondego>    shell.setSize(1000,400);<newline46mondego>    shell.open();<newline46mondego><newline46mondego>    while (!shell.isDisposed()) {<newline46mondego>        if (!display.readAndDispatch())<newline46mondego>            display.sleep();<newline46mondego>    }<newline46mondego>    display.dispose();<newline46mondego>}<newline46mondego>"
"10190splitHere46","12929849splitHere46","public static void main(String[] args) {<newline46mondego>    Display display = new Display();<newline46mondego>    Shell shell = new Shell(display);<newline46mondego>    shell.setLayout(new GridLayout(1, false));<newline46mondego><newline46mondego>    Text t1 = new Text(shell, SWT.SINGLE | SWT.BORDER);<newline46mondego>    t1.setText(<doubleQuotes46>Test box...<doubleQuotes46>);<newline46mondego><newline46mondego>    Composite c = new Composite(shell, SWT.NONE);<newline46mondego>    GridLayout layout = new GridLayout(2, true);<newline46mondego><newline46mondego>    layout.marginWidth = 0; // <-- HERE<newline46mondego><newline46mondego>    c.setLayout(layout);<newline46mondego><newline46mondego>    Text t2 = new Text(c, SWT.SINGLE | SWT.BORDER);<newline46mondego>    t2.setText(<doubleQuotes46>Test box within Composite... not aligned to the first textbox<doubleQuotes46>);<newline46mondego><newline46mondego>    Button b = new Button(c, SWT.PUSH);<newline46mondego>    b.setText(<doubleQuotes46>Button 1<doubleQuotes46>);<newline46mondego><newline46mondego>    shell.open();<newline46mondego>    while (!shell.isDisposed()) {<newline46mondego>        if (!display.readAndDispatch()) {<newline46mondego>            display.sleep();<newline46mondego>        }<newline46mondego>    }<newline46mondego>    display.dispose();<newline46mondego>}<newline46mondego>"
"10191splitHere46","12929849splitHere46","marginWidth"
"10192splitHere46","12929849splitHere46","GridLayout"
"10193splitHere46","12929849splitHere46","0"
"10194splitHere46","12929849splitHere46","GridLayout"
"10195splitHere46","12929882splitHere46","tempPIX"
"10196splitHere46","12929882splitHere46","int[]"
"10197splitHere46","12929882splitHere46","int[] tmpAry = new int[2];<newline46mondego>tmpAry[0] = ntempPIX[0] + tempDIR[0];<newline46mondego>tmpAry[1] = tempPIX[1] + tempDIR[1];<newline46mondego><newline46mondego>tempPIX = tmpAry; // Reassign the reference so the rest of the code doesn't need to be updated<newline46mondego>"
"10198splitHere46","12929882splitHere46","public class TestArrays {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        List<int[]> listOfValues = new ArrayList<int[]>();<newline46mondego>        int[] outter = new int[] {1, 2, 3, 4};<newline46mondego><newline46mondego>        listOfValues.add(outter);<newline46mondego>        dump(outter);<newline46mondego>        for (int index = 0; index < 5; index++) {            <newline46mondego>            int[] inner = new int[] {<newline46mondego>                rand(),<newline46mondego>                rand(),<newline46mondego>                rand(),<newline46mondego>                rand()<newline46mondego>            };<newline46mondego>            outter = inner;<newline46mondego>            dump(outter);<newline46mondego>            listOfValues.add(outter);            <newline46mondego>        }<newline46mondego><newline46mondego>        int index = 0;<newline46mondego>        for (int[] values : listOfValues) {<newline46mondego>            System.out.print(<doubleQuotes46>[<doubleQuotes46> + index + <doubleQuotes46>] <doubleQuotes46>);<newline46mondego>            dump(values);<newline46mondego>            index++;<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    public static void dump(int[] values) {<newline46mondego>        for (int value : values) {<newline46mondego>            System.out.print(value + <doubleQuotes46>, <doubleQuotes46>);<newline46mondego>        }<newline46mondego>        System.out.println(<doubleQuotes46>\b\b<doubleQuotes46>); // Cheeck...;)<newline46mondego>    }<newline46mondego><newline46mondego>    public static int rand() {<newline46mondego>        return (int)Math.round(Math.random() * 100);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"10199splitHere46","12929882splitHere46","1, 2, 3, 4<newline46mondego>44, 35, 76, 9<newline46mondego>44, 11, 17, 35<newline46mondego>99, 24, 39, 23<newline46mondego>20, 31, 9, 66<newline46mondego>45, 50, 60, 27<newline46mondego>[0] 1, 2, 3, 4<newline46mondego>[1] 44, 35, 76, 9<newline46mondego>[2] 44, 11, 17, 35<newline46mondego>[3] 99, 24, 39, 23<newline46mondego>[4] 20, 31, 9, 66<newline46mondego>[5] 45, 50, 60, 27<newline46mondego>"
"10200splitHere46","12930173splitHere46","parentsActivity.startChildActivity(<doubleQuotes46>MerchantActivity<doubleQuotes46>, edit);"
"10201splitHere46","12930173splitHere46","runOnUiThread(new Runnable() {<newline46mondego>    public void run() {<newline46mondego>        parentsActivity.startChildActivity(<doubleQuotes46>MerchantActivity<doubleQuotes46>, edit);<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"10202splitHere46","12930173splitHere46","TabGroupActivity parentsActivity"
"10203splitHere46","12930173splitHere46","Intent edit"
"10204splitHere46","12930173splitHere46","final"
"10205splitHere46","12930260splitHere46","@JacksonAnnotationsInside"
"10206splitHere46","12930260splitHere46","public class JacksonTest {<newline46mondego><newline46mondego>    @Retention(RetentionPolicy.RUNTIME)<newline46mondego>    @JacksonAnnotationsInside<newline46mondego>    @JsonProperty(<doubleQuotes46>_id<doubleQuotes46>)<newline46mondego>    @JsonSerialize(using=IdSerializer.class, include=Inclusion.NON_NULL)<newline46mondego>    @JsonDeserialize(using=IdDeserializer.class)<newline46mondego>    public @interface Id {<newline46mondego>    }<newline46mondego><newline46mondego>    public static class Answer {<newline46mondego>        @Id<newline46mondego>        String id;<newline46mondego>        String name;<newline46mondego><newline46mondego>        public Answer() {}<newline46mondego>    }<newline46mondego><newline46mondego>    @Test<newline46mondego>    public void testInside() throws IOException {<newline46mondego>        ObjectMapper mapper = new ObjectMapper();<newline46mondego>        VisibilityChecker<?> checker = mapper.getSerializationConfig().getDefaultVisibilityChecker();<newline46mondego>        mapper.setVisibilityChecker(checker.withFieldVisibility(JsonAutoDetect.Visibility.ANY));<newline46mondego><newline46mondego>        String string = <doubleQuotes46>{ 'name' : 'John' , '_id' : { 'sub' : '47cc'}}<doubleQuotes46>.replace('\'', '<doubleQuotes46>');<newline46mondego>        Answer answer = mapper.reader(Answer.class).readValue(string);<newline46mondego>        Assertions.assertThat(answer.id).isEqualTo(<doubleQuotes46>47cc<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"10207splitHere46","12930369splitHere46","<input type=<doubleQuotes46>submit<doubleQuotes46> name=<doubleQuotes46>login<doubleQuotes46> value=<doubleQuotes46>Login<doubleQuotes46>/><newline46mondego>"
"10208splitHere46","12930369splitHere46","<input type=<doubleQuotes46>submit<doubleQuotes46> name=<doubleQuotes46>register<doubleQuotes46> value=<doubleQuotes46>Register<doubleQuotes46>/><newline46mondego>"
"10209splitHere46","12930369splitHere46","if(request.getParameter(<doubleQuotes46>login<doubleQuotes46>) != null) {<newline46mondego>  // request is comming from login jsp<newline46mondego>  // do validation, perform actual transaction <newline46mondego>} else if(request.getParameter(<doubleQuotes46>register<doubleQuotes46>) != null) {<newline46mondego>  // request is comming from register jsp<newline46mondego>  // do validation, perform actual transaction <newline46mondego>}<newline46mondego>"
"10210splitHere46","12930430splitHere46","private String getUserName() {<newline46mondego>    AccessControlContext acc = AccessController.getContext();<newline46mondego>    Subject subject = Subject.getSubject(acc);<newline46mondego>    if (subject != null)  {<newline46mondego>    Set<JMXPrincipal> principals = subject.getPrincipals(JMXPrincipal.class);<newline46mondego>    JMXPrincipal principal = principals.iterator().next();<newline46mondego>    return principal.getName();<newline46mondego>    }<newline46mondego>    return <doubleQuotes46><doubleQuotes46>;<newline46mondego>}<newline46mondego>"
"10211splitHere46","12930495splitHere46","XmlAdapter"
"10212splitHere46","12930495splitHere46","import java.io.*;<newline46mondego>import javax.xml.bind.*;<newline46mondego>import javax.xml.bind.annotation.*;<newline46mondego>import javax.xml.bind.annotation.adapters.*;<newline46mondego><newline46mondego>@XmlType<newline46mondego>class Valued {<newline46mondego>    @XmlAttribute(name=<doubleQuotes46>value<doubleQuotes46>)<newline46mondego>    public String value;<newline46mondego>}<newline46mondego><newline46mondego>class ValuedAdapter extends XmlAdapter<Valued, String> {<newline46mondego>    public Valued marshal(String s) {<newline46mondego>        Valued v = new Valued();<newline46mondego>        v.value = s;<newline46mondego>        return v;<newline46mondego>    }<newline46mondego>    public String unmarshal(Valued v) {<newline46mondego>        return v.value;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>@XmlRootElement<newline46mondego>class Person {<newline46mondego><newline46mondego>    @XmlJavaTypeAdapter(ValuedAdapter.class)<newline46mondego>    @XmlElement<newline46mondego>    String firstName;<newline46mondego><newline46mondego>    @XmlJavaTypeAdapter(ValuedAdapter.class)<newline46mondego>    @XmlElement<newline46mondego>    String lastName;<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>class SO12928971 {<newline46mondego>    public static void main(String[] args) throws Exception {<newline46mondego>        Person p = new Person();<newline46mondego>        p.firstName = <doubleQuotes46>John<doubleQuotes46>;<newline46mondego>        p.lastName = <doubleQuotes46>Doe<doubleQuotes46>;<newline46mondego>        JAXBContext jc = JAXBContext.newInstance(Person.class);<newline46mondego>        StringWriter sw = new StringWriter();<newline46mondego>        jc.createMarshaller().marshal(p, sw);<newline46mondego>        String xml = sw.toString();<newline46mondego>        System.out.println(xml);<newline46mondego>        StringReader sr = new StringReader(xml);<newline46mondego>        p = (Person)jc.createUnmarshaller().unmarshal(sr);<newline46mondego>        assert <doubleQuotes46>John<doubleQuotes46>.equals(p.firstName);<newline46mondego>        assert <doubleQuotes46>Doe<doubleQuotes46>.equals(p.lastName);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"10213splitHere46","12930495splitHere46","Valued"
"10214splitHere46","12930495splitHere46","value"
"10215splitHere46","12930495splitHere46","@XmlElement"
"10216splitHere46","12930495splitHere46","@XmlJavaTypeAdapter"
"10217splitHere46","12930495splitHere46","Valued"
"10218splitHere46","12930495splitHere46","<xs:schema version=<doubleQuotes46>1.0<doubleQuotes46> xmlns:xs=<doubleQuotes46>http://www.w3.org/2001/XMLSchema<doubleQuotes46>><newline46mondego><newline46mondego>  <xs:element name=<doubleQuotes46>person<doubleQuotes46> type=<doubleQuotes46>person<doubleQuotes46>/><newline46mondego><newline46mondego>  <xs:complexType name=<doubleQuotes46>person<doubleQuotes46>><newline46mondego>    <xs:sequence><newline46mondego>      <xs:element name=<doubleQuotes46>firstName<doubleQuotes46> type=<doubleQuotes46>valued<doubleQuotes46> minOccurs=<doubleQuotes46>0<doubleQuotes46>/><newline46mondego>      <xs:element name=<doubleQuotes46>lastName<doubleQuotes46> type=<doubleQuotes46>valued<doubleQuotes46> minOccurs=<doubleQuotes46>0<doubleQuotes46>/><newline46mondego>    </xs:sequence><newline46mondego>  </xs:complexType><newline46mondego><newline46mondego>  <xs:complexType name=<doubleQuotes46>valued<doubleQuotes46>><newline46mondego>    <xs:sequence/><newline46mondego>    <xs:attribute name=<doubleQuotes46>value<doubleQuotes46> type=<doubleQuotes46>xs:string<doubleQuotes46>/><newline46mondego>  </xs:complexType><newline46mondego></xs:schema><newline46mondego>"
"10219splitHere46","12930645splitHere46","org.apache.tools.ant.util.FileUtils"
"10220splitHere46","12930713splitHere46","10"
"10221splitHere46","12930713splitHere46","NOVEMBER = 10"
"10222splitHere46","12930713splitHere46","expiredate.set(2012, Calendar.OCTOBER, 10);<newline46mondego>"
"10223splitHere46","12930713splitHere46","0"
"10224splitHere46","12930761splitHere46","android:selectAllOnFocus=<doubleQuotes46>true<doubleQuotes46>"
"10225splitHere46","12930761splitHere46","EditText"
"10226splitHere46","12931000splitHere46","glassfish"
"10227splitHere46","12931079splitHere46","public final class Product {<newline46mondego>    private final String color;<newline46mondego>    private final int price;<newline46mondego><newline46mondego>    public Product(Builder builder) {<newline46mondego>        this.color = builder.getColor();<newline46mondego>        this.price = builder.getPrice();<newline46mondego>    }<newline46mondego><newline46mondego>    public String getColor() {<newline46mondego>        return color;<newline46mondego>    }<newline46mondego><newline46mondego>    public int getPrice() {<newline46mondego>        return price;<newline46mondego>    }<newline46mondego><newline46mondego>    public String toString() {<newline46mondego>        return getColor() + <doubleQuotes46>\n<doubleQuotes46> + getPrice();<newline46mondego>    }    <newline46mondego>}<newline46mondego>"
"10228splitHere46","12931079splitHere46","public final class Builder {<newline46mondego><newline46mondego>    private String color;<newline46mondego>    private int price;<newline46mondego><newline46mondego>    public Builder() {<newline46mondego>        // Assign any default values<newline46mondego>    }<newline46mondego><newline46mondego>    public Builder color(String color) {        <newline46mondego>        this.color = color;<newline46mondego>        return this;<newline46mondego>    }<newline46mondego><newline46mondego>    public Builder price(int price) {        <newline46mondego>        this.price = price;<newline46mondego>        return this;<newline46mondego>    }<newline46mondego><newline46mondego>    protected String getColor() {<newline46mondego>        return color;<newline46mondego>    }<newline46mondego><newline46mondego>    protected int getPrice() {<newline46mondego>        return price;<newline46mondego>    }<newline46mondego><newline46mondego>    public Product build() {<newline46mondego>        return new Product(this);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"10229splitHere46","12931303splitHere46","JAXB_FRAGMENT"
"10230splitHere46","12931303splitHere46","Marshaller"
"10231splitHere46","12931303splitHere46","package forum12925616;<newline46mondego><newline46mondego>import java.io.*;<newline46mondego>import javax.xml.bind.*;<newline46mondego><newline46mondego>public class Demo {<newline46mondego><newline46mondego>    private static int X = 5;<newline46mondego>    private static int Y = 2;<newline46mondego><newline46mondego>    public static void main(String[] args) throws Exception {<newline46mondego>        int[][] data = new int[X][Y];<newline46mondego>        for (int x = 0; x < X; x++) {<newline46mondego>            for (int y = 0; y < Y; y++) {<newline46mondego>                data[x][y] = x;<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        // Create this once<newline46mondego>        JAXBContext jaxbContext = JAXBContext.newInstance(Customer.class);<newline46mondego>        Marshaller jaxbMarshaller = jaxbContext.createMarshaller();<newline46mondego>        jaxbMarshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);<newline46mondego>        jaxbMarshaller.setProperty(Marshaller.JAXB_FRAGMENT, true);<newline46mondego><newline46mondego>        marshal(jaxbMarshaller, data, System.out);<newline46mondego><newline46mondego>        FileOutputStream fileOutputStream = new FileOutputStream(<doubleQuotes46>src/forum12925616/out.xml<doubleQuotes46>);<newline46mondego>        marshal(jaxbMarshaller, data, fileOutputStream);<newline46mondego>        fileOutputStream.close();<newline46mondego>    }<newline46mondego><newline46mondego>    private static void marshal(Marshaller jaxbMarshaller, int[][] data, OutputStream outputStream) throws Exception {<newline46mondego>        OutputStreamWriter writer = new OutputStreamWriter(outputStream);<newline46mondego>        writer.write(<doubleQuotes46><?xml version='1.0' encoding='UTF-8' standalone='yes'?><doubleQuotes46>);<newline46mondego>        writer.write(<doubleQuotes46>\n<customers>\n<doubleQuotes46>);<newline46mondego>        for (int i = 0; i < data.length; i++) {<newline46mondego>            Customer customer = new Customer();<newline46mondego>            customer.setId(data[i][0]);<newline46mondego>            jaxbMarshaller.marshal(customer, writer);<newline46mondego>            writer.write(<doubleQuotes46>\n<doubleQuotes46>);<newline46mondego>        }<newline46mondego>        writer.write(<doubleQuotes46><customers><doubleQuotes46>);<newline46mondego>        writer.flush();<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"10232splitHere46","12931303splitHere46","<?xml version='1.0' encoding='UTF-8' standalone='yes'?><newline46mondego><customers><newline46mondego><customer id=<doubleQuotes46>0<doubleQuotes46>/><newline46mondego><customer id=<doubleQuotes46>1<doubleQuotes46>/><newline46mondego><customer id=<doubleQuotes46>2<doubleQuotes46>/><newline46mondego><customer id=<doubleQuotes46>3<doubleQuotes46>/><newline46mondego><customer id=<doubleQuotes46>4<doubleQuotes46>/><newline46mondego><customers><newline46mondego>"
"10233splitHere46","12931415splitHere46","Math.round"
"10234splitHere46","12931479splitHere46","login.jsp"
"10235splitHere46","12931479splitHere46","<%@ page session=<doubleQuotes46>false<doubleQuotes46> %><newline46mondego>"
"10236splitHere46","12931489splitHere46","std::deque"
"10237splitHere46","12931489splitHere46","// assuming image is a CV_8UC3 image<newline46mondego>std::deque<std::deque<cv::Vec3b> > pixelsDeq(image.rows, std::deque<cv::Vec3b>(image.cols));<newline46mondego>for (int i = 0; i < image.rows; ++i)<newline46mondego>  for (int j = 0; j < image.cols; ++j)<newline46mondego>    pixelsDeq[i][j] = image.at<cv::Vec3b>(i, j);<newline46mondego><newline46mondego>// then remove pixels from the path (remove sequentially for all the paths you probably have)<newline46mondego>  for (int j = 0; j < image.rows; ++j) {<newline46mondego>    pixelsDeq[j].erase(pixelsDeq[j].begin() + paths[j]);<newline46mondego><newline46mondego><newline46mondego>// at the end, copy back to a proper image<newline46mondego>cv::Mat output = cv::Mat::zeros(pixelsDeq.size(), pixelsDeq[0].size(), CV_8UC3);<newline46mondego>for (int i = 0; i < output.rows; ++i) {<newline46mondego>  for (int j = 0; j < output.cols; ++j) {<newline46mondego>    output.at<cv::Vec3b>(i,j) = pixelsDeq[i][j];<newline46mondego>  } <newline46mondego>}<newline46mondego>"
"10238splitHere46","12931519splitHere46","Outer.Inner"
"10239splitHere46","12931519splitHere46","Inner"
"10240splitHere46","12931519splitHere46","Inner"
"10241splitHere46","12931676splitHere46","reader = new BufferedReader(new InputStreamReader(response, <doubleQuotes46>UTF-8<doubleQuotes46>));<newline46mondego>"
"10242splitHere46","12931801splitHere46","convert"
"10243splitHere46","12931801splitHere46","input file"
"10244splitHere46","12931801splitHere46","output file"
"10245splitHere46","12931880splitHere46","resource_name"
"10246splitHere46","12931880splitHere46","menu_name"
"10247splitHere46","12931880splitHere46","map<String, List<CustomClass>>"
"10248splitHere46","12931880splitHere46","menu_group_name"
"10249splitHere46","12931931splitHere46","private class UPPainter implements Runnable {  <newline46mondego>    @Override  <newline46mondego>    public void run() {  <newline46mondego>        while(true) {  <newline46mondego>            ReceivedMsg msg = queue.take();  <newline46mondego>            for(final IPacketListener c : listeners) {  <newline46mondego>                new Thread(new ListenerUp(c, msg)).start();  <newline46mondego>            }  <newline46mondego>        }  <newline46mondego>    }  <newline46mondego>}<newline46mondego>"
"10250splitHere46","12931992splitHere46","Map<String, Class> types = ...// map of supported types<newline46mondego>JsonToken token = jsonParser.nextToken();<newline46mondego>if(token == JsonToken.FIELD_NAME){ // <doubleQuotes46>object1<doubleQuotes46> etc.<newline46mondego>    String name = jsonParser.getCurrentName();<newline46mondego>    Class type = types.get(name);<newline46mondego>    Object object = jsonParser.readValueAs(type);<newline46mondego>}<newline46mondego>"
"10251splitHere46","12932070splitHere46","DB.doEval()"
"10252splitHere46","12932125splitHere46","Collections.sort"
"10253splitHere46","12932125splitHere46","List<T extends Comparable<? super T>>"
"10254splitHere46","12932125splitHere46","T"
"10255splitHere46","12932125splitHere46","Comparable<E>"
"10256splitHere46","12932125splitHere46","E"
"10257splitHere46","12932125splitHere46","T"
"10258splitHere46","12932125splitHere46","T"
"10259splitHere46","12932125splitHere46","T"
"10260splitHere46","12932125splitHere46","public <T> List<Comparable<T>> sort"
"10261splitHere46","12932125splitHere46","Collections.sort"
"10262splitHere46","12932125splitHere46","List<T>"
"10263splitHere46","12932125splitHere46","List<Comparable<T>> list = new ArrayList<Comparable<T>>();<newline46mondego>"
"10264splitHere46","12932125splitHere46","Collection<Comparable<Foo>>"
"10265splitHere46","12932125splitHere46","Collection<Bar>"
"10266splitHere46","12932125splitHere46","Bar implements Comparable<Foo>"
"10267splitHere46","12932125splitHere46","new ArrayList<T>()"
"10268splitHere46","12932125splitHere46","<T extends Comparable<? super T>> List<T> sort(Collection<T> c, boolean ascending);<newline46mondego>"
"10269splitHere46","12932125splitHere46","T"
"10270splitHere46","12932125splitHere46","Bar extends Foo implements Comparable<Foo>"
"10271splitHere46","12932125splitHere46","Bar implements Comparable<Bar>"
"10272splitHere46","12932184splitHere46","restTemplate.exchange(URI + <doubleQuotes46>/news/{limit}/<doubleQuotes46>, HttpMethod.GET, requestEntity, JsonElement.class,10).getBody().getAsJsonObject().get(<doubleQuotes46>news<doubleQuotes46>);<newline46mondego>CustomObject[] result = gson.fromJson(body, CustomObject[].class);<newline46mondego>"
"10273splitHere46","12932191splitHere46","Board$1"
"10274splitHere46","12932191splitHere46","Board.java"
"10275splitHere46","12932191splitHere46","class Board {<newline46mondego>  public static void main(String[] args) {<newline46mondego>    new Object() {}; // Board$1<newline46mondego>    new Object() {}; // Board$2<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"10276splitHere46","12932219splitHere46","getField()"
"10277splitHere46","12932219splitHere46","Class<Employee> aClass = Employee.class<newline46mondego>Field field = aClass.getField(<doubleQuotes46>address<doubleQuotes46>);  // For public fields<newline46mondego>"
"10278splitHere46","12932219splitHere46","public fields"
"10279splitHere46","12932219splitHere46","private fields"
"10280splitHere46","12932219splitHere46","getDeclaredField(<doubleQuotes46>fieldName<doubleQuotes46>)"
"10281splitHere46","12932219splitHere46","Field f = aClass.getDeclaredField(<doubleQuotes46>address<doubleQuotes46>); //For all fields(Including private)<newline46mondego>"
"10282splitHere46","12932219splitHere46","Field.getName()"
"10283splitHere46","12932219splitHere46","for(Field field: aClass.getDeclaredFields()) {<newline46mondego>    if (!field.getName().equals(<doubleQuotes46>phone<doubleQuotes46>)) {<newline46mondego>        // Process it<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"10284splitHere46","12932498splitHere46","Manage Jenkins"
"10285splitHere46","12932498splitHere46","Configure System"
"10286splitHere46","12932498splitHere46","Global MAVEN_OPTS"
"10287splitHere46","12932548splitHere46","import java.awt.BorderLayout;<newline46mondego>import java.awt.Desktop;<newline46mondego>import java.awt.Dimension;<newline46mondego>import java.awt.event.MouseAdapter;<newline46mondego>import java.awt.event.MouseEvent;<newline46mondego>import java.io.IOException;<newline46mondego>import java.net.URI;<newline46mondego>import java.net.URISyntaxException;<newline46mondego><newline46mondego>import javax.swing.JEditorPane;<newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JPanel;<newline46mondego>import javax.swing.JScrollPane;<newline46mondego>import javax.swing.JTextPane;<newline46mondego>import javax.swing.SwingUtilities;<newline46mondego>import javax.swing.UIManager;<newline46mondego>import javax.swing.UnsupportedLookAndFeelException;<newline46mondego>import javax.swing.event.HyperlinkEvent;<newline46mondego>import javax.swing.event.HyperlinkListener;<newline46mondego>import javax.swing.text.AttributeSet;<newline46mondego>import javax.swing.text.Element;<newline46mondego>import javax.swing.text.html.HTML;<newline46mondego>import javax.swing.text.html.HTMLDocument;<newline46mondego><newline46mondego>public class TestHyperlinks {<newline46mondego><newline46mondego>    private final class HyperlinkMouseListener extends MouseAdapter {<newline46mondego>        @Override<newline46mondego>        public void mouseClicked(MouseEvent e) {<newline46mondego>            if (e.getButton() == MouseEvent.BUTTON3) {<newline46mondego>                Element h = getHyperlinkElement(e);<newline46mondego>                if (h != null) {<newline46mondego>                    Object attribute = h.getAttributes().getAttribute(HTML.Tag.A);<newline46mondego>                    if (attribute instanceof AttributeSet) {<newline46mondego>                        AttributeSet set = (AttributeSet) attribute;<newline46mondego>                        String href = (String) set.getAttribute(HTML.Attribute.HREF);<newline46mondego>                        if (href != null) {<newline46mondego>                            try {<newline46mondego>                                Desktop.getDesktop().browse(new URI(href));<newline46mondego>                            } catch (IOException e1) {<newline46mondego>                                e1.printStackTrace();<newline46mondego>                            } catch (URISyntaxException e1) {<newline46mondego>                                e1.printStackTrace();<newline46mondego>                            }<newline46mondego>                        }<newline46mondego>                    }<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        private Element getHyperlinkElement(MouseEvent event) {<newline46mondego>            JEditorPane editor = (JEditorPane) event.getSource();<newline46mondego>            int pos = editor.getUI().viewToModel(editor, event.getPoint());<newline46mondego>            if (pos >= 0 && editor.getDocument() instanceof HTMLDocument) {<newline46mondego>                HTMLDocument hdoc = (HTMLDocument) editor.getDocument();<newline46mondego>                Element elem = hdoc.getCharacterElement(pos);<newline46mondego>                if (elem.getAttributes().getAttribute(HTML.Tag.A) != null) {<newline46mondego>                    return elem;<newline46mondego>                }<newline46mondego>            }<newline46mondego>            return null;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    protected void initUI() {<newline46mondego>        JPanel panel = new JPanel(false);<newline46mondego><newline46mondego>        JEditorPane gentextp = new JTextPane();<newline46mondego>        JScrollPane scrollPane = new JScrollPane(gentextp);<newline46mondego>        panel.add(scrollPane);<newline46mondego>        scrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);<newline46mondego>        gentextp.setContentType(<doubleQuotes46>text/html<doubleQuotes46>);<newline46mondego>        gentextp.setEditable(false);<newline46mondego>        gentextp.setPreferredSize(new Dimension(500, 400));<newline46mondego>        gentextp.addMouseListener(new HyperlinkMouseListener());<newline46mondego>        gentextp.setText(<doubleQuotes46>Some text containing an hyperlink: <a href=\<doubleQuotes46>http://www.stackoverflow.com\<doubleQuotes46>>a link to stackoverflow</a> and some more text not in an hyperlink<doubleQuotes46>);<newline46mondego><newline46mondego>        JFrame f = new JFrame(TestHyperlinks.class.getSimpleName());<newline46mondego>        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        f.add(panel, BorderLayout.CENTER);<newline46mondego>        f.pack();<newline46mondego>        f.setSize(f.getWidth() + 100, f.getHeight() + 100);<newline46mondego>        f.setVisible(true);<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) throws ClassNotFoundException, InstantiationException, IllegalAccessException,<newline46mondego>            UnsupportedLookAndFeelException {<newline46mondego>        UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());<newline46mondego>        SwingUtilities.invokeLater(new Runnable() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                new TestHyperlinks().initUI();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"10288splitHere46","12932569splitHere46","public static void main(String [] args) {<newline46mondego>    String [] options = args[0].split(<doubleQuotes46>,<doubleQuotes46>,15);<newline46mondego>    for(int i = 0; i < options.length; i++) {<newline46mondego>        System.out.printf(<doubleQuotes46>option %d = [%s]\n<doubleQuotes46>, i, options[i]);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"10289splitHere46","12932582splitHere46","java  -Djava.library.path=<path to native library> -jar (if jar) <name of jar or class>"
"10290splitHere46","12932582splitHere46","System.loadLibrary(<path to native library>)"
"10291splitHere46","12932582splitHere46","Run Configuration -> Arguments -> VM Argiments->-Djava.library.path=<path to native library>"
"10292splitHere46","12932720splitHere46","Map<String,Thread>"
"10293splitHere46","12932720splitHere46","sessionId"
"10294splitHere46","12932720splitHere46","public class LoaderServlet extends HttpServlet {<newline46mondego><newline46mondego>  private Map<String,Thread> threadMap = new HashMap<>();<newline46mondego><newline46mondego>  protected void doPost(..) {<newline46mondego>    String sessionId = request.getSesion().getId();<newline46mondego>    Thread u = null;<newline46mondego>    if(threadMap.containsKey()) {<newline46mondego>        u = threadMap.get(sessionId);<newline46mondego>    } else {<newline46mondego>       u = new Thread(...);<newline46mondego>       threadMap.put(sessionId, u);<newline46mondego>    }<newline46mondego>    // use thread 'u' as you wish<newline46mondego>  } <newline46mondego><newline46mondego>}<newline46mondego>"
"10295splitHere46","12932720splitHere46","ThreadPools"
"10296splitHere46","12932777splitHere46","Desktop.getDesktop().open(FileName);"
"10297splitHere46","12932777splitHere46","File.createTempFile"
"10298splitHere46","12932777splitHere46","Desktop.getDesktop().open()"
"10299splitHere46","12932933splitHere46","Jar Files"
"10300splitHere46","12932933splitHere46","javax.persistence_2.0.3.v201010191057.jar"
"10301splitHere46","12932933splitHere46","org.eclipse.persistence.jpa_2.3.0.v20110604-r9504.jar"
"10302splitHere46","12932933splitHere46","org.eclipse.persistence.jpa.equinox_2.3.1.v20111018-r10243.jar"
"10303splitHere46","12932933splitHere46","org.eclipse.persistence.antlr_2.3.0.v20110604-r9504.jar"
"10304splitHere46","12932933splitHere46","org.eclipse.persistence.asm_2.3.0.v20110604-r9504.jar"
"10305splitHere46","12932933splitHere46","javax.persistence.Entity"
"10306splitHere46","12932933splitHere46","Jar"
"10307splitHere46","12932933splitHere46","JPA"
"10308splitHere46","12932992splitHere46",".setChanged()"
"10309splitHere46","12932992splitHere46",".notifyObservers()"
"10310splitHere46","12932992splitHere46","public void setC(Float C) {<newline46mondego>  this.C = C;<newline46mondego>  setChanged();  // <-- add this line<newline46mondego>  notifyObservers(this.C);<newline46mondego>}<newline46mondego>"
"10311splitHere46","12932992splitHere46","Observable"
"10312splitHere46","12932992splitHere46","setChanged()"
"10313splitHere46","12932992splitHere46","hasChanged"
"10314splitHere46","12932992splitHere46","true"
"10315splitHere46","12932992splitHere46","notifyObservers(Object arg)"
"10316splitHere46","12932992splitHere46","hasChanged"
"10317splitHere46","12932992splitHere46","clearChanged"
"10318splitHere46","12933013splitHere46","axis.setDateFormatOverride(DateFormat.getTimeInstance());<newline46mondego>"
"10319splitHere46","12933062splitHere46","Foo[]"
"10320splitHere46","12933062splitHere46","Foo"
"10321splitHere46","12933062splitHere46","Foo"
"10322splitHere46","12933062splitHere46","Foo"
"10323splitHere46","12933062splitHere46","Bar"
"10324splitHere46","12933062splitHere46","Face"
"10325splitHere46","12933062splitHere46","instanceof"
"10326splitHere46","12933062splitHere46","false"
"10327splitHere46","12933062splitHere46","Foo[] instanceof Object"
"10328splitHere46","12933062splitHere46","true"
"10329splitHere46","12933062splitHere46","Foo[1]"
"10330splitHere46","12933062splitHere46","Foo"
"10331splitHere46","12933062splitHere46","Foo"
"10332splitHere46","12933062splitHere46","instanceof"
"10333splitHere46","12933062splitHere46","true"
"10334splitHere46","12933062splitHere46","Foo"
"10335splitHere46","12933062splitHere46","Bar"
"10336splitHere46","12933062splitHere46","Face"
"10337splitHere46","12933062splitHere46","Object"
"10338splitHere46","12933086splitHere46","ActionEvent"
"10339splitHere46","12933086splitHere46","public void doAction() {<newline46mondego> AboutMe.setLocation(470,250);<newline46mondego>          AboutMe.setSize(400, 200);<newline46mondego>          AboutMe.setVisible(true);<newline46mondego>          AboutMe.setResizable(false);<newline46mondego>          AboutMe.add(panel5);<newline46mondego>          panel5.setLayout(null);<newline46mondego>          panel5.add(ta);<newline46mondego><newline46mondego>         ta.setBounds(15, 15, 350, 130);<newline46mondego>         ta.setBorder(BorderFactory.createEtchedBorder());<newline46mondego>         ta.setText(<doubleQuotes46>...................................\n<doubleQuotes46><newline46mondego>                 +  <doubleQuotes46>....................................\n<doubleQuotes46><newline46mondego>                 +  <doubleQuotes46>....................................\n<doubleQuotes46><newline46mondego>                 +  <doubleQuotes46>....................................\n<doubleQuotes46><newline46mondego>                 +  <doubleQuotes46>....................................<doubleQuotes46>);<newline46mondego>         ta.setEditable(false);<newline46mondego>}<newline46mondego>"
"10340splitHere46","12933086splitHere46","actionPerformed"
"10341splitHere46","12933086splitHere46","doAction();<newline46mondego>"
"10342splitHere46","12933086splitHere46","About.addActionListener(new ActionListener(){<newline46mondego>        @Override<newline46mondego>       public void actionPerformed(ActionEvent ae){<newline46mondego>doAction();<newline46mondego><newline46mondego>   );<newline46mondego>"
"10343splitHere46","12933144splitHere46","Class.forName"
"10344splitHere46","12933144splitHere46",".newInstance()"
"10345splitHere46","12933239splitHere46","JTable"
"10346splitHere46","12933239splitHere46","JRadioButton"
"10347splitHere46","12933239splitHere46","ButtonGroup"
"10348splitHere46","12933258splitHere46","java.io.ObjectInputStream <newline46mondego>"
"10349splitHere46","12933258splitHere46","import java.io.ObjectInputStream;<newline46mondego>"
"10350splitHere46","12933339splitHere46","toNanos()"
"10351splitHere46","12933339splitHere46","ScheduledThreadPoolExecutor"
"10352splitHere46","12933339splitHere46","180000000000"
"10353splitHere46","12933339splitHere46","TimeUnit.MINUTES.toNanos(3)<newline46mondego>"
"10354splitHere46","12933339splitHere46","TimeUnit.SECONDS.toNanos(180)<newline46mondego>"
"10355splitHere46","12933384splitHere46","<set name=<doubleQuotes46>children<doubleQuotes46> inverse=<doubleQuotes46>true<doubleQuotes46> cascade=<doubleQuotes46>all-delete-orphan<doubleQuotes46>><newline46mondego><key column=<doubleQuotes46>parent_id<doubleQuotes46>/><newline46mondego><one-to-many class=<doubleQuotes46>Child<doubleQuotes46>/><newline46mondego>"
"10356splitHere46","12933410splitHere46","project-fonts/<newline46mondego>src/<newline46mondego>diploma.ttf<newline46mondego>Arial Narrow.ttf<newline46mondego>irfonts.xml<newline46mondego>jasperreports_extension.properties<newline46mondego>"
"10357splitHere46","12933410splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego><fontFamilies><newline46mondego>    <fontFamily name=<doubleQuotes46>Diploma<doubleQuotes46>><newline46mondego>        <normal><![CDATA[diploma.ttf]]></normal><newline46mondego>        <bold><![CDATA[diploma.ttf]]></bold><newline46mondego>        <pdfEmbedded><![CDATA[true]]></pdfEmbedded><newline46mondego>    </fontFamily><newline46mondego><newline46mondego>    <fontFamily name=<doubleQuotes46>Arial Narrow<doubleQuotes46>><newline46mondego>        <normal><![CDATA[Arial Narrow.ttf]]></normal><newline46mondego>        <bold><![CDATA[Arial Narrow.ttf]]></bold><newline46mondego>        <boldItalic><![CDATA[Arial Narrow.ttf]]></boldItalic><newline46mondego>        <pdfEmbedded><![CDATA[true]]></pdfEmbedded><newline46mondego>    </fontFamily><newline46mondego></fontFamilies><newline46mondego>"
"10358splitHere46","12933410splitHere46","net.sf.jasperreports.extension.registry.factory.fonts=net.sf.jasperreports.engine.fonts.SimpleFontExtensionsRegistryFactory<newline46mondego>net.sf.jasperreports.extension.simple.font.families.ireport=irfonts.xml<newline46mondego>"
"10359splitHere46","12933560splitHere46","finalize"
"10360splitHere46","12933560splitHere46","finalize"
"10361splitHere46","12933560splitHere46","poll"
"10362splitHere46","12933560splitHere46","remove"
"10363splitHere46","12933577splitHere46","long"
"10364splitHere46","12933675splitHere46","jaxen.jar"
"10365splitHere46","12934118splitHere46","Point myPoint = new Point( 0, 0 );<newline46mondego>    System.out.println( myPoint );<newline46mondego>    myPoint.setLocation( 1.0, 0.0 );<newline46mondego>    System.out.println( myPoint );<newline46mondego><newline46mondego>    String myString = new String( <doubleQuotes46>old String<doubleQuotes46> );<newline46mondego>    System.out.println( myString );<newline46mondego>    myString.replaceAll( <doubleQuotes46>old<doubleQuotes46>, <doubleQuotes46>new<doubleQuotes46> );<newline46mondego>    System.out.println( myString );<newline46mondego>"
"10366splitHere46","12934118splitHere46","java.awt.Point[0.0, 0.0]<newline46mondego>    java.awt.Point[1.0, 0.0]<newline46mondego>    old String<newline46mondego>    old String<newline46mondego>"
"10367splitHere46","12934118splitHere46","String myString = new String( <doubleQuotes46>old String<doubleQuotes46> );<newline46mondego>    System.out.println( myString );<newline46mondego>    myString = new String( <doubleQuotes46>new String<doubleQuotes46> );<newline46mondego>    System.out.println( myString );<newline46mondego>"
"10368splitHere46","12934118splitHere46","old String<newline46mondego>    new String<newline46mondego>"
"10369splitHere46","12934118splitHere46","String myString = new String( <doubleQuotes46>old String<doubleQuotes46> );<newline46mondego>    String myCache = myString;<newline46mondego>    System.out.println( <doubleQuotes46>equal: <doubleQuotes46> + myString.equals( myCache ) );<newline46mondego>    System.out.println( <doubleQuotes46>same:  <doubleQuotes46> + ( myString == myCache ) );<newline46mondego><newline46mondego>    myString = <doubleQuotes46>not <doubleQuotes46> + myString;<newline46mondego>    System.out.println( <doubleQuotes46>equal: <doubleQuotes46> + myString.equals( myCache ) );<newline46mondego>    System.out.println( <doubleQuotes46>same:  <doubleQuotes46> + ( myString == myCache ) );<newline46mondego>"
"10370splitHere46","12934118splitHere46","equal: true<newline46mondego>    same:  true<newline46mondego>    equal: false<newline46mondego>    same:  false<newline46mondego>"
"10371splitHere46","12934354splitHere46","GuiServiceBridgeItf gsb"
"10372splitHere46","12934354splitHere46","public class MyApplication extends Application{ <newline46mondego><newline46mondego>    private static mYApplication mSingleton;<newline46mondego><newline46mondego>    public GuiServiceBridgeItf gsb = null;<newline46mondego><newline46mondego> @Override<newline46mondego> public void onCreate() {<newline46mondego>    super.onCreate();<newline46mondego>    mSingleton = this;<newline46mondego> } <newline46mondego><newline46mondego> public mYApplication getApp(){<newline46mondego>    return mSingleton;<newline46mondego> }<newline46mondego>....<newline46mondego>}<newline46mondego>"
"10373splitHere46","12934354splitHere46","public interface GuiServiceBridgeItf {<newline46mondego>   public void onEventReceived(String str);<newline46mondego><newline46mondego>   /** Notify activity about service run */<newline46mondego>   public void imHere();<newline46mondego>....<newline46mondego>}<newline46mondego>"
"10374splitHere46","12934354splitHere46","GuiServiceBridgeItf"
"10375splitHere46","12934354splitHere46","MyService"
"10376splitHere46","12934354splitHere46","public class MyService extends Service implements GuiServiceBridgeItf {<newline46mondego><newline46mondego>....<newline46mondego><newline46mondego>private RunnerThread runner = null;<newline46mondego>private CheckAliveThread checkalive = null;<newline46mondego><newline46mondego>private MyApplication mMyApp = null;<newline46mondego><newline46mondego>public void onCreate() {<newline46mondego>    super.onCreate();<newline46mondego><newline46mondego>    mMyApp  = (MyApplication)getApplicationContext();<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>public int onStartCommand(Intent intent, int flags, int startId) {<newline46mondego><newline46mondego>    GuiServiceBridgeItf gui2ServiceTalker = this;<newline46mondego><newline46mondego>    checkalive = new CheckAliveThread();<newline46mondego>    checkalive.init(mMyApp);<newline46mondego>    checkalive.start();<newline46mondego><newline46mondego><newline46mondego>    runner = new RunnerThread(this.getApplicationContext(), gui2ServiceTalker);<newline46mondego>    runner.start();<newline46mondego><newline46mondego>    ...<newline46mondego><newline46mondego>    return START_STICKY;<newline46mondego>}<newline46mondego><newline46mondego>public void onDestroy() {   <newline46mondego>    super.onDestroy();<newline46mondego><newline46mondego>    ...<newline46mondego><newline46mondego>    runner.doDestroy();     <newline46mondego>    runner = null;  <newline46mondego><newline46mondego>    checkalive.doDestroy();<newline46mondego>    checkalive = null;<newline46mondego><newline46mondego>    stopSelf();<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego><newline46mondego>private boolean isInstanceActive(){<newline46mondego>    if(mMyApp.gsb == null){<newline46mondego>        return false;<newline46mondego>    }<newline46mondego><newline46mondego>    return true;<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>public void imHere() {}<newline46mondego><newline46mondego>public void onEventReceived(String str) {<newline46mondego>    if(isInstanceActive()){<newline46mondego>        mMyApp.gsb.onEventReceived(str);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>...<newline46mondego><newline46mondego>}<newline46mondego>"
"10377splitHere46","12934354splitHere46","boolean isInstanceActive()"
"10378splitHere46","12934354splitHere46","true"
"10379splitHere46","12934354splitHere46","false"
"10380splitHere46","12934354splitHere46","onDestroy"
"10381splitHere46","12934354splitHere46","MyApplication.gsb"
"10382splitHere46","12934354splitHere46","public class LauncherUI extends Activity implements GuiServiceBridgeItf{<newline46mondego><newline46mondego>     ....<newline46mondego>    @Override<newline46mondego>public void onCreate(Bundle savedInstanceState) {<newline46mondego>    super.onCreate(savedInstanceState);<newline46mondego><newline46mondego>            // register Activity to Application    <newline46mondego>            GuiServiceBridgeItf gts = this;     <newline46mondego>    mApplicationApp = (MyApplication)mContext.getApplicationContext();<newline46mondego>    mApplicationApp .gsb = gts;<newline46mondego><newline46mondego>            ....<newline46mondego>   }<newline46mondego><newline46mondego>   ....<newline46mondego><newline46mondego>    @Override<newline46mondego>protected void onDestroy() {<newline46mondego>   super.onDestroy();<newline46mondego>       ....<newline46mondego>       // Unregister Activity to prevent to Service to talk with   <newline46mondego>       mMyApplication.gsb = null;<newline46mondego>}<newline46mondego><newline46mondego>}<newline46mondego>"
"10383splitHere46","12934475splitHere46","<property name=<doubleQuotes46>openjpa.jdbc.SynchronizeMappings<doubleQuotes46> value=<doubleQuotes46>buildSchema<doubleQuotes46>/><newline46mondego>"
"10384splitHere46","12934594splitHere46","commons-lang"
"10385splitHere46","12934594splitHere46","commons-lang-<>.jar"
"10386splitHere46","12934668splitHere46","#include <android/log.h><newline46mondego>#include <dlfcn.h><newline46mondego>#include <stdio.h><newline46mondego>#include <string.h><newline46mondego><newline46mondego>typedef int (*main_t)(int argc, char** argv);<newline46mondego><newline46mondego>static int help(const char* argv0)<newline46mondego>{<newline46mondego>    printf(<doubleQuotes46>%s: simple wrapper to work around LD_LIBRARY_PATH\n\n<doubleQuotes46>, argv0);<newline46mondego>    printf(<doubleQuotes46>Args: executable, list all the libraries you need to load in dependency order, executable again, optional parameters\n<doubleQuotes46>);<newline46mondego>    printf(<doubleQuotes46>example: %s /data/local/ttte /data/data/app/com.testwrapper/lib/ttt.so /data/local/ttte 12345\n<doubleQuotes46>, argv0);<newline46mondego>    printf(<doubleQuotes46>Note: the executable should be built with CFLAGS=\<doubleQuotes46>-fPIC -pie\<doubleQuotes46>, LDFLAGS=\<doubleQuotes46>-rdynamic\<doubleQuotes46>\n<doubleQuotes46>);<newline46mondego><newline46mondego>    return -1;<newline46mondego>}<newline46mondego><newline46mondego>int main(int argc, char** argv)<newline46mondego>{<newline46mondego>    int rc, nlibs;<newline46mondego>    void *dl_handle;<newline46mondego><newline46mondego>    if (argc < 2)<newline46mondego>    {<newline46mondego>        return help(argv[0]);<newline46mondego>    }<newline46mondego><newline46mondego>    __android_log_print(ANDROID_LOG_DEBUG, <doubleQuotes46>wrapper<doubleQuotes46>, <doubleQuotes46>running '%s'<doubleQuotes46>, argv[1]);<newline46mondego><newline46mondego>    for (nlibs = 2; ; nlibs++)<newline46mondego>    {<newline46mondego>        if (nlibs >= argc)<newline46mondego>        {<newline46mondego>            return help(argv[0]);<newline46mondego>        }<newline46mondego><newline46mondego>        __android_log_print(ANDROID_LOG_DEBUG, <doubleQuotes46>wrapper<doubleQuotes46>, <doubleQuotes46>loading '%s'<doubleQuotes46>, argv[nlibs]);<newline46mondego>        dl_handle = dlopen(argv[nlibs], 0); // do not keep the handle, except for the last<newline46mondego>        __android_log_print(ANDROID_LOG_DEBUG, <doubleQuotes46>wrapper<doubleQuotes46>, <doubleQuotes46>loaded '%s' -> %p<doubleQuotes46>, argv[nlibs], dl_handle);<newline46mondego>        if (strcmp(argv[1], argv[nlibs]) == 0)<newline46mondego>        {<newline46mondego>            break;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    main_t pmain = (main_t)dlsym(dl_handle, <doubleQuotes46>main<doubleQuotes46>);<newline46mondego>    __android_log_print(ANDROID_LOG_DEBUG, <doubleQuotes46>wrapper<doubleQuotes46>, <doubleQuotes46>found '%s' -> %p<doubleQuotes46>, <doubleQuotes46>main<doubleQuotes46>, pmain);<newline46mondego>    rc = pmain(argc - nlibs, argv + nlibs);<newline46mondego><newline46mondego>//   we are exiting the process anyway, don't need to clean the handles actually<newline46mondego><newline46mondego>//   __android_log_print(3, <doubleQuotes46>wrapper<doubleQuotes46>, <doubleQuotes46>closing '%s'<doubleQuotes46>, argv[1]);<newline46mondego>//   dlclose(dl_handle);<newline46mondego><newline46mondego>    return 0;<newline46mondego>}<newline46mondego>"
"10387splitHere46","12934668splitHere46","Android.mk"
"10388splitHere46","12934668splitHere46","LOCAL_PATH := $(call my-dir)<newline46mondego><newline46mondego>include $(CLEAR_VARS)<newline46mondego><newline46mondego>LOCAL_MODULE    := wrapper<newline46mondego>LOCAL_SRC_FILES := wrapper/main.c<newline46mondego>LOCAL_LDLIBS    := -llog<newline46mondego><newline46mondego>include $(BUILD_EXECUTABLE)<newline46mondego>"
"10389splitHere46","12934668splitHere46","wrapper"
"10390splitHere46","12934668splitHere46","/sdcard"
"10391splitHere46","12934668splitHere46","chmod 777"
"10392splitHere46","12934668splitHere46","wrapper"
"10393splitHere46","12934668splitHere46","ndk-build"
"10394splitHere46","12934668splitHere46","LOCAL_C_FLAGS   += -fPIC -pie<newline46mondego>LOCAL_LDFLAGS   += -rdynamic <newline46mondego>"
"10395splitHere46","12934668splitHere46","chmod"
"10396splitHere46","12934714splitHere46","horse == <doubleQuotes46>a<doubleQuotes46>"
"10397splitHere46","12934714splitHere46","<doubleQuotes46>a<doubleQuotes46>.equals(horse)"
"10398splitHere46","12934714splitHere46","char"
"10399splitHere46","12934714splitHere46","horse == 'a'"
"10400splitHere46","12934714splitHere46","=="
"10401splitHere46","12934714splitHere46","=="
"10402splitHere46","12934769splitHere46","paint()"
"10403splitHere46","12934769splitHere46","JPanel"
"10404splitHere46","12934769splitHere46","paintComponent(..)"
"10405splitHere46","12934769splitHere46","JFrame"
"10406splitHere46","12934769splitHere46","DrawingPanel"
"10407splitHere46","12934769splitHere46","JPanel"
"10408splitHere46","12934769splitHere46","ArrayList"
"10409splitHere46","12934769splitHere46","JPanel"
"10410splitHere46","12934769splitHere46","paintComponent(..)"
"10411splitHere46","12934769splitHere46","for"
"10412splitHere46","12934769splitHere46","MouseAdapter"
"10413splitHere46","12934769splitHere46","mouseClicked(..)"
"10414splitHere46","12934769splitHere46","JPanel"
"10415splitHere46","12934769splitHere46","Shape"
"10416splitHere46","12934769splitHere46","ArrayList"
"10417splitHere46","12934769splitHere46","Shape"
"10418splitHere46","12934769splitHere46","instance of"
"10419splitHere46","12934769splitHere46","Shape"
"10420splitHere46","12934769splitHere46","import java.awt.Dimension;<newline46mondego>import java.awt.Graphics;<newline46mondego>import java.awt.Graphics2D;<newline46mondego>import java.awt.Shape;<newline46mondego>import java.awt.event.MouseAdapter;<newline46mondego>import java.awt.event.MouseEvent;<newline46mondego>import java.awt.geom.Ellipse2D;<newline46mondego>import java.awt.geom.Rectangle2D;<newline46mondego>import java.util.ArrayList;<newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JPanel;<newline46mondego>import javax.swing.SwingUtilities;<newline46mondego><newline46mondego>public class ShapeClicker {<newline46mondego><newline46mondego>    public ShapeClicker() {<newline46mondego>        JFrame frame = new JFrame();<newline46mondego>        frame.setTitle(<doubleQuotes46>Shape Clicker<doubleQuotes46>);<newline46mondego>        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        frame.setResizable(false);<newline46mondego><newline46mondego>        initComponents(frame);<newline46mondego><newline46mondego>        frame.pack();<newline46mondego>        frame.setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego><newline46mondego>        //create frame and components on EDT<newline46mondego>        SwingUtilities.invokeLater(new Runnable() {<newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                new ShapeClicker();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>    private void initComponents(JFrame frame) {<newline46mondego>        frame.add(new ShapePanel());<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>//custom panel<newline46mondego>class ShapePanel extends JPanel {<newline46mondego><newline46mondego>    private Shape rect = new Rectangle2D.Double(50, 100, 200, 100);<newline46mondego>    private Shape cirlce = new Ellipse2D.Double(260, 100, 100, 100);<newline46mondego>    private Dimension dim = new Dimension(450, 300);<newline46mondego>    private final ArrayList<Shape> shapes;<newline46mondego><newline46mondego>    public ShapePanel() {<newline46mondego>        shapes = new ArrayList<>();<newline46mondego>        shapes.add(rect);<newline46mondego>        shapes.add(cirlce);<newline46mondego>        addMouseListener(new MouseAdapter() {<newline46mondego>            @Override<newline46mondego>            public void mouseClicked(MouseEvent me) {<newline46mondego>                super.mouseClicked(me);<newline46mondego>                for (Shape s : shapes) {<newline46mondego><newline46mondego>                    if (s.contains(me.getPoint())) {//check if mouse is clicked within shape<newline46mondego><newline46mondego>                        //we can either just print out the object class name<newline46mondego>                        System.out.println(<doubleQuotes46>Clicked a <doubleQuotes46>+s.getClass().getName());<newline46mondego><newline46mondego>                        //or check the shape class we are dealing with using instance of with nested if<newline46mondego>                        if (s instanceof Rectangle2D) {<newline46mondego>                            System.out.println(<doubleQuotes46>Clicked a rectangle<doubleQuotes46>);<newline46mondego>                        } else if (s instanceof Ellipse2D) {<newline46mondego>                            System.out.println(<doubleQuotes46>Clicked a circle<doubleQuotes46>);<newline46mondego>                        }<newline46mondego><newline46mondego>                    }<newline46mondego>                }<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void paintComponent(Graphics grphcs) {<newline46mondego>        super.paintComponent(grphcs);<newline46mondego>        Graphics2D g2d = (Graphics2D) grphcs;<newline46mondego>        for (Shape s : shapes) {<newline46mondego>            g2d.draw(s);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Dimension getPreferredSize() {<newline46mondego>        return dim;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"10421splitHere46","12934853splitHere46","String dateString = new SimpleDateFormat(<doubleQuotes46>yyyy/MM/dd<doubleQuotes46>).format(date);<newline46mondego>System.out.println(dateString);<newline46mondego>"
"10422splitHere46","12935004splitHere46","SomeClass"
"10423splitHere46","12935004splitHere46","T"
"10424splitHere46","12935004splitHere46","public class SomeClass implements ISomething<T extends SomeClass2> <newline46mondego>"
"10425splitHere46","12935004splitHere46","public class SomeClass<T extends SomeClass2> implements ISomething<T><newline46mondego>"
"10426splitHere46","12935004splitHere46","public class SomeClass implements ISomething<SomeClass2>  <newline46mondego>"
"10427splitHere46","12935037splitHere46","if(!spnAssetSubGroup.getSelectedItem().toString().equals(<doubleQuotes46><doubleQuotes46>))<newline46mondego>"
"10428splitHere46","12935037splitHere46","spnAssetSubGroup.getselectedItem()"
"10429splitHere46","12935037splitHere46","toString()"
"10430splitHere46","12935037splitHere46","if(spnAssetSubGroup.getSelectedItem() != null && !spnAssetSubGroup.getSelectedItem().toString().equals(<doubleQuotes46><doubleQuotes46>))<newline46mondego>"
"10431splitHere46","12935037splitHere46","AssetType = spnAssetType.getSelectedItem().toString();     <newline46mondego>AssetGroup = spnAssetGroup.getSelectedItem().toString();<newline46mondego>"
"10432splitHere46","12935037splitHere46","getSelectedItem()"
"10433splitHere46","12935107splitHere46","ChangeEvent ce = new ChangeEvent(slider);<newline46mondego>    for(ChangeListener cl : slider.getChangeListeners()){<newline46mondego>        cl.stateChanged(ce);<newline46mondego>    }<newline46mondego>"
"10434splitHere46","12935107splitHere46","fireStateChanged()"
"10435splitHere46","12935129splitHere46","/**<newline46mondego>     * Re crate database<newline46mondego>     * Delete all tables and create them again<newline46mondego>     * */<newline46mondego>    public void resetTables(){<newline46mondego>        SQLiteDatabase db = this.getWritableDatabase();<newline46mondego>        // Delete All Rows<newline46mondego>        db.delete(TABLE_NAME, null, null);<newline46mondego>        db.close();<newline46mondego>    }<newline46mondego>"
"10436splitHere46","12935177splitHere46","public Image addTextToImage(BufferedImage i, String[] text) {<newline46mondego><newline46mondego>    final int VERTICLE_PADDING_PIXELS = 5;<newline46mondego>    final int LEFT_MARGIN_PIXELS = 5;<newline46mondego><newline46mondego>    FontMetrics fm = i.createGraphics().getFontMetrics();<newline46mondego><newline46mondego>    int width = i.getWidth();<newline46mondego>    int height = i.getHeight()<newline46mondego>            + (text.length * (fm.getHeight() + VERTICLE_PADDING_PIXELS));<newline46mondego><newline46mondego>    for (String s : text) {<newline46mondego>        width = Math.max(width, fm.stringWidth(s) + LEFT_MARGIN_PIXELS);<newline46mondego>    }<newline46mondego><newline46mondego>    BufferedImage result = new BufferedImage(i.getHeight(), width, height);<newline46mondego><newline46mondego>    Graphics2D g = result.createGraphics();<newline46mondego><newline46mondego>    g.drawImage(i, 0, 0, null);<newline46mondego><newline46mondego>    for (int x = 0; x < text.length; x++) {<newline46mondego>        g.drawString(text[x], LEFT_MARGIN_PIXELS, i.getHeight() + (x + 1) *VERTICLE_PADDING_PIXELS + x*fm.getHeight());<newline46mondego>    }<newline46mondego><newline46mondego>    return result;<newline46mondego>}<newline46mondego>"
"10437splitHere46","12935216splitHere46","@IdClass"
"10438splitHere46","12935216splitHere46","IdClass"
"10439splitHere46","12935216splitHere46","@Id"
"10440splitHere46","12935216splitHere46","s for this"
"10441splitHere46","12935216splitHere46","@Entity<newline46mondego>@IdClass(AssignedRoleId.class)<newline46mondego>public class AssignedRole<newline46mondego>{<newline46mondego>  @Id<newline46mondego>  @ManyToOne<newline46mondego>  private User userId;<newline46mondego><newline46mondego>  @Id<newline46mondego>  @ManyToOne  <newline46mondego>  private Role roleId;<newline46mondego><newline46mondego>  private Date dateAssigned;<newline46mondego>}<newline46mondego>"
"10442splitHere46","12935224splitHere46","result = ((colNum > theArray.length - 1) || (colNum < 0)) ? null : theArray[colNum];<newline46mondego>"
"10443splitHere46","12935237splitHere46","Comparable"
"10444splitHere46","12935237splitHere46","Collections.sort(list)"
"10445splitHere46","12935237splitHere46","class User implements Comparable<User>{<newline46mondego>    private String name;<newline46mondego>    private long id;<newline46mondego>    private Date age;<newline46mondego>    private boolean gender;<newline46mondego>    @Override<newline46mondego>    public int compareTo(User user1) {<newline46mondego>        return this.age.compareTo(user1.age);<newline46mondego>    }<newline46mondego>} <newline46mondego><newline46mondego>List<User> users = new ArrayList();<newline46mondego>users.add(user);<newline46mondego>...<newline46mondego>Collections.sort(list);<newline46mondego>"
"10446splitHere46","12935275splitHere46","JFrame"
"10447splitHere46","12935275splitHere46","JFrame"
"10448splitHere46","12935275splitHere46","JPanel loginPanel = new JPanel();<newline46mondego>frame.setContentPane(loginPanel);<newline46mondego>"
"10449splitHere46","12935275splitHere46","JPanel mainMenuPanel = new JPanel();<newline46mondego>frame.setContentPane(mainMenuPanel);<newline46mondego>"
"10450splitHere46","12935275splitHere46","import java.awt.*;<newline46mondego>import java.awt.event.*;<newline46mondego>import javax.swing.*;<newline46mondego><newline46mondego>public class PanelRetriever{<newline46mondego><newline46mondego>    Box panel1;<newline46mondego>    JPanel panel2;<newline46mondego><newline46mondego>    public PanelRetriever(final JFrame frame){<newline46mondego>        //Build the first login panel<newline46mondego>        panel1 = Box.createVerticalBox();<newline46mondego>        panel1.setBackground(Color.orange);<newline46mondego>        panel1.setOpaque(true);<newline46mondego>        panel1.add(Box.createVerticalGlue());<newline46mondego>        panel1.add(new JTextField(10));<newline46mondego>        JButton login = new JButton(<doubleQuotes46>Login<doubleQuotes46>);<newline46mondego>        login.addActionListener(new ActionListener(){<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void actionPerformed(ActionEvent arg0) {<newline46mondego>                frame.setContentPane(getPanel2());<newline46mondego>                frame.validate();<newline46mondego>            }});<newline46mondego>        panel1.add(login);<newline46mondego>        panel1.add(Box.createVerticalGlue());<newline46mondego><newline46mondego>        //Build second panel<newline46mondego>        panel2 = new JPanel();<newline46mondego>        panel2.setBackground(Color.blue);<newline46mondego>        panel2.setOpaque(true);<newline46mondego>        JButton logout = new JButton(<doubleQuotes46>Logout<doubleQuotes46>);<newline46mondego>        logout.addActionListener(new ActionListener(){<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void actionPerformed(ActionEvent e) {<newline46mondego>                frame.setContentPane(getPanel1());<newline46mondego>                frame.validate();<newline46mondego>            }});<newline46mondego>        panel2.add(logout, BorderLayout.CENTER);<newline46mondego>    }<newline46mondego><newline46mondego>    public Container getPanel1(){<newline46mondego>        return panel1;<newline46mondego>    }<newline46mondego><newline46mondego>    public Container getPanel2(){<newline46mondego>        return panel2;<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String args[])<newline46mondego>    {<newline46mondego>        EventQueue.invokeLater(new Runnable()<newline46mondego>        {<newline46mondego>            public void run()<newline46mondego>            {<newline46mondego>                JFrame frame = new JFrame();<newline46mondego>                PanelRetriever pr = new PanelRetriever(frame);<newline46mondego>                frame.setDefaultCloseOperation( JFrame.EXIT_ON_CLOSE );<newline46mondego>                frame.setContentPane(pr.getPanel1());<newline46mondego>                frame.setPreferredSize(new Dimension(500, 400));<newline46mondego>                frame.pack();<newline46mondego>                frame.setVisible(true);<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"10451splitHere46","12935352splitHere46","DataInputStream"
"10452splitHere46","12935352splitHere46","DataInputStream"
"10453splitHere46","12935352splitHere46","GZIPInputStream"
"10454splitHere46","12935352splitHere46","HttpURLConnection"
"10455splitHere46","12935493splitHere46","db.collection.ensureIndex( { zip: 1})<newline46mondego>"
"10456splitHere46","12935493splitHere46","Inserted 1 record(s) in 7ms<newline46mondego>"
"10457splitHere46","12935501splitHere46","use DateFormat timeFormat = new SimpleDateFormat(); <newline46mondego>"
"10458splitHere46","12935501splitHere46","DateFormat timeFormat = new SimpleDateFormat(<doubleQuotes46>HH:MM:ss:SS<doubleQuotes46>);<newline46mondego>"
"10459splitHere46","12935501splitHere46","DateFormat timeFormat = new SimpleDateFormat(<doubleQuotes46>EEE, d MMM yyyy HH:mm:ss Z<doubleQuotes46>);<newline46mondego>"
"10460splitHere46","12935501splitHere46","Calendar c = Calendar.getInstance(); <newline46mondego>  c.setTime(time);<newline46mondego>  System.out.println(c.get(Calendar.YEAR)+ <doubleQuotes46>  <doubleQuotes46>+c.get(Calendar.MONTH)+ <doubleQuotes46> <doubleQuotes46>+ c.get(Calendar.DAY_OF_MONTH));<newline46mondego>"
"10461splitHere46","12935501splitHere46","time"
"10462splitHere46","12935501splitHere46","Calendar object"
"10463splitHere46","12935501splitHere46","calendar object"
"10464splitHere46","12935501splitHere46","c.getTime()"
"10465splitHere46","12935501splitHere46","Date object"
"10466splitHere46","12935547splitHere46","executor.submit(periodic);<newline46mondego>"
"10467splitHere46","12935547splitHere46","executor.schedule(periodic, delay, units);<newline46mondego>"
"10468splitHere46","12935591splitHere46","for(Field field : getClass().getDeclaredFields()) {<newline46mondego>    Object o = field.get(this);<newline46mondego>    add(o);<newline46mondego>}<newline46mondego>"
"10469splitHere46","12935668splitHere46","mvn install"
"10470splitHere46","12935668splitHere46","mvn clean install"
"10471splitHere46","12935702splitHere46","public static boolean validate(String token) {<newline46mondego>  if (token == null || token.length() < 2) return false;<newline46mondego>  if (!Character.isUpperCase(token.charAt(0)) return false;<newline46mondego>  for (int i = 1; i < token.length(); i++)<newline46mondego>    if (Character.isLowerCase(token.charAt(i)) return true;<newline46mondego>  return false;<newline46mondego>"
"10472splitHere46","12935723splitHere46","needShowLoactionId"
"10473splitHere46","12935723splitHere46","needShowLoactionRate"
"10474splitHere46","12935723splitHere46","null"
"10475splitHere46","12935723splitHere46","startElement"
"10476splitHere46","12935723splitHere46","needShowLoactionId.add(q);<newline46mondego>...<newline46mondego>needShowLoactionRate.add(Float.valueOf((atmosphearRating + peoplemeterRating)/2));<newline46mondego>"
"10477splitHere46","12935723splitHere46","SAXParserGetLocationRate$1.startElement"
"10478splitHere46","12935723splitHere46","startElement"
"10479splitHere46","12935723splitHere46","SAXParseGetLocationRate"
"10480splitHere46","12935723splitHere46","DefaultHandler"
"10481splitHere46","12935723splitHere46","private ArrayList<Integer> needShowLoactionId;<newline46mondego>private ArrayList<Float> needShowLoactionRate;<newline46mondego>"
"10482splitHere46","12935723splitHere46","private ArrayList<Integer> needShowLoactionId = new ArrayList<Integer>();<newline46mondego>private ArrayList<Float> needShowLoactionRate = new ArrayList<Float>();<newline46mondego>"
"10483splitHere46","12935741splitHere46","public enum Brand {<newline46mondego>    BMW {<newline46mondego>        @Override<newline46mondego>        public void doSomething();<newline46mondego>    },<newline46mondego>    AUDI {<newline46mondego>        @Override<newline46mondego>        public void doSomething();<newline46mondego>    };<newline46mondego><newline46mondego>    public abstract void doSomething();<newline46mondego>}<newline46mondego><newline46mondego>var.getBrand().doSomething();<newline46mondego>"
"10484splitHere46","12935803splitHere46","IndexWriter.updateDocument()"
"10485splitHere46","12935803splitHere46","IndexWriter,forceMergeDeletes()"
"10486splitHere46","12935858splitHere46","newKnapsack = new Knapsack(this.baseKnapsack.getNumberOfItems(),this.baseKnapsack.getCapacity(),**this.baseKnapsack.getItemsArray()**,this.baseKnapsack.getScore());<newline46mondego>"
"10487splitHere46","12935858splitHere46","newKnapsack = new Knapsack(this.baseKnapsack.getNumberOfItems(),this.baseKnapsack.getCapacity(),**new Item[baseKnapsack.totalNunberOfItems]**,this.baseKnapsack.getScore());<newline46mondego>"
"10488splitHere46","12935930splitHere46","context.getBean(<doubleQuotes46>userRepository<doubleQuotes46>"
"10489splitHere46","12935930splitHere46","ClassPathXmlApplicationContext"
"10490splitHere46","12935930splitHere46","org.springframework=TRACE<newline46mondego>com.gamemanagertest=TRACE<newline46mondego>com.gamemanagertest=TRACE<newline46mondego>"
"10491splitHere46","12936005splitHere46","file.path"
"10492splitHere46","12936364splitHere46","default"
"10493splitHere46","12936364splitHere46","switch(val) {<newline46mondego>    case 0: return 's';<newline46mondego>    case 1: return 'c';<newline46mondego>    case 2: return 'h';<newline46mondego>    case 3: return 'd';<newline46mondego>    default: return 'h';<newline46mondego>}<newline46mondego>"
"10494splitHere46","12936375splitHere46","refresh"
"10495splitHere46","12936375splitHere46","client.admin().indices().refresh(refreshRequest()).actionGet();<newline46mondego>"
"10496splitHere46","12936395splitHere46","initialize()"
"10497splitHere46","12936395splitHere46","public class MyController {<newline46mondego>    private void Scene scene;<newline46mondego>    public void setScene(Scene scene) { this.scene = scene; }<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>// loading code<newline46mondego>FXMLLoader fxmlLoader = new FXMLLoader();<newline46mondego>AnchorPane root = (AnchorPane)FXMLLoader.load(getClass().getResource(<doubleQuotes46>MyApp.fxml<doubleQuotes46>));<newline46mondego>MyController myController = (MyController)fxmlLoader.getController();<newline46mondego>myController.setScene(scene);<newline46mondego>"
"10498splitHere46","12936395splitHere46","getScene()"
"10499splitHere46","12936408splitHere46","JInvocation invocation = personObject.invoke(<doubleQuotes46>getRoles<doubleQuotes46>);<newline46mondego>JArrayCompRef arrayCompRef = invocation.component(indexExpression);<newline46mondego>"
"10500splitHere46","12936425splitHere46","if(arg1.equals(PlayerListener.STARTED))<newline46mondego>"
"10501splitHere46","12936487splitHere46","primaryStage.initStyle(StageStyle.UNDECORATED)<newline46mondego>"
"10502splitHere46","12936514splitHere46","public ArrayList<Event> eventDetails(Context mContext, int m, int d) {<newline46mondego><newline46mondego> ArrayList<Event> events = new ArrayList<Event>();<newline46mondego>            switch (m) {<newline46mondego>               case 1:<newline46mondego>                    if (d == 1) {<newline46mondego>                        events.add(new Event(mContext.getResources().getString(R.string.text1), null, null, null, null, null, null, null));<newline46mondego>                    }<newline46mondego>            }<newline46mondego><newline46mondego>            return events<newline46mondego>}<newline46mondego>"
"10503splitHere46","12936565splitHere46","URLEncoder.encode"
"10504splitHere46","12936565splitHere46","String url = <doubleQuotes46>http://maps.googleapis.com/maps/api/geocode/json?latlng=<doubleQuotes46>+URLEncoder.encode(<doubleQuotes46>32.0692342,34.7952296<doubleQuotes46>)+<doubleQuotes46>&sensor=<doubleQuotes46>+URLEncoder.encode(<doubleQuotes46>true<doubleQuotes46>)<newline46mondego>"
"10505splitHere46","12936580splitHere46","import java.awt.AlphaComposite;<newline46mondego>import java.awt.Composite;<newline46mondego>import java.awt.Font;<newline46mondego>import java.awt.GradientPaint;<newline46mondego>import java.awt.Graphics2D;<newline46mondego>import java.awt.Paint;<newline46mondego>import java.awt.geom.Line2D;<newline46mondego>import java.awt.geom.Point2D;<newline46mondego>import java.awt.geom.Rectangle2D;<newline46mondego>import java.util.ArrayList;<newline46mondego>import java.util.Collection;<newline46mondego>import java.util.HashMap;<newline46mondego>import java.util.Iterator;<newline46mondego>import java.util.List;<newline46mondego>import java.util.Map;<newline46mondego><newline46mondego>import org.jfree.chart.annotations.XYAnnotation;<newline46mondego>import org.jfree.chart.axis.ValueAxis;<newline46mondego>import org.jfree.chart.plot.CombinedDomainXYPlot;<newline46mondego>import org.jfree.chart.plot.IntervalMarker;<newline46mondego>import org.jfree.chart.plot.Marker;<newline46mondego>import org.jfree.chart.plot.PlotOrientation;<newline46mondego>import org.jfree.chart.plot.PlotRenderingInfo;<newline46mondego>import org.jfree.chart.plot.PlotState;<newline46mondego>import org.jfree.chart.plot.ValueMarker;<newline46mondego>import org.jfree.chart.plot.XYPlot;<newline46mondego>import org.jfree.chart.renderer.xy.XYItemRenderer;<newline46mondego>import org.jfree.data.Range;<newline46mondego>import org.jfree.text.TextUtilities;<newline46mondego>import org.jfree.ui.GradientPaintTransformer;<newline46mondego>import org.jfree.ui.Layer;<newline46mondego>import org.jfree.ui.LengthAdjustmentType;<newline46mondego>import org.jfree.ui.RectangleAnchor;<newline46mondego>import org.jfree.ui.RectangleInsets;<newline46mondego><newline46mondego>public class MyCombinedDomainXYPlot extends CombinedDomainXYPlot {<newline46mondego><newline46mondego>public MyCombinedDomainXYPlot() {<newline46mondego>    super();<newline46mondego>    // TODO Auto-generated constructor stub<newline46mondego>}<newline46mondego><newline46mondego>public MyCombinedDomainXYPlot(ValueAxis domainAxis) {<newline46mondego>    super(domainAxis);<newline46mondego>    // TODO Auto-generated constructor stub<newline46mondego>}<newline46mondego><newline46mondego>@Override<newline46mondego>public void draw(Graphics2D g2, Rectangle2D area, Point2D anchor,<newline46mondego>        PlotState parentState, PlotRenderingInfo info) {<newline46mondego>    super.draw(g2, area, anchor, parentState, info);<newline46mondego>    drawDomainMarkers(g2, area, 0, Layer.FOREGROUND);<newline46mondego>}<newline46mondego><newline46mondego>/**<newline46mondego> * Draws the domain markers (if any) for an axis and layer.  This method is<newline46mondego> * typically called from within the draw() method.<newline46mondego> *<newline46mondego> * @param g2  the graphics device.<newline46mondego> * @param dataArea  the data area.<newline46mondego> * @param index  the renderer index.<newline46mondego> * @param layer  the layer (foreground or background).<newline46mondego> */<newline46mondego>@Override<newline46mondego>protected void drawDomainMarkers(Graphics2D g2, Rectangle2D dataArea,<newline46mondego>                                 int index, Layer layer) {<newline46mondego><newline46mondego>    // check that the renderer has a corresponding dataset (it doesn't<newline46mondego>    // matter if the dataset is null)<newline46mondego>    if (index >= getDatasetCount()) {<newline46mondego>        return;<newline46mondego>    }<newline46mondego>    Collection markers = getDomainMarkers(index, layer);<newline46mondego>    ValueAxis axis = getDomainAxisForDataset(index);<newline46mondego>    if (markers != null && axis != null) {<newline46mondego>        Iterator iterator = markers.iterator();<newline46mondego>        while (iterator.hasNext()) {<newline46mondego>            Marker marker = (Marker) iterator.next();<newline46mondego>            drawDomainMarker(g2, marker, dataArea);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>/**<newline46mondego> * Draws a vertical line on the chart to represent a 'range marker'.<newline46mondego> * <newline46mondego> * @param g2<newline46mondego> *            the graphics device.<newline46mondego> * @param plot<newline46mondego> *            the plot.<newline46mondego> * @param domainAxis<newline46mondego> *            the domain axis.<newline46mondego> * @param marker<newline46mondego> *            the marker line.<newline46mondego> * @param dataArea<newline46mondego> *            the axis data area.<newline46mondego> */<newline46mondego>public void drawDomainMarker(Graphics2D g2, Marker marker, Rectangle2D dataArea) {<newline46mondego><newline46mondego>        ValueAxis domainAxis = getDomainAxis();<newline46mondego>        if (marker instanceof ValueMarker) {<newline46mondego>            ValueMarker vm = (ValueMarker) marker;<newline46mondego>            double value = vm.getValue();<newline46mondego>            Range range = domainAxis.getRange();<newline46mondego>            if (!range.contains(value)) {<newline46mondego>                return;<newline46mondego>            }<newline46mondego><newline46mondego>            double v = domainAxis.valueToJava2D(value, dataArea,<newline46mondego>                    getDomainAxisEdge());<newline46mondego><newline46mondego>            PlotOrientation orientation = getOrientation();<newline46mondego>            Line2D line = null;<newline46mondego>            if (orientation == PlotOrientation.HORIZONTAL) {<newline46mondego>                line = new Line2D.Double(dataArea.getMinX(), v,<newline46mondego>                        dataArea.getMaxX(), v);<newline46mondego>            } else if (orientation == PlotOrientation.VERTICAL) {<newline46mondego>                line = new Line2D.Double(v, dataArea.getMinY(), v,<newline46mondego>                        dataArea.getMaxY());<newline46mondego>            }<newline46mondego><newline46mondego>            final Composite originalComposite = g2.getComposite();<newline46mondego>            g2.setComposite(AlphaComposite.getInstance(<newline46mondego>                    AlphaComposite.SRC_OVER, marker.getAlpha()));<newline46mondego>            g2.setPaint(marker.getPaint());<newline46mondego>            g2.setStroke(marker.getStroke());<newline46mondego>            g2.draw(line);<newline46mondego><newline46mondego>            String label = marker.getLabel();<newline46mondego>            RectangleAnchor anchor = marker.getLabelAnchor();<newline46mondego>            if (label != null) {<newline46mondego>                Font labelFont = marker.getLabelFont();<newline46mondego>                g2.setFont(labelFont);<newline46mondego>                g2.setPaint(marker.getLabelPaint());<newline46mondego>                Point2D coordinates = calculateDomainMarkerTextAnchorPoint(<newline46mondego>                        g2, orientation, dataArea, line.getBounds2D(),<newline46mondego>                        marker.getLabelOffset(),<newline46mondego>                        LengthAdjustmentType.EXPAND, anchor);<newline46mondego>                TextUtilities.drawAlignedString(label, g2,<newline46mondego>                        (float) coordinates.getX(),<newline46mondego>                        (float) coordinates.getY(),<newline46mondego>                        marker.getLabelTextAnchor());<newline46mondego>            }<newline46mondego>            g2.setComposite(originalComposite);<newline46mondego>        } else if (marker instanceof IntervalMarker) {<newline46mondego>            IntervalMarker im = (IntervalMarker) marker;<newline46mondego>            double start = im.getStartValue();<newline46mondego>            double end = im.getEndValue();<newline46mondego>            Range range = domainAxis.getRange();<newline46mondego>            if (!(range.intersects(start, end))) {<newline46mondego>                return;<newline46mondego>            }<newline46mondego><newline46mondego>            double start2d = domainAxis.valueToJava2D(start, dataArea,<newline46mondego>                    getDomainAxisEdge());<newline46mondego>            double end2d = domainAxis.valueToJava2D(end, dataArea,<newline46mondego>                    getDomainAxisEdge());<newline46mondego>            double low = Math.min(start2d, end2d);<newline46mondego>            double high = Math.max(start2d, end2d);<newline46mondego><newline46mondego>            PlotOrientation orientation = getOrientation();<newline46mondego>            Rectangle2D rect = null;<newline46mondego>            if (orientation == PlotOrientation.HORIZONTAL) {<newline46mondego>                // clip top and bottom bounds to data area<newline46mondego>                low = Math.max(low, dataArea.getMinY());<newline46mondego>                high = Math.min(high, dataArea.getMaxY());<newline46mondego>                rect = new Rectangle2D.Double(dataArea.getMinX(), low,<newline46mondego>                        dataArea.getWidth(), high - low);<newline46mondego>            } else if (orientation == PlotOrientation.VERTICAL) {<newline46mondego>                // clip left and right bounds to data area<newline46mondego>                low = Math.max(low, dataArea.getMinX());<newline46mondego>                high = Math.min(high, dataArea.getMaxX());<newline46mondego>                rect = new Rectangle2D.Double(low, dataArea.getMinY(), high<newline46mondego>                        - low, dataArea.getHeight());<newline46mondego>            }<newline46mondego><newline46mondego>            final Composite originalComposite = g2.getComposite();<newline46mondego>            g2.setComposite(AlphaComposite.getInstance(<newline46mondego>                    AlphaComposite.SRC_OVER, marker.getAlpha()));<newline46mondego>            Paint p = marker.getPaint();<newline46mondego>            if (p instanceof GradientPaint) {<newline46mondego>                GradientPaint gp = (GradientPaint) p;<newline46mondego>                GradientPaintTransformer t = im<newline46mondego>                        .getGradientPaintTransformer();<newline46mondego>                if (t != null) {<newline46mondego>                    gp = t.transform(gp, rect);<newline46mondego>                }<newline46mondego>                g2.setPaint(gp);<newline46mondego>            } else {<newline46mondego>                g2.setPaint(p);<newline46mondego>            }<newline46mondego>            g2.fill(rect);<newline46mondego><newline46mondego>            // now draw the outlines, if visible...<newline46mondego>            if (im.getOutlinePaint() != null<newline46mondego>                    && im.getOutlineStroke() != null) {<newline46mondego>                if (orientation == PlotOrientation.VERTICAL) {<newline46mondego>                    Line2D line = new Line2D.Double();<newline46mondego>                    double y0 = dataArea.getMinY();<newline46mondego>                    double y1 = dataArea.getMaxY();<newline46mondego>                    g2.setPaint(im.getOutlinePaint());<newline46mondego>                    g2.setStroke(im.getOutlineStroke());<newline46mondego>                    if (range.contains(start)) {<newline46mondego>                        line.setLine(start2d, y0, start2d, y1);<newline46mondego>                        g2.draw(line);<newline46mondego>                    }<newline46mondego>                    if (range.contains(end)) {<newline46mondego>                        line.setLine(end2d, y0, end2d, y1);<newline46mondego>                        g2.draw(line);<newline46mondego>                    }<newline46mondego>                } else { // PlotOrientation.HORIZONTAL<newline46mondego>                    Line2D line = new Line2D.Double();<newline46mondego>                    double x0 = dataArea.getMinX();<newline46mondego>                    double x1 = dataArea.getMaxX();<newline46mondego>                    g2.setPaint(im.getOutlinePaint());<newline46mondego>                    g2.setStroke(im.getOutlineStroke());<newline46mondego>                    if (range.contains(start)) {<newline46mondego>                        line.setLine(x0, start2d, x1, start2d);<newline46mondego>                        g2.draw(line);<newline46mondego>                    }<newline46mondego>                    if (range.contains(end)) {<newline46mondego>                        line.setLine(x0, end2d, x1, end2d);<newline46mondego>                        g2.draw(line);<newline46mondego>                    }<newline46mondego>                }<newline46mondego>            }<newline46mondego><newline46mondego>            String label = marker.getLabel();<newline46mondego>            RectangleAnchor anchor = marker.getLabelAnchor();<newline46mondego>            if (label != null) {<newline46mondego>                Font labelFont = marker.getLabelFont();<newline46mondego>                g2.setFont(labelFont);<newline46mondego>                g2.setPaint(marker.getLabelPaint());<newline46mondego>                Point2D coordinates = calculateDomainMarkerTextAnchorPoint(<newline46mondego>                        g2, orientation, dataArea, rect,<newline46mondego>                        marker.getLabelOffset(),<newline46mondego>                        marker.getLabelOffsetType(), anchor);<newline46mondego>                TextUtilities.drawAlignedString(label, g2,<newline46mondego>                        (float) coordinates.getX(),<newline46mondego>                        (float) coordinates.getY(),<newline46mondego>                        marker.getLabelTextAnchor());<newline46mondego>            }<newline46mondego>            g2.setComposite(originalComposite);<newline46mondego><newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego><newline46mondego><newline46mondego>/**<newline46mondego> * Calculates the (x, y) coordinates for drawing a marker label.<newline46mondego> * <newline46mondego> * @param g2<newline46mondego> *            the graphics device.<newline46mondego> * @param orientation<newline46mondego> *            the plot orientation.<newline46mondego> * @param dataArea<newline46mondego> *            the data area.<newline46mondego> * @param markerArea<newline46mondego> *            the rectangle surrounding the marker area.<newline46mondego> * @param markerOffset<newline46mondego> *            the marker label offset.<newline46mondego> * @param labelOffsetType<newline46mondego> *            the label offset type.<newline46mondego> * @param anchor<newline46mondego> *            the label anchor.<newline46mondego> * <newline46mondego> * @return The coordinates for drawing the marker label.<newline46mondego> */<newline46mondego>protected Point2D calculateDomainMarkerTextAnchorPoint(Graphics2D g2,<newline46mondego>        PlotOrientation orientation, Rectangle2D dataArea,<newline46mondego>        Rectangle2D markerArea, RectangleInsets markerOffset,<newline46mondego>        LengthAdjustmentType labelOffsetType, RectangleAnchor anchor) {<newline46mondego><newline46mondego>    Rectangle2D anchorRect = null;<newline46mondego>    if (orientation == PlotOrientation.HORIZONTAL) {<newline46mondego>        anchorRect = markerOffset.createAdjustedRectangle(markerArea,<newline46mondego>                LengthAdjustmentType.CONTRACT, labelOffsetType);<newline46mondego>    } else if (orientation == PlotOrientation.VERTICAL) {<newline46mondego>        anchorRect = markerOffset.createAdjustedRectangle(markerArea,<newline46mondego>                labelOffsetType, LengthAdjustmentType.CONTRACT);<newline46mondego>    }<newline46mondego>    return RectangleAnchor.coordinates(anchorRect, anchor);<newline46mondego><newline46mondego>}<newline46mondego>}<newline46mondego>"
"10506splitHere46","12936648splitHere46","value"
"10507splitHere46","12936648splitHere46","final"
"10508splitHere46","12936648splitHere46","public void name(){<newline46mondego>    final int value = 9;<newline46mondego>    int o;<newline46mondego>    if(value > 9) o = 5;<newline46mondego>    if(value <= 9) o = 8;<newline46mondego>    System.out.println(o);<newline46mondego>}<newline46mondego>"
"10509splitHere46","12936767splitHere46","<newline46mondego>        prioSum.clear();"
"10510splitHere46","12936767splitHere46","private KnapsackItem computeBestItemForMinVal(<newline46mondego>        final ArrayList<KnapsackItem> list, final int minVal) {<newline46mondego>    int[] best = new int[minVal + 1];<newline46mondego>    prioSum.clear();<newline46mondego>    for (int w = 1; w <= minVal; w++) {<newline46mondego>...<newline46mondego>"
"10511splitHere46","12936923splitHere46","writer.print(<doubleQuotes46>Content-Disposition: form-data; name=\<doubleQuotes46>input1\<doubleQuotes46>\r\n<doubleQuotes46>);<newline46mondego>"
"10512splitHere46","12937035splitHere46","REDEPLOY"
"10513splitHere46","12937035splitHere46","MyApplicationEar/APP-INF/META-INF"
"10514splitHere46","12937035splitHere46","REDEPLOY"
"10515splitHere46","12937127splitHere46","public class UDP {<newline46mondego><newline46mondego>    public static void main(String[] args) throws Exception {<newline46mondego>        final String nodeName = args[0];<newline46mondego>        final int ownPort = Integer.valueOf(args[1]);<newline46mondego>        final int neighbourPort1 = Integer.valueOf(args[2]);<newline46mondego>        final int neighbourPort2 = Integer.valueOf(args[3]);<newline46mondego><newline46mondego><newline46mondego>        // Don't create a new socket every time<newline46mondego>        DatagramSocket neighbour1 = new DatagramSocket();<newline46mondego>        DatagramSocket neighbour2 = new DatagramSocket();<newline46mondego><newline46mondego>        neighbour1.connect(InetAddress.getLocalHost(), neighbourPort1);<newline46mondego>        neighbour2.connect(InetAddress.getLocalHost(), neighbourPort2);<newline46mondego><newline46mondego>        // You have to LISTEN<newline46mondego>        new Thread() {<newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                try {<newline46mondego>                    DatagramSocket socket = new DatagramSocket(ownPort);<newline46mondego><newline46mondego>                    byte[] buffer = new byte[socket.getReceiveBufferSize()];<newline46mondego>                    DatagramPacket packet = new DatagramPacket(buffer, buffer.length);<newline46mondego><newline46mondego>                    while (true) {<newline46mondego>                        // Blocks until it gets a packet<newline46mondego>                        socket.receive(packet);<newline46mondego><newline46mondego>                        System.out.println(<doubleQuotes46>Received string<doubleQuotes46>);<newline46mondego>                    }<newline46mondego><newline46mondego>                    // socket.close();<newline46mondego>                } catch (final Exception e) {<newline46mondego>                    e.printStackTrace();<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }.start();<newline46mondego><newline46mondego>        while (true) {<newline46mondego>            Thread.sleep(3000);<newline46mondego><newline46mondego>            sendPacket(neighbour1, nodeName);<newline46mondego>            sendPacket(neighbour2, nodeName);<newline46mondego>        }<newline46mondego><newline46mondego>        // If you're not using an infinite loop:<newline46mondego>        // neighbour1.close();<newline46mondego>        // neighbour2.close();<newline46mondego>    }<newline46mondego><newline46mondego>    private static void sendPacket(DatagramSocket to, String from) throws Exception {<newline46mondego>        String message = <doubleQuotes46>Hello I'm <doubleQuotes46> + from;<newline46mondego>        byte[] data = message.getBytes();<newline46mondego><newline46mondego>        DatagramPacket packet = new DatagramPacket(data, data.length);<newline46mondego>        to.send(packet);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"10516splitHere46","12937153splitHere46","public void run() {<newline46mondego>    boolean running = true;<newline46mondego>    while(running) {<newline46mondego>        running = doWork();<newline46mondego>        if (Thread.interrupted()) {<newline46mondego>            return;<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"10517splitHere46","12937153splitHere46","public class Worker extends Thread {<newline46mondego><newline46mondego>    private volatile running;<newline46mondego><newline46mondego>    public void run() {<newline46mondego>        running = true;<newline46mondego>        while(running) {<newline46mondego>            running = doWork();<newline46mondego>            if (Thread.interrupted()) {<newline46mondego>                return;<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public void stopRunning() {<newline46mondego>        running = false;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"10518splitHere46","12937235splitHere46","@FindBy(how = How.XPATH, using = <doubleQuotes46>//div[contains(text(),'sometext') or count(./select)=1]<doubleQuotes46>)<newline46mondego>private WebElement _selectBox1;<newline46mondego>"
"10519splitHere46","12937283splitHere46","HierarchicalINIConfiguration"
"10520splitHere46","12937283splitHere46","HierarchicalINIConfiguration iniObj = null;"
"10521splitHere46","12937283splitHere46","SubnodeConfiguration sObj = iniObj.getSection(sectionName); <newline46mondego>"
"10522splitHere46","12937283splitHere46","iniConfObj"
"10523splitHere46","12937283splitHere46","iniObj"
"10524splitHere46","12937283splitHere46","SubnodeConfiguration sObj = iniConfObj.getSection(sectionName); <newline46mondego>"
"10525splitHere46","12937309splitHere46","List<String> names = new ArrayList<String>();<newline46mondego>names.add(<doubleQuotes46>Bob<doubleQuotes46>);<newline46mondego>names.add(<doubleQuotes46>Jane<doubleQuotes46>);<newline46mondego>names.add(<doubleQuotes46>Tim<doubleQuotes46>);<newline46mondego>names.add(<doubleQuotes46>Sara<doubleQuotes46>);<newline46mondego><newline46mondego>Collections.shuffle(names);<newline46mondego><newline46mondego>person_one = names.get(0);<newline46mondego>person_two = names.get(1);<newline46mondego>person_three = names.get(2);<newline46mondego>person_four = names.get(3);<newline46mondego>"
"10526splitHere46","12937501splitHere46","private TableView<PopupData> guiAnnouncement**s**Table;<newline46mondego>"
"10527splitHere46","12937501splitHere46","<TableView fx:id=<doubleQuotes46>guiAnnouncementTable<doubleQuotes46><newline46mondego>"
"10528splitHere46","12937511splitHere46","null"
"10529splitHere46","12937511splitHere46","int"
"10530splitHere46","12937511splitHere46","5"
"10531splitHere46","12937511splitHere46","int"
"10532splitHere46","12937511splitHere46","Integer"
"10533splitHere46","12937511splitHere46","null"
"10534splitHere46","12937511splitHere46","int"
"10535splitHere46","12937511splitHere46","NullPointerException"
"10536splitHere46","12937511splitHere46","5"
"10537splitHere46","12937511splitHere46","new Integer(5)"
"10538splitHere46","12937511splitHere46","Integer exp3 = false ? new Integer(5) : true ? null : 50;<newline46mondego>"
"10539splitHere46","12937511splitHere46","? :"
"10540splitHere46","12937565splitHere46","<p:ajax process=<doubleQuotes46>@form<doubleQuotes46> update=<doubleQuotes46>@form<doubleQuotes46>/>"
"10541splitHere46","12937565splitHere46","<p:commandButton ajax=<doubleQuotes46>true<doubleQuotes46> process=<doubleQuotes46>@form<doubleQuotes46> update=<doubleQuotes46>@form<doubleQuotes46>/>"
"10542splitHere46","12937617splitHere46","Fetch<X,Y> yFetch = xRoot.fetch(<doubleQuotes46>Y<doubleQuotes46>, JoinType.INNER); <newline46mondego>yFetch.fetch(<doubleQuotes46>Z<doubleQuotes46>, JoinType.LEFT);<newline46mondego>"
"10543splitHere46","12937617splitHere46","xRoot.fetch(<doubleQuotes46>Y<doubleQuotes46>, JoinType.INNER).fetch(<doubleQuotes46>Z<doubleQuotes46>, JoinType.LEFT);<newline46mondego>"
"10544splitHere46","12937639splitHere46","Canvas"
"10545splitHere46","12937639splitHere46","JComponent"
"10546splitHere46","12937639splitHere46","Component"
"10547splitHere46","12937639splitHere46","Component"
"10548splitHere46","12937639splitHere46","panel.add((Component)chart.getCanvas(), CC.xy(1, 3));<newline46mondego>"
"10549splitHere46","12937652splitHere46","contentUsing"
"10550splitHere46","12937652splitHere46","@JsonDeserializer"
"10551splitHere46","12937652splitHere46","public class Citizen {<newline46mondego>    ...<newline46mondego>    @JsonDeserializer(contentUsing=MyListDeserializer.class) <newline46mondego>    public void setTickets(List<Tickets> tickets) {<newline46mondego>        this.tickets = tickets;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"10552splitHere46","12937652splitHere46","JsonDeserializer<BaseClass>"
"10553splitHere46","12937652splitHere46","abstract class BaseTickets {<newline46mondego>    String ticketType;<newline46mondego>    public String getTicketType()<newline46mondego>}<newline46mondego><newline46mondego>public class MyListDeserializer extends JsonDeserializer<BaseTickets> {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public BaseTickets deserialize(JsonParser jsonParser, DeserializationContext arg1) throws IOException, JsonProcessingException {<newline46mondego>        ObjectCodec oc = jsonParser.getCodec();<newline46mondego>        JsonNode node = oc.readTree(jsonParser);<newline46mondego>        Iterator<JsonNode> elements = node.getElements();<newline46mondego>        for (; elements.hasNext();) {<newline46mondego>            String type = (String) elements.next().get(<doubleQuotes46>ticketType<doubleQuotes46>);<newline46mondego><newline46mondego>            if (type.equals()){<newline46mondego>               //create concrete type here<newline46mondego>            }<newline46mondego>        }<newline46mondego>     }<newline46mondego>"
"10554splitHere46","12937652splitHere46","using"
"10555splitHere46","12937652splitHere46","JsonDeserialize<Object>"
"10556splitHere46","12937652splitHere46","have to write a custom serializer that adds the type information to the list"
"10557splitHere46","12937652splitHere46","public class Citizen {<newline46mondego>    ...<newline46mondego>    @JsonDeserializer(using=MyListDeserializer.class)<newline46mondego>    @JsonSerializer(using=MyListSerializer.class) <newline46mondego>    public void setTickets(List<Tickets> tickets) {<newline46mondego>        this.tickets = tickets;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public class MyListSerializer extends JsonSerializer<Object> {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void serialize(Object list, JsonGenerator jgen, SerializerProvider provider) throws IOException, JsonProcessingException {<newline46mondego>        @SuppressWarnings(<doubleQuotes46>rawtypes<doubleQuotes46>)<newline46mondego>        jgen.writeStartObject();<newline46mondego>        String type = getListType(list);<newline46mondego>        jgen.writeStringField(<doubleQuotes46>listType<doubleQuotes46>, type);<newline46mondego>        jgen.writeObjectField(<doubleQuotes46>list<doubleQuotes46>, list)<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"10558splitHere46","12937710splitHere46","JFrame"
"10559splitHere46","12937710splitHere46","JFrame()"
"10560splitHere46","12937710splitHere46","Frame()"
"10561splitHere46","12937710splitHere46","Frame(<doubleQuotes46><doubleQuotes46>)"
"10562splitHere46","12937710splitHere46","super()"
"10563splitHere46","12937710splitHere46","super(<doubleQuotes46>Title<doubleQuotes46>)"
"10564splitHere46","12937718splitHere46","<beans xmlns=<doubleQuotes46>http://www.springframework.org/schema/beans<doubleQuotes46> xmlns:xsi=<doubleQuotes46>http://www.w3.org/2001/XMLSchema-instance<doubleQuotes46><newline46mondego>    xmlns:tx=<doubleQuotes46>http://www.springframework.org/schema/tx<doubleQuotes46><newline46mondego>    xsi:schemaLocation=<doubleQuotes46>http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd<newline46mondego>       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd<doubleQuotes46>><newline46mondego>"
"10565splitHere46","12937718splitHere46","<tx:annotation-driven /><newline46mondego>"
"10566splitHere46","12937718splitHere46","<bean id=<doubleQuotes46>transactionManager<doubleQuotes46> class=<doubleQuotes46>org.springframework.orm.jpa.JpaTransactionManager<doubleQuotes46>><newline46mondego>    <property name=<doubleQuotes46>entityManagerFactory<doubleQuotes46> ref=<doubleQuotes46>entityManagerFactory<doubleQuotes46> /><newline46mondego></bean><newline46mondego>"
"10567splitHere46","12937913splitHere46","File"
"10568splitHere46","12937913splitHere46","TemporaryFolder"
"10569splitHere46","12937913splitHere46","FileInputStreamSupplier"
"10570splitHere46","12937913splitHere46","FileInputStream"
"10571splitHere46","12937913splitHere46","FileInputStream"
"10572splitHere46","12937913splitHere46","Supplier<FileInputStream>"
"10573splitHere46","12937932splitHere46","Stored Procedure"
"10574splitHere46","12937932splitHere46","withProcedureName"
"10575splitHere46","12937932splitHere46","withFunctionName"
"10576splitHere46","12937932splitHere46","SimpleJdbcCall caller = <newline46mondego>          new SimpleJdbcCall(this.jdbcTemplate).withProcedureName(<doubleQuotes46>ADD_PRODUCT<doubleQuotes46>);<newline46mondego>"
"10577splitHere46","12937932splitHere46","withFunctionName"
"10578splitHere46","12937932splitHere46","function"
"10579splitHere46","12937962splitHere46","String fname = listOfFiles[i].getName();<newline46mondego>fname.substring(0, fname.lastIndexOf(<doubleQuotes46>.<doubleQuotes46>))<newline46mondego>"
"10580splitHere46","12937962splitHere46","listOfFiles[i].getName()<newline46mondego>"
"10581splitHere46","12938158splitHere46","0"
"10582splitHere46","12938158splitHere46","ArrayList"
"10583splitHere46","12938158splitHere46","onCreate"
"10584splitHere46","12938158splitHere46","if (table2.get(0) == 5)<newline46mondego>"
"10585splitHere46","12938158splitHere46","table2"
"10586splitHere46","12938232splitHere46","Subclass inherits from Superclass<newline46mondego><newline46mondego>Subclass sub;<newline46mondego><newline46mondego>sub = new Superclass(); // is not valid<newline46mondego><newline46mondego>Superclass super = new Subclass(); // is valid<newline46mondego>// basic laws of polymorphism<newline46mondego>"
"10587splitHere46","12938232splitHere46","sub = (Subclass)(new Superclass()); // is valid<newline46mondego>"
"10588splitHere46","12938376splitHere46","private class DownloadFilesTask extends AsyncTask<URL, Integer, Long> {<newline46mondego>    protected Long doInBackground(URL... urls) {<newline46mondego>        int count = urls.length;<newline46mondego>        long totalSize = 0;<newline46mondego>        for (int i = 0; i < count; i++) {<newline46mondego>            totalSize += Downloader.downloadFile(urls[i]);<newline46mondego>            publishProgress((int) ((i / (float) count) * 100));<newline46mondego>            // Escape early if cancel() is called<newline46mondego>            if (isCancelled()) break;<newline46mondego>        }<newline46mondego>        return totalSize;<newline46mondego>    }<newline46mondego><newline46mondego>    protected void onProgressUpdate(Integer... progress) {<newline46mondego>        setProgressPercent(progress[0]);<newline46mondego>    }<newline46mondego><newline46mondego>    protected void onPostExecute(Long result) {<newline46mondego>        showDialog(<doubleQuotes46>Downloaded <doubleQuotes46> + result + <doubleQuotes46> bytes<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>new DownloadFilesTask().execute(url1, url2, url3);<newline46mondego>"
"10589splitHere46","12938458splitHere46","Default"
"10590splitHere46","12938458splitHere46","'Default'"
"10591splitHere46","12938458splitHere46","?"
"10592splitHere46","12938458splitHere46","rawQuery"
"10593splitHere46","12938458splitHere46","'"
"10594splitHere46","12938458splitHere46","'"
"10595splitHere46","12938458splitHere46","mDb.rawQuery(<doubleQuotes46>UPDATE <doubleQuotes46>+ DATABASE_TABLE +<newline46mondego>             <doubleQuotes46> SET <doubleQuotes46> + KEY_CUR_LEVEL + <doubleQuotes46> = <doubleQuotes46> + level +<newline46mondego>             <doubleQuotes46> WHERE <doubleQuotes46> + KEY_NAME + <doubleQuotes46> = ?<doubleQuotes46>,<newline46mondego>             new String[] { <doubleQuotes46>Default<doubleQuotes46> });<newline46mondego>"
"10596splitHere46","12938491splitHere46","Pattern p = Pattern.compile(<doubleQuotes46>if<doubleQuotes46>, Pattern.CASE_INSENSITIVE);<newline46mondego>"
"10597splitHere46","12938492splitHere46","CAMERA"
"10598splitHere46","12938492splitHere46","READ_CONTACTS"
"10599splitHere46","12938515splitHere46","Sockets socket = serverSocket.accept();<newline46mondego>SocketAddress address = socket.getRemoteSocketAddress();<newline46mondego>"
"10600splitHere46","12938653splitHere46","strValue.matches(<doubleQuotes46>^(?=.*[A-Z])(?=.*\\d)[A-Z\\d]+$<doubleQuotes46>)<newline46mondego>"
"10601splitHere46","12938718splitHere46","Library/<newline46mondego>        .git/<newline46mondego>        src/<newline46mondego>            com/<newline46mondego>                yanbanne<newline46mondego>        libs/<newline46mondego>             dependencyL1.jar<newline46mondego>             dependencyL2.jar<newline46mondego>        dist/<newline46mondego>             library.jar<newline46mondego>             library.doc<newline46mondego><newline46mondego>Visualization/<newline46mondego>              .git/<newline46mondego>              src/<newline46mondego>                  com/<newline46mondego>                      yanbanne<newline46mondego>              libs/<newline46mondego>                   dependencyV1.jar<newline46mondego>                   dependencyV2.jar<newline46mondego>                   library.jar<newline46mondego>              dist/<newline46mondego>                   visualization.jar<newline46mondego>                   visualization.doc<newline46mondego>"
"10602splitHere46","12938718splitHere46","lib"
"10603splitHere46","12938718splitHere46","library.jar"
"10604splitHere46","12938745splitHere46","Client"
"10605splitHere46","12938745splitHere46","close()"
"10606splitHere46","12938745splitHere46","killClient()"
"10607splitHere46","12938745splitHere46","server.close()"
"10608splitHere46","12938745splitHere46","client.killClient()"
"10609splitHere46","12938745splitHere46","try {} finally {}"
"10610splitHere46","12938745splitHere46","Threads.getAllStackTraces()"
"10611splitHere46","12938745splitHere46","/proc/self/fd"
"10612splitHere46","12938745splitHere46","OpenFileDescriptorCount"
"10613splitHere46","12938745splitHere46","java.lang:type=OperatingSystem"
"10614splitHere46","12938745splitHere46","ResourceManager"
"10615splitHere46","12938745splitHere46","assertTrue(connectionManager.isAllConnectionsClosed());"
"10616splitHere46","12938796splitHere46","TextExtractionStrategy"
"10617splitHere46","12938842splitHere46","Nodes"
"10618splitHere46","12938842splitHere46","Node[][] adjMatrix = new Node[x][y];<newline46mondego>"
"10619splitHere46","12938842splitHere46","adjMatrix[i][j] = new Node();<newline46mondego>"
"10620splitHere46","12938953splitHere46","dwr"
"10621splitHere46","12938984splitHere46","IdentityManager"
"10622splitHere46","12938984splitHere46","IdentityManager"
"10623splitHere46","12938984splitHere46","JpaIdentityStore"
"10624splitHere46","12938984splitHere46","createRole"
"10625splitHere46","12938990splitHere46","<doubleQuotes46>1   Build-walls     4 2       5       0<doubleQuotes46>.split(<doubleQuotes46>\\s+<doubleQuotes46>)<newline46mondego>"
"10626splitHere46","12938990splitHere46","<doubleQuotes46>\\s+<doubleQuotes46>"
"10627splitHere46","12939139splitHere46","ClassA"
"10628splitHere46","12939139splitHere46","ClassB"
"10629splitHere46","12939139splitHere46","ClassA"
"10630splitHere46","12939139splitHere46","ClassB"
"10631splitHere46","12939139splitHere46","ClassA"
"10632splitHere46","12939139splitHere46","ClassB"
"10633splitHere46","12939139splitHere46","ClassA.myMethodInClassA();<newline46mondego>"
"10634splitHere46","12939139splitHere46","myMethodInClassA();"
"10635splitHere46","12939139splitHere46","ClassA"
"10636splitHere46","12939139splitHere46","ClassA myA = new ClassA();<newline46mondego>myA.myMethodInClassA();<newline46mondego>"
"10637splitHere46","12939139splitHere46","static"
"10638splitHere46","12939139splitHere46","non static"
"10639splitHere46","12939139splitHere46","initialize"
"10640splitHere46","12939139splitHere46","test"
"10641splitHere46","12939139splitHere46","static"
"10642splitHere46","12939139splitHere46","public static boolean initialize = false;<newline46mondego>"
"10643splitHere46","12939139splitHere46","ClassA"
"10644splitHere46","12939139splitHere46","if(ClassA.initialize) {<newline46mondego>    //something<newline46mondego>}<newline46mondego>"
"10645splitHere46","12939139splitHere46","ClassA"
"10646splitHere46","12939139splitHere46","ClassA myA = new ClassA();<newline46mondego>if(myA.initialize) {<newline46mondego>    //something<newline46mondego>}<newline46mondego>"
"10647splitHere46","12939139splitHere46","ClassA"
"10648splitHere46","12939139splitHere46","initialize"
"10649splitHere46","12939139splitHere46","initialize"
"10650splitHere46","12939139splitHere46","ClassA"
"10651splitHere46","12939139splitHere46","ClassB"
"10652splitHere46","12939139splitHere46","public ClassB() {<newline46mondego>    //constructor for ClassB<newline46mondego>    ClassA c = new ClassA();<newline46mondego>}<newline46mondego>"
"10653splitHere46","12939139splitHere46","ClassA"
"10654splitHere46","12939139splitHere46","ClassB"
"10655splitHere46","12939139splitHere46","java ClassA"
"10656splitHere46","12939139splitHere46","java ClassB"
"10657splitHere46","12939139splitHere46","new ClassA();"
"10658splitHere46","12939139splitHere46","static"
"10659splitHere46","12939139splitHere46","non-static"
"10660splitHere46","12939336splitHere46","update your_table<newline46mondego>set date_column = date_column + interval 7 day<newline46mondego>"
"10661splitHere46","12939374splitHere46","List<String> strings = Arrays.asList(<doubleQuotes46>1<doubleQuotes46>, <doubleQuotes46>2<doubleQuotes46>, <doubleQuotes46>3<doubleQuotes46>);<newline46mondego>List<Integer> integers =<newline46mondego>        Lists.transform(strings, new Function<String, Integer>() {<newline46mondego>            @Override<newline46mondego>            public Integer apply(String input) {<newline46mondego>                return Integer.parseInt(input);<newline46mondego>            }<newline46mondego>        });<newline46mondego>"
"10662splitHere46","12939374splitHere46","<dependency><newline46mondego>    <groupId>com.google.guava</groupId><newline46mondego>    <artifactId>guava</artifactId><newline46mondego>    <version>13.0</version><newline46mondego></dependency><newline46mondego>"
"10663splitHere46","12939374splitHere46","final List<Integer> integers =<newline46mondego>        ListUtils.transformedList(strings, new Transformer<String, Integer>() {<newline46mondego>            @Override<newline46mondego>            public Integer transform(String s) {<newline46mondego>                return Integer.parseInt(s);<newline46mondego>            }<newline46mondego>        });<newline46mondego>"
"10664splitHere46","12939374splitHere46","<dependency><newline46mondego>    <groupId>net.sourceforge.collections</groupId><newline46mondego>    <artifactId>collections-generic</artifactId><newline46mondego>    <version>4.01</version><newline46mondego></dependency><newline46mondego>"
"10665splitHere46","12939374splitHere46","List<Integer> integers = List.list(<doubleQuotes46>1<doubleQuotes46>, <doubleQuotes46>2<doubleQuotes46>, <doubleQuotes46>3<doubleQuotes46>).map(new F<String, Integer>() {<newline46mondego>    @Override<newline46mondego>    public Integer f(String s) {<newline46mondego>        return Integer.parseInt(s);<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"10666splitHere46","12939374splitHere46","<dependency><newline46mondego>    <groupId>org.functionaljava</groupId><newline46mondego>    <artifactId>functionaljava</artifactId><newline46mondego>    <version>3.1</version><newline46mondego></dependency><newline46mondego>"
"10667splitHere46","12939374splitHere46","Seq(<doubleQuotes46>1<doubleQuotes46>, <doubleQuotes46>2<doubleQuotes46>, <doubleQuotes46>3<doubleQuotes46>) map {_.toInt}<newline46mondego>"
"10668splitHere46","12939427splitHere46","fail()"
"10669splitHere46","12939609splitHere46","Canvas"
"10670splitHere46","12939609splitHere46","sizeChanged"
"10671splitHere46","12939609splitHere46","class MainCanvas extends Canvas {<newline46mondego><newline46mondego>  int lastWidth, lastHeight;<newline46mondego><newline46mondego>  protected void sizeChanged(int w, int h) {<newline46mondego>    lastWidth = w;<newline46mondego>    lastHeight = h;<newline46mondego>    // adjust your user interface to the<newline46mondego>    // new width and height<newline46mondego>    // ...<newline46mondego>  }<newline46mondego><newline46mondego>  protected void paint(Graphics g) {<newline46mondego>    if (super.getWidth() != lastWidth<newline46mondego>        || super.getHeight() != lastHeight) {<newline46mondego>      sizeChanged(super.getWidth(), super.getHeight());<newline46mondego>    }<newline46mondego>    // paint your user interface<newline46mondego>    // ...<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"10672splitHere46","12939709splitHere46","if (offset < bytes.length)<newline46mondego>"
"10673splitHere46","12939709splitHere46","read()"
"10674splitHere46","12939709splitHere46","offset"
"10675splitHere46","12939709splitHere46","bytes.length"
"10676splitHere46","12939709splitHere46","ByteStreams.toByteArray"
"10677splitHere46","12939709splitHere46","ByteArrayOutputStream"
"10678splitHere46","12939720splitHere46","Set"
"10679splitHere46","12939720splitHere46","Set#equals()"
"10680splitHere46","12939736splitHere46","Thrown if the Java Virtual Machine cannot find an appropriate native-language definition of a method declared native.<newline46mondego>"
"10681splitHere46","12939736splitHere46","createFileExclusively"
"10682splitHere46","12939736splitHere46","java.dll"
"10683splitHere46","12939775splitHere46","createButtonsForButtonBar"
"10684splitHere46","12939775splitHere46","GridLayout"
"10685splitHere46","12939775splitHere46","createButtonBar"
"10686splitHere46","12939775splitHere46","@Override<newline46mondego>protected Control createButtonBar(final Composite parent)<newline46mondego>{<newline46mondego>    final Composite buttonBar = new Composite(parent, SWT.NONE);<newline46mondego><newline46mondego>    final GridLayout layout = new GridLayout();<newline46mondego>    layout.numColumns = 2;<newline46mondego>    layout.makeColumnsEqualWidth = false;<newline46mondego>    layout.horizontalSpacing = convertHorizontalDLUsToPixels(IDialogConstants.HORIZONTAL_SPACING);<newline46mondego>    buttonBar.setLayout(layout);<newline46mondego><newline46mondego>    final GridData data = new GridData(SWT.FILL, SWT.BOTTOM, true, false);<newline46mondego>    data.grabExcessHorizontalSpace = true;<newline46mondego>    data.grabExcessVerticalSpace = false;<newline46mondego>    buttonBar.setLayoutData(data);<newline46mondego><newline46mondego>    buttonBar.setFont(parent.getFont());<newline46mondego><newline46mondego>    // place a button on the left<newline46mondego>    final Button leftButton = new Button(buttonBar, SWT.PUSH);<newline46mondego>    leftButton.setText(<doubleQuotes46>Left!<doubleQuotes46>);<newline46mondego><newline46mondego>    final GridData leftButtonData = new GridData(SWT.LEFT, SWT.CENTER, true, true);<newline46mondego>    leftButtonData.grabExcessHorizontalSpace = true;<newline46mondego>    leftButtonData.horizontalIndent = convertHorizontalDLUsToPixels(IDialogConstants.HORIZONTAL_MARGIN);<newline46mondego>    leftButton.setLayoutData(leftButtonData);<newline46mondego><newline46mondego>    // add the dialog's button bar to the right<newline46mondego>    final Control buttonControl = super.createButtonBar(buttonBar);<newline46mondego>    buttonControl.setLayoutData(new GridData(SWT.RIGHT, SWT.CENTER, true, false));<newline46mondego><newline46mondego>    return buttonBar;<newline46mondego>}<newline46mondego>"
"10687splitHere46","12940037splitHere46","Main.java"
"10688splitHere46","12940037splitHere46","~/Temp/demo"
"10689splitHere46","12940037splitHere46",">"
"10690splitHere46","12940059splitHere46","length"
"10691splitHere46","12940059splitHere46","String"
"10692splitHere46","12940059splitHere46","length"
"10693splitHere46","12940136splitHere46","Bitmap bmp = BitmapFactory.decodeFile(f.getAbsolutePath());<newline46mondego>imgView.setImageBitmap(bmp);<newline46mondego>"
"10694splitHere46","12940318splitHere46","//MyServer.java<newline46mondego>public class MyServer {<newline46mondego><newline46mondego>  private static int PORT = 12345;<newline46mondego><newline46mondego>  public static void main(String args[]) {<newline46mondego><newline46mondego>    ServerSocket s = new ServerSocket(PORT);<newline46mondego>    while(true) new MyServerThread(s.accept());<newline46mondego><newline46mondego>  }<newline46mondego>"
"10695splitHere46","12940318splitHere46","//MyServerThread.java<newline46mondego>public class MyServerThread implements Runnable {<newline46mondego><newline46mondego>  private InputStream in = null;<newline46mondego>  private OutputStream out = null;<newline46mondego><newline46mondego>  public MyServerThread(Socket s) {<newline46mondego><newline46mondego>    in = s.getInputStream();<newline46mondego>    out = s.getOutputStream();<newline46mondego><newline46mondego>    (new Thread(this)).start();<newline46mondego>  }<newline46mondego><newline46mondego>  public void run() {<newline46mondego>    //do stuff with **in** and **out** to interact with client<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"10696splitHere46","12940318splitHere46","close()"
"10697splitHere46","12940320splitHere46","String str = <doubleQuotes46>123|00,124|01,125|00,126|01<doubleQuotes46>;<newline46mondego><newline46mondego>// Split on `|` or `,` and then take every alternate element.<newline46mondego>String[] tokens = str.split(<doubleQuotes46>[|,]<doubleQuotes46>);<newline46mondego><newline46mondego>List<Integer> intList = new ArrayList<Integer>();    <newline46mondego>for (int i = 0; i < tokens.length; i = i + 2) {<newline46mondego>    intList.add(Integer.parseInt(tokens[i]));<newline46mondego>}<newline46mondego>"
"10698splitHere46","12940320splitHere46","|"
"10699splitHere46","12940320splitHere46",","
"10700splitHere46","12940320splitHere46","String str = <doubleQuotes46>123|00,125|,126|01,|,<doubleQuotes46>;<newline46mondego>String[] tokens = str.split(<doubleQuotes46>,<doubleQuotes46>);<newline46mondego>Map<Integer, String> flagMap = new HashMap<Integer, String>();<newline46mondego><newline46mondego>    for (String token: tokens) {<newline46mondego>        String[] arr = token.split(<doubleQuotes46>[|]<doubleQuotes46>);<newline46mondego><newline46mondego>        if (arr.length == 0) {<newline46mondego>            continue;<newline46mondego>        }<newline46mondego>        if (arr[0].length() > 1) {<newline46mondego>            if (arr.length == 2) {<newline46mondego>                flagMap.put(Integer.parseInt(arr[0]), arr[1]);<newline46mondego>            } else {<newline46mondego>                flagMap.put(Integer.parseInt(arr[0]), <doubleQuotes46><doubleQuotes46>);<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    System.out.println(flagMap);<newline46mondego>"
"10701splitHere46","12940320splitHere46","{126=01, 125=, 123=00}<newline46mondego>"
"10702splitHere46","12940394splitHere46","HashMap<String, ?>"
"10703splitHere46","12940394splitHere46","String"
"10704splitHere46","12940394splitHere46","HashMap"
"10705splitHere46","12940394splitHere46","HashMap"
"10706splitHere46","12940394splitHere46","HashSet<String>[]<newline46mondego>Double[]<newline46mondego>Double[]<newline46mondego>"
"10707splitHere46","12940394splitHere46","CustomObject[]<newline46mondego>    HashSet<String><newline46mondego>    Double<newline46mondego>    Double<newline46mondego>"
"10708splitHere46","12940420splitHere46","equals"
"10709splitHere46","12940420splitHere46","if"
"10710splitHere46","12940446splitHere46","this"
"10711splitHere46","12940446splitHere46","new"
"10712splitHere46","12940446splitHere46","this"
"10713splitHere46","12940446splitHere46","foo.bar(42);<newline46mondego>"
"10714splitHere46","12940446splitHere46","bar(foo, 42);<newline46mondego>"
"10715splitHere46","12940446splitHere46","this"
"10716splitHere46","12940446splitHere46","static"
"10717splitHere46","12940446splitHere46","Foo.bar(42);<newline46mondego>"
"10718splitHere46","12940446splitHere46","bar(42);<newline46mondego>"
"10719splitHere46","12940446splitHere46","Foo"
"10720splitHere46","12940654splitHere46","HelloWorldSWT"
"10721splitHere46","12940654splitHere46","Properties"
"10722splitHere46","12940654splitHere46","Java Build Path"
"10723splitHere46","12940654splitHere46","Projects"
"10724splitHere46","12940654splitHere46","org.eclipse.swt.cocoa.macosx.x86_64"
"10725splitHere46","12940654splitHere46","Native library location"
"10726splitHere46","12940654splitHere46","Edit"
"10727splitHere46","12940654splitHere46","Workspace"
"10728splitHere46","12940654splitHere46","org.eclipse.swt.cocoa.macosx.x86_64"
"10729splitHere46","12940654splitHere46","OK"
"10730splitHere46","12940677splitHere46","HashMap"
"10731splitHere46","12940677splitHere46","HashSet"
"10732splitHere46","12940792splitHere46","PasswordService"
"10733splitHere46","12940792splitHere46","<bean id=<doubleQuotes46>passwordService<doubleQuotes46> class=<doubleQuotes46>org.apache.shiro.authc.credential.DefaultPasswordService<doubleQuotes46>><newline46mondego>  <property name=<doubleQuotes46>hashService.hashAlgorithmName<doubleQuotes46> value=<doubleQuotes46>SHA-512<doubleQuotes46>/><newline46mondego>  <property name=<doubleQuotes46>hashService.hashIterations<doubleQuotes46> value=<doubleQuotes46>500000<doubleQuotes46>/><newline46mondego></bean><newline46mondego><newline46mondego><bean id=<doubleQuotes46>myRealm<doubleQuotes46> class=<doubleQuotes46>...<doubleQuotes46>><newline46mondego>  <property name=<doubleQuotes46>credentialsMatcher<doubleQuotes46>><newline46mondego>    <bean class=<doubleQuotes46>org.apache.shiro.authc.credential.PasswordMatcher<doubleQuotes46>><newline46mondego>      <property name=<doubleQuotes46>passwordService<doubleQuotes46> ref=<doubleQuotes46>passwordService<doubleQuotes46>/><newline46mondego>    </bean><newline46mondego>  </property><newline46mondego></bean><newline46mondego>"
"10734splitHere46","12940792splitHere46","myRealm"
"10735splitHere46","12940792splitHere46","PasswordService"
"10736splitHere46","12940792splitHere46","String encryptedPassword = passwordService.encryptPassword(signupForm.getPassword());<newline46mondego><newline46mondego>userService.createUser(signupForm.getFullName(), signupForm.getEmail(), encryptedPassword);<newline46mondego>"
"10737splitHere46","12940931splitHere46","swing"
"10738splitHere46","12940931splitHere46","paintComponent"
"10739splitHere46","12940931splitHere46","Graphic"
"10740splitHere46","12940931splitHere46","public class DrawTest extends JPanel{<newline46mondego>    public static void main(String[] args)<newline46mondego>    {<newline46mondego><newline46mondego>        final JFrame frame = new JFrame();<newline46mondego>        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        frame.add(new DrawTest());<newline46mondego>        frame.pack();<newline46mondego>        frame.setLocationRelativeTo(null);<newline46mondego>        frame.setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>    public Dimension getPreferredSize(){<newline46mondego>        return new Dimension(400,300);<newline46mondego>    }<newline46mondego><newline46mondego>    public void paintComponent(Graphics g){<newline46mondego>        super.paintComponent(g);<newline46mondego>        g.setColor(Color.black);<newline46mondego>        g.drawLine(10, 10, 100, 10);<newline46mondego>        g.setColor(getBackground());<newline46mondego>        g.drawLine(50, 10, 60, 10);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"10741splitHere46","12940931splitHere46","paintComponent"
"10742splitHere46","12940931splitHere46","ArrayList"
"10743splitHere46","12940931splitHere46","ArrayList"
"10744splitHere46","12940931splitHere46","public static class MazeWall{<newline46mondego>    public static final int OpeningWidth = 10;<newline46mondego><newline46mondego>    Point start;<newline46mondego>    Point end;<newline46mondego>    Point opening;<newline46mondego><newline46mondego>    public MazeWall(Point start, Point end, boolean hasOpening){<newline46mondego>        this.start = start;<newline46mondego>        this.end = end;<newline46mondego><newline46mondego>        if(hasOpening){<newline46mondego>            int range;<newline46mondego>            if(start.x == end.x){<newline46mondego>                range = end.x - start.x - OpeningWidth;<newline46mondego>                int location = (int)(Math.random() * range + start.x);<newline46mondego>                opening = new Point(location, start.y);<newline46mondego>            } else{<newline46mondego>                range = end.y - start.y - OpeningWidth;<newline46mondego>                int location = (int)(Math.random() * range + start.y);<newline46mondego>                opening = new Point(location, start.x);<newline46mondego>            }<newline46mondego>        }   <newline46mondego>    }<newline46mondego>}<newline46mondego>"
"10745splitHere46","12940985splitHere46","switch"
"10746splitHere46","12940985splitHere46","String"
"10747splitHere46","12940985splitHere46","switch"
"10748splitHere46","12940985splitHere46","unitValue = Double.parseDouble(tfUnit.getText());<newline46mondego>valMeter = unitValue * defined1;<newline46mondego>labelDesc.setText(<doubleQuotes46>Unit 1<doubleQuotes46>);<newline46mondego>convert();<newline46mondego>"
"10749splitHere46","12940985splitHere46","defined1"
"10750splitHere46","12940985splitHere46","defined2"
"10751splitHere46","12940985splitHere46","unit"
"10752splitHere46","12940985splitHere46","factor"
"10753splitHere46","12940985splitHere46","Number"
"10754splitHere46","12940985splitHere46","defined1"
"10755splitHere46","12940985splitHere46","defined2"
"10756splitHere46","12940985splitHere46","unitValue = Double.parseDouble(tfUnit.getText());<newline46mondego>valMeter = unitValue * factor(unit);<newline46mondego>labelDesc.setText(unit);<newline46mondego>convert();<newline46mondego><newline46mondego>Number factor(String unitName)<newline46mondego>{<newline46mondego>     switch(unitName)<newline46mondego>     {<newline46mondego>         case <doubleQuotes46>Unit 1<doubleQuotes46>: return defined1;<newline46mondego>         case <doubleQuotes46>Unit 2<doubleQuotes46>: return defined2;<newline46mondego>         default: throw new Exception(<doubleQuotes46>Unknown unit<doubleQuotes46>);<newline46mondego>     }<newline46mondego>}<newline46mondego>"
"10757splitHere46","12940985splitHere46","Map<String, Number> unitNameValueMap = new HashMap<String, Number>();<newline46mondego><newline46mondego>unitNameValueMap.put(<doubleQuotes46>Unit 1<doubleQuotes46>, defined1);<newline46mondego>unitNameValueMap.put(<doubleQuotes46>Unit 2<doubleQuotes46>, defined2);<newline46mondego><newline46mondego>Number factor(String unitName)<newline46mondego>{<newline46mondego>    Number result = unitNameValueMap.get(unitName);<newline46mondego><newline46mondego>    if(result == null)<newline46mondego>    {<newline46mondego>        throw new Exception(<doubleQuotes46>Unknown unit<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    return result;<newline46mondego>}<newline46mondego>"
"10758splitHere46","12940985splitHere46","enum UnitValue<newline46mondego>{<newline46mondego>    UNIT1(defined1), UNIT2(defined2);<newline46mondego><newline46mondego>    final Number value;<newline46mondego><newline46mondego>    private UnitValue(Number value)<newline46mondego>    {<newline46mondego>        this.value = value;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>Number factor(String unitName)<newline46mondego>{<newline46mondego>    return Enum.valueOf(UnitValue.class, <doubleQuotes46>UNIT<doubleQuotes46> + Integer.parseInt(unitName.substring(5)).value;<newline46mondego>}<newline46mondego>"
"10759splitHere46","12940985splitHere46","switch"
"10760splitHere46","12940985splitHere46","switch"
"10761splitHere46","12940985splitHere46","enum"
"10762splitHere46","12941002splitHere46","rendered"
"10763splitHere46","12941002splitHere46","<c:if />"
"10764splitHere46","12941002splitHere46","rendered"
"10765splitHere46","12941002splitHere46","<c:if/>"
"10766splitHere46","12941002splitHere46","commandButton"
"10767splitHere46","12941002splitHere46","immediate=<doubleQuotes46>true<doubleQuotes46>"
"10768splitHere46","12941002splitHere46","public void clearComponentTree() {<newline46mondego>    FacesContext context = FacesContext.getCurrentInstance();<newline46mondego>    Application application = context.getApplication();<newline46mondego>    ViewHandler viewHandler = application.getViewHandler();<newline46mondego>    UIViewRoot viewRoot = viewHandler.createView(context, context.getViewRoot().getViewId());<newline46mondego>    context.setViewRoot(viewRoot);<newline46mondego>    context.renderResponse();<newline46mondego>}<newline46mondego>"
"10769splitHere46","12941002splitHere46","sub1"
"10770splitHere46","12941002splitHere46","immediate=<doubleQuotes46>true<doubleQuotes46>"
"10771splitHere46","12941002splitHere46","public void clearSubtree() {<newline46mondego>    FacesContext context = FacesContext.getCurrentInstance();<newline46mondego>    context.getViewRoot().findComponent(<doubleQuotes46>:sub1<doubleQuotes46>).getChildren().clear();<newline46mondego>}<newline46mondego>"
"10772splitHere46","12941089splitHere46","Configuration config = new Configuration().configure();<newline46mondego>config.buildMappings();<newline46mondego>serviceRegistry = new ServiceRegistryBuilder().applySettings(config.getProperties()).buildServiceRegistry(); <newline46mondego>SessionFactory factory = config.buildSessionFactory(serviceRegistry);<newline46mondego>"
"10773splitHere46","12941156splitHere46","Foo bar;"
"10774splitHere46","12941156splitHere46","Foo *bar = new Foo();"
"10775splitHere46","12941201splitHere46","UIManager.put(<doubleQuotes46>nameOfFontProperty<doubleQuotes46>, new Font(Font.DIALOG, FONT.PLAIN, sizeInPixel));"
"10776splitHere46","12941201splitHere46","UIManager.put(<doubleQuotes46>Label.font<doubleQuotes46>, UIManager.getFont(<doubleQuotes46>Label.font<doubleQuotes46>).deriveFont(20.0));<newline46mondego>SwingUtilities.updateComponentTreeUI(yourJFrame);<newline46mondego>"
"10777splitHere46","12941244splitHere46","*ViewModel"
"10778splitHere46","12941244splitHere46","*Interactor"
"10779splitHere46","12941244splitHere46","I<UseCase>Request"
"10780splitHere46","12941244splitHere46","I<UseCase>Response"
"10781splitHere46","12941244splitHere46","I<UseCase>Interactor"
"10782splitHere46","12941244splitHere46","I<UseCase>Consumer"
"10783splitHere46","12941244splitHere46","Controller"
"10784splitHere46","12941244splitHere46","RequestModel"
"10785splitHere46","12941244splitHere46","Interactor"
"10786splitHere46","12941244splitHere46","Interactor"
"10787splitHere46","12941244splitHere46","*Consumer"
"10788splitHere46","12941244splitHere46","ResponseModel"
"10789splitHere46","12941244splitHere46","Controller"
"10790splitHere46","12941244splitHere46","Controller"
"10791splitHere46","12941244splitHere46","Map"
"10792splitHere46","12941244splitHere46","Presenter"
"10793splitHere46","12941349splitHere46","\"
"10794splitHere46","12941349splitHere46","System.out.println(a.replaceAll(<doubleQuotes46>/<doubleQuotes46>, Matcher.quoteReplacement(<doubleQuotes46>\\<doubleQuotes46>)));<newline46mondego>"
"10795splitHere46","12941383splitHere46","@Configuration<newline46mondego>public class Cfg {<newline46mondego><newline46mondego>    public ExecutorService executorService() {<newline46mondego>        return executorServiceFactoryBean().getObject();<newline46mondego>    }<newline46mondego><newline46mondego>    @Bean<newline46mondego>    public ThreadPoolExecutorFactoryBean executorServiceFactoryBean() {<newline46mondego>        return new ThreadPoolExecutorFactoryBean();<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"10796splitHere46","12941383splitHere46","executorService()"
"10797splitHere46","12941383splitHere46","@Bean"
"10798splitHere46","12941383splitHere46","@Bean"
"10799splitHere46","12941383splitHere46","ExecutorService"
"10800splitHere46","12941383splitHere46","ThreadPoolExecutorFactoryBean"
"10801splitHere46","12941383splitHere46","@Bean"
"10802splitHere46","12941383splitHere46","DisposableBean"
"10803splitHere46","12941539splitHere46","ImmutableSortedSet.descendingSet()"
"10804splitHere46","12941539splitHere46","ImmutableSortedSet"
"10805splitHere46","12941539splitHere46","ImmutableSortedSet"
"10806splitHere46","12941539splitHere46","ImmutableSortedSet.reverseOrder()"
"10807splitHere46","12941595splitHere46","Label#setText"
"10808splitHere46","12941595splitHere46","if(value > player.getCurrMon()) {<newline46mondego>    label3.setText(<doubleQuotes46>You are out of money<doubleQuotes46>);<newline46mondego>    repaint();<newline46mondego>}<newline46mondego>"
"10809splitHere46","12941595splitHere46","repaint"
"10810splitHere46","12941595splitHere46","invalidate()"
"10811splitHere46","12941595splitHere46","int value = Integer.parseInt(text.getText());<newline46mondego>"
"10812splitHere46","12941595splitHere46","NumberFormatException"
"10813splitHere46","12941595splitHere46","public void actionPerformed(ActionEvent e){<newline46mondego>    player.reset();<newline46mondego>    System.out.println(<doubleQuotes46>reset button<doubleQuotes46>);<newline46mondego><newline46mondego>    label3.setText(<doubleQuotes46><doubleQuotes46>); // assuming no new messages..<newline46mondego>    label.setText(<doubleQuotes46>Current Money:<doubleQuotes46>+player.getCurrMon());<newline46mondego>    text.setEnabled(true);<newline46mondego><newline46mondego>    invalidate();<newline46mondego>    repaint();<newline46mondego><newline46mondego>}<newline46mondego>"
"10814splitHere46","12941595splitHere46","try {<newline46mondego>        int value = Integer.parseInt(text.getText());<newline46mondego><newline46mondego>        if (value > player.getCurrMon()) {<newline46mondego>            label3.setText(<doubleQuotes46>You don't have enough money to cover the bet<doubleQuotes46>);<newline46mondego>        } else {<newline46mondego>            player.bet();<newline46mondego><newline46mondego>            label.setText(<doubleQuotes46>Current Money:<doubleQuotes46>+player.getCurrMon());<newline46mondego><newline46mondego>            if(player.getCurrMon() == 0){<newline46mondego>                label3.setText(<doubleQuotes46>You are out of money<doubleQuotes46>);<newline46mondego>                text.setEnabled(false);<newline46mondego>            } else if (player.getCurrMon() < 0) {<newline46mondego>                label3.setText(<doubleQuotes46>We'll be sending the boys around shortly<doubleQuotes46>);<newline46mondego>                text.setEnabled(false);<newline46mondego>            }<newline46mondego>       }<newline46mondego>    } catch (NumberFormatException exp) {<newline46mondego>        label3.setText(text.getText() + <doubleQuotes46> is an invalid bet<doubleQuotes46>);<newline46mondego>    }<newline46mondego>    invalidate();<newline46mondego>    repaint();<newline46mondego>"
"10815splitHere46","12941595splitHere46","label"
"10816splitHere46","12941595splitHere46","label3"
"10817splitHere46","12941595splitHere46","CoinPanel"
"10818splitHere46","12941595splitHere46","private JLabel label3 = new JLabel(<doubleQuotes46>Enter a bet<doubleQuotes46>);<newline46mondego>private JLabel label;<newline46mondego>"
"10819splitHere46","12941595splitHere46","public CoinPanel(){<newline46mondego><newline46mondego>    label= new JLabel(<doubleQuotes46>Current Money:<doubleQuotes46>+player.getCurrMon());<newline46mondego>"
"10820splitHere46","12941595splitHere46","public class BetButtonListener implements ActionListener {<newline46mondego><newline46mondego>    public void actionPerformed(ActionEvent e) {<newline46mondego>        try {<newline46mondego>            int value = Integer.parseInt(text.getText());<newline46mondego><newline46mondego>            if (value > player.getCurrMon()) {<newline46mondego>                label3.setText(<doubleQuotes46>You don't have enough money to cover the bet<doubleQuotes46>);<newline46mondego>            } else {<newline46mondego>                String face = <doubleQuotes46>Heads<doubleQuotes46>;<newline46mondego>                if (e.getSource().equals(tailsBt)) {<newline46mondego>                    face = <doubleQuotes46>Tails<doubleQuotes46><newline46mondego>                }<newline46mondego>                player.bet(face, value);<newline46mondego><newline46mondego>                label.setText(<doubleQuotes46>Current Money:<doubleQuotes46> + player.getCurrMon());<newline46mondego><newline46mondego>                if (player.getCurrMon() == 0) {<newline46mondego>                    label3.setText(<doubleQuotes46>You are out of money<doubleQuotes46>);<newline46mondego>                    text.setEnabled(false);<newline46mondego>                } else if (player.getCurrMon() < 0) {<newline46mondego>                    label3.setText(<doubleQuotes46>We'll be sending the boys around shortly<doubleQuotes46>);<newline46mondego>                    text.setEnabled(false);<newline46mondego>                }<newline46mondego>            }<newline46mondego>        } catch (NumberFormatException exp) {<newline46mondego>            label3.setText(text.getText() + <doubleQuotes46> is an invalid bet<doubleQuotes46>);<newline46mondego>        }<newline46mondego>        invalidate();<newline46mondego>        repaint();<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"10821splitHere46","12941595splitHere46","bet"
"10822splitHere46","12941641splitHere46","Image img1 = Toolkit.getDefaultToolkit().getImage(<doubleQuotes46>yourFile.gif<doubleQuotes46>);<newline46mondego>"
"10823splitHere46","12941726splitHere46","import java.io.InputStream;<newline46mondego>import java.util.List;<newline46mondego><newline46mondego>import javax.xml.bind.JAXBContext;<newline46mondego>import javax.xml.bind.Unmarshaller;<newline46mondego>import javax.xml.bind.annotation.XmlAttribute;<newline46mondego>import javax.xml.bind.annotation.XmlElement;<newline46mondego>import javax.xml.bind.annotation.XmlElementWrapper;<newline46mondego>import javax.xml.bind.annotation.XmlRootElement;<newline46mondego>import javax.xml.bind.annotation.XmlValue;<newline46mondego><newline46mondego>@XmlRootElement(name = <doubleQuotes46>authStore<doubleQuotes46>)<newline46mondego>@XmlAccessorType(XmlAccesssType.FIELD)<newline46mondego>public class AuthStore {<newline46mondego>    public static void main(String []args) throws Exception {<newline46mondego>        InputStream inputStream = AuthStore.class.getResourceAsStream(<doubleQuotes46>test.xml<doubleQuotes46>);<newline46mondego>        JAXBContext jaxbContext = JAXBContext.newInstance(AuthStore.class);<newline46mondego>        Unmarshaller unmarshaller = jaxbContext.createUnmarshaller();<newline46mondego>        AuthStore authStore = (AuthStore)unmarshaller.unmarshal(inputStream);<newline46mondego><newline46mondego>        System.out.println(authStore.getAuthList().get(0).getResource());<newline46mondego>        System.out.println(authStore.getAuthList().get(0).getPrivilege().getRegex());<newline46mondego>        System.out.println(authStore.getAuthList().get(0).getPrivilege().getValue());<newline46mondego>    }<newline46mondego><newline46mondego>    @XmlElementWrapper(name = <doubleQuotes46>authList<doubleQuotes46>)<newline46mondego>    @XmlElement(name = <doubleQuotes46>auth<doubleQuotes46>)<newline46mondego>    private List<Auth> authList;<newline46mondego><newline46mondego>    public List<Auth> getAuthList() {<newline46mondego>        return authList;<newline46mondego>    }<newline46mondego><newline46mondego>    @XmlAccessorType(XmlAccesssType.FIELD)<newline46mondego>    public static class Auth {<newline46mondego>        @XmlElement(name = <doubleQuotes46>resource<doubleQuotes46>)<newline46mondego>        private String resource;<newline46mondego>        @XmlElement(name = <doubleQuotes46>privilege<doubleQuotes46>)<newline46mondego>        private Privilege privilege;<newline46mondego><newline46mondego>        public String getResource() {<newline46mondego>            return resource;<newline46mondego>        }<newline46mondego><newline46mondego>        public Privilege getPrivilege() {<newline46mondego>            return privilege;<newline46mondego>        }<newline46mondego><newline46mondego>        @XmlAccessorType(XmlAccesssType.FIELD)<newline46mondego>            public static class Privilege {<newline46mondego>            @XmlAttribute(name = <doubleQuotes46>regex<doubleQuotes46>)<newline46mondego>            private Boolean regex;<newline46mondego>            @XmlValue<newline46mondego>            private String value;<newline46mondego><newline46mondego>            public Boolean getRegex() {<newline46mondego>                return regex;<newline46mondego>            }<newline46mondego><newline46mondego>            public String getValue() {<newline46mondego>                return value;<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"10824splitHere46","12941996splitHere46","Math.max(0, yourVar)<newline46mondego>"
"10825splitHere46","12942008splitHere46","getParameter(<doubleQuotes46>user<doubleQuotes46>)"
"10826splitHere46","12942016splitHere46","<null>"
"10827splitHere46","12942016splitHere46","<bean id=<doubleQuotes46>myBean<doubleQuotes46> class=<doubleQuotes46>com.me.myapp.Widget<doubleQuotes46>><newline46mondego>    <constructor-arg name=<doubleQuotes46>fizz<doubleQuotes46>><newline46mondego>            <null /><newline46mondego>    </constructor-arg><newline46mondego>    <constructor-arg name=<doubleQuotes46>buzz<doubleQuotes46> ref=<doubleQuotes46>someOtherBean<doubleQuotes46> /><newline46mondego></bean><newline46mondego>"
"10828splitHere46","12942081splitHere46","array"
"10829splitHere46","12942081splitHere46","locally"
"10830splitHere46","12942081splitHere46","main"
"10831splitHere46","12942081splitHere46","parameter"
"10832splitHere46","12942081splitHere46","method"
"10833splitHere46","12942081splitHere46","main()"
"10834splitHere46","12942081splitHere46","import java.util.Scanner;<newline46mondego><newline46mondego>public class ArraySort {<newline46mondego>private static Object sc;    <newline46mondego>private static Scanner keyboardScanner = new Scanner(System.in);<newline46mondego><newline46mondego>// creates question and int for user input<newline46mondego>/**<newline46mondego> *<newline46mondego> */<newline46mondego>public void fillArray(int[] array) {<newline46mondego><newline46mondego>    // creates for loop for repeating question based on array size <newline46mondego>    for (int i=0; i<array.length; i++) {<newline46mondego>        System.out.println(<doubleQuotes46>Enter value for element <doubleQuotes46> + i + <doubleQuotes46>: <doubleQuotes46>);<newline46mondego>        array[i] = keyboardScanner.nextInt();<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>// prints i in the for loop<newline46mondego>public void printArray(String msg, int[] argsArray) {<newline46mondego>    System.out.println(msg);<newline46mondego>    for (int i=0; i<argsArray.length; i++) {<newline46mondego>        System.out.println(argsArray[i]);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>//  defines method<newline46mondego>public void sortArray(int[] array) {<newline46mondego>    // sets up to output in ascending order<newline46mondego>    for (int i=0; i<array.length; i++) {<newline46mondego>        for (int j=i+1; j<array.length; j++) {<newline46mondego>            if (array[i] > array[j]) {<newline46mondego>                int temp = array[i];<newline46mondego>                array[i] = array[j];<newline46mondego>                array[j] = temp;<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>// main output and visual layout<newline46mondego>public static void main(String[] args) {<newline46mondego><newline46mondego>    System.out.println(<doubleQuotes46>Enter the size of the array (3 to 10): <doubleQuotes46>);<newline46mondego>    int n = keyboardScanner.nextInt();<newline46mondego><newline46mondego>    int[] array = new int[n];<newline46mondego><newline46mondego>    ArraySort arraySort = new ArraySort();<newline46mondego>    arraySort.fillArray(array);<newline46mondego><newline46mondego>    System.out.println();<newline46mondego>    //I still get an error saying <doubleQuotes46> cannot find symbol<doubleQuotes46><newline46mondego>    arraySort.printArray(<doubleQuotes46>The unsorted values... <doubleQuotes46>, array);<newline46mondego>    //same here<newline46mondego>    arraySort.sortArray(array);<newline46mondego><newline46mondego>    System.out.println();<newline46mondego>    //and here<newline46mondego>    arraySort.printArray(<doubleQuotes46>The sorted values... <doubleQuotes46>, array);<newline46mondego><newline46mondego><newline46mondego>    // Keep console window alive until 'enter' pressed (if needed).<newline46mondego>    System.out.println();<newline46mondego>    System.out.println(<doubleQuotes46>Done - press enter key to end program<doubleQuotes46>);<newline46mondego><newline46mondego>}<newline46mondego>}<newline46mondego>"
"10835splitHere46","12942373splitHere46","String.endsWith"
"10836splitHere46","12942373splitHere46","\0"
"10837splitHere46","12942418splitHere46","Matrix4 normalProjection = new Matrix4().setToOrtho2D(0, 0, Gdx.graphics.getWidth(),  Gdx.graphics.getHeight());<newline46mondego><newline46mondego>batch.setProjectionMatrix(normalProjection);<newline46mondego>"
"10838splitHere46","12942499splitHere46","task addImportStatement << {<newline46mondego>    ant.replace(dir: 'yourSrcDirHere', token: 'existing value', value:'<![CDATA[existing value<newline46mondego>    new import statement here]]>')<newline46mondego>}<newline46mondego><newline46mondego>task regExpressionSub << {<newline46mondego>    ant.replaceRegExp(...)<newline46mondego>}<newline46mondego>regExpressionSub.dependsOn addImportStatement<newline46mondego>"
"10839splitHere46","12942575splitHere46","typeMismatch.foo.firstName=First Name must be a number <newline46mondego>"
"10840splitHere46","12942624splitHere46","BuildConfig.java"
"10841splitHere46","12942624splitHere46","R.java"
"10842splitHere46","12942805splitHere46","cd /System/Library/Frameworks/JavaVM.framework/Versions  <newline46mondego>open .<newline46mondego>"
"10843splitHere46","12942805splitHere46","rm Current*  <newline46mondego>ln -s 1.6.0/ Current  <newline46mondego>ln -s 1.6.0/ CurrentJDK  <newline46mondego>"
"10844splitHere46","12942805splitHere46","cd /System/Library/Frameworks/JavaVM.framework/Versions<newline46mondego>rm Current*<newline46mondego>open .<newline46mondego>"
"10845splitHere46","12942822splitHere46","paintComponent"
"10846splitHere46","12942822splitHere46","MouseListener"
"10847splitHere46","12942822splitHere46","MouseMotionListener"
"10848splitHere46","12942822splitHere46","MouseAdapter"
"10849splitHere46","12942822splitHere46","import java.awt.*;<newline46mondego>import java.awt.event.*;<newline46mondego>import javax.swing.*;<newline46mondego><newline46mondego>public class DrawTest extends JPanel{<newline46mondego><newline46mondego>    //Shape doesn't have a location field - you'd have to keep track of  <newline46mondego>    //this yourself if you're set on using the shape interface<newline46mondego>    private Rectangle shape = new Rectangle(100, 100);<newline46mondego>    // The location within the shape you clicked<newline46mondego>    private int xOffset = 0; <newline46mondego>    private int yOffset = 0;<newline46mondego>    // To indicate dragging is happening<newline46mondego>    boolean isDragging = false;<newline46mondego><newline46mondego>    public DrawTest(){<newline46mondego>        MouseAdapter listener = new MouseAdapter() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void mousePressed(MouseEvent e) {<newline46mondego>                // Starts dragging and calculates offset<newline46mondego>                if(shape.contains(e.getPoint())){<newline46mondego>                    isDragging = true;<newline46mondego>                    xOffset = e.getPoint().x - shape.x;<newline46mondego>                    yOffset = e.getPoint().y - shape.y;<newline46mondego>                }<newline46mondego>            }<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void mouseReleased(MouseEvent e) {<newline46mondego>                // Ends dragging<newline46mondego>                isDragging = false;<newline46mondego>            }<newline46mondego><newline46mondego><newline46mondego>            @Override<newline46mondego>            public void mouseDragged(MouseEvent e) {<newline46mondego>                // Moves the shape - doesn't actually need to be a method<newline46mondego>                // but is because you had it as one<newline46mondego>                if(isDragging){<newline46mondego>                    moveShape(e);<newline46mondego>                }<newline46mondego>            }<newline46mondego><newline46mondego>            private void moveShape(MouseEvent e) {<newline46mondego>                Point newLocation = e.getPoint();<newline46mondego>                newLocation.x -= xOffset;<newline46mondego>                newLocation.y -= yOffset;<newline46mondego>                shape.setLocation(newLocation);<newline46mondego>                repaint();<newline46mondego>            }<newline46mondego>        };<newline46mondego><newline46mondego>        //Add a mouse mostion listener (for dragging) and regular listener (for clicking)<newline46mondego>        addMouseListener(listener);<newline46mondego>        addMouseMotionListener(listener);<newline46mondego>    }<newline46mondego><newline46mondego>    // So we have a play area to work with<newline46mondego>    public Dimension getPreferredSize(){<newline46mondego>        return new Dimension(400,300);<newline46mondego>    }<newline46mondego><newline46mondego>    //Paints the shape<newline46mondego>    public void paintComponent(Graphics g){<newline46mondego>        super.paintComponent(g);<newline46mondego>        g.clearRect(0,0,getWidth(), getHeight());<newline46mondego>        g.fillRect(shape.x, shape.y, shape.width, shape.height);<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>    public static void main(String[] args)<newline46mondego>    {<newline46mondego><newline46mondego>        final JFrame frame = new JFrame();<newline46mondego>        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        frame.add(new DrawTest());<newline46mondego>        frame.pack();<newline46mondego>        frame.setLocationRelativeTo(null);<newline46mondego>        frame.setVisible(true);<newline46mondego><newline46mondego>    }<newline46mondego>}<newline46mondego>"
"10850splitHere46","12942825splitHere46","skip()"
"10851splitHere46","12942825splitHere46","HIDDEN"
"10852splitHere46","12942825splitHere46","demo"
"10853splitHere46","12942825splitHere46","grammar T;<newline46mondego><newline46mondego>options {<newline46mondego>  output=AST;<newline46mondego>  ASTLabelType=XTree;<newline46mondego>}<newline46mondego><newline46mondego>@parser::header {<newline46mondego>  package demo;<newline46mondego>  import demo.*;<newline46mondego>}<newline46mondego><newline46mondego>@lexer::header {<newline46mondego>  package demo;<newline46mondego>  import demo.*;<newline46mondego>}<newline46mondego><newline46mondego>parse<newline46mondego> : expr EOF -> expr<newline46mondego> ;<newline46mondego><newline46mondego>expr<newline46mondego>@after{$expr.tree.matched = $expr.text;}<newline46mondego> : Int '+' Int ';' -> ^('+' Int Int)<newline46mondego> ;<newline46mondego><newline46mondego>Int<newline46mondego> : '0'..'9'+<newline46mondego> ;<newline46mondego><newline46mondego>Space<newline46mondego> : ' ' {$channel=HIDDEN;}<newline46mondego> ;<newline46mondego>"
"10854splitHere46","12942825splitHere46","package demo;<newline46mondego><newline46mondego>import org.antlr.runtime.*;<newline46mondego>import org.antlr.runtime.tree.*;<newline46mondego><newline46mondego>public class XTree extends CommonTree {<newline46mondego><newline46mondego>  protected String matched;<newline46mondego><newline46mondego>  public XTree(Token t) {<newline46mondego>    super(t);<newline46mondego>    matched = null;<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"10855splitHere46","12942825splitHere46","package demo;<newline46mondego><newline46mondego>import org.antlr.runtime.*;<newline46mondego>import org.antlr.runtime.tree.*;<newline46mondego><newline46mondego>public class Main {<newline46mondego><newline46mondego>  public static void main(String[] args) throws Exception {<newline46mondego>    String source = <doubleQuotes46>12    +  42 ;<doubleQuotes46>;<newline46mondego>    TLexer lexer = new TLexer(new ANTLRStringStream(source));<newline46mondego>    TParser parser = new TParser(new CommonTokenStream(lexer));<newline46mondego>    parser.setTreeAdaptor(new CommonTreeAdaptor(){<newline46mondego>      @Override<newline46mondego>      public Object create(Token t) {<newline46mondego>        return new XTree(t);<newline46mondego>      }<newline46mondego>    }); <newline46mondego>    XTree root = (XTree)parser.parse().getTree();<newline46mondego>    System.out.println(<doubleQuotes46>tree    : <doubleQuotes46> + root.toStringTree());<newline46mondego>    System.out.println(<doubleQuotes46>matched : <doubleQuotes46> + root.matched);    <newline46mondego>  }<newline46mondego>}<newline46mondego>"
"10856splitHere46","12942825splitHere46","demo"
"10857splitHere46","12942953splitHere46","MainClass cannot be cast to java.applet.Applet<newline46mondego>"
"10858splitHere46","12942953splitHere46","MainClass"
"10859splitHere46","12943153splitHere46","Collections#shuffle"
"10860splitHere46","12943153splitHere46","List<Integer> intList = new ArrayList<Integer>();<newline46mondego>Collections.shuffle(intList);<newline46mondego>"
"10861splitHere46","12943153splitHere46","Collections.shuffle(Arrays.asList(yourArray));<newline46mondego>"
"10862splitHere46","12943366splitHere46","ArrayList<ArrayList<String>> alt4 = new ArrayList<ArrayList<String>>();<newline46mondego>"
"10863splitHere46","12943397splitHere46","System.out.println(Arrays.toString((String[])combo.getSelectedItem()));<newline46mondego>"
"10864splitHere46","12943397splitHere46","String[] selectedItem = (String[])combo.getSelectedItem();<newline46mondego>for (int i = 0; i < selectedItem.length; i++){<newline46mondego>    System.out.println(String.format(<doubleQuotes46>item %s = %s<doubleQuotes46>, i, selectedItem[i]));<newline46mondego>}<newline46mondego>"
"10865splitHere46","12943397splitHere46","(String[])combo.getSelectedItem())[0]"
"10866splitHere46","12943436splitHere46","src"
"10867splitHere46","12943436splitHere46","C:\Program Files\Java\jdk<version>\src\java\awt\geom\Line2D.java<newline46mondego>"
"10868splitHere46","12943436splitHere46","src.zip"
"10869splitHere46","12943440splitHere46","<dependency><newline46mondego>    <groupId>org.atmosphere</groupId><newline46mondego>    <artifactId>atmosphere-runtime</artifactId><newline46mondego>    <version>1.0.2</version><newline46mondego></dependency><newline46mondego>"
"10870splitHere46","12943440splitHere46","<dependency><newline46mondego>    <groupId>org.atmosphere</groupId><newline46mondego>    <artifactId>atmosphere-runtime</artifactId><newline46mondego>    <version>1.0.2</version><newline46mondego>    <type>bundle</type><newline46mondego></dependency><newline46mondego>"
"10871splitHere46","12943487splitHere46","JFrame.setDefaultLookAndFeelDecorated(Boolean.TRUE);<newline46mondego>"
"10872splitHere46","12943487splitHere46","import java.awt.Frame;<newline46mondego>import java.awt.Insets;<newline46mondego>import java.awt.Rectangle;<newline46mondego>import java.awt.event.WindowAdapter;<newline46mondego>import java.awt.event.WindowEvent;<newline46mondego><newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JLabel;<newline46mondego>import javax.swing.SwingUtilities;<newline46mondego>import javax.swing.UIManager;<newline46mondego>import javax.swing.UnsupportedLookAndFeelException;<newline46mondego>import javax.swing.plaf.metal.MetalLookAndFeel;<newline46mondego>import javax.swing.plaf.metal.OceanTheme;<newline46mondego><newline46mondego>public class TestJFrame {<newline46mondego><newline46mondego>    private void initUI() {<newline46mondego>        final JFrame frame = new JFrame(TestJFrame.class.getSimpleName()) {<newline46mondego>            private Rectangle maxBounds;<newline46mondego><newline46mondego>            @Override<newline46mondego>            public Rectangle getMaximizedBounds() {<newline46mondego>                return maxBounds;<newline46mondego>            }<newline46mondego><newline46mondego>            @Override<newline46mondego>            public synchronized void setMaximizedBounds(Rectangle maxBounds) {<newline46mondego>                this.maxBounds = maxBounds;<newline46mondego>                super.setMaximizedBounds(maxBounds);<newline46mondego>            }<newline46mondego><newline46mondego>            @Override<newline46mondego>            public synchronized void setExtendedState(int state) {<newline46mondego>                if (maxBounds == null && (state & Frame.MAXIMIZED_BOTH) == Frame.MAXIMIZED_BOTH) {<newline46mondego>                    Insets screenInsets = getToolkit().getScreenInsets(getGraphicsConfiguration());<newline46mondego>                    Rectangle screenSize = getGraphicsConfiguration().getBounds();<newline46mondego>                    Rectangle maxBounds = new Rectangle(screenInsets.left + screenSize.x, screenInsets.top + screenSize.y, screenSize.x<newline46mondego>                            + screenSize.width - screenInsets.right - screenInsets.left, screenSize.y + screenSize.height<newline46mondego>                            - screenInsets.bottom - screenInsets.top);<newline46mondego>                    super.setMaximizedBounds(maxBounds);<newline46mondego>                }<newline46mondego><newline46mondego>                super.setExtendedState(state);<newline46mondego>            }<newline46mondego>        };<newline46mondego>        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        frame.addWindowListener(new WindowAdapter() {<newline46mondego>            @Override<newline46mondego>            public void windowOpened(WindowEvent e) {<newline46mondego>                frame.setExtendedState(frame.getExtendedState() | JFrame.MAXIMIZED_BOTH);<newline46mondego>            }<newline46mondego>        });<newline46mondego>        JLabel label = new JLabel(<doubleQuotes46>some label in the middle<doubleQuotes46>);<newline46mondego>        label.setHorizontalAlignment(JLabel.CENTER);<newline46mondego>        frame.add(label);<newline46mondego>        frame.pack();<newline46mondego>        frame.setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        try {<newline46mondego>            UIManager.setLookAndFeel(UIManager.getCrossPlatformLookAndFeelClassName());<newline46mondego>            MetalLookAndFeel.setCurrentTheme(new OceanTheme());<newline46mondego>            UIManager.setLookAndFeel(new MetalLookAndFeel());<newline46mondego>        } catch (ClassNotFoundException e) {<newline46mondego>            // TODO Auto-generated catch block<newline46mondego>            e.printStackTrace();<newline46mondego>        } catch (InstantiationException e) {<newline46mondego>            // TODO Auto-generated catch block<newline46mondego>            e.printStackTrace();<newline46mondego>        } catch (IllegalAccessException e) {<newline46mondego>            // TODO Auto-generated catch block<newline46mondego>            e.printStackTrace();<newline46mondego>        } catch (UnsupportedLookAndFeelException e) {<newline46mondego>            // TODO Auto-generated catch block<newline46mondego>            e.printStackTrace();<newline46mondego>        }<newline46mondego><newline46mondego>        JFrame.setDefaultLookAndFeelDecorated(Boolean.TRUE);<newline46mondego>        SwingUtilities.invokeLater(new Runnable() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                new TestJFrame().initUI();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"10873splitHere46","12943487splitHere46","JFrame.setDefaultLookAndFeelDecorated(Boolean.TRUE);"
"10874splitHere46","12943707splitHere46","for"
"10875splitHere46","12943707splitHere46","main()"
"10876splitHere46","12943784splitHere46","ConcurrentModificationException"
"10877splitHere46","12943784splitHere46","List"
"10878splitHere46","12943784splitHere46","foos"
"10879splitHere46","12943784splitHere46","volatile"
"10880splitHere46","12943784splitHere46","volatile"
"10881splitHere46","12943784splitHere46","foos"
"10882splitHere46","12943784splitHere46","ImmutableList.Builder"
"10883splitHere46","12943784splitHere46","ArrayList"
"10884splitHere46","12943784splitHere46","ImmutableList"
"10885splitHere46","12943805splitHere46","public class KnockKnockHandler extends Thread {<newline46mondego>    private Socket socket;<newline46mondego>    public KnockKnockWorker(Socket socket) {<newline46mondego>       this.socket = socket;<newline46mondego>    }<newline46mondego>    public void run() {<newline46mondego>        PrintWriter out = new PrintWriter(socket.getOutputStream(), true);<newline46mondego>        BufferedReader in = new BufferedReader(<newline46mondego>            new InputStreamReader(<newline46mondego>            socket.getInputStream()));<newline46mondego>        String inputLine, outputLine;<newline46mondego>        KnockKnockProtocol kkp = new KnockKnockProtocol();<newline46mondego><newline46mondego>        outputLine = kkp.processInput(null);<newline46mondego>        out.println(outputLine);<newline46mondego><newline46mondego>        while ((inputLine = in.readLine()) != null) {<newline46mondego>             outputLine = kkp.processInput(inputLine);<newline46mondego>             out.println(outputLine);<newline46mondego>             if (outputLine.equals(<doubleQuotes46>Bye.<doubleQuotes46>))<newline46mondego>                break;<newline46mondego>        }<newline46mondego>        out.close();<newline46mondego>        in.close();<newline46mondego>        socket.close();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"10886splitHere46","12943805splitHere46","try {<newline46mondego>    clientSocket = serverSocket.accept();<newline46mondego>    KnockKnockHandler handler = new KnockKnockHandler(clientSocket);<newline46mondego>    handler.start();<newline46mondego>} catch (IOException e) {<newline46mondego>    System.err.println(<doubleQuotes46>Accept failed.<doubleQuotes46>);<newline46mondego>    System.exit(1);<newline46mondego>}<newline46mondego>"
"10887splitHere46","12943805splitHere46","while(true) {<newline46mondego>    try {<newline46mondego>        clientSocket = serverSocket.accept();<newline46mondego>        KnockKnockHandler handler = new KnockKnockHandler(clientSocket);<newline46mondego>        handler.start();<newline46mondego>    } catch (IOException e) {<newline46mondego>        System.err.println(<doubleQuotes46>Accept failed.<doubleQuotes46>);<newline46mondego>        System.exit(1);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"10888splitHere46","12943807splitHere46","final String html = <doubleQuotes46><p> <span> foo </span> <em> bar <a> foobar </a> baz </em> </p><doubleQuotes46>;<newline46mondego>Document doc = Jsoup.parse(html);<newline46mondego><newline46mondego>System.out.println(doc.text());<newline46mondego>"
"10889splitHere46","12943807splitHere46","foo bar foobar baz<newline46mondego>"
"10890splitHere46","12943807splitHere46","doc.text()"
"10891splitHere46","12943807splitHere46","doc.select(<doubleQuotes46>p<doubleQuotes46>).text();<newline46mondego>"
"10892splitHere46","12943807splitHere46","doc.body().text();<newline46mondego>"
"10893splitHere46","12943807splitHere46","final String html = <doubleQuotes46><p><strong>Tarthatatlan biztonsági viszonyok</strong></p><doubleQuotes46><newline46mondego>        + <doubleQuotes46><p><strong>Tarthatatlan biztonsági viszonyok</strong></p><doubleQuotes46>;<newline46mondego>Document doc = Jsoup.parse(html);<newline46mondego><newline46mondego>for( Element element : doc.select(<doubleQuotes46>p<doubleQuotes46>) )<newline46mondego>{<newline46mondego>    System.out.println(element.text());<newline46mondego>    // eg. you can use a StringBuilder and append lines here ...<newline46mondego>}<newline46mondego>"
"10894splitHere46","12943807splitHere46","Tarthatatlan biztonsági viszonyok  <newline46mondego>Tarthatatlan biztonsági viszonyok<newline46mondego>"
"10895splitHere46","12943832splitHere46","DashboardActivity"
"10896splitHere46","12943832splitHere46","startActivity(dashboard);"
"10897splitHere46","12943832splitHere46","LoginActivity"
"10898splitHere46","12943832splitHere46","dashboard.putExtra(<doubleQuotes46>username<doubleQuotes46>, json_user.getString(KEY_NAME));<newline46mondego>"
"10899splitHere46","12943832splitHere46","DashboardActivity"
"10900splitHere46","12943832splitHere46","onCreate"
"10901splitHere46","12943832splitHere46","DashboardActivity"
"10902splitHere46","12943832splitHere46","username"
"10903splitHere46","12943832splitHere46","Intent intent = getIntent();<newline46mondego>String username = <doubleQuotes46><doubleQuotes46>;<newline46mondego><newline46mondego>if(intent != null) {<newline46mondego>    username = intent.getStringExtra(name);<newline46mondego>}<newline46mondego>"
"10904splitHere46","12944056splitHere46","while(j<campos.length){<newline46mondego>    nombres_reuniones.add(campos[j]);<newline46mondego>}<newline46mondego>"
"10905splitHere46","12944056splitHere46","j"
"10906splitHere46","12944056splitHere46","j"
"10907splitHere46","12944056splitHere46","0"
"10908splitHere46","12944056splitHere46","for (int j = 0; j < campos.length; j++) {<newline46mondego>    nombres_reuniones.add(campos[j]);<newline46mondego>}<newline46mondego>"
"10909splitHere46","12944056splitHere46","for (String item : campos) {<newline46mondego>    nombres_reuniones.add(item);<newline46mondego>}<newline46mondego>"
"10910splitHere46","12944056splitHere46","nombres_reunions.addAll(Arrays.asList(campos));<newline46mondego>"
"10911splitHere46","12944056splitHere46","String aux2 = null;<newline46mondego>aux2 = aux.replace(<doubleQuotes46>[<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>aux2= aux2.replace(<doubleQuotes46>]<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>"
"10912splitHere46","12944056splitHere46","aux2"
"10913splitHere46","12944056splitHere46","null"
"10914splitHere46","12944056splitHere46","String aux2 = aux.replace(<doubleQuotes46>[<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>).replace(<doubleQuotes46>]<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>"
"10915splitHere46","12944056splitHere46","String[] campos = jsonReuniones.getString(<doubleQuotes46>nombres<doubleQuotes46>)<newline46mondego>                               .replace(<doubleQuotes46>[<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>)<newline46mondego>                               .replace(<doubleQuotes46>]<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>)<newline46mondego>                               .split(<doubleQuotes46>,<doubleQuotes46>);<newline46mondego>nombres_reunions.addAll(Arrays.asList(campos));<newline46mondego>"
"10916splitHere46","12944090splitHere46","final ClassPathXmlApplicationContext beanFactory = <newline46mondego>    new ClassPathXmlApplicationContext( <doubleQuotes46>applicationContext.xml<doubleQuotes46> );<newline46mondego>AutowireCapableBeanFactory factory = beanFactory.getAutowireCapableBeanFactory();<newline46mondego>factory.autowireBeanProperties( this, AutowireCapableBeanFactory.AUTOWIRE_BY_TYPE , true );<newline46mondego>ProductDao dao = context.getBean( <doubleQuotes46>productDao<doubleQuotes46> );<newline46mondego>"
"10917splitHere46","12944139splitHere46","int compareTo(Foo f) {<newline46mondego>    int x = letter.compareTo(f.letter);<newline46mondego>    return x != 0 ? x <newline46mondego>         : letter.equals(<doubleQuotes46>A<doubleQuotes46>) ? number.compareTo(f.number)<newline46mondego>                              : f.number.compareTo(number);<newline46mondego>}<newline46mondego>"
"10918splitHere46","12944215splitHere46","public void invert() {<newline46mondego>        Node<E> prev = null, next = null;;<newline46mondego>        if (head == null) return;<newline46mondego>        while (true) {<newline46mondego>            next = head.getNext();<newline46mondego>            head.setNext(prev);<newline46mondego>            prev = head;<newline46mondego>            if (next == null) return;<newline46mondego>            head = next;<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"10919splitHere46","12944345splitHere46","int queryLimit = 4000;<newline46mondego>   defectRequest.setLimit(queryLimit);<newline46mondego>"
"10920splitHere46","12944413splitHere46","Byte"
"10921splitHere46","12944413splitHere46","byte"
"10922splitHere46","12944413splitHere46","byte[] bytes = new byte[10];<newline46mondego>Byte[] byteObjects = new Byte[bytes.length];<newline46mondego><newline46mondego>int i=0;    <newline46mondego>// Associating Byte array values with bytes. (byte[] to Byte[])<newline46mondego>for(byte b: bytes)<newline46mondego>   byteObjects[i++] = b;  // Autoboxing.<newline46mondego><newline46mondego>....<newline46mondego><newline46mondego>int j=0;<newline46mondego>// Unboxing byte values. (Byte[] to byte[])<newline46mondego>for(Byte b: byteObjects)<newline46mondego>    bytes[j++] = b.byteValue();<newline46mondego>"
"10923splitHere46","12944445splitHere46","while"
"10924splitHere46","12944445splitHere46","while (count < pharse.length() && !Character.isLetterOrDigit(phrase.codePointAt(count))) {<newline46mondego>"
"10925splitHere46","12944445splitHere46","count"
"10926splitHere46","12944445splitHere46","phrase"
"10927splitHere46","12944567splitHere46","jdbc:mysql://localhost/some_db?useUnicode=yes&characterEncoding=UTF-8<newline46mondego>"
"10928splitHere46","12944637splitHere46","int"
"10929splitHere46","12944637splitHere46","BigDecimal"
"10930splitHere46","12944637splitHere46","public class Payment<newline46mondego>{<newline46mondego>    BigDecimal itemCost  = BigDecimal.ZERO;<newline46mondego>    BigDecimal totalCost = BigDecimal.ZERO;<newline46mondego><newline46mondego>    public BigDecimal calculateCost(int itemQuantity, BigDecimal itemPrice)<newline46mondego>    {<newline46mondego>        itemCost  = itemPrice.multiply(new BigDecimal(itemQuantity));<newline46mondego>        totalCost = totalCost.add(itemCost);<newline46mondego>        return totalCost;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"10931splitHere46","12944754splitHere46","writeToParcel"
"10932splitHere46","12944754splitHere46","public void writeToParcel(Parcel dest, int flags) {<newline46mondego>    dest.writeString(brand); //To write String<newline46mondego>}<newline46mondego>"
"10933splitHere46","12944754splitHere46","dest"
"10934splitHere46","12944754splitHere46","writeToParcel"
"10935splitHere46","12944754splitHere46","dest"
"10936splitHere46","12944754splitHere46","writeParcelable"
"10937splitHere46","12944754splitHere46","Parcelable"
"10938splitHere46","12944754splitHere46","writeSerializable"
"10939splitHere46","12944754splitHere46","Serializable"
"10940splitHere46","12944754splitHere46","private void readFromParcel(Parcel in) {<newline46mondego>    brand = in.readString(); //To read String<newline46mondego>}<newline46mondego>"
"10941splitHere46","12944754splitHere46","public static final Parcelable.Creator<Car> CREATOR = new Parcelable.Creator<Car>() {<newline46mondego>         public Car createFromParcel(Parcel in) {<newline46mondego>             return new Car(in);<newline46mondego>         }<newline46mondego>}<newline46mondego>"
"10942splitHere46","12944754splitHere46","readFromParcel"
"10943splitHere46","12944754splitHere46","public Car(Parcel in) {<newline46mondego>   readFromParcel(in);<newline46mondego>}<newline46mondego>"
"10944splitHere46","12944754splitHere46","describeContents"
"10945splitHere46","12944912splitHere46","class GreetingClient"
"10946splitHere46","12944912splitHere46","GreetingClient.java"
"10947splitHere46","12945004splitHere46","String str = <doubleQuotes46>Lorem ipsum dolor [cookie:firstname] adipiscing elit.<doubleQuotes46>;<newline46mondego>    Pattern pattern = Pattern.compile(<doubleQuotes46>.*?\\[.*?:(.*?)\\].*<doubleQuotes46>);<newline46mondego>    Matcher matcher = pattern.matcher(str);<newline46mondego><newline46mondego>    if (matcher.find()){<newline46mondego>        System.out.println(matcher.group(1));<newline46mondego>    }<newline46mondego>"
"10948splitHere46","12945004splitHere46","firstname<newline46mondego>"
"10949splitHere46","12945181splitHere46","C:\cache"
"10950splitHere46","12945181splitHere46","File directory = new File(<doubleQuotes46>C:\\cache<doubleQuotes46>);<newline46mondego>directory.mkdir();<newline46mondego>"
"10951splitHere46","12945345splitHere46","String json = aceptaDefault();<newline46mondego>JSONParser parser = new JSONParser();<newline46mondego><newline46mondego>ContainerFactory orderedKeyFactory = new ContainerFactory()<newline46mondego>{<newline46mondego>    public List createArrayContainer() {<newline46mondego>      return new LinkedList();<newline46mondego>    }<newline46mondego><newline46mondego>    public Map createObjectContainer() {<newline46mondego>      return new LinkedHashMap();<newline46mondego>    }<newline46mondego><newline46mondego>};<newline46mondego><newline46mondego>Object obj = parser.parse(json,orderedKeyFactory);  <newline46mondego>LinkedHashMap map = (LinkedHashMap)obj;<newline46mondego>"
"10952splitHere46","12945345splitHere46","String json = aceptaDefault();<newline46mondego>JSONParser parser = new JSONParser();<newline46mondego>Object obj = parser.parse(json);  <newline46mondego>Map map = (Map)obj;<newline46mondego>"
"10953splitHere46","12945345splitHere46","[...]"
"10954splitHere46","12945345splitHere46","{...}"
"10955splitHere46","12945375splitHere46","Person"
"10956splitHere46","12945375splitHere46","public Person(String startName, int startDollars, boolean startMood)<newline46mondego>{<newline46mondego>    name = startName;<newline46mondego>    dollars = startDollars;<newline46mondego>    mood = startMood;<newline46mondego>}<newline46mondego>"
"10957splitHere46","12945375splitHere46","Student"
"10958splitHere46","12945375splitHere46","super(...)"
"10959splitHere46","12945375splitHere46","public Student(String startName, int startDollars, boolean startMood, String major)<newline46mondego>{<newline46mondego>    super(startName, startDollars, startMood);<newline46mondego>    . . .<newline46mondego>}<newline46mondego>"
"10960splitHere46","12945375splitHere46","Person"
"10961splitHere46","12945375splitHere46","Student"
"10962splitHere46","12945375splitHere46","public class Person<newline46mondego>{<newline46mondego>     private String name; //holds the name of the person<newline46mondego>     private boolean mood; //holds the mood happy or sad for the person<newline46mondego>     private int dollars; //holds their bank account balance<newline46mondego><newline46mondego>     public void setName(String name) {<newline46mondego>         this.name = name;<newline46mondego>     }<newline46mondego>     // etc.<newline46mondego>}<newline46mondego>"
"10963splitHere46","12945399splitHere46","org.mule.transformer.AbstractTransformerTestCase"
"10964splitHere46","12945399splitHere46","org.mule.tck.junit4.FunctionalTestCase"
"10965splitHere46","12945399splitHere46","@Test"
"10966splitHere46","12945491splitHere46","public Auction(Auction auction) {<newline46mondego><newline46mondego>   this();<newline46mondego><newline46mondego>   if (!auction.openClosed) {<newline46mondego>      lots.addAll(auction.getNoBids());<newline46mondego>      // set close flags as necessary...<newline46mondego>   }<newline46mondego>} <newline46mondego>"
"10967splitHere46","12945491splitHere46","openClosed"
"10968splitHere46","12945491splitHere46","openForBidding"
"10969splitHere46","12945502splitHere46","ArrayList<String>"
"10970splitHere46","12945502splitHere46","String[] a1 = aList.toArray(new String[0])"
"10971splitHere46","12945502splitHere46","String[][] multiDim = new String[]{a1, a2, a3, a4}"
"10972splitHere46","12945508splitHere46","com.palm.webos"
"10973splitHere46","12945582splitHere46","Person"
"10974splitHere46","12945582splitHere46","List<Person> personList = Arrays.asList(person1, person2, person3, person4);<newline46mondego>"
"10975splitHere46","12945582splitHere46","Collections.sort(personList, Comparator<Person>() {<newline46mondego>    public int compare(Person p1, Person p2) {<newline46mondego>        return Integer.valueOf(p1.getAge()).compareTo(p2.getAge());<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"10976splitHere46","12945582splitHere46","for(Person person : personList) {<newline46mondego>    result += <doubleQuotes46>\n<doubleQuotes46>+person.toString();   <newline46mondego>}<newline46mondego>"
"10977splitHere46","12945629splitHere46","image.getPixelReader()"
"10978splitHere46","12945629splitHere46","import javafx.application.Application;<newline46mondego>import javafx.event.*;<newline46mondego>import javafx.geometry.Pos;<newline46mondego>import javafx.scene.Scene;<newline46mondego>import javafx.scene.control.*;<newline46mondego>import javafx.scene.image.*;<newline46mondego>import javafx.scene.layout.VBox;<newline46mondego>import javafx.stage.Stage;<newline46mondego><newline46mondego>// displays a button with a 64 color image palette and a full color palette when pressed.<newline46mondego>public class ButtonShadeTest extends Application {<newline46mondego>  @Override public void start(final Stage stage) throws Exception {<newline46mondego>    final Label response = new Label(<doubleQuotes46><doubleQuotes46>);<newline46mondego>    final Image originalImage = new Image(<doubleQuotes46>http://icons.iconarchive.com/icons/eponas-deeway/colobrush/128/heart-2-icon.png<doubleQuotes46>);<newline46mondego>    final Image resampledImage = resample(originalImage);<newline46mondego>    final ImageView imageView = new ImageView(resampledImage);<newline46mondego>    final Button button = new Button(<doubleQuotes46>I love you<doubleQuotes46>, imageView);<newline46mondego>    button.setStyle(<doubleQuotes46>-fx-base: coral;<doubleQuotes46>);<newline46mondego>    button.setContentDisplay(ContentDisplay.TOP);<newline46mondego>    button.setOnAction(new EventHandler<ActionEvent>() {<newline46mondego>      @Override public void handle(ActionEvent event) {<newline46mondego>        if (<doubleQuotes46><doubleQuotes46>.equals(response.getText())) {<newline46mondego>          response.setText(<doubleQuotes46>I love you too!<doubleQuotes46>);<newline46mondego>          imageView.setImage(originalImage);<newline46mondego>        } else {<newline46mondego>          response.setText(<doubleQuotes46><doubleQuotes46>);<newline46mondego>          imageView.setImage(resampledImage);<newline46mondego>        } <newline46mondego>      }<newline46mondego>    });<newline46mondego><newline46mondego>    final VBox layout = new VBox(10);<newline46mondego>    layout.setAlignment(Pos.CENTER);<newline46mondego>    layout.getChildren().addAll(button, response);<newline46mondego>    layout.setStyle(<doubleQuotes46>-fx-background-color: cornsilk; -fx-padding: 10; -fx-font-size: 20;<doubleQuotes46>);<newline46mondego>    stage.setTitle(<doubleQuotes46>Heart<doubleQuotes46>);<newline46mondego>    stage.getIcons().add(originalImage);<newline46mondego>    stage.setScene(new Scene(layout));<newline46mondego>    stage.show();<newline46mondego>  }<newline46mondego>  public static void main(String[] args) { launch(args); }<newline46mondego><newline46mondego>  // downsamples an image to a 64 color palette by only <newline46mondego>  // using the 2 most significant bits of color to represent<newline46mondego>  // each of the image's pixels.<newline46mondego>  private Image resample(Image inputImage) {<newline46mondego>    int W = (int) inputImage.getWidth();<newline46mondego>    int H = (int) inputImage.getHeight();<newline46mondego>    WritableImage outputImage = new WritableImage(W, H);<newline46mondego>    PixelReader reader = inputImage.getPixelReader();<newline46mondego>    PixelWriter writer = outputImage.getPixelWriter();<newline46mondego>    for (int y = 0; y < H; y++) {<newline46mondego>      for (int x = 0; x < W; x++) {<newline46mondego>        int argb = reader.getArgb(x, y);<newline46mondego>        int a = (argb >> 24) & 0xFF;<newline46mondego>        int r = (argb >> 16) & 0xFF;<newline46mondego>        int g = (argb >>  8) & 0xFF;<newline46mondego>        int b =  argb        & 0xFF;<newline46mondego><newline46mondego>        r = r & 0xC0;<newline46mondego>        g = g & 0xC0;<newline46mondego>        b = b & 0xC0;<newline46mondego><newline46mondego>        argb = (a << 24) | (r << 16) | (g << 8) | b;<newline46mondego>        writer.setArgb(x, y, argb);<newline46mondego>      }<newline46mondego>    }<newline46mondego><newline46mondego>    return outputImage;<newline46mondego>  }<newline46mondego>}<newline46mondego>// icon license: (creative commons with attribution) http://creativecommons.org/licenses/by-nc-nd/3.0/<newline46mondego>// icon artist attribution page: (eponas-deeway) http://eponas-deeway.deviantart.com/gallery/#/d1s7uih<newline46mondego>"
"10979splitHere46","12945676splitHere46","Map<Class, Converter> converters = new HashMap<Class, Converter>();<newline46mondego>Converter d = new DateConverter();<newline46mondego>converters.put(Date.class, d);<newline46mondego>"
"10980splitHere46","12945678splitHere46","OutputStream"
"10981splitHere46","12945678splitHere46","public class TestRedirect {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        new TestRedirect();<newline46mondego>    }<newline46mondego><newline46mondego>    public TestRedirect() {<newline46mondego>        EventQueue.invokeLater(new Runnable() {<newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                try {<newline46mondego>                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());<newline46mondego>                } catch (ClassNotFoundException ex) {<newline46mondego>                } catch (InstantiationException ex) {<newline46mondego>                } catch (IllegalAccessException ex) {<newline46mondego>                } catch (UnsupportedLookAndFeelException ex) {<newline46mondego>                }<newline46mondego><newline46mondego>                CapturePane capturePane = new CapturePane();<newline46mondego>                JFrame frame = new JFrame();<newline46mondego>                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>                frame.setLayout(new BorderLayout());<newline46mondego>                frame.add(capturePane);<newline46mondego>                frame.setSize(200, 200);<newline46mondego>                frame.setLocationRelativeTo(null);<newline46mondego>                frame.setVisible(true);<newline46mondego><newline46mondego>                PrintStream ps = System.out;<newline46mondego>                System.setOut(new PrintStream(new StreamCapturer(<doubleQuotes46>STDOUT<doubleQuotes46>, capturePane, ps)));<newline46mondego><newline46mondego>                System.out.println(<doubleQuotes46>Hello, this is a test<doubleQuotes46>);<newline46mondego>                System.out.println(<doubleQuotes46>Wave if you can see me<doubleQuotes46>);<newline46mondego>            }            <newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>    public class CapturePane extends JPanel implements Consumer {<newline46mondego><newline46mondego>        private JTextArea output;<newline46mondego><newline46mondego>        public CapturePane() {<newline46mondego>            setLayout(new BorderLayout());<newline46mondego>            output = new JTextArea();<newline46mondego>            add(new JScrollPane(output));<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void appendText(final String text) {<newline46mondego>            if (EventQueue.isDispatchThread()) {<newline46mondego>                output.append(text);<newline46mondego>                output.setCaretPosition(output.getText().length());<newline46mondego>            } else {<newline46mondego><newline46mondego>                EventQueue.invokeLater(new Runnable() {<newline46mondego>                    @Override<newline46mondego>                    public void run() {<newline46mondego>                        appendText(text);<newline46mondego>                    }<newline46mondego>                });<newline46mondego><newline46mondego>            }<newline46mondego>        }        <newline46mondego>    }<newline46mondego><newline46mondego>    public interface Consumer {        <newline46mondego>        public void appendText(String text);        <newline46mondego>    }<newline46mondego><newline46mondego>    public class StreamCapturer extends OutputStream {<newline46mondego><newline46mondego>        private StringBuilder buffer;<newline46mondego>        private String prefix;<newline46mondego>        private Consumer consumer;<newline46mondego>        private PrintStream old;<newline46mondego><newline46mondego>        public StreamCapturer(String prefix, Consumer consumer, PrintStream old) {<newline46mondego>            this.prefix = prefix;<newline46mondego>            buffer = new StringBuilder(128);<newline46mondego>            buffer.append(<doubleQuotes46>[<doubleQuotes46>).append(prefix).append(<doubleQuotes46>] <doubleQuotes46>);<newline46mondego>            this.old = old;<newline46mondego>            this.consumer = consumer;<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void write(int b) throws IOException {<newline46mondego>            char c = (char) b;<newline46mondego>            String value = Character.toString(c);<newline46mondego>            buffer.append(value);<newline46mondego>            if (value.equals(<doubleQuotes46>\n<doubleQuotes46>)) {<newline46mondego>                consumer.appendText(buffer.toString());<newline46mondego>                buffer.delete(0, buffer.length());<newline46mondego>                buffer.append(<doubleQuotes46>[<doubleQuotes46>).append(prefix).append(<doubleQuotes46>] <doubleQuotes46>);<newline46mondego>            }<newline46mondego>            old.print(c);<newline46mondego>        }        <newline46mondego>    }    <newline46mondego>}<newline46mondego>"
"10982splitHere46","12945878splitHere46","interface"
"10983splitHere46","12945878splitHere46","public interface Person<newline46mondego>{<newline46mondego>    String getName();<newline46mondego>}<newline46mondego><newline46mondego>public class MutablePerson implements Person<newline46mondego>{<newline46mondego>    private String name;<newline46mondego><newline46mondego>    public MutablePerson(String name)<newline46mondego>    {<newline46mondego>        this.name = name;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public String getName()<newline46mondego>    {<newline46mondego>        return name;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setName(String name)<newline46mondego>    {<newline46mondego>        this.name = name;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"10984splitHere46","12945878splitHere46","Person"
"10985splitHere46","12945878splitHere46","MutablePerson"
"10986splitHere46","12945878splitHere46","Person person = new MutablePerson(<doubleQuotes46>picky<doubleQuotes46>);<newline46mondego>// someone is cheating:<newline46mondego>MutablePerson mutableAgain = (MutablePerson)person;<newline46mondego>mutableAgain.setName(<doubleQuotes46>Phoenix<doubleQuotes46>);<newline46mondego><newline46mondego>// person.getName().equals(<doubleQuotes46>Phoenix<doubleQuotes46>) == true<newline46mondego>"
"10987splitHere46","12945878splitHere46","public interface MyType<T><newline46mondego>{<newline46mondego>    T getSomething();<newline46mondego>}<newline46mondego><newline46mondego>public class MyTypeImpl<T> implements MyType<T><newline46mondego>{<newline46mondego>    private T something;<newline46mondego><newline46mondego>    public MyTypeImpl(T something)<newline46mondego>    {<newline46mondego>        this.something = something;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public T getSomething()<newline46mondego>    {<newline46mondego>        return something;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setSomething(T something)<newline46mondego>    {<newline46mondego>        this.something = something;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public interface MyExtendedType<T> extends MyType<T><newline46mondego>{<newline46mondego>    T getMore();<newline46mondego>}<newline46mondego><newline46mondego>public class MyExtendedTypeImpl<T><newline46mondego>        extends MyTypeImpl<T><newline46mondego>        implements MyExtendedType<T><newline46mondego>{<newline46mondego>    private T more;<newline46mondego><newline46mondego>    public MyExtendedTypeImpl(T something, T more)<newline46mondego>    {<newline46mondego>        super(something);<newline46mondego><newline46mondego>        this.more = more;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public T getMore()<newline46mondego>    {<newline46mondego>        return more;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setMore(T more)<newline46mondego>    {<newline46mondego>        this.more = more;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"10988splitHere46","12945878splitHere46","Collection"
"10989splitHere46","12945878splitHere46","Collections.unmodifiable"
"10990splitHere46","12945878splitHere46","public class MyTypeImmutable<T> implements MyType<T><newline46mondego>{<newline46mondego>    private final T something;<newline46mondego><newline46mondego>    public MyTypeImmutable(T something)<newline46mondego>    {<newline46mondego>        this.something = something;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public T getSomething()<newline46mondego>    {<newline46mondego>        return something;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"10991splitHere46","12945920splitHere46","Object.equals"
"10992splitHere46","12945920splitHere46","Object.hashCode"
"10993splitHere46","12945920splitHere46","Map.put"
"10994splitHere46","12945920splitHere46","ListMultimap"
"10995splitHere46","12945920splitHere46","ArrayListMultimap"
"10996splitHere46","12945920splitHere46","Map<Key, List<Value>>"
"10997splitHere46","12945935splitHere46","for(int i=1; i<=MAX_PRIME; i++) {<newline46mondego>     if(isPrime(i)){<newline46mondego>        count++<newline46mondego>     }<newline46mondego> }<newline46mondego> return count;<newline46mondego>"
"10998splitHere46","12945961splitHere46","public void onCreate(Bundle savedInstanceState) {<newline46mondego>    super.onCreate(savedInstanceState);<newline46mondego>    setContentView(R.layout.activity_main);<newline46mondego><newline46mondego>    ScreenBrightnessSeekBar = (SeekBar)findViewById(R.id.seekBrightness);<newline46mondego><newline46mondego>    //Brightness is a float-point number between 0 and 1，But getProess() returns Int, so, we can setMax(100), and then we div 100 later.<newline46mondego><newline46mondego>    ScreenBrightnessSeekBar.setMax(100);  <newline46mondego>    ScreenBrightnessSeekBar.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {  <newline46mondego><newline46mondego>        public void onStopTrackingTouch(SeekBar seekBar) {}  <newline46mondego><newline46mondego>        public void onStartTrackingTouch(SeekBar seekBar) {}  <newline46mondego><newline46mondego>        public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {<newline46mondego>            setScreenBrightness((float)seekBar.getProgress()/100);<newline46mondego>        }  <newline46mondego>    });<newline46mondego>}<newline46mondego><newline46mondego>private void setScreenBrightness(float b){<newline46mondego><newline46mondego>    //get window attributes and save in layoutParams<newline46mondego>    WindowManager.LayoutParams layoutParams = getWindow().getAttributes();  <newline46mondego>    layoutParams.screenBrightness = b;<newline46mondego><newline46mondego>    //display the new brightness<newline46mondego>    getWindow().setAttributes(layoutParams);<newline46mondego>}<newline46mondego>"
"10999splitHere46","12945961splitHere46","SeekBar screenBrightnessSeekBar;<newline46mondego><newline46mondego>@Override<newline46mondego>public void onCreate(Bundle savedInstanceState) {<newline46mondego>    super.onCreate(savedInstanceState);<newline46mondego>    setContentView(R.layout.activity_main);<newline46mondego><newline46mondego>    screenBrightnessSeekBar = (SeekBar)findViewById(R.id.seekBrightness);  <newline46mondego>    screenBrightnessSeekBar.setMax(255);<newline46mondego>    screenBrightnessSeekBar.setProgress((int) (android.provider.Settings.System.getInt(<newline46mondego>            getContentResolver(), android.provider.Settings.System.SCREEN_BRIGHTNESS, 255)));<newline46mondego><newline46mondego>    screenBrightnessSeekBar.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {  <newline46mondego>        public void onStopTrackingTouch(SeekBar seekBar) {}<newline46mondego>        public void onStartTrackingTouch(SeekBar seekBar) {}  <newline46mondego><newline46mondego>        public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {<newline46mondego>            if (fromUser) {<newline46mondego>                android.provider.Settings.System.putInt(getContentResolver(),<newline46mondego>                        android.provider.Settings.System.SCREEN_BRIGHTNESS, progress);<newline46mondego><newline46mondego>                WindowManager.LayoutParams layoutParams = getWindow().getAttributes();  <newline46mondego>                layoutParams.screenBrightness = (float)progress / 255;<newline46mondego><newline46mondego>                getWindow().setAttributes(layoutParams);<newline46mondego>            }<newline46mondego>        }<newline46mondego>    });<newline46mondego>}<newline46mondego>"
"11000splitHere46","12945961splitHere46","<uses-permission android:name=<doubleQuotes46>android.permission.WRITE_SETTINGS<doubleQuotes46>></uses-permission><newline46mondego>"
"11001splitHere46","12946102splitHere46","List"
"11002splitHere46","12946102splitHere46","JPanel"
"11003splitHere46","12946102splitHere46","JButton"
"11004splitHere46","12946102splitHere46","for (Component child : getComponents){<newline46mondego>    if (child instanceof JButton) {<newline46mondego>        ((JButton)child).setVisible(false);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"11005splitHere46","12946185splitHere46","run"
"11006splitHere46","12946185splitHere46","public void run()<newline46mondego>{<newline46mondego>    while (running)<newline46mondego>    {<newline46mondego>        if (!showtails)<newline46mondego>        {<newline46mondego>            obj.setColor(Color.white);<newline46mondego>            obj.clearRect(currentlocation.x,currentlocation.y,size+5,size+5);<newline46mondego>        }<newline46mondego>        update();<newline46mondego>        draw(obj);<newline46mondego>        pause();<newline46mondego>        move();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"11007splitHere46","12946185splitHere46","SwingWorker"
"11008splitHere46","12946185splitHere46","Thread"
"11009splitHere46","12946185splitHere46","Runnable"
"11010splitHere46","12946185splitHere46","SwingUtilities#invokeLater"
"11011splitHere46","12946185splitHere46","SwingUtilities#invokeAndWait"
"11012splitHere46","12946185splitHere46","public class TestApplet02 extends Applet implements KeyListener, Runnable {<newline46mondego><newline46mondego>    Button options = new Button(<doubleQuotes46>Options<doubleQuotes46>);<newline46mondego>    Thread thread = new Thread(this);<newline46mondego>    int y = 0;<newline46mondego><newline46mondego>    public void init() {<newline46mondego>        thread.start();<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void start() {<newline46mondego>        SwingUtilities.invokeLater(new Runnable() {<newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                setLayout(new BorderLayout());<newline46mondego>                addKeyListener(TestApplet02.this);<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>    public void paint(Graphics graphics) {<newline46mondego>        super.paint(graphics);<newline46mondego>        Graphics2D g2d = (Graphics2D) graphics;<newline46mondego>        y++;<newline46mondego>        if (y > getHeight()) {<newline46mondego>            y = 0;<newline46mondego>        }<newline46mondego>        g2d.drawLine(0, y, getWidth(), y);<newline46mondego>    }<newline46mondego><newline46mondego>    public void run() {<newline46mondego>        try {<newline46mondego>            while (true) {<newline46mondego>                thread.sleep(40);<newline46mondego>                SwingUtilities.invokeLater(new Runnable() {<newline46mondego>                    @Override<newline46mondego>                    public void run() {<newline46mondego>                        repaint();<newline46mondego>                    }<newline46mondego>                });<newline46mondego>            }<newline46mondego>        } catch (InterruptedException exception) {<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public void keyPressed(KeyEvent keyEvent) {<newline46mondego>        switch (keyEvent.getKeyCode()) {<newline46mondego>            case KeyEvent.VK_ESCAPE:<newline46mondego>                // pause game<newline46mondego>                add(options);<newline46mondego>                invalidate();<newline46mondego>                revalidate();<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public void keyReleased(KeyEvent keyEvent) {<newline46mondego>    }<newline46mondego><newline46mondego>    public void keyTyped(KeyEvent keyEvent) {<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"11013splitHere46","12946410splitHere46","// static import allows for more concise code (createMock etc.)<newline46mondego>import static org.easymock.EasyMock.*;<newline46mondego><newline46mondego>// other imports omitted<newline46mondego><newline46mondego>public class MyServletMock<newline46mondego>{<newline46mondego>   @Test<newline46mondego>   public void test1()<newline46mondego>   {<newline46mondego>      // Step 1 - create the mock object<newline46mondego>      HttpServletRequest req = createMock(HttpServletRequest.class);<newline46mondego><newline46mondego>      // Step 2 - record the expected behavior<newline46mondego><newline46mondego>      // to test true, expect to be called with <doubleQuotes46>param1<doubleQuotes46> and if so return true<newline46mondego>      // Note that the method under test calls getParameter twice (really<newline46mondego>      // necessary?) so we must relax the restriction and program the mock<newline46mondego>      // to allow this call either once or twice<newline46mondego>      expect(req.getParameter(<doubleQuotes46>param1<doubleQuotes46>)).andReturn(<doubleQuotes46>true<doubleQuotes46>).times(1, 2);<newline46mondego><newline46mondego>      // program the mock to return false for param2<newline46mondego>      expect(req.getParameter(<doubleQuotes46>param2<doubleQuotes46>)).andReturn(<doubleQuotes46>false<doubleQuotes46>).times(1, 2);<newline46mondego><newline46mondego>      // switch the mock to replay state<newline46mondego>      replay(req);<newline46mondego><newline46mondego>      // now run the test.  The method will call getParameter twice<newline46mondego>      Boolean bool1 = getBooleanFromRequest(req, <doubleQuotes46>param1<doubleQuotes46>);<newline46mondego>      assertTrue(bool1);<newline46mondego>      Boolean bool2 = getBooleanFromRequest(req, <doubleQuotes46>param2<doubleQuotes46>);<newline46mondego>      assertFalse(bool2);<newline46mondego><newline46mondego>      // call one more time to watch test fail, just to liven things up<newline46mondego>      // call was not programmed in the record phase so test blows up<newline46mondego>      getBooleanFromRequest(req, <doubleQuotes46>bogus<doubleQuotes46>);<newline46mondego><newline46mondego>   }<newline46mondego>}<newline46mondego>"
"11014splitHere46","12946415splitHere46","String.getBytes()"
"11015splitHere46","12946415splitHere46","utf16 = -30<newline46mondego>utf16 = -126<newline46mondego>utf16 = -84<newline46mondego>utf8 = -30<newline46mondego>utf8 = -126<newline46mondego>utf8 = -84<newline46mondego>"
"11016splitHere46","12946415splitHere46","The behavior of this method when this string cannot be encoded in the default charset is unspecified."
"11017splitHere46","12946415splitHere46","a.getBytes(<doubleQuotes46>UTF-8<doubleQuotes46>)"
"11018splitHere46","12946415splitHere46","String a = <doubleQuotes46>€<doubleQuotes46>;"
"11019splitHere46","12946433splitHere46","TestSuite"
"11020splitHere46","12946433splitHere46","desiredTestCaseName"
"11021splitHere46","12946433splitHere46","public class AllTestSuite extends TestSuite{<newline46mondego><newline46mondego>  public static Test suite() {<newline46mondego>      TestSuite suite= new TestSuite();<newline46mondego>      Test testCase1 = new MyTest(<doubleQuotes46>TestCaseOne<doubleQuotes46>);<newline46mondego>      Test testCase2 = new MyTest(<doubleQuotes46>TestCaseTwo<doubleQuotes46>);<newline46mondego>      suite.addTest(testCase1);<newline46mondego>      suite.addTest(testCase2);<newline46mondego>      return suite;<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"11022splitHere46","12946433splitHere46","TestCaseOne"
"11023splitHere46","12946433splitHere46","TestCaseTwo"
"11024splitHere46","12946433splitHere46","MyTest"
"11025splitHere46","12946433splitHere46","MyTest"
"11026splitHere46","12946433splitHere46","public MyTest(String name) {<newline46mondego>    super(name);<newline46mondego>}<newline46mondego>"
"11027splitHere46","12946433splitHere46","public MyTest(String name, String param1, Integer param2...) {<newline46mondego>    super(name);<newline46mondego>    this.param1 = param1;<newline46mondego>    this.param2 = param2;<newline46mondego>}<newline46mondego>"
"11028splitHere46","12946491splitHere46","public class Chapter3<newline46mondego>{<newline46mondego>public static void main(String[] args) {<newline46mondego>    excercise1();<newline46mondego>    excercise2();<newline46mondego>    ..........<newline46mondego>}<newline46mondego>public void excercise1()<newline46mondego>{<newline46mondego>    printNumbers(15);<newline46mondego>    System.out.println();<newline46mondego>    printNumbers(5);<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>public static void printNumbers(int x)<newline46mondego>{<newline46mondego><newline46mondego>    for (int i = 1; i <= x; i++)<newline46mondego>    {<newline46mondego>        System.out.print((<doubleQuotes46>[<doubleQuotes46>) + (i) + (<doubleQuotes46>]<doubleQuotes46>) + (<doubleQuotes46> <doubleQuotes46>));<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>public void excercise2()<newline46mondego>{<newline46mondego>    System.out.print(largerAbsVal(11, 2));<newline46mondego>    System.out.println();<newline46mondego>    System.out.print(largerAbsVal(4, -5));<newline46mondego>}<newline46mondego><newline46mondego>public static int largerAbsVal(int x, int y)<newline46mondego>{<newline46mondego>    return Math.max(Math.abs(x), Math.abs(y));<newline46mondego><newline46mondego>}<newline46mondego> .................<newline46mondego>}<newline46mondego>"
"11029splitHere46","12946771splitHere46","StringBuilder"
"11030splitHere46","12946771splitHere46","arraycopy(Object, int, Object, int, int)"
"11031splitHere46","12946771splitHere46","2 for"
"11032splitHere46","12946851splitHere46","public void printStars(int level) {<newline46mondego><newline46mondego>    for (int one = level; one >= 1; one--) {<newline46mondego>        for(int k=1, k<one;k++){  // print appropriate number of spaces before<newline46mondego>            System.out.print(<doubleQuotes46> <doubleQuotes46>); <newline46mondego>        }    <newline46mondego>        for (int two = 1; two <=2*(level-one)+1; two++) {<newline46mondego>            System.out.print(<doubleQuotes46>*<doubleQuotes46>);<newline46mondego>        }<newline46mondego>        System.out.println();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"11033splitHere46","12946889splitHere46","doc.select(<doubleQuotes46>div.results-column a.no-tracks.url<doubleQuotes46>);<newline46mondego>"
"11034splitHere46","12946889splitHere46","doc.select(<doubleQuotes46>.div.results-column a.no-tracks.url<doubleQuotes46>);<newline46mondego>"
"11035splitHere46","12946942splitHere46","//get local host<newline46mondego>InetAddress localHost = InetAddress.getLocalHost();<newline46mondego><newline46mondego>//make a List to hold the sockets<newline46mondego>//we know how many there will be so use that capacity<newline46mondego>List<DatagramSocket> datagramSockets =<newline46mondego>        new ArrayList<DatagramSocket>(portList.size());<newline46mondego><newline46mondego>//for each port,<newline46mondego>for (Integer port : portList) {<newline46mondego>    //instantiate a new socket<newline46mondego>    DatagramSocket datagramSocket = new DatagramSocket();<newline46mondego>    //add it to the list<newline46mondego>    datagramSockets.add(datagramSocket);<newline46mondego>    //connect it using the port<newline46mondego>    datagramSocket.connect(localHost, port);<newline46mondego>}<newline46mondego>"
"11036splitHere46","12947026splitHere46","private static int getFactorial(int userInput){<newline46mondego>    int ans = userInput;<newline46mondego>    if(userInput >1 ){<newline46mondego><newline46mondego>    ans*= (getFactorial(userInput-1));<newline46mondego>    }<newline46mondego>    return ans;<newline46mondego><newline46mondego>}<newline46mondego>// New method;<newline46mondego>private static void printFactorial(int userInput){<newline46mondego>    System.out.println(<doubleQuotes46>The value of <doubleQuotes46> + userInput + <doubleQuotes46>! is <doubleQuotes46> + getFactorial(userInput));<newline46mondego>}<newline46mondego>"
"11037splitHere46","12947040splitHere46","public static class OrderedLinkedList extends LinkedList<Integer> {<newline46mondego>"
"11038splitHere46","12947104splitHere46","if(menuListMap.containsKey(menu_group_name)){<newline46mondego>                       menuNamesList =(List) menuListMap.get(menu_group_name);<newline46mondego>                       menuViewModel = new MenuListViewModel();<newline46mondego>                       menuViewModel.setResource_name(resource_name);<newline46mondego>                       menuViewModel.setMenu_name(menu_name);<newline46mondego>                       menuNamesList.add(menuViewModel);<newline46mondego>                       menuListMap.put(menu_group_name, menuNamesList);<newline46mondego>                   }else{<newline46mondego>                       menuNamesList = new ArrayList<MenuListViewModel>();<newline46mondego>                       menuViewModel = new MenuListViewModel();<newline46mondego>                       menuViewModel.setResource_name(resource_name);<newline46mondego>                       menuViewModel.setMenu_name(menu_name);<newline46mondego>                       menuNamesList.add(menuViewModel);<newline46mondego>                       menuListMap.put(menu_group_name, menuNamesList);<newline46mondego>                   }<newline46mondego>"
"11039splitHere46","12947152splitHere46","comparator"
"11040splitHere46","12947152splitHere46","Comparator<? super K>"
"11041splitHere46","12947152splitHere46","SortedSet<Map.Entry<String, Double>> sortedset = new TreeSet<Map.Entry<String, Double>>(<newline46mondego>            new Comparator<Map.Entry<String, Double>>() {<newline46mondego>                @Override<newline46mondego>                public int compare(Map.Entry<String, Double> e1,<newline46mondego>                        Map.Entry<String, Double> e2) {<newline46mondego>                    return e1.getValue().compareTo(e2.getValue());<newline46mondego>                }<newline46mondego>            });<newline46mondego><newline46mondego>  sortedset.addAll(myMap.entrySet());<newline46mondego>"
"11042splitHere46","12947152splitHere46","SortedMap<String, Double> myMap = new TreeMap<String, Double>();<newline46mondego>    myMap.put(<doubleQuotes46>a<doubleQuotes46>, 10.0);<newline46mondego>    myMap.put(<doubleQuotes46>b<doubleQuotes46>, 9.0);<newline46mondego>    myMap.put(<doubleQuotes46>c<doubleQuotes46>, 11.0);<newline46mondego>    myMap.put(<doubleQuotes46>d<doubleQuotes46>, 2.0);<newline46mondego>    sortedset.addAll(myMap.entrySet());<newline46mondego>    System.out.println(sortedset);<newline46mondego>"
"11043splitHere46","12947152splitHere46","[d=2.0, b=9.0, a=10.0, c=11.0]<newline46mondego>"
"11044splitHere46","12947174splitHere46","enums"
"11045splitHere46","12947174splitHere46","Celsius = SimpleMath.convertTemperature(<newline46mondego>                                  SimpleMath.eScale.FAHRENHEITCELSIUS, Fahrenheit);<newline46mondego>Area = SimpleMath.geometryCircle(SimpleMath.eOperation.AREA, Radius);<newline46mondego>"
"11046splitHere46","12947193splitHere46","public class AMenuStartItem extends Thread implements ActionListener<newline46mondego>{<newline46mondego>    private VTreePanel m_vtreePanel;<newline46mondego><newline46mondego>    public AMenuStartItem (int ID, boolean isMenu, String name, AMenu menu, VTreePanel vtreepanel)<newline46mondego>    {<newline46mondego>        ...<newline46mondego><newline46mondego>        m_vtreePanel = vtreepanel;  // save the VTreePanel object<newline46mondego>    }<newline46mondego><newline46mondego>    // The thread method that executed when thread is started<newline46mondego>    public void run()<newline46mondego>    {<newline46mondego>        ...<newline46mondego><newline46mondego>        startWindow(0, cmd);<newline46mondego><newline46mondego>        ...<newline46mondego>    }<newline46mondego><newline46mondego>    private void startWindow(final int AD_Workbench_ID, final int AD_Window_ID)<newline46mondego>    {<newline46mondego>        ...<newline46mondego><newline46mondego>        if (EventQueue.isDispatchingThread()) {<newline46mondego>            // This is safe, we're in the EDT<newline46mondego>            m_vtreePanel.getTabbedPane().addTab(frame.getTitle(), frame.getAPanel());<newline46mondego>            m_vtreePanel.getTabbedPane().invalidate();<newline46mondego>            m_vtreePanel.getTabbedPane().repaint();<newline46mondego>        } else {<newline46mondego>            // This is unsafe, we need to resync with the EDT<newline46mondego>            SwingUtilities.invokeLater(new Runnable() {<newline46mondego>                public void run() {<newline46mondego>                    // Here I perform adding new tab<newline46mondego>                    m_vtreePanel.getTabbedPane().addTab(frame.getTitle(), frame.getAPanel());<newline46mondego>                    m_vtreePanel.getTabbedPane().invalidate();<newline46mondego>                    m_vtreePanel.getTabbedPane().repaint();<newline46mondego><newline46mondego>                }<newline46mondego>            });<newline46mondego>        }<newline46mondego><newline46mondego>        ...<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"11047splitHere46","12947249splitHere46","foo"
"11048splitHere46","12947249splitHere46","foo(int a)"
"11049splitHere46","12947249splitHere46","foo"
"11050splitHere46","12947249splitHere46","foo()"
"11051splitHere46","12947282splitHere46","net.sf.jasperreports.ant.JRAntCompileTask"
"11052splitHere46","12947282splitHere46","JasperReport rpt = (JasperReport)JRLoader.loadObjectFromFile(location);<newline46mondego>"
